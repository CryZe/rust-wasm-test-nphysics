/*
  vim: set ts=8 sts=2 et sw=2 tw=79:
  Copyright (C) 2013

  This software is provided 'as-is', without any express or implied
  warranty.  In no event will the authors be held liable for any damages
  arising from the use of this software.

  Permission is granted to anyone to use this software for any purpose,
  including commercial applications, and to alter it and redistribute it
  freely, subject to the following restrictions:

  1. The origin of this software must not be misrepresented; you must not
     claim that you wrote the original software. If you use this software
     in a product, an acknowledgment in the product documentation would be
     appreciated but is not required.
  2. Altered source versions must be plainly marked as such, and must not be
     misrepresented as being the original software.
  3. This notice may not be removed or altered from any source distribution.
*/

// A conforming SIMD.js implementation may contain the following deviations to
// normal JS numeric behavior:
//  - Subnormal numbers may or may not be flushed to zero on input or output of
//    any SIMD operation.

// Many of the operations in SIMD.js have semantics which correspond to scalar
// operations in JS, however there are a few differences:
//  - Vector shifts don't mask the shift count.
//  - Conversions from float to int32 throw on error.
//  - Load and store operations throw when out of bounds.

(function(global) {

if (typeof global.SIMD === "undefined") {
  // SIMD module.
  global.SIMD = {};
}

if (typeof module !== "undefined") {
  // For CommonJS modules
  module.exports = global.SIMD;
}

var SIMD = global.SIMD;

// Buffers for bit casting and coercing lane values to those representable in
// the underlying lane type.
var _f32x4 = new Float32Array(4);
var _f64x2 = new Float64Array(_f32x4.buffer);
var _i32x4 = new Int32Array(_f32x4.buffer);
var _i16x8 = new Int16Array(_f32x4.buffer);
var _i8x16 = new Int8Array(_f32x4.buffer);
var _ui32x4 = new Uint32Array(_f32x4.buffer);
var _ui16x8 = new Uint16Array(_f32x4.buffer);
var _ui8x16 = new Uint8Array(_f32x4.buffer);

function convertValue(buffer, value) {
  buffer[0] = value;
  return buffer[0];
}

function convertArray(buffer, array) {
  for (var i = 0; i < array.length; i++)
    array[i] = convertValue(buffer, array[i]);
  return array;
}

// Utility functions.

function isInt32(o) {
  return (o | 0) === o;
}

function isTypedArray(o) {
  return (o instanceof Int8Array) ||
         (o instanceof Uint8Array) ||
         (o instanceof Uint8ClampedArray) ||
         (o instanceof Int16Array) ||
         (o instanceof Uint16Array) ||
         (o instanceof Int32Array) ||
         (o instanceof Uint32Array) ||
         (o instanceof Float32Array) ||
         (o instanceof Float64Array);
}

function minNum(x, y) {
  return x != x ? y :
         y != y ? x :
         Math.min(x, y);
}

function maxNum(x, y) {
  return x != x ? y :
         y != y ? x :
         Math.max(x, y);
}

function clamp(a, min, max) {
  if (a < min)
    return min;
  if (a > max)
    return max;
  return a;
}

// SIMD implementation functions

function simdCheckLaneIndex(index, lanes) {
  if (!isInt32(index))
    throw new TypeError('Lane index must be an int32');
  if (index < 0 || index >= lanes)
    throw new RangeError('Lane index must be in bounds');
}

// Global lanes array for constructing SIMD values.
var lanes = [];

function simdCreate(type) {
  return type.fn.apply(type.fn, lanes);
}

function simdToString(type, a) {
  a = type.fn.check(a);
  var str = "SIMD." + type.name + "(";
  str += type.fn.extractLane(a, 0);
  for (var i = 1; i < type.lanes; i++) {
    str += ", " + type.fn.extractLane(a, i);
  }
  return str + ")";
}

function simdToLocaleString(type, a) {
  a = type.fn.check(a);
  var str = "SIMD." + type.name + "(";
  str += type.fn.extractLane(a, 0).toLocaleString();
  for (var i = 1; i < type.lanes; i++) {
    str += ", " + type.fn.extractLane(a, i).toLocaleString();
  }
  return str + ")";
}

function simdSplat(type, s) {
  for (var i = 0; i < type.lanes; i++)
    lanes[i] = s;
  return simdCreate(type);
}

function simdReplaceLane(type, a, i, s) {
  a = type.fn.check(a);
  simdCheckLaneIndex(i, type.lanes);
  for (var j = 0; j < type.lanes; j++)
    lanes[j] = type.fn.extractLane(a, j);
  lanes[i] = s;
  return simdCreate(type);
}

function simdFrom(toType, fromType, a) {
  a = fromType.fn.check(a);
  for (var i = 0; i < fromType.lanes; i++) {
    var v = Math.trunc(fromType.fn.extractLane(a, i));
    if (toType.minVal !== undefined &&
        !(toType.minVal <= v && v <= toType.maxVal)) {
      throw new RangeError("Can't convert value");
    }
    lanes[i] = v;
  }
  return simdCreate(toType);
}

function simdFromBits(toType, fromType, a) {
  a = fromType.fn.check(a);
  var newValue = new toType.fn();
  newValue.s_ = new toType.view(a.s_.buffer);
  return newValue;
}

function simdSelect(type, selector, a, b) {
  selector = type.boolType.fn.check(selector);
  a = type.fn.check(a);
  b = type.fn.check(b);
  for (var i = 0; i < type.lanes; i++) {
    lanes[i] = type.boolType.fn.extractLane(selector, i) ?
               type.fn.extractLane(a, i) : type.fn.extractLane(b, i);
  }
  return simdCreate(type);
}

function simdSwizzle(type, a, indices) {
  a = type.fn.check(a);
  for (var i = 0; i < indices.length; i++) {
    simdCheckLaneIndex(indices[i], type.lanes);
    lanes[i] = type.fn.extractLane(a, indices[i]);
  }
  return simdCreate(type);
}

function simdShuffle(type, a, b, indices) {
  a = type.fn.check(a);
  b = type.fn.check(b);
  for (var i = 0; i < indices.length; i++) {
    simdCheckLaneIndex(indices[i], 2 * type.lanes);
    lanes[i] = indices[i] < type.lanes ?
               type.fn.extractLane(a, indices[i]) :
               type.fn.extractLane(b, indices[i] - type.lanes);
  }
  return simdCreate(type);
}

function unaryNeg(a) { return -a; }
function unaryBitwiseNot(a) { return ~a; }
function unaryLogicalNot(a) { return !a; }

function simdUnaryOp(type, op, a) {
  a = type.fn.check(a);
  for (var i = 0; i < type.lanes; i++)
    lanes[i] = op(type.fn.extractLane(a, i));
  return simdCreate(type);
}

function binaryAnd(a, b) { return a & b; }
function binaryOr(a, b) { return a | b; }
function binaryXor(a, b) { return a ^ b; }
function binaryAdd(a, b) { return a + b; }
function binarySub(a, b) { return a - b; }
function binaryMul(a, b) { return a * b; }
function binaryDiv(a, b) { return a / b; }

var binaryImul;
if (typeof Math.imul !== 'undefined') {
  binaryImul = Math.imul;
} else {
  binaryImul = function(a, b) {
    var ah = (a >>> 16) & 0xffff;
    var al = a & 0xffff;
    var bh = (b >>> 16) & 0xffff;
    var bl = b & 0xffff;
    // the shift by 0 fixes the sign on the high part
    // the final |0 converts the unsigned value into a signed value
    return ((al * bl) + (((ah * bl + al * bh) << 16) >>> 0)|0);
  };
}

function simdBinaryOp(type, op, a, b) {
  a = type.fn.check(a);
  b = type.fn.check(b);
  for (var i = 0; i < type.lanes; i++)
    lanes[i] = op(type.fn.extractLane(a, i), type.fn.extractLane(b, i));
  return simdCreate(type);
}

function binaryEqual(a, b) { return a == b; }
function binaryNotEqual(a, b) { return a != b; }
function binaryLess(a, b) { return a < b; }
function binaryLessEqual(a, b) { return a <= b; }
function binaryGreater(a, b) { return a > b; }
function binaryGreaterEqual(a, b) { return a >= b; }

function simdRelationalOp(type, op, a, b) {
  a = type.fn.check(a);
  b = type.fn.check(b);
  for (var i = 0; i < type.lanes; i++)
    lanes[i] = op(type.fn.extractLane(a, i), type.fn.extractLane(b, i));
  return simdCreate(type.boolType);
}

function simdAnyTrue(type, a) {
  a = type.fn.check(a);
  for (var i = 0; i < type.lanes; i++)
    if (type.fn.extractLane(a, i)) return true;
  return false;
}

function simdAllTrue(type, a) {
  a = type.fn.check(a);
  for (var i = 0; i < type.lanes; i++)
    if (!type.fn.extractLane(a, i)) return false;
  return true;
}

function binaryShiftLeft(a, bits) { return a << bits; }
function binaryShiftRightArithmetic(a, bits) { return a >> bits; }
function binaryShiftRightLogical(a, bits) { return a >>> bits; }

function simdShiftOp(type, op, a, bits) {
  a = type.fn.check(a);
  for (var i = 0; i < type.lanes; i++)
    lanes[i] = op(type.fn.extractLane(a, i), bits);
  return simdCreate(type);
}

function simdLoad(type, tarray, index, count) {
  if (!isTypedArray(tarray))
    throw new TypeError("The 1st argument must be a typed array.");
  if (!isInt32(index))
    throw new TypeError("The 2nd argument must be an Int32.");
  var bpe = tarray.BYTES_PER_ELEMENT;
  var bytes = count * type.laneSize;
  if (index < 0 || (index * bpe + bytes) > tarray.byteLength)
    throw new RangeError("The value of index is invalid.");

  var newValue = type.fn();
  var dst = new Uint8Array(newValue.s_.buffer);
  var src = new Uint8Array(tarray.buffer, tarray.byteOffset + index * bpe, bytes);

  for (var i = 0; i < bytes; i++) {
    dst[i] = src[i];
  }
  var typeBytes = type.lanes * type.laneSize;
  for (var i = bytes; i < typeBytes; i++) {
    dst[i] = 0;
  }
  return newValue;
}

function simdStore(type, tarray, index, a, count) {
  if (!isTypedArray(tarray))
    throw new TypeError("The 1st argument must be a typed array.");
  if (!isInt32(index))
    throw new TypeError("The 2nd argument must be an Int32.");
  var bpe = tarray.BYTES_PER_ELEMENT;
  var bytes = count * type.laneSize;
  if (index < 0 || (index * bpe + bytes) > tarray.byteLength)
    throw new RangeError("The value of index is invalid.");

  a = type.fn.check(a);

  // The underlying buffers are copied byte by byte, to avoid float
  // canonicalization.
  var src = new Uint8Array(a.s_.buffer);
  var dst = new Uint8Array(tarray.buffer, tarray.byteOffset + index * bpe, bytes);
  for (var i = 0; i < bytes; i++) {
    dst[i] = src[i];
  }
  return a;
}

// Constructors and extractLane functions are closely related and must be
// polyfilled together.

// Float32x4
if (typeof SIMD.Float32x4 === "undefined" ||
    typeof SIMD.Float32x4.extractLane === "undefined") {
  SIMD.Float32x4 = function(s0, s1, s2, s3) {
    if (!(this instanceof SIMD.Float32x4)) {
      return new SIMD.Float32x4(s0, s1, s2, s3);
    }
    this.s_ = convertArray(_f32x4, new Float32Array([s0, s1, s2, s3]));
  }

  SIMD.Float32x4.extractLane = function(v, i) {
    v = SIMD.Float32x4.check(v);
    simdCheckLaneIndex(i, 4);
    return v.s_[i];
  }
}

// Miscellaneous functions that aren't easily parameterized on type.

if (typeof SIMD.Float32x4.swizzle === "undefined") {
  SIMD.Float32x4.swizzle = function(a, s0, s1, s2, s3) {
    return simdSwizzle(float32x4, a, [s0, s1, s2, s3]);
  }
}

if (typeof SIMD.Float32x4.shuffle === "undefined") {
  SIMD.Float32x4.shuffle = function(a, b, s0, s1, s2, s3) {
    return simdShuffle(float32x4, a, b, [s0, s1, s2, s3]);
  }
}

// Int32x4
if (typeof SIMD.Int32x4 === "undefined" ||
    typeof SIMD.Int32x4.extractLane === "undefined") {
  SIMD.Int32x4 = function(s0, s1, s2, s3) {
    if (!(this instanceof SIMD.Int32x4)) {
      return new SIMD.Int32x4(s0, s1, s2, s3);
    }
    this.s_ = convertArray(_i32x4, new Int32Array([s0, s1, s2, s3]));
  }

  SIMD.Int32x4.extractLane = function(v, i) {
    v = SIMD.Int32x4.check(v);
    simdCheckLaneIndex(i, 4);
    return v.s_[i];
  }
}

if (typeof SIMD.Int32x4.swizzle === "undefined") {
  SIMD.Int32x4.swizzle = function(a, s0, s1, s2, s3) {
    return simdSwizzle(int32x4, a, [s0, s1, s2, s3]);
  }
}

if (typeof SIMD.Int32x4.shuffle === "undefined") {
  SIMD.Int32x4.shuffle = function(a, b, s0, s1, s2, s3) {
    return simdShuffle(int32x4, a, b, [s0, s1, s2, s3]);
  }
}

// Int16x8
if (typeof SIMD.Int16x8 === "undefined" ||
    typeof SIMD.Int16x8.extractLane === "undefined") {
  SIMD.Int16x8 = function(s0, s1, s2, s3, s4, s5, s6, s7) {
    if (!(this instanceof SIMD.Int16x8)) {
      return new SIMD.Int16x8(s0, s1, s2, s3, s4, s5, s6, s7);
    }
    this.s_ = convertArray(_i16x8, new Int16Array([s0, s1, s2, s3, s4, s5, s6, s7]));
  }

  SIMD.Int16x8.extractLane = function(v, i) {
    v = SIMD.Int16x8.check(v);
    simdCheckLaneIndex(i, 8);
    return v.s_[i];
  }
}

if (typeof SIMD.Int16x8.swizzle === "undefined") {
  SIMD.Int16x8.swizzle = function(a, s0, s1, s2, s3, s4, s5, s6, s7) {
    return simdSwizzle(int16x8, a, [s0, s1, s2, s3, s4, s5, s6, s7]);
  }
}

if (typeof SIMD.Int16x8.shuffle === "undefined") {
  SIMD.Int16x8.shuffle = function(a, b, s0, s1, s2, s3, s4, s5, s6, s7) {
    return simdShuffle(int16x8, a, b, [s0, s1, s2, s3, s4, s5, s6, s7]);
  }
}

// Int8x16
if (typeof SIMD.Int8x16 === "undefined" ||
    typeof SIMD.Int8x16.extractLane === "undefined") {
  SIMD.Int8x16 = function(s0, s1, s2, s3, s4, s5, s6, s7,
                          s8, s9, s10, s11, s12, s13, s14, s15) {
    if (!(this instanceof SIMD.Int8x16)) {
      return new SIMD.Int8x16(s0, s1, s2, s3, s4, s5, s6, s7,
                              s8, s9, s10, s11, s12, s13, s14, s15);
    }
    this.s_ = convertArray(_i8x16, new Int8Array([s0, s1, s2, s3, s4, s5, s6, s7,
                                    s8, s9, s10, s11, s12, s13, s14, s15]));
  }

  SIMD.Int8x16.extractLane = function(v, i) {
    v = SIMD.Int8x16.check(v);
    simdCheckLaneIndex(i, 16);
    return v.s_[i];
  }
}

if (typeof SIMD.Int8x16.swizzle === "undefined") {
  SIMD.Int8x16.swizzle = function(a, s0, s1, s2, s3, s4, s5, s6, s7,
                                     s8, s9, s10, s11, s12, s13, s14, s15) {
    return simdSwizzle(int8x16, a, [s0, s1, s2, s3, s4, s5, s6, s7,
                                    s8, s9, s10, s11, s12, s13, s14, s15]);
  }
}

if (typeof SIMD.Int8x16.shuffle === "undefined") {
  SIMD.Int8x16.shuffle = function(a, b, s0, s1, s2, s3, s4, s5, s6, s7,
                                        s8, s9, s10, s11, s12, s13, s14, s15) {
    return simdShuffle(int8x16, a, b, [s0, s1, s2, s3, s4, s5, s6, s7,
                                       s8, s9, s10, s11, s12, s13, s14, s15]);
  }
}

// Uint32x4
if (typeof SIMD.Uint32x4 === "undefined" ||
    typeof SIMD.Uint32x4.extractLane === "undefined") {
  SIMD.Uint32x4 = function(s0, s1, s2, s3) {
    if (!(this instanceof SIMD.Uint32x4)) {
      return new SIMD.Uint32x4(s0, s1, s2, s3);
    }
    this.s_ = convertArray(_ui32x4, new Uint32Array([s0, s1, s2, s3]));
  }

  SIMD.Uint32x4.extractLane = function(v, i) {
    v = SIMD.Uint32x4.check(v);
    simdCheckLaneIndex(i, 4);
    return v.s_[i];
  }
}

if (typeof SIMD.Uint32x4.swizzle === "undefined") {
  SIMD.Uint32x4.swizzle = function(a, s0, s1, s2, s3) {
    return simdSwizzle(uint32x4, a, [s0, s1, s2, s3]);
  }
}

if (typeof SIMD.Uint32x4.shuffle === "undefined") {
  SIMD.Uint32x4.shuffle = function(a, b, s0, s1, s2, s3) {
    return simdShuffle(uint32x4, a, b, [s0, s1, s2, s3]);
  }
}

// Uint16x8
if (typeof SIMD.Uint16x8 === "undefined" ||
    typeof SIMD.Uint16x8.extractLane === "undefined") {
  SIMD.Uint16x8 = function(s0, s1, s2, s3, s4, s5, s6, s7) {
    if (!(this instanceof SIMD.Uint16x8)) {
      return new SIMD.Uint16x8(s0, s1, s2, s3, s4, s5, s6, s7);
    }
    this.s_ = convertArray(_ui16x8, new Uint16Array([s0, s1, s2, s3, s4, s5, s6, s7]));
  }

  SIMD.Uint16x8.extractLane = function(v, i) {
    v = SIMD.Uint16x8.check(v);
    simdCheckLaneIndex(i, 8);
    return v.s_[i];
  }
}

if (typeof SIMD.Uint16x8.swizzle === "undefined") {
  SIMD.Uint16x8.swizzle = function(a, s0, s1, s2, s3, s4, s5, s6, s7) {
    return simdSwizzle(uint16x8, a, [s0, s1, s2, s3, s4, s5, s6, s7]);
  }
}

if (typeof SIMD.Uint16x8.shuffle === "undefined") {
  SIMD.Uint16x8.shuffle = function(a, b, s0, s1, s2, s3, s4, s5, s6, s7) {
    return simdShuffle(uint16x8, a, b, [s0, s1, s2, s3, s4, s5, s6, s7]);
  }
}

// Uint8x16
if (typeof SIMD.Uint8x16 === "undefined" ||
    typeof SIMD.Uint8x16.extractLane === "undefined") {
  SIMD.Uint8x16 = function(s0, s1, s2, s3, s4, s5, s6, s7,
                           s8, s9, s10, s11, s12, s13, s14, s15) {
    if (!(this instanceof SIMD.Uint8x16)) {
      return new SIMD.Uint8x16(s0, s1, s2, s3, s4, s5, s6, s7,
                               s8, s9, s10, s11, s12, s13, s14, s15);
    }
    this.s_ = convertArray(_ui8x16, new Uint8Array([s0, s1, s2, s3, s4, s5, s6, s7,
                                     s8, s9, s10, s11, s12, s13, s14, s15]));
  }

  SIMD.Uint8x16.extractLane = function(v, i) {
    v = SIMD.Uint8x16.check(v);
    simdCheckLaneIndex(i, 16);
    return v.s_[i];
  }
}

if (typeof SIMD.Uint8x16.swizzle === "undefined") {
  SIMD.Uint8x16.swizzle = function(a, s0, s1, s2, s3, s4, s5, s6, s7,
                                      s8, s9, s10, s11, s12, s13, s14, s15) {
    return simdSwizzle(uint8x16, a, [s0, s1, s2, s3, s4, s5, s6, s7,
                                     s8, s9, s10, s11, s12, s13, s14, s15]);
  }
}

if (typeof SIMD.Uint8x16.shuffle === "undefined") {
  SIMD.Uint8x16.shuffle = function(a, b, s0, s1, s2, s3, s4, s5, s6, s7,
                                         s8, s9, s10, s11, s12, s13, s14, s15) {
    return simdShuffle(uint8x16, a, b, [s0, s1, s2, s3, s4, s5, s6, s7,
                                        s8, s9, s10, s11, s12, s13, s14, s15]);
  }
}

// Bool32x4
if (typeof SIMD.Bool32x4 === "undefined" ||
    typeof SIMD.Bool32x4.extractLane === "undefined") {
  SIMD.Bool32x4 = function(s0, s1, s2, s3) {
    if (!(this instanceof SIMD.Bool32x4)) {
      return new SIMD.Bool32x4(s0, s1, s2, s3);
    }
    this.s_ = [!!s0, !!s1, !!s2, !!s3];
  }

  SIMD.Bool32x4.extractLane = function(v, i) {
    v = SIMD.Bool32x4.check(v);
    simdCheckLaneIndex(i, 4);
    return v.s_[i];
  }
}

// Bool16x8
if (typeof SIMD.Bool16x8 === "undefined" ||
    typeof SIMD.Bool16x8.extractLane === "undefined") {
  SIMD.Bool16x8 = function(s0, s1, s2, s3, s4, s5, s6, s7) {
    if (!(this instanceof SIMD.Bool16x8)) {
      return new SIMD.Bool16x8(s0, s1, s2, s3, s4, s5, s6, s7);
    }
    this.s_ = [!!s0, !!s1, !!s2, !!s3, !!s4, !!s5, !!s6, !!s7];
  }

  SIMD.Bool16x8.extractLane = function(v, i) {
    v = SIMD.Bool16x8.check(v);
    simdCheckLaneIndex(i, 8);
    return v.s_[i];
  }
}

// Bool8x16
if (typeof SIMD.Bool8x16 === "undefined" ||
    typeof SIMD.Bool8x16.extractLane === "undefined") {
  SIMD.Bool8x16 = function(s0, s1, s2, s3, s4, s5, s6, s7,
                           s8, s9, s10, s11, s12, s13, s14, s15) {
    if (!(this instanceof SIMD.Bool8x16)) {
      return new SIMD.Bool8x16(s0, s1, s2, s3, s4, s5, s6, s7,
                               s8, s9, s10, s11, s12, s13, s14, s15);
    }
    this.s_ = [!!s0, !!s1, !!s2, !!s3, !!s4, !!s5, !!s6, !!s7,
               !!s8, !!s9, !!s10, !!s11, !!s12, !!s13, !!s14, !!s15];
  }

  SIMD.Bool8x16.extractLane = function(v, i) {
    v = SIMD.Bool8x16.check(v);
    simdCheckLaneIndex(i, 16);
    return v.s_[i];
  }
}

// Type data to generate the remaining functions.

var float32x4 = {
  name: "Float32x4",
  fn: SIMD.Float32x4,
  lanes: 4,
  laneSize: 4,
  buffer: _f32x4,
  view: Float32Array,
  mulFn: binaryMul,
  fns: ["check", "splat", "replaceLane", "select",
        "equal", "notEqual", "lessThan", "lessThanOrEqual", "greaterThan", "greaterThanOrEqual",
        "add", "sub", "mul", "div", "neg", "abs", "min", "max", "minNum", "maxNum",
        "reciprocalApproximation", "reciprocalSqrtApproximation", "sqrt",
        "load", "load1", "load2", "load3", "store", "store1", "store2", "store3"],
}

var int32x4 = {
  name: "Int32x4",
  fn: SIMD.Int32x4,
  lanes: 4,
  laneSize: 4,
  minVal: -0x80000000,
  maxVal: 0x7FFFFFFF,
  buffer: _i32x4,
  notFn: unaryBitwiseNot,
  view: Int32Array,
  mulFn: binaryImul,
  fns: ["check", "splat", "replaceLane", "select",
        "equal", "notEqual", "lessThan", "lessThanOrEqual", "greaterThan", "greaterThanOrEqual",
        "and", "or", "xor", "not",
        "add", "sub", "mul", "neg",
        "shiftLeftByScalar", "shiftRightByScalar",
        "load", "load1", "load2", "load3", "store", "store1", "store2", "store3"],
}

var int16x8 = {
  name: "Int16x8",
  fn: SIMD.Int16x8,
  lanes: 8,
  laneSize: 2,
  minVal: -0x8000,
  maxVal: 0x7FFF,
  buffer: _i16x8,
  notFn: unaryBitwiseNot,
  view: Int16Array,
  mulFn: binaryMul,
  fns: ["check", "splat", "replaceLane", "select",
        "equal", "notEqual", "lessThan", "lessThanOrEqual", "greaterThan", "greaterThanOrEqual",
        "and", "or", "xor", "not",
        "add", "sub", "mul", "neg",
        "shiftLeftByScalar", "shiftRightByScalar",
        "addSaturate", "subSaturate",
        "load", "store"],
}

var int8x16 = {
  name: "Int8x16",
  fn: SIMD.Int8x16,
  lanes: 16,
  laneSize: 1,
  minVal: -0x80,
  maxVal: 0x7F,
  buffer: _i8x16,
  notFn: unaryBitwiseNot,
  view: Int8Array,
  mulFn: binaryMul,
  fns: ["check", "splat", "replaceLane", "select",
        "equal", "notEqual", "lessThan", "lessThanOrEqual", "greaterThan", "greaterThanOrEqual",
        "and", "or", "xor", "not",
        "add", "sub", "mul", "neg",
        "shiftLeftByScalar", "shiftRightByScalar",
        "addSaturate", "subSaturate",
        "load", "store"],
}

var uint32x4 = {
  name: "Uint32x4",
  fn: SIMD.Uint32x4,
  lanes: 4,
  laneSize: 4,
  minVal: 0,
  maxVal: 0xFFFFFFFF,
  unsigned: true,
  buffer: _ui32x4,
  notFn: unaryBitwiseNot,
  view: Uint32Array,
  mulFn: binaryImul,
  fns: ["check", "splat", "replaceLane", "select",
        "equal", "notEqual", "lessThan", "lessThanOrEqual", "greaterThan", "greaterThanOrEqual",
        "and", "or", "xor", "not",
        "add", "sub", "mul",
        "shiftLeftByScalar", "shiftRightByScalar",
        "load", "load1", "load2", "load3", "store", "store1", "store2", "store3"],
}

var uint16x8 = {
  name: "Uint16x8",
  fn: SIMD.Uint16x8,
  lanes: 8,
  laneSize: 2,
  unsigned: true,
  minVal: 0,
  maxVal: 0xFFFF,
  buffer: _ui16x8,
  notFn: unaryBitwiseNot,
  view: Uint16Array,
  mulFn: binaryMul,
  fns: ["check", "splat", "replaceLane", "select",
        "equal", "notEqual", "lessThan", "lessThanOrEqual", "greaterThan", "greaterThanOrEqual",
        "and", "or", "xor", "not",
        "add", "sub", "mul",
        "shiftLeftByScalar", "shiftRightByScalar",
        "addSaturate", "subSaturate",
        "load", "store"],
}

var uint8x16 = {
  name: "Uint8x16",
  fn: SIMD.Uint8x16,
  lanes: 16,
  laneSize: 1,
  unsigned: true,
  minVal: 0,
  maxVal: 0xFF,
  buffer: _ui8x16,
  notFn: unaryBitwiseNot,
  view: Uint8Array,
  mulFn: binaryMul,
  fns: ["check", "splat", "replaceLane", "select",
        "equal", "notEqual", "lessThan", "lessThanOrEqual", "greaterThan", "greaterThanOrEqual",
        "and", "or", "xor", "not",
        "add", "sub", "mul",
        "shiftLeftByScalar", "shiftRightByScalar",
        "addSaturate", "subSaturate",
        "load", "store"],
}

var bool32x4 = {
  name: "Bool32x4",
  fn: SIMD.Bool32x4,
  lanes: 4,
  laneSize: 4,
  notFn: unaryLogicalNot,
  fns: ["check", "splat", "replaceLane",
        "allTrue", "anyTrue", "and", "or", "xor", "not"],
}

var bool16x8 = {
  name: "Bool16x8",
  fn: SIMD.Bool16x8,
  lanes: 8,
  laneSize: 2,
  notFn: unaryLogicalNot,
  fns: ["check", "splat", "replaceLane",
        "allTrue", "anyTrue", "and", "or", "xor", "not"],
}

var bool8x16 = {
  name: "Bool8x16",
  fn: SIMD.Bool8x16,
  lanes: 16,
  laneSize: 1,
  notFn: unaryLogicalNot,
  fns: ["check", "splat", "replaceLane",
        "allTrue", "anyTrue", "and", "or", "xor", "not"],
}

// Each SIMD type has a corresponding Boolean SIMD type, which is returned by
// relational ops.
float32x4.boolType = int32x4.boolType = uint32x4.boolType = bool32x4;
int16x8.boolType = uint16x8.boolType = bool16x8;
int8x16.boolType = uint8x16.boolType = bool8x16;

// SIMD from<type> types.
float32x4.from = [int32x4, uint32x4];
int32x4.from = [float32x4, uint32x4];
int16x8.from = [uint16x8];
int8x16.from = [uint8x16];
uint32x4.from = [float32x4, int32x4];
uint16x8.from = [int16x8];
uint8x16.from = [int8x16];

// SIMD from<type>Bits types.
float32x4.fromBits = [int32x4, int16x8, int8x16, uint32x4, uint16x8, uint8x16];
int32x4.fromBits = [float32x4, int16x8, int8x16, uint32x4, uint16x8, uint8x16];
int16x8.fromBits = [float32x4, int32x4, int8x16, uint32x4, uint16x8, uint8x16];
int8x16.fromBits = [float32x4, int32x4, int16x8, uint32x4, uint16x8, uint8x16];
uint32x4.fromBits = [float32x4, int32x4, int16x8, int8x16, uint16x8, uint8x16];
uint16x8.fromBits = [float32x4, int32x4, int16x8, int8x16, uint32x4, uint8x16];
uint8x16.fromBits = [float32x4, int32x4, int16x8, int8x16, uint32x4, uint16x8];

var simdTypes = [float32x4,
                 int32x4, int16x8, int8x16,
                 uint32x4, uint16x8, uint8x16,
                 bool32x4, bool16x8, bool8x16];

// XXX Emscripten: Enable SIMD phase 2 types for Float64x2 and Bool64x2 to enable targeting SSE2 support.
simdPhase2 = true;

// SIMD Phase2 types.

if (typeof simdPhase2 !== 'undefined') {
  // Float64x2
  if (typeof SIMD.Float64x2 === "undefined" ||
      typeof SIMD.Float64x2.extractLane === "undefined") {
    SIMD.Float64x2 = function(s0, s1) {
      if (!(this instanceof SIMD.Float64x2)) {
        return new SIMD.Float64x2(s0, s1);
      }
      this.s_ = convertArray(_f64x2, new Float64Array([s0, s1]));
    }

    SIMD.Float64x2.extractLane = function(v, i) {
      v = SIMD.Float64x2.check(v);
      simdCheckLaneIndex(i, 2);
      return v.s_[i];
    }
  }

  if (typeof SIMD.Float64x2.swizzle === "undefined") {
    SIMD.Float64x2.swizzle = function(a, s0, s1) {
      return simdSwizzle(float64x2, a, [s0, s1]);
    }
  }

  if (typeof SIMD.Float64x2.shuffle === "undefined") {
    SIMD.Float64x2.shuffle = function(a, b, s0, s1) {
      return simdShuffle(float64x2, a, b, [s0, s1]);
    }
  }

  // Bool64x2
  if (typeof SIMD.Bool64x2 === "undefined" ||
      typeof SIMD.Bool64x2.extractLane === "undefined") {
    SIMD.Bool64x2 = function(s0, s1) {
      if (!(this instanceof SIMD.Bool64x2)) {
        return new SIMD.Bool64x2(s0, s1);
      }
      this.s_ = [!!s0, !!s1];
    }

    SIMD.Bool64x2.extractLane = function(v, i) {
      v = SIMD.Bool64x2.check(v);
      simdCheckLaneIndex(i, 2);
      return v.s_[i];
    }
  }

  var float64x2 = {
    name: "Float64x2",
    fn: SIMD.Float64x2,
    lanes: 2,
    laneSize: 8,
    buffer: _f64x2,
    view: Float64Array,
    mulFn: binaryMul,
    fns: ["check", "splat", "replaceLane", "select",
          "equal", "notEqual", "lessThan", "lessThanOrEqual", "greaterThan", "greaterThanOrEqual",
          "add", "sub", "mul", "div", "neg", "abs", "min", "max", "minNum", "maxNum",
          "reciprocalApproximation", "reciprocalSqrtApproximation", "sqrt",
          "load", "store"],
  }

  // XXX Emscripten: Need these functions for intrinsics, see https://github.com/tc39/ecmascript_simd/issues/316.
  float64x2.fns.push("load1");
  float64x2.fns.push("store1");
  // XXX Emscripten

  var bool64x2 = {
    name: "Bool64x2",
    fn: SIMD.Bool64x2,
    lanes: 2,
    laneSize: 8,
    notFn: unaryLogicalNot,
    fns: ["check", "splat", "replaceLane",
          "allTrue", "anyTrue", "and", "or", "xor", "not"],
  }

  float64x2.boolType = bool64x2;

  float32x4.fromBits.push(float64x2);
  int32x4.fromBits.push(float64x2);
  int16x8.fromBits.push(float64x2);
  int8x16.fromBits.push(float64x2);
  uint32x4.fromBits.push(float64x2);
  uint16x8.fromBits.push(float64x2);
  uint8x16.fromBits.push(float64x2);

  float64x2.fromBits = [float32x4, int32x4, int16x8, int8x16,
                        uint32x4, uint16x8, uint8x16];

/*
  // XXX Emscripten: Removed to fix https://github.com/tc39/ecmascript_simd/issues/314
  int32x4.fromBits = [float32x4, int16x8, int8x16, uint32x4, uint16x8, uint8x16];
  int16x8.fromBits = [float32x4, int32x4, int8x16, uint32x4, uint16x8, uint8x16];
  int8x16.fromBits = [float32x4, int32x4, int16x8, uint32x4, uint16x8, uint8x16];
  uint32x4.fromBits = [float32x4, int32x4, int16x8, int8x16, uint16x8, uint8x16];
  uint16x8.fromBits = [float32x4, int32x4, int16x8, int8x16, uint32x4, uint8x16];
  uint8x16.fromBits = [float32x4, int32x4, int16x8, int8x16, uint32x4, uint16x8];
*/

  simdTypes.push(float64x2);
  simdTypes.push(bool64x2);
}

// SIMD prototype functions.
var prototypeFns = {
  valueOf:
    function(type) {
      return function() {
        throw new TypeError(type.name + " cannot be converted to a number");
      }
    },

  toString:
    function(type) {
      return function() {
        return simdToString(type, this);
      }
    },

  toLocaleString:
    function(type) {
      return function() {
        return simdToLocaleString(type, this);
      }
    },
};

// SIMD constructor functions.

var simdFns = {
  check:
    function(type) {
      return function(a) {
        if (!(a instanceof type.fn)) {
          throw new TypeError("Argument is not a " + type.name + ".");
        }
        return a;
      }
    },

  splat:
    function(type) {
      return function(s) { return simdSplat(type, s); }
    },

  replaceLane:
    function(type) {
      return function(a, i, s) { return simdReplaceLane(type, a, i, s); }
    },

  allTrue:
    function(type) {
      return function(a) { return simdAllTrue(type, a); }
    },

  anyTrue:
    function(type) {
      return function(a) { return simdAnyTrue(type, a); }
    },

  and:
    function(type) {
      return function(a, b) {
        return simdBinaryOp(type, binaryAnd, a, b);
      }
    },

  or:
    function(type) {
      return function(a, b) {
        return simdBinaryOp(type, binaryOr, a, b);
      }
    },

  xor:
    function(type) {
      return function(a, b) {
        return simdBinaryOp(type, binaryXor, a, b);
      }
    },

  not:
    function(type) {
      return function(a) {
        return simdUnaryOp(type, type.notFn, a);
      }
    },

  equal:
    function(type) {
      return function(a, b) {
        return simdRelationalOp(type, binaryEqual, a, b);
      }
    },

  notEqual:
    function(type) {
      return function(a, b) {
        return simdRelationalOp(type, binaryNotEqual, a, b);
      }
    },

  lessThan:
    function(type) {
      return function(a, b) {
        return simdRelationalOp(type, binaryLess, a, b);
      }
    },

  lessThanOrEqual:
    function(type) {
      return function(a, b) {
        return simdRelationalOp(type, binaryLessEqual, a, b);
      }
    },

  greaterThan:
    function(type) {
      return function(a, b) {
        return simdRelationalOp(type, binaryGreater, a, b);
      }
    },

  greaterThanOrEqual:
    function(type) {
      return function(a, b) {
        return simdRelationalOp(type, binaryGreaterEqual, a, b);
      }
    },

  add:
    function(type) {
      return function(a, b) {
        return simdBinaryOp(type, binaryAdd, a, b);
      }
    },

  sub:
    function(type) {
      return function(a, b) {
        return simdBinaryOp(type, binarySub, a, b);
      }
    },

  mul:
    function(type) {
      return function(a, b) {
        return simdBinaryOp(type, type.mulFn, a, b);
      }
    },

  div:
    function(type) {
      return function(a, b) {
        return simdBinaryOp(type, binaryDiv, a, b);
      }
    },

  neg:
    function(type) {
      return function(a) {
        return simdUnaryOp(type, unaryNeg, a);
      }
    },

  abs:
    function(type) {
      return function(a) {
        return simdUnaryOp(type, Math.abs, a);
      }
    },

  min:
    function(type) {
      return function(a, b) {
        return simdBinaryOp(type, Math.min, a, b);
      }
    },

  max:
    function(type) {
      return function(a, b) {
        return simdBinaryOp(type, Math.max, a, b);
      }
    },

  minNum:
    function(type) {
      return function(a, b) {
        return simdBinaryOp(type, minNum, a, b);
      }
    },

  maxNum:
    function(type) {
      return function(a, b) {
        return simdBinaryOp(type, maxNum, a, b);
      }
    },

  load:
    function(type) {
      return function(tarray, index) {
        return simdLoad(type, tarray, index, type.lanes);
      }
    },

  load1:
    function(type) {
      return function(tarray, index) {
        return simdLoad(type, tarray, index, 1);
      }
    },

  load2:
    function(type) {
      return function(tarray, index) {
        return simdLoad(type, tarray, index, 2);
      }
    },

  load3:
    function(type) {
      return function(tarray, index) {
        return simdLoad(type, tarray, index, 3);
      }
    },

  store:
    function(type) {
      return function(tarray, index, a) {
        return simdStore(type, tarray, index, a, type.lanes);
      }
    },

  store1:
    function(type) {
      return function(tarray, index, a) {
        return simdStore(type, tarray, index, a, 1);
      }
    },

  store2:
    function(type) {
      return function(tarray, index, a) {
        return simdStore(type, tarray, index, a, 2);
      }
    },

  store3:
    function(type) {
      return function(tarray, index, a) {
        return simdStore(type, tarray, index, a, 3);
      }
    },

  select:
    function(type) {
      return function(selector, a, b) {
        return simdSelect(type, selector, a, b);
      }
    },


  reciprocalApproximation:
    function(type) {
      return function(a) {
        a = type.fn.check(a);
        return type.fn.div(type.fn.splat(1.0), a);
      }
    },

  reciprocalSqrtApproximation:
    function(type) {
      return function(a) {
        a = type.fn.check(a);
        return type.fn.reciprocalApproximation(type.fn.sqrt(a));
      }
    },

  sqrt:
    function(type) {
      return function(a) {
        return simdUnaryOp(type, Math.sqrt, a);
      }
    },

  shiftLeftByScalar:
    function(type) {
      return function(a, bits) {
        bits &= type.laneSize * 8 - 1;
        return simdShiftOp(type, binaryShiftLeft, a, bits);
      }
    },

  shiftRightByScalar:
    function(type) {
      if (type.unsigned) {
        return function(a, bits) {
          bits &= type.laneSize * 8 - 1;
          return simdShiftOp(type, binaryShiftRightLogical, a, bits);
        }
      } else {
        return function(a, bits) {
          bits &= type.laneSize * 8 - 1;
          return simdShiftOp(type, binaryShiftRightArithmetic, a, bits);
        }
      }
    },

  addSaturate:
    function(type) {
      function addSaturate(a, b) {
        return clamp(a + b, type.minVal, type.maxVal);
      }
      return function(a, b) { return simdBinaryOp(type, addSaturate, a, b); }
    },

  subSaturate:
    function(type) {
      function subSaturate(a, b) {
        return clamp(a - b, type.minVal, type.maxVal);
      }
      return function(a, b) { return simdBinaryOp(type, subSaturate, a, b); }
    },
}

// Install functions.

simdTypes.forEach(function(type) {
  // Install each prototype function on each SIMD prototype.
  var simdFn = type.fn;
  var proto = simdFn.prototype;
  for (var name in prototypeFns) {
    if (!proto.hasOwnProperty(name))
      proto[name] = prototypeFns[name](type);
  }
  // Install regular functions.
  type.fns.forEach(function(name) {
    if (typeof simdFn[name] === "undefined")
      simdFn[name] = simdFns[name](type);
  });
  // Install 'fromTIMD' functions.
  if (type.from) {
    type.from.forEach(function(fromType) {
      var name = "from" + fromType.name;
      var toType = type;  // pull type into closure.
      if (typeof type.fn[name] === "undefined") {
        type.fn[name] =
            function(a) { return simdFrom(toType, fromType, a); }
      }
    });
  }
  // Install 'fromTIMDBits' functions.
  if (type.fromBits) {
    type.fromBits.forEach(function(fromType) {
      var name = "from" + fromType.name + "Bits";
      var toType = type;  // pull type into closure.
      if (typeof type.fn[name] === "undefined") {
        type.fn[name] =
            function(a) { return simdFromBits(toType, fromType, a); }
      }
    });
  }
});

// If we're in a browser, the global namespace is named 'window'. If we're
// in node, it's named 'global'. If we're in a web worker, it's named
// 'self'. If we're in a shell, 'this' might work.
})(typeof window !== "undefined"
   ? window
   : (typeof process === 'object' &&
      typeof require === 'function' &&
      typeof global === 'object')
     ? global
     : typeof self === 'object'
       ? self
       : this);


// XXX Emscripten-specific below XXX

// Work around Firefox Nightly bug that Float64x2 comparison return a Int32x4 instead of a Bool64x2.
try {
  if (SIMD.Int32x4.check(SIMD.Float64x2.equal(SIMD.Float64x2.splat(5.0), SIMD.Float64x2.splat(5.0)))) {
    SIMD.Float64x2.prevEqual = SIMD.Float64x2.equal;
    SIMD.Float64x2.equal = function(a, b) {
      var int32x4 = SIMD.Float64x2.prevEqual(a, b);
      return SIMD.Bool64x2(SIMD.Int32x4.extractLane(int32x4, 1) != 0, SIMD.Int32x4.extractLane(int32x4, 3) != 0);
    }
    console.error('Warning: Patching up SIMD.Float64x2.equal to return a Bool64x2 instead of Int32x4!');
  }
} catch(e) {}
try {
  if (SIMD.Int32x4.check(SIMD.Float64x2.notEqual(SIMD.Float64x2.splat(5.0), SIMD.Float64x2.splat(5.0)))) {
    SIMD.Float64x2.prevNotEqual = SIMD.Float64x2.notEqual;
    SIMD.Float64x2.notEqual = function(a, b) {
      var int32x4 = SIMD.Float64x2.prevNotEqual(a, b);
      return SIMD.Bool64x2(SIMD.Int32x4.extractLane(int32x4, 1) != 0, SIMD.Int32x4.extractLane(int32x4, 3) != 0);
    } 
    console.error('Warning: Patching up SIMD.Float64x2.notEqual to return a Bool64x2 instead of Int32x4!');
  }
} catch(e) {}
try {
  if (SIMD.Int32x4.check(SIMD.Float64x2.greaterThan(SIMD.Float64x2.splat(5.0), SIMD.Float64x2.splat(5.0)))) {
    SIMD.Float64x2.prevGreaterThan = SIMD.Float64x2.greaterThan;
    SIMD.Float64x2.greaterThan = function(a, b) {
      var int32x4 = SIMD.Float64x2.prevGreaterThan(a, b);
      return SIMD.Bool64x2(SIMD.Int32x4.extractLane(int32x4, 1) != 0, SIMD.Int32x4.extractLane(int32x4, 3) != 0);
    } 
    console.error('Warning: Patching up SIMD.Float64x2.greaterThan to return a Bool64x2 instead of Int32x4!');
  }
} catch(e) {}
try {
  if (SIMD.Int32x4.check(SIMD.Float64x2.greaterThanOrEqual(SIMD.Float64x2.splat(5.0), SIMD.Float64x2.splat(5.0)))) {
    SIMD.Float64x2.prevGreaterThanOrEqual = SIMD.Float64x2.greaterThanOrEqual;
    SIMD.Float64x2.greaterThanOrEqual = function(a, b) {
      var int32x4 = SIMD.Float64x2.prevGreaterThanOrEqual(a, b);
      return SIMD.Bool64x2(SIMD.Int32x4.extractLane(int32x4, 1) != 0, SIMD.Int32x4.extractLane(int32x4, 3) != 0);
    } 
    console.error('Warning: Patching up SIMD.Float64x2.greaterThanOrEqual to return a Bool64x2 instead of Int32x4!');
  }
} catch(e) {}
try {
  if (SIMD.Int32x4.check(SIMD.Float64x2.lessThan(SIMD.Float64x2.splat(5.0), SIMD.Float64x2.splat(5.0)))) {
    SIMD.Float64x2.prevLessThan = SIMD.Float64x2.lessThan;
    SIMD.Float64x2.lessThan = function(a, b) {
      var int32x4 = SIMD.Float64x2.prevLessThan(a, b);
      return SIMD.Bool64x2(SIMD.Int32x4.extractLane(int32x4, 1) != 0, SIMD.Int32x4.extractLane(int32x4, 3) != 0);
    } 
    console.error('Warning: Patching up SIMD.Float64x2.lessThan to return a Bool64x2 instead of Int32x4!');
  }
} catch(e) {}
try {
  if (SIMD.Int32x4.check(SIMD.Float64x2.lessThanOrEqual(SIMD.Float64x2.splat(5.0), SIMD.Float64x2.splat(5.0)))) {
    SIMD.Float64x2.prevLessThanOrEqual = SIMD.Float64x2.lessThanOrEqual;
    SIMD.Float64x2.lessThanOrEqual = function(a, b) {
      var int32x4 = SIMD.Float64x2.prevLessThanOrEqual(a, b);
      return SIMD.Bool64x2(SIMD.Int32x4.extractLane(int32x4, 1) != 0, SIMD.Int32x4.extractLane(int32x4, 3) != 0);
    } 
    console.error('Warning: Patching up SIMD.Float64x2.lessThanOrEqual to return a Bool64x2 instead of Int32x4!');
  }
} catch(e) {}


if (!SIMD.Int32x4.fromBool64x2Bits) {
  SIMD.Int32x4.fromBool64x2Bits = function(bool64x2) {
    var lane0 = SIMD.Bool64x2.extractLane(bool64x2, 0)?-1:0;
    var lane1 = SIMD.Bool64x2.extractLane(bool64x2, 1)?-1:0;
    return SIMD.Int32x4(lane0, lane0, lane1, lane1);
  }
}


// The Module object: Our interface to the outside world. We import
// and export values on it, and do the work to get that through
// closure compiler if necessary. There are various ways Module can be used:
// 1. Not defined. We create it here
// 2. A function parameter, function(Module) { ..generated code.. }
// 3. pre-run appended it, var Module = {}; ..generated code..
// 4. External script tag defines var Module.
// We need to do an eval in order to handle the closure compiler
// case, where this code here is minified but Module was defined
// elsewhere (e.g. case 4 above). We also need to check if Module
// already exists (e.g. case 3 above).
// Note that if you want to run closure, and also to use Module
// after the generated code, you will need to define   var Module = {};
// before the code. Then that object will be used in the code, and you
// can continue to use Module afterwards as well.
var Module;
if (!Module) Module = (typeof Module !== 'undefined' ? Module : null) || {};

// Sometimes an existing Module object exists with properties
// meant to overwrite the default module functionality. Here
// we collect those properties and reapply _after_ we configure
// the current environment's defaults to avoid having to be so
// defensive during initialization.
var moduleOverrides = {};
for (var key in Module) {
  if (Module.hasOwnProperty(key)) {
    moduleOverrides[key] = Module[key];
  }
}

// The environment setup code below is customized to use Module.
// *** Environment setup code ***
var ENVIRONMENT_IS_WEB = false;
var ENVIRONMENT_IS_WORKER = false;
var ENVIRONMENT_IS_NODE = false;
var ENVIRONMENT_IS_SHELL = false;

// Three configurations we can be running in:
// 1) We could be the application main() thread running in the main JS UI thread. (ENVIRONMENT_IS_WORKER == false and ENVIRONMENT_IS_PTHREAD == false)
// 2) We could be the application main() thread proxied to worker. (with Emscripten -s PROXY_TO_WORKER=1) (ENVIRONMENT_IS_WORKER == true, ENVIRONMENT_IS_PTHREAD == false)
// 3) We could be an application pthread running in a worker. (ENVIRONMENT_IS_WORKER == true and ENVIRONMENT_IS_PTHREAD == true)

if (Module['ENVIRONMENT']) {
  if (Module['ENVIRONMENT'] === 'WEB') {
    ENVIRONMENT_IS_WEB = true;
  } else if (Module['ENVIRONMENT'] === 'WORKER') {
    ENVIRONMENT_IS_WORKER = true;
  } else if (Module['ENVIRONMENT'] === 'NODE') {
    ENVIRONMENT_IS_NODE = true;
  } else if (Module['ENVIRONMENT'] === 'SHELL') {
    ENVIRONMENT_IS_SHELL = true;
  } else {
    throw new Error('The provided Module[\'ENVIRONMENT\'] value is not valid. It must be one of: WEB|WORKER|NODE|SHELL.');
  }
} else {
  ENVIRONMENT_IS_WEB = typeof window === 'object';
  ENVIRONMENT_IS_WORKER = typeof importScripts === 'function';
  ENVIRONMENT_IS_NODE = typeof process === 'object' && typeof require === 'function' && !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_WORKER;
  ENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;
}


if (ENVIRONMENT_IS_NODE) {
  // Expose functionality in the same simple way that the shells work
  // Note that we pollute the global namespace here, otherwise we break in node
  if (!Module['print']) Module['print'] = console.log;
  if (!Module['printErr']) Module['printErr'] = console.warn;

  var nodeFS;
  var nodePath;

  Module['read'] = function read(filename, binary) {
    if (!nodeFS) nodeFS = require('fs');
    if (!nodePath) nodePath = require('path');
    filename = nodePath['normalize'](filename);
    var ret = nodeFS['readFileSync'](filename);
    return binary ? ret : ret.toString();
  };

  Module['readBinary'] = function readBinary(filename) {
    var ret = Module['read'](filename, true);
    if (!ret.buffer) {
      ret = new Uint8Array(ret);
    }
    assert(ret.buffer);
    return ret;
  };

  Module['load'] = function load(f) {
    globalEval(read(f));
  };

  if (!Module['thisProgram']) {
    if (process['argv'].length > 1) {
      Module['thisProgram'] = process['argv'][1].replace(/\\/g, '/');
    } else {
      Module['thisProgram'] = 'unknown-program';
    }
  }

  Module['arguments'] = process['argv'].slice(2);

  if (typeof module !== 'undefined') {
    module['exports'] = Module;
  }

  process['on']('uncaughtException', function(ex) {
    // suppress ExitStatus exceptions from showing an error
    if (!(ex instanceof ExitStatus)) {
      throw ex;
    }
  });

  Module['inspect'] = function () { return '[Emscripten Module object]'; };
}
else if (ENVIRONMENT_IS_SHELL) {
  if (!Module['print']) Module['print'] = print;
  if (typeof printErr != 'undefined') Module['printErr'] = printErr; // not present in v8 or older sm

  if (typeof read != 'undefined') {
    Module['read'] = read;
  } else {
    Module['read'] = function read() { throw 'no read() available' };
  }

  Module['readBinary'] = function readBinary(f) {
    if (typeof readbuffer === 'function') {
      return new Uint8Array(readbuffer(f));
    }
    var data = read(f, 'binary');
    assert(typeof data === 'object');
    return data;
  };

  if (typeof scriptArgs != 'undefined') {
    Module['arguments'] = scriptArgs;
  } else if (typeof arguments != 'undefined') {
    Module['arguments'] = arguments;
  }

}
else if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {
  Module['read'] = function read(url) {
    var xhr = new XMLHttpRequest();
    xhr.open('GET', url, false);
    xhr.send(null);
    return xhr.responseText;
  };

  Module['readAsync'] = function readAsync(url, onload, onerror) {
    var xhr = new XMLHttpRequest();
    xhr.open('GET', url, true);
    xhr.responseType = 'arraybuffer';
    xhr.onload = function xhr_onload() {
      if (xhr.status == 200 || (xhr.status == 0 && xhr.response)) { // file URLs can return 0
        onload(xhr.response);
      } else {
        onerror();
      }
    };
    xhr.onerror = onerror;
    xhr.send(null);
  };

  if (typeof arguments != 'undefined') {
    Module['arguments'] = arguments;
  }

  if (typeof console !== 'undefined') {
    if (!Module['print']) Module['print'] = function print(x) {
      console.log(x);
    };
    if (!Module['printErr']) Module['printErr'] = function printErr(x) {
      console.warn(x);
    };
  } else {
    // Probably a worker, and without console.log. We can do very little here...
    var TRY_USE_DUMP = false;
    if (!Module['print']) Module['print'] = (TRY_USE_DUMP && (typeof(dump) !== "undefined") ? (function(x) {
      dump(x);
    }) : (function(x) {
      // self.postMessage(x); // enable this if you want stdout to be sent as messages
    }));
  }

  if (ENVIRONMENT_IS_WORKER) {
    Module['load'] = importScripts;
  }

  if (typeof Module['setWindowTitle'] === 'undefined') {
    Module['setWindowTitle'] = function(title) { document.title = title };
  }
}
else {
  // Unreachable because SHELL is dependant on the others
  throw 'Unknown runtime environment. Where are we?';
}

function globalEval(x) {
  eval.call(null, x);
}
if (!Module['load'] && Module['read']) {
  Module['load'] = function load(f) {
    globalEval(Module['read'](f));
  };
}
if (!Module['print']) {
  Module['print'] = function(){};
}
if (!Module['printErr']) {
  Module['printErr'] = Module['print'];
}
if (!Module['arguments']) {
  Module['arguments'] = [];
}
if (!Module['thisProgram']) {
  Module['thisProgram'] = './this.program';
}

// *** Environment setup code ***

// Closure helpers
Module.print = Module['print'];
Module.printErr = Module['printErr'];

// Callbacks
Module['preRun'] = [];
Module['postRun'] = [];

// Merge back in the overrides
for (var key in moduleOverrides) {
  if (moduleOverrides.hasOwnProperty(key)) {
    Module[key] = moduleOverrides[key];
  }
}
// Free the object hierarchy contained in the overrides, this lets the GC
// reclaim data used e.g. in memoryInitializerRequest, which is a large typed array.
moduleOverrides = undefined;



// {{PREAMBLE_ADDITIONS}}

// === Preamble library stuff ===

// Documentation for the public APIs defined in this file must be updated in:
//    site/source/docs/api_reference/preamble.js.rst
// A prebuilt local version of the documentation is available at:
//    site/build/text/docs/api_reference/preamble.js.txt
// You can also build docs locally as HTML or other formats in site/
// An online HTML version (which may be of a different version of Emscripten)
//    is up at http://kripken.github.io/emscripten-site/docs/api_reference/preamble.js.html

//========================================
// Runtime code shared with compiler
//========================================

var Runtime = {
  setTempRet0: function (value) {
    tempRet0 = value;
  },
  getTempRet0: function () {
    return tempRet0;
  },
  stackSave: function () {
    return STACKTOP;
  },
  stackRestore: function (stackTop) {
    STACKTOP = stackTop;
  },
  getNativeTypeSize: function (type) {
    switch (type) {
      case 'i1': case 'i8': return 1;
      case 'i16': return 2;
      case 'i32': return 4;
      case 'i64': return 8;
      case 'float': return 4;
      case 'double': return 8;
      default: {
        if (type[type.length-1] === '*') {
          return Runtime.QUANTUM_SIZE; // A pointer
        } else if (type[0] === 'i') {
          var bits = parseInt(type.substr(1));
          assert(bits % 8 === 0);
          return bits/8;
        } else {
          return 0;
        }
      }
    }
  },
  getNativeFieldSize: function (type) {
    return Math.max(Runtime.getNativeTypeSize(type), Runtime.QUANTUM_SIZE);
  },
  STACK_ALIGN: 16,
  prepVararg: function (ptr, type) {
    if (type === 'double' || type === 'i64') {
      // move so the load is aligned
      if (ptr & 7) {
        assert((ptr & 7) === 4);
        ptr += 4;
      }
    } else {
      assert((ptr & 3) === 0);
    }
    return ptr;
  },
  getAlignSize: function (type, size, vararg) {
    // we align i64s and doubles on 64-bit boundaries, unlike x86
    if (!vararg && (type == 'i64' || type == 'double')) return 8;
    if (!type) return Math.min(size, 8); // align structures internally to 64 bits
    return Math.min(size || (type ? Runtime.getNativeFieldSize(type) : 0), Runtime.QUANTUM_SIZE);
  },
  dynCall: function (sig, ptr, args) {
    if (args && args.length) {
      assert(args.length == sig.length-1);
      assert(('dynCall_' + sig) in Module, 'bad function pointer type - no table for sig \'' + sig + '\'');
      return Module['dynCall_' + sig].apply(null, [ptr].concat(args));
    } else {
      assert(sig.length == 1);
      assert(('dynCall_' + sig) in Module, 'bad function pointer type - no table for sig \'' + sig + '\'');
      return Module['dynCall_' + sig].call(null, ptr);
    }
  },
  functionPointers: [],
  addFunction: function (func) {
    for (var i = 0; i < Runtime.functionPointers.length; i++) {
      if (!Runtime.functionPointers[i]) {
        Runtime.functionPointers[i] = func;
        return 2*(1 + i);
      }
    }
    throw 'Finished up all reserved function pointers. Use a higher value for RESERVED_FUNCTION_POINTERS.';
  },
  removeFunction: function (index) {
    Runtime.functionPointers[(index-2)/2] = null;
  },
  warnOnce: function (text) {
    if (!Runtime.warnOnce.shown) Runtime.warnOnce.shown = {};
    if (!Runtime.warnOnce.shown[text]) {
      Runtime.warnOnce.shown[text] = 1;
      Module.printErr(text);
    }
  },
  funcWrappers: {},
  getFuncWrapper: function (func, sig) {
    assert(sig);
    if (!Runtime.funcWrappers[sig]) {
      Runtime.funcWrappers[sig] = {};
    }
    var sigCache = Runtime.funcWrappers[sig];
    if (!sigCache[func]) {
      // optimize away arguments usage in common cases
      if (sig.length === 1) {
        sigCache[func] = function dynCall_wrapper() {
          return Runtime.dynCall(sig, func);
        };
      } else if (sig.length === 2) {
        sigCache[func] = function dynCall_wrapper(arg) {
          return Runtime.dynCall(sig, func, [arg]);
        };
      } else {
        // general case
        sigCache[func] = function dynCall_wrapper() {
          return Runtime.dynCall(sig, func, Array.prototype.slice.call(arguments));
        };
      }
    }
    return sigCache[func];
  },
  getCompilerSetting: function (name) {
    throw 'You must build with -s RETAIN_COMPILER_SETTINGS=1 for Runtime.getCompilerSetting or emscripten_get_compiler_setting to work';
  },
  stackAlloc: function (size) { var ret = STACKTOP;STACKTOP = (STACKTOP + size)|0;STACKTOP = (((STACKTOP)+15)&-16);(assert((((STACKTOP|0) < (STACK_MAX|0))|0))|0); return ret; },
  staticAlloc: function (size) { var ret = STATICTOP;STATICTOP = (STATICTOP + (assert(!staticSealed),size))|0;STATICTOP = (((STATICTOP)+15)&-16); return ret; },
  dynamicAlloc: function (size) { assert(DYNAMICTOP_PTR);var ret = HEAP32[DYNAMICTOP_PTR>>2];var end = (((ret + size + 15)|0) & -16);HEAP32[DYNAMICTOP_PTR>>2] = end;if (end >= TOTAL_MEMORY) {var success = enlargeMemory();if (!success) {HEAP32[DYNAMICTOP_PTR>>2] = ret;return 0;}}return ret;},
  alignMemory: function (size,quantum) { var ret = size = Math.ceil((size)/(quantum ? quantum : 16))*(quantum ? quantum : 16); return ret; },
  makeBigInt: function (low,high,unsigned) { var ret = (unsigned ? ((+((low>>>0)))+((+((high>>>0)))*4294967296.0)) : ((+((low>>>0)))+((+((high|0)))*4294967296.0))); return ret; },
  GLOBAL_BASE: 8,
  QUANTUM_SIZE: 4,
  __dummy__: 0
}



Module["Runtime"] = Runtime;



//========================================
// Runtime essentials
//========================================

var ABORT = 0; // whether we are quitting the application. no code should run after this. set in exit() and abort()
var EXITSTATUS = 0;

function assert(condition, text) {
  if (!condition) {
    abort('Assertion failed: ' + text);
  }
}

var globalScope = this;

// Returns the C function with a specified identifier (for C++, you need to do manual name mangling)
function getCFunc(ident) {
  var func = Module['_' + ident]; // closure exported function
  if (!func) {
    try { func = eval('_' + ident); } catch(e) {}
  }
  assert(func, 'Cannot call unknown function ' + ident + ' (perhaps LLVM optimizations or closure removed it?)');
  return func;
}

var cwrap, ccall;
(function(){
  var JSfuncs = {
    // Helpers for cwrap -- it can't refer to Runtime directly because it might
    // be renamed by closure, instead it calls JSfuncs['stackSave'].body to find
    // out what the minified function name is.
    'stackSave': function() {
      Runtime.stackSave()
    },
    'stackRestore': function() {
      Runtime.stackRestore()
    },
    // type conversion from js to c
    'arrayToC' : function(arr) {
      var ret = Runtime.stackAlloc(arr.length);
      writeArrayToMemory(arr, ret);
      return ret;
    },
    'stringToC' : function(str) {
      var ret = 0;
      if (str !== null && str !== undefined && str !== 0) { // null string
        // at most 4 bytes per UTF-8 code point, +1 for the trailing '\0'
        var len = (str.length << 2) + 1;
        ret = Runtime.stackAlloc(len);
        stringToUTF8(str, ret, len);
      }
      return ret;
    }
  };
  // For fast lookup of conversion functions
  var toC = {'string' : JSfuncs['stringToC'], 'array' : JSfuncs['arrayToC']};

  // C calling interface.
  ccall = function ccallFunc(ident, returnType, argTypes, args, opts) {
    var func = getCFunc(ident);
    var cArgs = [];
    var stack = 0;
    assert(returnType !== 'array', 'Return type should not be "array".');
    if (args) {
      for (var i = 0; i < args.length; i++) {
        var converter = toC[argTypes[i]];
        if (converter) {
          if (stack === 0) stack = Runtime.stackSave();
          cArgs[i] = converter(args[i]);
        } else {
          cArgs[i] = args[i];
        }
      }
    }
    var ret = func.apply(null, cArgs);
    if ((!opts || !opts.async) && typeof EmterpreterAsync === 'object') {
      assert(!EmterpreterAsync.state, 'cannot start async op with normal JS calling ccall');
    }
    if (opts && opts.async) assert(!returnType, 'async ccalls cannot return values');
    if (returnType === 'string') ret = Pointer_stringify(ret);
    if (stack !== 0) {
      if (opts && opts.async) {
        EmterpreterAsync.asyncFinalizers.push(function() {
          Runtime.stackRestore(stack);
        });
        return;
      }
      Runtime.stackRestore(stack);
    }
    return ret;
  }

  var sourceRegex = /^function\s*[a-zA-Z$_0-9]*\s*\(([^)]*)\)\s*{\s*([^*]*?)[\s;]*(?:return\s*(.*?)[;\s]*)?}$/;
  function parseJSFunc(jsfunc) {
    // Match the body and the return value of a javascript function source
    var parsed = jsfunc.toString().match(sourceRegex).slice(1);
    return {arguments : parsed[0], body : parsed[1], returnValue: parsed[2]}
  }

  // sources of useful functions. we create this lazily as it can trigger a source decompression on this entire file
  var JSsource = null;
  function ensureJSsource() {
    if (!JSsource) {
      JSsource = {};
      for (var fun in JSfuncs) {
        if (JSfuncs.hasOwnProperty(fun)) {
          // Elements of toCsource are arrays of three items:
          // the code, and the return value
          JSsource[fun] = parseJSFunc(JSfuncs[fun]);
        }
      }
    }
  }

  cwrap = function cwrap(ident, returnType, argTypes) {
    argTypes = argTypes || [];
    var cfunc = getCFunc(ident);
    // When the function takes numbers and returns a number, we can just return
    // the original function
    var numericArgs = argTypes.every(function(type){ return type === 'number'});
    var numericRet = (returnType !== 'string');
    if ( numericRet && numericArgs) {
      return cfunc;
    }
    // Creation of the arguments list (["$1","$2",...,"$nargs"])
    var argNames = argTypes.map(function(x,i){return '$'+i});
    var funcstr = "(function(" + argNames.join(',') + ") {";
    var nargs = argTypes.length;
    if (!numericArgs) {
      // Generate the code needed to convert the arguments from javascript
      // values to pointers
      ensureJSsource();
      funcstr += 'var stack = ' + JSsource['stackSave'].body + ';';
      for (var i = 0; i < nargs; i++) {
        var arg = argNames[i], type = argTypes[i];
        if (type === 'number') continue;
        var convertCode = JSsource[type + 'ToC']; // [code, return]
        funcstr += 'var ' + convertCode.arguments + ' = ' + arg + ';';
        funcstr += convertCode.body + ';';
        funcstr += arg + '=(' + convertCode.returnValue + ');';
      }
    }

    // When the code is compressed, the name of cfunc is not literally 'cfunc' anymore
    var cfuncname = parseJSFunc(function(){return cfunc}).returnValue;
    // Call the function
    funcstr += 'var ret = ' + cfuncname + '(' + argNames.join(',') + ');';
    if (!numericRet) { // Return type can only by 'string' or 'number'
      // Convert the result to a string
      var strgfy = parseJSFunc(function(){return Pointer_stringify}).returnValue;
      funcstr += 'ret = ' + strgfy + '(ret);';
    }
    funcstr += "if (typeof EmterpreterAsync === 'object') { assert(!EmterpreterAsync.state, 'cannot start async op with normal JS calling cwrap') }";
    if (!numericArgs) {
      // If we had a stack, restore it
      ensureJSsource();
      funcstr += JSsource['stackRestore'].body.replace('()', '(stack)') + ';';
    }
    funcstr += 'return ret})';
    return eval(funcstr);
  };
})();
Module["ccall"] = ccall;
Module["cwrap"] = cwrap;

function setValue(ptr, value, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': HEAP8[((ptr)>>0)]=value; break;
      case 'i8': HEAP8[((ptr)>>0)]=value; break;
      case 'i16': HEAP16[((ptr)>>1)]=value; break;
      case 'i32': HEAP32[((ptr)>>2)]=value; break;
      case 'i64': (tempI64 = [value>>>0,(tempDouble=value,(+(Math_abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? ((Math_min((+(Math_floor((tempDouble)/4294967296.0))), 4294967295.0))|0)>>>0 : (~~((+(Math_ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)],HEAP32[((ptr)>>2)]=tempI64[0],HEAP32[(((ptr)+(4))>>2)]=tempI64[1]); break;
      case 'float': HEAPF32[((ptr)>>2)]=value; break;
      case 'double': HEAPF64[((ptr)>>3)]=value; break;
      default: abort('invalid type for setValue: ' + type);
    }
}
Module["setValue"] = setValue;


function getValue(ptr, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': return HEAP8[((ptr)>>0)];
      case 'i8': return HEAP8[((ptr)>>0)];
      case 'i16': return HEAP16[((ptr)>>1)];
      case 'i32': return HEAP32[((ptr)>>2)];
      case 'i64': return HEAP32[((ptr)>>2)];
      case 'float': return HEAPF32[((ptr)>>2)];
      case 'double': return HEAPF64[((ptr)>>3)];
      default: abort('invalid type for setValue: ' + type);
    }
  return null;
}
Module["getValue"] = getValue;

var ALLOC_NORMAL = 0; // Tries to use _malloc()
var ALLOC_STACK = 1; // Lives for the duration of the current function call
var ALLOC_STATIC = 2; // Cannot be freed
var ALLOC_DYNAMIC = 3; // Cannot be freed except through sbrk
var ALLOC_NONE = 4; // Do not allocate
Module["ALLOC_NORMAL"] = ALLOC_NORMAL;
Module["ALLOC_STACK"] = ALLOC_STACK;
Module["ALLOC_STATIC"] = ALLOC_STATIC;
Module["ALLOC_DYNAMIC"] = ALLOC_DYNAMIC;
Module["ALLOC_NONE"] = ALLOC_NONE;

// allocate(): This is for internal use. You can use it yourself as well, but the interface
//             is a little tricky (see docs right below). The reason is that it is optimized
//             for multiple syntaxes to save space in generated code. So you should
//             normally not use allocate(), and instead allocate memory using _malloc(),
//             initialize it with setValue(), and so forth.
// @slab: An array of data, or a number. If a number, then the size of the block to allocate,
//        in *bytes* (note that this is sometimes confusing: the next parameter does not
//        affect this!)
// @types: Either an array of types, one for each byte (or 0 if no type at that position),
//         or a single type which is used for the entire block. This only matters if there
//         is initial data - if @slab is a number, then this does not matter at all and is
//         ignored.
// @allocator: How to allocate memory, see ALLOC_*
function allocate(slab, types, allocator, ptr) {
  var zeroinit, size;
  if (typeof slab === 'number') {
    zeroinit = true;
    size = slab;
  } else {
    zeroinit = false;
    size = slab.length;
  }

  var singleType = typeof types === 'string' ? types : null;

  var ret;
  if (allocator == ALLOC_NONE) {
    ret = ptr;
  } else {
    ret = [typeof _malloc === 'function' ? _malloc : Runtime.staticAlloc, Runtime.stackAlloc, Runtime.staticAlloc, Runtime.dynamicAlloc][allocator === undefined ? ALLOC_STATIC : allocator](Math.max(size, singleType ? 1 : types.length));
  }

  if (zeroinit) {
    var ptr = ret, stop;
    assert((ret & 3) == 0);
    stop = ret + (size & ~3);
    for (; ptr < stop; ptr += 4) {
      HEAP32[((ptr)>>2)]=0;
    }
    stop = ret + size;
    while (ptr < stop) {
      HEAP8[((ptr++)>>0)]=0;
    }
    return ret;
  }

  if (singleType === 'i8') {
    if (slab.subarray || slab.slice) {
      HEAPU8.set(slab, ret);
    } else {
      HEAPU8.set(new Uint8Array(slab), ret);
    }
    return ret;
  }

  var i = 0, type, typeSize, previousType;
  while (i < size) {
    var curr = slab[i];

    if (typeof curr === 'function') {
      curr = Runtime.getFunctionIndex(curr);
    }

    type = singleType || types[i];
    if (type === 0) {
      i++;
      continue;
    }
    assert(type, 'Must know what type to store in allocate!');

    if (type == 'i64') type = 'i32'; // special case: we have one i32 here, and one i32 later

    setValue(ret+i, curr, type);

    // no need to look up size unless type changes, so cache it
    if (previousType !== type) {
      typeSize = Runtime.getNativeTypeSize(type);
      previousType = type;
    }
    i += typeSize;
  }

  return ret;
}
Module["allocate"] = allocate;

// Allocate memory during any stage of startup - static memory early on, dynamic memory later, malloc when ready
function getMemory(size) {
  if (!staticSealed) return Runtime.staticAlloc(size);
  if (!runtimeInitialized) return Runtime.dynamicAlloc(size);
  return _malloc(size);
}
Module["getMemory"] = getMemory;

function Pointer_stringify(ptr, /* optional */ length) {
  if (length === 0 || !ptr) return '';
  // TODO: use TextDecoder
  // Find the length, and check for UTF while doing so
  var hasUtf = 0;
  var t;
  var i = 0;
  while (1) {
    assert(ptr + i < TOTAL_MEMORY);
    t = HEAPU8[(((ptr)+(i))>>0)];
    hasUtf |= t;
    if (t == 0 && !length) break;
    i++;
    if (length && i == length) break;
  }
  if (!length) length = i;

  var ret = '';

  if (hasUtf < 128) {
    var MAX_CHUNK = 1024; // split up into chunks, because .apply on a huge string can overflow the stack
    var curr;
    while (length > 0) {
      curr = String.fromCharCode.apply(String, HEAPU8.subarray(ptr, ptr + Math.min(length, MAX_CHUNK)));
      ret = ret ? ret + curr : curr;
      ptr += MAX_CHUNK;
      length -= MAX_CHUNK;
    }
    return ret;
  }
  return Module['UTF8ToString'](ptr);
}
Module["Pointer_stringify"] = Pointer_stringify;

// Given a pointer 'ptr' to a null-terminated ASCII-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.

function AsciiToString(ptr) {
  var str = '';
  while (1) {
    var ch = HEAP8[((ptr++)>>0)];
    if (!ch) return str;
    str += String.fromCharCode(ch);
  }
}
Module["AsciiToString"] = AsciiToString;

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in ASCII form. The copy will require at most str.length+1 bytes of space in the HEAP.

function stringToAscii(str, outPtr) {
  return writeAsciiToMemory(str, outPtr, false);
}
Module["stringToAscii"] = stringToAscii;

// Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the given array that contains uint8 values, returns
// a copy of that string as a Javascript String object.

var UTF8Decoder = typeof TextDecoder !== 'undefined' ? new TextDecoder('utf8') : undefined;
function UTF8ArrayToString(u8Array, idx) {
  var endPtr = idx;
  // TextDecoder needs to know the byte length in advance, it doesn't stop on null terminator by itself.
  // Also, use the length info to avoid running tiny strings through TextDecoder, since .subarray() allocates garbage.
  while (u8Array[endPtr]) ++endPtr;

  if (endPtr - idx > 16 && u8Array.subarray && UTF8Decoder) {
    return UTF8Decoder.decode(u8Array.subarray(idx, endPtr));
  } else {
    var u0, u1, u2, u3, u4, u5;

    var str = '';
    while (1) {
      // For UTF8 byte structure, see http://en.wikipedia.org/wiki/UTF-8#Description and https://www.ietf.org/rfc/rfc2279.txt and https://tools.ietf.org/html/rfc3629
      u0 = u8Array[idx++];
      if (!u0) return str;
      if (!(u0 & 0x80)) { str += String.fromCharCode(u0); continue; }
      u1 = u8Array[idx++] & 63;
      if ((u0 & 0xE0) == 0xC0) { str += String.fromCharCode(((u0 & 31) << 6) | u1); continue; }
      u2 = u8Array[idx++] & 63;
      if ((u0 & 0xF0) == 0xE0) {
        u0 = ((u0 & 15) << 12) | (u1 << 6) | u2;
      } else {
        u3 = u8Array[idx++] & 63;
        if ((u0 & 0xF8) == 0xF0) {
          u0 = ((u0 & 7) << 18) | (u1 << 12) | (u2 << 6) | u3;
        } else {
          u4 = u8Array[idx++] & 63;
          if ((u0 & 0xFC) == 0xF8) {
            u0 = ((u0 & 3) << 24) | (u1 << 18) | (u2 << 12) | (u3 << 6) | u4;
          } else {
            u5 = u8Array[idx++] & 63;
            u0 = ((u0 & 1) << 30) | (u1 << 24) | (u2 << 18) | (u3 << 12) | (u4 << 6) | u5;
          }
        }
      }
      if (u0 < 0x10000) {
        str += String.fromCharCode(u0);
      } else {
        var ch = u0 - 0x10000;
        str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));
      }
    }
  }
}
Module["UTF8ArrayToString"] = UTF8ArrayToString;

// Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.

function UTF8ToString(ptr) {
  return UTF8ArrayToString(HEAPU8,ptr);
}
Module["UTF8ToString"] = UTF8ToString;

// Copies the given Javascript String object 'str' to the given byte array at address 'outIdx',
// encoded in UTF8 form and null-terminated. The copy will require at most str.length*4+1 bytes of space in the HEAP.
// Use the function lengthBytesUTF8() to compute the exact number of bytes (excluding null terminator) that this function will write.
// Parameters:
//   str: the Javascript string to copy.
//   outU8Array: the array to copy to. Each index in this array is assumed to be one 8-byte element.
//   outIdx: The starting offset in the array to begin the copying.
//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null
//                    terminator, i.e. if maxBytesToWrite=1, only the null terminator will be written and nothing else.
//                    maxBytesToWrite=0 does not write any bytes to the output, not even the null terminator.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF8Array(str, outU8Array, outIdx, maxBytesToWrite) {
  if (!(maxBytesToWrite > 0)) // Parameter maxBytesToWrite is not optional. Negative values, 0, null, undefined and false each don't write out any bytes.
    return 0;

  var startIdx = outIdx;
  var endIdx = outIdx + maxBytesToWrite - 1; // -1 for string null terminator.
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! So decode UTF16->UTF32->UTF8.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    // For UTF8 byte structure, see http://en.wikipedia.org/wiki/UTF-8#Description and https://www.ietf.org/rfc/rfc2279.txt and https://tools.ietf.org/html/rfc3629
    var u = str.charCodeAt(i); // possibly a lead surrogate
    if (u >= 0xD800 && u <= 0xDFFF) u = 0x10000 + ((u & 0x3FF) << 10) | (str.charCodeAt(++i) & 0x3FF);
    if (u <= 0x7F) {
      if (outIdx >= endIdx) break;
      outU8Array[outIdx++] = u;
    } else if (u <= 0x7FF) {
      if (outIdx + 1 >= endIdx) break;
      outU8Array[outIdx++] = 0xC0 | (u >> 6);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else if (u <= 0xFFFF) {
      if (outIdx + 2 >= endIdx) break;
      outU8Array[outIdx++] = 0xE0 | (u >> 12);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else if (u <= 0x1FFFFF) {
      if (outIdx + 3 >= endIdx) break;
      outU8Array[outIdx++] = 0xF0 | (u >> 18);
      outU8Array[outIdx++] = 0x80 | ((u >> 12) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else if (u <= 0x3FFFFFF) {
      if (outIdx + 4 >= endIdx) break;
      outU8Array[outIdx++] = 0xF8 | (u >> 24);
      outU8Array[outIdx++] = 0x80 | ((u >> 18) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 12) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else {
      if (outIdx + 5 >= endIdx) break;
      outU8Array[outIdx++] = 0xFC | (u >> 30);
      outU8Array[outIdx++] = 0x80 | ((u >> 24) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 18) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 12) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    }
  }
  // Null-terminate the pointer to the buffer.
  outU8Array[outIdx] = 0;
  return outIdx - startIdx;
}
Module["stringToUTF8Array"] = stringToUTF8Array;

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF8 form. The copy will require at most str.length*4+1 bytes of space in the HEAP.
// Use the function lengthBytesUTF8() to compute the exact number of bytes (excluding null terminator) that this function will write.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF8(str, outPtr, maxBytesToWrite) {
  assert(typeof maxBytesToWrite == 'number', 'stringToUTF8(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!');
  return stringToUTF8Array(str, HEAPU8,outPtr, maxBytesToWrite);
}
Module["stringToUTF8"] = stringToUTF8;

// Returns the number of bytes the given Javascript string takes if encoded as a UTF8 byte array, EXCLUDING the null terminator byte.

function lengthBytesUTF8(str) {
  var len = 0;
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! So decode UTF16->UTF32->UTF8.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    var u = str.charCodeAt(i); // possibly a lead surrogate
    if (u >= 0xD800 && u <= 0xDFFF) u = 0x10000 + ((u & 0x3FF) << 10) | (str.charCodeAt(++i) & 0x3FF);
    if (u <= 0x7F) {
      ++len;
    } else if (u <= 0x7FF) {
      len += 2;
    } else if (u <= 0xFFFF) {
      len += 3;
    } else if (u <= 0x1FFFFF) {
      len += 4;
    } else if (u <= 0x3FFFFFF) {
      len += 5;
    } else {
      len += 6;
    }
  }
  return len;
}
Module["lengthBytesUTF8"] = lengthBytesUTF8;

// Given a pointer 'ptr' to a null-terminated UTF16LE-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.

var UTF16Decoder = typeof TextDecoder !== 'undefined' ? new TextDecoder('utf-16le') : undefined;
function UTF16ToString(ptr) {
  assert(ptr % 2 == 0, 'Pointer passed to UTF16ToString must be aligned to two bytes!');
  var endPtr = ptr;
  // TextDecoder needs to know the byte length in advance, it doesn't stop on null terminator by itself.
  // Also, use the length info to avoid running tiny strings through TextDecoder, since .subarray() allocates garbage.
  var idx = endPtr >> 1;
  while (HEAP16[idx]) ++idx;
  endPtr = idx << 1;

  if (endPtr - ptr > 32 && UTF16Decoder) {
    return UTF16Decoder.decode(HEAPU8.subarray(ptr, endPtr));
  } else {
    var i = 0;

    var str = '';
    while (1) {
      var codeUnit = HEAP16[(((ptr)+(i*2))>>1)];
      if (codeUnit == 0) return str;
      ++i;
      // fromCharCode constructs a character from a UTF-16 code unit, so we can pass the UTF16 string right through.
      str += String.fromCharCode(codeUnit);
    }
  }
}


// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF16 form. The copy will require at most str.length*4+2 bytes of space in the HEAP.
// Use the function lengthBytesUTF16() to compute the exact number of bytes (excluding null terminator) that this function will write.
// Parameters:
//   str: the Javascript string to copy.
//   outPtr: Byte address in Emscripten HEAP where to write the string to.
//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null
//                    terminator, i.e. if maxBytesToWrite=2, only the null terminator will be written and nothing else.
//                    maxBytesToWrite<2 does not write any bytes to the output, not even the null terminator.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF16(str, outPtr, maxBytesToWrite) {
  assert(outPtr % 2 == 0, 'Pointer passed to stringToUTF16 must be aligned to two bytes!');
  assert(typeof maxBytesToWrite == 'number', 'stringToUTF16(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!');
  // Backwards compatibility: if max bytes is not specified, assume unsafe unbounded write is allowed.
  if (maxBytesToWrite === undefined) {
    maxBytesToWrite = 0x7FFFFFFF;
  }
  if (maxBytesToWrite < 2) return 0;
  maxBytesToWrite -= 2; // Null terminator.
  var startPtr = outPtr;
  var numCharsToWrite = (maxBytesToWrite < str.length*2) ? (maxBytesToWrite / 2) : str.length;
  for (var i = 0; i < numCharsToWrite; ++i) {
    // charCodeAt returns a UTF-16 encoded code unit, so it can be directly written to the HEAP.
    var codeUnit = str.charCodeAt(i); // possibly a lead surrogate
    HEAP16[((outPtr)>>1)]=codeUnit;
    outPtr += 2;
  }
  // Null-terminate the pointer to the HEAP.
  HEAP16[((outPtr)>>1)]=0;
  return outPtr - startPtr;
}


// Returns the number of bytes the given Javascript string takes if encoded as a UTF16 byte array, EXCLUDING the null terminator byte.

function lengthBytesUTF16(str) {
  return str.length*2;
}


function UTF32ToString(ptr) {
  assert(ptr % 4 == 0, 'Pointer passed to UTF32ToString must be aligned to four bytes!');
  var i = 0;

  var str = '';
  while (1) {
    var utf32 = HEAP32[(((ptr)+(i*4))>>2)];
    if (utf32 == 0)
      return str;
    ++i;
    // Gotcha: fromCharCode constructs a character from a UTF-16 encoded code (pair), not from a Unicode code point! So encode the code point to UTF-16 for constructing.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    if (utf32 >= 0x10000) {
      var ch = utf32 - 0x10000;
      str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));
    } else {
      str += String.fromCharCode(utf32);
    }
  }
}


// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF32 form. The copy will require at most str.length*4+4 bytes of space in the HEAP.
// Use the function lengthBytesUTF32() to compute the exact number of bytes (excluding null terminator) that this function will write.
// Parameters:
//   str: the Javascript string to copy.
//   outPtr: Byte address in Emscripten HEAP where to write the string to.
//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null
//                    terminator, i.e. if maxBytesToWrite=4, only the null terminator will be written and nothing else.
//                    maxBytesToWrite<4 does not write any bytes to the output, not even the null terminator.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF32(str, outPtr, maxBytesToWrite) {
  assert(outPtr % 4 == 0, 'Pointer passed to stringToUTF32 must be aligned to four bytes!');
  assert(typeof maxBytesToWrite == 'number', 'stringToUTF32(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!');
  // Backwards compatibility: if max bytes is not specified, assume unsafe unbounded write is allowed.
  if (maxBytesToWrite === undefined) {
    maxBytesToWrite = 0x7FFFFFFF;
  }
  if (maxBytesToWrite < 4) return 0;
  var startPtr = outPtr;
  var endPtr = startPtr + maxBytesToWrite - 4;
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    var codeUnit = str.charCodeAt(i); // possibly a lead surrogate
    if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) {
      var trailSurrogate = str.charCodeAt(++i);
      codeUnit = 0x10000 + ((codeUnit & 0x3FF) << 10) | (trailSurrogate & 0x3FF);
    }
    HEAP32[((outPtr)>>2)]=codeUnit;
    outPtr += 4;
    if (outPtr + 4 > endPtr) break;
  }
  // Null-terminate the pointer to the HEAP.
  HEAP32[((outPtr)>>2)]=0;
  return outPtr - startPtr;
}


// Returns the number of bytes the given Javascript string takes if encoded as a UTF16 byte array, EXCLUDING the null terminator byte.

function lengthBytesUTF32(str) {
  var len = 0;
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    var codeUnit = str.charCodeAt(i);
    if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) ++i; // possibly a lead surrogate, so skip over the tail surrogate.
    len += 4;
  }

  return len;
}


function demangle(func) {
  var hasLibcxxabi = !!Module['___cxa_demangle'];
  if (hasLibcxxabi) {
    try {
      var s = func.substr(1);
      var len = lengthBytesUTF8(s)+1;
      var buf = _malloc(len);
      stringToUTF8(s, buf, len);
      var status = _malloc(4);
      var ret = Module['___cxa_demangle'](buf, 0, 0, status);
      if (getValue(status, 'i32') === 0 && ret) {
        return Pointer_stringify(ret);
      }
      // otherwise, libcxxabi failed
    } catch(e) {
      // ignore problems here
    } finally {
      if (buf) _free(buf);
      if (status) _free(status);
      if (ret) _free(ret);
    }
    // failure when using libcxxabi, don't demangle
    return func;
  }
  Runtime.warnOnce('warning: build with  -s DEMANGLE_SUPPORT=1  to link in libcxxabi demangling');
  return func;
}

function demangleAll(text) {
  return text.replace(/__Z[\w\d_]+/g, function(x) { var y = demangle(x); return x === y ? x : (x + ' [' + y + ']') });
}

function jsStackTrace() {
  var err = new Error();
  if (!err.stack) {
    // IE10+ special cases: It does have callstack info, but it is only populated if an Error object is thrown,
    // so try that as a special-case.
    try {
      throw new Error(0);
    } catch(e) {
      err = e;
    }
    if (!err.stack) {
      return '(no stack trace available)';
    }
  }
  return err.stack.toString();
}

function stackTrace() {
  var js = jsStackTrace();
  if (Module['extraStackTrace']) js += '\n' + Module['extraStackTrace']();
  return demangleAll(js);
}
Module["stackTrace"] = stackTrace;

// Memory management

var PAGE_SIZE = 4096;

function alignMemoryPage(x) {
  if (x % 4096 > 0) {
    x += (4096 - (x % 4096));
  }
  return x;
}

var HEAP;
var buffer;
var HEAP8, HEAPU8, HEAP16, HEAPU16, HEAP32, HEAPU32, HEAPF32, HEAPF64;

function updateGlobalBuffer(buf) {
  Module['buffer'] = buffer = buf;
}

function updateGlobalBufferViews() {
  Module['HEAP8'] = HEAP8 = new Int8Array(buffer);
  Module['HEAP16'] = HEAP16 = new Int16Array(buffer);
  Module['HEAP32'] = HEAP32 = new Int32Array(buffer);
  Module['HEAPU8'] = HEAPU8 = new Uint8Array(buffer);
  Module['HEAPU16'] = HEAPU16 = new Uint16Array(buffer);
  Module['HEAPU32'] = HEAPU32 = new Uint32Array(buffer);
  Module['HEAPF32'] = HEAPF32 = new Float32Array(buffer);
  Module['HEAPF64'] = HEAPF64 = new Float64Array(buffer);
}

var STATIC_BASE, STATICTOP, staticSealed; // static area
var STACK_BASE, STACKTOP, STACK_MAX; // stack area
var DYNAMIC_BASE, DYNAMICTOP_PTR; // dynamic area handled by sbrk

  STATIC_BASE = STATICTOP = STACK_BASE = STACKTOP = STACK_MAX = DYNAMIC_BASE = DYNAMICTOP_PTR = 0;
  staticSealed = false;


// Initializes the stack cookie. Called at the startup of main and at the startup of each thread in pthreads mode.
function writeStackCookie() {
  assert((STACK_MAX & 3) == 0);
  HEAPU32[(STACK_MAX >> 2)-1] = 0x02135467;
  HEAPU32[(STACK_MAX >> 2)-2] = 0x89BACDFE;
}

function checkStackCookie() {
  if (HEAPU32[(STACK_MAX >> 2)-1] != 0x02135467 || HEAPU32[(STACK_MAX >> 2)-2] != 0x89BACDFE) {
    abort('Stack overflow! Stack cookie has been overwritten, expected hex dwords 0x89BACDFE and 0x02135467, but received 0x' + HEAPU32[(STACK_MAX >> 2)-2].toString(16) + ' ' + HEAPU32[(STACK_MAX >> 2)-1].toString(16));
  }
  // Also test the global address 0 for integrity. This check is not compatible with SAFE_SPLIT_MEMORY though, since that mode already tests all address 0 accesses on its own.
  if (HEAP32[0] !== 0x63736d65 /* 'emsc' */) throw 'Runtime error: The application has corrupted its heap memory area (address zero)!';
}

function abortStackOverflow(allocSize) {
  abort('Stack overflow! Attempted to allocate ' + allocSize + ' bytes on the stack, but stack has only ' + (STACK_MAX - asm.stackSave() + allocSize) + ' bytes available!');
}

function abortOnCannotGrowMemory() {
  abort('Cannot enlarge memory arrays. Either (1) compile with  -s TOTAL_MEMORY=X  with X higher than the current value ' + TOTAL_MEMORY + ', (2) compile with  -s ALLOW_MEMORY_GROWTH=1  which adjusts the size at runtime but prevents some optimizations, (3) set Module.TOTAL_MEMORY to a higher value before the program runs, or if you want malloc to return NULL (0) instead of this abort, compile with  -s ABORTING_MALLOC=0 ');
}


function enlargeMemory() {
  abortOnCannotGrowMemory();
}


var TOTAL_STACK = Module['TOTAL_STACK'] || 5242880;
var TOTAL_MEMORY = Module['TOTAL_MEMORY'] || 16777216;

var WASM_PAGE_SIZE = 64 * 1024;

var totalMemory = WASM_PAGE_SIZE;
while (totalMemory < TOTAL_MEMORY || totalMemory < 2*TOTAL_STACK) {
  if (totalMemory < 16*1024*1024) {
    totalMemory *= 2;
  } else {
    totalMemory += 16*1024*1024;
  }
}
if (totalMemory !== TOTAL_MEMORY) {
  Module.printErr('increasing TOTAL_MEMORY to ' + totalMemory + ' to be compliant with the asm.js spec (and given that TOTAL_STACK=' + TOTAL_STACK + ')');
  TOTAL_MEMORY = totalMemory;
}

// Initialize the runtime's memory
// check for full engine support (use string 'subarray' to avoid closure compiler confusion)
assert(typeof Int32Array !== 'undefined' && typeof Float64Array !== 'undefined' && !!(new Int32Array(1)['subarray']) && !!(new Int32Array(1)['set']),
       'JS engine does not provide full typed array support');



// Use a provided buffer, if there is one, or else allocate a new one
if (Module['buffer']) {
  buffer = Module['buffer'];
  assert(buffer.byteLength === TOTAL_MEMORY, 'provided buffer should be ' + TOTAL_MEMORY + ' bytes, but it is ' + buffer.byteLength);
} else {
  // Use a WebAssembly memory where available
  {
    buffer = new ArrayBuffer(TOTAL_MEMORY);
  }
  assert(buffer.byteLength === TOTAL_MEMORY);
}
updateGlobalBufferViews();


function getTotalMemory() {
  return TOTAL_MEMORY;
}

// Endianness check (note: assumes compiler arch was little-endian)
  HEAP32[0] = 0x63736d65; /* 'emsc' */
HEAP16[1] = 0x6373;
if (HEAPU8[2] !== 0x73 || HEAPU8[3] !== 0x63) throw 'Runtime error: expected the system to be little-endian!';

Module['HEAP'] = HEAP;
Module['buffer'] = buffer;
Module['HEAP8'] = HEAP8;
Module['HEAP16'] = HEAP16;
Module['HEAP32'] = HEAP32;
Module['HEAPU8'] = HEAPU8;
Module['HEAPU16'] = HEAPU16;
Module['HEAPU32'] = HEAPU32;
Module['HEAPF32'] = HEAPF32;
Module['HEAPF64'] = HEAPF64;

function callRuntimeCallbacks(callbacks) {
  while(callbacks.length > 0) {
    var callback = callbacks.shift();
    if (typeof callback == 'function') {
      callback();
      continue;
    }
    var func = callback.func;
    if (typeof func === 'number') {
      if (callback.arg === undefined) {
        Runtime.dynCall('v', func);
      } else {
        Runtime.dynCall('vi', func, [callback.arg]);
      }
    } else {
      func(callback.arg === undefined ? null : callback.arg);
    }
  }
}

var __ATPRERUN__  = []; // functions called before the runtime is initialized
var __ATINIT__    = []; // functions called during startup
var __ATMAIN__    = []; // functions called when main() is to be run
var __ATEXIT__    = []; // functions called during shutdown
var __ATPOSTRUN__ = []; // functions called after the runtime has exited

var runtimeInitialized = false;
var runtimeExited = false;


function preRun() {
  // compatibility - merge in anything from Module['preRun'] at this time
  if (Module['preRun']) {
    if (typeof Module['preRun'] == 'function') Module['preRun'] = [Module['preRun']];
    while (Module['preRun'].length) {
      addOnPreRun(Module['preRun'].shift());
    }
  }
  callRuntimeCallbacks(__ATPRERUN__);
}

function ensureInitRuntime() {
  checkStackCookie();
  if (runtimeInitialized) return;
  runtimeInitialized = true;
  callRuntimeCallbacks(__ATINIT__);
}

function preMain() {
  checkStackCookie();
  callRuntimeCallbacks(__ATMAIN__);
}

function exitRuntime() {
  checkStackCookie();
  callRuntimeCallbacks(__ATEXIT__);
  runtimeExited = true;
}

function postRun() {
  checkStackCookie();
  // compatibility - merge in anything from Module['postRun'] at this time
  if (Module['postRun']) {
    if (typeof Module['postRun'] == 'function') Module['postRun'] = [Module['postRun']];
    while (Module['postRun'].length) {
      addOnPostRun(Module['postRun'].shift());
    }
  }
  callRuntimeCallbacks(__ATPOSTRUN__);
}

function addOnPreRun(cb) {
  __ATPRERUN__.unshift(cb);
}
Module["addOnPreRun"] = addOnPreRun;

function addOnInit(cb) {
  __ATINIT__.unshift(cb);
}
Module["addOnInit"] = addOnInit;

function addOnPreMain(cb) {
  __ATMAIN__.unshift(cb);
}
Module["addOnPreMain"] = addOnPreMain;

function addOnExit(cb) {
  __ATEXIT__.unshift(cb);
}
Module["addOnExit"] = addOnExit;

function addOnPostRun(cb) {
  __ATPOSTRUN__.unshift(cb);
}
Module["addOnPostRun"] = addOnPostRun;

// Tools


function intArrayFromString(stringy, dontAddNull, length /* optional */) {
  var len = length > 0 ? length : lengthBytesUTF8(stringy)+1;
  var u8array = new Array(len);
  var numBytesWritten = stringToUTF8Array(stringy, u8array, 0, u8array.length);
  if (dontAddNull) u8array.length = numBytesWritten;
  return u8array;
}
Module["intArrayFromString"] = intArrayFromString;

function intArrayToString(array) {
  var ret = [];
  for (var i = 0; i < array.length; i++) {
    var chr = array[i];
    if (chr > 0xFF) {
      assert(false, 'Character code ' + chr + ' (' + String.fromCharCode(chr) + ')  at offset ' + i + ' not in 0x00-0xFF.');
      chr &= 0xFF;
    }
    ret.push(String.fromCharCode(chr));
  }
  return ret.join('');
}
Module["intArrayToString"] = intArrayToString;

// Deprecated: This function should not be called because it is unsafe and does not provide
// a maximum length limit of how many bytes it is allowed to write. Prefer calling the
// function stringToUTF8Array() instead, which takes in a maximum length that can be used
// to be secure from out of bounds writes.
function writeStringToMemory(string, buffer, dontAddNull) {
  Runtime.warnOnce('writeStringToMemory is deprecated and should not be called! Use stringToUTF8() instead!');

  var lastChar, end;
  if (dontAddNull) {
    // stringToUTF8Array always appends null. If we don't want to do that, remember the
    // character that existed at the location where the null will be placed, and restore
    // that after the write (below).
    end = buffer + lengthBytesUTF8(string);
    lastChar = HEAP8[end];
  }
  stringToUTF8(string, buffer, Infinity);
  if (dontAddNull) HEAP8[end] = lastChar; // Restore the value under the null character.
}
Module["writeStringToMemory"] = writeStringToMemory;

function writeArrayToMemory(array, buffer) {
  HEAP8.set(array, buffer);    
}
Module["writeArrayToMemory"] = writeArrayToMemory;

function writeAsciiToMemory(str, buffer, dontAddNull) {
  for (var i = 0; i < str.length; ++i) {
    assert(str.charCodeAt(i) === str.charCodeAt(i)&0xff);
    HEAP8[((buffer++)>>0)]=str.charCodeAt(i);
  }
  // Null-terminate the pointer to the HEAP.
  if (!dontAddNull) HEAP8[((buffer)>>0)]=0;
}
Module["writeAsciiToMemory"] = writeAsciiToMemory;

function unSign(value, bits, ignore) {
  if (value >= 0) {
    return value;
  }
  return bits <= 32 ? 2*Math.abs(1 << (bits-1)) + value // Need some trickery, since if bits == 32, we are right at the limit of the bits JS uses in bitshifts
                    : Math.pow(2, bits)         + value;
}
function reSign(value, bits, ignore) {
  if (value <= 0) {
    return value;
  }
  var half = bits <= 32 ? Math.abs(1 << (bits-1)) // abs is needed if bits == 32
                        : Math.pow(2, bits-1);
  if (value >= half && (bits <= 32 || value > half)) { // for huge values, we can hit the precision limit and always get true here. so don't do that
                                                       // but, in general there is no perfect solution here. With 64-bit ints, we get rounding and errors
                                                       // TODO: In i64 mode 1, resign the two parts separately and safely
    value = -2*half + value; // Cannot bitshift half, as it may be at the limit of the bits JS uses in bitshifts
  }
  return value;
}


// check for imul support, and also for correctness ( https://bugs.webkit.org/show_bug.cgi?id=126345 )
if (!Math['imul'] || Math['imul'](0xffffffff, 5) !== -5) Math['imul'] = function imul(a, b) {
  var ah  = a >>> 16;
  var al = a & 0xffff;
  var bh  = b >>> 16;
  var bl = b & 0xffff;
  return (al*bl + ((ah*bl + al*bh) << 16))|0;
};
Math.imul = Math['imul'];

if (!Math['fround']) Math['fround'] = function(x) { return x };

if (!Math['clz32']) Math['clz32'] = function(x) {
  x = x >>> 0;
  for (var i = 0; i < 32; i++) {
    if (x & (1 << (31 - i))) return i;
  }
  return 32;
};
Math.clz32 = Math['clz32']

if (!Math['trunc']) Math['trunc'] = function(x) {
  return x < 0 ? Math.ceil(x) : Math.floor(x);
};
Math.trunc = Math['trunc'];

var Math_abs = Math.abs;
var Math_cos = Math.cos;
var Math_sin = Math.sin;
var Math_tan = Math.tan;
var Math_acos = Math.acos;
var Math_asin = Math.asin;
var Math_atan = Math.atan;
var Math_atan2 = Math.atan2;
var Math_exp = Math.exp;
var Math_log = Math.log;
var Math_sqrt = Math.sqrt;
var Math_ceil = Math.ceil;
var Math_floor = Math.floor;
var Math_pow = Math.pow;
var Math_imul = Math.imul;
var Math_fround = Math.fround;
var Math_round = Math.round;
var Math_min = Math.min;
var Math_clz32 = Math.clz32;
var Math_trunc = Math.trunc;

// A counter of dependencies for calling run(). If we need to
// do asynchronous work before running, increment this and
// decrement it. Incrementing must happen in a place like
// PRE_RUN_ADDITIONS (used by emcc to add file preloading).
// Note that you can add dependencies in preRun, even though
// it happens right before run - run will be postponed until
// the dependencies are met.
var runDependencies = 0;
var runDependencyWatcher = null;
var dependenciesFulfilled = null; // overridden to take different actions when all run dependencies are fulfilled
var runDependencyTracking = {};

function getUniqueRunDependency(id) {
  var orig = id;
  while (1) {
    if (!runDependencyTracking[id]) return id;
    id = orig + Math.random();
  }
  return id;
}

function addRunDependency(id) {
  runDependencies++;
  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }
  if (id) {
    assert(!runDependencyTracking[id]);
    runDependencyTracking[id] = 1;
    if (runDependencyWatcher === null && typeof setInterval !== 'undefined') {
      // Check for missing dependencies every few seconds
      runDependencyWatcher = setInterval(function() {
        if (ABORT) {
          clearInterval(runDependencyWatcher);
          runDependencyWatcher = null;
          return;
        }
        var shown = false;
        for (var dep in runDependencyTracking) {
          if (!shown) {
            shown = true;
            Module.printErr('still waiting on run dependencies:');
          }
          Module.printErr('dependency: ' + dep);
        }
        if (shown) {
          Module.printErr('(end of list)');
        }
      }, 10000);
    }
  } else {
    Module.printErr('warning: run dependency added without ID');
  }
}
Module["addRunDependency"] = addRunDependency;

function removeRunDependency(id) {
  runDependencies--;
  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }
  if (id) {
    assert(runDependencyTracking[id]);
    delete runDependencyTracking[id];
  } else {
    Module.printErr('warning: run dependency removed without ID');
  }
  if (runDependencies == 0) {
    if (runDependencyWatcher !== null) {
      clearInterval(runDependencyWatcher);
      runDependencyWatcher = null;
    }
    if (dependenciesFulfilled) {
      var callback = dependenciesFulfilled;
      dependenciesFulfilled = null;
      callback(); // can add another dependenciesFulfilled
    }
  }
}
Module["removeRunDependency"] = removeRunDependency;

Module["preloadedImages"] = {}; // maps url to image data
Module["preloadedAudios"] = {}; // maps url to audio data



var memoryInitializer = null;





// === Body ===

var ASM_CONSTS = [function($0, $1) { WEBPLATFORM.rs_refs[$0].insertAdjacentHTML('beforeEnd', UTF8ToString($1)); },
 function($0) { var value = document.createElement(UTF8ToString($0));if (!value) {return -1;}return WEBPLATFORM.rs_refs.push(value) - 1; },
 function($0, $1) { WEBPLATFORM.rs_refs[$0].appendChild(WEBPLATFORM.rs_refs[$1]); },
 function($0) { WEBPLATFORM.rs_refs[$0].click(); },
 function($0, $1) { WEBPLATFORM.rs_refs[$0].removeChild(WEBPLATFORM.rs_refs[$1]); },
 function() { console.log('hi');window.WEBPLATFORM || (window.WEBPLATFORM = {rs_refs: [],}); },
 function($0, $1, $2) { window.setInterval(function (e) {Runtime.dynCall('vi', $2, [$1]);}, $0); },
 function($0, $1, $2, $3, $4) { WEBPLATFORM.rs_refs[$0].addEventListener(UTF8ToString($1), function (e) {Runtime.dynCall('viii', $3, [$2, $4, e.target ? WEBPLATFORM.rs_refs.push(e.target) - 1 : -1]);}, false); },
 function($0, $1, $2) { WEBPLATFORM.rs_refs[$0][UTF8ToString($1)] = UTF8ToString($2); },
 function($0, $1) { WEBPLATFORM.rs_refs[$0].style.cssText = UTF8ToString($1); },
 function($0) { var value = document.querySelector(UTF8ToString($0));if (!value) {return -1;}return WEBPLATFORM.rs_refs.push(value) - 1; }];

function _emscripten_asm_const_ii(code, a0) {
 return ASM_CONSTS[code](a0);
}

function _emscripten_asm_const_i(code) {
 return ASM_CONSTS[code]();
}

function _emscripten_asm_const_iiii(code, a0, a1, a2) {
 return ASM_CONSTS[code](a0, a1, a2);
}

function _emscripten_asm_const_iii(code, a0, a1) {
 return ASM_CONSTS[code](a0, a1);
}

function _emscripten_asm_const_iiiiii(code, a0, a1, a2, a3, a4) {
 return ASM_CONSTS[code](a0, a1, a2, a3, a4);
}



STATIC_BASE = 8;

STATICTOP = STATIC_BASE + 28336;
  /* global initializers */  __ATINIT__.push();
  

/* memory initializer */ allocate([1,0,0,0,16,0,0,0,4,0,0,0,2,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,8,0,0,0,4,0,0,0,5,0,0,0,6,0,0,0,0,0,0,0,7,0,0,0,16,0,0,0,4,0,0,0,8,0,0,0,9,0,0,0,0,0,0,0,7,0,0,0,24,0,0,0,4,0,0,0,10,0,0,0,11,0,0,0,0,0,0,0,7,0,0,0,20,0,0,0,4,0,0,0,12,0,0,0,13,0,0,0,0,0,0,0,7,0,0,0,20,0,0,0,4,0,0,0,14,0,0,0,15,0,0,0,0,0,0,0,7,0,0,0,12,0,0,0,4,0,0,0,16,0,0,0,17,0,0,0,0,0,0,0,7,0,0,0,20,0,0,0,4,0,0,0,18,0,0,0,19,0,0,0,0,0,0,0,7,0,0,0,8,0,0,0,4,0,0,0,20,0,0,0,21,0,0,0,22,0,0,0,23,0,0,0,0,0,0,0,7,0,0,0,8,0,0,0,4,0,0,0,24,0,0,0,25,0,0,0,26,0,0,0,7,0,0,0,4,0,0,0,4,0,0,0,27,0,0,0,28,0,0,0,29,0,0,0,30,0,0,0,0,0,0,0,7,0,0,0,4,0,0,0,4,0,0,0,31,0,0,0,32,0,0,0,33,0,0,0,7,0,0,0,4,0,0,0,4,0,0,0,34,0,0,0,35,0,0,0,80,0,0,0,4,0,0,0,36,0,0,0,37,0,0,0,38,0,0,0,39,0,0,0,80,0,0,0,4,0,0,0,40,0,0,0,41,0,0,0,42,0,0,0,43,0,0,0,72,0,0,0,4,0,0,0,44,0,0,0,45,0,0,0,46,0,0,0,47,0,0,0,96,0,0,0,4,0,0,0,48,0,0,0,49,0,0,0,50,0,0,0,51,0,0,0,32,0,0,0,4,0,0,0,52,0,0,0,53,0,0,0,54,0,0,0,55,0,0,0,56,0,0,0,4,0,0,0,56,0,0,0,57,0,0,0,58,0,0,0,59,0,0,0,32,0,0,0,4,0,0,0,60,0,0,0,61,0,0,0,62,0,0,0,63,0,0,0,56,0,0,0,4,0,0,0,64,0,0,0,65,0,0,0,66,0,0,0,67,0,0,0,32,0,0,0,4,0,0,0,68,0,0,0,69,0,0,0,70,0,0,0,71,0,0,0,88,0,0,0,4,0,0,0,72,0,0,0,73,0,0,0,0,0,0,0,74,0,0,0,88,0,0,0,4,0,0,0,75,0,0,0,76,0,0,0,0,0,0,0,77,0,0,0,52,0,0,0,4,0,0,0,78,0,0,0,79,0,0,0,0,0,0,0,7,0,0,0,1,0,0,0,1,0,0,0,80,0,0,0,81,0,0,0,0,0,0,0,7,0,0,0,1,0,0,0,1,0,0,0,82,0,0,0,83,0,0,0,0,0,0,0,7,0,0,0,1,0,0,0,1,0,0,0,84,0,0,0,85,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,1,0,0,0,86,0,0,0,87,0,0,0,16,0,0,0,4,0,0,0,88,0,0,0,89,0,0,0,90,0,0,0,7,0,0,0,8,0,0,0,4,0,0,0,91,0,0,0,92,0,0,0,12,0,0,0,4,0,0,0,93,0,0,0,7,0,0,0,8,0,0,0,4,0,0,0,94,0,0,0,95,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,1,0,0,0,96,0,0,0,7,0,0,0,0,0,0,0,1,0,0,0,97,0,0,0,98,0,0,0,128,0,0,0,4,0,0,0,99,0,0,0,100,0,0,0,101,0,0,0,102,0,0,0,0,0,0,0,7,0,0,0,4,0,0,0,4,0,0,0,103,0,0,0,104,0,0,0,105,0,0,0,7,0,0,0,8,0,0,0,4,0,0,0,106,0,0,0,107,0,0,0,108,0,0,0,109,0,0,0,110,0,0,0,111,0,0,0,112,0,0,0,113,0,0,0,114,0,0,0,115,0,0,0,0,0,0,0,7,0,0,0,4,0,0,0,4,0,0,0,116,0,0,0,117,0,0,0,118,0,0,0,119,0,0,0,120,0,0,0,121,0,0,0,122,0,0,0,123,0,0,0,124,0,0,0,125,0,0,0,0,0,0,0,7,0,0,0,8,0,0,0,4,0,0,0,126,0,0,0,127,0,0,0,0,0,0,0,7,0,0,0,16,0,0,0,4,0,0,0,128,0,0,0,129,0,0,0,0,0,0,0,130,0,0,0,4,0,0,0,4,0,0,0,131,0,0,0,132,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,1,0,0,0,133,0,0,0,134,0,0,0,248,0,0,0,8,0,0,0,135,0,0,0,136,0,0,0,137,0,0,0,138,0,0,0,139,0,0,0,140,0,0,0,141,0,0,0,142,0,0,0,0,0,0,0,143,0,0,0,4,0,0,0,4,0,0,0,144,0,0,0,143,0,0,0,4,0,0,0,4,0,0,0,145,0,0,0,143,0,0,0,4,0,0,0,4,0,0,0,146,0,0,0,143,0,0,0,4,0,0,0,4,0,0,0,147,0,0,0,0,0,0,0,0,0,240,63,0,0,0,0,0,0,0,0,196,178,252,109,13,148,238,63,221,133,222,201,68,221,210,63,226,202,250,73,140,112,234,63,43,47,92,202,183,6,226,63,114,119,140,225,160,243,227,63,55,170,178,115,195,4,233,63,212,98,50,77,191,97,215,63,97,142,30,191,183,201,237,63,58,191,147,220,130,33,179,63,53,77,142,241,23,233,239,63,194,67,131,218,144,123,204,191,81,11,45,4,156,50,239,63,0,0,0,0,0,0,224,191,145,43,80,230,122,182,235,63,27,126,253,49,41,117,231,191,99,200,61,159,249,195,229,63,130,166,235,170,188,212,236,191,21,60,100,78,192,196,219,63,149,12,132,141,128,164,239,191,167,144,175,45,209,19,195,63,149,12,132,141,128,164,239,191,167,144,175,45,209,19,195,191,130,166,235,170,188,212,236,191,21,60,100,78,192,196,219,191,27,126,253,49,41,117,231,191,99,200,61,159,249,195,229,191,0,0,0,0,0,0,224,191,145,43,80,230,122,182,235,191,194,67,131,218,144,123,204,191,81,11,45,4,156,50,239,191,58,191,147,220,130,33,179,63,53,77,142,241,23,233,239,191,212,98,50,77,191,97,215,63,97,142,30,191,183,201,237,191,114,119,140,225,160,243,227,63,55,170,178,115,195,4,233,191,226,202,250,73,140,112,234,63,43,47,92,202,183,6,226,191,196,178,252,109,13,148,238,63,221,133,222,201,68,221,210,191,149,0,0,0,8,0,0,0,4,0,0,0,150,0,0,0,151,0,0,0,4,0,0,0,4,0,0,0,152,0,0,0,153,0,0,0,154,0,0,0,155,0,0,0,12,0,0,0,4,0,0,0,156,0,0,0,151,0,0,0,4,0,0,0,4,0,0,0,158,0,0,0,159,0,0,0,160,0,0,0,161,0,0,0,0,0,0,0,162,0,0,0,16,0,0,0,4,0,0,0,163,0,0,0,164,0,0,0,165,0,0,0,166,0,0,0,12,0,0,0,4,0,0,0,167,0,0,0,168,0,0,0,169,0,0,0,170,0,0,0,171,0,0,0,151,0,0,0,4,0,0,0,4,0,0,0,172,0,0,0,151,0,0,0,4,0,0,0,4,0,0,0,173,0,0,0,174,0,0,0,175,0,0,0,151,0,0,0,4,0,0,0,4,0,0,0,176,0,0,0,151,0,0,0,4,0,0,0,4,0,0,0,177,0,0,0,151,0,0,0,4,0,0,0,4,0,0,0,178,0,0,0,151,0,0,0,8,0,0,0,4,0,0,0,181,0,0,0,151,0,0,0,4,0,0,0,4,0,0,0,182,0,0,0,151,0,0,0,4,0,0,0,4,0,0,0,183,0,0,0,155,0,0,0,12,0,0,0,4,0,0,0,184,0,0,0,185,0,0,0,4,0,0,0,4,0,0,0,186,0,0,0,151,0,0,0,4,0,0,0,4,0,0,0,187,0,0,0,151,0,0,0,4,0,0,0,4,0,0,0,188,0,0,0,190,0,0,0,4,0,0,0,4,0,0,0,191,0,0,0,192,0,0,0,193,0,0,0,190,0,0,0,4,0,0,0,4,0,0,0,194,0,0,0,190,0,0,0,4,0,0,0,4,0,0,0,195,0,0,0,190,0,0,0,4,0,0,0,4,0,0,0,196,0,0,0,0,0,0,0,0,0,255,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,3,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,2,0,2,3,0,0,0,0,4,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,3,2,0,0,0,0,6,0,2,0,0,7,0,0,2,8,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,1,0,0,0,0,0,0,0,2,4,0,0,12,0,2,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,136,13,0,0,13,0,0,0,0,1,2,3,3,3,4,3,3,3,3,3,3,5,6,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,26,84,0,0,192,1,0,0,240,13,0,0,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,192,255,0,0,0,0,255,3,0,0,0,0,0,0,0,0,255,3,0,0,255,3,0,0,0,0,0,0,0,0,0,0,0,192,1,0,192,255,0,0,0,0,0,0,255,3,255,3,0,0,0,0,0,0,0,0,0,0,255,3,0,0,0,0,255,255,255,255,231,1,0,0,0,0,0,0,128,0,0,0,254,3,0,7,0,0,255,3,0,0,255,3,0,0,0,0,0,0,0,0,255,255,255,255,255,255,31,0,2,4,0,0,0,0,0,0,0,0,62,0,0,0,0,0,0,0,0,0,255,3,0,0,0,0,0,0,192,255,0,0,0,0,0,0,0,0,255,3,0,0,0,0,0,0,192,255,0,0,255,3,0,0,0,0,255,3,0,0,0,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,255,127,0,0,0,192,255,255,255,255,255,255,223,69,26,61,3,207,26,230,193,251,204,254,0,0,0,0,202,198,154,199,23,254,112,171,220,251,212,254,0,0,0,0,79,220,188,190,252,177,119,255,246,251,220,254,0,0,0,0,12,214,107,65,239,145,86,190,17,252,228,254,0,0,0,0,60,252,127,144,173,31,208,141,44,252,236,254,0,0,0,0,131,154,85,49,40,92,81,211,70,252,244,254,0,0,0,0,181,201,166,173,143,172,113,157,97,252,252,254,0,0,0,0,203,139,238,35,119,34,156,234,123,252,4,255,0,0,0,0,109,83,120,64,145,73,204,174,150,252,12,255,0,0,0,0,87,206,182,93,121,18,60,130,177,252,20,255,0,0,0,0,55,86,251,77,54,148,16,194,203,252,28,255,0,0,0,0,79,152,72,56,111,234,150,144,230,252,36,255,0,0,0,0,199,58,130,37,203,133,116,215,0,253,44,255,0,0,0,0,244,151,191,151,205,207,134,160,27,253,52,255,0,0,0,0,229,172,42,23,152,10,52,239,53,253,60,255,0,0,0,0,142,178,53,42,251,103,56,178,80,253,68,255,0,0,0,0,59,63,198,210,223,212,200,132,107,253,76,255,0,0,0,0,186,205,211,26,39,68,221,197,133,253,84,255,0,0,0,0,150,201,37,187,206,159,107,147,160,253,92,255,0,0,0,0,132,165,98,125,36,108,172,219,186,253,100,255,0,0,0,0,246,218,95,13,88,102,171,163,213,253,108,255,0,0,0,0,38,241,195,222,147,248,226,243,239,253,116,255,0,0,0,0,184,128,255,170,168,173,181,181,10,254,124,255,0,0,0,0,139,74,124,108,5,95,98,135,37,254,132,255,0,0,0,0,83,48,193,52,96,255,188,201,63,254,140,255,0,0,0,0,85,38,186,145,140,133,78,150,90,254,148,255,0,0,0,0,189,126,41,112,36,119,249,223,116,254,156,255,0,0,0,0,143,184,229,184,159,189,223,166,143,254,164,255,0,0,0,0,148,125,116,136,207,95,169,248,169,254,172,255,0,0,0,0,207,155,168,143,147,112,68,185,196,254,180,255,0,0,0,0,107,21,15,191,248,240,8,138,223,254,188,255,0,0,0,0,182,49,49,101,85,37,176,205,249,254,196,255,0,0,0,0,172,127,123,208,198,226,63,153,20,255,204,255,0,0,0,0,6,59,43,42,196,16,92,228,46,255,212,255,0,0,0,0,211,146,115,105,153,36,36,170,73,255,220,255,0,0,0,0,14,202,0,131,242,181,135,253,99,255,228,255,0,0,0,0,235,26,17,146,100,8,229,188,126,255,236,255,0,0,0,0,204,136,80,111,9,204,188,140,153,255,244,255,0,0,0,0,44,101,25,226,88,23,183,209,179,255,252,255,0,0,0,0,0,0,0,0,0,0,64,156,206,255,4,0,0,0,0,0,0,0,0,0,16,165,212,232,232,255,12,0,0,0,0,0,0,0,98,172,197,235,120,173,3,0,20,0,0,0,0,0,132,9,148,248,120,57,63,129,30,0,28,0,0,0,0,0,179,21,7,201,123,206,151,192,56,0,36,0,0,0,0,0,112,92,234,123,206,50,126,143,83,0,44,0,0,0,0,0,104,128,233,171,164,56,210,213,109,0,52,0,0,0,0,0,69,34,154,23,38,39,79,159,136,0,60,0,0,0,0,0,39,251,196,212,49,162,99,237,162,0,68,0,0,0,0,0,168,173,200,140,56,101,222,176,189,0,76,0,0,0,0,0,219,101,171,26,142,8,199,131,216,0,84,0,0,0,0,0,154,29,113,66,249,29,93,196,242,0,92,0,0,0,0,0,88,231,27,166,44,105,77,146,13,1,100,0,0,0,0,0,234,141,112,26,100,238,1,218,39,1,108,0,0,0,0,0,74,119,239,154,153,163,109,162,66,1,116,0,0,0,0,0,133,107,125,180,123,120,9,242,92,1,124,0,0,0,0,0,119,24,221,121,161,228,84,180,119,1,132,0,0,0,0,0,194,197,155,91,146,134,91,134,146,1,140,0,0,0,0,0,61,93,150,200,197,83,53,200,172,1,148,0,0,0,0,0,179,160,151,250,92,180,42,149,199,1,156,0,0,0,0,0,227,95,160,153,189,159,70,222,225,1,164,0,0,0,0,0,37,140,57,219,52,194,155,165,252,1,172,0,0,0,0,0,92,159,152,163,114,154,198,246,22,2,180,0,0,0,0,0,206,190,233,84,83,191,220,183,49,2,188,0,0,0,0,0,226,65,34,242,23,243,252,136,76,2,196,0,0,0,0,0,165,120,92,211,155,206,32,204,102,2,204,0,0,0,0,0,223,83,33,123,243,90,22,152,129,2,212,0,0,0,0,0,58,48,31,151,220,181,160,226,155,2,220,0,0,0,0,0,150,179,227,92,83,209,217,168,182,2,228,0,0,0,0,0,60,68,167,164,217,124,155,251,208,2,236,0,0,0,0,0,16,68,164,167,76,76,118,187,235,2,244,0,0,0,0,0,26,156,64,182,239,142,171,139,6,3,252,0,0,0,0,0,44,132,87,166,16,239,31,208,32,3,4,1,0,0,0,0,41,49,145,233,229,164,16,155,59,3,12,1,0,0,0,0,157,12,156,161,251,155,16,231,85,3,20,1,0,0,0,0,41,244,59,98,217,32,40,172,112,3,28,1,0,0,0,0,133,207,167,122,94,75,68,128,139,3,36,1,0,0,0,0,45,221,172,3,64,228,33,191,165,3,44,1,0,0,0,0,143,255,68,94,47,156,103,142,192,3,52,1,0,0,0,0,65,184,140,156,157,23,51,212,218,3,60,1,0,0,0,0,169,27,227,180,146,219,25,158,245,3,68,1,0,0,0,0,217,119,223,186,110,191,150,235,15,4,76,1,0,0,0,0,198,0,0,0,8,0,0,0,4,0,0,0,199,0,0,0,200,0,0,0,201,0,0,0,198,0,0,0,4,0,0,0,4,0,0,0,202,0,0,0,203,0,0,0,204,0,0,0,198,0,0,0,4,0,0,0,4,0,0,0,205,0,0,0,198,0,0,0,4,0,0,0,4,0,0,0,206,0,0,0,213,39,0,0,57,0,0,0,139,42,0,0,115,0,0,0,219,0,0,0,120,50,0,0,13,0,0,0,133,50,0,0,45,0,0,0,1,0,0,0,0,0,0,0,32,0,0,0,3,0,0,0,8,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,178,50,0,0,5,0,0,0,183,50,0,0,6,0,0,0,189,50,0,0,9,0,0,0,198,50,0,0,3,0,0,0,201,50,0,0,37,0,0,0,238,50,0,0,129,0,0,0,122,0,0,0,111,51,0,0,113,0,0,0,219,0,0,0,224,51,0,0,112,0,0,0,76,0,0,0,80,52,0,0,135,0,0,0,51,0,0,0,215,52,0,0,101,0,0,0,33,1,0,0,60,53,0,0,103,0,0,0,72,0,0,0,244,57,0,0,8,0,0,0,252,57,0,0,4,0,0,0,0,58,0,0,10,0,0,0,76,58,0,0,111,0,0,0,193,0,0,0,76,58,0,0,111,0,0,0,205,0,0,0,187,58,0,0,86,0,0,0,162,1,0,0,17,59,0,0,115,0,0,0,32,1,0,0,132,59,0,0,159,0,0,0,59,0,0,0,35,60,0,0,157,0,0,0,79,0,0,0,35,60,0,0,157,0,0,0,83,0,0,0,192,60,0,0,159,0,0,0,58,0,0,0,192,60,0,0,159,0,0,0,84,0,0,0,95,61,0,0,108,0,0,0,78,0,0,0,95,61,0,0,108,0,0,0,115,0,0,0,203,61,0,0,107,0,0,0,32,0,0,0,203,61,0,0,107,0,0,0,114,0,0,0,203,61,0,0,107,0,0,0,121,0,0,0,54,62,0,0,104,0,0,0,172,0,0,0,54,62,0,0,104,0,0,0,194,0,0,0,54,62,0,0,104,0,0,0,11,1,0,0,54,62,0,0,104,0,0,0,35,1,0,0,54,62,0,0,104,0,0,0,61,1,0,0,54,62,0,0,104,0,0,0,84,1,0,0,54,62,0,0,104,0,0,0,155,1,0,0,54,62,0,0,104,0,0,0,179,1,0,0,54,62,0,0,104,0,0,0,195,1,0,0,158,62,0,0,119,0,0,0,223,0,0,0,158,62,0,0,119,0,0,0,145,1,0,0,21,63,0,0,107,0,0,0,76,0,0,0,21,63,0,0,107,0,0,0,130,0,0,0,128,63,0,0,129,0,0,0,13,0,0,0,1,64,0,0,143,0,0,0,45,0,0,0,144,64,0,0,137,0,0,0,16,0,0,0,25,65,0,0,136,0,0,0,39,0,0,0,0,0,0,0,148,0,0,0,26,66,0,0,98,0,0,0,172,0,0,0,26,66,0,0,98,0,0,0,186,0,0,0,124,66,0,0,112,0,0,0,102,0,0,0,236,66,0,0,43,0,0,0,23,67,0,0,7,0,0,0,58,67,0,0,92,0,0,0,29,0,0,0,51,68,0,0,11,0,0,0,62,68,0,0,2,0,0,0,145,68,0,0,115,0,0,0,118,2,0,0,145,68,0,0,115,0,0,0,122,2,0,0,4,69,0,0,113,0,0,0,51,0,0,0,4,69,0,0,113,0,0,0,28,2,0,0,4,69,0,0,113,0,0,0,192,2,0,0,4,69,0,0,113,0,0,0,193,2,0,0,4,69,0,0,113,0,0,0,8,3,0,0,117,69,0,0,44,0,0,0,161,69,0,0,11,0,0,0,172,69,0,0,2,0,0,0,4,69,0,0,113,0,0,0,57,3,0,0,27,70,0,0,108,0,0,0,54,0,0,0,27,70,0,0,108,0,0,0,59,0,0,0,249,70,0,0,104,0,0,0,56,0,0,0,249,70,0,0,104,0,0,0,58,0,0,0,97,71,0,0,22,0,0,0,92,76,0,0,50,0,0,0,68,72,0,0,43,0,0,0,133,72,0,0,32,0,0,0,111,72,0,0,21,0,0,0,132,72,0,0,1,0,0,0,0,0,0,0,157,0,0,0,253,73,0,0,8,0,0,0,5,74,0,0,15,0,0,0,20,74,0,0,3,0,0,0,23,74,0,0,1,0,0,0,132,72,0,0,1,0,0,0,251,72,0,0,51,0,0,0,236,73,0,0,17,0,0,0,214,73,0,0,22,0,0,0,10,0,0,0,207,73,0,0,2,0,0,0,209,73,0,0,2,0,0,0,211,73,0,0,3,0,0,0,1,0,0,0,0,0,0,0,32,0,0,0,3,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,1,0,0,0,1,0,0,0,32,0,0,0,3,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,198,73,0,0,9,0,0,0,135,70,0,0,114,0,0,0,21,0,0,0,66,74,0,0,116,0,0,0,188,0,0,0,28,75,0,0,103,0,0,0,42,2,0,0,174,69,0,0,109,0,0,0,41,0,0,0,174,69,0,0,109,0,0,0,43,0,0,0,174,69,0,0,109,0,0,0,45,0,0,0,174,69,0,0,109,0,0,0,47,0,0,0,0,0,0,0,179,0,0,0,20,76,0,0,36,0,0,0,56,76,0,0,3,0,0,0,180,75,0,0,96,0,0,0,203,0,0,0,0,0,0,0,180,0,0,0,156,106,0,0,0,0,0,0,142,76,0,0,11,0,0,0,91,73,0,0,1,0,0,0,171,76,0,0,104,0,0,0,98,0,0,0,0,0,0,0,189,0,0,0,175,78,0,0,105,0,0,0,236,0,0,0,138,79,0,0,102,0,0,0,5,1,0,0,138,79,0,0,102,0,0,0,41,1,0,0,2,0,0,0,138,79,0,0,102,0,0,0,84,1,0,0,23,80,0,0,115,0,0,0,55,0,0,0,176,80,0,0,115,0,0,0,51,0,0,0,69,81,0,0,106,0,0,0,82,0,0,0,210,81,0,0,32,0,0,0,242,81,0,0,106,0,0,0,33,0,0,0,92,82,0,0,40,0,0,0,242,81,0,0,106,0,0,0,49,0,0,0,38,83,0,0,36,0,0,0,192,82,0,0,102,0,0,0,0,2,0,0,175,82,0,0,17,0,0,0,192,82,0,0,102,0,0,0,68,2,0,0,197,0,0,0,71,86,0,0,37,0,0,0,218,85,0,0,109,0,0,0,122,2,0,0,108,86,0,0,44,0,0,0,152,86,0,0,11,0,0,0,163,86,0,0,2,0,0,0,165,86,0,0,43,0,0,0,208,86,0,0,100,0,0,0,67,1,0,0,156,106,0,0,0,0,0,0,152,87,0,0,2,0,0,0,253,87,0,0,28,0,0,0,154,87,0,0,99,0,0,0,80,1,0,0,1,0,0,0,10,0,0,0,100,0,0,0,232,3,0,0,16,39,0,0,160,134,1,0,64,66,15,0,128,150,152,0,0,225,245,5,0,202,154,59,0,0,193,111,242,134,35,0,0,0,0,0,129,239,172,133,91,65,109,45,238,4,0,0,0,0,0,0,0,0,0,0,1,31,106,191,100,237,56,110,237,151,167,218,244,249,63,233,3,79,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,62,149,46,9,153,223,3,253,56,21,15,47,228,116,35,236,245,207,211,8,220,4,196,218,176,205,188,25,127,51,166,3,38,31,233,78,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,124,46,152,91,135,211,190,114,159,217,216,135,47,21,18,198,80,222,107,112,110,74,207,15,216,149,213,110,113,178,38,176,102,198,173,36,54,21,29,90,211,66,60,14,84,255,99,192,115,85,204,23,239,249,101,242,40,188,85,247,199,220,128,220,237,110,244,206,239,220,95,247,83,5,0,126,88,0,0,32,0,0,0,158,88,0,0,18,0,0,0,224,89,0,0,6,0,0,0,230,89,0,0,34,0,0,0,129,90,0,0,26,0,0,0,120,89,0,0,104,0,0,0,233,1,0,0,155,90,0,0,29,0,0,0,120,89,0,0,104,0,0,0,233,1,0,0,37,91,0,0,28,0,0,0,8,90,0,0,121,0,0,0,231,0,0,0,239,90,0,0,54,0,0,0,8,90,0,0,121,0,0,0,232,0,0,0,184,90,0,0,55,0,0,0,8,90,0,0,121,0,0,0,233,0,0,0,2,0,0,0,20,0,0,0,200,0,0,0,208,7,0,0,32,78,0,0,64,13,3,0,128,132,30,0,0,45,49,1,0,194,235,11,0,148,53,119,93,91,0,0,22,0,0,0,115,91,0,0,13,0,0,0,65,91,0,0,28,0,0,0,128,91,0,0,120,0,0,0,166,0,0,0,239,90,0,0,54,0,0,0,128,91,0,0,120,0,0,0,169,0,0,0,184,90,0,0,55,0,0,0,128,91,0,0,120,0,0,0,170,0,0,0,186,92,0,0,45,0,0,0,128,91,0,0,120,0,0,0,172,0,0,0,157,92,0,0,29,0,0,0,50,92,0,0,107,0,0,0,84,0,0,0,248,91,0,0,25,0,0,0,128,91,0,0,120,0,0,0,7,1,0,0,65,91,0,0,28,0,0,0,128,91,0,0,120,0,0,0,188,1,0,0,231,92,0,0,36,0,0,0,128,91,0,0,120,0,0,0,189,1,0,0,248,91,0,0,25,0,0,0,128,91,0,0,120,0,0,0,254,1,0,0,17,92,0,0,33,0,0,0,218,85,0,0,109,0,0,0,15,1,0,0,14,93,0,0,31,0,0,0,218,85,0,0,109,0,0,0,16,1,0,0,99,93,0,0,14,0,0,0,113,93,0,0,4,0,0,0,117,93,0,0,16,0,0,0,65,93,0,0,1,0,0,0,224,89,0,0,6,0,0,0,52,93,0,0,8,0,0,0,60,93,0,0,5,0,0,0,65,93,0,0,1,0,0,0,66,93,0,0,33,0,0,0,156,106,0,0,0,0,0,0,234,93,0,0,1,0,0,0,1,0,0,0,0,0,0,0,32,0,0,0,3,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,32,0,0,0,3,0,0,0,4,0,0,0,3,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,156,106,0,0,0,0,0,0,156,106,0,0,0,0,0,0,156,106,0,0,0,0,0,0,156,106,0,0,0,0,0,0,156,106,0,0,0,0,0,0,234,93,0,0,1,0,0,0,152,87,0,0,2,0,0,0,1,0,0,0,0,0,0,0,32,0,0,0,3,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,32,0,0,0,3,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,32,0,0,0,3,0,0,0,4,0,0,0,3,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,156,106,0,0,0,0,0,0,236,93,0,0,1,0,0,0,152,87,0,0,2,0,0,0,156,106,0,0,0,0,0,0,156,106,0,0,0,0,0,0,18,95,0,0,1,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,207,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,208,0,0,0,209,0,0,0,164,106,0,0,0,4,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,168,29,0,0,173,0,120,3,121,3,139,3,141,3,162,3,87,5,88,5,96,5,136,5,144,5,28,6,29,6,221,6,14,7,15,7,75,7,76,7,46,8,47,8,63,8,92,8,93,8,161,8,255,8,120,9,128,9,132,9,141,9,142,9,145,9,146,9,169,9,177,9,186,9,187,9,197,9,198,9,201,9,202,9,222,9,228,9,229,9,4,10,17,10,18,10,41,10,49,10,52,10,55,10,58,10,59,10,61,10,73,10,74,10,93,10,132,10,142,10,146,10,169,10,177,10,180,10,186,10,187,10,198,10,202,10,206,10,207,10,228,10,229,10,4,11,13,11,14,11,17,11,18,11,41,11,49,11,52,11,58,11,59,11,69,11,70,11,73,11,74,11,94,11,100,11,101,11,132,11,145,11,155,11,157,11,201,11,206,11,207,11,4,12,13,12,17,12,41,12,52,12,69,12,73,12,87,12,100,12,101,12,128,12,129,12,132,12,141,12,145,12,169,12,180,12,186,12,187,12,197,12,201,12,223,12,228,12,229,12,240,12,4,13,13,13,17,13,59,13,60,13,69,13,73,13,100,13,101,13,128,13,129,13,132,13,178,13,188,13,190,13,191,13,213,13,215,13,131,14,133,14,134,14,137,14,139,14,140,14,152,14,160,14,164,14,166,14,168,14,169,14,172,14,186,14,190,14,191,14,197,14,199,14,206,14,207,14,218,14,219,14,72,15,152,15,189,15,205,15,198,16,206,16,207,16,73,18,78,18,79,18,87,18,89,18,94,18,95,18,137,18,142,18,143,18,177,18,182,18,183,18,191,18,193,18,198,18,199,18,215,18,17,19,22,19,23,19,91,19,92,19,128,22,13,23,109,23,113,23,222,23,223,23,14,24,15,24,110,25,111,25,28,26,29,26,95,26,125,26,126,26,22,31,23,31,30,31,31,31,70,31,71,31,78,31,79,31,88,31,90,31,92,31,94,31,126,31,127,31,181,31,197,31,212,31,213,31,220,31,240,31,241,31,245,31,114,32,115,32,143,32,0,39,47,44,95,44,38,45,46,45,47,45,167,45,175,45,183,45,191,45,199,45,207,45,215,45,223,45,154,46,64,48,151,48,152,48,143,49,31,50,255,50,143,167,206,169,78,170,79,170,90,170,91,170,7,171,8,171,15,171,16,171,39,171,238,171,239,171,110,250,111,250,55,251,61,251,63,251,66,251,69,251,144,253,145,253,254,253,255,253,83,254,103,254,117,254,200,255,201,255,208,255,209,255,216,255,217,255,231,255,254,255,255,255,0,0,32,0,127,0,34,0,127,3,5,0,40,5,9,0,139,5,4,0,200,5,8,0,235,5,5,0,245,5,17,0,178,7,14,0,251,7,5,0,95,8,65,0,173,8,55,0,179,9,3,0,207,9,8,0,216,9,4,0,252,9,5,0,11,10,4,0,67,10,4,0,78,10,3,0,82,10,7,0,95,10,7,0,118,10,11,0,209,10,15,0,242,10,15,0,78,11,8,0,88,11,4,0,120,11,10,0,139,11,3,0,150,11,3,0,160,11,3,0,165,11,3,0,171,11,3,0,186,11,4,0,195,11,3,0,209,11,6,0,216,11,14,0,251,11,6,0,58,12,3,0,78,12,7,0,90,12,6,0,112,12,8,0,206,12,7,0,215,12,7,0,243,12,15,0,79,13,8,0,88,13,8,0,118,13,3,0,151,13,3,0,199,13,3,0,203,13,4,0,224,13,18,0,245,13,12,0,59,14,4,0,92,14,37,0,142,14,6,0,224,14,32,0,109,15,4,0,219,15,37,0,200,16,5,0,125,19,3,0,154,19,6,0,245,19,11,0,157,22,3,0,241,22,15,0,21,23,11,0,55,23,9,0,84,23,12,0,116,23,12,0,234,23,6,0,250,23,6,0,26,24,6,0,120,24,8,0,171,24,5,0,246,24,10,0,29,25,3,0,44,25,4,0,60,25,4,0,65,25,3,0,117,25,11,0,172,25,4,0,202,25,6,0,219,25,3,0,138,26,6,0,154,26,6,0,174,26,82,0,76,27,4,0,125,27,3,0,244,27,8,0,56,28,3,0,74,28,3,0,128,28,64,0,200,28,8,0,247,28,9,0,231,29,21,0,255,31,17,0,40,32,8,0,95,32,17,0,157,32,3,0,186,32,22,0,241,32,15,0,138,33,6,0,244,35,12,0,39,36,25,0,75,36,21,0,77,43,3,0,90,43,166,0,244,44,5,0,40,45,5,0,104,45,7,0,113,45,14,0,151,45,9,0,60,46,68,0,244,46,12,0,214,47,26,0,252,47,5,0,0,49,5,0,46,49,3,0,187,49,5,0,228,49,12,0,0,52,192,25,0,78,0,82,141,164,3,0,199,164,9,0,44,166,20,0,152,166,7,0,248,166,8,0,148,167,12,0,171,167,77,0,44,168,4,0,58,168,6,0,120,168,8,0,197,168,9,0,218,168,6,0,252,168,4,0,84,169,11,0,125,169,3,0,218,169,4,0,224,169,32,0,55,170,9,0,124,170,4,0,195,170,24,0,247,170,10,0,23,171,9,0,47,171,145,0,250,171,182,43,199,215,4,0,252,215,4,33,218,250,38,0,7,251,12,0,24,251,5,0,194,251,17,0,64,253,16,0,200,253,40,0,26,254,6,0,39,254,9,0,108,254,4,0,253,254,4,0,191,255,3,0,221,255,3,0,239,255,13,0,12,0,39,0,59,0,62,0,78,0,79,0,31,3,158,3,158,4,159,4,6,8,7,8,9,8,54,8,61,8,62,8,86,8,4,10,20,10,24,10,86,11,87,11,189,16,53,17,39,209,40,209,85,212,157,212,160,212,161,212,163,212,164,212,167,212,168,212,173,212,186,212,188,212,196,212,6,213,11,213,12,213,21,213,29,213,58,213,63,213,69,213,81,213,166,214,167,214,204,215,205,215,4,238,32,238,35,238,37,238,38,238,40,238,51,238,56,238,58,238,72,238,74,238,76,238,80,238,83,238,85,238,86,238,88,238,90,238,92,238,94,238,96,238,99,238,101,238,102,238,107,238,115,238,120,238,125,238,127,238,138,238,164,238,170,238,175,240,176,240,191,240,192,240,208,240,47,241,54,243,197,243,63,244,65,244,248,244,62,245,63,245,94,0,34,0,251,0,5,0,3,1,4,0,52,1,3,0,139,1,5,0,156,1,52,0,254,1,130,0,157,2,3,0,209,2,47,0,36,3,12,0,75,3,53,0,196,3,4,0,214,3,42,0,170,4,86,3,57,8,3,0,96,8,160,0,28,9,3,0,58,9,5,0,64,9,64,0,184,9,6,0,192,9,64,0,7,10,5,0,52,10,4,0,59,10,4,0,72,10,8,0,89,10,7,0,128,10,128,0,54,11,3,0,115,11,5,0,128,11,128,0,73,12,23,2,127,14,129,1,78,16,4,0,112,16,16,0,194,16,14,0,233,16,7,0,250,16,6,0,68,17,60,0,201,17,7,0,218,17,166,4,184,22,8,0,202,22,54,9,111,35,145,0,99,36,13,0,116,36,140,11,47,52,209,51,57,106,199,4,69,111,11,0,127,111,16,0,160,111,96,64,2,176,254,31,246,208,10,0,115,209,8,0,222,209,34,0,70,210,186,0,87,211,9,0,114,211,142,0,71,213,3,0,0,216,0,22,60,238,6,0,67,238,4,0,156,238,5,0,188,238,52,0,242,238,14,1,44,240,4,0,148,240,12,0,224,240,32,0,11,241,5,0,108,241,4,0,155,241,75,0,3,242,13,0,59,242,5,0,73,242,7,0,82,242,174,0,33,243,15,0,125,243,3,0,148,243,12,0,203,243,21,0,241,243,15,0,253,244,3,0,68,245,12,0,104,245,147,0,65,246,4,0,80,246,48,0,198,246,58,0,116,247,140,8,47,104,111,109,101,47,67,104,114,105,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,112,104,121,115,105,99,115,50,100,45,48,46,53,46,48,47,115,114,99,47,114,101,115,111,108,117,116,105,111,110,47,99,111,110,115,116,114,97,105,110,116,47,97,99,99,117,109,117,108,97,116,101,100,95,105,109,112,117,108,115,101,95,115,111,108,118,101,114,46,114,115,110,111,116,32,121,101,116,32,105,109,112,108,101,109,101,110,116,101,100,47,104,111,109,101,47,67,104,114,105,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,112,104,121,115,105,99,115,50,100,45,48,46,53,46,48,47,115,114,99,47,114,101,115,111,108,117,116,105,111,110,47,99,111,110,115,116,114,97,105,110,116,47,102,105,120,101,100,95,101,113,117,97,116,105,111,110,46,114,115,47,104,111,109,101,47,67,104,114,105,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,112,104,121,115,105,99,115,50,100,45,48,46,53,46,48,47,115,114,99,47,114,101,115,111,108,117,116,105,111,110,47,99,111,110,115,116,114,97,105,110,116,47,99,111,110,116,97,99,116,95,101,113,117,97,116,105,111,110,46,114,115,47,104,111,109,101,47,67,104,114,105,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,112,104,121,115,105,99,115,50,100,45,48,46,53,46,48,47,115,114,99,47,114,101,115,111,108,117,116,105,111,110,47,99,111,110,115,116,114,97,105,110,116,47,98,97,108,108,95,105,110,95,115,111,99,107,101,116,95,101,113,117,97,116,105,111,110,46,114,115,47,104,111,109,101,47,67,104,114,105,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,112,104,121,115,105,99,115,50,100,45,48,46,53,46,48,47,115,114,99,47,114,101,115,111,108,117,116,105,111,110,47,99,111,110,115,116,114,97,105,110,116,47,112,114,111,106,101,99,116,101,100,95,103,97,117,115,115,95,115,101,105,100,101,108,95,115,111,108,118,101,114,46,114,115,97,115,115,101,114,116,105,111,110,32,102,97,105,108,101,100,58,32,114,101,115,117,108,116,46,108,101,110,40,41,32,61,61,32,110,117,109,95,98,111,100,105,101,115,105,110,116,101,114,110,97,108,32,101,114,114,111,114,58,32,101,110,116,101,114,101,100,32,117,110,114,101,97,99,104,97,98,108,101,32,99,111,100,101,97,116,116,101,109,112,116,32,116,111,32,99,97,108,99,117,108,97,116,101,32,116,104,101,32,114,101,109,97,105,110,100,101,114,32,119,105,116,104,32,97,32,100,105,118,105,115,111,114,32,111], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE);
/* memory initializer */ allocate([102,32,122,101,114,111,87,69,66,80,76,65,84,70,79,82,77,46,114,115,95,114,101,102,115,91,36,48,93,46,97,100,100,69,118,101,110,116,76,105,115,116,101,110,101,114,40,85,84,70,56,84,111,83,116,114,105,110,103,40,36,49,41,44,32,102,117,110,99,116,105,111,110,32,40,101,41,32,123,82,117,110,116,105,109,101,46,100,121,110,67,97,108,108,40,39,118,105,105,105,39,44,32,36,51,44,32,91,36,50,44,32,36,52,44,32,101,46,116,97,114,103,101,116,32,63,32,87,69,66,80,76,65,84,70,79,82,77,46,114,115,95,114,101,102,115,46,112,117,115,104,40,101,46,116,97,114,103,101,116,41,32,45,32,49,32,58,32,45,49,93,41,59,125,44,32,102,97,108,115,101,41,59,0,107,101,121,32,110,111,116,32,112,114,101,115,101,110,116,73,110,116,101,114,110,97,108,32,101,114,114,111,114,58,32,116,104,101,32,115,104,97,112,101,32,119,97,115,32,110,111,32,108,111,110,103,101,114,32,118,97,108,105,100,46,84,104,101,32,115,104,97,112,101,32,119,97,115,32,110,111,32,108,111,110,103,101,114,32,118,97,108,105,100,46,97,115,115,101,114,116,105,111,110,32,102,97,105,108,101,100,58,32,115,101,108,102,46,112,111,105,110,116,115,46,108,101,110,40,41,32,60,61,32,110,97,58,58,100,105,109,101,110,115,105,111,110,58,58,60,80,62,40,41,32,43,32,49,84,104,101,32,112,114,111,120,105,109,105,116,121,32,109,97,114,103,105,110,32,109,117,115,116,32,98,101,32,112,111,115,105,116,105,118,101,32,111,114,32,110,117,108,108,46,78,111,32,97,108,103,111,114,105,116,104,109,32,107,110,111,119,110,32,116,111,32,99,111,109,112,117,116,101,32,97,32,99,111,110,116,97,99,116,32,112,111,105,110,116,32,98,101,116,119,101,101,110,32,116,104,101,32,103,105,118,101,110,32,112,97,105,114,32,111,102,32,115,104,97,112,101,115,46,47,104,111,109,101,47,67,104,114,105,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,99,111,108,108,105,100,101,95,112,105,112,101,108,105,110,101,45,48,46,57,46,48,47,110,97,114,114,111,119,95,112,104,97,115,101,47,99,111,110,116,97,99,116,95,103,101,110,101,114,97,116,111,114,47,105,110,99,114,101,109,101,110,116,97,108,95,99,111,110,116,97,99,116,95,109,97,110,105,102,111,108,100,95,103,101,110,101,114,97,116,111,114,46,114,115,84,104,101,32,112,114,111,120,121,32,119,97,115,32,110,111,116,32,118,97,108,105,100,46,47,104,111,109,101,47,67,104,114,105,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,99,111,108,108,105,100,101,95,112,105,112,101,108,105,110,101,45,48,46,57,46,48,47,98,114,111,97,100,95,112,104,97,115,101,47,100,98,118,116,95,98,114,111,97,100,95,112,104,97,115,101,46,114,115,97,115,115,101,114,116,105,111,110,32,102,97,105,108,101,100,58,32,112,114,111,120,121,46,97,99,116,105,118,101,32,61,61,32,82,69,77,79,86,69,95,70,82,79,77,95,83,84,82,69,69,84,104,101,32,108,111,111,115,101,110,105,110,103,32,109,97,114,103,105,110,32,109,117,115,116,32,98,101,32,112,111,115,105,116,105,118,101,46,97,108,114,101,97,100,121,32,98,111,114,114,111,119,101,100,97,108,114,101,97,100,121,32,109,117,116,97,98,108,121,32,98,111,114,114,111,119,101,100,114,97,119,95,99,97,112,97,99,105,116,121,32,111,118,101,114,102,108,111,119,114,97,119,95,99,97,112,32,111,118,101,114,102,108,111,119,99,97,112,97,99,105,116,121,32,111,118,101,114,102,108,111,119,99,97,110,110,111,116,32,97,99,99,101,115,115,32,97,32,84,76,83,32,118,97,108,117,101,32,100,117,114,105,110,103,32,111,114,32,97,102,116,101,114,32,105,116,32,105,115,32,100,101,115,116,114,111,121,101,100,99,97,108,108,101,100,32,96,82,101,115,117,108,116,58,58,117,110,119,114,97,112,40,41,96,32,111,110,32,97,110,32,96,69,114,114,96,32,118,97,108,117,101,95,95,110,112,104,121,115,105,99,115,95,105,110,116,101,114,110,97,108,95,79,98,106,101,99,116,65,99,116,105,118,97,116,105,111,110,79,110,67,111,110,116,97,99,116,72,97,110,100,108,101,114,95,95,110,112,104,121,115,105,99,115,95,105,110,116,101,114,110,97,108,95,83,101,110,115,111,114,115,78,111,116,67,111,108,108,105,100,105,110,103,84,104,101,105,114,80,97,114,101,110,116,80,97,105,114,70,105,108,116,101,114,47,98,117,105,108,100,115,108,97,118,101,47,114,117,115,116,45,98,117,105,108,100,98,111,116,47,115,108,97,118,101,47,110,105,103,104,116,108,121,45,100,105,115,116,45,114,117,115,116,99,45,99,114,111,115,115,45,114,117,115,116,98,117,105,108,100,45,108,105,110,117,120,47,98,117,105,108,100,47,115,114,99,47,108,105,98,99,111,114,101,47,115,108,105,99,101,46,114,115,97,115,115,101,114,116,105,111,110,32,102,97,105,108,101,100,58,32,111,108,100,95,118,97,108,117,101,46,105,115,95,110,111,110,101,40,41,97,115,115,101,114,116,105,111,110,32,102,97,105,108,101,100,58,32,111,108,100,95,118,97,108,117,101,46,105,115,95,115,111,109,101,40,41,65,32,100,121,110,97,109,105,99,32,98,111,100,121,32,109,117,115,116,32,110,111,116,32,104,97,118,101,32,97,32,122,101,114,111,32,118,111,108,117,109,101,46,47,98,117,105,108,100,115,108,97,118,101,47,114,117,115,116,45,98,117,105,108,100,98,111,116,47,115,108,97,118,101,47,110,105,103,104,116,108,121,45,100,105,115,116,45,114,117,115,116,99,45,99,114,111,115,115,45,114,117,115,116,98,117,105,108,100,45,108,105,110,117,120,47,98,117,105,108,100,47,115,114,99,47,108,105,98,99,111,108,108,101,99,116,105,111,110,115,47,98,105,110,97,114,121,95,104,101,97,112,46,114,115,84,104,105,115,32,119,111,114,108,100,32,111,98,106,101,99,116,32,105,115,32,110,111,116,32,97,32,115,101,110,115,111,114,46,97,115,115,101,114,116,105,111,110,32,102,97,105,108,101,100,58,32,52,32,60,61,32,98,117,102,46,108,101,110,40,41,97,115,115,101,114,116,105,111,110,32,102,97,105,108,101,100,58,32,110,97,58,58,112,97,114,116,105,97,108,95,108,101,40,38,109,105,110,115,44,32,38,109,97,120,115,41,73,110,116,101,114,110,97,108,32,72,97,115,104,77,97,112,32,101,114,114,111,114,58,32,79,117,116,32,111,102,32,115,112,97,99,101,46,117,110,114,101,97,99,104,97,98,108,101,97,115,115,101,114,116,105,111,110,32,102,97,105,108,101,100,58,32,110,101,119,95,114,97,119,95,99,97,112,46,105,115,95,112,111,119,101,114,95,111,102,95,116,119,111,40,41,32,124,124,32,110,101,119,95,114,97,119,95,99,97,112,32,61,61,32,48,97,115,115,101,114,116,105,111,110,32,102,97,105,108,101,100,58,32,115,101,108,102,46,116,97,98,108,101,46,115,105,122,101,40,41,32,60,61,32,110,101,119,95,114,97,119,95,99,97,112,73,110,116,101,114,110,97,108,32,101,114,114,111,114,58,194,160,97,32,99,111,110,116,97,99,116,32,82,66,82,66,32,115,104,111,117,108,100,32,110,111,116,32,98,101,32,104,101,114,101,46,97,115,115,101,114,116,105,111,110,32,102,97,105,108,101,100,58,32,42,98,46,97,99,116,105,118,97,116,105,111,110,95,115,116,97,116,101,40,41,32,33,61,32,65,99,116,105,118,97,116,105,111,110,83,116,97,116,101,58,58,68,101,108,101,116,101,100,47,104,111,109,101,47,67,104,114,105,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,112,104,121,115,105,99,115,50,100,45,48,46,53,46,48,47,115,114,99,47,100,101,116,101,99,116,105,111,110,47,97,99,116,105,118,97,116,105,111,110,95,109,97,110,97,103,101,114,46,114,115,47,98,117,105,108,100,115,108,97,118,101,47,114,117,115,116,45,98,117,105,108,100,98,111,116,47,115,108,97,118,101,47,110,105,103,104,116,108,121,45,100,105,115,116,45,114,117,115,116,99,45,99,114,111,115,115,45,114,117,115,116,98,117,105,108,100,45,108,105,110,117,120,47,98,117,105,108,100,47,115,114,99,47,108,105,98,99,111,108,108,101,99,116,105,111,110,115,47,118,101,99,46,114,115,84,104,105,115,32,116,114,101,101,32,119,97,115,32,101,109,112,116,121,46,68,66,86,84,32,105,110,116,101,114,110,97,108,32,101,114,114,111,114,58,32,116,104,105,115,32,105,115,32,110,111,116,32,97,110,32,105,110,116,101,114,110,97,108,32,110,111,100,101,46,67,97,110,110,111,116,32,105,110,115,101,114,116,32,116,104,101,32,115,97,109,101,32,110,111,100,101,32,116,119,105,99,101,46,67,97,110,110,111,116,32,112,114,111,106,101,99,116,32,116,104,101,32,111,114,105,103,105,110,32,111,110,32,97,110,32,101,109,112,116,121,32,115,105,109,112,108,101,120,46,65,116,116,101,109,112,116,105,110,103,32,116,111,32,117,110,119,114,97,112,32,97,32,114,111,111,116,32,111,114,32,100,101,116,97,99,104,101,100,32,110,111,100,101,46,82,101,99,121,99,108,101,100,60,84,62,32,115,109,97,114,116,112,111,105,110,116,101,114,32,109,105,115,115,105,110,103,32,105,116,115,32,118,97,108,117,101,46,85,110,97,98,108,101,32,116,111,32,97,100,100,32,97,32,99,111,108,108,105,115,105,111,110,32,111,98,106,101,99,116,32,119,105,116,104,32,116,104,101,32,115,97,109,101,32,117,105,100,32,116,119,105,99,101,46,65,116,116,101,109,112,116,105,110,103,32,116,111,32,115,101,116,32,116,104,101,32,112,111,115,105,116,105,111,110,32,111,102,32,97,110,32,117,110,107,110,111,119,110,32,111,98,106,101,99,116,46,32,68,105,100,32,121,111,117,32,102,111,114,103,111,116,32,116,111,32,99,97,108,108,32,96,46,117,112,100,97,116,101,40,41,96,32,97,102,116,101,114,32,96,46,100,101,102,101,114,114,101,100,95,97,100,100,40,41,96,45,105,110,103,32,121,111,117,114,32,111,98,106,101,99,116,115,63,119,105,110,100,111,119,46,115,101,116,73,110,116,101,114,118,97,108,40,102,117,110,99,116,105,111,110,32,40,101,41,32,123,82,117,110,116,105,109,101,46,100,121,110,67,97,108,108,40,39,118,105,39,44,32,36,50,44,32,91,36,49,93,41,59,125,44,32,36,48,41,59,0,97,104,114,101,102,100,111,119,110,108,111,97,100,100,105,115,112,108,97,121,58,32,110,111,110,101,59,98,111,100,121,35,115,112,97,119,110,35,100,111,119,110,108,111,97,100,99,108,105,99,107,98,97,108,108,115,46,112,51,115,105,109,103,101,111,98,97,108,108,115,46,112,104,105,95,97,108,112,97,46,112,51,115,60,100,105,118,32,105,100,61,34,98,97,108,108,34,32,99,108,97,115,115,61,34,98,97,108,108,34,32,115,116,121,108,101,61,34,118,105,115,105,98,105,108,105,116,121,58,32,104,105,100,100,101,110,59,34,32,47,62,35,98,97,108,108,108,101,102,116,58,32,112,120,59,32,116,111,112,58,32,112,120,59,100,97,116,97,58,97,112,112,108,105,99,97,116,105,111,110,47,111,99,116,101,116,45,115,116,114,101,97,109,59,98,97,115,101,54,52,44,47,104,111,109,101,47,67,104,114,105,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,112,104,121,115,105,99,115,50,100,45,48,46,53,46,48,47,115,114,99,47,105,110,116,101,103,114,97,116,105,111,110,47,116,114,97,110,115,108,97,116,105,111,110,97,108,95,99,99,100,95,109,111,116,105,111,110,95,99,108,97,109,112,105,110,103,46,114,115,47,104,111,109,101,47,67,104,114,105,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,112,104,121,115,105,99,115,50,100,45,48,46,53,46,48,47,115,114,99,47,100,101,116,101,99,116,105,111,110,47,106,111,105,110,116,47,106,111,105,110,116,95,109,97,110,97,103,101,114,46,114,115,47,104,111,109,101,47,67,104,114,105,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,112,104,121,115,105,99,115,50,100,45,48,46,53,46,48,47,115,114,99,47,100,101,116,101,99,116,105,111,110,47,97,99,116,105,118,97,116,105,111,110,95,109,97,110,97,103,101,114,46,114,115,47,104,111,109,101,47,67,104,114,105,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,112,104,121,115,105,99,115,50,100,45,48,46,53,46,48,47,115,114,99,47,114,101,115,111,108,117,116,105,111,110,47,99,111,110,115,116,114,97,105,110,116,47,112,114,111,106,101,99,116,101,100,95,103,97,117,115,115,95,115,101,105,100,101,108,95,115,111,108,118,101,114,46,114,115,47,104,111,109,101,47,67,104,114,105,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,112,104,121,115,105,99,115,50,100,45,48,46,53,46,48,47,115,114,99,47,111,98,106,101,99,116,47,114,105,103,105,100,95,98,111,100,121,46,114,115,47,104,111,109,101,47,67,104,114,105,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,112,104,121,115,105,99,115,50,100,45,48,46,53,46,48,47,115,114,99,47,111,98,106,101,99,116,47,119,111,114,108,100,95,111,98,106,101,99,116,46,114,115,47,104,111,109,101,47,67,104,114,105,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,112,104,121,115,105,99,115,50,100,45,48,46,53,46,48,47,115,114,99,47,117,116,105,108,115,47,117,110,105,111,110,95,102,105,110,100,46,114,115,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,48,49,50,51,52,53,54,55,56,57,43,47,47,104,111,109,101,47,67,104,114,105,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,97,115,101,54,52,45,48,46,50,46,49,47,115,114,99,47,108,105,98,46,114,115,99,97,108,108,101,100,32,96,82,101,115,117,108,116,58,58,117,110,119,114,97,112,40,41,96,32,111,110,32,97,110,32,96,69,114,114,96,32,118,97,108,117,101,47,98,117,105,108,100,115,108,97,118,101,47,114,117,115,116,45,98,117,105,108,100,98,111,116,47,115,108,97,118,101,47,110,105,103,104,116,108,121,45,100,105,115,116,45,114,117,115,116,99,45,99,114,111,115,115,45,114,117,115,116,98,117,105,108,100,45,108,105,110,117,120,47,98,117,105,108,100,47,115,114,99,47,108,105,98,99,111,114,101,47,115,108,105,99,101,46,114,115,99,97,108,108,101,100,32,96,82,101,115,117,108,116,58,58,117,110,119,114,97,112,40,41,96,32,111,110,32,97,110,32,96,69,114,114,96,32,118,97,108,117,101,87,69,66,80,76,65,84,70,79,82,77,46,114,115,95,114,101,102,115,91,36,48,93,46,99,108,105,99,107,40,41,59,0,87,69,66,80,76,65,84,70,79,82,77,46,114,115,95,114,101,102,115,91,36,48,93,91,85,84,70,56,84,111,83,116,114,105,110,103,40,36,49,41,93,32,61,32,85,84,70,56,84,111,83,116,114,105,110,103,40,36,50,41,59,0,87,69,66,80,76,65,84,70,79,82,77,46,114,115,95,114,101,102,115,91,36,48,93,46,115,116,121,108,101,46,99,115,115,84,101,120,116,32,61,32,85,84,70,56,84,111,83,116,114,105,110,103,40,36,49,41,59,0,87,69,66,80,76,65,84,70,79,82,77,46,114,115,95,114,101,102,115,91,36,48,93,46,97,112,112,101,110,100,67,104,105,108,100,40,87,69,66,80,76,65,84,70,79,82,77,46,114,115,95,114,101,102,115,91,36,49,93,41,59,0,87,69,66,80,76,65,84,70,79,82,77,46,114,115,95,114,101,102,115,91,36,48,93,46,114,101,109,111,118,101,67,104,105,108,100,40,87,69,66,80,76,65,84,70,79,82,77,46,114,115,95,114,101,102,115,91,36,49,93,41,59,0,87,69,66,80,76,65,84,70,79,82,77,46,114,115,95,114,101,102,115,91,36,48,93,46,105,110,115,101,114,116,65,100,106,97,99,101,110,116,72,84,77,76,40,39,98,101,102,111,114,101,69,110,100,39,44,32,85,84,70,56,84,111,83,116,114,105,110,103,40,36,49,41,41,59,0,118,97,114,32,118,97,108,117,101,32,61,32,100,111,99,117,109,101,110,116,46,99,114,101,97,116,101,69,108,101,109,101,110,116,40,85,84,70,56,84,111,83,116,114,105,110,103,40,36,48,41,41,59,105,102,32,40,33,118,97,108,117,101,41,32,123,114,101,116,117,114,110,32,45,49,59,125,114,101,116,117,114,110,32,87,69,66,80,76,65,84,70,79,82,77,46,114,115,95,114,101,102,115,46,112,117,115,104,40,118,97,108,117,101,41,32,45,32,49,59,0,118,97,114,32,118,97,108,117,101,32,61,32,100,111,99,117,109,101,110,116,46,113,117,101,114,121,83,101,108,101,99,116,111,114,40,85,84,70,56,84,111,83,116,114,105,110,103,40,36,48,41,41,59,105,102,32,40,33,118,97,108,117,101,41,32,123,114,101,116,117,114,110,32,45,49,59,125,114,101,116,117,114,110,32,87,69,66,80,76,65,84,70,79,82,77,46,114,115,95,114,101,102,115,46,112,117,115,104,40,118,97,108,117,101,41,32,45,32,49,59,0,99,111,110,115,111,108,101,46,108,111,103,40,39,104,105,39,41,59,119,105,110,100,111,119,46,87,69,66,80,76,65,84,70,79,82,77,32,124,124,32,40,119,105,110,100,111,119,46,87,69,66,80,76,65,84,70,79,82,77,32,61,32,123,114,115,95,114,101,102,115,58,32,91,93,44,125,41,59,0,37,37,80,65,67,69,51,68,112,104,105,10,99,111,109,112,111,110,101,110,116,10,67,97,115,116,80,97,114,115,101,77,97,103,105,99,78,117,109,98,101,114,73,111,80,97,114,115,101,73,110,116,83,104,97,112,101,85,110,115,117,112,112,111,114,116,101,100,86,101,114,115,105,111,110,87,114,111,110,103,70,105,108,101,84,121,112,101,47,104,111,109,101,47,67,104,114,105,115,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,108,105,102,101,103,117,97,114,100,45,57,48,99,50,97,100,55,54,53,49,50,100,98,97,51,102,47,51,102,99,97,53,57,54,50,99,100,51,97,100,51,99,98,53,54,48,56,51,101,48,50,55,56,98,52,53,101,48,51,49,52,101,99,50,55,51,56,47,115,114,99,47,108,105,98,46,114,115,47,104,111,109,101,47,67,104,114,105,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,121,116,101,111,114,100,101,114,45,48,46,53,46,51,47,115,114,99,47,108,105,98,46,114,115,47,104,111,109,101,47,67,104,114,105,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,99,111,108,108,105,100,101,95,112,105,112,101,108,105,110,101,45,48,46,57,46,48,47,98,114,111,97,100,95,112,104,97,115,101,47,100,98,118,116,95,98,114,111,97,100,95,112,104,97,115,101,46,114,115,47,104,111,109,101,47,67,104,114,105,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,99,111,108,108,105,100,101,95,112,105,112,101,108,105,110,101,45,48,46,57,46,48,47,110,97,114,114,111,119,95,112,104,97,115,101,47,99,111,110,116,97,99,116,95,103,101,110,101,114,97,116,111,114,47,115,117,112,112,111,114,116,95,109,97,112,95,115,117,112,112,111,114,116,95,109,97,112,95,99,111,110,116,97,99,116,95,103,101,110,101,114,97,116,111,114,46,114,115,47,104,111,109,101,47,67,104,114,105,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,99,111,108,108,105,100,101,95,112,105,112,101,108,105,110,101,45,48,46,57,46,48,47,110,97,114,114,111,119,95,112,104,97,115,101,47,99,111,110,116,97,99,116,95,103,101,110,101,114,97,116,111,114,47,99,111,109,112,111,115,105,116,101,95,115,104,97,112,101,95,115,104,97,112,101,95,99,111,110,116,97,99,116,95,103,101,110,101,114,97,116,111,114,46,114,115,47,104,111,109,101,47,67,104,114,105,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,99,111,108,108,105,100,101,95,112,105,112,101,108,105,110,101,45,48,46,57,46,48,47,110,97,114,114,111,119,95,112,104,97,115,101,47,112,114,111,120,105,109,105,116,121,95,100,101,116,101,99,116,111,114,47,99,111,109,112,111,115,105,116,101,95,115,104,97,112,101,95,115,104,97,112,101,95,112,114,111,120,105,109,105,116,121,95,100,101,116,101,99,116,111,114,46,114,115,47,104,111,109,101,47,67,104,114,105,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,99,111,108,108,105,100,101,95,112,105,112,101,108,105,110,101,45,48,46,57,46,48,47,119,111,114,108,100,47,99,111,108,108,105,115,105,111,110,95,119,111,114,108,100,46,114,115,47,104,111,109,101,47,67,104,114,105,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,99,111,108,108,105,100,101,95,103,101,111,109,101,116,114,121,45,48,46,50,46,48,47,98,111,117,110,100,105,110,103,95,118,111,108,117,109,101,47,97,97,98,98,46,114,115,47,104,111,109,101,47,67,104,114,105,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,99,111,108,108,105,100,101,95,103,101,111,109,101,116,114,121,45,48,46,50,46,48,47,112,97,114,116,105,116,105,111,110,105,110,103,47,100,98,118,116,46,114,115,47,104,111,109,101,47,67,104,114,105,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,99,111,108,108,105,100,101,95,103,101,111,109,101,116,114,121,45,48,46,50,46,48,47,113,117,101,114,121,47,97,108,103,111,114,105,116,104,109,115,47,106,111,104,110,115,111,110,95,115,105,109,112,108,101,120,46,114,115,47,104,111,109,101,47,67,104,114,105,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,99,111,108,108,105,100,101,95,103,101,111,109,101,116,114,121,45,48,46,50,46,48,47,113,117,101,114,121,47,97,108,103,111,114,105,116,104,109,115,47,103,106,107,46,114,115,47,104,111,109,101,47,67,104,114,105,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,99,111,108,108,105,100,101,95,103,101,111,109,101,116,114,121,45,48,46,50,46,48,47,113,117,101,114,121,47,112,114,111,120,105,109,105,116,121,95,105,110,116,101,114,110,97,108,47,98,97,108,108,95,97,103,97,105,110,115,116,95,98,97,108,108,46,114,115,47,104,111,109,101,47,67,104,114,105,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,99,111,108,108,105,100,101,95,103,101,111,109,101,116,114,121,45,48,46,50,46,48,47,113,117,101,114,121,47,112,114,111,120,105,109,105,116,121,95,105,110,116,101,114,110,97,108,47,115,117,112,112,111,114,116,95,109,97,112,95,97,103,97,105,110,115,116,95,115,117,112,112,111,114,116,95,109,97,112,46,114,115,47,104,111,109,101,47,67,104,114,105,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,99,111,108,108,105,100,101,95,103,101,111,109,101,116,114,121,45,48,46,50,46,48,47,113,117,101,114,121,47,112,114,111,120,105,109,105,116,121,95,105,110,116,101,114,110,97,108,47,112,108,97,110,101,95,97,103,97,105,110,115,116,95,115,117,112,112,111,114,116,95,109,97,112,46,114,115,47,104,111,109,101,47,67,104,114,105,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,99,111,108,108,105,100,101,95,103,101,111,109,101,116,114,121,45,48,46,50,46,48,47,113,117,101,114,121,47,116,105,109,101,95,111,102,95,105,109,112,97,99,116,95,105,110,116,101,114,110,97,108,47,115,104,97,112,101,95,97,103,97,105,110,115,116,95,115,104,97,112,101,46,114,115,99,97,112,97,99,105,116,121,32,111,118,101,114,102,108,111,119,47,98,117,105,108,100,115,108,97,118,101,47,114,117,115,116,45,98,117,105,108,100,98,111,116,47,115,108,97,118,101,47,110,105,103,104,116,108,121,45,100,105,115,116,45,114,117,115,116,99,45,99,114,111,115,115,45,114,117,115,116,98,117,105,108,100,45,108,105,110,117,120,47,98,117,105,108,100,47,115,114,99,47,108,105,98,99,111,108,108,101,99,116,105,111,110,115,47,118,101,99,46,114,115,47,104,111,109,101,47,67,104,114,105,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,99,111,108,108,105,100,101,95,117,116,105,108,115,45,48,46,53,46,48,47,100,97,116,97,47,117,105,100,95,114,101,109,97,112,46,114,115,47,104,111,109,101,47,67,104,114,105,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,97,108,103,101,98,114,97,45,48,46,57,46,48,47,115,114,99,47,115,116,114,117,99,116,115,47,115,112,101,99,105,97,108,105,122,97,116,105,111,110,115,47,118,101,99,116,111,114,46,114,115,73,110,100,101,120,32,111,117,116,32,111,102,32,114,97,110,103,101,58,32,50,100,32,118,101,99,116,111,114,115,32,100,111,32,110,111,116,32,104,97,118,101,32,32,114,111,119,115,46,32,110,100,97,114,114,97,121,58,32,105,110,100,101,120,32,111,117,116,32,111,102,32,98,111,117,110,100,115,47,104,111,109,101,47,67,104,114,105,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,100,97,114,114,97,121,45,48,46,54,46,56,47,115,114,99,47,97,114,114,97,121,116,114,97,105,116,115,46,114,115,116,104,105,115,32,101,114,114,111,114,32,118,97,114,105,97,110,116,32,105,115,32,110,111,116,32,105,110,32,117,115,101,117,110,115,117,112,112,111,114,116,101,100,32,111,112,101,114,97,116,105,111,110,111,117,116,32,111,102,32,98,111,117,110,100,115,32,105,110,100,101,120,105,110,103,116,104,101,32,115,104,97,112,101,32,100,111,101,115,32,110,111,116,32,102,105,116,32,105,110,32,116,121,112,101,32,108,105,109,105,116,115,105,110,99,111,109,112,97,116,105,98,108,101,32,109,101,109,111,114,121,32,108,97,121,111,117,116,105,110,99,111,109,112,97,116,105,98,108,101,32,115,104,97,112,101,115,83,104,97,112,101,69,114,114,111,114,47,58,32,73,110,99,111,109,112,97,116,105,98,108,101,83,104,97,112,101,73,110,99,111,109,112,97,116,105,98,108,101,76,97,121,111,117,116,82,97,110,103,101,76,105,109,105,116,101,100,79,117,116,79,102,66,111,117,110,100,115,85,110,115,117,112,112,111,114,116,101,100,95,95,73,110,99,111,109,112,108,101,116,101,47,98,117,105,108,100,115,108,97,118,101,47,114,117,115,116,45,98,117,105,108,100,98,111,116,47,115,108,97,118,101,47,110,105,103,104,116,108,121,45,100,105,115,116,45,114,117,115,116,99,45,99,114,111,115,115,45,114,117,115,116,98,117,105,108,100,45,108,105,110,117,120,47,98,117,105,108,100,47,115,114,99,47,108,105,98,115,116,100,47,99,111,108,108,101,99,116,105,111,110,115,47,104,97,115,104,47,116,97,98,108,101,46,114,115,47,98,117,105,108,100,115,108,97,118,101,47,114,117,115,116,45,98,117,105,108,100,98,111,116,47,115,108,97,118,101,47,110,105,103,104,116,108,121,45,100,105,115,116,45,114,117,115,116,99,45,99,114,111,115,115,45,114,117,115,116,98,117,105,108,100,45,108,105,110,117,120,47,98,117,105,108,100,47,115,114,99,47,108,105,98,115,116,100,47,99,111,108,108,101,99,116,105,111,110,115,47,104,97,115,104,47,109,97,112,46,114,115,97,115,115,101,114,116,105,111,110,32,102,97,105,108,101,100,58,32,96,40,108,101,102,116,32,61,61,32,114,105,103,104,116,41,96,32,40,108,101,102,116,58,32,96,96,44,32,114,105,103,104,116,58,32,96,96,41,47,98,117,105,108,100,115,108,97,118,101,47,114,117,115,116,45,98,117,105,108,100,98,111,116,47,115,108,97,118,101,47,110,105,103,104,116,108,121,45,100,105,115,116,45,114,117,115,116,99,45,99,114,111,115,115,45,114,117,115,116,98,117,105,108,100,45,108,105,110,117,120,47,98,117,105,108,100,47,115,114,99,47,108,105,98,115,116,100,47,115,121,115,47,117,110,105,120,47,99,111,110,100,118,97,114,46,114,115,47,98,117,105,108,100,115,108,97,118,101,47,114,117,115,116,45,98,117,105,108,100,98,111,116,47,115,108,97,118,101,47,110,105,103,104,116,108,121,45,100,105,115,116,45,114,117,115,116,99,45,99,114,111,115,115,45,114,117,115,116,98,117,105,108,100,45,108,105,110,117,120,47,98,117,105,108,100,47,115,114,99,47,108,105,98,115,116,100,47,115,121,115,47,117,110,105,120,47,114,119,108,111,99,107,46,114,115,47,98,117,105,108,100,115,108,97,118,101,47,114,117,115,116,45,98,117,105,108,100,98,111,116,47,115,108,97,118,101,47,110,105,103,104,116,108,121,45,100,105,115,116,45,114,117,115,116,99,45,99,114,111,115,115,45,114,117,115,116,98,117,105,108,100,45,108,105,110,117,120,47,98,117,105,108,100,47,115,114,99,47,108,105,98,115,116,100,47,115,121,115,47,117,110,105,120,47,116,104,114,101,97,100,95,108,111,99,97,108,46,114,115,47,98,117,105,108,100,115,108,97,118,101,47,114,117,115,116,45,98,117,105,108,100,98,111,116,47,115,108,97,118,101,47,110,105,103,104,116,108,121,45,100,105,115,116,45,114,117,115,116,99,45,99,114,111,115,115,45,114,117,115,116,98,117,105,108,100,45,108,105,110,117,120,47,98,117,105,108,100,47,115,114,99,47,108,105,98,115,116,100,47,114,97,110,100,47,114,101,97,100,101,114,46,114,115,82,101,97,100,101,114,82,110,103,46,102,105,108,108,95,98,121,116,101,115,58,32,47,100,101,118,47,117,114,97,110,100,111,109,102,97,105,108,101,100,32,116,111,32,99,114,101,97,116,101,32,97,110,32,79,83,32,82,78,71,82,101,97,100,101,114,82,110,103,46,102,105,108,108,95,98,121,116,101,115,58,32,69,79,70,32,114,101,97,99,104,101,100,99,97,110,110,111,116,32,97,99,99,101,115,115,32,97,32,84,76,83,32,118,97,108,117,101,32,100,117,114,105,110,103,32,111,114,32,97,102,116,101,114,32,105,116,32,105,115,32,100,101,115,116,114,111,121,101,100,114,119,108,111,99,107,32,109,97,120,105,109,117,109,32,114,101,97,100,101,114,32,99,111,117,110,116,32,101,120,99,101,101,100,101,100,114,119,108,111,99,107,32,114,101,97,100,32,108,111,99,107,32,119,111,117,108,100,32,114,101,115,117,108,116,32,105,110,32,100,101,97,100,108,111,99,107,116,104,114,101,97,100,32,112,97,110,105,99,107,101,100,32,119,104,105,108,101,32,112,97,110,105,99,107,105,110,103,46,32,97,98,111,114,116,105,110,103,46,10,102,97,116,97,108,32,114,117,110,116,105,109,101,32,101,114,114,111,114,58,32,10,102,97,105,108,101,100,32,116,111,32,105,110,105,116,105,97,116,101,32,112,97,110,105,99,44,32,101,114,114,111,114,32,82,85,83,84,95,66,65,67,75,84,82,65,67,69,66,111,120,60,65,110,121,62,60,117,110,110,97,109,101,100,62,102,111,114,109,97,116,116,101,114,32,101,114,114,111,114,83,116,114,105,110,103,69,114,114,111,114,102,97,105,108,101,100,32,116,111,32,119,114,105,116,101,32,119,104,111,108,101,32,98,117,102,102,101,114,1,110,111,116,101,58,32,82,117,110,32,119,105,116,104,32,96,82,85,83,84,95,66,65,67,75,84,82,65,67,69,61,49,96,32,102,111,114,32,97,32,98,97,99,107,116,114,97,99,101,46,10,69,95,90,78,90,78,58,58,95,36,36,36,83,80,36,64,36,66,80,36,42,36,82,70,36,38,36,76,84,36,60,36,71,84,36,62,36,76,80,36,40,36,82,80,36,41,36,67,36,44,36,117,55,101,36,126,36,117,50,48,36,32,36,117,50,55,36,39,36,117,53,98,36,91,36,117,53,100,36,93,36,117,55,98,36,123,36,117,55,100,36,125,36,117,51,98,36,59,36,117,50,98,36,36,117,50,50,36,34,99,97,108,108,101,100,32,96,82,101,115,117,108,116,58,58,117,110,119,114,97,112,40,41,96,32,111,110,32,97,110,32,96,69,114,114,96,32,118,97,108,117,101,60,117,110,107,110,111,119,110,62,32,32,58,32,32,45,32,32,46,46,46,32,60,102,114,97,109,101,115,32,111,109,105,116,116,101,100,62,10,115,116,97,99,107,32,98,97,99,107,116,114,97,99,101,58,10,116,104,114,101,97,100,32,39,39,32,112,97,110,105,99,107,101,100,32,97,116,32,39,39,44,32,58,97,108,114,101,97,100,121,32,98,111,114,114,111,119,101,100,97,115,115,101,114,116,105,111,110,32,102,97,105,108,101,100,58,32,107,101,121,32,33,61,32,48,47,98,117,105,108,100,115,108,97,118,101,47,114,117,115,116,45,98,117,105,108,100,98,111,116,47,115,108,97,118,101,47,110,105,103,104,116,108,121,45,100,105,115,116,45,114,117,115,116,99,45,99,114,111,115,115,45,114,117,115,116,98,117,105,108,100,45,108,105,110,117,120,47,98,117,105,108,100,47,115,114,99,47,108,105,98,115,116,100,47,115,121,115,47,99,111,109,109,111,110,47,116,104,114,101,97,100,95,108,111,99,97,108,46,114,115,116,104,114,101,97,100,32,110,97,109,101,32,109,97,121,32,110,111,116,32,99,111,110,116,97,105,110,32,105,110,116,101,114,105,111,114,32,110,117,108,108,32,98,121,116,101,115,102,97,105,108,101,100,32,116,111,32,103,101,110,101,114,97,116,101,32,117,110,105,113,117,101,32,116,104,114,101,97,100,32,73,68,58,32,98,105,116,115,112,97,99,101,32,101,120,104,97,117,115,116,101,100,47,98,117,105,108,100,115,108,97,118,101,47,114,117,115,116,45,98,117,105,108,100,98,111,116,47,115,108,97,118,101,47,110,105,103,104,116,108,121,45,100,105,115,116,45,114,117,115,116,99,45,99,114,111,115,115,45,114,117,115,116,98,117,105,108,100,45,108,105,110,117,120,47,98,117,105,108,100,47,115,114,99,47,108,105,98,115,116,100,47,116,104,114,101,97,100,47,109,111,100,46,114,115,99,97,112,97,99,105,116,121,32,111,118,101,114,102,108,111,119,78,117,108,69,114,114,111,114,97,108,114,101,97,100,121,32,109,117,116,97,98,108,121,32,98,111,114,114,111,119,101,100,47,98,117,105,108,100,115,108,97,118,101,47,114,117,115,116,45,98,117,105,108,100,98,111,116,47,115,108,97,118,101,47,110,105,103,104,116,108,121,45,100,105,115,116,45,114,117,115,116,99,45,99,114,111,115,115,45,114,117,115,116,98,117,105,108,100,45,108,105,110,117,120,47,98,117,105,108,100,47,115,114,99,47,108,105,98,115,116,100,47,101,110,118,46,114,115,102,97,105,108,101,100,32,116,111,32,103,101,116,32,101,110,118,105,114,111,110,109,101,110,116,32,118,97,114,105,97,98,108,101,32,96,96,58,32,100,97,116,97,32,112,114,111,118,105,100,101,100,32,99,111,110,116,97,105,110,115,32,97,32,110,117,108,32,98,121,116,101,116,104,114,101,97,100,32,112,97,110,105,99,107,101,100,32,119,104,105,108,101,32,112,114,111,99,101,115,115,105,110,103,32,112,97,110,105,99,46,32,97,98,111,114,116,105,110,103,46,10,32,40,111,115,32,101,114,114,111,114,32,115,116,114,101,114,114,111,114,95,114,32,102,97,105,108,117,114,101,47,98,117,105,108,100,115,108,97,118,101,47,114,117,115,116,45,98,117,105,108,100,98,111,116,47,115,108,97,118,101,47,110,105,103,104,116,108,121,45,100,105,115,116,45,114,117,115,116,99,45,99,114,111,115,115,45,114,117,115,116,98,117,105,108,100,45,108,105,110,117,120,47,98,117,105,108,100,47,115,114,99,47,108,105,98,115,116,100,47,115,121,115,47,117,110,105,120,47,111,115,46,114,115,69,114,114,111,114,114,101,112,114,79,115,99,111,100,101,109,101,115,115,97,103,101,67,117,115,116,111,109,107,105,110,100,101,114,114,111,114,78,111,116,70,111,117,110,100,80,101,114,109,105,115,115,105,111,110,68,101,110,105,101,100,67,111,110,110,101,99,116,105,111,110,82,101,102,117,115,101,100,67,111,110,110,101,99,116,105,111,110,82,101,115,101,116,67,111,110,110,101,99,116,105,111,110,65,98,111,114,116,101,100,78,111,116,67,111,110,110,101,99,116,101,100,65,100,100,114,73,110,85,115,101,65,100,100,114,78,111,116,65,118,97,105,108,97,98,108,101,66,114,111,107,101,110,80,105,112,101,65,108,114,101,97,100,121,69,120,105,115,116,115,87,111,117,108,100,66,108,111,99,107,73,110,118,97,108,105,100,73,110,112,117,116,73,110,118,97,108,105,100,68,97,116,97,84,105,109,101,100,79,117,116,87,114,105,116,101,90,101,114,111,73,110,116,101,114,114,117,112,116,101,100,79,116,104,101,114,85,110,101,120,112,101,99,116,101,100,69,111,102,95,95,78,111,110,101,120,104,97,117,115,116,105,118,101,117,115,101,32,111,102,32,115,116,100,58,58,116,104,114,101,97,100,58,58,99,117,114,114,101,110,116,40,41,32,105,115,32,110,111,116,32,112,111,115,115,105,98,108,101,32,97,102,116,101,114,32,116,104,101,32,116,104,114,101,97,100,39,115,32,108,111,99,97,108,32,100,97,116,97,32,104,97,115,32,98,101,101,110,32,100,101,115,116,114,111,121,101,100,97,116,116,101,109,112,116,101,100,32,116,111,32,117,115,101,32,97,32,99,111,110,100,105,116,105,111,110,32,118,97,114,105,97,98,108,101,32,119,105,116,104,32,116,119,111,32,109,117,116,101,120,101,115,47,98,117,105,108,100,115,108,97,118,101,47,114,117,115,116,45,98,117,105,108,100,98,111,116,47,115,108,97,118,101,47,110,105,103,104,116,108,121,45,100,105,115,116,45,114,117,115,116,99,45,99,114,111,115,115,45,114,117,115,116,98,117,105,108,100,45,108,105,110,117,120,47,98,117,105,108,100,47,115,114,99,47,108,105,98,115,116,100,47,115,121,110,99,47,99,111,110,100,118,97,114,46,114,115,80,111,105,115,111,110,69,114,114,111,114,32,123,32,105,110,110,101,114,58,32,46,46,32,125,79,110,99,101,32,105,110,115,116,97,110,99,101,32,104,97,115,32,112,114,101,118,105,111,117,115,108,121,32,98,101,101,110,32,112,111,105,115,111,110,101,100,97,115,115,101,114,116,105,111,110,32,102,97,105,108,101,100,58,32,115,116,97,116,101,32,38,32,83,84,65,84,69,95,77,65,83,75,32,61,61,32,82,85,78,78,73,78,71,47,98,117,105,108,100,115,108,97,118,101,47,114,117,115,116,45,98,117,105,108,100,98,111,116,47,115,108,97,118,101,47,110,105,103,104,116,108,121,45,100,105,115,116,45,114,117,115,116,99,45,99,114,111,115,115,45,114,117,115,116,98,117,105,108,100,45,108,105,110,117,120,47,98,117,105,108,100,47,115,114,99,47,108,105,98,115,116,100,47,115,121,110,99,47,111,110,99,101,46,114,115,97,115,115,101,114,116,105,111,110,32,102,97,105,108,101,100,58,32,40,113,117,101,117,101], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+10240);
/* memory initializer */ allocate([32,97,115,32,117,115,105,122,101,41,32,33,61,32,49,47,98,117,105,108,100,115,108,97,118,101,47,114,117,115,116,45,98,117,105,108,100,98,111,116,47,115,108,97,118,101,47,110,105,103,104,116,108,121,45,100,105,115,116,45,114,117,115,116,99,45,99,114,111,115,115,45,114,117,115,116,98,117,105,108,100,45,108,105,110,117,120,47,98,117,105,108,100,47,115,114,99,47,108,105,98,115,116,100,47,115,121,115,47,99,111,109,109,111,110,47,97,116,95,101,120,105,116,95,105,109,112,46,114,115,97,115,115,101,114,116,105,111,110,32,102,97,105,108,101,100,58,32,99,46,98,111,114,114,111,119,40,41,46,105,115,95,110,111,110,101,40,41,47,98,117,105,108,100,115,108,97,118,101,47,114,117,115,116,45,98,117,105,108,100,98,111,116,47,115,108,97,118,101,47,110,105,103,104,116,108,121,45,100,105,115,116,45,114,117,115,116,99,45,99,114,111,115,115,45,114,117,115,116,98,117,105,108,100,45,108,105,110,117,120,47,98,117,105,108,100,47,115,114,99,47,108,105,98,115,116,100,47,115,121,115,47,99,111,109,109,111,110,47,116,104,114,101,97,100,95,105,110,102,111,46,114,115,97,115,115,101,114,116,105,111,110,32,102,97,105,108,101,100,58,32,40,42,112,116,114,41,46,105,115,95,110,111,110,101,40,41,47,98,117,105,108,100,115,108,97,118,101,47,114,117,115,116,45,98,117,105,108,100,98,111,116,47,115,108,97,118,101,47,110,105,103,104,116,108,121,45,100,105,115,116,45,114,117,115,116,99,45,99,114,111,115,115,45,114,117,115,116,98,117,105,108,100,45,108,105,110,117,120,47,98,117,105,108,100,47,115,114,99,47,108,105,98,115,116,100,47,115,121,115,47,117,110,105,120,47,97,114,103,115,46,114,115,102,97,116,97,108,32,114,117,110,116,105,109,101,32,101,114,114,111,114,58,32,111,117,116,32,111,102,32,109,101,109,111,114,121,10,97,115,115,101,114,116,105,111,110,32,102,97,105,108,101,100,58,32,33,112,116,114,46,105,115,95,110,117,108,108,40,41,47,98,117,105,108,100,115,108,97,118,101,47,114,117,115,116,45,98,117,105,108,100,98,111,116,47,115,108,97,118,101,47,110,105,103,104,116,108,121,45,100,105,115,116,45,114,117,115,116,99,45,99,114,111,115,115,45,114,117,115,116,98,117,105,108,100,45,108,105,110,117,120,47,98,117,105,108,100,47,115,114,99,47,108,105,98,112,97,110,105,99,95,117,110,119,105,110,100,47,101,109,99,99,46,114,115,105,110,116,101,114,110,97,108,32,101,114,114,111,114,58,32,101,110,116,101,114,101,100,32,117,110,114,101,97,99,104,97,98,108,101,32,99,111,100,101,99,97,112,97,99,105,116,121,32,111,118,101,114,102,108,111,119,239,191,189,70,114,111,109,85,116,102,56,69,114,114,111,114,98,121,116,101,115,101,114,114,111,114,99,97,112,97,99,105,116,121,32,111,118,101,114,102,108,111,119,47,98,117,105,108,100,115,108,97,118,101,47,114,117,115,116,45,98,117,105,108,100,98,111,116,47,115,108,97,118,101,47,110,105,103,104,116,108,121,45,100,105,115,116,45,114,117,115,116,99,45,99,114,111,115,115,45,114,117,115,116,98,117,105,108,100,45,108,105,110,117,120,47,98,117,105,108,100,47,115,114,99,47,108,105,98,97,108,108,111,99,47,114,97,119,95,118,101,99,46,114,115,84,114,105,101,100,32,116,111,32,115,104,114,105,110,107,32,116,111,32,97,32,108,97,114,103,101,114,32,99,97,112,97,99,105,116,121,47,98,117,105,108,100,115,108,97,118,101,47,114,117,115,116,45,98,117,105,108,100,98,111,116,47,115,108,97,118,101,47,110,105,103,104,116,108,121,45,100,105,115,116,45,114,117,115,116,99,45,99,114,111,115,115,45,114,117,115,116,98,117,105,108,100,45,108,105,110,117,120,47,98,117,105,108,100,47,115,114,99,47,108,105,98,114,117,115,116,99,95,117,110,105,99,111,100,101,47,116,97,98,108,101,115,46,114,115,47,98,117,105,108,100,115,108,97,118,101,47,114,117,115,116,45,98,117,105,108,100,98,111,116,47,115,108,97,118,101,47,110,105,103,104,116,108,121,45,100,105,115,116,45,114,117,115,116,99,45,99,114,111,115,115,45,114,117,115,116,98,117,105,108,100,45,108,105,110,117,120,47,98,117,105,108,100,47,115,114,99,47,108,105,98,99,111,114,101,47,115,108,105,99,101,46,114,115,0,0,0,0,0,1,0,0,0,0,0,0,0,2,0,3,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,6,7,0,0,8,0,0,0,6,0,0,0,0,0,8,0,8,0,0,0,0,0,8,0,9,6,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,47,98,117,105,108,100,115,108,97,118,101,47,114,117,115,116,45,98,117,105,108,100,98,111,116,47,115,108,97,118,101,47,110,105,103,104,116,108,121,45,100,105,115,116,45,114,117,115,116,99,45,99,114,111,115,115,45,114,117,115,116,98,117,105,108,100,45,108,105,110,117,120,47,98,117,105,108,100,47,115,114,99,47,108,105,98,99,111,114,101,47,110,117,109,47,102,108,116,50,100,101,99,47,109,111,100,46,114,115,97,115,115,101,114,116,105,111,110,32,102,97,105,108,101,100,58,32,98,117,102,46,108,101,110,40,41,32,62,61,32,109,97,120,108,101,110,97,115,115,101,114,116,105,111,110,32,102,97,105,108,101,100,58,32,96,40,108,101,102,116,32,61,61,32,114,105,103,104,116,41,96,32,40,108,101,102,116,58,32,96,96,44,32,114,105,103,104,116,58,32,96,96,41,99,97,108,108,101,100,32,96,79,112,116,105,111,110,58,58,117,110,119,114,97,112,40,41,96,32,111,110,32,97,32,96,78,111,110,101,96,32,118,97,108,117,101,47,98,117,105,108,100,115,108,97,118,101,47,114,117,115,116,45,98,117,105,108,100,98,111,116,47,115,108,97,118,101,47,110,105,103,104,116,108,121,45,100,105,115,116,45,114,117,115,116,99,45,99,114,111,115,115,45,114,117,115,116,98,117,105,108,100,45,108,105,110,117,120,47,98,117,105,108,100,47,115,114,99,47,108,105,98,99,111,114,101,47,111,112,116,105,111,110,46,114,115,47,98,117,105,108,100,115,108,97,118,101,47,114,117,115,116,45,98,117,105,108,100,98,111,116,47,115,108,97,118,101,47,110,105,103,104,116,108,121,45,100,105,115,116,45,114,117,115,116,99,45,99,114,111,115,115,45,114,117,115,116,98,117,105,108,100,45,108,105,110,117,120,47,98,117,105,108,100,47,115,114,99,47,108,105,98,99,111,114,101,47,114,101,115,117,108,116,46,114,115,58,32,47,98,117,105,108,100,115,108,97,118,101,47,114,117,115,116,45,98,117,105,108,100,98,111,116,47,115,108,97,118,101,47,110,105,103,104,116,108,121,45,100,105,115,116,45,114,117,115,116,99,45,99,114,111,115,115,45,114,117,115,116,98,117,105,108,100,45,108,105,110,117,120,47,98,117,105,108,100,47,115,114,99,47,108,105,98,99,111,114,101,47,115,108,105,99,101,46,114,115,97,115,115,101,114,116,105,111,110,32,102,97,105,108,101,100,58,32,109,105,100,32,60,61,32,108,101,110,47,98,117,105,108,100,115,108,97,118,101,47,114,117,115,116,45,98,117,105,108,100,98,111,116,47,115,108,97,118,101,47,110,105,103,104,116,108,121,45,100,105,115,116,45,114,117,115,116,99,45,99,114,111,115,115,45,114,117,115,116,98,117,105,108,100,45,108,105,110,117,120,47,98,117,105,108,100,47,115,114,99,47,108,105,98,99,111,114,101,47,115,116,114,47,109,111,100,46,114,115,105,110,100,101,120,32,111,117,116,32,111,102,32,98,111,117,110,100,115,58,32,116,104,101,32,108,101,110,32,105,115,32,32,98,117,116,32,116,104,101,32,105,110,100,101,120,32,105,115,32,48,48,48,49,48,50,48,51,48,52,48,53,48,54,48,55,48,56,48,57,49,48,49,49,49,50,49,51,49,52,49,53,49,54,49,55,49,56,49,57,50,48,50,49,50,50,50,51,50,52,50,53,50,54,50,55,50,56,50,57,51,48,51,49,51,50,51,51,51,52,51,53,51,54,51,55,51,56,51,57,52,48,52,49,52,50,52,51,52,52,52,53,52,54,52,55,52,56,52,57,53,48,53,49,53,50,53,51,53,52,53,53,53,54,53,55,53,56,53,57,54,48,54,49,54,50,54,51,54,52,54,53,54,54,54,55,54,56,54,57,55,48,55,49,55,50,55,51,55,52,55,53,55,54,55,55,55,56,55,57,56,48,56,49,56,50,56,51,56,52,56,53,56,54,56,55,56,56,56,57,57,48,57,49,57,50,57,51,57,52,57,53,57,54,57,55,57,56,57,57,47,98,117,105,108,100,115,108,97,118,101,47,114,117,115,116,45,98,117,105,108,100,98,111,116,47,115,108,97,118,101,47,110,105,103,104,116,108,121,45,100,105,115,116,45,114,117,115,116,99,45,99,114,111,115,115,45,114,117,115,116,98,117,105,108,100,45,108,105,110,117,120,47,98,117,105,108,100,47,115,114,99,47,108,105,98,99,111,114,101,47,110,117,109,47,98,105,103,110,117,109,46,114,115,105,110,100,101,120,32,32,111,117,116,32,111,102,32,114,97,110,103,101,32,102,111,114,32,115,108,105,99,101,32,111,102,32,108,101,110,103,116,104,32,47,98,117,105,108,100,115,108,97,118,101,47,114,117,115,116,45,98,117,105,108,100,98,111,116,47,115,108,97,118,101,47,110,105,103,104,116,108,121,45,100,105,115,116,45,114,117,115,116,99,45,99,114,111,115,115,45,114,117,115,116,98,117,105,108,100,45,108,105,110,117,120,47,98,117,105,108,100,47,115,114,99,47,108,105,98,99,111,114,101,47,110,117,109,47,102,108,116,50,100,101,99,47,115,116,114,97,116,101,103,121,47,100,114,97,103,111,110,46,114,115,97,115,115,101,114,116,105,111,110,32,102,97,105,108,101,100,58,32,110,111,98,111,114,114,111,119,97,115,115,101,114,116,105,111,110,32,102,97,105,108,101,100,58,32,100,105,103,105,116,115,32,60,32,52,48,97,115,115,101,114,116,105,111,110,32,102,97,105,108,101,100,58,32,100,46,109,97,110,116,46,99,104,101,99,107,101,100,95,115,117,98,40,100,46,109,105,110,117,115,41,46,105,115,95,115,111,109,101,40,41,97,115,115,101,114,116,105,111,110,32,102,97,105,108,101,100,58,32,100,46,109,97,110,116,46,99,104,101,99,107,101,100,95,97,100,100,40,100,46,112,108,117,115,41,46,105,115,95,115,111,109,101,40,41,97,115,115,101,114,116,105,111,110,32,102,97,105,108,101,100,58,32,100,46,112,108,117,115,32,62,32,48,97,115,115,101,114,116,105,111,110,32,102,97,105,108,101,100,58,32,100,46,109,97,110,116,32,62,32,48,115,108,105,99,101,32,105,110,100,101,120,32,115,116,97,114,116,115,32,97,116,32,32,98,117,116,32,101,110,100,115,32,97,116,32,47,98,117,105,108,100,115,108,97,118,101,47,114,117,115,116,45,98,117,105,108,100,98,111,116,47,115,108,97,118,101,47,110,105,103,104,116,108,121,45,100,105,115,116,45,114,117,115,116,99,45,99,114,111,115,115,45,114,117,115,116,98,117,105,108,100,45,108,105,110,117,120,47,98,117,105,108,100,47,115,114,99,47,108,105,98,99,111,114,101,47,110,117,109,47,102,108,116,50,100,101,99,47,115,116,114,97,116,101,103,121,47,103,114,105,115,117,46,114,115,97,116,116,101,109,112,116,32,116,111,32,100,105,118,105,100,101,32,98,121,32,122,101,114,111,97,115,115,101,114,116,105,111,110,32,102,97,105,108,101,100,58,32,33,98,117,102,46,105,115,95,101,109,112,116,121,40,41,47,98,117,105,108,100,115,108,97,118,101,47,114,117,115,116,45,98,117,105,108,100,98,111,116,47,115,108,97,118,101,47,110,105,103,104,116,108,121,45,100,105,115,116,45,114,117,115,116,99,45,99,114,111,115,115,45,114,117,115,116,98,117,105,108,100,45,108,105,110,117,120,47,98,117,105,108,100,47,115,114,99,47,108,105,98,99,111,114,101,47,110,117,109,47,100,105,121,95,102,108,111,97,116,46,114,115,97,115,115,101,114,116,105,111,110,32,102,97,105,108,101,100,58,32,101,100,101,108,116,97,32,62,61,32,48,97,115,115,101,114,116,105,111,110,32,102,97,105,108,101,100,58,32,100,46,109,97,110,116,32,43,32,100,46,112,108,117,115,32,60,32,40,49,32,60,60,32,54,49,41,97,115,115,101,114,116,105,111,110,32,102,97,105,108,101,100,58,32,100,46,109,97,110,116,32,60,32,40,49,32,60,60,32,54,49,41,48,46,46,97,115,115,101,114,116,105,111,110,32,102,97,105,108,101,100,58,32,98,117,102,91,48,93,32,62,32,98,39,48,39,45,43,91,46,46,46,93,32,97,110,100,47,111,114,32,32,105,110,32,96,96,32,100,111,32,110,111,116,32,108,105,101,32,111,110,32,99,104,97,114,97,99,116,101,114,32,98,111,117,110,100,97,114,121,98,101,103,105,110,32,60,61,32,101,110,100,32,40,32,60,61,32,41,32,119,104,101,110,32,115,108,105,99,105,110,103,32,96,47,98,117,105,108,100,115,108,97,118,101,47,114,117,115,116,45,98,117,105,108,100,98,111,116,47,115,108,97,118,101,47,110,105,103,104,116,108,121,45,100,105,115,116,45,114,117,115,116,99,45,99,114,111,115,115,45,114,117,115,116,98,117,105,108,100,45,108,105,110,117,120,47,98,117,105,108,100,47,115,114,99,47,108,105,98,99,111,114,101,47,102,109,116,47,109,111,100,46,114,115,10,41,32,32,32,32,32,66,111,114,114,111,119,69,114,114,111,114,66,111,114,114,111,119,77,117,116,69,114,114,111,114,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,4,4,4,4,4,0,0,0,0,0,0,0,0,0,0,0,32,123,10,125,32,125,44,32,91,47,98,117,105,108,100,115,108,97,118,101,47,114,117,115,116,45,98,117,105,108,100,98,111,116,47,115,108,97,118,101,47,110,105,103,104,116,108,121,45,100,105,115,116,45,114,117,115,116,99,45,99,114,111,115,115,45,114,117,115,116,98,117,105,108,100,45,108,105,110,117,120,47,98,117,105,108,100,47,115,114,99,47,108,105,98,99,111,114,101,47,99,104,97,114,95,112,114,105,118,97,116,101,46,114,115,107,105,110,100,69,109,112,116,121,48,120,80,97,114,115,101,73,110,116,69,114,114,111,114,73,110,118,97,108,105,100,68,105,103,105,116,79,118,101,114,102,108,111,119,85,110,100,101,114,102,108,111,119,85,116,102,56,69,114,114,111,114,118,97,108,105,100,95,117,112,95,116,111,78,97,78,105,110,102,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,84,33,34,25,13,1,2,3,17,75,28,12,16,4,11,29,18,30,39,104,110,111,112,113,98,32,5,6,15,19,20,21,26,8,22,7,40,36,23,24,9,10,14,27,31,37,35,131,130,125,38,42,43,60,61,62,63,67,71,74,77,88,89,90,91,92,93,94,95,96,97,99,100,101,102,103,105,106,107,108,114,115,116,121,122,123,124,0,73,108,108,101,103,97,108,32,98,121,116,101,32,115,101,113,117,101,110,99,101,0,68,111,109,97,105,110,32,101,114,114,111,114,0,82,101,115,117,108,116,32,110,111,116,32,114,101,112,114,101,115,101,110,116,97,98,108,101,0,78,111,116,32,97,32,116,116,121,0,80,101,114,109,105,115,115,105,111,110,32,100,101,110,105,101,100,0,79,112,101,114,97,116,105,111,110,32,110,111,116,32,112,101,114,109,105,116,116,101,100,0,78,111,32,115,117,99,104,32,102,105,108,101,32,111,114,32,100,105,114,101,99,116,111,114,121,0,78,111,32,115,117,99,104,32,112,114,111,99,101,115,115,0,70,105,108,101,32,101,120,105,115,116,115,0,86,97,108,117,101,32,116,111,111,32,108,97,114,103,101,32,102,111,114,32,100,97,116,97,32,116,121,112,101,0,78,111,32,115,112,97,99,101,32,108,101,102,116,32,111,110,32,100,101,118,105,99,101,0,79,117,116,32,111,102,32,109,101,109,111,114,121,0,82,101,115,111,117,114,99,101,32,98,117,115,121,0,73,110,116,101,114,114,117,112,116,101,100,32,115,121,115,116,101,109,32,99,97,108,108,0,82,101,115,111,117,114,99,101,32,116,101,109,112,111,114,97,114,105,108,121,32,117,110,97,118,97,105,108,97,98,108,101,0,73,110,118,97,108,105,100,32,115,101,101,107,0,67,114,111,115,115,45,100,101,118,105,99,101,32,108,105,110,107,0,82,101,97,100,45,111,110,108,121,32,102,105,108,101,32,115,121,115,116,101,109,0,68,105,114,101,99,116,111,114,121,32,110,111,116,32,101,109,112,116,121,0,67,111,110,110,101,99,116,105,111,110,32,114,101,115,101,116,32,98,121,32,112,101,101,114,0,79,112,101,114,97,116,105,111,110,32,116,105,109,101,100,32,111,117,116,0,67,111,110,110,101,99,116,105,111,110,32,114,101,102,117,115,101,100,0,72,111,115,116,32,105,115,32,100,111,119,110,0,72,111,115,116,32,105,115,32,117,110,114,101,97,99,104,97,98,108,101,0,65,100,100,114,101,115,115,32,105,110,32,117,115,101,0,66,114,111,107,101,110,32,112,105,112,101,0,73,47,79,32,101,114,114,111,114,0,78,111,32,115,117,99,104,32,100,101,118,105,99,101,32,111,114,32,97,100,100,114,101,115,115,0,66,108,111,99,107,32,100,101,118,105,99,101,32,114,101,113,117,105,114,101,100,0,78,111,32,115,117,99,104,32,100,101,118,105,99,101,0,78,111,116,32,97,32,100,105,114,101,99,116,111,114,121,0,73,115,32,97,32,100,105,114,101,99,116,111,114,121,0,84,101,120,116,32,102,105,108,101,32,98,117,115,121,0,69,120,101,99,32,102,111,114,109,97,116,32,101,114,114,111,114,0,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,0,65,114,103,117,109,101,110,116,32,108,105,115,116,32,116,111,111,32,108,111,110,103,0,83,121,109,98,111,108,105,99,32,108,105,110,107,32,108,111,111,112,0,70,105,108,101,110,97,109,101,32,116,111,111,32,108,111,110,103,0,84,111,111,32,109,97,110,121,32,111,112,101,110,32,102,105,108,101,115,32,105,110,32,115,121,115,116,101,109,0,78,111,32,102,105,108,101,32,100,101,115,99,114,105,112,116,111,114,115,32,97,118,97,105,108,97,98,108,101,0,66,97,100,32,102,105,108,101,32,100,101,115,99,114,105,112,116,111,114,0,78,111,32,99,104,105,108,100,32,112,114,111,99,101,115,115,0,66,97,100,32,97,100,100,114,101,115,115,0,70,105,108,101,32,116,111,111,32,108,97,114,103,101,0,84,111,111,32,109,97,110,121,32,108,105,110,107,115,0,78,111,32,108,111,99,107,115,32,97,118,97,105,108,97,98,108,101,0,82,101,115,111,117,114,99,101,32,100,101,97,100,108,111,99,107,32,119,111,117,108,100,32,111,99,99,117,114,0,83,116,97,116,101,32,110,111,116,32,114,101,99,111,118,101,114,97,98,108,101,0,80,114,101,118,105,111,117,115,32,111,119,110,101,114,32,100,105,101,100,0,79,112,101,114,97,116,105,111,110,32,99,97,110,99,101,108,101,100,0,70,117,110,99,116,105,111,110,32,110,111,116,32,105,109,112,108,101,109,101,110,116,101,100,0,78,111,32,109,101,115,115,97,103,101,32,111,102,32,100,101,115,105,114,101,100,32,116,121,112,101,0,73,100,101,110,116,105,102,105,101,114,32,114,101,109,111,118,101,100,0,68,101,118,105,99,101,32,110,111,116,32,97,32,115,116,114,101,97,109,0,78,111,32,100,97,116,97,32,97,118,97,105,108,97,98,108,101,0,68,101,118,105,99,101,32,116,105,109,101,111,117,116,0,79,117,116,32,111,102,32,115,116,114,101,97,109,115,32,114,101,115,111,117,114,99,101,115,0,76,105,110,107,32,104,97,115,32,98,101,101,110,32,115,101,118,101,114,101,100,0,80,114,111,116,111,99,111,108,32,101,114,114,111,114,0,66,97,100,32,109,101,115,115,97,103,101,0,70,105,108,101,32,100,101,115,99,114,105,112,116,111,114,32,105,110,32,98,97,100,32,115,116,97,116,101,0,78,111,116,32,97,32,115,111,99,107,101,116,0,68,101,115,116,105,110,97,116,105,111,110,32,97,100,100,114,101,115,115,32,114,101,113,117,105,114,101,100,0,77,101,115,115,97,103,101,32,116,111,111,32,108,97,114,103,101,0,80,114,111,116,111,99,111,108,32,119,114,111,110,103,32,116,121,112,101,32,102,111,114,32,115,111,99,107,101,116,0,80,114,111,116,111,99,111,108,32,110,111,116,32,97,118,97,105,108,97,98,108,101,0,80,114,111,116,111,99,111,108,32,110,111,116,32,115,117,112,112,111,114,116,101,100,0,83,111,99,107,101,116,32,116,121,112,101,32,110,111,116,32,115,117,112,112,111,114,116,101,100,0,78,111,116,32,115,117,112,112,111,114,116,101,100,0,80,114,111,116,111,99,111,108,32,102,97,109,105,108,121,32,110,111,116,32,115,117,112,112,111,114,116,101,100,0,65,100,100,114,101,115,115,32,102,97,109,105,108,121,32,110,111,116,32,115,117,112,112,111,114,116,101,100,32,98,121,32,112,114,111,116,111,99,111,108,0,65,100,100,114,101,115,115,32,110,111,116,32,97,118,97,105,108,97,98,108,101,0,78,101,116,119,111,114,107,32,105,115,32,100,111,119,110,0,78,101,116,119,111,114,107,32,117,110,114,101,97,99,104,97,98,108,101,0,67,111,110,110,101,99,116,105,111,110,32,114,101,115,101,116,32,98,121,32,110,101,116,119,111,114,107,0,67,111,110,110,101,99,116,105,111,110,32,97,98,111,114,116,101,100,0,78,111,32,98,117,102,102,101,114,32,115,112,97,99,101,32,97,118,97,105,108,97,98,108,101,0,83,111,99,107,101,116,32,105,115,32,99,111,110,110,101,99,116,101,100,0,83,111,99,107,101,116,32,110,111,116,32,99,111,110,110,101,99,116,101,100,0,67,97,110,110,111,116,32,115,101,110,100,32,97,102,116,101,114,32,115,111,99,107,101,116,32,115,104,117,116,100,111,119,110,0,79,112,101,114,97,116,105,111,110,32,97,108,114,101,97,100,121,32,105,110,32,112,114,111,103,114,101,115,115,0,79,112,101,114,97,116,105,111,110,32,105,110,32,112,114,111,103,114,101,115,115,0,83,116,97,108,101,32,102,105,108,101,32,104,97,110,100,108,101,0,82,101,109,111,116,101,32,73,47,79,32,101,114,114,111,114,0,81,117,111,116,97,32,101,120,99,101,101,100,101,100,0,78,111,32,109,101,100,105,117,109,32,102,111,117,110,100,0,87,114,111,110,103,32,109,101,100,105,117,109,32,116,121,112,101,0,78,111,32,101,114,114,111,114,32,105,110,102,111,114,109,97,116,105,111,110,0,0], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+20480);





/* no memory initializer */
var tempDoublePtr = STATICTOP; STATICTOP += 16;

assert(tempDoublePtr % 8 == 0);

function copyTempFloat(ptr) { // functions, because inlining this code increases code size too much

  HEAP8[tempDoublePtr] = HEAP8[ptr];

  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];

  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];

  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];

}

function copyTempDouble(ptr) {

  HEAP8[tempDoublePtr] = HEAP8[ptr];

  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];

  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];

  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];

  HEAP8[tempDoublePtr+4] = HEAP8[ptr+4];

  HEAP8[tempDoublePtr+5] = HEAP8[ptr+5];

  HEAP8[tempDoublePtr+6] = HEAP8[ptr+6];

  HEAP8[tempDoublePtr+7] = HEAP8[ptr+7];

}

// {{PRE_LIBRARY}}


   
  Module["_i64Subtract"] = _i64Subtract;

   
  Module["_i64Add"] = _i64Add;

  
  function __ZSt18uncaught_exceptionv() { // std::uncaught_exception()
      return !!__ZSt18uncaught_exceptionv.uncaught_exception;
    }
  
  
  
  var EXCEPTIONS={last:0,caught:[],infos:{},deAdjust:function (adjusted) {
        if (!adjusted || EXCEPTIONS.infos[adjusted]) return adjusted;
        for (var ptr in EXCEPTIONS.infos) {
          var info = EXCEPTIONS.infos[ptr];
          if (info.adjusted === adjusted) {
            return ptr;
          }
        }
        return adjusted;
      },addRef:function (ptr) {
        if (!ptr) return;
        var info = EXCEPTIONS.infos[ptr];
        info.refcount++;
      },decRef:function (ptr) {
        if (!ptr) return;
        var info = EXCEPTIONS.infos[ptr];
        assert(info.refcount > 0);
        info.refcount--;
        // A rethrown exception can reach refcount 0; it must not be discarded
        // Its next handler will clear the rethrown flag and addRef it, prior to
        // final decRef and destruction here
        if (info.refcount === 0 && !info.rethrown) {
          if (info.destructor) {
            Runtime.dynCall('vi', info.destructor, [ptr]);
          }
          delete EXCEPTIONS.infos[ptr];
          ___cxa_free_exception(ptr);
        }
      },clearRef:function (ptr) {
        if (!ptr) return;
        var info = EXCEPTIONS.infos[ptr];
        info.refcount = 0;
      }};
  function ___resumeException(ptr) {
      if (!EXCEPTIONS.last) { EXCEPTIONS.last = ptr; }
      throw ptr;
    }function ___cxa_find_matching_catch() {
      var thrown = EXCEPTIONS.last;
      if (!thrown) {
        // just pass through the null ptr
        return ((asm["setTempRet0"](0),0)|0);
      }
      var info = EXCEPTIONS.infos[thrown];
      var throwntype = info.type;
      if (!throwntype) {
        // just pass through the thrown ptr
        return ((asm["setTempRet0"](0),thrown)|0);
      }
      var typeArray = Array.prototype.slice.call(arguments);
  
      var pointer = Module['___cxa_is_pointer_type'](throwntype);
      // can_catch receives a **, add indirection
      if (!___cxa_find_matching_catch.buffer) ___cxa_find_matching_catch.buffer = _malloc(4);
      HEAP32[((___cxa_find_matching_catch.buffer)>>2)]=thrown;
      thrown = ___cxa_find_matching_catch.buffer;
      // The different catch blocks are denoted by different types.
      // Due to inheritance, those types may not precisely match the
      // type of the thrown object. Find one which matches, and
      // return the type of the catch block which should be called.
      for (var i = 0; i < typeArray.length; i++) {
        if (typeArray[i] && Module['___cxa_can_catch'](typeArray[i], throwntype, thrown)) {
          thrown = HEAP32[((thrown)>>2)]; // undo indirection
          info.adjusted = thrown;
          return ((asm["setTempRet0"](typeArray[i]),thrown)|0);
        }
      }
      // Shouldn't happen unless we have bogus data in typeArray
      // or encounter a type for which emscripten doesn't have suitable
      // typeinfo defined. Best-efforts match just in case.
      thrown = HEAP32[((thrown)>>2)]; // undo indirection
      return ((asm["setTempRet0"](throwntype),thrown)|0);
    }function ___cxa_throw(ptr, type, destructor) {
      EXCEPTIONS.infos[ptr] = {
        ptr: ptr,
        adjusted: ptr,
        type: type,
        destructor: destructor,
        refcount: 0,
        caught: false,
        rethrown: false
      };
      EXCEPTIONS.last = ptr;
      if (!("uncaught_exception" in __ZSt18uncaught_exceptionv)) {
        __ZSt18uncaught_exceptionv.uncaught_exception = 1;
      } else {
        __ZSt18uncaught_exceptionv.uncaught_exception++;
      }
      throw ptr;
    }

  function __Unwind_FindEnclosingFunction() {
      return 0; // we cannot succeed
    }

   
  Module["_pthread_mutex_lock"] = _pthread_mutex_lock;

  var _llvm_sin_f32=Math_sin;

  function _pthread_condattr_destroy() { return 0; }

  var _llvm_floor_f32=Math_floor;

  var _emscripten_asm_const_int=true;

  
  var PTHREAD_SPECIFIC={};
  
  var PTHREAD_SPECIFIC_NEXT_KEY=1;
  
  var ERRNO_CODES={EPERM:1,ENOENT:2,ESRCH:3,EINTR:4,EIO:5,ENXIO:6,E2BIG:7,ENOEXEC:8,EBADF:9,ECHILD:10,EAGAIN:11,EWOULDBLOCK:11,ENOMEM:12,EACCES:13,EFAULT:14,ENOTBLK:15,EBUSY:16,EEXIST:17,EXDEV:18,ENODEV:19,ENOTDIR:20,EISDIR:21,EINVAL:22,ENFILE:23,EMFILE:24,ENOTTY:25,ETXTBSY:26,EFBIG:27,ENOSPC:28,ESPIPE:29,EROFS:30,EMLINK:31,EPIPE:32,EDOM:33,ERANGE:34,ENOMSG:42,EIDRM:43,ECHRNG:44,EL2NSYNC:45,EL3HLT:46,EL3RST:47,ELNRNG:48,EUNATCH:49,ENOCSI:50,EL2HLT:51,EDEADLK:35,ENOLCK:37,EBADE:52,EBADR:53,EXFULL:54,ENOANO:55,EBADRQC:56,EBADSLT:57,EDEADLOCK:35,EBFONT:59,ENOSTR:60,ENODATA:61,ETIME:62,ENOSR:63,ENONET:64,ENOPKG:65,EREMOTE:66,ENOLINK:67,EADV:68,ESRMNT:69,ECOMM:70,EPROTO:71,EMULTIHOP:72,EDOTDOT:73,EBADMSG:74,ENOTUNIQ:76,EBADFD:77,EREMCHG:78,ELIBACC:79,ELIBBAD:80,ELIBSCN:81,ELIBMAX:82,ELIBEXEC:83,ENOSYS:38,ENOTEMPTY:39,ENAMETOOLONG:36,ELOOP:40,EOPNOTSUPP:95,EPFNOSUPPORT:96,ECONNRESET:104,ENOBUFS:105,EAFNOSUPPORT:97,EPROTOTYPE:91,ENOTSOCK:88,ENOPROTOOPT:92,ESHUTDOWN:108,ECONNREFUSED:111,EADDRINUSE:98,ECONNABORTED:103,ENETUNREACH:101,ENETDOWN:100,ETIMEDOUT:110,EHOSTDOWN:112,EHOSTUNREACH:113,EINPROGRESS:115,EALREADY:114,EDESTADDRREQ:89,EMSGSIZE:90,EPROTONOSUPPORT:93,ESOCKTNOSUPPORT:94,EADDRNOTAVAIL:99,ENETRESET:102,EISCONN:106,ENOTCONN:107,ETOOMANYREFS:109,EUSERS:87,EDQUOT:122,ESTALE:116,ENOTSUP:95,ENOMEDIUM:123,EILSEQ:84,EOVERFLOW:75,ECANCELED:125,ENOTRECOVERABLE:131,EOWNERDEAD:130,ESTRPIPE:86};function _pthread_key_create(key, destructor) {
      if (key == 0) {
        return ERRNO_CODES.EINVAL;
      }
      HEAP32[((key)>>2)]=PTHREAD_SPECIFIC_NEXT_KEY;
      // values start at 0
      PTHREAD_SPECIFIC[PTHREAD_SPECIFIC_NEXT_KEY] = 0;
      PTHREAD_SPECIFIC_NEXT_KEY++;
      return 0;
    }

  function _pthread_mutex_init() {}

  function _pthread_mutexattr_destroy() {}

  
  
  
  var ERRNO_MESSAGES={0:"Success",1:"Not super-user",2:"No such file or directory",3:"No such process",4:"Interrupted system call",5:"I/O error",6:"No such device or address",7:"Arg list too long",8:"Exec format error",9:"Bad file number",10:"No children",11:"No more processes",12:"Not enough core",13:"Permission denied",14:"Bad address",15:"Block device required",16:"Mount device busy",17:"File exists",18:"Cross-device link",19:"No such device",20:"Not a directory",21:"Is a directory",22:"Invalid argument",23:"Too many open files in system",24:"Too many open files",25:"Not a typewriter",26:"Text file busy",27:"File too large",28:"No space left on device",29:"Illegal seek",30:"Read only file system",31:"Too many links",32:"Broken pipe",33:"Math arg out of domain of func",34:"Math result not representable",35:"File locking deadlock error",36:"File or path name too long",37:"No record locks available",38:"Function not implemented",39:"Directory not empty",40:"Too many symbolic links",42:"No message of desired type",43:"Identifier removed",44:"Channel number out of range",45:"Level 2 not synchronized",46:"Level 3 halted",47:"Level 3 reset",48:"Link number out of range",49:"Protocol driver not attached",50:"No CSI structure available",51:"Level 2 halted",52:"Invalid exchange",53:"Invalid request descriptor",54:"Exchange full",55:"No anode",56:"Invalid request code",57:"Invalid slot",59:"Bad font file fmt",60:"Device not a stream",61:"No data (for no delay io)",62:"Timer expired",63:"Out of streams resources",64:"Machine is not on the network",65:"Package not installed",66:"The object is remote",67:"The link has been severed",68:"Advertise error",69:"Srmount error",70:"Communication error on send",71:"Protocol error",72:"Multihop attempted",73:"Cross mount point (not really error)",74:"Trying to read unreadable message",75:"Value too large for defined data type",76:"Given log. name not unique",77:"f.d. invalid for this operation",78:"Remote address changed",79:"Can   access a needed shared lib",80:"Accessing a corrupted shared lib",81:".lib section in a.out corrupted",82:"Attempting to link in too many libs",83:"Attempting to exec a shared library",84:"Illegal byte sequence",86:"Streams pipe error",87:"Too many users",88:"Socket operation on non-socket",89:"Destination address required",90:"Message too long",91:"Protocol wrong type for socket",92:"Protocol not available",93:"Unknown protocol",94:"Socket type not supported",95:"Not supported",96:"Protocol family not supported",97:"Address family not supported by protocol family",98:"Address already in use",99:"Address not available",100:"Network interface is not configured",101:"Network is unreachable",102:"Connection reset by network",103:"Connection aborted",104:"Connection reset by peer",105:"No buffer space available",106:"Socket is already connected",107:"Socket is not connected",108:"Can't send after socket shutdown",109:"Too many references",110:"Connection timed out",111:"Connection refused",112:"Host is down",113:"Host is unreachable",114:"Socket already connected",115:"Connection already in progress",116:"Stale file handle",122:"Quota exceeded",123:"No medium (in tape drive)",125:"Operation canceled",130:"Previous owner died",131:"State not recoverable"};
  
  function ___setErrNo(value) {
      if (Module['___errno_location']) HEAP32[((Module['___errno_location']())>>2)]=value;
      else Module.printErr('failed to set errno from JS');
      return value;
    }
  
  var PATH={splitPath:function (filename) {
        var splitPathRe = /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;
        return splitPathRe.exec(filename).slice(1);
      },normalizeArray:function (parts, allowAboveRoot) {
        // if the path tries to go above the root, `up` ends up > 0
        var up = 0;
        for (var i = parts.length - 1; i >= 0; i--) {
          var last = parts[i];
          if (last === '.') {
            parts.splice(i, 1);
          } else if (last === '..') {
            parts.splice(i, 1);
            up++;
          } else if (up) {
            parts.splice(i, 1);
            up--;
          }
        }
        // if the path is allowed to go above the root, restore leading ..s
        if (allowAboveRoot) {
          for (; up--; up) {
            parts.unshift('..');
          }
        }
        return parts;
      },normalize:function (path) {
        var isAbsolute = path.charAt(0) === '/',
            trailingSlash = path.substr(-1) === '/';
        // Normalize the path
        path = PATH.normalizeArray(path.split('/').filter(function(p) {
          return !!p;
        }), !isAbsolute).join('/');
        if (!path && !isAbsolute) {
          path = '.';
        }
        if (path && trailingSlash) {
          path += '/';
        }
        return (isAbsolute ? '/' : '') + path;
      },dirname:function (path) {
        var result = PATH.splitPath(path),
            root = result[0],
            dir = result[1];
        if (!root && !dir) {
          // No dirname whatsoever
          return '.';
        }
        if (dir) {
          // It has a dirname, strip trailing slash
          dir = dir.substr(0, dir.length - 1);
        }
        return root + dir;
      },basename:function (path) {
        // EMSCRIPTEN return '/'' for '/', not an empty string
        if (path === '/') return '/';
        var lastSlash = path.lastIndexOf('/');
        if (lastSlash === -1) return path;
        return path.substr(lastSlash+1);
      },extname:function (path) {
        return PATH.splitPath(path)[3];
      },join:function () {
        var paths = Array.prototype.slice.call(arguments, 0);
        return PATH.normalize(paths.join('/'));
      },join2:function (l, r) {
        return PATH.normalize(l + '/' + r);
      },resolve:function () {
        var resolvedPath = '',
          resolvedAbsolute = false;
        for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {
          var path = (i >= 0) ? arguments[i] : FS.cwd();
          // Skip empty and invalid entries
          if (typeof path !== 'string') {
            throw new TypeError('Arguments to path.resolve must be strings');
          } else if (!path) {
            return ''; // an invalid portion invalidates the whole thing
          }
          resolvedPath = path + '/' + resolvedPath;
          resolvedAbsolute = path.charAt(0) === '/';
        }
        // At this point the path should be resolved to a full absolute path, but
        // handle relative paths to be safe (might happen when process.cwd() fails)
        resolvedPath = PATH.normalizeArray(resolvedPath.split('/').filter(function(p) {
          return !!p;
        }), !resolvedAbsolute).join('/');
        return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';
      },relative:function (from, to) {
        from = PATH.resolve(from).substr(1);
        to = PATH.resolve(to).substr(1);
        function trim(arr) {
          var start = 0;
          for (; start < arr.length; start++) {
            if (arr[start] !== '') break;
          }
          var end = arr.length - 1;
          for (; end >= 0; end--) {
            if (arr[end] !== '') break;
          }
          if (start > end) return [];
          return arr.slice(start, end - start + 1);
        }
        var fromParts = trim(from.split('/'));
        var toParts = trim(to.split('/'));
        var length = Math.min(fromParts.length, toParts.length);
        var samePartsLength = length;
        for (var i = 0; i < length; i++) {
          if (fromParts[i] !== toParts[i]) {
            samePartsLength = i;
            break;
          }
        }
        var outputParts = [];
        for (var i = samePartsLength; i < fromParts.length; i++) {
          outputParts.push('..');
        }
        outputParts = outputParts.concat(toParts.slice(samePartsLength));
        return outputParts.join('/');
      }};
  
  var TTY={ttys:[],init:function () {
        // https://github.com/kripken/emscripten/pull/1555
        // if (ENVIRONMENT_IS_NODE) {
        //   // currently, FS.init does not distinguish if process.stdin is a file or TTY
        //   // device, it always assumes it's a TTY device. because of this, we're forcing
        //   // process.stdin to UTF8 encoding to at least make stdin reading compatible
        //   // with text files until FS.init can be refactored.
        //   process['stdin']['setEncoding']('utf8');
        // }
      },shutdown:function () {
        // https://github.com/kripken/emscripten/pull/1555
        // if (ENVIRONMENT_IS_NODE) {
        //   // inolen: any idea as to why node -e 'process.stdin.read()' wouldn't exit immediately (with process.stdin being a tty)?
        //   // isaacs: because now it's reading from the stream, you've expressed interest in it, so that read() kicks off a _read() which creates a ReadReq operation
        //   // inolen: I thought read() in that case was a synchronous operation that just grabbed some amount of buffered data if it exists?
        //   // isaacs: it is. but it also triggers a _read() call, which calls readStart() on the handle
        //   // isaacs: do process.stdin.pause() and i'd think it'd probably close the pending call
        //   process['stdin']['pause']();
        // }
      },register:function (dev, ops) {
        TTY.ttys[dev] = { input: [], output: [], ops: ops };
        FS.registerDevice(dev, TTY.stream_ops);
      },stream_ops:{open:function (stream) {
          var tty = TTY.ttys[stream.node.rdev];
          if (!tty) {
            throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
          }
          stream.tty = tty;
          stream.seekable = false;
        },close:function (stream) {
          // flush any pending line data
          stream.tty.ops.flush(stream.tty);
        },flush:function (stream) {
          stream.tty.ops.flush(stream.tty);
        },read:function (stream, buffer, offset, length, pos /* ignored */) {
          if (!stream.tty || !stream.tty.ops.get_char) {
            throw new FS.ErrnoError(ERRNO_CODES.ENXIO);
          }
          var bytesRead = 0;
          for (var i = 0; i < length; i++) {
            var result;
            try {
              result = stream.tty.ops.get_char(stream.tty);
            } catch (e) {
              throw new FS.ErrnoError(ERRNO_CODES.EIO);
            }
            if (result === undefined && bytesRead === 0) {
              throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
            }
            if (result === null || result === undefined) break;
            bytesRead++;
            buffer[offset+i] = result;
          }
          if (bytesRead) {
            stream.node.timestamp = Date.now();
          }
          return bytesRead;
        },write:function (stream, buffer, offset, length, pos) {
          if (!stream.tty || !stream.tty.ops.put_char) {
            throw new FS.ErrnoError(ERRNO_CODES.ENXIO);
          }
          for (var i = 0; i < length; i++) {
            try {
              stream.tty.ops.put_char(stream.tty, buffer[offset+i]);
            } catch (e) {
              throw new FS.ErrnoError(ERRNO_CODES.EIO);
            }
          }
          if (length) {
            stream.node.timestamp = Date.now();
          }
          return i;
        }},default_tty_ops:{get_char:function (tty) {
          if (!tty.input.length) {
            var result = null;
            if (ENVIRONMENT_IS_NODE) {
              // we will read data by chunks of BUFSIZE
              var BUFSIZE = 256;
              var buf = new Buffer(BUFSIZE);
              var bytesRead = 0;
  
              var isPosixPlatform = (process.platform != 'win32'); // Node doesn't offer a direct check, so test by exclusion
  
              var fd = process.stdin.fd;
              if (isPosixPlatform) {
                // Linux and Mac cannot use process.stdin.fd (which isn't set up as sync)
                var usingDevice = false;
                try {
                  fd = fs.openSync('/dev/stdin', 'r');
                  usingDevice = true;
                } catch (e) {}
              }
  
              try {
                bytesRead = fs.readSync(fd, buf, 0, BUFSIZE, null);
              } catch(e) {
                // Cross-platform differences: on Windows, reading EOF throws an exception, but on other OSes,
                // reading EOF returns 0. Uniformize behavior by treating the EOF exception to return 0.
                if (e.toString().indexOf('EOF') != -1) bytesRead = 0;
                else throw e;
              }
  
              if (usingDevice) { fs.closeSync(fd); }
              if (bytesRead > 0) {
                result = buf.slice(0, bytesRead).toString('utf-8');
              } else {
                result = null;
              }
  
            } else if (typeof window != 'undefined' &&
              typeof window.prompt == 'function') {
              // Browser.
              result = window.prompt('Input: ');  // returns null on cancel
              if (result !== null) {
                result += '\n';
              }
            } else if (typeof readline == 'function') {
              // Command line.
              result = readline();
              if (result !== null) {
                result += '\n';
              }
            }
            if (!result) {
              return null;
            }
            tty.input = intArrayFromString(result, true);
          }
          return tty.input.shift();
        },put_char:function (tty, val) {
          if (val === null || val === 10) {
            Module['print'](UTF8ArrayToString(tty.output, 0));
            tty.output = [];
          } else {
            if (val != 0) tty.output.push(val); // val == 0 would cut text output off in the middle.
          }
        },flush:function (tty) {
          if (tty.output && tty.output.length > 0) {
            Module['print'](UTF8ArrayToString(tty.output, 0));
            tty.output = [];
          }
        }},default_tty1_ops:{put_char:function (tty, val) {
          if (val === null || val === 10) {
            Module['printErr'](UTF8ArrayToString(tty.output, 0));
            tty.output = [];
          } else {
            if (val != 0) tty.output.push(val);
          }
        },flush:function (tty) {
          if (tty.output && tty.output.length > 0) {
            Module['printErr'](UTF8ArrayToString(tty.output, 0));
            tty.output = [];
          }
        }}};
  
  var MEMFS={ops_table:null,mount:function (mount) {
        return MEMFS.createNode(null, '/', 16384 | 511 /* 0777 */, 0);
      },createNode:function (parent, name, mode, dev) {
        if (FS.isBlkdev(mode) || FS.isFIFO(mode)) {
          // no supported
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (!MEMFS.ops_table) {
          MEMFS.ops_table = {
            dir: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr,
                lookup: MEMFS.node_ops.lookup,
                mknod: MEMFS.node_ops.mknod,
                rename: MEMFS.node_ops.rename,
                unlink: MEMFS.node_ops.unlink,
                rmdir: MEMFS.node_ops.rmdir,
                readdir: MEMFS.node_ops.readdir,
                symlink: MEMFS.node_ops.symlink
              },
              stream: {
                llseek: MEMFS.stream_ops.llseek
              }
            },
            file: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr
              },
              stream: {
                llseek: MEMFS.stream_ops.llseek,
                read: MEMFS.stream_ops.read,
                write: MEMFS.stream_ops.write,
                allocate: MEMFS.stream_ops.allocate,
                mmap: MEMFS.stream_ops.mmap,
                msync: MEMFS.stream_ops.msync
              }
            },
            link: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr,
                readlink: MEMFS.node_ops.readlink
              },
              stream: {}
            },
            chrdev: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr
              },
              stream: FS.chrdev_stream_ops
            }
          };
        }
        var node = FS.createNode(parent, name, mode, dev);
        if (FS.isDir(node.mode)) {
          node.node_ops = MEMFS.ops_table.dir.node;
          node.stream_ops = MEMFS.ops_table.dir.stream;
          node.contents = {};
        } else if (FS.isFile(node.mode)) {
          node.node_ops = MEMFS.ops_table.file.node;
          node.stream_ops = MEMFS.ops_table.file.stream;
          node.usedBytes = 0; // The actual number of bytes used in the typed array, as opposed to contents.buffer.byteLength which gives the whole capacity.
          // When the byte data of the file is populated, this will point to either a typed array, or a normal JS array. Typed arrays are preferred
          // for performance, and used by default. However, typed arrays are not resizable like normal JS arrays are, so there is a small disk size
          // penalty involved for appending file writes that continuously grow a file similar to std::vector capacity vs used -scheme.
          node.contents = null; 
        } else if (FS.isLink(node.mode)) {
          node.node_ops = MEMFS.ops_table.link.node;
          node.stream_ops = MEMFS.ops_table.link.stream;
        } else if (FS.isChrdev(node.mode)) {
          node.node_ops = MEMFS.ops_table.chrdev.node;
          node.stream_ops = MEMFS.ops_table.chrdev.stream;
        }
        node.timestamp = Date.now();
        // add the new node to the parent
        if (parent) {
          parent.contents[name] = node;
        }
        return node;
      },getFileDataAsRegularArray:function (node) {
        if (node.contents && node.contents.subarray) {
          var arr = [];
          for (var i = 0; i < node.usedBytes; ++i) arr.push(node.contents[i]);
          return arr; // Returns a copy of the original data.
        }
        return node.contents; // No-op, the file contents are already in a JS array. Return as-is.
      },getFileDataAsTypedArray:function (node) {
        if (!node.contents) return new Uint8Array;
        if (node.contents.subarray) return node.contents.subarray(0, node.usedBytes); // Make sure to not return excess unused bytes.
        return new Uint8Array(node.contents);
      },expandFileStorage:function (node, newCapacity) {
        // If we are asked to expand the size of a file that already exists, revert to using a standard JS array to store the file
        // instead of a typed array. This makes resizing the array more flexible because we can just .push() elements at the back to
        // increase the size.
        if (node.contents && node.contents.subarray && newCapacity > node.contents.length) {
          node.contents = MEMFS.getFileDataAsRegularArray(node);
          node.usedBytes = node.contents.length; // We might be writing to a lazy-loaded file which had overridden this property, so force-reset it.
        }
  
        if (!node.contents || node.contents.subarray) { // Keep using a typed array if creating a new storage, or if old one was a typed array as well.
          var prevCapacity = node.contents ? node.contents.buffer.byteLength : 0;
          if (prevCapacity >= newCapacity) return; // No need to expand, the storage was already large enough.
          // Don't expand strictly to the given requested limit if it's only a very small increase, but instead geometrically grow capacity.
          // For small filesizes (<1MB), perform size*2 geometric increase, but for large sizes, do a much more conservative size*1.125 increase to
          // avoid overshooting the allocation cap by a very large margin.
          var CAPACITY_DOUBLING_MAX = 1024 * 1024;
          newCapacity = Math.max(newCapacity, (prevCapacity * (prevCapacity < CAPACITY_DOUBLING_MAX ? 2.0 : 1.125)) | 0);
          if (prevCapacity != 0) newCapacity = Math.max(newCapacity, 256); // At minimum allocate 256b for each file when expanding.
          var oldContents = node.contents;
          node.contents = new Uint8Array(newCapacity); // Allocate new storage.
          if (node.usedBytes > 0) node.contents.set(oldContents.subarray(0, node.usedBytes), 0); // Copy old data over to the new storage.
          return;
        }
        // Not using a typed array to back the file storage. Use a standard JS array instead.
        if (!node.contents && newCapacity > 0) node.contents = [];
        while (node.contents.length < newCapacity) node.contents.push(0);
      },resizeFileStorage:function (node, newSize) {
        if (node.usedBytes == newSize) return;
        if (newSize == 0) {
          node.contents = null; // Fully decommit when requesting a resize to zero.
          node.usedBytes = 0;
          return;
        }
        if (!node.contents || node.contents.subarray) { // Resize a typed array if that is being used as the backing store.
          var oldContents = node.contents;
          node.contents = new Uint8Array(new ArrayBuffer(newSize)); // Allocate new storage.
          if (oldContents) {
            node.contents.set(oldContents.subarray(0, Math.min(newSize, node.usedBytes))); // Copy old data over to the new storage.
          }
          node.usedBytes = newSize;
          return;
        }
        // Backing with a JS array.
        if (!node.contents) node.contents = [];
        if (node.contents.length > newSize) node.contents.length = newSize;
        else while (node.contents.length < newSize) node.contents.push(0);
        node.usedBytes = newSize;
      },node_ops:{getattr:function (node) {
          var attr = {};
          // device numbers reuse inode numbers.
          attr.dev = FS.isChrdev(node.mode) ? node.id : 1;
          attr.ino = node.id;
          attr.mode = node.mode;
          attr.nlink = 1;
          attr.uid = 0;
          attr.gid = 0;
          attr.rdev = node.rdev;
          if (FS.isDir(node.mode)) {
            attr.size = 4096;
          } else if (FS.isFile(node.mode)) {
            attr.size = node.usedBytes;
          } else if (FS.isLink(node.mode)) {
            attr.size = node.link.length;
          } else {
            attr.size = 0;
          }
          attr.atime = new Date(node.timestamp);
          attr.mtime = new Date(node.timestamp);
          attr.ctime = new Date(node.timestamp);
          // NOTE: In our implementation, st_blocks = Math.ceil(st_size/st_blksize),
          //       but this is not required by the standard.
          attr.blksize = 4096;
          attr.blocks = Math.ceil(attr.size / attr.blksize);
          return attr;
        },setattr:function (node, attr) {
          if (attr.mode !== undefined) {
            node.mode = attr.mode;
          }
          if (attr.timestamp !== undefined) {
            node.timestamp = attr.timestamp;
          }
          if (attr.size !== undefined) {
            MEMFS.resizeFileStorage(node, attr.size);
          }
        },lookup:function (parent, name) {
          throw FS.genericErrors[ERRNO_CODES.ENOENT];
        },mknod:function (parent, name, mode, dev) {
          return MEMFS.createNode(parent, name, mode, dev);
        },rename:function (old_node, new_dir, new_name) {
          // if we're overwriting a directory at new_name, make sure it's empty.
          if (FS.isDir(old_node.mode)) {
            var new_node;
            try {
              new_node = FS.lookupNode(new_dir, new_name);
            } catch (e) {
            }
            if (new_node) {
              for (var i in new_node.contents) {
                throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
              }
            }
          }
          // do the internal rewiring
          delete old_node.parent.contents[old_node.name];
          old_node.name = new_name;
          new_dir.contents[new_name] = old_node;
          old_node.parent = new_dir;
        },unlink:function (parent, name) {
          delete parent.contents[name];
        },rmdir:function (parent, name) {
          var node = FS.lookupNode(parent, name);
          for (var i in node.contents) {
            throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
          }
          delete parent.contents[name];
        },readdir:function (node) {
          var entries = ['.', '..']
          for (var key in node.contents) {
            if (!node.contents.hasOwnProperty(key)) {
              continue;
            }
            entries.push(key);
          }
          return entries;
        },symlink:function (parent, newname, oldpath) {
          var node = MEMFS.createNode(parent, newname, 511 /* 0777 */ | 40960, 0);
          node.link = oldpath;
          return node;
        },readlink:function (node) {
          if (!FS.isLink(node.mode)) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
          return node.link;
        }},stream_ops:{read:function (stream, buffer, offset, length, position) {
          var contents = stream.node.contents;
          if (position >= stream.node.usedBytes) return 0;
          var size = Math.min(stream.node.usedBytes - position, length);
          assert(size >= 0);
          if (size > 8 && contents.subarray) { // non-trivial, and typed array
            buffer.set(contents.subarray(position, position + size), offset);
          } else {
            for (var i = 0; i < size; i++) buffer[offset + i] = contents[position + i];
          }
          return size;
        },write:function (stream, buffer, offset, length, position, canOwn) {
          if (!length) return 0;
          var node = stream.node;
          node.timestamp = Date.now();
  
          if (buffer.subarray && (!node.contents || node.contents.subarray)) { // This write is from a typed array to a typed array?
            if (canOwn) { // Can we just reuse the buffer we are given?
              assert(position === 0, 'canOwn must imply no weird position inside the file');
              node.contents = buffer.subarray(offset, offset + length);
              node.usedBytes = length;
              return length;
            } else if (node.usedBytes === 0 && position === 0) { // If this is a simple first write to an empty file, do a fast set since we don't need to care about old data.
              node.contents = new Uint8Array(buffer.subarray(offset, offset + length));
              node.usedBytes = length;
              return length;
            } else if (position + length <= node.usedBytes) { // Writing to an already allocated and used subrange of the file?
              node.contents.set(buffer.subarray(offset, offset + length), position);
              return length;
            }
          }
  
          // Appending to an existing file and we need to reallocate, or source data did not come as a typed array.
          MEMFS.expandFileStorage(node, position+length);
          if (node.contents.subarray && buffer.subarray) node.contents.set(buffer.subarray(offset, offset + length), position); // Use typed array write if available.
          else {
            for (var i = 0; i < length; i++) {
             node.contents[position + i] = buffer[offset + i]; // Or fall back to manual write if not.
            }
          }
          node.usedBytes = Math.max(node.usedBytes, position+length);
          return length;
        },llseek:function (stream, offset, whence) {
          var position = offset;
          if (whence === 1) {  // SEEK_CUR.
            position += stream.position;
          } else if (whence === 2) {  // SEEK_END.
            if (FS.isFile(stream.node.mode)) {
              position += stream.node.usedBytes;
            }
          }
          if (position < 0) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
          return position;
        },allocate:function (stream, offset, length) {
          MEMFS.expandFileStorage(stream.node, offset + length);
          stream.node.usedBytes = Math.max(stream.node.usedBytes, offset + length);
        },mmap:function (stream, buffer, offset, length, position, prot, flags) {
          if (!FS.isFile(stream.node.mode)) {
            throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
          }
          var ptr;
          var allocated;
          var contents = stream.node.contents;
          // Only make a new copy when MAP_PRIVATE is specified.
          if ( !(flags & 2) &&
                (contents.buffer === buffer || contents.buffer === buffer.buffer) ) {
            // We can't emulate MAP_SHARED when the file is not backed by the buffer
            // we're mapping to (e.g. the HEAP buffer).
            allocated = false;
            ptr = contents.byteOffset;
          } else {
            // Try to avoid unnecessary slices.
            if (position > 0 || position + length < stream.node.usedBytes) {
              if (contents.subarray) {
                contents = contents.subarray(position, position + length);
              } else {
                contents = Array.prototype.slice.call(contents, position, position + length);
              }
            }
            allocated = true;
            ptr = _malloc(length);
            if (!ptr) {
              throw new FS.ErrnoError(ERRNO_CODES.ENOMEM);
            }
            buffer.set(contents, ptr);
          }
          return { ptr: ptr, allocated: allocated };
        },msync:function (stream, buffer, offset, length, mmapFlags) {
          if (!FS.isFile(stream.node.mode)) {
            throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
          }
          if (mmapFlags & 2) {
            // MAP_PRIVATE calls need not to be synced back to underlying fs
            return 0;
          }
  
          var bytesWritten = MEMFS.stream_ops.write(stream, buffer, 0, length, offset, false);
          // should we check if bytesWritten and length are the same?
          return 0;
        }}};
  
  var IDBFS={dbs:{},indexedDB:function () {
        if (typeof indexedDB !== 'undefined') return indexedDB;
        var ret = null;
        if (typeof window === 'object') ret = window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;
        assert(ret, 'IDBFS used, but indexedDB not supported');
        return ret;
      },DB_VERSION:21,DB_STORE_NAME:"FILE_DATA",mount:function (mount) {
        // reuse all of the core MEMFS functionality
        return MEMFS.mount.apply(null, arguments);
      },syncfs:function (mount, populate, callback) {
        IDBFS.getLocalSet(mount, function(err, local) {
          if (err) return callback(err);
  
          IDBFS.getRemoteSet(mount, function(err, remote) {
            if (err) return callback(err);
  
            var src = populate ? remote : local;
            var dst = populate ? local : remote;
  
            IDBFS.reconcile(src, dst, callback);
          });
        });
      },getDB:function (name, callback) {
        // check the cache first
        var db = IDBFS.dbs[name];
        if (db) {
          return callback(null, db);
        }
  
        var req;
        try {
          req = IDBFS.indexedDB().open(name, IDBFS.DB_VERSION);
        } catch (e) {
          return callback(e);
        }
        if (!req) {
          return callback("Unable to connect to IndexedDB");
        }
        req.onupgradeneeded = function(e) {
          var db = e.target.result;
          var transaction = e.target.transaction;
  
          var fileStore;
  
          if (db.objectStoreNames.contains(IDBFS.DB_STORE_NAME)) {
            fileStore = transaction.objectStore(IDBFS.DB_STORE_NAME);
          } else {
            fileStore = db.createObjectStore(IDBFS.DB_STORE_NAME);
          }
  
          if (!fileStore.indexNames.contains('timestamp')) {
            fileStore.createIndex('timestamp', 'timestamp', { unique: false });
          }
        };
        req.onsuccess = function() {
          db = req.result;
  
          // add to the cache
          IDBFS.dbs[name] = db;
          callback(null, db);
        };
        req.onerror = function(e) {
          callback(this.error);
          e.preventDefault();
        };
      },getLocalSet:function (mount, callback) {
        var entries = {};
  
        function isRealDir(p) {
          return p !== '.' && p !== '..';
        };
        function toAbsolute(root) {
          return function(p) {
            return PATH.join2(root, p);
          }
        };
  
        var check = FS.readdir(mount.mountpoint).filter(isRealDir).map(toAbsolute(mount.mountpoint));
  
        while (check.length) {
          var path = check.pop();
          var stat;
  
          try {
            stat = FS.stat(path);
          } catch (e) {
            return callback(e);
          }
  
          if (FS.isDir(stat.mode)) {
            check.push.apply(check, FS.readdir(path).filter(isRealDir).map(toAbsolute(path)));
          }
  
          entries[path] = { timestamp: stat.mtime };
        }
  
        return callback(null, { type: 'local', entries: entries });
      },getRemoteSet:function (mount, callback) {
        var entries = {};
  
        IDBFS.getDB(mount.mountpoint, function(err, db) {
          if (err) return callback(err);
  
          var transaction = db.transaction([IDBFS.DB_STORE_NAME], 'readonly');
          transaction.onerror = function(e) {
            callback(this.error);
            e.preventDefault();
          };
  
          var store = transaction.objectStore(IDBFS.DB_STORE_NAME);
          var index = store.index('timestamp');
  
          index.openKeyCursor().onsuccess = function(event) {
            var cursor = event.target.result;
  
            if (!cursor) {
              return callback(null, { type: 'remote', db: db, entries: entries });
            }
  
            entries[cursor.primaryKey] = { timestamp: cursor.key };
  
            cursor.continue();
          };
        });
      },loadLocalEntry:function (path, callback) {
        var stat, node;
  
        try {
          var lookup = FS.lookupPath(path);
          node = lookup.node;
          stat = FS.stat(path);
        } catch (e) {
          return callback(e);
        }
  
        if (FS.isDir(stat.mode)) {
          return callback(null, { timestamp: stat.mtime, mode: stat.mode });
        } else if (FS.isFile(stat.mode)) {
          // Performance consideration: storing a normal JavaScript array to a IndexedDB is much slower than storing a typed array.
          // Therefore always convert the file contents to a typed array first before writing the data to IndexedDB.
          node.contents = MEMFS.getFileDataAsTypedArray(node);
          return callback(null, { timestamp: stat.mtime, mode: stat.mode, contents: node.contents });
        } else {
          return callback(new Error('node type not supported'));
        }
      },storeLocalEntry:function (path, entry, callback) {
        try {
          if (FS.isDir(entry.mode)) {
            FS.mkdir(path, entry.mode);
          } else if (FS.isFile(entry.mode)) {
            FS.writeFile(path, entry.contents, { encoding: 'binary', canOwn: true });
          } else {
            return callback(new Error('node type not supported'));
          }
  
          FS.chmod(path, entry.mode);
          FS.utime(path, entry.timestamp, entry.timestamp);
        } catch (e) {
          return callback(e);
        }
  
        callback(null);
      },removeLocalEntry:function (path, callback) {
        try {
          var lookup = FS.lookupPath(path);
          var stat = FS.stat(path);
  
          if (FS.isDir(stat.mode)) {
            FS.rmdir(path);
          } else if (FS.isFile(stat.mode)) {
            FS.unlink(path);
          }
        } catch (e) {
          return callback(e);
        }
  
        callback(null);
      },loadRemoteEntry:function (store, path, callback) {
        var req = store.get(path);
        req.onsuccess = function(event) { callback(null, event.target.result); };
        req.onerror = function(e) {
          callback(this.error);
          e.preventDefault();
        };
      },storeRemoteEntry:function (store, path, entry, callback) {
        var req = store.put(entry, path);
        req.onsuccess = function() { callback(null); };
        req.onerror = function(e) {
          callback(this.error);
          e.preventDefault();
        };
      },removeRemoteEntry:function (store, path, callback) {
        var req = store.delete(path);
        req.onsuccess = function() { callback(null); };
        req.onerror = function(e) {
          callback(this.error);
          e.preventDefault();
        };
      },reconcile:function (src, dst, callback) {
        var total = 0;
  
        var create = [];
        Object.keys(src.entries).forEach(function (key) {
          var e = src.entries[key];
          var e2 = dst.entries[key];
          if (!e2 || e.timestamp > e2.timestamp) {
            create.push(key);
            total++;
          }
        });
  
        var remove = [];
        Object.keys(dst.entries).forEach(function (key) {
          var e = dst.entries[key];
          var e2 = src.entries[key];
          if (!e2) {
            remove.push(key);
            total++;
          }
        });
  
        if (!total) {
          return callback(null);
        }
  
        var errored = false;
        var completed = 0;
        var db = src.type === 'remote' ? src.db : dst.db;
        var transaction = db.transaction([IDBFS.DB_STORE_NAME], 'readwrite');
        var store = transaction.objectStore(IDBFS.DB_STORE_NAME);
  
        function done(err) {
          if (err) {
            if (!done.errored) {
              done.errored = true;
              return callback(err);
            }
            return;
          }
          if (++completed >= total) {
            return callback(null);
          }
        };
  
        transaction.onerror = function(e) {
          done(this.error);
          e.preventDefault();
        };
  
        // sort paths in ascending order so directory entries are created
        // before the files inside them
        create.sort().forEach(function (path) {
          if (dst.type === 'local') {
            IDBFS.loadRemoteEntry(store, path, function (err, entry) {
              if (err) return done(err);
              IDBFS.storeLocalEntry(path, entry, done);
            });
          } else {
            IDBFS.loadLocalEntry(path, function (err, entry) {
              if (err) return done(err);
              IDBFS.storeRemoteEntry(store, path, entry, done);
            });
          }
        });
  
        // sort paths in descending order so files are deleted before their
        // parent directories
        remove.sort().reverse().forEach(function(path) {
          if (dst.type === 'local') {
            IDBFS.removeLocalEntry(path, done);
          } else {
            IDBFS.removeRemoteEntry(store, path, done);
          }
        });
      }};
  
  var NODEFS={isWindows:false,staticInit:function () {
        NODEFS.isWindows = !!process.platform.match(/^win/);
      },mount:function (mount) {
        assert(ENVIRONMENT_IS_NODE);
        return NODEFS.createNode(null, '/', NODEFS.getMode(mount.opts.root), 0);
      },createNode:function (parent, name, mode, dev) {
        if (!FS.isDir(mode) && !FS.isFile(mode) && !FS.isLink(mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var node = FS.createNode(parent, name, mode);
        node.node_ops = NODEFS.node_ops;
        node.stream_ops = NODEFS.stream_ops;
        return node;
      },getMode:function (path) {
        var stat;
        try {
          stat = fs.lstatSync(path);
          if (NODEFS.isWindows) {
            // On Windows, directories return permission bits 'rw-rw-rw-', even though they have 'rwxrwxrwx', so
            // propagate write bits to execute bits.
            stat.mode = stat.mode | ((stat.mode & 146) >> 1);
          }
        } catch (e) {
          if (!e.code) throw e;
          throw new FS.ErrnoError(ERRNO_CODES[e.code]);
        }
        return stat.mode;
      },realPath:function (node) {
        var parts = [];
        while (node.parent !== node) {
          parts.push(node.name);
          node = node.parent;
        }
        parts.push(node.mount.opts.root);
        parts.reverse();
        return PATH.join.apply(null, parts);
      },flagsToPermissionStringMap:{0:"r",1:"r+",2:"r+",64:"r",65:"r+",66:"r+",129:"rx+",193:"rx+",514:"w+",577:"w",578:"w+",705:"wx",706:"wx+",1024:"a",1025:"a",1026:"a+",1089:"a",1090:"a+",1153:"ax",1154:"ax+",1217:"ax",1218:"ax+",4096:"rs",4098:"rs+"},flagsToPermissionString:function (flags) {
        flags &= ~0x200000 /*O_PATH*/; // Ignore this flag from musl, otherwise node.js fails to open the file.
        flags &= ~0x800 /*O_NONBLOCK*/; // Ignore this flag from musl, otherwise node.js fails to open the file.
        flags &= ~0x8000 /*O_LARGEFILE*/; // Ignore this flag from musl, otherwise node.js fails to open the file.
        flags &= ~0x80000 /*O_CLOEXEC*/; // Some applications may pass it; it makes no sense for a single process.
        if (flags in NODEFS.flagsToPermissionStringMap) {
          return NODEFS.flagsToPermissionStringMap[flags];
        } else {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
      },node_ops:{getattr:function (node) {
          var path = NODEFS.realPath(node);
          var stat;
          try {
            stat = fs.lstatSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          // node.js v0.10.20 doesn't report blksize and blocks on Windows. Fake them with default blksize of 4096.
          // See http://support.microsoft.com/kb/140365
          if (NODEFS.isWindows && !stat.blksize) {
            stat.blksize = 4096;
          }
          if (NODEFS.isWindows && !stat.blocks) {
            stat.blocks = (stat.size+stat.blksize-1)/stat.blksize|0;
          }
          return {
            dev: stat.dev,
            ino: stat.ino,
            mode: stat.mode,
            nlink: stat.nlink,
            uid: stat.uid,
            gid: stat.gid,
            rdev: stat.rdev,
            size: stat.size,
            atime: stat.atime,
            mtime: stat.mtime,
            ctime: stat.ctime,
            blksize: stat.blksize,
            blocks: stat.blocks
          };
        },setattr:function (node, attr) {
          var path = NODEFS.realPath(node);
          try {
            if (attr.mode !== undefined) {
              fs.chmodSync(path, attr.mode);
              // update the common node structure mode as well
              node.mode = attr.mode;
            }
            if (attr.timestamp !== undefined) {
              var date = new Date(attr.timestamp);
              fs.utimesSync(path, date, date);
            }
            if (attr.size !== undefined) {
              fs.truncateSync(path, attr.size);
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },lookup:function (parent, name) {
          var path = PATH.join2(NODEFS.realPath(parent), name);
          var mode = NODEFS.getMode(path);
          return NODEFS.createNode(parent, name, mode);
        },mknod:function (parent, name, mode, dev) {
          var node = NODEFS.createNode(parent, name, mode, dev);
          // create the backing node for this in the fs root as well
          var path = NODEFS.realPath(node);
          try {
            if (FS.isDir(node.mode)) {
              fs.mkdirSync(path, node.mode);
            } else {
              fs.writeFileSync(path, '', { mode: node.mode });
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          return node;
        },rename:function (oldNode, newDir, newName) {
          var oldPath = NODEFS.realPath(oldNode);
          var newPath = PATH.join2(NODEFS.realPath(newDir), newName);
          try {
            fs.renameSync(oldPath, newPath);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },unlink:function (parent, name) {
          var path = PATH.join2(NODEFS.realPath(parent), name);
          try {
            fs.unlinkSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },rmdir:function (parent, name) {
          var path = PATH.join2(NODEFS.realPath(parent), name);
          try {
            fs.rmdirSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },readdir:function (node) {
          var path = NODEFS.realPath(node);
          try {
            return fs.readdirSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },symlink:function (parent, newName, oldPath) {
          var newPath = PATH.join2(NODEFS.realPath(parent), newName);
          try {
            fs.symlinkSync(oldPath, newPath);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },readlink:function (node) {
          var path = NODEFS.realPath(node);
          try {
            path = fs.readlinkSync(path);
            path = NODEJS_PATH.relative(NODEJS_PATH.resolve(node.mount.opts.root), path);
            return path;
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        }},stream_ops:{open:function (stream) {
          var path = NODEFS.realPath(stream.node);
          try {
            if (FS.isFile(stream.node.mode)) {
              stream.nfd = fs.openSync(path, NODEFS.flagsToPermissionString(stream.flags));
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },close:function (stream) {
          try {
            if (FS.isFile(stream.node.mode) && stream.nfd) {
              fs.closeSync(stream.nfd);
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },read:function (stream, buffer, offset, length, position) {
          if (length === 0) return 0; // node errors on 0 length reads
          // FIXME this is terrible.
          var nbuffer = new Buffer(length);
          var res;
          try {
            res = fs.readSync(stream.nfd, nbuffer, 0, length, position);
          } catch (e) {
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          if (res > 0) {
            for (var i = 0; i < res; i++) {
              buffer[offset + i] = nbuffer[i];
            }
          }
          return res;
        },write:function (stream, buffer, offset, length, position) {
          // FIXME this is terrible.
          var nbuffer = new Buffer(buffer.subarray(offset, offset + length));
          var res;
          try {
            res = fs.writeSync(stream.nfd, nbuffer, 0, length, position);
          } catch (e) {
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          return res;
        },llseek:function (stream, offset, whence) {
          var position = offset;
          if (whence === 1) {  // SEEK_CUR.
            position += stream.position;
          } else if (whence === 2) {  // SEEK_END.
            if (FS.isFile(stream.node.mode)) {
              try {
                var stat = fs.fstatSync(stream.nfd);
                position += stat.size;
              } catch (e) {
                throw new FS.ErrnoError(ERRNO_CODES[e.code]);
              }
            }
          }
  
          if (position < 0) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
  
          return position;
        }}};
  
  var WORKERFS={DIR_MODE:16895,FILE_MODE:33279,reader:null,mount:function (mount) {
        assert(ENVIRONMENT_IS_WORKER);
        if (!WORKERFS.reader) WORKERFS.reader = new FileReaderSync();
        var root = WORKERFS.createNode(null, '/', WORKERFS.DIR_MODE, 0);
        var createdParents = {};
        function ensureParent(path) {
          // return the parent node, creating subdirs as necessary
          var parts = path.split('/');
          var parent = root;
          for (var i = 0; i < parts.length-1; i++) {
            var curr = parts.slice(0, i+1).join('/');
            // Issue 4254: Using curr as a node name will prevent the node
            // from being found in FS.nameTable when FS.open is called on
            // a path which holds a child of this node,
            // given that all FS functions assume node names
            // are just their corresponding parts within their given path,
            // rather than incremental aggregates which include their parent's
            // directories.
            if (!createdParents[curr]) {
              createdParents[curr] = WORKERFS.createNode(parent, parts[i], WORKERFS.DIR_MODE, 0);
            }
            parent = createdParents[curr];
          }
          return parent;
        }
        function base(path) {
          var parts = path.split('/');
          return parts[parts.length-1];
        }
        // We also accept FileList here, by using Array.prototype
        Array.prototype.forEach.call(mount.opts["files"] || [], function(file) {
          WORKERFS.createNode(ensureParent(file.name), base(file.name), WORKERFS.FILE_MODE, 0, file, file.lastModifiedDate);
        });
        (mount.opts["blobs"] || []).forEach(function(obj) {
          WORKERFS.createNode(ensureParent(obj["name"]), base(obj["name"]), WORKERFS.FILE_MODE, 0, obj["data"]);
        });
        (mount.opts["packages"] || []).forEach(function(pack) {
          pack['metadata'].files.forEach(function(file) {
            var name = file.filename.substr(1); // remove initial slash
            WORKERFS.createNode(ensureParent(name), base(name), WORKERFS.FILE_MODE, 0, pack['blob'].slice(file.start, file.end));
          });
        });
        return root;
      },createNode:function (parent, name, mode, dev, contents, mtime) {
        var node = FS.createNode(parent, name, mode);
        node.mode = mode;
        node.node_ops = WORKERFS.node_ops;
        node.stream_ops = WORKERFS.stream_ops;
        node.timestamp = (mtime || new Date).getTime();
        assert(WORKERFS.FILE_MODE !== WORKERFS.DIR_MODE);
        if (mode === WORKERFS.FILE_MODE) {
          node.size = contents.size;
          node.contents = contents;
        } else {
          node.size = 4096;
          node.contents = {};
        }
        if (parent) {
          parent.contents[name] = node;
        }
        return node;
      },node_ops:{getattr:function (node) {
          return {
            dev: 1,
            ino: undefined,
            mode: node.mode,
            nlink: 1,
            uid: 0,
            gid: 0,
            rdev: undefined,
            size: node.size,
            atime: new Date(node.timestamp),
            mtime: new Date(node.timestamp),
            ctime: new Date(node.timestamp),
            blksize: 4096,
            blocks: Math.ceil(node.size / 4096),
          };
        },setattr:function (node, attr) {
          if (attr.mode !== undefined) {
            node.mode = attr.mode;
          }
          if (attr.timestamp !== undefined) {
            node.timestamp = attr.timestamp;
          }
        },lookup:function (parent, name) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        },mknod:function (parent, name, mode, dev) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        },rename:function (oldNode, newDir, newName) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        },unlink:function (parent, name) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        },rmdir:function (parent, name) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        },readdir:function (node) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        },symlink:function (parent, newName, oldPath) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        },readlink:function (node) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }},stream_ops:{read:function (stream, buffer, offset, length, position) {
          if (position >= stream.node.size) return 0;
          var chunk = stream.node.contents.slice(position, position + length);
          var ab = WORKERFS.reader.readAsArrayBuffer(chunk);
          buffer.set(new Uint8Array(ab), offset);
          return chunk.size;
        },write:function (stream, buffer, offset, length, position) {
          throw new FS.ErrnoError(ERRNO_CODES.EIO);
        },llseek:function (stream, offset, whence) {
          var position = offset;
          if (whence === 1) {  // SEEK_CUR.
            position += stream.position;
          } else if (whence === 2) {  // SEEK_END.
            if (FS.isFile(stream.node.mode)) {
              position += stream.node.size;
            }
          }
          if (position < 0) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
          return position;
        }}};
  
  var _stdin=STATICTOP; STATICTOP += 16;;
  
  var _stdout=STATICTOP; STATICTOP += 16;;
  
  var _stderr=STATICTOP; STATICTOP += 16;;var FS={root:null,mounts:[],devices:[null],streams:[],nextInode:1,nameTable:null,currentPath:"/",initialized:false,ignorePermissions:true,trackingDelegate:{},tracking:{openFlags:{READ:1,WRITE:2}},ErrnoError:null,genericErrors:{},filesystems:null,syncFSRequests:0,handleFSError:function (e) {
        if (!(e instanceof FS.ErrnoError)) throw e + ' : ' + stackTrace();
        return ___setErrNo(e.errno);
      },lookupPath:function (path, opts) {
        path = PATH.resolve(FS.cwd(), path);
        opts = opts || {};
  
        if (!path) return { path: '', node: null };
  
        var defaults = {
          follow_mount: true,
          recurse_count: 0
        };
        for (var key in defaults) {
          if (opts[key] === undefined) {
            opts[key] = defaults[key];
          }
        }
  
        if (opts.recurse_count > 8) {  // max recursive lookup of 8
          throw new FS.ErrnoError(ERRNO_CODES.ELOOP);
        }
  
        // split the path
        var parts = PATH.normalizeArray(path.split('/').filter(function(p) {
          return !!p;
        }), false);
  
        // start at the root
        var current = FS.root;
        var current_path = '/';
  
        for (var i = 0; i < parts.length; i++) {
          var islast = (i === parts.length-1);
          if (islast && opts.parent) {
            // stop resolving
            break;
          }
  
          current = FS.lookupNode(current, parts[i]);
          current_path = PATH.join2(current_path, parts[i]);
  
          // jump to the mount's root node if this is a mountpoint
          if (FS.isMountpoint(current)) {
            if (!islast || (islast && opts.follow_mount)) {
              current = current.mounted.root;
            }
          }
  
          // by default, lookupPath will not follow a symlink if it is the final path component.
          // setting opts.follow = true will override this behavior.
          if (!islast || opts.follow) {
            var count = 0;
            while (FS.isLink(current.mode)) {
              var link = FS.readlink(current_path);
              current_path = PATH.resolve(PATH.dirname(current_path), link);
  
              var lookup = FS.lookupPath(current_path, { recurse_count: opts.recurse_count });
              current = lookup.node;
  
              if (count++ > 40) {  // limit max consecutive symlinks to 40 (SYMLOOP_MAX).
                throw new FS.ErrnoError(ERRNO_CODES.ELOOP);
              }
            }
          }
        }
  
        return { path: current_path, node: current };
      },getPath:function (node) {
        var path;
        while (true) {
          if (FS.isRoot(node)) {
            var mount = node.mount.mountpoint;
            if (!path) return mount;
            return mount[mount.length-1] !== '/' ? mount + '/' + path : mount + path;
          }
          path = path ? node.name + '/' + path : node.name;
          node = node.parent;
        }
      },hashName:function (parentid, name) {
        var hash = 0;
  
  
        for (var i = 0; i < name.length; i++) {
          hash = ((hash << 5) - hash + name.charCodeAt(i)) | 0;
        }
        return ((parentid + hash) >>> 0) % FS.nameTable.length;
      },hashAddNode:function (node) {
        var hash = FS.hashName(node.parent.id, node.name);
        node.name_next = FS.nameTable[hash];
        FS.nameTable[hash] = node;
      },hashRemoveNode:function (node) {
        var hash = FS.hashName(node.parent.id, node.name);
        if (FS.nameTable[hash] === node) {
          FS.nameTable[hash] = node.name_next;
        } else {
          var current = FS.nameTable[hash];
          while (current) {
            if (current.name_next === node) {
              current.name_next = node.name_next;
              break;
            }
            current = current.name_next;
          }
        }
      },lookupNode:function (parent, name) {
        var err = FS.mayLookup(parent);
        if (err) {
          throw new FS.ErrnoError(err, parent);
        }
        var hash = FS.hashName(parent.id, name);
        for (var node = FS.nameTable[hash]; node; node = node.name_next) {
          var nodeName = node.name;
          if (node.parent.id === parent.id && nodeName === name) {
            return node;
          }
        }
        // if we failed to find it in the cache, call into the VFS
        return FS.lookup(parent, name);
      },createNode:function (parent, name, mode, rdev) {
        if (!FS.FSNode) {
          FS.FSNode = function(parent, name, mode, rdev) {
            if (!parent) {
              parent = this;  // root node sets parent to itself
            }
            this.parent = parent;
            this.mount = parent.mount;
            this.mounted = null;
            this.id = FS.nextInode++;
            this.name = name;
            this.mode = mode;
            this.node_ops = {};
            this.stream_ops = {};
            this.rdev = rdev;
          };
  
          FS.FSNode.prototype = {};
  
          // compatibility
          var readMode = 292 | 73;
          var writeMode = 146;
  
          // NOTE we must use Object.defineProperties instead of individual calls to
          // Object.defineProperty in order to make closure compiler happy
          Object.defineProperties(FS.FSNode.prototype, {
            read: {
              get: function() { return (this.mode & readMode) === readMode; },
              set: function(val) { val ? this.mode |= readMode : this.mode &= ~readMode; }
            },
            write: {
              get: function() { return (this.mode & writeMode) === writeMode; },
              set: function(val) { val ? this.mode |= writeMode : this.mode &= ~writeMode; }
            },
            isFolder: {
              get: function() { return FS.isDir(this.mode); }
            },
            isDevice: {
              get: function() { return FS.isChrdev(this.mode); }
            }
          });
        }
  
        var node = new FS.FSNode(parent, name, mode, rdev);
  
        FS.hashAddNode(node);
  
        return node;
      },destroyNode:function (node) {
        FS.hashRemoveNode(node);
      },isRoot:function (node) {
        return node === node.parent;
      },isMountpoint:function (node) {
        return !!node.mounted;
      },isFile:function (mode) {
        return (mode & 61440) === 32768;
      },isDir:function (mode) {
        return (mode & 61440) === 16384;
      },isLink:function (mode) {
        return (mode & 61440) === 40960;
      },isChrdev:function (mode) {
        return (mode & 61440) === 8192;
      },isBlkdev:function (mode) {
        return (mode & 61440) === 24576;
      },isFIFO:function (mode) {
        return (mode & 61440) === 4096;
      },isSocket:function (mode) {
        return (mode & 49152) === 49152;
      },flagModes:{"r":0,"rs":1052672,"r+":2,"w":577,"wx":705,"xw":705,"w+":578,"wx+":706,"xw+":706,"a":1089,"ax":1217,"xa":1217,"a+":1090,"ax+":1218,"xa+":1218},modeStringToFlags:function (str) {
        var flags = FS.flagModes[str];
        if (typeof flags === 'undefined') {
          throw new Error('Unknown file open mode: ' + str);
        }
        return flags;
      },flagsToPermissionString:function (flag) {
        var perms = ['r', 'w', 'rw'][flag & 3];
        if ((flag & 512)) {
          perms += 'w';
        }
        return perms;
      },nodePermissions:function (node, perms) {
        if (FS.ignorePermissions) {
          return 0;
        }
        // return 0 if any user, group or owner bits are set.
        if (perms.indexOf('r') !== -1 && !(node.mode & 292)) {
          return ERRNO_CODES.EACCES;
        } else if (perms.indexOf('w') !== -1 && !(node.mode & 146)) {
          return ERRNO_CODES.EACCES;
        } else if (perms.indexOf('x') !== -1 && !(node.mode & 73)) {
          return ERRNO_CODES.EACCES;
        }
        return 0;
      },mayLookup:function (dir) {
        var err = FS.nodePermissions(dir, 'x');
        if (err) return err;
        if (!dir.node_ops.lookup) return ERRNO_CODES.EACCES;
        return 0;
      },mayCreate:function (dir, name) {
        try {
          var node = FS.lookupNode(dir, name);
          return ERRNO_CODES.EEXIST;
        } catch (e) {
        }
        return FS.nodePermissions(dir, 'wx');
      },mayDelete:function (dir, name, isdir) {
        var node;
        try {
          node = FS.lookupNode(dir, name);
        } catch (e) {
          return e.errno;
        }
        var err = FS.nodePermissions(dir, 'wx');
        if (err) {
          return err;
        }
        if (isdir) {
          if (!FS.isDir(node.mode)) {
            return ERRNO_CODES.ENOTDIR;
          }
          if (FS.isRoot(node) || FS.getPath(node) === FS.cwd()) {
            return ERRNO_CODES.EBUSY;
          }
        } else {
          if (FS.isDir(node.mode)) {
            return ERRNO_CODES.EISDIR;
          }
        }
        return 0;
      },mayOpen:function (node, flags) {
        if (!node) {
          return ERRNO_CODES.ENOENT;
        }
        if (FS.isLink(node.mode)) {
          return ERRNO_CODES.ELOOP;
        } else if (FS.isDir(node.mode)) {
          if (FS.flagsToPermissionString(flags) !== 'r' || // opening for write
              (flags & 512)) { // TODO: check for O_SEARCH? (== search for dir only)
            return ERRNO_CODES.EISDIR;
          }
        }
        return FS.nodePermissions(node, FS.flagsToPermissionString(flags));
      },MAX_OPEN_FDS:4096,nextfd:function (fd_start, fd_end) {
        fd_start = fd_start || 0;
        fd_end = fd_end || FS.MAX_OPEN_FDS;
        for (var fd = fd_start; fd <= fd_end; fd++) {
          if (!FS.streams[fd]) {
            return fd;
          }
        }
        throw new FS.ErrnoError(ERRNO_CODES.EMFILE);
      },getStream:function (fd) {
        return FS.streams[fd];
      },createStream:function (stream, fd_start, fd_end) {
        if (!FS.FSStream) {
          FS.FSStream = function(){};
          FS.FSStream.prototype = {};
          // compatibility
          Object.defineProperties(FS.FSStream.prototype, {
            object: {
              get: function() { return this.node; },
              set: function(val) { this.node = val; }
            },
            isRead: {
              get: function() { return (this.flags & 2097155) !== 1; }
            },
            isWrite: {
              get: function() { return (this.flags & 2097155) !== 0; }
            },
            isAppend: {
              get: function() { return (this.flags & 1024); }
            }
          });
        }
        // clone it, so we can return an instance of FSStream
        var newStream = new FS.FSStream();
        for (var p in stream) {
          newStream[p] = stream[p];
        }
        stream = newStream;
        var fd = FS.nextfd(fd_start, fd_end);
        stream.fd = fd;
        FS.streams[fd] = stream;
        return stream;
      },closeStream:function (fd) {
        FS.streams[fd] = null;
      },chrdev_stream_ops:{open:function (stream) {
          var device = FS.getDevice(stream.node.rdev);
          // override node's stream ops with the device's
          stream.stream_ops = device.stream_ops;
          // forward the open call
          if (stream.stream_ops.open) {
            stream.stream_ops.open(stream);
          }
        },llseek:function () {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }},major:function (dev) {
        return ((dev) >> 8);
      },minor:function (dev) {
        return ((dev) & 0xff);
      },makedev:function (ma, mi) {
        return ((ma) << 8 | (mi));
      },registerDevice:function (dev, ops) {
        FS.devices[dev] = { stream_ops: ops };
      },getDevice:function (dev) {
        return FS.devices[dev];
      },getMounts:function (mount) {
        var mounts = [];
        var check = [mount];
  
        while (check.length) {
          var m = check.pop();
  
          mounts.push(m);
  
          check.push.apply(check, m.mounts);
        }
  
        return mounts;
      },syncfs:function (populate, callback) {
        if (typeof(populate) === 'function') {
          callback = populate;
          populate = false;
        }
  
        FS.syncFSRequests++;
  
        if (FS.syncFSRequests > 1) {
          console.log('warning: ' + FS.syncFSRequests + ' FS.syncfs operations in flight at once, probably just doing extra work');
        }
  
        var mounts = FS.getMounts(FS.root.mount);
        var completed = 0;
  
        function doCallback(err) {
          assert(FS.syncFSRequests > 0);
          FS.syncFSRequests--;
          return callback(err);
        }
  
        function done(err) {
          if (err) {
            if (!done.errored) {
              done.errored = true;
              return doCallback(err);
            }
            return;
          }
          if (++completed >= mounts.length) {
            doCallback(null);
          }
        };
  
        // sync all mounts
        mounts.forEach(function (mount) {
          if (!mount.type.syncfs) {
            return done(null);
          }
          mount.type.syncfs(mount, populate, done);
        });
      },mount:function (type, opts, mountpoint) {
        var root = mountpoint === '/';
        var pseudo = !mountpoint;
        var node;
  
        if (root && FS.root) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        } else if (!root && !pseudo) {
          var lookup = FS.lookupPath(mountpoint, { follow_mount: false });
  
          mountpoint = lookup.path;  // use the absolute path
          node = lookup.node;
  
          if (FS.isMountpoint(node)) {
            throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
          }
  
          if (!FS.isDir(node.mode)) {
            throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
          }
        }
  
        var mount = {
          type: type,
          opts: opts,
          mountpoint: mountpoint,
          mounts: []
        };
  
        // create a root node for the fs
        var mountRoot = type.mount(mount);
        mountRoot.mount = mount;
        mount.root = mountRoot;
  
        if (root) {
          FS.root = mountRoot;
        } else if (node) {
          // set as a mountpoint
          node.mounted = mount;
  
          // add the new mount to the current mount's children
          if (node.mount) {
            node.mount.mounts.push(mount);
          }
        }
  
        return mountRoot;
      },unmount:function (mountpoint) {
        var lookup = FS.lookupPath(mountpoint, { follow_mount: false });
  
        if (!FS.isMountpoint(lookup.node)) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
  
        // destroy the nodes for this mount, and all its child mounts
        var node = lookup.node;
        var mount = node.mounted;
        var mounts = FS.getMounts(mount);
  
        Object.keys(FS.nameTable).forEach(function (hash) {
          var current = FS.nameTable[hash];
  
          while (current) {
            var next = current.name_next;
  
            if (mounts.indexOf(current.mount) !== -1) {
              FS.destroyNode(current);
            }
  
            current = next;
          }
        });
  
        // no longer a mountpoint
        node.mounted = null;
  
        // remove this mount from the child mounts
        var idx = node.mount.mounts.indexOf(mount);
        assert(idx !== -1);
        node.mount.mounts.splice(idx, 1);
      },lookup:function (parent, name) {
        return parent.node_ops.lookup(parent, name);
      },mknod:function (path, mode, dev) {
        var lookup = FS.lookupPath(path, { parent: true });
        var parent = lookup.node;
        var name = PATH.basename(path);
        if (!name || name === '.' || name === '..') {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var err = FS.mayCreate(parent, name);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.mknod) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        return parent.node_ops.mknod(parent, name, mode, dev);
      },create:function (path, mode) {
        mode = mode !== undefined ? mode : 438 /* 0666 */;
        mode &= 4095;
        mode |= 32768;
        return FS.mknod(path, mode, 0);
      },mkdir:function (path, mode) {
        mode = mode !== undefined ? mode : 511 /* 0777 */;
        mode &= 511 | 512;
        mode |= 16384;
        return FS.mknod(path, mode, 0);
      },mkdirTree:function (path, mode) {
        var dirs = path.split('/');
        var d = '';
        for (var i = 0; i < dirs.length; ++i) {
          if (!dirs[i]) continue;
          d += '/' + dirs[i];
          try {
            FS.mkdir(d, mode);
          } catch(e) {
            if (e.errno != ERRNO_CODES.EEXIST) throw e;
          }
        }
      },mkdev:function (path, mode, dev) {
        if (typeof(dev) === 'undefined') {
          dev = mode;
          mode = 438 /* 0666 */;
        }
        mode |= 8192;
        return FS.mknod(path, mode, dev);
      },symlink:function (oldpath, newpath) {
        if (!PATH.resolve(oldpath)) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        }
        var lookup = FS.lookupPath(newpath, { parent: true });
        var parent = lookup.node;
        if (!parent) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        }
        var newname = PATH.basename(newpath);
        var err = FS.mayCreate(parent, newname);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.symlink) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        return parent.node_ops.symlink(parent, newname, oldpath);
      },rename:function (old_path, new_path) {
        var old_dirname = PATH.dirname(old_path);
        var new_dirname = PATH.dirname(new_path);
        var old_name = PATH.basename(old_path);
        var new_name = PATH.basename(new_path);
        // parents must exist
        var lookup, old_dir, new_dir;
        try {
          lookup = FS.lookupPath(old_path, { parent: true });
          old_dir = lookup.node;
          lookup = FS.lookupPath(new_path, { parent: true });
          new_dir = lookup.node;
        } catch (e) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        if (!old_dir || !new_dir) throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        // need to be part of the same mount
        if (old_dir.mount !== new_dir.mount) {
          throw new FS.ErrnoError(ERRNO_CODES.EXDEV);
        }
        // source must exist
        var old_node = FS.lookupNode(old_dir, old_name);
        // old path should not be an ancestor of the new path
        var relative = PATH.relative(old_path, new_dirname);
        if (relative.charAt(0) !== '.') {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        // new path should not be an ancestor of the old path
        relative = PATH.relative(new_path, old_dirname);
        if (relative.charAt(0) !== '.') {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
        }
        // see if the new path already exists
        var new_node;
        try {
          new_node = FS.lookupNode(new_dir, new_name);
        } catch (e) {
          // not fatal
        }
        // early out if nothing needs to change
        if (old_node === new_node) {
          return;
        }
        // we'll need to delete the old entry
        var isdir = FS.isDir(old_node.mode);
        var err = FS.mayDelete(old_dir, old_name, isdir);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        // need delete permissions if we'll be overwriting.
        // need create permissions if new doesn't already exist.
        err = new_node ?
          FS.mayDelete(new_dir, new_name, isdir) :
          FS.mayCreate(new_dir, new_name);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!old_dir.node_ops.rename) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isMountpoint(old_node) || (new_node && FS.isMountpoint(new_node))) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        // if we are going to change the parent, check write permissions
        if (new_dir !== old_dir) {
          err = FS.nodePermissions(old_dir, 'w');
          if (err) {
            throw new FS.ErrnoError(err);
          }
        }
        try {
          if (FS.trackingDelegate['willMovePath']) {
            FS.trackingDelegate['willMovePath'](old_path, new_path);
          }
        } catch(e) {
          console.log("FS.trackingDelegate['willMovePath']('"+old_path+"', '"+new_path+"') threw an exception: " + e.message);
        }
        // remove the node from the lookup hash
        FS.hashRemoveNode(old_node);
        // do the underlying fs rename
        try {
          old_dir.node_ops.rename(old_node, new_dir, new_name);
        } catch (e) {
          throw e;
        } finally {
          // add the node back to the hash (in case node_ops.rename
          // changed its name)
          FS.hashAddNode(old_node);
        }
        try {
          if (FS.trackingDelegate['onMovePath']) FS.trackingDelegate['onMovePath'](old_path, new_path);
        } catch(e) {
          console.log("FS.trackingDelegate['onMovePath']('"+old_path+"', '"+new_path+"') threw an exception: " + e.message);
        }
      },rmdir:function (path) {
        var lookup = FS.lookupPath(path, { parent: true });
        var parent = lookup.node;
        var name = PATH.basename(path);
        var node = FS.lookupNode(parent, name);
        var err = FS.mayDelete(parent, name, true);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.rmdir) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isMountpoint(node)) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        try {
          if (FS.trackingDelegate['willDeletePath']) {
            FS.trackingDelegate['willDeletePath'](path);
          }
        } catch(e) {
          console.log("FS.trackingDelegate['willDeletePath']('"+path+"') threw an exception: " + e.message);
        }
        parent.node_ops.rmdir(parent, name);
        FS.destroyNode(node);
        try {
          if (FS.trackingDelegate['onDeletePath']) FS.trackingDelegate['onDeletePath'](path);
        } catch(e) {
          console.log("FS.trackingDelegate['onDeletePath']('"+path+"') threw an exception: " + e.message);
        }
      },readdir:function (path) {
        var lookup = FS.lookupPath(path, { follow: true });
        var node = lookup.node;
        if (!node.node_ops.readdir) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
        }
        return node.node_ops.readdir(node);
      },unlink:function (path) {
        var lookup = FS.lookupPath(path, { parent: true });
        var parent = lookup.node;
        var name = PATH.basename(path);
        var node = FS.lookupNode(parent, name);
        var err = FS.mayDelete(parent, name, false);
        if (err) {
          // According to POSIX, we should map EISDIR to EPERM, but
          // we instead do what Linux does (and we must, as we use
          // the musl linux libc).
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.unlink) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isMountpoint(node)) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        try {
          if (FS.trackingDelegate['willDeletePath']) {
            FS.trackingDelegate['willDeletePath'](path);
          }
        } catch(e) {
          console.log("FS.trackingDelegate['willDeletePath']('"+path+"') threw an exception: " + e.message);
        }
        parent.node_ops.unlink(parent, name);
        FS.destroyNode(node);
        try {
          if (FS.trackingDelegate['onDeletePath']) FS.trackingDelegate['onDeletePath'](path);
        } catch(e) {
          console.log("FS.trackingDelegate['onDeletePath']('"+path+"') threw an exception: " + e.message);
        }
      },readlink:function (path) {
        var lookup = FS.lookupPath(path);
        var link = lookup.node;
        if (!link) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        }
        if (!link.node_ops.readlink) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        return PATH.resolve(FS.getPath(link.parent), link.node_ops.readlink(link));
      },stat:function (path, dontFollow) {
        var lookup = FS.lookupPath(path, { follow: !dontFollow });
        var node = lookup.node;
        if (!node) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        }
        if (!node.node_ops.getattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        return node.node_ops.getattr(node);
      },lstat:function (path) {
        return FS.stat(path, true);
      },chmod:function (path, mode, dontFollow) {
        var node;
        if (typeof path === 'string') {
          var lookup = FS.lookupPath(path, { follow: !dontFollow });
          node = lookup.node;
        } else {
          node = path;
        }
        if (!node.node_ops.setattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        node.node_ops.setattr(node, {
          mode: (mode & 4095) | (node.mode & ~4095),
          timestamp: Date.now()
        });
      },lchmod:function (path, mode) {
        FS.chmod(path, mode, true);
      },fchmod:function (fd, mode) {
        var stream = FS.getStream(fd);
        if (!stream) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        FS.chmod(stream.node, mode);
      },chown:function (path, uid, gid, dontFollow) {
        var node;
        if (typeof path === 'string') {
          var lookup = FS.lookupPath(path, { follow: !dontFollow });
          node = lookup.node;
        } else {
          node = path;
        }
        if (!node.node_ops.setattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        node.node_ops.setattr(node, {
          timestamp: Date.now()
          // we ignore the uid / gid for now
        });
      },lchown:function (path, uid, gid) {
        FS.chown(path, uid, gid, true);
      },fchown:function (fd, uid, gid) {
        var stream = FS.getStream(fd);
        if (!stream) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        FS.chown(stream.node, uid, gid);
      },truncate:function (path, len) {
        if (len < 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var node;
        if (typeof path === 'string') {
          var lookup = FS.lookupPath(path, { follow: true });
          node = lookup.node;
        } else {
          node = path;
        }
        if (!node.node_ops.setattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isDir(node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
        }
        if (!FS.isFile(node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var err = FS.nodePermissions(node, 'w');
        if (err) {
          throw new FS.ErrnoError(err);
        }
        node.node_ops.setattr(node, {
          size: len,
          timestamp: Date.now()
        });
      },ftruncate:function (fd, len) {
        var stream = FS.getStream(fd);
        if (!stream) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if ((stream.flags & 2097155) === 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        FS.truncate(stream.node, len);
      },utime:function (path, atime, mtime) {
        var lookup = FS.lookupPath(path, { follow: true });
        var node = lookup.node;
        node.node_ops.setattr(node, {
          timestamp: Math.max(atime, mtime)
        });
      },open:function (path, flags, mode, fd_start, fd_end) {
        if (path === "") {
          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        }
        flags = typeof flags === 'string' ? FS.modeStringToFlags(flags) : flags;
        mode = typeof mode === 'undefined' ? 438 /* 0666 */ : mode;
        if ((flags & 64)) {
          mode = (mode & 4095) | 32768;
        } else {
          mode = 0;
        }
        var node;
        if (typeof path === 'object') {
          node = path;
        } else {
          path = PATH.normalize(path);
          try {
            var lookup = FS.lookupPath(path, {
              follow: !(flags & 131072)
            });
            node = lookup.node;
          } catch (e) {
            // ignore
          }
        }
        // perhaps we need to create the node
        var created = false;
        if ((flags & 64)) {
          if (node) {
            // if O_CREAT and O_EXCL are set, error out if the node already exists
            if ((flags & 128)) {
              throw new FS.ErrnoError(ERRNO_CODES.EEXIST);
            }
          } else {
            // node doesn't exist, try to create it
            node = FS.mknod(path, mode, 0);
            created = true;
          }
        }
        if (!node) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        }
        // can't truncate a device
        if (FS.isChrdev(node.mode)) {
          flags &= ~512;
        }
        // if asked only for a directory, then this must be one
        if ((flags & 65536) && !FS.isDir(node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
        }
        // check permissions, if this is not a file we just created now (it is ok to
        // create and write to a file with read-only permissions; it is read-only
        // for later use)
        if (!created) {
          var err = FS.mayOpen(node, flags);
          if (err) {
            throw new FS.ErrnoError(err);
          }
        }
        // do truncation if necessary
        if ((flags & 512)) {
          FS.truncate(node, 0);
        }
        // we've already handled these, don't pass down to the underlying vfs
        flags &= ~(128 | 512);
  
        // register the stream with the filesystem
        var stream = FS.createStream({
          node: node,
          path: FS.getPath(node),  // we want the absolute path to the node
          flags: flags,
          seekable: true,
          position: 0,
          stream_ops: node.stream_ops,
          // used by the file family libc calls (fopen, fwrite, ferror, etc.)
          ungotten: [],
          error: false
        }, fd_start, fd_end);
        // call the new stream's open function
        if (stream.stream_ops.open) {
          stream.stream_ops.open(stream);
        }
        if (Module['logReadFiles'] && !(flags & 1)) {
          if (!FS.readFiles) FS.readFiles = {};
          if (!(path in FS.readFiles)) {
            FS.readFiles[path] = 1;
            Module['printErr']('read file: ' + path);
          }
        }
        try {
          if (FS.trackingDelegate['onOpenFile']) {
            var trackingFlags = 0;
            if ((flags & 2097155) !== 1) {
              trackingFlags |= FS.tracking.openFlags.READ;
            }
            if ((flags & 2097155) !== 0) {
              trackingFlags |= FS.tracking.openFlags.WRITE;
            }
            FS.trackingDelegate['onOpenFile'](path, trackingFlags);
          }
        } catch(e) {
          console.log("FS.trackingDelegate['onOpenFile']('"+path+"', flags) threw an exception: " + e.message);
        }
        return stream;
      },close:function (stream) {
        if (stream.getdents) stream.getdents = null; // free readdir state
        try {
          if (stream.stream_ops.close) {
            stream.stream_ops.close(stream);
          }
        } catch (e) {
          throw e;
        } finally {
          FS.closeStream(stream.fd);
        }
      },llseek:function (stream, offset, whence) {
        if (!stream.seekable || !stream.stream_ops.llseek) {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }
        stream.position = stream.stream_ops.llseek(stream, offset, whence);
        stream.ungotten = [];
        return stream.position;
      },read:function (stream, buffer, offset, length, position) {
        if (length < 0 || position < 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        if ((stream.flags & 2097155) === 1) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if (FS.isDir(stream.node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
        }
        if (!stream.stream_ops.read) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var seeking = true;
        if (typeof position === 'undefined') {
          position = stream.position;
          seeking = false;
        } else if (!stream.seekable) {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }
        var bytesRead = stream.stream_ops.read(stream, buffer, offset, length, position);
        if (!seeking) stream.position += bytesRead;
        return bytesRead;
      },write:function (stream, buffer, offset, length, position, canOwn) {
        if (length < 0 || position < 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        if ((stream.flags & 2097155) === 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if (FS.isDir(stream.node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
        }
        if (!stream.stream_ops.write) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        if (stream.flags & 1024) {
          // seek to the end before writing in append mode
          FS.llseek(stream, 0, 2);
        }
        var seeking = true;
        if (typeof position === 'undefined') {
          position = stream.position;
          seeking = false;
        } else if (!stream.seekable) {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }
        var bytesWritten = stream.stream_ops.write(stream, buffer, offset, length, position, canOwn);
        if (!seeking) stream.position += bytesWritten;
        try {
          if (stream.path && FS.trackingDelegate['onWriteToFile']) FS.trackingDelegate['onWriteToFile'](stream.path);
        } catch(e) {
          console.log("FS.trackingDelegate['onWriteToFile']('"+path+"') threw an exception: " + e.message);
        }
        return bytesWritten;
      },allocate:function (stream, offset, length) {
        if (offset < 0 || length <= 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        if ((stream.flags & 2097155) === 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if (!FS.isFile(stream.node.mode) && !FS.isDir(node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
        }
        if (!stream.stream_ops.allocate) {
          throw new FS.ErrnoError(ERRNO_CODES.EOPNOTSUPP);
        }
        stream.stream_ops.allocate(stream, offset, length);
      },mmap:function (stream, buffer, offset, length, position, prot, flags) {
        // TODO if PROT is PROT_WRITE, make sure we have write access
        if ((stream.flags & 2097155) === 1) {
          throw new FS.ErrnoError(ERRNO_CODES.EACCES);
        }
        if (!stream.stream_ops.mmap) {
          throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
        }
        return stream.stream_ops.mmap(stream, buffer, offset, length, position, prot, flags);
      },msync:function (stream, buffer, offset, length, mmapFlags) {
        if (!stream || !stream.stream_ops.msync) {
          return 0;
        }
        return stream.stream_ops.msync(stream, buffer, offset, length, mmapFlags);
      },munmap:function (stream) {
        return 0;
      },ioctl:function (stream, cmd, arg) {
        if (!stream.stream_ops.ioctl) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTTY);
        }
        return stream.stream_ops.ioctl(stream, cmd, arg);
      },readFile:function (path, opts) {
        opts = opts || {};
        opts.flags = opts.flags || 'r';
        opts.encoding = opts.encoding || 'binary';
        if (opts.encoding !== 'utf8' && opts.encoding !== 'binary') {
          throw new Error('Invalid encoding type "' + opts.encoding + '"');
        }
        var ret;
        var stream = FS.open(path, opts.flags);
        var stat = FS.stat(path);
        var length = stat.size;
        var buf = new Uint8Array(length);
        FS.read(stream, buf, 0, length, 0);
        if (opts.encoding === 'utf8') {
          ret = UTF8ArrayToString(buf, 0);
        } else if (opts.encoding === 'binary') {
          ret = buf;
        }
        FS.close(stream);
        return ret;
      },writeFile:function (path, data, opts) {
        opts = opts || {};
        opts.flags = opts.flags || 'w';
        opts.encoding = opts.encoding || 'utf8';
        if (opts.encoding !== 'utf8' && opts.encoding !== 'binary') {
          throw new Error('Invalid encoding type "' + opts.encoding + '"');
        }
        var stream = FS.open(path, opts.flags, opts.mode);
        if (opts.encoding === 'utf8') {
          var buf = new Uint8Array(lengthBytesUTF8(data)+1);
          var actualNumBytes = stringToUTF8Array(data, buf, 0, buf.length);
          FS.write(stream, buf, 0, actualNumBytes, 0, opts.canOwn);
        } else if (opts.encoding === 'binary') {
          FS.write(stream, data, 0, data.length, 0, opts.canOwn);
        }
        FS.close(stream);
      },cwd:function () {
        return FS.currentPath;
      },chdir:function (path) {
        var lookup = FS.lookupPath(path, { follow: true });
        if (!FS.isDir(lookup.node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
        }
        var err = FS.nodePermissions(lookup.node, 'x');
        if (err) {
          throw new FS.ErrnoError(err);
        }
        FS.currentPath = lookup.path;
      },createDefaultDirectories:function () {
        FS.mkdir('/tmp');
        FS.mkdir('/home');
        FS.mkdir('/home/web_user');
      },createDefaultDevices:function () {
        // create /dev
        FS.mkdir('/dev');
        // setup /dev/null
        FS.registerDevice(FS.makedev(1, 3), {
          read: function() { return 0; },
          write: function(stream, buffer, offset, length, pos) { return length; }
        });
        FS.mkdev('/dev/null', FS.makedev(1, 3));
        // setup /dev/tty and /dev/tty1
        // stderr needs to print output using Module['printErr']
        // so we register a second tty just for it.
        TTY.register(FS.makedev(5, 0), TTY.default_tty_ops);
        TTY.register(FS.makedev(6, 0), TTY.default_tty1_ops);
        FS.mkdev('/dev/tty', FS.makedev(5, 0));
        FS.mkdev('/dev/tty1', FS.makedev(6, 0));
        // setup /dev/[u]random
        var random_device;
        if (typeof crypto !== 'undefined') {
          // for modern web browsers
          var randomBuffer = new Uint8Array(1);
          random_device = function() { crypto.getRandomValues(randomBuffer); return randomBuffer[0]; };
        } else if (ENVIRONMENT_IS_NODE) {
          // for nodejs
          random_device = function() { return require('crypto').randomBytes(1)[0]; };
        } else {
          // default for ES5 platforms
          random_device = function() { return (Math.random()*256)|0; };
        }
        FS.createDevice('/dev', 'random', random_device);
        FS.createDevice('/dev', 'urandom', random_device);
        // we're not going to emulate the actual shm device,
        // just create the tmp dirs that reside in it commonly
        FS.mkdir('/dev/shm');
        FS.mkdir('/dev/shm/tmp');
      },createSpecialDirectories:function () {
        // create /proc/self/fd which allows /proc/self/fd/6 => readlink gives the name of the stream for fd 6 (see test_unistd_ttyname)
        FS.mkdir('/proc');
        FS.mkdir('/proc/self');
        FS.mkdir('/proc/self/fd');
        FS.mount({
          mount: function() {
            var node = FS.createNode('/proc/self', 'fd', 16384 | 511 /* 0777 */, 73);
            node.node_ops = {
              lookup: function(parent, name) {
                var fd = +name;
                var stream = FS.getStream(fd);
                if (!stream) throw new FS.ErrnoError(ERRNO_CODES.EBADF);
                var ret = {
                  parent: null,
                  mount: { mountpoint: 'fake' },
                  node_ops: { readlink: function() { return stream.path } }
                };
                ret.parent = ret; // make it look like a simple root node
                return ret;
              }
            };
            return node;
          }
        }, {}, '/proc/self/fd');
      },createStandardStreams:function () {
        // TODO deprecate the old functionality of a single
        // input / output callback and that utilizes FS.createDevice
        // and instead require a unique set of stream ops
  
        // by default, we symlink the standard streams to the
        // default tty devices. however, if the standard streams
        // have been overwritten we create a unique device for
        // them instead.
        if (Module['stdin']) {
          FS.createDevice('/dev', 'stdin', Module['stdin']);
        } else {
          FS.symlink('/dev/tty', '/dev/stdin');
        }
        if (Module['stdout']) {
          FS.createDevice('/dev', 'stdout', null, Module['stdout']);
        } else {
          FS.symlink('/dev/tty', '/dev/stdout');
        }
        if (Module['stderr']) {
          FS.createDevice('/dev', 'stderr', null, Module['stderr']);
        } else {
          FS.symlink('/dev/tty1', '/dev/stderr');
        }
  
        // open default streams for the stdin, stdout and stderr devices
        var stdin = FS.open('/dev/stdin', 'r');
        assert(stdin.fd === 0, 'invalid handle for stdin (' + stdin.fd + ')');
  
        var stdout = FS.open('/dev/stdout', 'w');
        assert(stdout.fd === 1, 'invalid handle for stdout (' + stdout.fd + ')');
  
        var stderr = FS.open('/dev/stderr', 'w');
        assert(stderr.fd === 2, 'invalid handle for stderr (' + stderr.fd + ')');
      },ensureErrnoError:function () {
        if (FS.ErrnoError) return;
        FS.ErrnoError = function ErrnoError(errno, node) {
          //Module.printErr(stackTrace()); // useful for debugging
          this.node = node;
          this.setErrno = function(errno) {
            this.errno = errno;
            for (var key in ERRNO_CODES) {
              if (ERRNO_CODES[key] === errno) {
                this.code = key;
                break;
              }
            }
          };
          this.setErrno(errno);
          this.message = ERRNO_MESSAGES[errno];
          if (this.stack) this.stack = demangleAll(this.stack);
        };
        FS.ErrnoError.prototype = new Error();
        FS.ErrnoError.prototype.constructor = FS.ErrnoError;
        // Some errors may happen quite a bit, to avoid overhead we reuse them (and suffer a lack of stack info)
        [ERRNO_CODES.ENOENT].forEach(function(code) {
          FS.genericErrors[code] = new FS.ErrnoError(code);
          FS.genericErrors[code].stack = '<generic error, no stack>';
        });
      },staticInit:function () {
        FS.ensureErrnoError();
  
        FS.nameTable = new Array(4096);
  
        FS.mount(MEMFS, {}, '/');
  
        FS.createDefaultDirectories();
        FS.createDefaultDevices();
        FS.createSpecialDirectories();
  
        FS.filesystems = {
          'MEMFS': MEMFS,
          'IDBFS': IDBFS,
          'NODEFS': NODEFS,
          'WORKERFS': WORKERFS,
        };
      },init:function (input, output, error) {
        assert(!FS.init.initialized, 'FS.init was previously called. If you want to initialize later with custom parameters, remove any earlier calls (note that one is automatically added to the generated code)');
        FS.init.initialized = true;
  
        FS.ensureErrnoError();
  
        // Allow Module.stdin etc. to provide defaults, if none explicitly passed to us here
        Module['stdin'] = input || Module['stdin'];
        Module['stdout'] = output || Module['stdout'];
        Module['stderr'] = error || Module['stderr'];
  
        FS.createStandardStreams();
      },quit:function () {
        FS.init.initialized = false;
        // force-flush all streams, so we get musl std streams printed out
        var fflush = Module['_fflush'];
        if (fflush) fflush(0);
        // close all of our streams
        for (var i = 0; i < FS.streams.length; i++) {
          var stream = FS.streams[i];
          if (!stream) {
            continue;
          }
          FS.close(stream);
        }
      },getMode:function (canRead, canWrite) {
        var mode = 0;
        if (canRead) mode |= 292 | 73;
        if (canWrite) mode |= 146;
        return mode;
      },joinPath:function (parts, forceRelative) {
        var path = PATH.join.apply(null, parts);
        if (forceRelative && path[0] == '/') path = path.substr(1);
        return path;
      },absolutePath:function (relative, base) {
        return PATH.resolve(base, relative);
      },standardizePath:function (path) {
        return PATH.normalize(path);
      },findObject:function (path, dontResolveLastLink) {
        var ret = FS.analyzePath(path, dontResolveLastLink);
        if (ret.exists) {
          return ret.object;
        } else {
          ___setErrNo(ret.error);
          return null;
        }
      },analyzePath:function (path, dontResolveLastLink) {
        // operate from within the context of the symlink's target
        try {
          var lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });
          path = lookup.path;
        } catch (e) {
        }
        var ret = {
          isRoot: false, exists: false, error: 0, name: null, path: null, object: null,
          parentExists: false, parentPath: null, parentObject: null
        };
        try {
          var lookup = FS.lookupPath(path, { parent: true });
          ret.parentExists = true;
          ret.parentPath = lookup.path;
          ret.parentObject = lookup.node;
          ret.name = PATH.basename(path);
          lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });
          ret.exists = true;
          ret.path = lookup.path;
          ret.object = lookup.node;
          ret.name = lookup.node.name;
          ret.isRoot = lookup.path === '/';
        } catch (e) {
          ret.error = e.errno;
        };
        return ret;
      },createFolder:function (parent, name, canRead, canWrite) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        var mode = FS.getMode(canRead, canWrite);
        return FS.mkdir(path, mode);
      },createPath:function (parent, path, canRead, canWrite) {
        parent = typeof parent === 'string' ? parent : FS.getPath(parent);
        var parts = path.split('/').reverse();
        while (parts.length) {
          var part = parts.pop();
          if (!part) continue;
          var current = PATH.join2(parent, part);
          try {
            FS.mkdir(current);
          } catch (e) {
            // ignore EEXIST
          }
          parent = current;
        }
        return current;
      },createFile:function (parent, name, properties, canRead, canWrite) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        var mode = FS.getMode(canRead, canWrite);
        return FS.create(path, mode);
      },createDataFile:function (parent, name, data, canRead, canWrite, canOwn) {
        var path = name ? PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name) : parent;
        var mode = FS.getMode(canRead, canWrite);
        var node = FS.create(path, mode);
        if (data) {
          if (typeof data === 'string') {
            var arr = new Array(data.length);
            for (var i = 0, len = data.length; i < len; ++i) arr[i] = data.charCodeAt(i);
            data = arr;
          }
          // make sure we can write to the file
          FS.chmod(node, mode | 146);
          var stream = FS.open(node, 'w');
          FS.write(stream, data, 0, data.length, 0, canOwn);
          FS.close(stream);
          FS.chmod(node, mode);
        }
        return node;
      },createDevice:function (parent, name, input, output) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        var mode = FS.getMode(!!input, !!output);
        if (!FS.createDevice.major) FS.createDevice.major = 64;
        var dev = FS.makedev(FS.createDevice.major++, 0);
        // Create a fake device that a set of stream ops to emulate
        // the old behavior.
        FS.registerDevice(dev, {
          open: function(stream) {
            stream.seekable = false;
          },
          close: function(stream) {
            // flush any pending line data
            if (output && output.buffer && output.buffer.length) {
              output(10);
            }
          },
          read: function(stream, buffer, offset, length, pos /* ignored */) {
            var bytesRead = 0;
            for (var i = 0; i < length; i++) {
              var result;
              try {
                result = input();
              } catch (e) {
                throw new FS.ErrnoError(ERRNO_CODES.EIO);
              }
              if (result === undefined && bytesRead === 0) {
                throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
              }
              if (result === null || result === undefined) break;
              bytesRead++;
              buffer[offset+i] = result;
            }
            if (bytesRead) {
              stream.node.timestamp = Date.now();
            }
            return bytesRead;
          },
          write: function(stream, buffer, offset, length, pos) {
            for (var i = 0; i < length; i++) {
              try {
                output(buffer[offset+i]);
              } catch (e) {
                throw new FS.ErrnoError(ERRNO_CODES.EIO);
              }
            }
            if (length) {
              stream.node.timestamp = Date.now();
            }
            return i;
          }
        });
        return FS.mkdev(path, mode, dev);
      },createLink:function (parent, name, target, canRead, canWrite) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        return FS.symlink(target, path);
      },forceLoadFile:function (obj) {
        if (obj.isDevice || obj.isFolder || obj.link || obj.contents) return true;
        var success = true;
        if (typeof XMLHttpRequest !== 'undefined') {
          throw new Error("Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.");
        } else if (Module['read']) {
          // Command-line.
          try {
            // WARNING: Can't read binary files in V8's d8 or tracemonkey's js, as
            //          read() will try to parse UTF8.
            obj.contents = intArrayFromString(Module['read'](obj.url), true);
            obj.usedBytes = obj.contents.length;
          } catch (e) {
            success = false;
          }
        } else {
          throw new Error('Cannot load without read() or XMLHttpRequest.');
        }
        if (!success) ___setErrNo(ERRNO_CODES.EIO);
        return success;
      },createLazyFile:function (parent, name, url, canRead, canWrite) {
        // Lazy chunked Uint8Array (implements get and length from Uint8Array). Actual getting is abstracted away for eventual reuse.
        function LazyUint8Array() {
          this.lengthKnown = false;
          this.chunks = []; // Loaded chunks. Index is the chunk number
        }
        LazyUint8Array.prototype.get = function LazyUint8Array_get(idx) {
          if (idx > this.length-1 || idx < 0) {
            return undefined;
          }
          var chunkOffset = idx % this.chunkSize;
          var chunkNum = (idx / this.chunkSize)|0;
          return this.getter(chunkNum)[chunkOffset];
        }
        LazyUint8Array.prototype.setDataGetter = function LazyUint8Array_setDataGetter(getter) {
          this.getter = getter;
        }
        LazyUint8Array.prototype.cacheLength = function LazyUint8Array_cacheLength() {
          // Find length
          var xhr = new XMLHttpRequest();
          xhr.open('HEAD', url, false);
          xhr.send(null);
          if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error("Couldn't load " + url + ". Status: " + xhr.status);
          var datalength = Number(xhr.getResponseHeader("Content-length"));
          var header;
          var hasByteServing = (header = xhr.getResponseHeader("Accept-Ranges")) && header === "bytes";
          var usesGzip = (header = xhr.getResponseHeader("Content-Encoding")) && header === "gzip";
  
          var chunkSize = 1024*1024; // Chunk size in bytes
  
          if (!hasByteServing) chunkSize = datalength;
  
          // Function to get a range from the remote URL.
          var doXHR = (function(from, to) {
            if (from > to) throw new Error("invalid range (" + from + ", " + to + ") or no bytes requested!");
            if (to > datalength-1) throw new Error("only " + datalength + " bytes available! programmer error!");
  
            // TODO: Use mozResponseArrayBuffer, responseStream, etc. if available.
            var xhr = new XMLHttpRequest();
            xhr.open('GET', url, false);
            if (datalength !== chunkSize) xhr.setRequestHeader("Range", "bytes=" + from + "-" + to);
  
            // Some hints to the browser that we want binary data.
            if (typeof Uint8Array != 'undefined') xhr.responseType = 'arraybuffer';
            if (xhr.overrideMimeType) {
              xhr.overrideMimeType('text/plain; charset=x-user-defined');
            }
  
            xhr.send(null);
            if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error("Couldn't load " + url + ". Status: " + xhr.status);
            if (xhr.response !== undefined) {
              return new Uint8Array(xhr.response || []);
            } else {
              return intArrayFromString(xhr.responseText || '', true);
            }
          });
          var lazyArray = this;
          lazyArray.setDataGetter(function(chunkNum) {
            var start = chunkNum * chunkSize;
            var end = (chunkNum+1) * chunkSize - 1; // including this byte
            end = Math.min(end, datalength-1); // if datalength-1 is selected, this is the last block
            if (typeof(lazyArray.chunks[chunkNum]) === "undefined") {
              lazyArray.chunks[chunkNum] = doXHR(start, end);
            }
            if (typeof(lazyArray.chunks[chunkNum]) === "undefined") throw new Error("doXHR failed!");
            return lazyArray.chunks[chunkNum];
          });
  
          if (usesGzip || !datalength) {
            // if the server uses gzip or doesn't supply the length, we have to download the whole file to get the (uncompressed) length
            chunkSize = datalength = 1; // this will force getter(0)/doXHR do download the whole file
            datalength = this.getter(0).length;
            chunkSize = datalength;
            console.log("LazyFiles on gzip forces download of the whole file when length is accessed");
          }
  
          this._length = datalength;
          this._chunkSize = chunkSize;
          this.lengthKnown = true;
        }
        if (typeof XMLHttpRequest !== 'undefined') {
          if (!ENVIRONMENT_IS_WORKER) throw 'Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc';
          var lazyArray = new LazyUint8Array();
          Object.defineProperties(lazyArray, {
            length: {
              get: function() {
                if(!this.lengthKnown) {
                  this.cacheLength();
                }
                return this._length;
              }
            },
            chunkSize: {
              get: function() {
                if(!this.lengthKnown) {
                  this.cacheLength();
                }
                return this._chunkSize;
              }
            }
          });
  
          var properties = { isDevice: false, contents: lazyArray };
        } else {
          var properties = { isDevice: false, url: url };
        }
  
        var node = FS.createFile(parent, name, properties, canRead, canWrite);
        // This is a total hack, but I want to get this lazy file code out of the
        // core of MEMFS. If we want to keep this lazy file concept I feel it should
        // be its own thin LAZYFS proxying calls to MEMFS.
        if (properties.contents) {
          node.contents = properties.contents;
        } else if (properties.url) {
          node.contents = null;
          node.url = properties.url;
        }
        // Add a function that defers querying the file size until it is asked the first time.
        Object.defineProperties(node, {
          usedBytes: {
            get: function() { return this.contents.length; }
          }
        });
        // override each stream op with one that tries to force load the lazy file first
        var stream_ops = {};
        var keys = Object.keys(node.stream_ops);
        keys.forEach(function(key) {
          var fn = node.stream_ops[key];
          stream_ops[key] = function forceLoadLazyFile() {
            if (!FS.forceLoadFile(node)) {
              throw new FS.ErrnoError(ERRNO_CODES.EIO);
            }
            return fn.apply(null, arguments);
          };
        });
        // use a custom read function
        stream_ops.read = function stream_ops_read(stream, buffer, offset, length, position) {
          if (!FS.forceLoadFile(node)) {
            throw new FS.ErrnoError(ERRNO_CODES.EIO);
          }
          var contents = stream.node.contents;
          if (position >= contents.length)
            return 0;
          var size = Math.min(contents.length - position, length);
          assert(size >= 0);
          if (contents.slice) { // normal array
            for (var i = 0; i < size; i++) {
              buffer[offset + i] = contents[position + i];
            }
          } else {
            for (var i = 0; i < size; i++) { // LazyUint8Array from sync binary XHR
              buffer[offset + i] = contents.get(position + i);
            }
          }
          return size;
        };
        node.stream_ops = stream_ops;
        return node;
      },createPreloadedFile:function (parent, name, url, canRead, canWrite, onload, onerror, dontCreateFile, canOwn, preFinish) {
        Browser.init(); // XXX perhaps this method should move onto Browser?
        // TODO we should allow people to just pass in a complete filename instead
        // of parent and name being that we just join them anyways
        var fullname = name ? PATH.resolve(PATH.join2(parent, name)) : parent;
        var dep = getUniqueRunDependency('cp ' + fullname); // might have several active requests for the same fullname
        function processData(byteArray) {
          function finish(byteArray) {
            if (preFinish) preFinish();
            if (!dontCreateFile) {
              FS.createDataFile(parent, name, byteArray, canRead, canWrite, canOwn);
            }
            if (onload) onload();
            removeRunDependency(dep);
          }
          var handled = false;
          Module['preloadPlugins'].forEach(function(plugin) {
            if (handled) return;
            if (plugin['canHandle'](fullname)) {
              plugin['handle'](byteArray, fullname, finish, function() {
                if (onerror) onerror();
                removeRunDependency(dep);
              });
              handled = true;
            }
          });
          if (!handled) finish(byteArray);
        }
        addRunDependency(dep);
        if (typeof url == 'string') {
          Browser.asyncLoad(url, function(byteArray) {
            processData(byteArray);
          }, onerror);
        } else {
          processData(url);
        }
      },indexedDB:function () {
        return window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;
      },DB_NAME:function () {
        return 'EM_FS_' + window.location.pathname;
      },DB_VERSION:20,DB_STORE_NAME:"FILE_DATA",saveFilesToDB:function (paths, onload, onerror) {
        onload = onload || function(){};
        onerror = onerror || function(){};
        var indexedDB = FS.indexedDB();
        try {
          var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);
        } catch (e) {
          return onerror(e);
        }
        openRequest.onupgradeneeded = function openRequest_onupgradeneeded() {
          console.log('creating db');
          var db = openRequest.result;
          db.createObjectStore(FS.DB_STORE_NAME);
        };
        openRequest.onsuccess = function openRequest_onsuccess() {
          var db = openRequest.result;
          var transaction = db.transaction([FS.DB_STORE_NAME], 'readwrite');
          var files = transaction.objectStore(FS.DB_STORE_NAME);
          var ok = 0, fail = 0, total = paths.length;
          function finish() {
            if (fail == 0) onload(); else onerror();
          }
          paths.forEach(function(path) {
            var putRequest = files.put(FS.analyzePath(path).object.contents, path);
            putRequest.onsuccess = function putRequest_onsuccess() { ok++; if (ok + fail == total) finish() };
            putRequest.onerror = function putRequest_onerror() { fail++; if (ok + fail == total) finish() };
          });
          transaction.onerror = onerror;
        };
        openRequest.onerror = onerror;
      },loadFilesFromDB:function (paths, onload, onerror) {
        onload = onload || function(){};
        onerror = onerror || function(){};
        var indexedDB = FS.indexedDB();
        try {
          var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);
        } catch (e) {
          return onerror(e);
        }
        openRequest.onupgradeneeded = onerror; // no database to load from
        openRequest.onsuccess = function openRequest_onsuccess() {
          var db = openRequest.result;
          try {
            var transaction = db.transaction([FS.DB_STORE_NAME], 'readonly');
          } catch(e) {
            onerror(e);
            return;
          }
          var files = transaction.objectStore(FS.DB_STORE_NAME);
          var ok = 0, fail = 0, total = paths.length;
          function finish() {
            if (fail == 0) onload(); else onerror();
          }
          paths.forEach(function(path) {
            var getRequest = files.get(path);
            getRequest.onsuccess = function getRequest_onsuccess() {
              if (FS.analyzePath(path).exists) {
                FS.unlink(path);
              }
              FS.createDataFile(PATH.dirname(path), PATH.basename(path), getRequest.result, true, true, true);
              ok++;
              if (ok + fail == total) finish();
            };
            getRequest.onerror = function getRequest_onerror() { fail++; if (ok + fail == total) finish() };
          });
          transaction.onerror = onerror;
        };
        openRequest.onerror = onerror;
      }};var SYSCALLS={DEFAULT_POLLMASK:5,mappings:{},umask:511,calculateAt:function (dirfd, path) {
        if (path[0] !== '/') {
          // relative path
          var dir;
          if (dirfd === -100) {
            dir = FS.cwd();
          } else {
            var dirstream = FS.getStream(dirfd);
            if (!dirstream) throw new FS.ErrnoError(ERRNO_CODES.EBADF);
            dir = dirstream.path;
          }
          path = PATH.join2(dir, path);
        }
        return path;
      },doStat:function (func, path, buf) {
        try {
          var stat = func(path);
        } catch (e) {
          if (e && e.node && PATH.normalize(path) !== PATH.normalize(FS.getPath(e.node))) {
            // an error occurred while trying to look up the path; we should just report ENOTDIR
            return -ERRNO_CODES.ENOTDIR;
          }
          throw e;
        }
        HEAP32[((buf)>>2)]=stat.dev;
        HEAP32[(((buf)+(4))>>2)]=0;
        HEAP32[(((buf)+(8))>>2)]=stat.ino;
        HEAP32[(((buf)+(12))>>2)]=stat.mode;
        HEAP32[(((buf)+(16))>>2)]=stat.nlink;
        HEAP32[(((buf)+(20))>>2)]=stat.uid;
        HEAP32[(((buf)+(24))>>2)]=stat.gid;
        HEAP32[(((buf)+(28))>>2)]=stat.rdev;
        HEAP32[(((buf)+(32))>>2)]=0;
        HEAP32[(((buf)+(36))>>2)]=stat.size;
        HEAP32[(((buf)+(40))>>2)]=4096;
        HEAP32[(((buf)+(44))>>2)]=stat.blocks;
        HEAP32[(((buf)+(48))>>2)]=(stat.atime.getTime() / 1000)|0;
        HEAP32[(((buf)+(52))>>2)]=0;
        HEAP32[(((buf)+(56))>>2)]=(stat.mtime.getTime() / 1000)|0;
        HEAP32[(((buf)+(60))>>2)]=0;
        HEAP32[(((buf)+(64))>>2)]=(stat.ctime.getTime() / 1000)|0;
        HEAP32[(((buf)+(68))>>2)]=0;
        HEAP32[(((buf)+(72))>>2)]=stat.ino;
        return 0;
      },doMsync:function (addr, stream, len, flags) {
        var buffer = new Uint8Array(HEAPU8.subarray(addr, addr + len));
        FS.msync(stream, buffer, 0, len, flags);
      },doMkdir:function (path, mode) {
        // remove a trailing slash, if one - /a/b/ has basename of '', but
        // we want to create b in the context of this function
        path = PATH.normalize(path);
        if (path[path.length-1] === '/') path = path.substr(0, path.length-1);
        FS.mkdir(path, mode, 0);
        return 0;
      },doMknod:function (path, mode, dev) {
        // we don't want this in the JS API as it uses mknod to create all nodes.
        switch (mode & 61440) {
          case 32768:
          case 8192:
          case 24576:
          case 4096:
          case 49152:
            break;
          default: return -ERRNO_CODES.EINVAL;
        }
        FS.mknod(path, mode, dev);
        return 0;
      },doReadlink:function (path, buf, bufsize) {
        if (bufsize <= 0) return -ERRNO_CODES.EINVAL;
        var ret = FS.readlink(path);
  
        var len = Math.min(bufsize, lengthBytesUTF8(ret));
        var endChar = HEAP8[buf+len];
        stringToUTF8(ret, buf, bufsize+1);
        // readlink is one of the rare functions that write out a C string, but does never append a null to the output buffer(!)
        // stringToUTF8() always appends a null byte, so restore the character under the null byte after the write.
        HEAP8[buf+len] = endChar;
  
        return len;
      },doAccess:function (path, amode) {
        if (amode & ~7) {
          // need a valid mode
          return -ERRNO_CODES.EINVAL;
        }
        var node;
        var lookup = FS.lookupPath(path, { follow: true });
        node = lookup.node;
        var perms = '';
        if (amode & 4) perms += 'r';
        if (amode & 2) perms += 'w';
        if (amode & 1) perms += 'x';
        if (perms /* otherwise, they've just passed F_OK */ && FS.nodePermissions(node, perms)) {
          return -ERRNO_CODES.EACCES;
        }
        return 0;
      },doDup:function (path, flags, suggestFD) {
        var suggest = FS.getStream(suggestFD);
        if (suggest) FS.close(suggest);
        return FS.open(path, flags, 0, suggestFD, suggestFD).fd;
      },doReadv:function (stream, iov, iovcnt, offset) {
        var ret = 0;
        for (var i = 0; i < iovcnt; i++) {
          var ptr = HEAP32[(((iov)+(i*8))>>2)];
          var len = HEAP32[(((iov)+(i*8 + 4))>>2)];
          var curr = FS.read(stream, HEAP8,ptr, len, offset);
          if (curr < 0) return -1;
          ret += curr;
          if (curr < len) break; // nothing more to read
        }
        return ret;
      },doWritev:function (stream, iov, iovcnt, offset) {
        var ret = 0;
        for (var i = 0; i < iovcnt; i++) {
          var ptr = HEAP32[(((iov)+(i*8))>>2)];
          var len = HEAP32[(((iov)+(i*8 + 4))>>2)];
          var curr = FS.write(stream, HEAP8,ptr, len, offset);
          if (curr < 0) return -1;
          ret += curr;
        }
        return ret;
      },varargs:0,get:function (varargs) {
        SYSCALLS.varargs += 4;
        var ret = HEAP32[(((SYSCALLS.varargs)-(4))>>2)];
        return ret;
      },getStr:function () {
        var ret = Pointer_stringify(SYSCALLS.get());
        return ret;
      },getStreamFromFD:function () {
        var stream = FS.getStream(SYSCALLS.get());
        if (!stream) throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        return stream;
      },getSocketFromFD:function () {
        var socket = SOCKFS.getSocket(SYSCALLS.get());
        if (!socket) throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        return socket;
      },getSocketAddress:function (allowNull) {
        var addrp = SYSCALLS.get(), addrlen = SYSCALLS.get();
        if (allowNull && addrp === 0) return null;
        var info = __read_sockaddr(addrp, addrlen);
        if (info.errno) throw new FS.ErrnoError(info.errno);
        info.addr = DNS.lookup_addr(info.addr) || info.addr;
        return info;
      },get64:function () {
        var low = SYSCALLS.get(), high = SYSCALLS.get();
        if (low >= 0) assert(high === 0);
        else assert(high === -1);
        return low;
      },getZero:function () {
        assert(SYSCALLS.get() === 0);
      }};function ___syscall54(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // ioctl
      var stream = SYSCALLS.getStreamFromFD(), op = SYSCALLS.get();
      switch (op) {
        case 21505: {
          if (!stream.tty) return -ERRNO_CODES.ENOTTY;
          return 0;
        }
        case 21506: {
          if (!stream.tty) return -ERRNO_CODES.ENOTTY;
          return 0; // no-op, not actually adjusting terminal settings
        }
        case 21519: {
          if (!stream.tty) return -ERRNO_CODES.ENOTTY;
          var argp = SYSCALLS.get();
          HEAP32[((argp)>>2)]=0;
          return 0;
        }
        case 21520: {
          if (!stream.tty) return -ERRNO_CODES.ENOTTY;
          return -ERRNO_CODES.EINVAL; // not supported
        }
        case 21531: {
          var argp = SYSCALLS.get();
          return FS.ioctl(stream, op, argp);
        }
        default: abort('bad ioctl syscall ' + op);
      }
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }

   
  Module["_bitshift64Ashr"] = _bitshift64Ashr;

   
  Module["_bitshift64Lshr"] = _bitshift64Lshr;

  function __Unwind_GetIPInfo() {
      abort('Unwind_GetIPInfo');
    }

  function _pthread_cleanup_push(routine, arg) {
      __ATEXIT__.push(function() { Runtime.dynCall('vi', routine, [arg]) })
      _pthread_cleanup_push.level = __ATEXIT__.length;
    }

  
  
  
  
  var _environ=STATICTOP; STATICTOP += 16;;var ___environ=_environ;function ___buildEnvironment(env) {
      // WARNING: Arbitrary limit!
      var MAX_ENV_VALUES = 64;
      var TOTAL_ENV_SIZE = 1024;
  
      // Statically allocate memory for the environment.
      var poolPtr;
      var envPtr;
      if (!___buildEnvironment.called) {
        ___buildEnvironment.called = true;
        // Set default values. Use string keys for Closure Compiler compatibility.
        ENV['USER'] = ENV['LOGNAME'] = 'web_user';
        ENV['PATH'] = '/';
        ENV['PWD'] = '/';
        ENV['HOME'] = '/home/web_user';
        ENV['LANG'] = 'C';
        ENV['_'] = Module['thisProgram'];
        // Allocate memory.
        poolPtr = allocate(TOTAL_ENV_SIZE, 'i8', ALLOC_STATIC);
        envPtr = allocate(MAX_ENV_VALUES * 4,
                          'i8*', ALLOC_STATIC);
        HEAP32[((envPtr)>>2)]=poolPtr;
        HEAP32[((_environ)>>2)]=envPtr;
      } else {
        envPtr = HEAP32[((_environ)>>2)];
        poolPtr = HEAP32[((envPtr)>>2)];
      }
  
      // Collect key=value lines.
      var strings = [];
      var totalSize = 0;
      for (var key in env) {
        if (typeof env[key] === 'string') {
          var line = key + '=' + env[key];
          strings.push(line);
          totalSize += line.length;
        }
      }
      if (totalSize > TOTAL_ENV_SIZE) {
        throw new Error('Environment size exceeded TOTAL_ENV_SIZE!');
      }
  
      // Make new.
      var ptrSize = 4;
      for (var i = 0; i < strings.length; i++) {
        var line = strings[i];
        writeAsciiToMemory(line, poolPtr);
        HEAP32[(((envPtr)+(i * ptrSize))>>2)]=poolPtr;
        poolPtr += line.length + 1;
      }
      HEAP32[(((envPtr)+(strings.length * ptrSize))>>2)]=0;
    }var ENV={};function _getenv(name) {
      // char *getenv(const char *name);
      // http://pubs.opengroup.org/onlinepubs/009695399/functions/getenv.html
      if (name === 0) return 0;
      name = Pointer_stringify(name);
      if (!ENV.hasOwnProperty(name)) return 0;
  
      if (_getenv.ret) _free(_getenv.ret);
      _getenv.ret = allocate(intArrayFromString(ENV[name]), 'i8', ALLOC_NORMAL);
      return _getenv.ret;
    }

  function _pthread_cleanup_pop() {
      assert(_pthread_cleanup_push.level == __ATEXIT__.length, 'cannot pop if something else added meanwhile!');
      __ATEXIT__.pop();
      _pthread_cleanup_push.level = __ATEXIT__.length;
    }

  function ___cxa_find_matching_catch_2() {
          return ___cxa_find_matching_catch.apply(null, arguments);
        }

  function ___cxa_find_matching_catch_3() {
          return ___cxa_find_matching_catch.apply(null, arguments);
        }

   
  Module["_pthread_mutex_unlock"] = _pthread_mutex_unlock;

  function _pthread_cond_signal() { return 0; }

  
  function _emscripten_memcpy_big(dest, src, num) {
      HEAPU8.set(HEAPU8.subarray(src, src+num), dest);
      return dest;
    } 
  Module["_memcpy"] = _memcpy;

   
  Module["_sbrk"] = _sbrk;

   
  Module["_bitshift64Shl"] = _bitshift64Shl;

  function _dladdr(addr, info) {
      // report all function pointers as coming from this program itself XXX not really correct in any way
      var fname = allocate(intArrayFromString(Module['thisProgram'] || './this.program'), 'i8', ALLOC_NORMAL); // XXX leak
      HEAP32[((addr)>>2)]=fname;
      HEAP32[(((addr)+(4))>>2)]=0;
      HEAP32[(((addr)+(8))>>2)]=0;
      HEAP32[(((addr)+(12))>>2)]=0;
      return 1;
    }

  function ___gxx_personality_v0() {
    }

  
  
  var cttz_i8 = allocate([8,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,7,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0], "i8", ALLOC_STATIC); 
  Module["_llvm_cttz_i32"] = _llvm_cttz_i32; 
  Module["___udivmoddi4"] = ___udivmoddi4; 
  Module["___uremdi3"] = ___uremdi3;

  function _pthread_cond_wait() { return 0; }

  var _llvm_fabs_f32=Math_abs;

  function ___syscall4(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // write
      var stream = SYSCALLS.getStreamFromFD(), buf = SYSCALLS.get(), count = SYSCALLS.get();
      return FS.write(stream, HEAP8,buf, count);
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }


   
  Module["_llvm_ctlz_i64"] = _llvm_ctlz_i64;

  function _pthread_rwlock_unlock() { return 0; }

  var _llvm_trunc_f32=Math_trunc;

   
  Module["_memset"] = _memset;

  
  
  
  function _emscripten_set_main_loop_timing(mode, value) {
      Browser.mainLoop.timingMode = mode;
      Browser.mainLoop.timingValue = value;
  
      if (!Browser.mainLoop.func) {
        console.error('emscripten_set_main_loop_timing: Cannot set timing mode for main loop since a main loop does not exist! Call emscripten_set_main_loop first to set one up.');
        return 1; // Return non-zero on failure, can't set timing mode when there is no main loop.
      }
  
      if (mode == 0 /*EM_TIMING_SETTIMEOUT*/) {
        Browser.mainLoop.scheduler = function Browser_mainLoop_scheduler_setTimeout() {
          var timeUntilNextTick = Math.max(0, Browser.mainLoop.tickStartTime + value - _emscripten_get_now())|0;
          setTimeout(Browser.mainLoop.runner, timeUntilNextTick); // doing this each time means that on exception, we stop
        };
        Browser.mainLoop.method = 'timeout';
      } else if (mode == 1 /*EM_TIMING_RAF*/) {
        Browser.mainLoop.scheduler = function Browser_mainLoop_scheduler_rAF() {
          Browser.requestAnimationFrame(Browser.mainLoop.runner);
        };
        Browser.mainLoop.method = 'rAF';
      } else if (mode == 2 /*EM_TIMING_SETIMMEDIATE*/) {
        if (!window['setImmediate']) {
          // Emulate setImmediate. (note: not a complete polyfill, we don't emulate clearImmediate() to keep code size to minimum, since not needed)
          var setImmediates = [];
          var emscriptenMainLoopMessageId = 'setimmediate';
          function Browser_setImmediate_messageHandler(event) {
            if (event.source === window && event.data === emscriptenMainLoopMessageId) {
              event.stopPropagation();
              setImmediates.shift()();
            }
          }
          window.addEventListener("message", Browser_setImmediate_messageHandler, true);
          window['setImmediate'] = function Browser_emulated_setImmediate(func) {
            setImmediates.push(func);
            if (ENVIRONMENT_IS_WORKER) {
              if (Module['setImmediates'] === undefined) Module['setImmediates'] = [];
              Module['setImmediates'].push(func);
              window.postMessage({target: emscriptenMainLoopMessageId}); // In --proxy-to-worker, route the message via proxyClient.js
            } else window.postMessage(emscriptenMainLoopMessageId, "*"); // On the main thread, can just send the message to itself.
          }
        }
        Browser.mainLoop.scheduler = function Browser_mainLoop_scheduler_setImmediate() {
          window['setImmediate'](Browser.mainLoop.runner);
        };
        Browser.mainLoop.method = 'immediate';
      }
      return 0;
    }
  
  function _emscripten_get_now() { abort() }function _emscripten_set_main_loop(func, fps, simulateInfiniteLoop, arg, noSetTiming) {
      Module['noExitRuntime'] = true;
  
      assert(!Browser.mainLoop.func, 'emscripten_set_main_loop: there can only be one main loop function at once: call emscripten_cancel_main_loop to cancel the previous one before setting a new one with different parameters.');
  
      Browser.mainLoop.func = func;
      Browser.mainLoop.arg = arg;
  
      var browserIterationFunc;
      if (typeof arg !== 'undefined') {
        var argArray = [arg];
        browserIterationFunc = function() {
          Runtime.dynCall('vi', func, argArray);
        };
      } else {
        browserIterationFunc = function() {
          Runtime.dynCall('v', func);
        };
      }
  
      var thisMainLoopId = Browser.mainLoop.currentlyRunningMainloop;
  
      Browser.mainLoop.runner = function Browser_mainLoop_runner() {
        if (ABORT) return;
        if (Browser.mainLoop.queue.length > 0) {
          var start = Date.now();
          var blocker = Browser.mainLoop.queue.shift();
          blocker.func(blocker.arg);
          if (Browser.mainLoop.remainingBlockers) {
            var remaining = Browser.mainLoop.remainingBlockers;
            var next = remaining%1 == 0 ? remaining-1 : Math.floor(remaining);
            if (blocker.counted) {
              Browser.mainLoop.remainingBlockers = next;
            } else {
              // not counted, but move the progress along a tiny bit
              next = next + 0.5; // do not steal all the next one's progress
              Browser.mainLoop.remainingBlockers = (8*remaining + next)/9;
            }
          }
          console.log('main loop blocker "' + blocker.name + '" took ' + (Date.now() - start) + ' ms'); //, left: ' + Browser.mainLoop.remainingBlockers);
          Browser.mainLoop.updateStatus();
          
          // catches pause/resume main loop from blocker execution
          if (thisMainLoopId < Browser.mainLoop.currentlyRunningMainloop) return;
          
          setTimeout(Browser.mainLoop.runner, 0);
          return;
        }
  
        // catch pauses from non-main loop sources
        if (thisMainLoopId < Browser.mainLoop.currentlyRunningMainloop) return;
  
        // Implement very basic swap interval control
        Browser.mainLoop.currentFrameNumber = Browser.mainLoop.currentFrameNumber + 1 | 0;
        if (Browser.mainLoop.timingMode == 1/*EM_TIMING_RAF*/ && Browser.mainLoop.timingValue > 1 && Browser.mainLoop.currentFrameNumber % Browser.mainLoop.timingValue != 0) {
          // Not the scheduled time to render this frame - skip.
          Browser.mainLoop.scheduler();
          return;
        } else if (Browser.mainLoop.timingMode == 0/*EM_TIMING_SETTIMEOUT*/) {
          Browser.mainLoop.tickStartTime = _emscripten_get_now();
        }
  
        // Signal GL rendering layer that processing of a new frame is about to start. This helps it optimize
        // VBO double-buffering and reduce GPU stalls.
  
  
        if (Browser.mainLoop.method === 'timeout' && Module.ctx) {
          Module.printErr('Looks like you are rendering without using requestAnimationFrame for the main loop. You should use 0 for the frame rate in emscripten_set_main_loop in order to use requestAnimationFrame, as that can greatly improve your frame rates!');
          Browser.mainLoop.method = ''; // just warn once per call to set main loop
        }
  
        Browser.mainLoop.runIter(browserIterationFunc);
  
        checkStackCookie();
  
        // catch pauses from the main loop itself
        if (thisMainLoopId < Browser.mainLoop.currentlyRunningMainloop) return;
  
        // Queue new audio data. This is important to be right after the main loop invocation, so that we will immediately be able
        // to queue the newest produced audio samples.
        // TODO: Consider adding pre- and post- rAF callbacks so that GL.newRenderingFrameStarted() and SDL.audio.queueNewAudioData()
        //       do not need to be hardcoded into this function, but can be more generic.
        if (typeof SDL === 'object' && SDL.audio && SDL.audio.queueNewAudioData) SDL.audio.queueNewAudioData();
  
        Browser.mainLoop.scheduler();
      }
  
      if (!noSetTiming) {
        if (fps && fps > 0) _emscripten_set_main_loop_timing(0/*EM_TIMING_SETTIMEOUT*/, 1000.0 / fps);
        else _emscripten_set_main_loop_timing(1/*EM_TIMING_RAF*/, 1); // Do rAF by rendering each frame (no decimating)
  
        Browser.mainLoop.scheduler();
      }
  
      if (simulateInfiniteLoop) {
        throw 'SimulateInfiniteLoop';
      }
    }var Browser={mainLoop:{scheduler:null,method:"",currentlyRunningMainloop:0,func:null,arg:0,timingMode:0,timingValue:0,currentFrameNumber:0,queue:[],pause:function () {
          Browser.mainLoop.scheduler = null;
          Browser.mainLoop.currentlyRunningMainloop++; // Incrementing this signals the previous main loop that it's now become old, and it must return.
        },resume:function () {
          Browser.mainLoop.currentlyRunningMainloop++;
          var timingMode = Browser.mainLoop.timingMode;
          var timingValue = Browser.mainLoop.timingValue;
          var func = Browser.mainLoop.func;
          Browser.mainLoop.func = null;
          _emscripten_set_main_loop(func, 0, false, Browser.mainLoop.arg, true /* do not set timing and call scheduler, we will do it on the next lines */);
          _emscripten_set_main_loop_timing(timingMode, timingValue);
          Browser.mainLoop.scheduler();
        },updateStatus:function () {
          if (Module['setStatus']) {
            var message = Module['statusMessage'] || 'Please wait...';
            var remaining = Browser.mainLoop.remainingBlockers;
            var expected = Browser.mainLoop.expectedBlockers;
            if (remaining) {
              if (remaining < expected) {
                Module['setStatus'](message + ' (' + (expected - remaining) + '/' + expected + ')');
              } else {
                Module['setStatus'](message);
              }
            } else {
              Module['setStatus']('');
            }
          }
        },runIter:function (func) {
          if (ABORT) return;
          if (Module['preMainLoop']) {
            var preRet = Module['preMainLoop']();
            if (preRet === false) {
              return; // |return false| skips a frame
            }
          }
          try {
            func();
          } catch (e) {
            if (e instanceof ExitStatus) {
              return;
            } else {
              if (e && typeof e === 'object' && e.stack) Module.printErr('exception thrown: ' + [e, e.stack]);
              throw e;
            }
          }
          if (Module['postMainLoop']) Module['postMainLoop']();
        }},isFullscreen:false,pointerLock:false,moduleContextCreatedCallbacks:[],workers:[],init:function () {
        if (!Module["preloadPlugins"]) Module["preloadPlugins"] = []; // needs to exist even in workers
  
        if (Browser.initted) return;
        Browser.initted = true;
  
        try {
          new Blob();
          Browser.hasBlobConstructor = true;
        } catch(e) {
          Browser.hasBlobConstructor = false;
          console.log("warning: no blob constructor, cannot create blobs with mimetypes");
        }
        Browser.BlobBuilder = typeof MozBlobBuilder != "undefined" ? MozBlobBuilder : (typeof WebKitBlobBuilder != "undefined" ? WebKitBlobBuilder : (!Browser.hasBlobConstructor ? console.log("warning: no BlobBuilder") : null));
        Browser.URLObject = typeof window != "undefined" ? (window.URL ? window.URL : window.webkitURL) : undefined;
        if (!Module.noImageDecoding && typeof Browser.URLObject === 'undefined') {
          console.log("warning: Browser does not support creating object URLs. Built-in browser image decoding will not be available.");
          Module.noImageDecoding = true;
        }
  
        // Support for plugins that can process preloaded files. You can add more of these to
        // your app by creating and appending to Module.preloadPlugins.
        //
        // Each plugin is asked if it can handle a file based on the file's name. If it can,
        // it is given the file's raw data. When it is done, it calls a callback with the file's
        // (possibly modified) data. For example, a plugin might decompress a file, or it
        // might create some side data structure for use later (like an Image element, etc.).
  
        var imagePlugin = {};
        imagePlugin['canHandle'] = function imagePlugin_canHandle(name) {
          return !Module.noImageDecoding && /\.(jpg|jpeg|png|bmp)$/i.test(name);
        };
        imagePlugin['handle'] = function imagePlugin_handle(byteArray, name, onload, onerror) {
          var b = null;
          if (Browser.hasBlobConstructor) {
            try {
              b = new Blob([byteArray], { type: Browser.getMimetype(name) });
              if (b.size !== byteArray.length) { // Safari bug #118630
                // Safari's Blob can only take an ArrayBuffer
                b = new Blob([(new Uint8Array(byteArray)).buffer], { type: Browser.getMimetype(name) });
              }
            } catch(e) {
              Runtime.warnOnce('Blob constructor present but fails: ' + e + '; falling back to blob builder');
            }
          }
          if (!b) {
            var bb = new Browser.BlobBuilder();
            bb.append((new Uint8Array(byteArray)).buffer); // we need to pass a buffer, and must copy the array to get the right data range
            b = bb.getBlob();
          }
          var url = Browser.URLObject.createObjectURL(b);
          assert(typeof url == 'string', 'createObjectURL must return a url as a string');
          var img = new Image();
          img.onload = function img_onload() {
            assert(img.complete, 'Image ' + name + ' could not be decoded');
            var canvas = document.createElement('canvas');
            canvas.width = img.width;
            canvas.height = img.height;
            var ctx = canvas.getContext('2d');
            ctx.drawImage(img, 0, 0);
            Module["preloadedImages"][name] = canvas;
            Browser.URLObject.revokeObjectURL(url);
            if (onload) onload(byteArray);
          };
          img.onerror = function img_onerror(event) {
            console.log('Image ' + url + ' could not be decoded');
            if (onerror) onerror();
          };
          img.src = url;
        };
        Module['preloadPlugins'].push(imagePlugin);
  
        var audioPlugin = {};
        audioPlugin['canHandle'] = function audioPlugin_canHandle(name) {
          return !Module.noAudioDecoding && name.substr(-4) in { '.ogg': 1, '.wav': 1, '.mp3': 1 };
        };
        audioPlugin['handle'] = function audioPlugin_handle(byteArray, name, onload, onerror) {
          var done = false;
          function finish(audio) {
            if (done) return;
            done = true;
            Module["preloadedAudios"][name] = audio;
            if (onload) onload(byteArray);
          }
          function fail() {
            if (done) return;
            done = true;
            Module["preloadedAudios"][name] = new Audio(); // empty shim
            if (onerror) onerror();
          }
          if (Browser.hasBlobConstructor) {
            try {
              var b = new Blob([byteArray], { type: Browser.getMimetype(name) });
            } catch(e) {
              return fail();
            }
            var url = Browser.URLObject.createObjectURL(b); // XXX we never revoke this!
            assert(typeof url == 'string', 'createObjectURL must return a url as a string');
            var audio = new Audio();
            audio.addEventListener('canplaythrough', function() { finish(audio) }, false); // use addEventListener due to chromium bug 124926
            audio.onerror = function audio_onerror(event) {
              if (done) return;
              console.log('warning: browser could not fully decode audio ' + name + ', trying slower base64 approach');
              function encode64(data) {
                var BASE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';
                var PAD = '=';
                var ret = '';
                var leftchar = 0;
                var leftbits = 0;
                for (var i = 0; i < data.length; i++) {
                  leftchar = (leftchar << 8) | data[i];
                  leftbits += 8;
                  while (leftbits >= 6) {
                    var curr = (leftchar >> (leftbits-6)) & 0x3f;
                    leftbits -= 6;
                    ret += BASE[curr];
                  }
                }
                if (leftbits == 2) {
                  ret += BASE[(leftchar&3) << 4];
                  ret += PAD + PAD;
                } else if (leftbits == 4) {
                  ret += BASE[(leftchar&0xf) << 2];
                  ret += PAD;
                }
                return ret;
              }
              audio.src = 'data:audio/x-' + name.substr(-3) + ';base64,' + encode64(byteArray);
              finish(audio); // we don't wait for confirmation this worked - but it's worth trying
            };
            audio.src = url;
            // workaround for chrome bug 124926 - we do not always get oncanplaythrough or onerror
            Browser.safeSetTimeout(function() {
              finish(audio); // try to use it even though it is not necessarily ready to play
            }, 10000);
          } else {
            return fail();
          }
        };
        Module['preloadPlugins'].push(audioPlugin);
  
        // Canvas event setup
  
        var canvas = Module['canvas'];
        function pointerLockChange() {
          Browser.pointerLock = document['pointerLockElement'] === canvas ||
                                document['mozPointerLockElement'] === canvas ||
                                document['webkitPointerLockElement'] === canvas ||
                                document['msPointerLockElement'] === canvas;
        }
        if (canvas) {
          // forced aspect ratio can be enabled by defining 'forcedAspectRatio' on Module
          // Module['forcedAspectRatio'] = 4 / 3;
          
          canvas.requestPointerLock = canvas['requestPointerLock'] ||
                                      canvas['mozRequestPointerLock'] ||
                                      canvas['webkitRequestPointerLock'] ||
                                      canvas['msRequestPointerLock'] ||
                                      function(){};
          canvas.exitPointerLock = document['exitPointerLock'] ||
                                   document['mozExitPointerLock'] ||
                                   document['webkitExitPointerLock'] ||
                                   document['msExitPointerLock'] ||
                                   function(){}; // no-op if function does not exist
          canvas.exitPointerLock = canvas.exitPointerLock.bind(document);
  
  
          document.addEventListener('pointerlockchange', pointerLockChange, false);
          document.addEventListener('mozpointerlockchange', pointerLockChange, false);
          document.addEventListener('webkitpointerlockchange', pointerLockChange, false);
          document.addEventListener('mspointerlockchange', pointerLockChange, false);
  
          if (Module['elementPointerLock']) {
            canvas.addEventListener("click", function(ev) {
              if (!Browser.pointerLock && canvas.requestPointerLock) {
                canvas.requestPointerLock();
                ev.preventDefault();
              }
            }, false);
          }
        }
      },createContext:function (canvas, useWebGL, setInModule, webGLContextAttributes) {
        if (useWebGL && Module.ctx && canvas == Module.canvas) return Module.ctx; // no need to recreate GL context if it's already been created for this canvas.
  
        var ctx;
        var contextHandle;
        if (useWebGL) {
          // For GLES2/desktop GL compatibility, adjust a few defaults to be different to WebGL defaults, so that they align better with the desktop defaults.
          var contextAttributes = {
            antialias: false,
            alpha: false
          };
  
          if (webGLContextAttributes) {
            for (var attribute in webGLContextAttributes) {
              contextAttributes[attribute] = webGLContextAttributes[attribute];
            }
          }
  
          contextHandle = GL.createContext(canvas, contextAttributes);
          if (contextHandle) {
            ctx = GL.getContext(contextHandle).GLctx;
          }
        } else {
          ctx = canvas.getContext('2d');
        }
  
        if (!ctx) return null;
  
        if (setInModule) {
          if (!useWebGL) assert(typeof GLctx === 'undefined', 'cannot set in module if GLctx is used, but we are a non-GL context that would replace it');
  
          Module.ctx = ctx;
          if (useWebGL) GL.makeContextCurrent(contextHandle);
          Module.useWebGL = useWebGL;
          Browser.moduleContextCreatedCallbacks.forEach(function(callback) { callback() });
          Browser.init();
        }
        return ctx;
      },destroyContext:function (canvas, useWebGL, setInModule) {},fullscreenHandlersInstalled:false,lockPointer:undefined,resizeCanvas:undefined,requestFullscreen:function (lockPointer, resizeCanvas, vrDevice) {
        Browser.lockPointer = lockPointer;
        Browser.resizeCanvas = resizeCanvas;
        Browser.vrDevice = vrDevice;
        if (typeof Browser.lockPointer === 'undefined') Browser.lockPointer = true;
        if (typeof Browser.resizeCanvas === 'undefined') Browser.resizeCanvas = false;
        if (typeof Browser.vrDevice === 'undefined') Browser.vrDevice = null;
  
        var canvas = Module['canvas'];
        function fullscreenChange() {
          Browser.isFullscreen = false;
          var canvasContainer = canvas.parentNode;
          if ((document['fullscreenElement'] || document['mozFullScreenElement'] ||
               document['msFullscreenElement'] || document['webkitFullscreenElement'] ||
               document['webkitCurrentFullScreenElement']) === canvasContainer) {
            canvas.exitFullscreen = document['exitFullscreen'] ||
                                    document['cancelFullScreen'] ||
                                    document['mozCancelFullScreen'] ||
                                    document['msExitFullscreen'] ||
                                    document['webkitCancelFullScreen'] ||
                                    function() {};
            canvas.exitFullscreen = canvas.exitFullscreen.bind(document);
            if (Browser.lockPointer) canvas.requestPointerLock();
            Browser.isFullscreen = true;
            if (Browser.resizeCanvas) Browser.setFullscreenCanvasSize();
          } else {
            
            // remove the full screen specific parent of the canvas again to restore the HTML structure from before going full screen
            canvasContainer.parentNode.insertBefore(canvas, canvasContainer);
            canvasContainer.parentNode.removeChild(canvasContainer);
            
            if (Browser.resizeCanvas) Browser.setWindowedCanvasSize();
          }
          if (Module['onFullScreen']) Module['onFullScreen'](Browser.isFullscreen);
          if (Module['onFullscreen']) Module['onFullscreen'](Browser.isFullscreen);
          Browser.updateCanvasDimensions(canvas);
        }
  
        if (!Browser.fullscreenHandlersInstalled) {
          Browser.fullscreenHandlersInstalled = true;
          document.addEventListener('fullscreenchange', fullscreenChange, false);
          document.addEventListener('mozfullscreenchange', fullscreenChange, false);
          document.addEventListener('webkitfullscreenchange', fullscreenChange, false);
          document.addEventListener('MSFullscreenChange', fullscreenChange, false);
        }
  
        // create a new parent to ensure the canvas has no siblings. this allows browsers to optimize full screen performance when its parent is the full screen root
        var canvasContainer = document.createElement("div");
        canvas.parentNode.insertBefore(canvasContainer, canvas);
        canvasContainer.appendChild(canvas);
  
        // use parent of canvas as full screen root to allow aspect ratio correction (Firefox stretches the root to screen size)
        canvasContainer.requestFullscreen = canvasContainer['requestFullscreen'] ||
                                            canvasContainer['mozRequestFullScreen'] ||
                                            canvasContainer['msRequestFullscreen'] ||
                                           (canvasContainer['webkitRequestFullscreen'] ? function() { canvasContainer['webkitRequestFullscreen'](Element['ALLOW_KEYBOARD_INPUT']) } : null) ||
                                           (canvasContainer['webkitRequestFullScreen'] ? function() { canvasContainer['webkitRequestFullScreen'](Element['ALLOW_KEYBOARD_INPUT']) } : null);
  
        if (vrDevice) {
          canvasContainer.requestFullscreen({ vrDisplay: vrDevice });
        } else {
          canvasContainer.requestFullscreen();
        }
      },requestFullScreen:function (lockPointer, resizeCanvas, vrDevice) {
          Module.printErr('Browser.requestFullScreen() is deprecated. Please call Browser.requestFullscreen instead.');
          Browser.requestFullScreen = function(lockPointer, resizeCanvas, vrDevice) {
            return Browser.requestFullscreen(lockPointer, resizeCanvas, vrDevice);
          }
          return Browser.requestFullscreen(lockPointer, resizeCanvas, vrDevice);
      },nextRAF:0,fakeRequestAnimationFrame:function (func) {
        // try to keep 60fps between calls to here
        var now = Date.now();
        if (Browser.nextRAF === 0) {
          Browser.nextRAF = now + 1000/60;
        } else {
          while (now + 2 >= Browser.nextRAF) { // fudge a little, to avoid timer jitter causing us to do lots of delay:0
            Browser.nextRAF += 1000/60;
          }
        }
        var delay = Math.max(Browser.nextRAF - now, 0);
        setTimeout(func, delay);
      },requestAnimationFrame:function requestAnimationFrame(func) {
        if (typeof window === 'undefined') { // Provide fallback to setTimeout if window is undefined (e.g. in Node.js)
          Browser.fakeRequestAnimationFrame(func);
        } else {
          if (!window.requestAnimationFrame) {
            window.requestAnimationFrame = window['requestAnimationFrame'] ||
                                           window['mozRequestAnimationFrame'] ||
                                           window['webkitRequestAnimationFrame'] ||
                                           window['msRequestAnimationFrame'] ||
                                           window['oRequestAnimationFrame'] ||
                                           Browser.fakeRequestAnimationFrame;
          }
          window.requestAnimationFrame(func);
        }
      },safeCallback:function (func) {
        return function() {
          if (!ABORT) return func.apply(null, arguments);
        };
      },allowAsyncCallbacks:true,queuedAsyncCallbacks:[],pauseAsyncCallbacks:function () {
        Browser.allowAsyncCallbacks = false;
      },resumeAsyncCallbacks:function () { // marks future callbacks as ok to execute, and synchronously runs any remaining ones right now
        Browser.allowAsyncCallbacks = true;
        if (Browser.queuedAsyncCallbacks.length > 0) {
          var callbacks = Browser.queuedAsyncCallbacks;
          Browser.queuedAsyncCallbacks = [];
          callbacks.forEach(function(func) {
            func();
          });
        }
      },safeRequestAnimationFrame:function (func) {
        return Browser.requestAnimationFrame(function() {
          if (ABORT) return;
          if (Browser.allowAsyncCallbacks) {
            func();
          } else {
            Browser.queuedAsyncCallbacks.push(func);
          }
        });
      },safeSetTimeout:function (func, timeout) {
        Module['noExitRuntime'] = true;
        return setTimeout(function() {
          if (ABORT) return;
          if (Browser.allowAsyncCallbacks) {
            func();
          } else {
            Browser.queuedAsyncCallbacks.push(func);
          }
        }, timeout);
      },safeSetInterval:function (func, timeout) {
        Module['noExitRuntime'] = true;
        return setInterval(function() {
          if (ABORT) return;
          if (Browser.allowAsyncCallbacks) {
            func();
          } // drop it on the floor otherwise, next interval will kick in
        }, timeout);
      },getMimetype:function (name) {
        return {
          'jpg': 'image/jpeg',
          'jpeg': 'image/jpeg',
          'png': 'image/png',
          'bmp': 'image/bmp',
          'ogg': 'audio/ogg',
          'wav': 'audio/wav',
          'mp3': 'audio/mpeg'
        }[name.substr(name.lastIndexOf('.')+1)];
      },getUserMedia:function (func) {
        if(!window.getUserMedia) {
          window.getUserMedia = navigator['getUserMedia'] ||
                                navigator['mozGetUserMedia'];
        }
        window.getUserMedia(func);
      },getMovementX:function (event) {
        return event['movementX'] ||
               event['mozMovementX'] ||
               event['webkitMovementX'] ||
               0;
      },getMovementY:function (event) {
        return event['movementY'] ||
               event['mozMovementY'] ||
               event['webkitMovementY'] ||
               0;
      },getMouseWheelDelta:function (event) {
        var delta = 0;
        switch (event.type) {
          case 'DOMMouseScroll': 
            delta = event.detail;
            break;
          case 'mousewheel': 
            delta = event.wheelDelta;
            break;
          case 'wheel': 
            delta = event['deltaY'];
            break;
          default:
            throw 'unrecognized mouse wheel event: ' + event.type;
        }
        return delta;
      },mouseX:0,mouseY:0,mouseMovementX:0,mouseMovementY:0,touches:{},lastTouches:{},calculateMouseEvent:function (event) { // event should be mousemove, mousedown or mouseup
        if (Browser.pointerLock) {
          // When the pointer is locked, calculate the coordinates
          // based on the movement of the mouse.
          // Workaround for Firefox bug 764498
          if (event.type != 'mousemove' &&
              ('mozMovementX' in event)) {
            Browser.mouseMovementX = Browser.mouseMovementY = 0;
          } else {
            Browser.mouseMovementX = Browser.getMovementX(event);
            Browser.mouseMovementY = Browser.getMovementY(event);
          }
          
          // check if SDL is available
          if (typeof SDL != "undefined") {
          	Browser.mouseX = SDL.mouseX + Browser.mouseMovementX;
          	Browser.mouseY = SDL.mouseY + Browser.mouseMovementY;
          } else {
          	// just add the mouse delta to the current absolut mouse position
          	// FIXME: ideally this should be clamped against the canvas size and zero
          	Browser.mouseX += Browser.mouseMovementX;
          	Browser.mouseY += Browser.mouseMovementY;
          }        
        } else {
          // Otherwise, calculate the movement based on the changes
          // in the coordinates.
          var rect = Module["canvas"].getBoundingClientRect();
          var cw = Module["canvas"].width;
          var ch = Module["canvas"].height;
  
          // Neither .scrollX or .pageXOffset are defined in a spec, but
          // we prefer .scrollX because it is currently in a spec draft.
          // (see: http://www.w3.org/TR/2013/WD-cssom-view-20131217/)
          var scrollX = ((typeof window.scrollX !== 'undefined') ? window.scrollX : window.pageXOffset);
          var scrollY = ((typeof window.scrollY !== 'undefined') ? window.scrollY : window.pageYOffset);
          // If this assert lands, it's likely because the browser doesn't support scrollX or pageXOffset
          // and we have no viable fallback.
          assert((typeof scrollX !== 'undefined') && (typeof scrollY !== 'undefined'), 'Unable to retrieve scroll position, mouse positions likely broken.');
  
          if (event.type === 'touchstart' || event.type === 'touchend' || event.type === 'touchmove') {
            var touch = event.touch;
            if (touch === undefined) {
              return; // the "touch" property is only defined in SDL
  
            }
            var adjustedX = touch.pageX - (scrollX + rect.left);
            var adjustedY = touch.pageY - (scrollY + rect.top);
  
            adjustedX = adjustedX * (cw / rect.width);
            adjustedY = adjustedY * (ch / rect.height);
  
            var coords = { x: adjustedX, y: adjustedY };
            
            if (event.type === 'touchstart') {
              Browser.lastTouches[touch.identifier] = coords;
              Browser.touches[touch.identifier] = coords;
            } else if (event.type === 'touchend' || event.type === 'touchmove') {
              var last = Browser.touches[touch.identifier];
              if (!last) last = coords;
              Browser.lastTouches[touch.identifier] = last;
              Browser.touches[touch.identifier] = coords;
            } 
            return;
          }
  
          var x = event.pageX - (scrollX + rect.left);
          var y = event.pageY - (scrollY + rect.top);
  
          // the canvas might be CSS-scaled compared to its backbuffer;
          // SDL-using content will want mouse coordinates in terms
          // of backbuffer units.
          x = x * (cw / rect.width);
          y = y * (ch / rect.height);
  
          Browser.mouseMovementX = x - Browser.mouseX;
          Browser.mouseMovementY = y - Browser.mouseY;
          Browser.mouseX = x;
          Browser.mouseY = y;
        }
      },asyncLoad:function (url, onload, onerror, noRunDep) {
        var dep = !noRunDep ? getUniqueRunDependency('al ' + url) : '';
        Module['readAsync'](url, function(arrayBuffer) {
          assert(arrayBuffer, 'Loading data file "' + url + '" failed (no arrayBuffer).');
          onload(new Uint8Array(arrayBuffer));
          if (dep) removeRunDependency(dep);
        }, function(event) {
          if (onerror) {
            onerror();
          } else {
            throw 'Loading data file "' + url + '" failed.';
          }
        });
        if (dep) addRunDependency(dep);
      },resizeListeners:[],updateResizeListeners:function () {
        var canvas = Module['canvas'];
        Browser.resizeListeners.forEach(function(listener) {
          listener(canvas.width, canvas.height);
        });
      },setCanvasSize:function (width, height, noUpdates) {
        var canvas = Module['canvas'];
        Browser.updateCanvasDimensions(canvas, width, height);
        if (!noUpdates) Browser.updateResizeListeners();
      },windowedWidth:0,windowedHeight:0,setFullscreenCanvasSize:function () {
        // check if SDL is available   
        if (typeof SDL != "undefined") {
        	var flags = HEAPU32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)];
        	flags = flags | 0x00800000; // set SDL_FULLSCREEN flag
        	HEAP32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)]=flags
        }
        Browser.updateResizeListeners();
      },setWindowedCanvasSize:function () {
        // check if SDL is available       
        if (typeof SDL != "undefined") {
        	var flags = HEAPU32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)];
        	flags = flags & ~0x00800000; // clear SDL_FULLSCREEN flag
        	HEAP32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)]=flags
        }
        Browser.updateResizeListeners();
      },updateCanvasDimensions:function (canvas, wNative, hNative) {
        if (wNative && hNative) {
          canvas.widthNative = wNative;
          canvas.heightNative = hNative;
        } else {
          wNative = canvas.widthNative;
          hNative = canvas.heightNative;
        }
        var w = wNative;
        var h = hNative;
        if (Module['forcedAspectRatio'] && Module['forcedAspectRatio'] > 0) {
          if (w/h < Module['forcedAspectRatio']) {
            w = Math.round(h * Module['forcedAspectRatio']);
          } else {
            h = Math.round(w / Module['forcedAspectRatio']);
          }
        }
        if (((document['fullscreenElement'] || document['mozFullScreenElement'] ||
             document['msFullscreenElement'] || document['webkitFullscreenElement'] ||
             document['webkitCurrentFullScreenElement']) === canvas.parentNode) && (typeof screen != 'undefined')) {
           var factor = Math.min(screen.width / w, screen.height / h);
           w = Math.round(w * factor);
           h = Math.round(h * factor);
        }
        if (Browser.resizeCanvas) {
          if (canvas.width  != w) canvas.width  = w;
          if (canvas.height != h) canvas.height = h;
          if (typeof canvas.style != 'undefined') {
            canvas.style.removeProperty( "width");
            canvas.style.removeProperty("height");
          }
        } else {
          if (canvas.width  != wNative) canvas.width  = wNative;
          if (canvas.height != hNative) canvas.height = hNative;
          if (typeof canvas.style != 'undefined') {
            if (w != wNative || h != hNative) {
              canvas.style.setProperty( "width", w + "px", "important");
              canvas.style.setProperty("height", h + "px", "important");
            } else {
              canvas.style.removeProperty( "width");
              canvas.style.removeProperty("height");
            }
          }
        }
      },wgetRequests:{},nextWgetRequestHandle:0,getNextWgetRequestHandle:function () {
        var handle = Browser.nextWgetRequestHandle;
        Browser.nextWgetRequestHandle++;
        return handle;
      }};function _emscripten_pause_main_loop() {
      Browser.mainLoop.pause();
    }

  function _pthread_mutexattr_settype() {}

  function _abort() {
      Module['abort']();
    }

  function _pthread_cond_destroy() { return 0; }

  function _pthread_mutex_destroy() {}

  
  function _free() {
  }
  Module["_free"] = _free;function ___cxa_free_exception(ptr) {
      try {
        return _free(ptr);
      } catch(e) { // XXX FIXME
        Module.printErr('exception during cxa_free_exception: ' + e);
      }
    }

  var _llvm_cos_f32=Math_cos;

  function ___lock() {}

  function ___unlock() {}

  var _llvm_ceil_f32=Math_ceil;

  function _pthread_mutexattr_init() {}

  function _pthread_getspecific(key) {
      return PTHREAD_SPECIFIC[key] || 0;
    }

  function _pthread_key_delete(key) {
      if (key in PTHREAD_SPECIFIC) {
        delete PTHREAD_SPECIFIC[key];
        return 0;
      }
      return ERRNO_CODES.EINVAL;
    }

  function _pthread_setspecific(key, value) {
      if (!(key in PTHREAD_SPECIFIC)) {
        return ERRNO_CODES.EINVAL;
      }
      PTHREAD_SPECIFIC[key] = value;
      return 0;
    }

   
  Module["_memmove"] = _memmove;

  
  function _malloc(bytes) {
      /* Over-allocate to make sure it is byte-aligned by 8.
       * This will leak memory, but this is only the dummy
       * implementation (replaced by dlmalloc normally) so
       * not an issue.
       */
      var ptr = Runtime.dynamicAlloc(bytes + 8);
      return (ptr+8) & 0xFFFFFFF8;
    }
  Module["_malloc"] = _malloc;function ___cxa_allocate_exception(size) {
      return _malloc(size);
    }

  function _pthread_condattr_init() { return 0; }

  var _llvm_ctlz_i32=true;


  
  
  function __emscripten_traverse_stack(args) {
      if (!args || !args.callee || !args.callee.name) {
        return [null, '', ''];
      }
  
      var funstr = args.callee.toString();
      var funcname = args.callee.name;
      var str = '(';
      var first = true;
      for(i in args) {
        var a = args[i];
        if (!first) {
          str += ", ";
        }
        first = false;
        if (typeof a === 'number' || typeof a === 'string') {
          str += a;
        } else {
          str += '(' + typeof a + ')';
        }
      }
      str += ')';
      var caller = args.callee.caller;
      args = caller ? caller.arguments : [];
      if (first)
        str = '';
      return [args, funcname, str];
    }function _emscripten_get_callstack_js(flags) {
      var callstack = jsStackTrace();
  
      // Find the symbols in the callstack that corresponds to the functions that report callstack information, and remove everyhing up to these from the output.
      var iThisFunc = callstack.lastIndexOf('_emscripten_log');
      var iThisFunc2 = callstack.lastIndexOf('_emscripten_get_callstack');
      var iNextLine = callstack.indexOf('\n', Math.max(iThisFunc, iThisFunc2))+1;
      callstack = callstack.slice(iNextLine);
  
      // If user requested to see the original source stack, but no source map information is available, just fall back to showing the JS stack.
      if (flags & 8/*EM_LOG_C_STACK*/ && typeof emscripten_source_map === 'undefined') {
        Runtime.warnOnce('Source map information is not available, emscripten_log with EM_LOG_C_STACK will be ignored. Build with "--pre-js $EMSCRIPTEN/src/emscripten-source-map.min.js" linker flag to add source map loading to code.');
        flags ^= 8/*EM_LOG_C_STACK*/;
        flags |= 16/*EM_LOG_JS_STACK*/;
      }
  
      var stack_args = null;
      if (flags & 128 /*EM_LOG_FUNC_PARAMS*/) {
        // To get the actual parameters to the functions, traverse the stack via the unfortunately deprecated 'arguments.callee' method, if it works:
        var stack_args = __emscripten_traverse_stack(arguments);
        while (stack_args[1].indexOf('_emscripten_') >= 0)
          stack_args = __emscripten_traverse_stack(stack_args[0]);
      }
      
      // Process all lines:
      lines = callstack.split('\n');
      callstack = '';
      var newFirefoxRe = new RegExp('\\s*(.*?)@(.*?):([0-9]+):([0-9]+)'); // New FF30 with column info: extract components of form '       Object._main@http://server.com:4324:12'
      var firefoxRe = new RegExp('\\s*(.*?)@(.*):(.*)(:(.*))?'); // Old FF without column info: extract components of form '       Object._main@http://server.com:4324'
      var chromeRe = new RegExp('\\s*at (.*?) \\\((.*):(.*):(.*)\\\)'); // Extract components of form '    at Object._main (http://server.com/file.html:4324:12)'
      
      for(l in lines) {
        var line = lines[l];
  
        var jsSymbolName = '';
        var file = '';
        var lineno = 0;
        var column = 0;
  
        var parts = chromeRe.exec(line);
        if (parts && parts.length == 5) {
          jsSymbolName = parts[1];
          file = parts[2];
          lineno = parts[3];
          column = parts[4];
        } else {
          parts = newFirefoxRe.exec(line);
          if (!parts) parts = firefoxRe.exec(line);
          if (parts && parts.length >= 4) {
            jsSymbolName = parts[1];
            file = parts[2];
            lineno = parts[3];
            column = parts[4]|0; // Old Firefox doesn't carry column information, but in new FF30, it is present. See https://bugzilla.mozilla.org/show_bug.cgi?id=762556
          } else {
            // Was not able to extract this line for demangling/sourcemapping purposes. Output it as-is.
            callstack += line + '\n';
            continue;
          }
        }
  
        // Try to demangle the symbol, but fall back to showing the original JS symbol name if not available.
        var cSymbolName = (flags & 32/*EM_LOG_DEMANGLE*/) ? demangle(jsSymbolName) : jsSymbolName;
        if (!cSymbolName) {
          cSymbolName = jsSymbolName;
        }
  
        var haveSourceMap = false;
  
        if (flags & 8/*EM_LOG_C_STACK*/) {
          var orig = emscripten_source_map.originalPositionFor({line: lineno, column: column});
          haveSourceMap = (orig && orig.source);
          if (haveSourceMap) {
            if (flags & 64/*EM_LOG_NO_PATHS*/) {
              orig.source = orig.source.substring(orig.source.replace(/\\/g, "/").lastIndexOf('/')+1);
            }
            callstack += '    at ' + cSymbolName + ' (' + orig.source + ':' + orig.line + ':' + orig.column + ')\n';
          }
        }
        if ((flags & 16/*EM_LOG_JS_STACK*/) || !haveSourceMap) {
          if (flags & 64/*EM_LOG_NO_PATHS*/) {
            file = file.substring(file.replace(/\\/g, "/").lastIndexOf('/')+1);
          }
          callstack += (haveSourceMap ? ('     = '+jsSymbolName) : ('    at '+cSymbolName)) + ' (' + file + ':' + lineno + ':' + column + ')\n';
        }
        
        // If we are still keeping track with the callstack by traversing via 'arguments.callee', print the function parameters as well.
        if (flags & 128 /*EM_LOG_FUNC_PARAMS*/ && stack_args[0]) {
          if (stack_args[1] == jsSymbolName && stack_args[2].length > 0) {
            callstack = callstack.replace(/\s+$/, '');
            callstack += ' with values: ' + stack_args[1] + stack_args[2] + '\n';
          }
          stack_args = __emscripten_traverse_stack(stack_args[0]);
        }
      }
      // Trim extra whitespace at the end of the output.
      callstack = callstack.replace(/\s+$/, '');
      return callstack;
    }function __Unwind_Backtrace(func, arg) {
      var trace = _emscripten_get_callstack_js();
      var parts = trace.split('\n');
      for (var i = 0; i < parts.length; i++) {
        var ret = Runtime.dynCall('iii', [0, arg]);
        if (ret !== 0) return;
      }
    }

  function _pthread_rwlock_rdlock() { return 0; }

  function _pthread_condattr_setclock() { return 0; }

  function ___syscall3(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // read
      var stream = SYSCALLS.getStreamFromFD(), buf = SYSCALLS.get(), count = SYSCALLS.get();
      return FS.read(stream, HEAP8,buf, count);
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }

  function ___syscall5(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // open
      var pathname = SYSCALLS.getStr(), flags = SYSCALLS.get(), mode = SYSCALLS.get() // optional TODO
      var stream = FS.open(pathname, flags, mode);
      return stream.fd;
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }

  function _pthread_cond_init() { return 0; }

  function ___syscall6(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // close
      var stream = SYSCALLS.getStreamFromFD();
      FS.close(stream);
      return 0;
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }

  var _llvm_nacl_atomic_cmpxchg_i8=undefined;

   
  Module["___udivdi3"] = ___udivdi3;

  
   
  Module["___muldsi3"] = ___muldsi3; 
  Module["___muldi3"] = ___muldi3;

  var _llvm_sqrt_f32=Math_sqrt;

  function _llvm_trap() {
      abort('trap!');
    }

   
  Module["_pthread_self"] = _pthread_self;

  function ___syscall140(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // llseek
      var stream = SYSCALLS.getStreamFromFD(), offset_high = SYSCALLS.get(), offset_low = SYSCALLS.get(), result = SYSCALLS.get(), whence = SYSCALLS.get();
      var offset = offset_low;
      assert(offset_high === 0);
      FS.llseek(stream, offset, whence);
      HEAP32[((result)>>2)]=stream.position;
      if (stream.getdents && offset === 0 && whence === 0) stream.getdents = null; // reset readdir state
      return 0;
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }

  function ___syscall146(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // writev
      var stream = SYSCALLS.getStreamFromFD(), iov = SYSCALLS.get(), iovcnt = SYSCALLS.get();
      return SYSCALLS.doWritev(stream, iov, iovcnt);
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }

  var _llvm_nacl_atomic_cmpxchg_i32=undefined;
FS.staticInit();__ATINIT__.unshift(function() { if (!Module["noFSInit"] && !FS.init.initialized) FS.init() });__ATMAIN__.push(function() { FS.ignorePermissions = false });__ATEXIT__.push(function() { FS.quit() });Module["FS_createFolder"] = FS.createFolder;Module["FS_createPath"] = FS.createPath;Module["FS_createDataFile"] = FS.createDataFile;Module["FS_createPreloadedFile"] = FS.createPreloadedFile;Module["FS_createLazyFile"] = FS.createLazyFile;Module["FS_createLink"] = FS.createLink;Module["FS_createDevice"] = FS.createDevice;Module["FS_unlink"] = FS.unlink;;
__ATINIT__.unshift(function() { TTY.init() });__ATEXIT__.push(function() { TTY.shutdown() });;
if (ENVIRONMENT_IS_NODE) { var fs = require("fs"); var NODEJS_PATH = require("path"); NODEFS.staticInit(); };
___buildEnvironment(ENV);;
Module["requestFullScreen"] = function Module_requestFullScreen(lockPointer, resizeCanvas, vrDevice) { Module.printErr("Module.requestFullScreen is deprecated. Please call Module.requestFullscreen instead."); Module["requestFullScreen"] = Module["requestFullscreen"]; Browser.requestFullScreen(lockPointer, resizeCanvas, vrDevice) };
  Module["requestFullscreen"] = function Module_requestFullscreen(lockPointer, resizeCanvas, vrDevice) { Browser.requestFullscreen(lockPointer, resizeCanvas, vrDevice) };
  Module["requestAnimationFrame"] = function Module_requestAnimationFrame(func) { Browser.requestAnimationFrame(func) };
  Module["setCanvasSize"] = function Module_setCanvasSize(width, height, noUpdates) { Browser.setCanvasSize(width, height, noUpdates) };
  Module["pauseMainLoop"] = function Module_pauseMainLoop() { Browser.mainLoop.pause() };
  Module["resumeMainLoop"] = function Module_resumeMainLoop() { Browser.mainLoop.resume() };
  Module["getUserMedia"] = function Module_getUserMedia() { Browser.getUserMedia() }
  Module["createContext"] = function Module_createContext(canvas, useWebGL, setInModule, webGLContextAttributes) { return Browser.createContext(canvas, useWebGL, setInModule, webGLContextAttributes) };
if (ENVIRONMENT_IS_NODE) {
    _emscripten_get_now = function _emscripten_get_now_actual() {
      var t = process['hrtime']();
      return t[0] * 1e3 + t[1] / 1e6;
    };
  } else if (typeof dateNow !== 'undefined') {
    _emscripten_get_now = dateNow;
  } else if (typeof self === 'object' && self['performance'] && typeof self['performance']['now'] === 'function') {
    _emscripten_get_now = function() { return self['performance']['now'](); };
  } else if (typeof performance === 'object' && typeof performance['now'] === 'function') {
    _emscripten_get_now = function() { return performance['now'](); };
  } else {
    _emscripten_get_now = Date.now;
  };
DYNAMICTOP_PTR = allocate(1, "i32", ALLOC_STATIC);

STACK_BASE = STACKTOP = Runtime.alignMemory(STATICTOP);

STACK_MAX = STACK_BASE + TOTAL_STACK;

DYNAMIC_BASE = Runtime.alignMemory(STACK_MAX);

HEAP32[DYNAMICTOP_PTR>>2] = DYNAMIC_BASE;

staticSealed = true; // seal the static portion of memory

assert(DYNAMIC_BASE < TOTAL_MEMORY, "TOTAL_MEMORY not big enough for stack");



function nullFunc_iiii(x) { Module["printErr"]("Invalid function pointer called with signature 'iiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_viiiiii(x) { Module["printErr"]("Invalid function pointer called with signature 'viiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_viiiii(x) { Module["printErr"]("Invalid function pointer called with signature 'viiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_viiiiiii(x) { Module["printErr"]("Invalid function pointer called with signature 'viiiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_iiiiiiiiiid(x) { Module["printErr"]("Invalid function pointer called with signature 'iiiiiiiiiid'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_i(x) { Module["printErr"]("Invalid function pointer called with signature 'i'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_vi(x) { Module["printErr"]("Invalid function pointer called with signature 'vi'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_vii(x) { Module["printErr"]("Invalid function pointer called with signature 'vii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_ii(x) { Module["printErr"]("Invalid function pointer called with signature 'ii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_viiid(x) { Module["printErr"]("Invalid function pointer called with signature 'viiid'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_viii(x) { Module["printErr"]("Invalid function pointer called with signature 'viii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_iidd(x) { Module["printErr"]("Invalid function pointer called with signature 'iidd'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_v(x) { Module["printErr"]("Invalid function pointer called with signature 'v'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_viiiiiiiii(x) { Module["printErr"]("Invalid function pointer called with signature 'viiiiiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_viiii(x) { Module["printErr"]("Invalid function pointer called with signature 'viiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_iii(x) { Module["printErr"]("Invalid function pointer called with signature 'iii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_diiii(x) { Module["printErr"]("Invalid function pointer called with signature 'diiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_viiidd(x) { Module["printErr"]("Invalid function pointer called with signature 'viiidd'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_iiiiii(x) { Module["printErr"]("Invalid function pointer called with signature 'iiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function invoke_iiii(index,a1,a2,a3) {
  try {
    return Module["dynCall_iiii"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiii(index,a1,a2,a3,a4,a5,a6) {
  try {
    Module["dynCall_viiiiii"](index,a1,a2,a3,a4,a5,a6);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiii(index,a1,a2,a3,a4,a5) {
  try {
    Module["dynCall_viiiii"](index,a1,a2,a3,a4,a5);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiiii(index,a1,a2,a3,a4,a5,a6,a7) {
  try {
    Module["dynCall_viiiiiii"](index,a1,a2,a3,a4,a5,a6,a7);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiiiiiiiiid(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10) {
  try {
    return Module["dynCall_iiiiiiiiiid"](index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_i(index) {
  try {
    return Module["dynCall_i"](index);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_vi(index,a1) {
  try {
    Module["dynCall_vi"](index,a1);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_vii(index,a1,a2) {
  try {
    Module["dynCall_vii"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_ii(index,a1) {
  try {
    return Module["dynCall_ii"](index,a1);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiid(index,a1,a2,a3,a4) {
  try {
    Module["dynCall_viiid"](index,a1,a2,a3,a4);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viii(index,a1,a2,a3) {
  try {
    Module["dynCall_viii"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iidd(index,a1,a2,a3) {
  try {
    return Module["dynCall_iidd"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_v(index) {
  try {
    Module["dynCall_v"](index);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9) {
  try {
    Module["dynCall_viiiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8,a9);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiii(index,a1,a2,a3,a4) {
  try {
    Module["dynCall_viiii"](index,a1,a2,a3,a4);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iii(index,a1,a2) {
  try {
    return Module["dynCall_iii"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_diiii(index,a1,a2,a3,a4) {
  try {
    return Module["dynCall_diiii"](index,a1,a2,a3,a4);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiidd(index,a1,a2,a3,a4,a5) {
  try {
    Module["dynCall_viiidd"](index,a1,a2,a3,a4,a5);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiiiii(index,a1,a2,a3,a4,a5) {
  try {
    return Module["dynCall_iiiiii"](index,a1,a2,a3,a4,a5);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

Module.asmGlobalArg = { "Math": Math, "Int8Array": Int8Array, "Int16Array": Int16Array, "Int32Array": Int32Array, "Uint8Array": Uint8Array, "Uint16Array": Uint16Array, "Uint32Array": Uint32Array, "Float32Array": Float32Array, "Float64Array": Float64Array, "NaN": NaN, "Infinity": Infinity, "SIMD": SIMD };

Module.asmLibraryArg = { "abort": abort, "assert": assert, "enlargeMemory": enlargeMemory, "getTotalMemory": getTotalMemory, "abortOnCannotGrowMemory": abortOnCannotGrowMemory, "abortStackOverflow": abortStackOverflow, "nullFunc_iiii": nullFunc_iiii, "nullFunc_viiiiii": nullFunc_viiiiii, "nullFunc_viiiii": nullFunc_viiiii, "nullFunc_viiiiiii": nullFunc_viiiiiii, "nullFunc_iiiiiiiiiid": nullFunc_iiiiiiiiiid, "nullFunc_i": nullFunc_i, "nullFunc_vi": nullFunc_vi, "nullFunc_vii": nullFunc_vii, "nullFunc_ii": nullFunc_ii, "nullFunc_viiid": nullFunc_viiid, "nullFunc_viii": nullFunc_viii, "nullFunc_iidd": nullFunc_iidd, "nullFunc_v": nullFunc_v, "nullFunc_viiiiiiiii": nullFunc_viiiiiiiii, "nullFunc_viiii": nullFunc_viiii, "nullFunc_iii": nullFunc_iii, "nullFunc_diiii": nullFunc_diiii, "nullFunc_viiidd": nullFunc_viiidd, "nullFunc_iiiiii": nullFunc_iiiiii, "invoke_iiii": invoke_iiii, "invoke_viiiiii": invoke_viiiiii, "invoke_viiiii": invoke_viiiii, "invoke_viiiiiii": invoke_viiiiiii, "invoke_iiiiiiiiiid": invoke_iiiiiiiiiid, "invoke_i": invoke_i, "invoke_vi": invoke_vi, "invoke_vii": invoke_vii, "invoke_ii": invoke_ii, "invoke_viiid": invoke_viiid, "invoke_viii": invoke_viii, "invoke_iidd": invoke_iidd, "invoke_v": invoke_v, "invoke_viiiiiiiii": invoke_viiiiiiiii, "invoke_viiii": invoke_viiii, "invoke_iii": invoke_iii, "invoke_diiii": invoke_diiii, "invoke_viiidd": invoke_viiidd, "invoke_iiiiii": invoke_iiiiii, "_pthread_cleanup_pop": _pthread_cleanup_pop, "_pthread_cond_wait": _pthread_cond_wait, "_pthread_mutex_init": _pthread_mutex_init, "_llvm_floor_f32": _llvm_floor_f32, "___syscall54": ___syscall54, "__Unwind_FindEnclosingFunction": __Unwind_FindEnclosingFunction, "_emscripten_set_main_loop_timing": _emscripten_set_main_loop_timing, "___gxx_personality_v0": ___gxx_personality_v0, "___cxa_free_exception": ___cxa_free_exception, "___cxa_allocate_exception": ___cxa_allocate_exception, "___cxa_find_matching_catch": ___cxa_find_matching_catch, "___buildEnvironment": ___buildEnvironment, "_emscripten_asm_const_ii": _emscripten_asm_const_ii, "_pthread_cond_init": _pthread_cond_init, "__Unwind_GetIPInfo": __Unwind_GetIPInfo, "_emscripten_asm_const_i": _emscripten_asm_const_i, "_pthread_mutexattr_destroy": _pthread_mutexattr_destroy, "_pthread_cond_signal": _pthread_cond_signal, "___setErrNo": ___setErrNo, "_pthread_rwlock_unlock": _pthread_rwlock_unlock, "_pthread_key_delete": _pthread_key_delete, "___cxa_find_matching_catch_2": ___cxa_find_matching_catch_2, "_emscripten_memcpy_big": _emscripten_memcpy_big, "_llvm_trunc_f32": _llvm_trunc_f32, "___resumeException": ___resumeException, "__ZSt18uncaught_exceptionv": __ZSt18uncaught_exceptionv, "_pthread_condattr_setclock": _pthread_condattr_setclock, "_pthread_getspecific": _pthread_getspecific, "_llvm_sin_f32": _llvm_sin_f32, "___cxa_find_matching_catch_3": ___cxa_find_matching_catch_3, "_pthread_rwlock_rdlock": _pthread_rwlock_rdlock, "__emscripten_traverse_stack": __emscripten_traverse_stack, "_pthread_mutex_destroy": _pthread_mutex_destroy, "_llvm_fabs_f32": _llvm_fabs_f32, "_emscripten_pause_main_loop": _emscripten_pause_main_loop, "_pthread_mutexattr_init": _pthread_mutexattr_init, "_llvm_ceil_f32": _llvm_ceil_f32, "_pthread_mutexattr_settype": _pthread_mutexattr_settype, "_pthread_condattr_init": _pthread_condattr_init, "_getenv": _getenv, "_pthread_condattr_destroy": _pthread_condattr_destroy, "_pthread_key_create": _pthread_key_create, "___unlock": ___unlock, "___syscall140": ___syscall140, "_dladdr": _dladdr, "_emscripten_set_main_loop": _emscripten_set_main_loop, "_emscripten_asm_const_iii": _emscripten_asm_const_iii, "___syscall5": ___syscall5, "_emscripten_asm_const_iiiiii": _emscripten_asm_const_iiiiii, "_llvm_sqrt_f32": _llvm_sqrt_f32, "_pthread_setspecific": _pthread_setspecific, "_emscripten_asm_const_iiii": _emscripten_asm_const_iiii, "_llvm_cos_f32": _llvm_cos_f32, "___syscall3": ___syscall3, "___lock": ___lock, "___syscall6": ___syscall6, "_pthread_cleanup_push": _pthread_cleanup_push, "___syscall4": ___syscall4, "_emscripten_get_now": _emscripten_get_now, "___cxa_throw": ___cxa_throw, "_pthread_cond_destroy": _pthread_cond_destroy, "_llvm_trap": _llvm_trap, "_abort": _abort, "__Unwind_Backtrace": __Unwind_Backtrace, "___syscall146": ___syscall146, "_emscripten_get_callstack_js": _emscripten_get_callstack_js, "STACKTOP": STACKTOP, "STACK_MAX": STACK_MAX, "DYNAMICTOP_PTR": DYNAMICTOP_PTR, "tempDoublePtr": tempDoublePtr, "ABORT": ABORT, "cttz_i8": cttz_i8 };
// EMSCRIPTEN_START_ASM
var asm = (function(global, env, buffer) {
  'almost asm';
  
  
  var HEAP8 = new global.Int8Array(buffer);
  var HEAP16 = new global.Int16Array(buffer);
  var HEAP32 = new global.Int32Array(buffer);
  var HEAPU8 = new global.Uint8Array(buffer);
  var HEAPU16 = new global.Uint16Array(buffer);
  var HEAPU32 = new global.Uint32Array(buffer);
  var HEAPF32 = new global.Float32Array(buffer);
  var HEAPF64 = new global.Float64Array(buffer);


  var STACKTOP=env.STACKTOP|0;
  var STACK_MAX=env.STACK_MAX|0;
  var DYNAMICTOP_PTR=env.DYNAMICTOP_PTR|0;
  var tempDoublePtr=env.tempDoublePtr|0;
  var ABORT=env.ABORT|0;
  var cttz_i8=env.cttz_i8|0;

  var __THREW__ = 0;
  var threwValue = 0;
  var setjmpId = 0;
  var undef = 0;
  var nan = global.NaN, inf = global.Infinity;
  var tempInt = 0, tempBigInt = 0, tempBigIntP = 0, tempBigIntS = 0, tempBigIntR = 0.0, tempBigIntI = 0, tempBigIntD = 0, tempValue = 0, tempDouble = 0.0;
  var tempRet0 = 0;

  var Math_floor=global.Math.floor;
  var Math_abs=global.Math.abs;
  var Math_sqrt=global.Math.sqrt;
  var Math_pow=global.Math.pow;
  var Math_cos=global.Math.cos;
  var Math_sin=global.Math.sin;
  var Math_tan=global.Math.tan;
  var Math_acos=global.Math.acos;
  var Math_asin=global.Math.asin;
  var Math_atan=global.Math.atan;
  var Math_atan2=global.Math.atan2;
  var Math_exp=global.Math.exp;
  var Math_log=global.Math.log;
  var Math_ceil=global.Math.ceil;
  var Math_imul=global.Math.imul;
  var Math_min=global.Math.min;
  var Math_max=global.Math.max;
  var Math_clz32=global.Math.clz32;
  var Math_fround=global.Math.fround;
  var abort=env.abort;
  var assert=env.assert;
  var enlargeMemory=env.enlargeMemory;
  var getTotalMemory=env.getTotalMemory;
  var abortOnCannotGrowMemory=env.abortOnCannotGrowMemory;
  var abortStackOverflow=env.abortStackOverflow;
  var nullFunc_iiii=env.nullFunc_iiii;
  var nullFunc_viiiiii=env.nullFunc_viiiiii;
  var nullFunc_viiiii=env.nullFunc_viiiii;
  var nullFunc_viiiiiii=env.nullFunc_viiiiiii;
  var nullFunc_iiiiiiiiiid=env.nullFunc_iiiiiiiiiid;
  var nullFunc_i=env.nullFunc_i;
  var nullFunc_vi=env.nullFunc_vi;
  var nullFunc_vii=env.nullFunc_vii;
  var nullFunc_ii=env.nullFunc_ii;
  var nullFunc_viiid=env.nullFunc_viiid;
  var nullFunc_viii=env.nullFunc_viii;
  var nullFunc_iidd=env.nullFunc_iidd;
  var nullFunc_v=env.nullFunc_v;
  var nullFunc_viiiiiiiii=env.nullFunc_viiiiiiiii;
  var nullFunc_viiii=env.nullFunc_viiii;
  var nullFunc_iii=env.nullFunc_iii;
  var nullFunc_diiii=env.nullFunc_diiii;
  var nullFunc_viiidd=env.nullFunc_viiidd;
  var nullFunc_iiiiii=env.nullFunc_iiiiii;
  var invoke_iiii=env.invoke_iiii;
  var invoke_viiiiii=env.invoke_viiiiii;
  var invoke_viiiii=env.invoke_viiiii;
  var invoke_viiiiiii=env.invoke_viiiiiii;
  var invoke_iiiiiiiiiid=env.invoke_iiiiiiiiiid;
  var invoke_i=env.invoke_i;
  var invoke_vi=env.invoke_vi;
  var invoke_vii=env.invoke_vii;
  var invoke_ii=env.invoke_ii;
  var invoke_viiid=env.invoke_viiid;
  var invoke_viii=env.invoke_viii;
  var invoke_iidd=env.invoke_iidd;
  var invoke_v=env.invoke_v;
  var invoke_viiiiiiiii=env.invoke_viiiiiiiii;
  var invoke_viiii=env.invoke_viiii;
  var invoke_iii=env.invoke_iii;
  var invoke_diiii=env.invoke_diiii;
  var invoke_viiidd=env.invoke_viiidd;
  var invoke_iiiiii=env.invoke_iiiiii;
  var _pthread_cleanup_pop=env._pthread_cleanup_pop;
  var _pthread_cond_wait=env._pthread_cond_wait;
  var _pthread_mutex_init=env._pthread_mutex_init;
  var _llvm_floor_f32=env._llvm_floor_f32;
  var ___syscall54=env.___syscall54;
  var __Unwind_FindEnclosingFunction=env.__Unwind_FindEnclosingFunction;
  var _emscripten_set_main_loop_timing=env._emscripten_set_main_loop_timing;
  var ___gxx_personality_v0=env.___gxx_personality_v0;
  var ___cxa_free_exception=env.___cxa_free_exception;
  var ___cxa_allocate_exception=env.___cxa_allocate_exception;
  var ___cxa_find_matching_catch=env.___cxa_find_matching_catch;
  var ___buildEnvironment=env.___buildEnvironment;
  var _emscripten_asm_const_ii=env._emscripten_asm_const_ii;
  var _pthread_cond_init=env._pthread_cond_init;
  var __Unwind_GetIPInfo=env.__Unwind_GetIPInfo;
  var _emscripten_asm_const_i=env._emscripten_asm_const_i;
  var _pthread_mutexattr_destroy=env._pthread_mutexattr_destroy;
  var _pthread_cond_signal=env._pthread_cond_signal;
  var ___setErrNo=env.___setErrNo;
  var _pthread_rwlock_unlock=env._pthread_rwlock_unlock;
  var _pthread_key_delete=env._pthread_key_delete;
  var ___cxa_find_matching_catch_2=env.___cxa_find_matching_catch_2;
  var _emscripten_memcpy_big=env._emscripten_memcpy_big;
  var _llvm_trunc_f32=env._llvm_trunc_f32;
  var ___resumeException=env.___resumeException;
  var __ZSt18uncaught_exceptionv=env.__ZSt18uncaught_exceptionv;
  var _pthread_condattr_setclock=env._pthread_condattr_setclock;
  var _pthread_getspecific=env._pthread_getspecific;
  var _llvm_sin_f32=env._llvm_sin_f32;
  var ___cxa_find_matching_catch_3=env.___cxa_find_matching_catch_3;
  var _pthread_rwlock_rdlock=env._pthread_rwlock_rdlock;
  var __emscripten_traverse_stack=env.__emscripten_traverse_stack;
  var _pthread_mutex_destroy=env._pthread_mutex_destroy;
  var _llvm_fabs_f32=env._llvm_fabs_f32;
  var _emscripten_pause_main_loop=env._emscripten_pause_main_loop;
  var _pthread_mutexattr_init=env._pthread_mutexattr_init;
  var _llvm_ceil_f32=env._llvm_ceil_f32;
  var _pthread_mutexattr_settype=env._pthread_mutexattr_settype;
  var _pthread_condattr_init=env._pthread_condattr_init;
  var _getenv=env._getenv;
  var _pthread_condattr_destroy=env._pthread_condattr_destroy;
  var _pthread_key_create=env._pthread_key_create;
  var ___unlock=env.___unlock;
  var ___syscall140=env.___syscall140;
  var _dladdr=env._dladdr;
  var _emscripten_set_main_loop=env._emscripten_set_main_loop;
  var _emscripten_asm_const_iii=env._emscripten_asm_const_iii;
  var ___syscall5=env.___syscall5;
  var _emscripten_asm_const_iiiiii=env._emscripten_asm_const_iiiiii;
  var _llvm_sqrt_f32=env._llvm_sqrt_f32;
  var _pthread_setspecific=env._pthread_setspecific;
  var _emscripten_asm_const_iiii=env._emscripten_asm_const_iiii;
  var _llvm_cos_f32=env._llvm_cos_f32;
  var ___syscall3=env.___syscall3;
  var ___lock=env.___lock;
  var ___syscall6=env.___syscall6;
  var _pthread_cleanup_push=env._pthread_cleanup_push;
  var ___syscall4=env.___syscall4;
  var _emscripten_get_now=env._emscripten_get_now;
  var ___cxa_throw=env.___cxa_throw;
  var _pthread_cond_destroy=env._pthread_cond_destroy;
  var _llvm_trap=env._llvm_trap;
  var _abort=env._abort;
  var __Unwind_Backtrace=env.__Unwind_Backtrace;
  var ___syscall146=env.___syscall146;
  var _emscripten_get_callstack_js=env._emscripten_get_callstack_js;
  var SIMD_Float32x4=global.SIMD.Float32x4;
  var SIMD_Int32x4=global.SIMD.Int32x4;
  var SIMD_Int32x4_splat=SIMD_Int32x4.splat;
  var SIMD_Int32x4_check=SIMD_Int32x4.check;
  var SIMD_Int32x4_extractLane=SIMD_Int32x4.extractLane;
  var SIMD_Int32x4_replaceLane=SIMD_Int32x4.replaceLane;
  var SIMD_Int32x4_add=SIMD_Int32x4.add;
  var SIMD_Int32x4_sub=SIMD_Int32x4.sub;
  var SIMD_Int32x4_neg=SIMD_Int32x4.neg;
  var SIMD_Int32x4_mul=SIMD_Int32x4.mul;
  var SIMD_Int32x4_equal=SIMD_Int32x4.equal;
  var SIMD_Int32x4_lessThan=SIMD_Int32x4.lessThan;
  var SIMD_Int32x4_greaterThan=SIMD_Int32x4.greaterThan;
  var SIMD_Int32x4_notEqual=SIMD_Int32x4.notEqual;
  var SIMD_Int32x4_lessThanOrEqual=SIMD_Int32x4.lessThanOrEqual;
  var SIMD_Int32x4_greaterThanOrEqual=SIMD_Int32x4.greaterThanOrEqual;
  var SIMD_Int32x4_select=SIMD_Int32x4.select;
  var SIMD_Int32x4_swizzle=SIMD_Int32x4.swizzle;
  var SIMD_Int32x4_shuffle=SIMD_Int32x4.shuffle;
  var SIMD_Int32x4_load=SIMD_Int32x4.load;
  var SIMD_Int32x4_store=SIMD_Int32x4.store;
  var SIMD_Int32x4_load1=SIMD_Int32x4.load1;
  var SIMD_Int32x4_store1=SIMD_Int32x4.store1;
  var SIMD_Int32x4_load2=SIMD_Int32x4.load2;
  var SIMD_Int32x4_store2=SIMD_Int32x4.store2;
  var SIMD_Int32x4_fromFloat32x4Bits=SIMD_Int32x4.fromFloat32x4Bits;
  var SIMD_Int32x4_and=SIMD_Int32x4.and;
  var SIMD_Int32x4_xor=SIMD_Int32x4.xor;
  var SIMD_Int32x4_or=SIMD_Int32x4.or;
  var SIMD_Int32x4_not=SIMD_Int32x4.not;
  var SIMD_Int32x4_shiftLeftByScalar=SIMD_Int32x4.shiftLeftByScalar;
  var SIMD_Int32x4_shiftRightByScalar=SIMD_Int32x4.shiftRightByScalar;
  var SIMD_Float32x4_splat=SIMD_Float32x4.splat;
  var SIMD_Float32x4_check=SIMD_Float32x4.check;
  var SIMD_Float32x4_extractLane=SIMD_Float32x4.extractLane;
  var SIMD_Float32x4_replaceLane=SIMD_Float32x4.replaceLane;
  var SIMD_Float32x4_add=SIMD_Float32x4.add;
  var SIMD_Float32x4_sub=SIMD_Float32x4.sub;
  var SIMD_Float32x4_neg=SIMD_Float32x4.neg;
  var SIMD_Float32x4_mul=SIMD_Float32x4.mul;
  var SIMD_Float32x4_equal=SIMD_Float32x4.equal;
  var SIMD_Float32x4_lessThan=SIMD_Float32x4.lessThan;
  var SIMD_Float32x4_greaterThan=SIMD_Float32x4.greaterThan;
  var SIMD_Float32x4_notEqual=SIMD_Float32x4.notEqual;
  var SIMD_Float32x4_lessThanOrEqual=SIMD_Float32x4.lessThanOrEqual;
  var SIMD_Float32x4_greaterThanOrEqual=SIMD_Float32x4.greaterThanOrEqual;
  var SIMD_Float32x4_select=SIMD_Float32x4.select;
  var SIMD_Float32x4_swizzle=SIMD_Float32x4.swizzle;
  var SIMD_Float32x4_shuffle=SIMD_Float32x4.shuffle;
  var SIMD_Float32x4_load=SIMD_Float32x4.load;
  var SIMD_Float32x4_store=SIMD_Float32x4.store;
  var SIMD_Float32x4_load1=SIMD_Float32x4.load1;
  var SIMD_Float32x4_store1=SIMD_Float32x4.store1;
  var SIMD_Float32x4_load2=SIMD_Float32x4.load2;
  var SIMD_Float32x4_store2=SIMD_Float32x4.store2;
  var SIMD_Float32x4_fromInt32x4Bits=SIMD_Float32x4.fromInt32x4Bits;
  var SIMD_Float32x4_div=SIMD_Float32x4.div;
  var SIMD_Float32x4_min=SIMD_Float32x4.min;
  var SIMD_Float32x4_max=SIMD_Float32x4.max;
  var SIMD_Float32x4_minNum=SIMD_Float32x4.minNum;
  var SIMD_Float32x4_maxNum=SIMD_Float32x4.maxNum;
  var SIMD_Float32x4_sqrt=SIMD_Float32x4.sqrt;
  var SIMD_Float32x4_abs=SIMD_Float32x4.abs;
  var SIMD_Float32x4_reciprocalApproximation=SIMD_Float32x4.reciprocalApproximation;
  var SIMD_Float32x4_reciprocalSqrtApproximation=SIMD_Float32x4.reciprocalSqrtApproximation;
  var SIMD_Int32x4_fromFloat32x4=SIMD_Int32x4.fromFloat32x4;
  var SIMD_Float32x4_fromInt32x4=SIMD_Float32x4.fromInt32x4;
  var tempFloat = Math_fround(0);
  const f0 = Math_fround(0);

// EMSCRIPTEN_START_FUNCS

function stackAlloc(size) {
  size = size|0;
  var ret = 0;
  ret = STACKTOP;
  STACKTOP = (STACKTOP + size)|0;
  STACKTOP = (STACKTOP + 15)&-16;
  if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(size|0);

  return ret|0;
}
function stackSave() {
  return STACKTOP|0;
}
function stackRestore(top) {
  top = top|0;
  STACKTOP = top;
}
function establishStackSpace(stackBase, stackMax) {
  stackBase = stackBase|0;
  stackMax = stackMax|0;
  STACKTOP = stackBase;
  STACK_MAX = stackMax;
}

function setThrew(threw, value) {
  threw = threw|0;
  value = value|0;
  if ((__THREW__|0) == 0) {
    __THREW__ = threw;
    threwValue = value;
  }
}

function setTempRet0(value) {
  value = value|0;
  tempRet0 = value;
}
function getTempRet0() {
  return tempRet0|0;
}

function __ZN100__LT_ncollide_pipeline__narrow_phase__default_narrow_phase__DefaultNarrowPhase_LT_P_C__u20_M_GT__GT_3new17hba0b1a74a6beb08fE($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $_12$sroa$0$0$$sroa_idx = 0, $_12$sroa$10$0$$sroa_idx57 = 0, $_12$sroa$11$0$$sroa_idx59 = 0;
 var $_12$sroa$12$0$$sroa_idx61 = 0, $_12$sroa$4$0$$sroa_idx40 = 0, $_12$sroa$5$0$$sroa_idx43 = 0, $_12$sroa$6$0$$sroa_idx45 = 0, $_12$sroa$7$0$$sroa_idx47 = 0, $_12$sroa$8 = 0, $_12$sroa$8$0$$sroa_idx = 0, $_12$sroa$9 = 0, $_12$sroa$9$0$$sroa_idx = 0, $_13$i$i = 0, $_13$i$i1 = 0, $_17$i$i = 0, $_17$i$i2 = 0, $_8$sroa$0$0$$sroa_idx = 0, $_8$sroa$11$0$$sroa_idx79 = 0, $_8$sroa$13$0$$sroa_idx81 = 0, $_8$sroa$14$0$$sroa_idx83 = 0, $_8$sroa$14$20$copyload = 0, $_8$sroa$16$0$$sroa_idx86 = 0, $_8$sroa$16$20$$sroa_idx87 = 0;
 var $_8$sroa$16$20$copyload = 0, $_8$sroa$17$0$$sroa_idx89 = 0, $_8$sroa$17$20$$sroa_idx90 = 0, $_8$sroa$17$20$copyload = 0, $_8$sroa$1791$0$$sroa_idx93 = 0, $_8$sroa$1791$32$copyload = 0, $_8$sroa$19$0$$sroa_idx96 = 0, $_8$sroa$19$32$$sroa_idx97 = 0, $_8$sroa$19$32$copyload = 0, $_8$sroa$20$0$$sroa_idx99 = 0, $_8$sroa$20$32$$sroa_idx100 = 0, $_8$sroa$20$32$copyload = 0, $_8$sroa$20101$0$$sroa_idx103 = 0, $_8$sroa$21$0$$sroa_idx105 = 0, $_8$sroa$22$0$$sroa_idx107 = 0, $_8$sroa$4$0$$sroa_idx72 = 0, $_8$sroa$8$0$$sroa_idx76 = 0, $not$$i$i$i$i$i = 0, $not$$i$i$i$i$i$i = 0, $not$$i$i$i$i$i$i22 = 0;
 var $not$$i$i$i$i1$i = 0, $personalityslot$sroa$0$0 = 0, $personalityslot$sroa$0$0$i$i = 0, $personalityslot$sroa$0$0$i$i10 = 0, $personalityslot$sroa$0$1$i$i3 = 0, $personalityslot$sroa$5$0 = 0, $personalityslot$sroa$7$0$i$i = 0, $personalityslot$sroa$7$0$i$i11 = 0, $personalityslot$sroa$7$1$i$i4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(96|0);
 $_13$i$i1 = sp + 80|0;
 $_17$i$i2 = sp + 64|0;
 $_13$i$i = sp + 48|0;
 $_17$i$i = sp + 32|0;
 $_12$sroa$8 = sp + 16|0;
 $_12$sroa$9 = sp;
 $1 = (_malloc(768)|0);
 $2 = ($1|0)==(0|0);
 if ($2) {
  __THREW__ = 0;
  invoke_v(210);
  $3 = __THREW__; __THREW__ = 0;
  $4 = ___cxa_find_matching_catch_2()|0;
  $5 = tempRet0;
  $personalityslot$sroa$0$0 = $4;$personalityslot$sroa$5$0 = $5;
  ___resumeException($personalityslot$sroa$0$0|0);
  // unreachable;
 }
 $6 = $1;
 __THREW__ = 0;
 invoke_vii(211,($_13$i$i|0),32);
 $7 = __THREW__; __THREW__ = 0;
 $8 = $7&1;
 do {
  if ($8) {
   $11 = ___cxa_find_matching_catch_2()|0;
   $12 = tempRet0;
   $personalityslot$sroa$0$0$i$i = $11;$personalityslot$sroa$7$0$i$i = $12;
  } else {
   __THREW__ = 0;
   invoke_vii(211,($_17$i$i|0),32);
   $9 = __THREW__; __THREW__ = 0;
   $10 = $9&1;
   if ($10) {
    $13 = ___cxa_find_matching_catch_2()|0;
    $14 = tempRet0;
    $15 = ((($_13$i$i)) + 4|0);
    $16 = HEAP32[$15>>2]|0;
    $not$$i$i$i$i$i$i = ($16|0)==(0);
    if ($not$$i$i$i$i$i$i) {
     $personalityslot$sroa$0$0$i$i = $13;$personalityslot$sroa$7$0$i$i = $14;
     break;
    }
    $17 = HEAP32[$_13$i$i>>2]|0;
    _free($17);
    $personalityslot$sroa$0$0$i$i = $13;$personalityslot$sroa$7$0$i$i = $14;
    break;
   }
   $_8$sroa$14$20$copyload = HEAP32[$_13$i$i>>2]|0;
   $_8$sroa$16$20$$sroa_idx87 = ((($_13$i$i)) + 4|0);
   $_8$sroa$16$20$copyload = HEAP32[$_8$sroa$16$20$$sroa_idx87>>2]|0;
   $_8$sroa$17$20$$sroa_idx90 = ((($_13$i$i)) + 8|0);
   $_8$sroa$17$20$copyload = HEAP32[$_8$sroa$17$20$$sroa_idx90>>2]|0;
   $_8$sroa$1791$32$copyload = HEAP32[$_17$i$i>>2]|0;
   $_8$sroa$19$32$$sroa_idx97 = ((($_17$i$i)) + 4|0);
   $_8$sroa$19$32$copyload = HEAP32[$_8$sroa$19$32$$sroa_idx97>>2]|0;
   $_8$sroa$20$32$$sroa_idx100 = ((($_17$i$i)) + 8|0);
   $_8$sroa$20$32$copyload = HEAP32[$_8$sroa$20$32$$sroa_idx100>>2]|0;
   $18 = (_malloc(768)|0);
   $19 = ($18|0)==(0|0);
   if ($19) {
    __THREW__ = 0;
    invoke_v(210);
    $20 = __THREW__; __THREW__ = 0;
    $21 = ___cxa_find_matching_catch_2()|0;
    $22 = tempRet0;
    $personalityslot$sroa$0$1$i$i3 = $21;$personalityslot$sroa$7$1$i$i4 = $22;
   } else {
    $23 = $18;
    __THREW__ = 0;
    invoke_vii(211,($_13$i$i1|0),32);
    $24 = __THREW__; __THREW__ = 0;
    $25 = $24&1;
    if ($25) {
     $28 = ___cxa_find_matching_catch_2()|0;
     $29 = tempRet0;
     $personalityslot$sroa$0$0$i$i10 = $28;$personalityslot$sroa$7$0$i$i11 = $29;
    } else {
     __THREW__ = 0;
     invoke_vii(211,($_17$i$i2|0),32);
     $26 = __THREW__; __THREW__ = 0;
     $27 = $26&1;
     if (!($27)) {
      ;HEAP32[$_12$sroa$8>>2]=HEAP32[$_13$i$i1>>2]|0;HEAP32[$_12$sroa$8+4>>2]=HEAP32[$_13$i$i1+4>>2]|0;HEAP32[$_12$sroa$8+8>>2]=HEAP32[$_13$i$i1+8>>2]|0;
      ;HEAP32[$_12$sroa$9>>2]=HEAP32[$_17$i$i2>>2]|0;HEAP32[$_12$sroa$9+4>>2]=HEAP32[$_17$i$i2+4>>2]|0;HEAP32[$_12$sroa$9+8>>2]=HEAP32[$_17$i$i2+8>>2]|0;
      HEAP32[$0>>2] = 1;
      $35 = ((($0)) + 4|0);
      HEAP32[$35>>2] = (784);
      $_8$sroa$0$0$$sroa_idx = ((($0)) + 8|0);
      HEAP32[$_8$sroa$0$0$$sroa_idx>>2] = 0;
      $_8$sroa$4$0$$sroa_idx72 = ((($0)) + 12|0);
      HEAP32[$_8$sroa$4$0$$sroa_idx72>>2] = $6;
      $_8$sroa$8$0$$sroa_idx76 = ((($0)) + 16|0);
      HEAP32[$_8$sroa$8$0$$sroa_idx76>>2] = 32;
      $_8$sroa$11$0$$sroa_idx79 = ((($0)) + 20|0);
      HEAP32[$_8$sroa$11$0$$sroa_idx79>>2] = 0;
      $_8$sroa$13$0$$sroa_idx81 = ((($0)) + 24|0);
      HEAP32[$_8$sroa$13$0$$sroa_idx81>>2] = 31;
      $_8$sroa$14$0$$sroa_idx83 = ((($0)) + 28|0);
      HEAP32[$_8$sroa$14$0$$sroa_idx83>>2] = $_8$sroa$14$20$copyload;
      $_8$sroa$16$0$$sroa_idx86 = ((($0)) + 32|0);
      HEAP32[$_8$sroa$16$0$$sroa_idx86>>2] = $_8$sroa$16$20$copyload;
      $_8$sroa$17$0$$sroa_idx89 = ((($0)) + 36|0);
      HEAP32[$_8$sroa$17$0$$sroa_idx89>>2] = $_8$sroa$17$20$copyload;
      $_8$sroa$1791$0$$sroa_idx93 = ((($0)) + 40|0);
      HEAP32[$_8$sroa$1791$0$$sroa_idx93>>2] = $_8$sroa$1791$32$copyload;
      $_8$sroa$19$0$$sroa_idx96 = ((($0)) + 44|0);
      HEAP32[$_8$sroa$19$0$$sroa_idx96>>2] = $_8$sroa$19$32$copyload;
      $_8$sroa$20$0$$sroa_idx99 = ((($0)) + 48|0);
      HEAP32[$_8$sroa$20$0$$sroa_idx99>>2] = $_8$sroa$20$32$copyload;
      $_8$sroa$20101$0$$sroa_idx103 = ((($0)) + 52|0);
      HEAP32[$_8$sroa$20101$0$$sroa_idx103>>2] = 0;
      $_8$sroa$21$0$$sroa_idx105 = ((($0)) + 56|0);
      HEAP32[$_8$sroa$21$0$$sroa_idx105>>2] = 32;
      $_8$sroa$22$0$$sroa_idx107 = ((($0)) + 60|0);
      HEAP32[$_8$sroa$22$0$$sroa_idx107>>2] = 22;
      $36 = ((($0)) + 64|0);
      HEAP32[$36>>2] = 1;
      $37 = ((($0)) + 68|0);
      HEAP32[$37>>2] = (800);
      $_12$sroa$0$0$$sroa_idx = ((($0)) + 72|0);
      HEAP32[$_12$sroa$0$0$$sroa_idx>>2] = 0;
      $_12$sroa$4$0$$sroa_idx40 = ((($0)) + 76|0);
      HEAP32[$_12$sroa$4$0$$sroa_idx40>>2] = $23;
      $_12$sroa$5$0$$sroa_idx43 = ((($0)) + 80|0);
      HEAP32[$_12$sroa$5$0$$sroa_idx43>>2] = 32;
      $_12$sroa$6$0$$sroa_idx45 = ((($0)) + 84|0);
      HEAP32[$_12$sroa$6$0$$sroa_idx45>>2] = 0;
      $_12$sroa$7$0$$sroa_idx47 = ((($0)) + 88|0);
      HEAP32[$_12$sroa$7$0$$sroa_idx47>>2] = 31;
      $_12$sroa$8$0$$sroa_idx = ((($0)) + 92|0);
      ;HEAP32[$_12$sroa$8$0$$sroa_idx>>2]=HEAP32[$_12$sroa$8>>2]|0;HEAP32[$_12$sroa$8$0$$sroa_idx+4>>2]=HEAP32[$_12$sroa$8+4>>2]|0;HEAP32[$_12$sroa$8$0$$sroa_idx+8>>2]=HEAP32[$_12$sroa$8+8>>2]|0;
      $_12$sroa$9$0$$sroa_idx = ((($0)) + 104|0);
      ;HEAP32[$_12$sroa$9$0$$sroa_idx>>2]=HEAP32[$_12$sroa$9>>2]|0;HEAP32[$_12$sroa$9$0$$sroa_idx+4>>2]=HEAP32[$_12$sroa$9+4>>2]|0;HEAP32[$_12$sroa$9$0$$sroa_idx+8>>2]=HEAP32[$_12$sroa$9+8>>2]|0;
      $_12$sroa$10$0$$sroa_idx57 = ((($0)) + 116|0);
      HEAP32[$_12$sroa$10$0$$sroa_idx57>>2] = 0;
      $_12$sroa$11$0$$sroa_idx59 = ((($0)) + 120|0);
      HEAP32[$_12$sroa$11$0$$sroa_idx59>>2] = 32;
      $_12$sroa$12$0$$sroa_idx61 = ((($0)) + 124|0);
      HEAP32[$_12$sroa$12$0$$sroa_idx61>>2] = 22;
      STACKTOP = sp;return;
     }
     $30 = ___cxa_find_matching_catch_2()|0;
     $31 = tempRet0;
     $32 = ((($_13$i$i1)) + 4|0);
     $33 = HEAP32[$32>>2]|0;
     $not$$i$i$i$i$i$i22 = ($33|0)==(0);
     if ($not$$i$i$i$i$i$i22) {
      $personalityslot$sroa$0$0$i$i10 = $30;$personalityslot$sroa$7$0$i$i11 = $31;
     } else {
      $34 = HEAP32[$_13$i$i1>>2]|0;
      _free($34);
      $personalityslot$sroa$0$0$i$i10 = $30;$personalityslot$sroa$7$0$i$i11 = $31;
     }
    }
    _free($18);
    $personalityslot$sroa$0$1$i$i3 = $personalityslot$sroa$0$0$i$i10;$personalityslot$sroa$7$1$i$i4 = $personalityslot$sroa$7$0$i$i11;
   }
   _free($1);
   $not$$i$i$i$i$i = ($_8$sroa$16$20$copyload|0)==(0);
   if (!($not$$i$i$i$i$i)) {
    _free($_8$sroa$14$20$copyload);
   }
   $not$$i$i$i$i1$i = ($_8$sroa$19$32$copyload|0)==(0);
   if ($not$$i$i$i$i1$i) {
    $personalityslot$sroa$0$0 = $personalityslot$sroa$0$1$i$i3;$personalityslot$sroa$5$0 = $personalityslot$sroa$7$1$i$i4;
    ___resumeException($personalityslot$sroa$0$0|0);
    // unreachable;
   }
   _free($_8$sroa$1791$32$copyload);
   $personalityslot$sroa$0$0 = $personalityslot$sroa$0$1$i$i3;$personalityslot$sroa$5$0 = $personalityslot$sroa$7$1$i$i4;
   ___resumeException($personalityslot$sroa$0$0|0);
   // unreachable;
  }
 } while(0);
 _free($1);
 $personalityslot$sroa$0$0 = $personalityslot$sroa$0$0$i$i;$personalityslot$sroa$5$0 = $personalityslot$sroa$7$0$i$i;
 ___resumeException($personalityslot$sroa$0$0|0);
 // unreachable;
}
function __ZN10nphysics2d10resolution10constraint16contact_equation24fill_velocity_constraint17h53bc1af81e480467E($0,$$0$0$val,$$0$1$val,$1,$2,$3,$4,$5,$6,$7,$8) {
 $0 = $0|0;
 $$0$0$val = +$$0$0$val;
 $$0$1$val = +$$0$1$val;
 $1 = +$1;
 $2 = +$2;
 $3 = +$3;
 $4 = +$4;
 $5 = $5|0;
 $6 = $6|0;
 $7 = $7|0;
 $8 = $8|0;
 var $$ = 0, $$idx$i$i = 0, $$idx$i65$i = 0, $$idx$i67$i = 0, $$idx$i69$i = 0, $$idx$val = 0, $$idx$val$i$i = 0.0, $$idx$val$i66$i = 0.0, $$idx$val$i68$i = 0.0, $$idx$val$i70$i = 0.0, $$idx$val2$i11$i = 0.0, $$idx$val2$i719$i = 0.0, $$idx1$i$i = 0, $$idx1$i72$i = 0, $$idx1$val3$i12$i = 0.0, $$idx1$val3$i7310$i = 0.0, $$idx12 = 0, $$idx12$val = 0.0, $$idx13$phi$trans$insert = 0, $$idx13$val = 0.0;
 var $$idx13$val$pre = 0.0, $$idx40$i = 0, $$idx40$val$i = 0.0, $$idx41$i = 0, $$idx41$val$i = 0.0, $$idx42$i = 0, $$idx42$val$i = 0.0, $$idx44$i = 0, $$idx44$val$i = 0.0, $$idx7$val = 0, $$idx8 = 0, $$idx8$val = 0, $$idx9 = 0, $$idx9$val = 0, $$val$i = 0.0, $10 = 0, $100 = 0.0, $101 = 0, $102 = 0, $103 = 0.0;
 var $104 = 0.0, $105 = 0, $106 = 0.0, $107 = 0.0, $108 = 0.0, $109 = 0.0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0.0, $114 = 0.0, $115 = 0.0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $13 = 0, $14 = 0.0;
 var $15 = 0.0, $16 = 0.0, $17 = 0.0, $18 = 0.0, $19 = 0.0, $20 = 0.0, $21 = 0.0, $22 = 0.0, $23 = 0, $24 = 0, $25 = 0.0, $26 = 0.0, $27 = 0.0, $28 = 0.0, $29 = 0.0, $30 = 0.0, $31 = 0.0, $32 = 0, $33 = 0, $34 = 0.0;
 var $35 = 0.0, $36 = 0, $37 = 0, $38 = 0, $39 = 0.0, $40 = 0.0, $41 = 0, $42 = 0.0, $43 = 0.0, $44 = 0.0, $45 = 0.0, $46 = 0.0, $47 = 0.0, $48 = 0.0, $49 = 0.0, $50 = 0, $51 = 0, $52 = 0, $53 = 0.0, $54 = 0.0;
 var $55 = 0, $56 = 0.0, $57 = 0.0, $58 = 0.0, $59 = 0.0, $60 = 0.0, $61 = 0.0, $62 = 0.0, $63 = 0.0, $64 = 0.0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $70 = 0.0, $71 = 0.0, $72 = 0.0, $73 = 0.0, $74 = 0.0;
 var $75 = 0.0, $76 = 0.0, $77 = 0.0, $78 = 0.0, $79 = 0.0, $80 = 0.0, $81 = 0.0, $82 = 0.0, $83 = 0.0, $84 = 0, $85 = 0, $86 = 0, $87 = 0.0, $88 = 0.0, $89 = 0.0, $9 = 0, $90 = 0.0, $91 = 0.0, $92 = 0.0, $93 = 0.0;
 var $94 = 0.0, $95 = 0.0, $96 = 0.0, $97 = 0.0, $98 = 0.0, $99 = 0.0, $_0$0$i = 0.0, $_0$0$i14 = 0.0, $_0$0$in$in$i = 0, $_113$0 = 0.0, $dvel$0$i = 0.0, $dvel$1$i = 0.0, $opt_rb2$0 = 0, $switch$i = 0, $switch$i18 = 0, $switch$i19 = 0, $switch6tmp$i = 0, $switchtmp$i16 = 0, $trunc$i = 0, $trunc$i$getsign = 0;
 var $trunc$i$signed = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $9 = ((($0)) + 4|0);
 $10 = HEAP32[$0>>2]|0;
 $11 = HEAP32[$9>>2]|0;
 $12 = ((($5)) + 68|0);
 $13 = ((($5)) + 64|0);
 $14 = +HEAPF32[$13>>2];
 $15 = +HEAPF32[$12>>2];
 $16 = $$0$0$val - $14;
 $17 = $$0$1$val - $15;
 $18 = (HEAP32[tempDoublePtr>>2]=$10,+HEAPF32[tempDoublePtr>>2]);
 $19 = (HEAP32[tempDoublePtr>>2]=$11,+HEAPF32[tempDoublePtr>>2]);
 $20 = $19 * $16;
 $21 = $18 * $17;
 $22 = $21 - $20;
 $23 = ((($6)) + 68|0);
 $24 = ((($6)) + 64|0);
 $25 = +HEAPF32[$24>>2];
 $26 = +HEAPF32[$23>>2];
 $27 = $$0$0$val - $25;
 $28 = $$0$1$val - $26;
 $29 = $19 * $27;
 $30 = $18 * $28;
 $31 = $29 - $30;
 $$idx7$val = HEAP8[$5>>0]|0;
 $switch$i19 = ($$idx7$val<<24>>24)==(1);
 $$ = $switch$i19 ? $5 : 0;
 $$idx$val = HEAP8[$6>>0]|0;
 $switch$i18 = ($$idx$val<<24>>24)==(1);
 $opt_rb2$0 = $switch$i18 ? $6 : 0;
 HEAP32[$7>>2] = $10;
 $32 = ((($7)) + 4|0);
 HEAP32[$32>>2] = $11;
 $33 = ((($7)) + 40|0);
 HEAPF32[$33>>2] = 0.0;
 $switch6tmp$i = ($$|0)==(0|0);
 if ($switch6tmp$i) {
  $60 = 0.0;
 } else {
  $$idx41$i = ((($$)) + 44|0);
  $$idx41$val$i = +HEAPF32[$$idx41$i>>2];
  $34 = $18 * $$idx41$val$i;
  $35 = $19 * $$idx41$val$i;
  $36 = ((($7)) + 8|0);
  HEAPF32[$36>>2] = $34;
  $37 = ((($7)) + 12|0);
  HEAPF32[$37>>2] = $35;
  $38 = ((($7)) + 24|0);
  HEAPF32[$38>>2] = $22;
  $$idx44$i = ((($$)) + 52|0);
  $$idx44$val$i = +HEAPF32[$$idx44$i>>2];
  $39 = $22 * $$idx44$val$i;
  $40 = $39 + 0.0;
  $41 = ((($7)) + 28|0);
  HEAPF32[$41>>2] = $40;
  $42 = $18 * $34;
  $43 = $19 * $35;
  $44 = $42 + $43;
  $45 = $44 + 0.0;
  $46 = $22 * $40;
  $47 = $45 + $46;
  HEAPF32[$33>>2] = $47;
  $60 = $47;
 }
 $switchtmp$i16 = ($opt_rb2$0|0)==(0|0);
 if ($switchtmp$i16) {
  $$idx13$phi$trans$insert = ((($7)) + 32|0);
  $$idx13$val$pre = +HEAPF32[$$idx13$phi$trans$insert>>2];
  $$idx13$val = $$idx13$val$pre;$64 = $60;
 } else {
  $$idx40$i = ((($opt_rb2$0)) + 44|0);
  $$idx40$val$i = +HEAPF32[$$idx40$i>>2];
  $48 = $18 * $$idx40$val$i;
  $49 = $19 * $$idx40$val$i;
  $50 = ((($7)) + 16|0);
  HEAPF32[$50>>2] = $48;
  $51 = ((($7)) + 20|0);
  HEAPF32[$51>>2] = $49;
  $52 = ((($7)) + 32|0);
  HEAPF32[$52>>2] = $31;
  $$idx42$i = ((($opt_rb2$0)) + 52|0);
  $$idx42$val$i = +HEAPF32[$$idx42$i>>2];
  $53 = $31 * $$idx42$val$i;
  $54 = $53 + 0.0;
  $55 = ((($7)) + 36|0);
  HEAPF32[$55>>2] = $54;
  $56 = $18 * $48;
  $57 = $19 * $49;
  $58 = $56 + $57;
  $59 = $60 + $58;
  $61 = $31 * $54;
  $62 = $59 + $61;
  HEAPF32[$33>>2] = $62;
  $$idx13$val = $31;$64 = $62;
 }
 $63 = 1.0 / $64;
 HEAPF32[$33>>2] = $63;
 $$idx9 = ((($5)) + 112|0);
 $$idx9$val = HEAP32[$$idx9>>2]|0;
 $65 = ((($7)) + 60|0);
 HEAP32[$65>>2] = $$idx9$val;
 $$idx8 = ((($6)) + 112|0);
 $$idx8$val = HEAP32[$$idx8>>2]|0;
 $66 = ((($7)) + 64|0);
 HEAP32[$66>>2] = $$idx8$val;
 if ($switch6tmp$i) {
  $dvel$0$i = 0.0;
 } else {
  $$idx12 = ((($7)) + 24|0);
  $$idx12$val = +HEAPF32[$$idx12>>2];
  $67 = ((($$)) + 32|0);
  $$idx$val2$i719$i = +HEAPF32[$67>>2];
  $$idx1$i72$i = ((($$)) + 36|0);
  $$idx1$val3$i7310$i = +HEAPF32[$$idx1$i72$i>>2];
  $68 = ((($$)) + 72|0);
  $69 = ((($$)) + 76|0);
  $70 = +HEAPF32[$68>>2];
  $71 = +HEAPF32[$69>>2];
  $72 = $70 * 0.033333335071802139;
  $73 = $71 * 0.033333335071802139;
  $74 = $$idx$val2$i719$i + $72;
  $75 = $$idx1$val3$i7310$i + $73;
  $76 = $18 * $74;
  $77 = $19 * $75;
  $78 = $76 + $77;
  $79 = 0.0 - $78;
  $$idx$i69$i = ((($$)) + 40|0);
  $$idx$val$i70$i = +HEAPF32[$$idx$i69$i>>2];
  $$idx$i67$i = ((($$)) + 80|0);
  $$idx$val$i68$i = +HEAPF32[$$idx$i67$i>>2];
  $80 = $$idx$val$i68$i * 0.033333335071802139;
  $81 = $$idx$val$i70$i + $80;
  $82 = $$idx12$val * $81;
  $83 = $79 + $82;
  $dvel$0$i = $83;
 }
 if ($switchtmp$i16) {
  $dvel$1$i = $dvel$0$i;
 } else {
  $84 = ((($opt_rb2$0)) + 32|0);
  $$idx$val2$i11$i = +HEAPF32[$84>>2];
  $$idx1$i$i = ((($opt_rb2$0)) + 36|0);
  $$idx1$val3$i12$i = +HEAPF32[$$idx1$i$i>>2];
  $85 = ((($opt_rb2$0)) + 72|0);
  $86 = ((($opt_rb2$0)) + 76|0);
  $87 = +HEAPF32[$85>>2];
  $88 = +HEAPF32[$86>>2];
  $89 = $87 * 0.033333335071802139;
  $90 = $88 * 0.033333335071802139;
  $91 = $$idx$val2$i11$i + $89;
  $92 = $$idx1$val3$i12$i + $90;
  $93 = $18 * $91;
  $94 = $19 * $92;
  $95 = $93 + $94;
  $96 = $dvel$0$i + $95;
  $$idx$i65$i = ((($opt_rb2$0)) + 40|0);
  $$idx$val$i66$i = +HEAPF32[$$idx$i65$i>>2];
  $$idx$i$i = ((($opt_rb2$0)) + 80|0);
  $$idx$val$i$i = +HEAPF32[$$idx$i$i>>2];
  $97 = $$idx$val$i$i * 0.033333335071802139;
  $98 = $$idx$val$i66$i + $97;
  $99 = $$idx13$val * $98;
  $100 = $96 + $99;
  $dvel$1$i = $100;
 }
 $101 = ((($7)) + 56|0);
 HEAPF32[$101>>2] = $dvel$1$i;
 $102 = ((($8)) + 20|0);
 $103 = +HEAPF32[$102>>2];
 $104 = -$103;
 $105 = $dvel$1$i < $104;
 if ($105) {
  $106 = $dvel$1$i * $1;
  $107 = $dvel$1$i + $106;
  HEAPF32[$101>>2] = $107;
  $109 = $107;
 } else {
  $109 = $dvel$1$i;
 }
 $108 = -$109;
 HEAPF32[$101>>2] = $108;
 $110 = HEAP32[$8>>2]|0;
 $trunc$i = $110&255;
 $trunc$i$getsign = ($trunc$i << 6)&255;
 $trunc$i$signed = ($trunc$i$getsign<<24>>24) >> 6;
 $switch$i = ($trunc$i$signed<<24>>24)>(-1);
 $111 = ((($8)) + 12|0);
 $$val$i = +HEAPF32[$111>>2];
 $_0$0$i14 = $switch$i ? 3.4028234663852886E+38 : $$val$i;
 $112 = $_0$0$i14 > $2;
 if (!($112)) {
  $116 = $2 < 0.0;
  $_113$0 = $116 ? 0.0 : $3;
  $117 = ((($7)) + 44|0);
  HEAPF32[$117>>2] = $_113$0;
  $118 = ((($7)) + 48|0);
  HEAPF32[$118>>2] = 0.0;
  $119 = ((($7)) + 52|0);
  HEAPF32[$119>>2] = $4;
  return;
 }
 $_0$0$in$in$i = ((($8)) + 4|0);
 $_0$0$i = +HEAPF32[$_0$0$in$in$i>>2];
 $113 = $_0$0$i * $2;
 $114 = $113 / 0.033333335071802139;
 $115 = $114 - $109;
 HEAPF32[$101>>2] = $115;
 $116 = $2 < 0.0;
 $_113$0 = $116 ? 0.0 : $3;
 $117 = ((($7)) + 44|0);
 HEAPF32[$117>>2] = $_113$0;
 $118 = ((($7)) + 48|0);
 HEAPF32[$118>>2] = 0.0;
 $119 = ((($7)) + 52|0);
 HEAPF32[$119>>2] = $4;
 return;
}
function __ZN10nphysics2d10resolution10constraint26accumulated_impulse_solver13resize_buffer17h4d2beb72afd023cfE($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$$i$i$i$i = 0, $$arith = 0, $$arith2 = 0, $$arith6 = 0, $$idx = 0, $$idx$i$i$i$i = 0, $$idx$val = 0, $$idx$val$i$i$i$i = 0, $$in$i$i$i = 0, $$overflow = 0, $$overflow3 = 0, $$overflow7 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0;
 var $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $3 = SIMD_Int32x4(0,0,0,0), $4 = SIMD_Int32x4(0,0,0,0), $5 = SIMD_Int32x4(0,0,0,0), $6 = SIMD_Int32x4(0,0,0,0), $7 = 0, $8 = 0, $9 = 0, $_0$0$sroa$speculated$i$i$i$i$i$i$i = 0, $_31$sroa$11$0$$sroa_idx152$i$i$i = 0, $_31$sroa$15$0$$sroa_idx160$i$i$i = 0, $_31$sroa$19$0$$sroa_idx168$i$i$i = 0;
 var $_31$sroa$20$0$$sroa_idx170$i$i$i = 0, $_31$sroa$21$0$$sroa_idx172$i$i$i = 0, $_31$sroa$7$0$$sroa_idx144$i$i$i = 0, $ptr$0$i$i$i$i$i = 0, $val$sroa$11$0$$sroa_idx144 = 0, $val$sroa$15$0$$sroa_idx152 = 0, $val$sroa$19$0$$sroa_idx160 = 0, $val$sroa$19$0$copyload = 0, $val$sroa$20$0$$sroa_idx162 = 0, $val$sroa$20$0$copyload = 0, $val$sroa$21$0$$sroa_idx164 = 0, $val$sroa$21$0$copyload = 0, $val$sroa$7$0$$sroa_idx136 = 0, label = 0, sp = 0, temp_Int32x4_ptr = 0;
 sp = STACKTOP;
 $3 = SIMD_Int32x4_load(HEAPU8, $2);
 $val$sroa$7$0$$sroa_idx136 = ((($2)) + 16|0);
 $4 = SIMD_Int32x4_load(HEAPU8, $val$sroa$7$0$$sroa_idx136);
 $val$sroa$11$0$$sroa_idx144 = ((($2)) + 32|0);
 $5 = SIMD_Int32x4_load(HEAPU8, $val$sroa$11$0$$sroa_idx144);
 $val$sroa$15$0$$sroa_idx152 = ((($2)) + 48|0);
 $6 = SIMD_Int32x4_load(HEAPU8, $val$sroa$15$0$$sroa_idx152);
 $val$sroa$19$0$$sroa_idx160 = ((($2)) + 64|0);
 $val$sroa$19$0$copyload = HEAP32[$val$sroa$19$0$$sroa_idx160>>2]|0;
 $val$sroa$20$0$$sroa_idx162 = ((($2)) + 68|0);
 $val$sroa$20$0$copyload = HEAP32[$val$sroa$20$0$$sroa_idx162>>2]|0;
 $val$sroa$21$0$$sroa_idx164 = ((($2)) + 72|0);
 $val$sroa$21$0$copyload = HEAP32[$val$sroa$21$0$$sroa_idx164>>2]|0;
 $$idx = ((($0)) + 8|0);
 $$idx$val = HEAP32[$$idx>>2]|0;
 $7 = ($$idx$val>>>0)<($1>>>0);
 if (!($7)) {
  $26 = ($$idx$val>>>0)>($1>>>0);
  if (!($26)) {
   return;
  }
  HEAP32[$$idx>>2] = $1;
  return;
 }
 $8 = (($1) - ($$idx$val))|0;
 $9 = ($8|0)==(0);
 if ($9) {
  return;
 }
 $$idx$i$i$i$i = ((($0)) + 4|0);
 $$in$i$i$i = $8;$11 = $$idx$val;
 while(1) {
  $10 = (($$in$i$i$i) + -1)|0;
  $$idx$val$i$i$i$i = HEAP32[$$idx$i$i$i$i>>2]|0;
  $12 = ($11|0)==($$idx$val$i$i$i$i|0);
  if ($12) {
   $$arith2 = (($10) + 1)|0;
   $$overflow3 = ($10>>>0)>(4294967294);
   $$$i$i$i$i = $$overflow3 ? -1 : $$arith2;
   $13 = ($$$i$i$i$i|0)==(0);
   if (!($13)) {
    $$arith = (($11) + ($$$i$i$i$i))|0;
    $$overflow = ($$arith>>>0)<($11>>>0);
    if ($$overflow) {
     label = 7;
     break;
    }
    $14 = $11 << 1;
    $15 = ($$arith>>>0)>=($14>>>0);
    $_0$0$sroa$speculated$i$i$i$i$i$i$i = $15 ? $$arith : $14;
    $$arith6 = ($_0$0$sroa$speculated$i$i$i$i$i$i$i*76)|0;
    $$overflow7 = ($_0$0$sroa$speculated$i$i$i$i$i$i$i>>>0)>(56512727);
    if ($$overflow7) {
     label = 9;
     break;
    }
    $16 = ($$arith6|0)<(0);
    if ($16) {
     label = 11;
     break;
    }
    $17 = ($11|0)==(0);
    if ($17) {
     $18 = (_malloc($$arith6)|0);
     $ptr$0$i$i$i$i$i = $18;
    } else {
     $19 = HEAP32[$0>>2]|0;
     $20 = (_realloc($19,$$arith6)|0);
     $ptr$0$i$i$i$i$i = $20;
    }
    $21 = ($ptr$0$i$i$i$i$i|0)==(0|0);
    if ($21) {
     label = 16;
     break;
    }
    HEAP32[$0>>2] = $ptr$0$i$i$i$i$i;
    HEAP32[$$idx$i$i$i$i>>2] = $_0$0$sroa$speculated$i$i$i$i$i$i$i;
   }
  }
  $22 = HEAP32[$0>>2]|0;
  $23 = (($22) + (($11*76)|0)|0);
  temp_Int32x4_ptr = $23;SIMD_Int32x4_store(HEAPU8, temp_Int32x4_ptr, $3);
  $_31$sroa$7$0$$sroa_idx144$i$i$i = (((($22) + (($11*76)|0)|0)) + 16|0);
  temp_Int32x4_ptr = $_31$sroa$7$0$$sroa_idx144$i$i$i;SIMD_Int32x4_store(HEAPU8, temp_Int32x4_ptr, $4);
  $_31$sroa$11$0$$sroa_idx152$i$i$i = (((($22) + (($11*76)|0)|0)) + 32|0);
  temp_Int32x4_ptr = $_31$sroa$11$0$$sroa_idx152$i$i$i;SIMD_Int32x4_store(HEAPU8, temp_Int32x4_ptr, $5);
  $_31$sroa$15$0$$sroa_idx160$i$i$i = (((($22) + (($11*76)|0)|0)) + 48|0);
  temp_Int32x4_ptr = $_31$sroa$15$0$$sroa_idx160$i$i$i;SIMD_Int32x4_store(HEAPU8, temp_Int32x4_ptr, $6);
  $_31$sroa$19$0$$sroa_idx168$i$i$i = (((($22) + (($11*76)|0)|0)) + 64|0);
  HEAP32[$_31$sroa$19$0$$sroa_idx168$i$i$i>>2] = $val$sroa$19$0$copyload;
  $_31$sroa$20$0$$sroa_idx170$i$i$i = (((($22) + (($11*76)|0)|0)) + 68|0);
  HEAP32[$_31$sroa$20$0$$sroa_idx170$i$i$i>>2] = $val$sroa$20$0$copyload;
  $_31$sroa$21$0$$sroa_idx172$i$i$i = (((($22) + (($11*76)|0)|0)) + 72|0);
  HEAP32[$_31$sroa$21$0$$sroa_idx172$i$i$i>>2] = $val$sroa$21$0$copyload;
  $24 = (($11) + 1)|0;
  HEAP32[$$idx>>2] = $24;
  $25 = ($10|0)==(0);
  if ($25) {
   label = 21;
   break;
  } else {
   $$in$i$i$i = $10;$11 = $24;
  }
 }
 if ((label|0) == 7) {
  __ZN4core6option13expect_failed17hc1eeb48c0c4a1725E(11172,17);
  // unreachable;
 }
 else if ((label|0) == 9) {
  __ZN4core6option13expect_failed17hc1eeb48c0c4a1725E(11172,17);
  // unreachable;
 }
 else if ((label|0) == 11) {
  __ZN4core9panicking5panic17ha7507e8e32961bfeE(6432);
  // unreachable;
 }
 else if ((label|0) == 16) {
  __ZN5alloc3oom3oom17hb253cf665793f59eE();
  // unreachable;
 }
 else if ((label|0) == 21) {
  return;
 }
}
function __ZN10nphysics2d10resolution10constraint29projected_gauss_seidel_solver28projected_gauss_seidel_solve17h16d47c9c99820278E($0,$1,$2,$3,$4,$5,$6,$7,$8) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 $7 = $7|0;
 $8 = $8|0;
 var $$idx$val$i = 0.0, $$idx$val$i65 = 0.0, $$idx75$i = 0, $$idx75$i66 = 0, $$idx75$val$i = 0.0, $$idx75$val$i67 = 0.0, $$idx76$i = 0, $$idx76$i68 = 0, $$idx76$val$i = 0.0, $$idx76$val$i69 = 0.0, $$idx77$i = 0, $$idx77$i70 = 0, $$idx77$val$i = 0.0, $$idx77$val$i71 = 0.0, $$idx78$val$i = 0.0, $$idx78$val$i49 = 0.0, $$idx79$i = 0, $$idx79$i50 = 0, $$idx79$val$i = 0.0, $$idx79$val$i51 = 0.0;
 var $$idx80$i = 0, $$idx80$i52 = 0, $$idx80$val$i = 0.0, $$idx80$val$i53 = 0.0, $$idx81$i = 0, $$idx81$i54 = 0, $$idx81$val$i = 0.0, $$idx81$val$i55 = 0.0, $$idx86$i = 0, $$idx86$i72 = 0, $$idx86$val$i = 0.0, $$idx86$val$i73 = 0.0, $$idx87$i = 0, $$idx87$i74 = 0, $$idx87$val$i = 0.0, $$idx87$val$i75 = 0.0, $$idx88$i = 0, $$idx88$i56 = 0, $$idx88$val$i = 0.0, $$idx88$val$i57 = 0.0;
 var $$idx89$i = 0, $$idx89$i58 = 0, $$idx89$val$i = 0.0, $$idx89$val$i59 = 0.0, $$unpack$i = 0.0, $$unpack$i104 = 0.0, $$unpack$i112 = 0.0, $$unpack$i88 = 0.0, $$unpack57$i = 0.0, $$unpack57$i113 = 0.0, $$unpack58$i = 0.0, $$unpack58$i107 = 0.0, $$unpack59$i = 0.0, $$unpack59$i108 = 0.0, $$unpack69$i = 0.0, $$unpack69$i89 = 0.0, $$unpack70$i = 0.0, $$unpack70$i83 = 0.0, $$unpack71$i = 0.0, $$unpack71$i84 = 0.0;
 var $$val = 0.0, $$val$i = 0.0, $$val$i78 = 0.0, $$val72$i = 0.0, $$val72$i46 = 0.0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0.0, $104 = 0.0, $105 = 0, $106 = 0, $107 = 0.0, $108 = 0.0, $109 = 0, $11 = 0, $110 = 0.0, $111 = 0.0, $112 = 0.0;
 var $113 = 0.0, $114 = 0.0, $115 = 0, $116 = 0, $117 = 0.0, $118 = 0.0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0;
 var $131 = 0.0, $132 = 0.0, $133 = 0.0, $134 = 0.0, $135 = 0.0, $136 = 0.0, $137 = 0, $138 = 0, $139 = 0.0, $14 = 0, $140 = 0.0, $141 = 0.0, $142 = 0.0, $143 = 0.0, $144 = 0.0, $145 = 0, $146 = 0.0, $147 = 0.0, $148 = 0, $149 = 0.0;
 var $15 = 0, $150 = 0, $151 = 0.0, $152 = 0, $153 = 0.0, $154 = 0, $155 = 0, $156 = 0.0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0.0, $161 = 0.0, $162 = 0, $163 = 0, $164 = 0.0, $165 = 0.0, $166 = 0.0, $167 = 0.0;
 var $168 = 0.0, $169 = 0.0, $17 = 0, $170 = 0, $171 = 0, $172 = 0.0, $173 = 0.0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0.0, $179 = 0.0, $18 = 0, $180 = 0, $181 = 0, $182 = 0.0, $183 = 0.0, $184 = 0.0, $185 = 0.0;
 var $186 = 0.0, $187 = 0.0, $188 = 0, $189 = 0, $19 = 0, $190 = 0.0, $191 = 0.0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0.0, $201 = 0.0, $202 = 0.0, $203 = 0;
 var $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0.0, $213 = 0.0, $214 = 0.0, $215 = 0.0, $216 = 0.0, $217 = 0.0, $218 = 0, $219 = 0, $22 = 0, $220 = 0.0, $221 = 0.0;
 var $222 = 0.0, $223 = 0.0, $224 = 0.0, $225 = 0.0, $226 = 0, $227 = 0.0, $228 = 0.0, $229 = 0, $23 = 0, $230 = 0.0, $231 = 0, $232 = 0, $233 = 0.0, $234 = 0, $235 = 0, $236 = 0, $237 = 0.0, $238 = 0.0, $239 = 0, $24 = 0;
 var $240 = 0, $241 = 0.0, $242 = 0.0, $243 = 0.0, $244 = 0.0, $245 = 0.0, $246 = 0.0, $247 = 0, $248 = 0, $249 = 0.0, $25 = 0, $250 = 0.0, $251 = 0, $252 = 0, $253 = 0, $254 = 0.0, $255 = 0.0, $256 = 0, $257 = 0, $258 = 0.0;
 var $259 = 0.0, $26 = 0, $260 = 0.0, $261 = 0.0, $262 = 0.0, $263 = 0.0, $264 = 0, $265 = 0, $266 = 0.0, $267 = 0.0, $268 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0.0, $31 = 0.0, $32 = 0, $33 = 0, $34 = 0.0, $35 = 0.0;
 var $36 = 0, $37 = 0.0, $38 = 0.0, $39 = 0.0, $40 = 0.0, $41 = 0.0, $42 = 0, $43 = 0, $44 = 0.0, $45 = 0.0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0.0, $52 = 0.0, $53 = 0, $54 = 0, $55 = 0.0;
 var $56 = 0.0, $57 = 0, $58 = 0.0, $59 = 0.0, $60 = 0.0, $61 = 0.0, $62 = 0.0, $63 = 0, $64 = 0, $65 = 0.0, $66 = 0.0, $67 = 0, $68 = 0, $69 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0;
 var $76 = 0, $77 = 0, $78 = 0, $79 = 0, $80 = 0, $81 = 0, $82 = 0.0, $83 = 0.0, $84 = 0, $85 = 0, $86 = 0.0, $87 = 0.0, $88 = 0, $89 = 0.0, $9 = 0, $90 = 0.0, $91 = 0.0, $92 = 0.0, $93 = 0.0, $94 = 0;
 var $95 = 0, $96 = 0.0, $97 = 0.0, $98 = 0, $99 = 0, $_0$0$in$sroa$speculate$load$bb5$sroa$speculated$i$i = 0.0, $_0$0$in$sroa$speculate$load$bb5$sroa$speculated$i$i79 = 0.0, $_0$0$in$sroa$speculated$i$i = 0.0, $_0$0$in$sroa$speculated$i$i80 = 0.0, $d_lambda_i$0$i = 0.0, $d_lambda_i$0$i61 = 0.0, $d_lambda_i$1$i = 0.0, $d_lambda_i$1$i77 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $9 = ($5|0)==($6|0);
 if (!($9)) {
  __ZN3std9panicking11begin_panic17h9936a195de5ffc4dE(10113,44,5196);
  // unreachable;
 }
 $10 = ($5|0)==(0);
 if (!($10)) {
  $11 = ($5*12)|0;
  $12 = (($11) + -12)|0;
  $13 = (($12>>>0) % 12)&-1;
  $14 = (($12) - ($13))|0;
  $15 = (($14) + 12)|0;
  _memset(($4|0),0,($15|0))|0;
 }
 L7: do {
  if (!($8)) {
   $16 = (($0) + (($1*76)|0)|0);
   $17 = ($1|0)==(0);
   L9: do {
    if (!($17)) {
     $19 = $0;
     while(1) {
      $18 = ((($19)) + 76|0);
      $20 = ((($19)) + 60|0);
      $21 = HEAP32[$20>>2]|0;
      $22 = ((($19)) + 64|0);
      $23 = HEAP32[$22>>2]|0;
      $24 = ($21|0)>(-1);
      if ($24) {
       $27 = ($21>>>0)<($5>>>0);
       if (!($27)) {
        label = 15;
        break;
       }
       $28 = (((($4) + (($21*12)|0)|0)) + 4|0);
       $29 = (($4) + (($21*12)|0)|0);
       $30 = +HEAPF32[$29>>2];
       $31 = +HEAPF32[$28>>2];
       $32 = ((($19)) + 8|0);
       $33 = ((($19)) + 12|0);
       $34 = +HEAPF32[$32>>2];
       $35 = +HEAPF32[$33>>2];
       $36 = ((($19)) + 44|0);
       $37 = +HEAPF32[$36>>2];
       $38 = $34 * $37;
       $39 = $35 * $37;
       $40 = $30 - $38;
       $41 = $31 - $39;
       HEAPF32[$29>>2] = $40;
       HEAPF32[$28>>2] = $41;
       $42 = (((($4) + (($21*12)|0)|0)) + 8|0);
       $$unpack58$i107 = +HEAPF32[$42>>2];
       $43 = ((($19)) + 28|0);
       $$unpack59$i108 = +HEAPF32[$43>>2];
       $44 = $37 * $$unpack59$i108;
       $45 = $$unpack58$i107 + $44;
       HEAPF32[$42>>2] = $45;
      }
      $46 = ($23|0)>(-1);
      if ($46) {
       $48 = ($23>>>0)<($5>>>0);
       if (!($48)) {
        label = 16;
        break;
       }
       $49 = (((($4) + (($23*12)|0)|0)) + 4|0);
       $50 = (($4) + (($23*12)|0)|0);
       $51 = +HEAPF32[$50>>2];
       $52 = +HEAPF32[$49>>2];
       $53 = ((($19)) + 16|0);
       $54 = ((($19)) + 20|0);
       $55 = +HEAPF32[$53>>2];
       $56 = +HEAPF32[$54>>2];
       $57 = ((($19)) + 44|0);
       $58 = +HEAPF32[$57>>2];
       $59 = $55 * $58;
       $60 = $56 * $58;
       $61 = $51 + $59;
       $62 = $52 + $60;
       HEAPF32[$50>>2] = $61;
       HEAPF32[$49>>2] = $62;
       $63 = (((($4) + (($23*12)|0)|0)) + 8|0);
       $$unpack$i112 = +HEAPF32[$63>>2];
       $64 = ((($19)) + 36|0);
       $$unpack57$i113 = +HEAPF32[$64>>2];
       $65 = $58 * $$unpack57$i113;
       $66 = $$unpack$i112 + $65;
       HEAPF32[$63>>2] = $66;
      }
      $47 = ($18|0)==($16|0);
      if ($47) {
       break L9;
      } else {
       $19 = $18;
      }
     }
     if ((label|0) == 15) {
      __ZN4core9panicking18panic_bounds_check17hd14a5808e41829e9E(9978,135,96,$21,$5);
      // unreachable;
     }
     else if ((label|0) == 16) {
      __ZN4core9panicking18panic_bounds_check17hd14a5808e41829e9E(9978,135,101,$23,$5);
      // unreachable;
     }
    }
   } while(0);
   $25 = (($2) + (($3*76)|0)|0);
   $26 = ($3|0)==(0);
   if (!($26)) {
    $73 = $2;
    while(1) {
     $72 = ((($73)) + 76|0);
     $74 = ((($73)) + 60|0);
     $75 = HEAP32[$74>>2]|0;
     $76 = ((($73)) + 64|0);
     $77 = HEAP32[$76>>2]|0;
     $78 = ($75|0)>(-1);
     if ($78) {
      $79 = ($75>>>0)<($5>>>0);
      if (!($79)) {
       label = 26;
       break;
      }
      $80 = (((($4) + (($75*12)|0)|0)) + 4|0);
      $81 = (($4) + (($75*12)|0)|0);
      $82 = +HEAPF32[$81>>2];
      $83 = +HEAPF32[$80>>2];
      $84 = ((($73)) + 8|0);
      $85 = ((($73)) + 12|0);
      $86 = +HEAPF32[$84>>2];
      $87 = +HEAPF32[$85>>2];
      $88 = ((($73)) + 44|0);
      $89 = +HEAPF32[$88>>2];
      $90 = $86 * $89;
      $91 = $87 * $89;
      $92 = $82 - $90;
      $93 = $83 - $91;
      HEAPF32[$81>>2] = $92;
      HEAPF32[$80>>2] = $93;
      $94 = (((($4) + (($75*12)|0)|0)) + 8|0);
      $$unpack58$i = +HEAPF32[$94>>2];
      $95 = ((($73)) + 28|0);
      $$unpack59$i = +HEAPF32[$95>>2];
      $96 = $89 * $$unpack59$i;
      $97 = $$unpack58$i + $96;
      HEAPF32[$94>>2] = $97;
     }
     $98 = ($77|0)>(-1);
     if ($98) {
      $100 = ($77>>>0)<($5>>>0);
      if (!($100)) {
       label = 27;
       break;
      }
      $101 = (((($4) + (($77*12)|0)|0)) + 4|0);
      $102 = (($4) + (($77*12)|0)|0);
      $103 = +HEAPF32[$102>>2];
      $104 = +HEAPF32[$101>>2];
      $105 = ((($73)) + 16|0);
      $106 = ((($73)) + 20|0);
      $107 = +HEAPF32[$105>>2];
      $108 = +HEAPF32[$106>>2];
      $109 = ((($73)) + 44|0);
      $110 = +HEAPF32[$109>>2];
      $111 = $107 * $110;
      $112 = $108 * $110;
      $113 = $103 + $111;
      $114 = $104 + $112;
      HEAPF32[$102>>2] = $113;
      HEAPF32[$101>>2] = $114;
      $115 = (((($4) + (($77*12)|0)|0)) + 8|0);
      $$unpack$i104 = +HEAPF32[$115>>2];
      $116 = ((($73)) + 36|0);
      $$unpack57$i = +HEAPF32[$116>>2];
      $117 = $110 * $$unpack57$i;
      $118 = $$unpack$i104 + $117;
      HEAPF32[$115>>2] = $118;
     }
     $99 = ($72|0)==($25|0);
     if ($99) {
      break L7;
     } else {
      $73 = $72;
     }
    }
    if ((label|0) == 26) {
     __ZN4core9panicking18panic_bounds_check17hd14a5808e41829e9E(9978,135,96,$75,$5);
     // unreachable;
    }
    else if ((label|0) == 27) {
     __ZN4core9panicking18panic_bounds_check17hd14a5808e41829e9E(9978,135,101,$77,$5);
     // unreachable;
    }
   }
  }
 } while(0);
 $67 = ($7|0)==(0);
 if ($67) {
  return;
 }
 $68 = (($0) + (($1*76)|0)|0);
 $69 = ($1|0)==(0);
 $70 = (($2) + (($3*76)|0)|0);
 $71 = ($3|0)==(0);
 $119 = 1;
 L41: while(1) {
  if (!($69)) {
   $123 = $0;
   while(1) {
    $122 = ((($123)) + 76|0);
    $124 = ((($123)) + 60|0);
    $125 = HEAP32[$124>>2]|0;
    $126 = ((($123)) + 64|0);
    $127 = HEAP32[$126>>2]|0;
    $128 = ((($123)) + 56|0);
    $$val72$i46 = +HEAPF32[$128>>2];
    $129 = ($125|0)>(-1);
    if ($129) {
     $130 = ($125>>>0)<($5>>>0);
     if (!($130)) {
      label = 45;
      break L41;
     }
     $$idx78$val$i49 = +HEAPF32[$123>>2];
     $$idx79$i50 = ((($123)) + 4|0);
     $$idx79$val$i51 = +HEAPF32[$$idx79$i50>>2];
     $$idx80$i52 = (($4) + (($125*12)|0)|0);
     $$idx80$val$i53 = +HEAPF32[$$idx80$i52>>2];
     $$idx81$i54 = (((($4) + (($125*12)|0)|0)) + 4|0);
     $$idx81$val$i55 = +HEAPF32[$$idx81$i54>>2];
     $131 = $$idx78$val$i49 * $$idx80$val$i53;
     $132 = $$idx79$val$i51 * $$idx81$val$i55;
     $133 = $131 + $132;
     $134 = $$val72$i46 + $133;
     $$idx88$i56 = ((($123)) + 24|0);
     $$idx88$val$i57 = +HEAPF32[$$idx88$i56>>2];
     $$idx89$i58 = (((($4) + (($125*12)|0)|0)) + 8|0);
     $$idx89$val$i59 = +HEAPF32[$$idx89$i58>>2];
     $135 = $$idx88$val$i57 * $$idx89$val$i59;
     $136 = $134 - $135;
     $d_lambda_i$0$i61 = $136;
    } else {
     $d_lambda_i$0$i61 = $$val72$i46;
    }
    $137 = ($127|0)>(-1);
    if ($137) {
     $138 = ($127>>>0)<($5>>>0);
     if (!($138)) {
      label = 46;
      break L41;
     }
     $$idx$val$i65 = +HEAPF32[$123>>2];
     $$idx75$i66 = ((($123)) + 4|0);
     $$idx75$val$i67 = +HEAPF32[$$idx75$i66>>2];
     $$idx76$i68 = (($4) + (($127*12)|0)|0);
     $$idx76$val$i69 = +HEAPF32[$$idx76$i68>>2];
     $$idx77$i70 = (((($4) + (($127*12)|0)|0)) + 4|0);
     $$idx77$val$i71 = +HEAPF32[$$idx77$i70>>2];
     $139 = $$idx$val$i65 * $$idx76$val$i69;
     $140 = $$idx75$val$i67 * $$idx77$val$i71;
     $141 = $139 + $140;
     $142 = $d_lambda_i$0$i61 - $141;
     $$idx86$i72 = ((($123)) + 32|0);
     $$idx86$val$i73 = +HEAPF32[$$idx86$i72>>2];
     $$idx87$i74 = (((($4) + (($127*12)|0)|0)) + 8|0);
     $$idx87$val$i75 = +HEAPF32[$$idx87$i74>>2];
     $143 = $$idx86$val$i73 * $$idx87$val$i75;
     $144 = $142 - $143;
     $d_lambda_i$1$i77 = $144;
    } else {
     $d_lambda_i$1$i77 = $d_lambda_i$0$i61;
    }
    $145 = ((($123)) + 40|0);
    $146 = +HEAPF32[$145>>2];
    $147 = $d_lambda_i$1$i77 * $146;
    $148 = ((($123)) + 44|0);
    $$val$i78 = +HEAPF32[$148>>2];
    $149 = $$val$i78 + $147;
    $150 = ((($123)) + 48|0);
    $151 = +HEAPF32[$150>>2];
    $152 = ((($123)) + 52|0);
    $153 = +HEAPF32[$152>>2];
    $154 = $149 > $151;
    $155 = $149 < $153;
    $_0$0$in$sroa$speculate$load$bb5$sroa$speculated$i$i79 = $155 ? $149 : $153;
    $_0$0$in$sroa$speculated$i$i80 = $154 ? $_0$0$in$sroa$speculate$load$bb5$sroa$speculated$i$i79 : $151;
    HEAPF32[$148>>2] = $_0$0$in$sroa$speculated$i$i80;
    $156 = $_0$0$in$sroa$speculated$i$i80 - $$val$i78;
    if ($129) {
     $157 = ($125>>>0)<($5>>>0);
     if (!($157)) {
      label = 47;
      break L41;
     }
     $158 = (((($4) + (($125*12)|0)|0)) + 4|0);
     $159 = (($4) + (($125*12)|0)|0);
     $160 = +HEAPF32[$159>>2];
     $161 = +HEAPF32[$158>>2];
     $162 = ((($123)) + 8|0);
     $163 = ((($123)) + 12|0);
     $164 = +HEAPF32[$162>>2];
     $165 = +HEAPF32[$163>>2];
     $166 = $156 * $164;
     $167 = $156 * $165;
     $168 = $160 - $166;
     $169 = $161 - $167;
     HEAPF32[$159>>2] = $168;
     HEAPF32[$158>>2] = $169;
     $170 = (((($4) + (($125*12)|0)|0)) + 8|0);
     $$unpack70$i83 = +HEAPF32[$170>>2];
     $171 = ((($123)) + 28|0);
     $$unpack71$i84 = +HEAPF32[$171>>2];
     $172 = $156 * $$unpack71$i84;
     $173 = $$unpack70$i83 + $172;
     HEAPF32[$170>>2] = $173;
    }
    if ($137) {
     $175 = ($127>>>0)<($5>>>0);
     if (!($175)) {
      label = 48;
      break L41;
     }
     $176 = (((($4) + (($127*12)|0)|0)) + 4|0);
     $177 = (($4) + (($127*12)|0)|0);
     $178 = +HEAPF32[$177>>2];
     $179 = +HEAPF32[$176>>2];
     $180 = ((($123)) + 16|0);
     $181 = ((($123)) + 20|0);
     $182 = +HEAPF32[$180>>2];
     $183 = +HEAPF32[$181>>2];
     $184 = $156 * $182;
     $185 = $156 * $183;
     $186 = $178 + $184;
     $187 = $179 + $185;
     HEAPF32[$177>>2] = $186;
     HEAPF32[$176>>2] = $187;
     $188 = (((($4) + (($127*12)|0)|0)) + 8|0);
     $$unpack$i88 = +HEAPF32[$188>>2];
     $189 = ((($123)) + 36|0);
     $$unpack69$i89 = +HEAPF32[$189>>2];
     $190 = $156 * $$unpack69$i89;
     $191 = $$unpack$i88 + $190;
     HEAPF32[$188>>2] = $191;
    }
    $174 = ($122|0)==($68|0);
    if ($174) {
     break;
    } else {
     $123 = $122;
    }
   }
  }
  if (!($71)) {
   $193 = $2;
   while(1) {
    $192 = ((($193)) + 76|0);
    $194 = ((($193)) + 68|0);
    $195 = HEAP32[$194>>2]|0;
    $196 = ($195>>>0)<($1>>>0);
    if (!($196)) {
     label = 68;
     break L41;
    }
    $197 = (((($0) + (($195*76)|0)|0)) + 44|0);
    $$val = +HEAPF32[$197>>2];
    $198 = $$val > 0.0;
    if ($198) {
     $199 = ((($193)) + 72|0);
     $200 = +HEAPF32[$199>>2];
     $201 = $$val * $200;
     $202 = -$201;
     $203 = ((($193)) + 48|0);
     HEAPF32[$203>>2] = $202;
     $204 = ((($193)) + 52|0);
     HEAPF32[$204>>2] = $201;
     $205 = ((($193)) + 60|0);
     $206 = HEAP32[$205>>2]|0;
     $207 = ((($193)) + 64|0);
     $208 = HEAP32[$207>>2]|0;
     $209 = ((($193)) + 56|0);
     $$val72$i = +HEAPF32[$209>>2];
     $210 = ($206|0)>(-1);
     if ($210) {
      $211 = ($206>>>0)<($5>>>0);
      if (!($211)) {
       label = 64;
       break L41;
      }
      $$idx78$val$i = +HEAPF32[$193>>2];
      $$idx79$i = ((($193)) + 4|0);
      $$idx79$val$i = +HEAPF32[$$idx79$i>>2];
      $$idx80$i = (($4) + (($206*12)|0)|0);
      $$idx80$val$i = +HEAPF32[$$idx80$i>>2];
      $$idx81$i = (((($4) + (($206*12)|0)|0)) + 4|0);
      $$idx81$val$i = +HEAPF32[$$idx81$i>>2];
      $212 = $$idx78$val$i * $$idx80$val$i;
      $213 = $$idx79$val$i * $$idx81$val$i;
      $214 = $212 + $213;
      $215 = $$val72$i + $214;
      $$idx88$i = ((($193)) + 24|0);
      $$idx88$val$i = +HEAPF32[$$idx88$i>>2];
      $$idx89$i = (((($4) + (($206*12)|0)|0)) + 8|0);
      $$idx89$val$i = +HEAPF32[$$idx89$i>>2];
      $216 = $$idx88$val$i * $$idx89$val$i;
      $217 = $215 - $216;
      $d_lambda_i$0$i = $217;
     } else {
      $d_lambda_i$0$i = $$val72$i;
     }
     $218 = ($208|0)>(-1);
     if ($218) {
      $219 = ($208>>>0)<($5>>>0);
      if (!($219)) {
       label = 65;
       break L41;
      }
      $$idx$val$i = +HEAPF32[$193>>2];
      $$idx75$i = ((($193)) + 4|0);
      $$idx75$val$i = +HEAPF32[$$idx75$i>>2];
      $$idx76$i = (($4) + (($208*12)|0)|0);
      $$idx76$val$i = +HEAPF32[$$idx76$i>>2];
      $$idx77$i = (((($4) + (($208*12)|0)|0)) + 4|0);
      $$idx77$val$i = +HEAPF32[$$idx77$i>>2];
      $220 = $$idx$val$i * $$idx76$val$i;
      $221 = $$idx75$val$i * $$idx77$val$i;
      $222 = $220 + $221;
      $223 = $d_lambda_i$0$i - $222;
      $$idx86$i = ((($193)) + 32|0);
      $$idx86$val$i = +HEAPF32[$$idx86$i>>2];
      $$idx87$i = (((($4) + (($208*12)|0)|0)) + 8|0);
      $$idx87$val$i = +HEAPF32[$$idx87$i>>2];
      $224 = $$idx86$val$i * $$idx87$val$i;
      $225 = $223 - $224;
      $d_lambda_i$1$i = $225;
     } else {
      $d_lambda_i$1$i = $d_lambda_i$0$i;
     }
     $226 = ((($193)) + 40|0);
     $227 = +HEAPF32[$226>>2];
     $228 = $d_lambda_i$1$i * $227;
     $229 = ((($193)) + 44|0);
     $$val$i = +HEAPF32[$229>>2];
     $230 = $$val$i + $228;
     $231 = $230 > $202;
     $232 = $230 < $201;
     $_0$0$in$sroa$speculate$load$bb5$sroa$speculated$i$i = $232 ? $230 : $201;
     $_0$0$in$sroa$speculated$i$i = $231 ? $_0$0$in$sroa$speculate$load$bb5$sroa$speculated$i$i : $202;
     HEAPF32[$229>>2] = $_0$0$in$sroa$speculated$i$i;
     $233 = $_0$0$in$sroa$speculated$i$i - $$val$i;
     if ($210) {
      $234 = ($206>>>0)<($5>>>0);
      if (!($234)) {
       label = 66;
       break L41;
      }
      $235 = (((($4) + (($206*12)|0)|0)) + 4|0);
      $236 = (($4) + (($206*12)|0)|0);
      $237 = +HEAPF32[$236>>2];
      $238 = +HEAPF32[$235>>2];
      $239 = ((($193)) + 8|0);
      $240 = ((($193)) + 12|0);
      $241 = +HEAPF32[$239>>2];
      $242 = +HEAPF32[$240>>2];
      $243 = $233 * $241;
      $244 = $233 * $242;
      $245 = $237 - $243;
      $246 = $238 - $244;
      HEAPF32[$236>>2] = $245;
      HEAPF32[$235>>2] = $246;
      $247 = (((($4) + (($206*12)|0)|0)) + 8|0);
      $$unpack70$i = +HEAPF32[$247>>2];
      $248 = ((($193)) + 28|0);
      $$unpack71$i = +HEAPF32[$248>>2];
      $249 = $233 * $$unpack71$i;
      $250 = $$unpack70$i + $249;
      HEAPF32[$247>>2] = $250;
     }
     if ($218) {
      $251 = ($208>>>0)<($5>>>0);
      if (!($251)) {
       label = 67;
       break L41;
      }
      $252 = (((($4) + (($208*12)|0)|0)) + 4|0);
      $253 = (($4) + (($208*12)|0)|0);
      $254 = +HEAPF32[$253>>2];
      $255 = +HEAPF32[$252>>2];
      $256 = ((($193)) + 16|0);
      $257 = ((($193)) + 20|0);
      $258 = +HEAPF32[$256>>2];
      $259 = +HEAPF32[$257>>2];
      $260 = $233 * $258;
      $261 = $233 * $259;
      $262 = $254 + $260;
      $263 = $255 + $261;
      HEAPF32[$253>>2] = $262;
      HEAPF32[$252>>2] = $263;
      $264 = (((($4) + (($208*12)|0)|0)) + 8|0);
      $$unpack$i = +HEAPF32[$264>>2];
      $265 = ((($193)) + 36|0);
      $$unpack69$i = +HEAPF32[$265>>2];
      $266 = $233 * $$unpack69$i;
      $267 = $$unpack$i + $266;
      HEAPF32[$264>>2] = $267;
     }
    }
    $268 = ($192|0)==($70|0);
    if ($268) {
     break;
    } else {
     $193 = $192;
    }
   }
  }
  $120 = ($119>>>0)<($7>>>0);
  $121 = (($119) + 1)|0;
  if ($120) {
   $119 = $121;
  } else {
   label = 30;
   break;
  }
 }
 switch (label|0) {
  case 30: {
   return;
   break;
  }
  case 45: {
   __ZN4core9panicking18panic_bounds_check17hd14a5808e41829e9E(9978,135,114,$125,$5);
   // unreachable;
   break;
  }
  case 46: {
   __ZN4core9panicking18panic_bounds_check17hd14a5808e41829e9E(9978,135,119,$127,$5);
   // unreachable;
   break;
  }
  case 47: {
   __ZN4core9panicking18panic_bounds_check17hd14a5808e41829e9E(9978,135,135,$125,$5);
   // unreachable;
   break;
  }
  case 48: {
   __ZN4core9panicking18panic_bounds_check17hd14a5808e41829e9E(9978,135,140,$127,$5);
   // unreachable;
   break;
  }
  case 64: {
   __ZN4core9panicking18panic_bounds_check17hd14a5808e41829e9E(9978,135,114,$206,$5);
   // unreachable;
   break;
  }
  case 65: {
   __ZN4core9panicking18panic_bounds_check17hd14a5808e41829e9E(9978,135,119,$208,$5);
   // unreachable;
   break;
  }
  case 66: {
   __ZN4core9panicking18panic_bounds_check17hd14a5808e41829e9E(9978,135,135,$206,$5);
   // unreachable;
   break;
  }
  case 67: {
   __ZN4core9panicking18panic_bounds_check17hd14a5808e41829e9E(9978,135,140,$208,$5);
   // unreachable;
   break;
  }
  case 68: {
   __ZN4core9panicking18panic_bounds_check17hd14a5808e41829e9E(9978,135,77,$195,$1);
   // unreachable;
   break;
  }
 }
}
function __ZN10pace_files6common20write_general_header17h8948c8ae239bb6a1E($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$idx$i$i$i$i = 0, $$idx$i$i$i$i$i = 0, $$idx$i$i$i$i$i157 = 0, $$idx$i$i$i$i186 = 0, $$idx$i$i$i$i202 = 0, $$idx$val$i$i$i$i = 0, $$idx$val$i$i$i$i$i = 0, $$idx$val$i$i$i$i$i158 = 0, $$idx$val$i$i$i$i187 = 0, $$idx$val$i$i$i$i203 = 0, $$val$val$i = 0, $$val$val$i156 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0;
 var $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0;
 var $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $_11$sroa$5$0$$sroa_idx428 = 0, $_11$sroa$6$0$$sroa_idx431 = 0, $_11$sroa$7435$0$$sroa_idx438 = 0, $_11$sroa$8$0$$sroa_idx441 = 0, $_22$sroa$4446$0$$sroa_idx = 0, $_6$i = 0, $_9 = 0;
 var $err$sroa$0$0$$sroa_idx109 = 0, $switch = 0, $writer$val$val = 0, $writer$val127$val = 0, $writer$val128$val = 0, $writer$val129$val = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $_6$i = sp + 16|0;
 $_9 = sp;
 $writer$val$val = HEAP32[$1>>2]|0;
 HEAP32[$_6$i>>2] = (5232);
 $_11$sroa$5$0$$sroa_idx428 = ((($_6$i)) + 4|0);
 HEAP32[$_11$sroa$5$0$$sroa_idx428>>2] = 1;
 $_11$sroa$6$0$$sroa_idx431 = ((($_6$i)) + 8|0);
 HEAP32[$_11$sroa$6$0$$sroa_idx431>>2] = 0;
 $_11$sroa$7435$0$$sroa_idx438 = ((($_6$i)) + 16|0);
 HEAP32[$_11$sroa$7435$0$$sroa_idx438>>2] = 26744;
 $_11$sroa$8$0$$sroa_idx441 = ((($_6$i)) + 20|0);
 HEAP32[$_11$sroa$8$0$$sroa_idx441>>2] = 0;
 __ZN3std2io5impls69__LT_impl_u20_std__io__Write_u20_for_u20__RF__u27_a_u20_mut_u20_W_GT_9write_fmt17h302a2c53740e0b37E($_9,$writer$val$val,$_6$i);
 $4 = HEAP32[$_9>>2]|0;
 $switch = ($4|0)==(1);
 if ($switch) {
  $err$sroa$0$0$$sroa_idx109 = ((($_9)) + 4|0);
  $5 = $err$sroa$0$0$$sroa_idx109;
  $6 = $5;
  $7 = HEAP32[$6>>2]|0;
  $8 = (($5) + 4)|0;
  $9 = $8;
  $10 = HEAP32[$9>>2]|0;
  $11 = ((($0)) + 8|0);
  HEAP8[$11>>0] = 0;
  $_22$sroa$4446$0$$sroa_idx = ((($11)) + 4|0);
  $12 = $_22$sroa$4446$0$$sroa_idx;
  $13 = $12;
  HEAP32[$13>>2] = $7;
  $14 = (($12) + 4)|0;
  $15 = $14;
  HEAP32[$15>>2] = $10;
  $18 = 1;$21 = 0;
  $16 = $0;
  $17 = $16;
  HEAP32[$17>>2] = $18;
  $19 = (($16) + 4)|0;
  $20 = $19;
  HEAP32[$20>>2] = $21;
  STACKTOP = sp;return;
 } else {
  $$val$val$i = HEAP32[$1>>2]|0;
  __ZN39__LT_collections__vec__Vec_LT_T_GT__GT_7reserve17h36095f9d9422ab2dE($$val$val$i,8);
  $$idx$i$i$i$i$i = ((($$val$val$i)) + 8|0);
  $$idx$val$i$i$i$i$i = HEAP32[$$idx$i$i$i$i$i>>2]|0;
  $22 = (($$idx$val$i$i$i$i$i) + 8)|0;
  $23 = HEAP32[$$val$val$i>>2]|0;
  $24 = (($23) + ($$idx$val$i$i$i$i$i)|0);
  $25 = $24;
  $26 = $25;
  HEAP8[$26>>0]=1&255;HEAP8[$26+1>>0]=(1>>8)&255;HEAP8[$26+2>>0]=(1>>16)&255;HEAP8[$26+3>>0]=1>>24;
  $27 = (($25) + 4)|0;
  $28 = $27;
  HEAP8[$28>>0]=0&255;HEAP8[$28+1>>0]=(0>>8)&255;HEAP8[$28+2>>0]=(0>>16)&255;HEAP8[$28+3>>0]=0>>24;
  HEAP32[$$idx$i$i$i$i$i>>2] = $22;
  $$val$val$i156 = HEAP32[$1>>2]|0;
  __ZN39__LT_collections__vec__Vec_LT_T_GT__GT_7reserve17h36095f9d9422ab2dE($$val$val$i156,8);
  $$idx$i$i$i$i$i157 = ((($$val$val$i156)) + 8|0);
  $$idx$val$i$i$i$i$i158 = HEAP32[$$idx$i$i$i$i$i157>>2]|0;
  $29 = (($$idx$val$i$i$i$i$i158) + 8)|0;
  $30 = HEAP32[$$val$val$i156>>2]|0;
  $31 = (($30) + ($$idx$val$i$i$i$i$i158)|0);
  $32 = $31;
  $33 = $32;
  HEAP8[$33>>0]=$2&255;HEAP8[$33+1>>0]=($2>>8)&255;HEAP8[$33+2>>0]=($2>>16)&255;HEAP8[$33+3>>0]=$2>>24;
  $34 = (($32) + 4)|0;
  $35 = $34;
  HEAP8[$35>>0]=$3&255;HEAP8[$35+1>>0]=($3>>8)&255;HEAP8[$35+2>>0]=($3>>16)&255;HEAP8[$35+3>>0]=$3>>24;
  HEAP32[$$idx$i$i$i$i$i157>>2] = $29;
  $writer$val129$val = HEAP32[$1>>2]|0;
  __ZN39__LT_collections__vec__Vec_LT_T_GT__GT_7reserve17h36095f9d9422ab2dE($writer$val129$val,7);
  $$idx$i$i$i$i = ((($writer$val129$val)) + 8|0);
  $$idx$val$i$i$i$i = HEAP32[$$idx$i$i$i$i>>2]|0;
  $36 = (($$idx$val$i$i$i$i) + 7)|0;
  $37 = HEAP32[$writer$val129$val>>2]|0;
  $38 = (($37) + ($$idx$val$i$i$i$i)|0);
  ;HEAP8[$38>>0]=0|0;HEAP8[$38+1>>0]=0|0;HEAP8[$38+2>>0]=0|0;HEAP8[$38+3>>0]=0|0;HEAP8[$38+4>>0]=0|0;HEAP8[$38+5>>0]=0|0;HEAP8[$38+6>>0]=0|0;
  HEAP32[$$idx$i$i$i$i>>2] = $36;
  $writer$val128$val = HEAP32[$1>>2]|0;
  __ZN39__LT_collections__vec__Vec_LT_T_GT__GT_7reserve17h36095f9d9422ab2dE($writer$val128$val,1);
  $$idx$i$i$i$i186 = ((($writer$val128$val)) + 8|0);
  $$idx$val$i$i$i$i187 = HEAP32[$$idx$i$i$i$i186>>2]|0;
  $39 = (($$idx$val$i$i$i$i187) + 1)|0;
  $40 = HEAP32[$writer$val128$val>>2]|0;
  $41 = (($40) + ($$idx$val$i$i$i$i187)|0);
  HEAP8[$41>>0] = 0;
  HEAP32[$$idx$i$i$i$i186>>2] = $39;
  $writer$val127$val = HEAP32[$1>>2]|0;
  __ZN39__LT_collections__vec__Vec_LT_T_GT__GT_7reserve17h36095f9d9422ab2dE($writer$val127$val,16);
  $$idx$i$i$i$i202 = ((($writer$val127$val)) + 8|0);
  $$idx$val$i$i$i$i203 = HEAP32[$$idx$i$i$i$i202>>2]|0;
  $42 = (($$idx$val$i$i$i$i203) + 16)|0;
  $43 = HEAP32[$writer$val127$val>>2]|0;
  $44 = (($43) + ($$idx$val$i$i$i$i203)|0);
  dest=$44; stop=dest+16|0; do { HEAP8[dest>>0]=0|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
  HEAP32[$$idx$i$i$i$i202>>2] = $42;
  $18 = 0;$21 = 0;
  $16 = $0;
  $17 = $16;
  HEAP32[$17>>2] = $18;
  $19 = (($16) + 4)|0;
  $20 = $19;
  HEAP32[$20>>2] = $21;
  STACKTOP = sp;return;
 }
}
function __ZN11webplatform11rust_caller17h7577c6095df88f42E($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$idx$i = 0, $$idx$val$i = 0, $$idx15$i = 0, $$idx15$val$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $cond$i$i$i$i = 0, $cond$i$i$i20$i = 0, $personalityslot$sroa$0$1$i = 0;
 var $personalityslot$sroa$6$1$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $$idx$i = ((($0)) + 8|0);
 $$idx$val$i = HEAP32[$$idx$i>>2]|0;
 $3 = ((($$idx$val$i)) + 8|0);
 $4 = HEAP32[$3>>2]|0;
 $cond$i$i$i$i = ($4|0)==(0);
 if (!($cond$i$i$i$i)) {
  __ZN4core6result13unwrap_failed17he96585155b596c01E();
  // unreachable;
 }
 HEAP32[$3>>2] = -1;
 $$idx15$i = ((($0)) + 12|0);
 $$idx15$val$i = HEAP32[$$idx15$i>>2]|0;
 $5 = ((($$idx15$val$i)) + 8|0);
 $6 = HEAP32[$5>>2]|0;
 $cond$i$i$i20$i = ($6|0)==(0);
 if (!($cond$i$i$i20$i)) {
  __THREW__ = 0;
  invoke_v(212);
  $7 = __THREW__; __THREW__ = 0;
  $8 = ___cxa_find_matching_catch_2()|0;
  $9 = tempRet0;
  $personalityslot$sroa$0$1$i = $8;$personalityslot$sroa$6$1$i = $9;
  HEAP32[$3>>2] = 0;
  ___resumeException($personalityslot$sroa$0$1$i|0);
  // unreachable;
 }
 $10 = ((($$idx$val$i)) + 12|0);
 HEAP32[$5>>2] = -1;
 $11 = ((($$idx15$val$i)) + 16|0);
 __THREW__ = 0;
 invoke_viiidd(213,($0|0),($10|0),($11|0),300.0,550.0);
 $12 = __THREW__; __THREW__ = 0;
 $13 = $12&1;
 if (!($13)) {
  HEAP32[$5>>2] = 0;
  HEAP32[$3>>2] = 0;
  return;
 }
 $14 = ___cxa_find_matching_catch_2()|0;
 $15 = tempRet0;
 HEAP32[$5>>2] = 0;
 $personalityslot$sroa$0$1$i = $14;$personalityslot$sroa$6$1$i = $15;
 HEAP32[$3>>2] = 0;
 ___resumeException($personalityslot$sroa$0$1$i|0);
 // unreachable;
}
function __ZN11webplatform11rust_caller17hd6172d8c9c3ba161E($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $_12 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $_12 = sp;
 __ZN12physics_test4main28__u7b__u7b_closure_u7d__u7d_17hf927d76feac1da6bE($0,$_12);
 STACKTOP = sp;return;
}
function __ZN155__LT_ncollide_pipeline__narrow_phase__contact_generator__composite_shape_shape_contact_generator__CompositeShapeShapeContactGenerator_LT_P_C__u20_M_GT__GT_3new17h5f460a75bd32dbc8E($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $_1$sroa$10$0$$sroa_idx44 = 0, $_1$sroa$11$0$$sroa_idx46 = 0, $_1$sroa$12$0$$sroa_idx48 = 0;
 var $_1$sroa$4$0$$sroa_idx27 = 0, $_1$sroa$5$0$$sroa_idx30 = 0, $_1$sroa$6$0$$sroa_idx32 = 0, $_1$sroa$7$0$$sroa_idx34 = 0, $_1$sroa$8 = 0, $_1$sroa$8$0$$sroa_idx = 0, $_1$sroa$9 = 0, $_1$sroa$9$0$$sroa_idx = 0, $_13$i = 0, $_17$i = 0, $_4$sroa$0$0$$sroa_idx = 0, $_5$sroa$4$0$$sroa_idx16 = 0, $_5$sroa$5$0$$sroa_idx18 = 0, $not$$i$i$i$i$i = 0, $personalityslot$sroa$0$0$i = 0, $personalityslot$sroa$0$1$i = 0, $personalityslot$sroa$7$0$i = 0, $personalityslot$sroa$7$1$i = 0, label = 0, sp = 0;
 var temp_Int32x4_ptr = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $_13$i = sp + 48|0;
 $_17$i = sp + 32|0;
 $_1$sroa$8 = sp + 16|0;
 $_1$sroa$9 = sp;
 $1 = (_malloc(96)|0);
 $2 = ($1|0)==(0|0);
 if ($2) {
  __THREW__ = 0;
  invoke_v(210);
  $3 = __THREW__; __THREW__ = 0;
  $4 = ___cxa_find_matching_catch_2()|0;
  $5 = tempRet0;
  $personalityslot$sroa$0$1$i = $4;$personalityslot$sroa$7$1$i = $5;
  ___resumeException($personalityslot$sroa$0$1$i|0);
  // unreachable;
 }
 $6 = $1;
 __THREW__ = 0;
 invoke_vii(211,($_13$i|0),8);
 $7 = __THREW__; __THREW__ = 0;
 $8 = $7&1;
 if ($8) {
  $11 = ___cxa_find_matching_catch_2()|0;
  $12 = tempRet0;
  $personalityslot$sroa$0$0$i = $11;$personalityslot$sroa$7$0$i = $12;
 } else {
  __THREW__ = 0;
  invoke_vii(211,($_17$i|0),8);
  $9 = __THREW__; __THREW__ = 0;
  $10 = $9&1;
  if (!($10)) {
   ;HEAP32[$_1$sroa$8>>2]=HEAP32[$_13$i>>2]|0;HEAP32[$_1$sroa$8+4>>2]=HEAP32[$_13$i+4>>2]|0;HEAP32[$_1$sroa$8+8>>2]=HEAP32[$_13$i+8>>2]|0;
   ;HEAP32[$_1$sroa$9>>2]=HEAP32[$_17$i>>2]|0;HEAP32[$_1$sroa$9+4>>2]=HEAP32[$_17$i+4>>2]|0;HEAP32[$_1$sroa$9+8>>2]=HEAP32[$_17$i+8>>2]|0;
   HEAP32[$0>>2] = 0;
   $_1$sroa$4$0$$sroa_idx27 = ((($0)) + 4|0);
   HEAP32[$_1$sroa$4$0$$sroa_idx27>>2] = $6;
   $_1$sroa$5$0$$sroa_idx30 = ((($0)) + 8|0);
   HEAP32[$_1$sroa$5$0$$sroa_idx30>>2] = 8;
   $_1$sroa$6$0$$sroa_idx32 = ((($0)) + 12|0);
   HEAP32[$_1$sroa$6$0$$sroa_idx32>>2] = 0;
   $_1$sroa$7$0$$sroa_idx34 = ((($0)) + 16|0);
   HEAP32[$_1$sroa$7$0$$sroa_idx34>>2] = 7;
   $_1$sroa$8$0$$sroa_idx = ((($0)) + 20|0);
   ;HEAP32[$_1$sroa$8$0$$sroa_idx>>2]=HEAP32[$_1$sroa$8>>2]|0;HEAP32[$_1$sroa$8$0$$sroa_idx+4>>2]=HEAP32[$_1$sroa$8+4>>2]|0;HEAP32[$_1$sroa$8$0$$sroa_idx+8>>2]=HEAP32[$_1$sroa$8+8>>2]|0;
   $_1$sroa$9$0$$sroa_idx = ((($0)) + 32|0);
   ;HEAP32[$_1$sroa$9$0$$sroa_idx>>2]=HEAP32[$_1$sroa$9>>2]|0;HEAP32[$_1$sroa$9$0$$sroa_idx+4>>2]=HEAP32[$_1$sroa$9+4>>2]|0;HEAP32[$_1$sroa$9$0$$sroa_idx+8>>2]=HEAP32[$_1$sroa$9+8>>2]|0;
   $_1$sroa$10$0$$sroa_idx44 = ((($0)) + 44|0);
   HEAP32[$_1$sroa$10$0$$sroa_idx44>>2] = 0;
   $_1$sroa$11$0$$sroa_idx46 = ((($0)) + 48|0);
   HEAP32[$_1$sroa$11$0$$sroa_idx46>>2] = 8;
   $_1$sroa$12$0$$sroa_idx48 = ((($0)) + 52|0);
   HEAP32[$_1$sroa$12$0$$sroa_idx48>>2] = 5;
   $_4$sroa$0$0$$sroa_idx = ((($0)) + 56|0);
   temp_Int32x4_ptr = $_4$sroa$0$0$$sroa_idx;SIMD_Int32x4_store(HEAPU8, temp_Int32x4_ptr, SIMD_Int32x4(1,0,0,1));
   $_5$sroa$4$0$$sroa_idx16 = ((($0)) + 72|0);
   HEAP32[$_5$sroa$4$0$$sroa_idx16>>2] = 0;
   $_5$sroa$5$0$$sroa_idx18 = ((($0)) + 76|0);
   HEAP32[$_5$sroa$5$0$$sroa_idx18>>2] = 0;
   STACKTOP = sp;return;
  }
  $13 = ___cxa_find_matching_catch_2()|0;
  $14 = tempRet0;
  $15 = ((($_13$i)) + 4|0);
  $16 = HEAP32[$15>>2]|0;
  $not$$i$i$i$i$i = ($16|0)==(0);
  if ($not$$i$i$i$i$i) {
   $personalityslot$sroa$0$0$i = $13;$personalityslot$sroa$7$0$i = $14;
  } else {
   $17 = HEAP32[$_13$i>>2]|0;
   _free($17);
   $personalityslot$sroa$0$0$i = $13;$personalityslot$sroa$7$0$i = $14;
  }
 }
 _free($1);
 $personalityslot$sroa$0$1$i = $personalityslot$sroa$0$0$i;$personalityslot$sroa$7$1$i = $personalityslot$sroa$7$0$i;
 ___resumeException($personalityslot$sroa$0$1$i|0);
 // unreachable;
}
function __ZN155__LT_ncollide_pipeline__narrow_phase__contact_generator__composite_shape_shape_contact_generator__CompositeShapeShapeContactGenerator_LT_P_C__u20_M_GT__GT_9do_update17h121b4dfd04ed8217E($0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 $7 = $7|0;
 $8 = $8|0;
 $9 = +$9;
 $10 = $10|0;
 var $$fca$0$extract2493$i$i = 0, $$fca$0$extract4109$i = 0, $$fca$1$extract2695$i$i = 0, $$fca$1$extract6110$i = 0, $$idx$i$i = 0, $$idx$i$pre$phiZZZ2D = 0, $$idx$i30$i = 0, $$idx$i78 = 0, $$idx$val$i = 0, $$idx$val$i$i = 0, $$idx$val$i$i$i = 0, $$idx$val$i31$i = 0, $$idx$val$i65 = 0, $$idx$val$i69 = 0.0, $$idx$val$i79 = 0, $$idx1$i$i$i$i = 0, $$idx1$i$pre$phiZZZ2D = 0, $$idx1$val$i = 0, $$idx1$val$i$i$i$i = 0, $$idx1$val$i71 = 0.0;
 var $$idx1$val$val$i$i = 0, $$idx1$val$val$i$i$i$i = 0, $$idx1$val$val$i$i$i$i57 = 0, $$idx1$val$val$i$i$i1$i = 0, $$idx1$val$val$i$i$i34$i = 0, $$idx11$val$i$i = 0, $$idx12$val$i$i = 0, $$idx13$i$i = 0, $$idx13$val$i$i = 0, $$idx14$i$i = 0, $$idx14$val$i$i = 0, $$idx2$i = 0, $$idx2$val$i = 0.0, $$idx21$val$i$i = 0, $$idx22$val$i$i = 0, $$idx3$i = 0, $$idx3$val$i = 0.0, $$idx32$val$i$i = 0, $$idx33$val$i$i = 0, $$idx36$val$i$i = 0;
 var $$idx37$val$i$i = 0, $$idx4$val$i = 0.0, $$idx40$val$i$i = 0, $$idx41$val$i$i = 0, $$idx48$val$i$i = 0, $$idx5$val$i = 0, $$idx5$val$i73 = 0.0, $$idx50$i$i = 0, $$idx50$val$i$i = 0, $$idx51$i$i = 0, $$idx51$val$i$i = 0, $$idx52$i$i = 0, $$idx52$val$i$i = 0, $$idx53$i$i = 0, $$idx53$val$i$i = 0, $$idx55$val$i$i = 0, $$idx58$val$i$i = 0, $$idx59$val$i$i = 0, $$idx6$val$i = 0, $$idx6$val$i74 = 0.0;
 var $$idx66$val$i$i = 0, $$idx67$val$i$i = 0, $$idx7$i = 0, $$idx7$val$i = 0, $$idx7$val$i75 = 0.0, $$idx70$val$i$i = 0, $$idx71$val$i$i = 0, $$idx78$val$i$i = 0, $$idx79$val$i$i = 0, $$idx8$i = 0, $$idx8$val$i = 0, $$idx9$i = 0, $$idx9$val$i = 0, $$pre = 0, $$pre$i = 0, $$pre$i$i = 0, $$pre$phiZ2D = 0, $$pre2186 = 0, $$pre2187 = 0, $$pre757 = 0;
 var $$pre761 = 0, $$val = 0, $$val$i$i = 0, $$val15$i$i = 0, $$val17$i$i = 0, $$val30$i$i = 0, $$val54$i$i = 0, $$val56$i$i = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0;
 var $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0;
 var $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0.0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0;
 var $148 = 0, $149 = 0.0, $15 = 0.0, $150 = 0.0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0.0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0;
 var $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0.0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0.0, $180 = 0, $181 = 0, $182 = 0, $183 = 0;
 var $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0.0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0.0, $200 = 0, $201 = 0;
 var $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0.0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0.0;
 var $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0.0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0;
 var $239 = 0, $24 = 0.0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0.0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0;
 var $257 = 0, $258 = 0, $259 = 0, $26 = 0.0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0.0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0;
 var $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0.0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0.0, $290 = 0, $291 = 0, $292 = 0;
 var $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $30 = 0.0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0.0, $310 = 0;
 var $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0.0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0;
 var $33 = 0.0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0.0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0;
 var $348 = 0, $349 = 0, $35 = 0.0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0.0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0;
 var $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0.0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0.0, $380 = 0, $381 = 0, $382 = 0, $383 = 0;
 var $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $39 = 0.0, $40 = 0.0, $41 = 0.0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0.0, $49 = 0.0, $50 = 0.0, $51 = 0.0, $52 = 0, $53 = 0;
 var $54 = 0.0, $55 = 0.0, $56 = 0.0, $57 = 0.0, $58 = 0, $59 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0;
 var $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0;
 var $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $_10$i$i = 0, $_10$sroa$4$0$_5$sroa$0$0$$sroa_cast3$i$sroa_idx55$i = 0, $_10$sroa$5$0$_5$sroa$0$0$$sroa_cast3$i$sroa_idx57$i = 0, $_10$sroa$6$0$_5$sroa$0$0$$sroa_cast3$i$sroa_idx59$i = 0, $_14$sroa$4$0$$sroa_idx7$i$i$i = 0, $_14$sroa$4$0$copyload$i$i$i = 0, $_14$sroa$6$0$$sroa_idx9$i$i$i = 0, $_14$sroa$6$0$copyload$i$i$i = 0, $_22$sroa$0$0$$sroa_idx$i$i = 0, $_22$sroa$4$0$$sroa_idx18$i$i = 0, $_22$sroa$5$0$$sroa_idx20$i$i = 0, $_23$sroa$0$0$copyload = 0.0, $_23$sroa$4$0$$sroa_idx = 0, $_23$sroa$4$0$copyload = 0.0;
 var $_23$sroa$5$0$$sroa_idx = 0, $_23$sroa$5$0$copyload = 0.0, $_23$sroa$6$0$$sroa_idx = 0, $_23$sroa$6$0$copyload = 0.0, $_23$sroa$7$0$$sroa_cast137 = 0, $_23$sroa$7$0$copyload = 0.0, $_23$sroa$8$0$$sroa_idx = 0, $_23$sroa$8$0$copyload = 0.0, $_26 = 0, $_4$sroa$0$0$copyload$i$i = 0.0, $_4$sroa$4$0$$sroa_idx39$i$i = 0, $_4$sroa$4$0$copyload$i$i186 = 0.0, $_4$sroa$5$0$$sroa_idx41$i$i = 0, $_4$sroa$5$0$copyload$i$i187 = 0.0, $_4$sroa$6$0$$sroa_idx43$i$i = 0, $_4$sroa$6$0$copyload$i$i = 0.0, $_4$sroa$7$0$$sroa_idx45$i$i = 0, $_4$sroa$7$0$copyload$i$i = 0.0, $_4$sroa$8$0$$sroa_idx47$i$i = 0, $_4$sroa$8$0$copyload$i$i = 0.0;
 var $_87 = 0, $_97 = 0, $detector = 0, $dispatcher = 0, $eh$lpad$body$i$index11Z2D = 0, $eh$lpad$body$i$indexZ2D = 0, $eh$lpad$body$sink$index3Z2D = 0, $eh$lpad$body$sink$indexZ2D = 0, $g2 = 0, $iter$sroa$0$0109$i$i = 0, $iter$sroa$0$0109$i$i$phi = 0, $iter2$sroa$0$0$in476 = 0, $ls_aabb2 = 0, $ls_m2 = 0, $m2 = 0, $new_detector$i$i = 0, $new_detector$i$sroa_raw_idx$i = 0, $newhash$i$i = 0, $newhash$idx$val$i$i = 0, $newhash$idx48$i$i = 0;
 var $newhash$idx48$val$i$i = 0, $newnext$i$i = 0, $newnext$idx$val$i$i = 0, $newnext$idx54$i$i = 0, $newnext$idx54$val$i$i = 0, $no$0$i$i = 0, $not$$i$i$i$i$i$i = 0, $not$$i$i$i$i56$i$i = 0, $not$$i$i$i$i59$i$i = 0, $not$$i$i$i$i62$i$i = 0, $o$0$i$i = 0, $obji$0$i$i = 0, $or$cond$i$i$i = 0, $or$cond$i$i8$i = 0, $personalityslot$sroa$0$0$i = 0, $personalityslot$sroa$5$0$i = 0, $phitmp = 0, $pos$0$i$i = 0, $pos$1$i$i = 0, $prediction = 0;
 var $swap = 0, $switch$i = 0, $switch3tmp$i$i$i$i = 0, $switch7tmp = 0, $switchtmp$i = 0, $switchtmp$i$i$i = 0, $t$i$i$i = 0, $t$i69$i$i = 0, $tmp$i$i$i$i$i$i = 0, $visitor = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(240|0);
 $t$i69$i$i = sp + 208|0;
 $t$i$i$i = sp + 192|0;
 $newhash$i$i = sp + 176|0;
 $newnext$i$i = sp + 160|0;
 $new_detector$i$i = sp + 152|0;
 $_10$i$i = sp + 136|0;
 $tmp$i$i$i$i$i$i = sp + 120|0;
 $dispatcher = sp + 112|0;
 $m2 = sp + 228|0;
 $g2 = sp + 104|0;
 $prediction = sp + 224|0;
 $swap = sp + 232|0;
 $ls_m2 = sp + 80|0;
 $ls_aabb2 = sp + 64|0;
 $_26 = sp + 48|0;
 $visitor = sp + 40|0;
 $detector = sp + 220|0;
 $_87 = sp + 24|0;
 $_97 = sp;
 HEAP32[$dispatcher>>2] = $1;
 $11 = ((($dispatcher)) + 4|0);
 HEAP32[$11>>2] = $2;
 HEAP32[$m2>>2] = $6;
 HEAP32[$g2>>2] = $7;
 $12 = ((($g2)) + 4|0);
 HEAP32[$12>>2] = $8;
 HEAPF32[$prediction>>2] = $9;
 $13 = $10&1;
 HEAP8[$swap>>0] = $13;
 $_4$sroa$0$0$copyload$i$i = +HEAPF32[$3>>2];
 $_4$sroa$4$0$$sroa_idx39$i$i = ((($3)) + 4|0);
 $_4$sroa$4$0$copyload$i$i186 = +HEAPF32[$_4$sroa$4$0$$sroa_idx39$i$i>>2];
 $_4$sroa$5$0$$sroa_idx41$i$i = ((($3)) + 8|0);
 $_4$sroa$5$0$copyload$i$i187 = +HEAPF32[$_4$sroa$5$0$$sroa_idx41$i$i>>2];
 $_4$sroa$6$0$$sroa_idx43$i$i = ((($3)) + 12|0);
 $_4$sroa$6$0$copyload$i$i = +HEAPF32[$_4$sroa$6$0$$sroa_idx43$i$i>>2];
 $_4$sroa$7$0$$sroa_idx45$i$i = ((($3)) + 16|0);
 $_4$sroa$7$0$copyload$i$i = +HEAPF32[$_4$sroa$7$0$$sroa_idx45$i$i>>2];
 $_4$sroa$8$0$$sroa_idx47$i$i = ((($3)) + 20|0);
 $_4$sroa$8$0$copyload$i$i = +HEAPF32[$_4$sroa$8$0$$sroa_idx47$i$i>>2];
 $14 = -$_4$sroa$7$0$copyload$i$i;
 $15 = -$_4$sroa$8$0$copyload$i$i;
 $16 = $_4$sroa$0$0$copyload$i$i * $14;
 $17 = $_4$sroa$4$0$copyload$i$i186 * $15;
 $18 = $16 + $17;
 $19 = $_4$sroa$5$0$copyload$i$i187 * $14;
 $20 = $_4$sroa$6$0$copyload$i$i * $15;
 $21 = $19 + $20;
 $_23$sroa$0$0$copyload = +HEAPF32[$6>>2];
 $_23$sroa$4$0$$sroa_idx = ((($6)) + 4|0);
 $_23$sroa$4$0$copyload = +HEAPF32[$_23$sroa$4$0$$sroa_idx>>2];
 $_23$sroa$5$0$$sroa_idx = ((($6)) + 8|0);
 $_23$sroa$5$0$copyload = +HEAPF32[$_23$sroa$5$0$$sroa_idx>>2];
 $_23$sroa$6$0$$sroa_idx = ((($6)) + 12|0);
 $_23$sroa$6$0$copyload = +HEAPF32[$_23$sroa$6$0$$sroa_idx>>2];
 $_23$sroa$7$0$$sroa_cast137 = ((($6)) + 16|0);
 $_23$sroa$7$0$copyload = +HEAPF32[$_23$sroa$7$0$$sroa_cast137>>2];
 $_23$sroa$8$0$$sroa_idx = ((($6)) + 20|0);
 $_23$sroa$8$0$copyload = +HEAPF32[$_23$sroa$8$0$$sroa_idx>>2];
 $22 = $_4$sroa$0$0$copyload$i$i * $_23$sroa$7$0$copyload;
 $23 = $_4$sroa$4$0$copyload$i$i186 * $_23$sroa$8$0$copyload;
 $24 = $22 + $23;
 $25 = $_4$sroa$5$0$copyload$i$i187 * $_23$sroa$7$0$copyload;
 $26 = $_4$sroa$6$0$copyload$i$i * $_23$sroa$8$0$copyload;
 $27 = $25 + $26;
 $28 = $18 + $24;
 $29 = $21 + $27;
 $30 = $_4$sroa$0$0$copyload$i$i * $_23$sroa$0$0$copyload;
 $31 = $_4$sroa$4$0$copyload$i$i186 * $_23$sroa$4$0$copyload;
 $32 = $30 + $31;
 $33 = $_4$sroa$0$0$copyload$i$i * $_23$sroa$5$0$copyload;
 $34 = $_4$sroa$4$0$copyload$i$i186 * $_23$sroa$6$0$copyload;
 $35 = $33 + $34;
 $36 = $_4$sroa$5$0$copyload$i$i187 * $_23$sroa$0$0$copyload;
 $37 = $_4$sroa$6$0$copyload$i$i * $_23$sroa$4$0$copyload;
 $38 = $36 + $37;
 $39 = $_4$sroa$5$0$copyload$i$i187 * $_23$sroa$5$0$copyload;
 $40 = $_4$sroa$6$0$copyload$i$i * $_23$sroa$6$0$copyload;
 $41 = $39 + $40;
 HEAPF32[$ls_m2>>2] = $32;
 $_10$sroa$4$0$_5$sroa$0$0$$sroa_cast3$i$sroa_idx55$i = ((($ls_m2)) + 4|0);
 HEAPF32[$_10$sroa$4$0$_5$sroa$0$0$$sroa_cast3$i$sroa_idx55$i>>2] = $38;
 $_10$sroa$5$0$_5$sroa$0$0$$sroa_cast3$i$sroa_idx57$i = ((($ls_m2)) + 8|0);
 HEAPF32[$_10$sroa$5$0$_5$sroa$0$0$$sroa_cast3$i$sroa_idx57$i>>2] = $35;
 $_10$sroa$6$0$_5$sroa$0$0$$sroa_cast3$i$sroa_idx59$i = ((($ls_m2)) + 12|0);
 HEAPF32[$_10$sroa$6$0$_5$sroa$0$0$$sroa_cast3$i$sroa_idx59$i>>2] = $41;
 $42 = ((($ls_m2)) + 16|0);
 HEAPF32[$42>>2] = $28;
 $43 = ((($ls_m2)) + 20|0);
 HEAPF32[$43>>2] = $29;
 $44 = ((($8)) + 12|0);
 $45 = HEAP32[$44>>2]|0;
 FUNCTION_TABLE_viii[$45 & 511]($_26,$7,$ls_m2);
 $46 = !($9 >= 0.0);
 if ($46) {
  __ZN3std9panicking11begin_panic17h9936a195de5ffc4dE(11057,38,5412);
  // unreachable;
 }
 $47 = ((($_26)) + 4|0);
 $48 = +HEAPF32[$_26>>2];
 $49 = +HEAPF32[$47>>2];
 $50 = $48 - $9;
 $51 = $49 - $9;
 $52 = ((($_26)) + 8|0);
 $53 = ((($_26)) + 12|0);
 $54 = +HEAPF32[$52>>2];
 $55 = +HEAPF32[$53>>2];
 $56 = $54 + $9;
 $57 = $55 + $9;
 HEAPF32[$ls_aabb2>>2] = $50;
 $58 = ((($ls_aabb2)) + 4|0);
 HEAPF32[$58>>2] = $51;
 $59 = ((($ls_aabb2)) + 8|0);
 HEAPF32[$59>>2] = $56;
 $60 = ((($ls_aabb2)) + 12|0);
 HEAPF32[$60>>2] = $57;
 $61 = ((($0)) + 68|0);
 HEAP32[$visitor>>2] = $ls_aabb2;
 $62 = ((($visitor)) + 4|0);
 HEAP32[$62>>2] = $61;
 $63 = ((($5)) + 24|0);
 $64 = HEAP32[$63>>2]|0;
 $65 = (FUNCTION_TABLE_ii[$64 & 511]($4)|0);
 $66 = HEAP32[$65>>2]|0;
 $switch$i = ($66|0)==(1);
 if ($switch$i) {
  $67 = ((($65)) + 4|0);
  __ZN73__LT_ncollide_geometry__partitioning__bvt__BVTNode_LT_B_C__u20_BV_GT__GT_5visit17he0ab4eeb7498f34dE($67,$visitor);
 }
 $68 = HEAP32[$61>>2]|0;
 $69 = ((($0)) + 76|0);
 $70 = HEAP32[$69>>2]|0;
 $71 = (($68) + ($70<<2)|0);
 $72 = ($70|0)==(0);
 L7: do {
  if ($72) {
   $$pre2186 = ((($0)) + 4|0);
   $$pre2187 = ((($0)) + 12|0);
   $$idx$i$pre$phiZZZ2D = $$pre2186;$$idx1$i$pre$phiZZZ2D = $$pre2187;
  } else {
   $73 = $swap;
   $74 = $dispatcher;
   $75 = $g2;
   $76 = ((($0)) + 16|0);
   $$idx14$i$i = ((($0)) + 28|0);
   $$idx13$i$i = ((($0)) + 20|0);
   $77 = ((($_10$i$i)) + 4|0);
   $78 = ((($_10$i$i)) + 8|0);
   $79 = ((($_10$i$i)) + 12|0);
   $80 = ((($5)) + 12|0);
   $new_detector$i$sroa_raw_idx$i = ((($new_detector$i$i)) + 4|0);
   $81 = ((($0)) + 44|0);
   $82 = ((($0)) + 52|0);
   $$idx9$i = ((($0)) + 40|0);
   $$idx8$i = ((($0)) + 32|0);
   $83 = ((($0)) + 4|0);
   $84 = ((($0)) + 12|0);
   $$idx$i30$i = ((($0)) + 8|0);
   $85 = ((($0)) + 48|0);
   $86 = ((($0)) + 20|0);
   $87 = ((($0)) + 32|0);
   $88 = ((($newnext$i$i)) + 4|0);
   $89 = ((($newhash$i$i)) + 4|0);
   $$idx$i$i = ((($0)) + 4|0);
   $newhash$idx48$i$i = ((($newhash$i$i)) + 8|0);
   $newnext$idx54$i$i = ((($newnext$i$i)) + 8|0);
   $91 = $68;
   L10: while(1) {
    $90 = ((($91)) + 4|0);
    $92 = HEAP32[$91>>2]|0;
    $93 = $92 << 15;
    $94 = $93 ^ -1;
    $95 = (($92) + ($94))|0;
    $96 = $95 >>> 10;
    $97 = $96 ^ $95;
    $98 = ($97*9)|0;
    $99 = $98 >>> 6;
    $100 = $99 ^ $98;
    $101 = $100 << 11;
    $102 = $101 ^ -1;
    $103 = (($100) + ($102))|0;
    $104 = $103 >>> 16;
    $105 = $104 ^ $103;
    $106 = HEAP32[$76>>2]|0;
    $107 = $105 & $106;
    $$idx14$val$i$i = HEAP32[$$idx14$i$i>>2]|0;
    $108 = ($$idx14$val$i$i>>>0)>($107>>>0);
    if (!($108)) {
     label = 12;
     break;
    }
    $$idx13$val$i$i = HEAP32[$$idx13$i$i>>2]|0;
    $111 = (($$idx13$val$i$i) + ($107<<2)|0);
    $112 = HEAP32[$111>>2]|0;
    $113 = ($112|0)==(-1);
    L13: do {
     if ($113) {
      label = 25;
     } else {
      $$idx22$val$i$i = HEAP32[$84>>2]|0;
      $114 = ($$idx22$val$i$i>>>0)>($112>>>0);
      if (!($114)) {
       label = 15;
       break L10;
      }
      $$idx21$val$i$i = HEAP32[$$idx$i$i>>2]|0;
      $116 = (($$idx21$val$i$i) + (($112*12)|0)|0);
      $$val17$i$i = HEAP32[$116>>2]|0;
      $117 = ($$val17$i$i|0)==($92|0);
      if ($117) {
       $pos$1$i$i = $112;
      } else {
       $$idx12$val$i$i = HEAP32[$$idx9$i>>2]|0;
       $$idx11$val$i$i = HEAP32[$$idx8$i>>2]|0;
       $pos$0$i$i = $112;
       while(1) {
        $118 = ($$idx12$val$i$i>>>0)>($pos$0$i$i>>>0);
        if (!($118)) {
         label = 19;
         break L10;
        }
        $120 = (($$idx11$val$i$i) + ($pos$0$i$i<<2)|0);
        $121 = HEAP32[$120>>2]|0;
        $122 = ($121|0)==(-1);
        if ($122) {
         label = 25;
         break L13;
        }
        $123 = ($$idx22$val$i$i>>>0)>($121>>>0);
        if (!($123)) {
         label = 22;
         break L10;
        }
        $125 = (($$idx21$val$i$i) + (($121*12)|0)|0);
        $$val15$i$i = HEAP32[$125>>2]|0;
        $126 = ($$val15$i$i|0)==($92|0);
        if ($126) {
         $pos$1$i$i = $121;
         break;
        } else {
         $pos$0$i$i = $121;
        }
       }
      }
      $140 = ($$idx22$val$i$i>>>0)>($pos$1$i$i>>>0);
      if (!($140)) {
       label = 31;
       break L10;
      }
     }
    } while(0);
    if ((label|0) == 25) {
     label = 0;
     HEAP32[$new_detector$i$i>>2] = 0;
     $127 = HEAP32[$91>>2]|0;
     HEAP32[$_10$i$i>>2] = $73;
     HEAP32[$77>>2] = $new_detector$i$i;
     HEAP32[$78>>2] = $74;
     HEAP32[$79>>2] = $75;
     $128 = HEAP32[$80>>2]|0;
     __THREW__ = 0;
     invoke_viiii($128|0,($4|0),($127|0),($_10$i$i|0),(56|0));
     $129 = __THREW__; __THREW__ = 0;
     $130 = $129&1;
     if ($130) {
      label = 26;
      break;
     }
     $142 = HEAP32[$new_detector$i$i>>2]|0;
     $143 = HEAP32[$new_detector$i$sroa_raw_idx$i>>2]|0;
     $switchtmp$i = ($142|0)==(0|0);
     if (!($switchtmp$i)) {
      $144 = HEAP32[$81>>2]|0;
      $145 = HEAP32[$82>>2]|0;
      $146 = ($144>>>0)<($145>>>0);
      if (!($146)) {
       $147 = HEAP32[$85>>2]|0;
       $148 = $147 << 1;
       HEAP32[$85>>2] = $148;
       $149 = (+($148>>>0));
       $150 = $149 * 0.69999998807907104;
       $151 = (~~(($150))>>>0);
       HEAP32[$82>>2] = $151;
       $152 = (($148) + -1)|0;
       HEAP32[$76>>2] = $152;
       __THREW__ = 0;
       invoke_vii(211,($newhash$i$i|0),($148|0));
       $153 = __THREW__; __THREW__ = 0;
       $154 = $153&1;
       if ($154) {
        label = 52;
        break;
       }
       $155 = HEAP32[$85>>2]|0;
       __THREW__ = 0;
       invoke_vii(211,($newnext$i$i|0),($155|0));
       $156 = __THREW__; __THREW__ = 0;
       $157 = $156&1;
       if ($157) {
        label = 55;
        break;
       }
       $158 = HEAP32[$81>>2]|0;
       $159 = ($158|0)==(0);
       if (!($159)) {
        $newhash$idx48$val$i$i = HEAP32[$newhash$idx48$i$i>>2]|0;
        $newnext$idx54$val$i$i = HEAP32[$newnext$idx54$i$i>>2]|0;
        $newnext$idx$val$i$i = HEAP32[$newnext$i$i>>2]|0;
        $newhash$idx$val$i$i = HEAP32[$newhash$i$i>>2]|0;
        $185 = 1;$iter$sroa$0$0109$i$i = 0;
        while(1) {
         $$idx55$val$i$i = HEAP32[$84>>2]|0;
         $160 = ($$idx55$val$i$i>>>0)>($iter$sroa$0$0109$i$i>>>0);
         if (!($160)) {
          label = 39;
          break L10;
         }
         $$idx$val$i$i = HEAP32[$$idx$i$i>>2]|0;
         $162 = (($$idx$val$i$i) + (($iter$sroa$0$0109$i$i*12)|0)|0);
         $$val$i$i = HEAP32[$162>>2]|0;
         $163 = $$val$i$i << 15;
         $164 = $163 ^ -1;
         $165 = (($$val$i$i) + ($164))|0;
         $166 = $165 >>> 10;
         $167 = $166 ^ $165;
         $168 = ($167*9)|0;
         $169 = $168 >>> 6;
         $170 = $169 ^ $168;
         $171 = $170 << 11;
         $172 = $171 ^ -1;
         $173 = (($170) + ($172))|0;
         $174 = $173 >>> 16;
         $175 = $174 ^ $173;
         $176 = HEAP32[$76>>2]|0;
         $177 = $175 & $176;
         $178 = ($newhash$idx48$val$i$i>>>0)>($177>>>0);
         if (!($178)) {
          label = 41;
          break L10;
         }
         $180 = ($newnext$idx54$val$i$i>>>0)>($iter$sroa$0$0109$i$i>>>0);
         if (!($180)) {
          label = 43;
          break L10;
         }
         $182 = (($newhash$idx$val$i$i) + ($177<<2)|0);
         $183 = HEAP32[$182>>2]|0;
         $184 = (($newnext$idx$val$i$i) + ($iter$sroa$0$0109$i$i<<2)|0);
         HEAP32[$184>>2] = $183;
         HEAP32[$182>>2] = $iter$sroa$0$0109$i$i;
         $186 = ($185>>>0)<($158>>>0);
         $187 = (($185) + 1)|0;
         if ($186) {
          $iter$sroa$0$0109$i$i$phi = $185;$185 = $187;$iter$sroa$0$0109$i$i = $iter$sroa$0$0109$i$i$phi;
         } else {
          break;
         }
        }
       }
       ;HEAP32[$t$i69$i$i>>2]=HEAP32[$newhash$i$i>>2]|0;HEAP32[$t$i69$i$i+4>>2]=HEAP32[$newhash$i$i+4>>2]|0;HEAP32[$t$i69$i$i+8>>2]=HEAP32[$newhash$i$i+8>>2]|0;
       ;HEAP32[$newhash$i$i>>2]=HEAP32[$86>>2]|0;HEAP32[$newhash$i$i+4>>2]=HEAP32[$86+4>>2]|0;HEAP32[$newhash$i$i+8>>2]=HEAP32[$86+8>>2]|0;
       ;HEAP32[$86>>2]=HEAP32[$t$i69$i$i>>2]|0;HEAP32[$86+4>>2]=HEAP32[$t$i69$i$i+4>>2]|0;HEAP32[$86+8>>2]=HEAP32[$t$i69$i$i+8>>2]|0;
       ;HEAP32[$t$i$i$i>>2]=HEAP32[$newnext$i$i>>2]|0;HEAP32[$t$i$i$i+4>>2]=HEAP32[$newnext$i$i+4>>2]|0;HEAP32[$t$i$i$i+8>>2]=HEAP32[$newnext$i$i+8>>2]|0;
       ;HEAP32[$newnext$i$i>>2]=HEAP32[$87>>2]|0;HEAP32[$newnext$i$i+4>>2]=HEAP32[$87+4>>2]|0;HEAP32[$newnext$i$i+8>>2]=HEAP32[$87+8>>2]|0;
       ;HEAP32[$87>>2]=HEAP32[$t$i$i$i>>2]|0;HEAP32[$87+4>>2]=HEAP32[$t$i$i$i+4>>2]|0;HEAP32[$87+8>>2]=HEAP32[$t$i$i$i+8>>2]|0;
       $188 = HEAP32[$88>>2]|0;
       $not$$i$i$i$i62$i$i = ($188|0)==(0);
       if (!($not$$i$i$i$i62$i$i)) {
        $189 = HEAP32[$newnext$i$i>>2]|0;
        _free($189);
       }
       $190 = HEAP32[$89>>2]|0;
       $not$$i$i$i$i59$i$i = ($190|0)==(0);
       if (!($not$$i$i$i$i59$i$i)) {
        $191 = HEAP32[$newhash$i$i>>2]|0;
        _free($191);
       }
      }
      $201 = HEAP32[$76>>2]|0;
      $202 = $201 & $105;
      $$idx5$val$i = HEAP32[$$idx14$i$i>>2]|0;
      $203 = ($$idx5$val$i>>>0)>($202>>>0);
      if (!($203)) {
       label = 57;
       break;
      }
      $205 = HEAP32[$81>>2]|0;
      $$idx9$val$i = HEAP32[$$idx9$i>>2]|0;
      $206 = ($$idx9$val$i>>>0)>($205>>>0);
      if (!($206)) {
       label = 59;
       break;
      }
      $$idx8$val$i = HEAP32[$$idx8$i>>2]|0;
      $$idx$val$i = HEAP32[$$idx13$i$i>>2]|0;
      $208 = (($$idx$val$i) + ($202<<2)|0);
      $209 = HEAP32[$208>>2]|0;
      $210 = (($$idx8$val$i) + ($205<<2)|0);
      HEAP32[$210>>2] = $209;
      $$idx7$val$i = HEAP32[$$idx14$i$i>>2]|0;
      $211 = ($$idx7$val$i>>>0)>($202>>>0);
      if (!($211)) {
       label = 61;
       break;
      }
      $$idx6$val$i = HEAP32[$$idx13$i$i>>2]|0;
      $213 = HEAP32[$81>>2]|0;
      $214 = (($$idx6$val$i) + ($202<<2)|0);
      HEAP32[$214>>2] = $213;
      $215 = $143;
      $216 = HEAP32[$84>>2]|0;
      $$idx$val$i31$i = HEAP32[$$idx$i30$i>>2]|0;
      $217 = ($216|0)==($$idx$val$i31$i|0);
      if ($217) {
       __THREW__ = 0;
       invoke_vi(215,($83|0));
       $218 = __THREW__; __THREW__ = 0;
       $219 = $218&1;
       if ($219) {
        label = 65;
        break;
       }
       $$pre$i$i = HEAP32[$84>>2]|0;
       $228 = $$pre$i$i;
      } else {
       $228 = $216;
      }
      $227 = HEAP32[$83>>2]|0;
      $_22$sroa$0$0$$sroa_idx$i$i = (($227) + (($228*12)|0)|0);
      HEAP32[$_22$sroa$0$0$$sroa_idx$i$i>>2] = $92;
      $_22$sroa$4$0$$sroa_idx18$i$i = (((($227) + (($228*12)|0)|0)) + 4|0);
      HEAP32[$_22$sroa$4$0$$sroa_idx18$i$i>>2] = $142;
      $_22$sroa$5$0$$sroa_idx20$i$i = (((($227) + (($228*12)|0)|0)) + 8|0);
      HEAP32[$_22$sroa$5$0$$sroa_idx20$i$i>>2] = $215;
      $229 = HEAP32[$84>>2]|0;
      $230 = (($229) + 1)|0;
      HEAP32[$84>>2] = $230;
      $231 = HEAP32[$81>>2]|0;
      $232 = (($231) + 1)|0;
      HEAP32[$81>>2] = $232;
      $233 = ($230>>>0)>($231>>>0);
      if (!($233)) {
       label = 70;
       break;
      }
     }
    }
    $234 = ($90|0)==($71|0);
    if ($234) {
     label = 10;
     break;
    } else {
     $91 = $90;
    }
   }
   switch (label|0) {
    case 10: {
     $$pre = HEAP32[$69>>2]|0;
     $109 = ($$pre|0)==(0);
     if ($109) {
      $$idx$i$pre$phiZZZ2D = $$idx$i$i;$$idx1$i$pre$phiZZZ2D = $84;
      break L7;
     }
     HEAP32[$69>>2] = 0;
     $$idx$i$pre$phiZZZ2D = $$idx$i$i;$$idx1$i$pre$phiZZZ2D = $84;
     break L7;
     break;
    }
    case 12: {
     __THREW__ = 0;
     invoke_viiiii(214,(12236|0),104,1349,($107|0),($$idx14$val$i$i|0));
     $110 = __THREW__; __THREW__ = 0;
     label = 73;
     break;
    }
    case 15: {
     __THREW__ = 0;
     invoke_viiiii(214,(12236|0),104,1349,($112|0),($$idx22$val$i$i|0));
     $115 = __THREW__; __THREW__ = 0;
     label = 73;
     break;
    }
    case 19: {
     __THREW__ = 0;
     invoke_viiiii(214,(12236|0),104,1349,($pos$0$i$i|0),($$idx12$val$i$i|0));
     $119 = __THREW__; __THREW__ = 0;
     label = 73;
     break;
    }
    case 22: {
     __THREW__ = 0;
     invoke_viiiii(214,(12236|0),104,1349,($121|0),($$idx22$val$i$i|0));
     $124 = __THREW__; __THREW__ = 0;
     label = 73;
     break;
    }
    case 26: {
     $131 = ___cxa_find_matching_catch_2()|0;
     $132 = tempRet0;
     $133 = HEAP32[$new_detector$i$i>>2]|0;
     $switchtmp$i$i$i = ($133|0)==(0|0);
     if ($switchtmp$i$i$i) {
      $eh$lpad$body$i$index11Z2D = $132;$eh$lpad$body$i$indexZ2D = $131;
      label = 74;
     } else {
      $$idx1$i$i$i$i = ((($new_detector$i$i)) + 4|0);
      $$idx1$val$i$i$i$i = HEAP32[$$idx1$i$i$i$i>>2]|0;
      $$idx1$val$val$i$i$i$i57 = HEAP32[$$idx1$val$i$i$i$i>>2]|0;
      __THREW__ = 0;
      invoke_vi($$idx1$val$val$i$i$i$i57|0,($133|0));
      $134 = __THREW__; __THREW__ = 0;
      $135 = $134&1;
      if ($135) {
       label = 73;
      } else {
       $136 = HEAP32[$$idx1$i$i$i$i>>2]|0;
       $137 = ((($136)) + 4|0);
       $138 = HEAP32[$137>>2]|0;
       $139 = ($138|0)==(0);
       if ($139) {
        $eh$lpad$body$i$index11Z2D = $132;$eh$lpad$body$i$indexZ2D = $131;
        label = 74;
       } else {
        _free($133);
        $eh$lpad$body$i$index11Z2D = $132;$eh$lpad$body$i$indexZ2D = $131;
        label = 74;
       }
      }
     }
     break;
    }
    case 31: {
     __THREW__ = 0;
     invoke_viiiii(214,(12236|0),104,1358,($pos$1$i$i|0),($$idx22$val$i$i|0));
     $141 = __THREW__; __THREW__ = 0;
     label = 73;
     break;
    }
    case 39: {
     __THREW__ = 0;
     invoke_viiiii(214,(12236|0),104,1349,($iter$sroa$0$0109$i$i|0),($$idx55$val$i$i|0));
     $161 = __THREW__; __THREW__ = 0;
     label = 53;
     break;
    }
    case 41: {
     __THREW__ = 0;
     invoke_viiiii(214,(12236|0),104,1349,($177|0),($newhash$idx48$val$i$i|0));
     $179 = __THREW__; __THREW__ = 0;
     label = 53;
     break;
    }
    case 43: {
     __THREW__ = 0;
     invoke_viiiii(214,(12236|0),104,1358,($iter$sroa$0$0109$i$i|0),($newnext$idx54$val$i$i|0));
     $181 = __THREW__; __THREW__ = 0;
     label = 53;
     break;
    }
    case 52: {
     $194 = ___cxa_find_matching_catch_2()|0;
     $195 = tempRet0;
     $$fca$0$extract4109$i = $194;$$fca$1$extract6110$i = $195;
     label = 71;
     break;
    }
    case 55: {
     $199 = ___cxa_find_matching_catch_2()|0;
     $200 = tempRet0;
     $$fca$0$extract2493$i$i = $199;$$fca$1$extract2695$i$i = $200;
     label = 50;
     break;
    }
    case 57: {
     __THREW__ = 0;
     invoke_viiiii(214,(12236|0),104,1349,($202|0),($$idx5$val$i|0));
     $204 = __THREW__; __THREW__ = 0;
     label = 76;
     break;
    }
    case 59: {
     __THREW__ = 0;
     invoke_viiiii(214,(12236|0),104,1358,($205|0),($$idx9$val$i|0));
     $207 = __THREW__; __THREW__ = 0;
     label = 76;
     break;
    }
    case 61: {
     __THREW__ = 0;
     invoke_viiiii(214,(12236|0),104,1358,($202|0),($$idx7$val$i|0));
     $212 = __THREW__; __THREW__ = 0;
     label = 76;
     break;
    }
    case 65: {
     $220 = ___cxa_find_matching_catch_2()|0;
     $221 = tempRet0;
     $$idx1$val$val$i$i$i34$i = HEAP32[$215>>2]|0;
     __THREW__ = 0;
     invoke_vi($$idx1$val$val$i$i$i34$i|0,($142|0));
     $222 = __THREW__; __THREW__ = 0;
     $223 = $222&1;
     if ($223) {
      label = 77;
     } else {
      $224 = ((($215)) + 4|0);
      $225 = HEAP32[$224>>2]|0;
      $226 = ($225|0)==(0);
      if (!($226)) {
       _free($142);
      }
      $personalityslot$sroa$0$0$i = $220;$personalityslot$sroa$5$0$i = $221;
     }
     break;
    }
    case 70: {
     __THREW__ = 0;
     invoke_viiiii(214,(12236|0),104,1358,($231|0),($230|0));
     $235 = __THREW__; __THREW__ = 0;
     label = 77;
     break;
    }
   }
   if ((label|0) == 53) {
    $196 = ___cxa_find_matching_catch_2()|0;
    $197 = tempRet0;
    $198 = HEAP32[$88>>2]|0;
    $not$$i$i$i$i$i$i = ($198|0)==(0);
    if ($not$$i$i$i$i$i$i) {
     $$fca$0$extract2493$i$i = $196;$$fca$1$extract2695$i$i = $197;
     label = 50;
    } else {
     _free($newnext$idx$val$i$i);
     $$fca$0$extract2493$i$i = $196;$$fca$1$extract2695$i$i = $197;
     label = 50;
    }
   }
   else if ((label|0) == 73) {
    $241 = ___cxa_find_matching_catch_2()|0;
    $242 = tempRet0;
    $eh$lpad$body$i$index11Z2D = $242;$eh$lpad$body$i$indexZ2D = $241;
    label = 74;
   }
   else if ((label|0) == 76) {
    $243 = ___cxa_find_matching_catch_2()|0;
    $244 = tempRet0;
    $$fca$0$extract4109$i = $243;$$fca$1$extract6110$i = $244;
    label = 71;
   }
   else if ((label|0) == 77) {
    $245 = ___cxa_find_matching_catch_2()|0;
    $246 = tempRet0;
    $personalityslot$sroa$0$0$i = $245;$personalityslot$sroa$5$0$i = $246;
   }
   if ((label|0) == 50) {
    $192 = HEAP32[$89>>2]|0;
    $not$$i$i$i$i56$i$i = ($192|0)==(0);
    if ($not$$i$i$i$i56$i$i) {
     $$fca$0$extract4109$i = $$fca$0$extract2493$i$i;$$fca$1$extract6110$i = $$fca$1$extract2695$i$i;
     label = 71;
    } else {
     $193 = HEAP32[$newhash$i$i>>2]|0;
     _free($193);
     $$fca$0$extract4109$i = $$fca$0$extract2493$i$i;$$fca$1$extract6110$i = $$fca$1$extract2695$i$i;
     label = 71;
    }
   }
   else if ((label|0) == 74) {
    $personalityslot$sroa$0$0$i = $eh$lpad$body$i$indexZ2D;$personalityslot$sroa$5$0$i = $eh$lpad$body$i$index11Z2D;
   }
   if ((label|0) == 71) {
    $236 = $143;
    $$idx1$val$val$i$i = HEAP32[$236>>2]|0;
    FUNCTION_TABLE_vi[$$idx1$val$val$i$i & 511]($142);
    $237 = $143;
    $238 = ((($237)) + 4|0);
    $239 = HEAP32[$238>>2]|0;
    $240 = ($239|0)==(0);
    if ($240) {
     $personalityslot$sroa$0$0$i = $$fca$0$extract4109$i;$personalityslot$sroa$5$0$i = $$fca$1$extract6110$i;
    } else {
     _free($142);
     $personalityslot$sroa$0$0$i = $$fca$0$extract4109$i;$personalityslot$sroa$5$0$i = $$fca$1$extract6110$i;
    }
   }
   $eh$lpad$body$sink$index3Z2D = $personalityslot$sroa$5$0$i;$eh$lpad$body$sink$indexZ2D = $personalityslot$sroa$0$0$i;
   ___resumeException($eh$lpad$body$sink$indexZ2D|0);
   // unreachable;
  }
 } while(0);
 $$idx$val$i65 = HEAP32[$$idx$i$pre$phiZZZ2D>>2]|0;
 $$idx1$val$i = HEAP32[$$idx1$i$pre$phiZZZ2D>>2]|0;
 $247 = (($$idx$val$i65) + (($$idx1$val$i*12)|0)|0);
 $248 = ($$idx1$val$i|0)==(0);
 L97: do {
  if ($248) {
   $$pre761 = ((($0)) + 64|0);
   $$pre$phiZ2D = $$pre761;
  } else {
   $249 = ((($5)) + 20|0);
   $$idx2$i = ((($_87)) + 8|0);
   $$idx3$i = ((($_87)) + 12|0);
   $$idx7$i = ((($_87)) + 4|0);
   $250 = ((($_97)) + 4|0);
   $251 = ((($_97)) + 8|0);
   $252 = ((($_97)) + 12|0);
   $253 = ((($_97)) + 16|0);
   $254 = ((($_97)) + 20|0);
   $255 = ((($5)) + 16|0);
   $256 = ((($0)) + 56|0);
   $257 = ((($0)) + 64|0);
   $$idx$i78 = ((($0)) + 60|0);
   $iter2$sroa$0$0$in476 = $$idx$val$i65;
   while(1) {
    $258 = ((($iter2$sroa$0$0$in476)) + 12|0);
    $switch7tmp = ($iter2$sroa$0$0$in476|0)==(0|0);
    if ($switch7tmp) {
     $$pre$phiZ2D = $257;
     break L97;
    }
    HEAP32[$detector>>2] = $iter2$sroa$0$0$in476;
    $259 = HEAP32[$iter2$sroa$0$0$in476>>2]|0;
    $260 = HEAP32[$249>>2]|0;
    FUNCTION_TABLE_viii[$260 & 511]($_87,$4,$259);
    $$idx$val$i69 = +HEAPF32[$ls_aabb2>>2];
    $$idx1$val$i71 = +HEAPF32[$58>>2];
    $$idx2$val$i = +HEAPF32[$$idx2$i>>2];
    $$idx3$val$i = +HEAPF32[$$idx3$i>>2];
    $261 = $$idx$val$i69 <= $$idx2$val$i;
    $262 = $$idx1$val$i71 <= $$idx3$val$i;
    $or$cond$i$i$i = $261 & $262;
    if ($or$cond$i$i$i) {
     $$idx4$val$i = +HEAPF32[$59>>2];
     $$idx5$val$i73 = +HEAPF32[$60>>2];
     $$idx6$val$i74 = +HEAPF32[$_87>>2];
     $$idx7$val$i75 = +HEAPF32[$$idx7$i>>2];
     $263 = $$idx4$val$i >= $$idx6$val$i74;
     $264 = $$idx5$val$i73 >= $$idx7$val$i75;
     $or$cond$i$i8$i = $263 & $264;
     if ($or$cond$i$i8$i) {
      HEAP32[$_97>>2] = $swap;
      HEAP32[$250>>2] = $detector;
      HEAP32[$251>>2] = $dispatcher;
      HEAP32[$252>>2] = $m2;
      HEAP32[$253>>2] = $g2;
      HEAP32[$254>>2] = $prediction;
      $265 = HEAP32[$255>>2]|0;
      FUNCTION_TABLE_viiiii[$265 & 511]($4,$259,$3,$_97,80);
     } else {
      label = 85;
     }
    } else {
     label = 85;
    }
    if ((label|0) == 85) {
     label = 0;
     $266 = HEAP32[$257>>2]|0;
     $$idx$val$i79 = HEAP32[$$idx$i78>>2]|0;
     $267 = ($266|0)==($$idx$val$i79|0);
     if ($267) {
      __ZN40__LT_alloc__raw_vec__RawVec_LT_T_GT__GT_6double17he78dc10a992efc57E($256);
      $$pre$i = HEAP32[$257>>2]|0;
      $270 = $$pre$i;
     } else {
      $270 = $266;
     }
     $268 = HEAP32[$256>>2]|0;
     $269 = (($268) + ($270<<2)|0);
     HEAP32[$269>>2] = $259;
     $271 = HEAP32[$257>>2]|0;
     $272 = (($271) + 1)|0;
     HEAP32[$257>>2] = $272;
    }
    $273 = ($258|0)==($247|0);
    if ($273) {
     $$pre$phiZ2D = $257;
     break;
    } else {
     $iter2$sroa$0$0$in476 = $258;
    }
   }
  }
 } while(0);
 $274 = ((($0)) + 56|0);
 $275 = HEAP32[$274>>2]|0;
 $276 = HEAP32[$$pre$phiZ2D>>2]|0;
 $277 = (($275) + ($276<<2)|0);
 $278 = ($276|0)==(0);
 if ($278) {
  STACKTOP = sp;return;
 }
 $279 = ((($0)) + 16|0);
 $$idx52$i$i = ((($0)) + 20|0);
 $$idx53$i$i = ((($0)) + 28|0);
 $$idx50$i$i = ((($0)) + 32|0);
 $$idx51$i$i = ((($0)) + 40|0);
 $280 = ((($0)) + 44|0);
 $282 = $275;
 L116: while(1) {
  $281 = ((($282)) + 4|0);
  $$val = HEAP32[$282>>2]|0;
  $283 = $$val << 15;
  $284 = $283 ^ -1;
  $285 = (($$val) + ($284))|0;
  $286 = $285 >>> 10;
  $287 = $286 ^ $285;
  $288 = ($287*9)|0;
  $289 = $288 >>> 6;
  $290 = $289 ^ $288;
  $291 = $290 << 11;
  $292 = $291 ^ -1;
  $293 = (($290) + ($292))|0;
  $294 = $293 >>> 16;
  $295 = $294 ^ $293;
  $296 = HEAP32[$279>>2]|0;
  $297 = $295 & $296;
  $$idx53$val$i$i = HEAP32[$$idx53$i$i>>2]|0;
  $298 = ($$idx53$val$i$i>>>0)>($297>>>0);
  if (!($298)) {
   label = 94;
   break;
  }
  $$idx52$val$i$i = HEAP32[$$idx52$i$i>>2]|0;
  $299 = (($$idx52$val$i$i) + ($297<<2)|0);
  $300 = HEAP32[$299>>2]|0;
  $301 = ($300|0)==(-1);
  L119: do {
   if (!($301)) {
    $$idx79$val$i$i = HEAP32[$$idx1$i$pre$phiZZZ2D>>2]|0;
    $303 = ($$idx79$val$i$i>>>0)>($300>>>0);
    if (!($303)) {
     label = 98;
     break L116;
    }
    $$idx78$val$i$i = HEAP32[$$idx$i$pre$phiZZZ2D>>2]|0;
    $304 = (($$idx78$val$i$i) + (($300*12)|0)|0);
    $$val56$i$i = HEAP32[$304>>2]|0;
    $305 = ($$val56$i$i|0)==($$val|0);
    $$idx51$val$i$i = HEAP32[$$idx51$i$i>>2]|0;
    if ($305) {
     $306 = ($$idx51$val$i$i>>>0)>($300>>>0);
     if (!($306)) {
      label = 102;
      break L116;
     }
     $$idx50$val$i$i = HEAP32[$$idx50$i$i>>2]|0;
     $307 = (($$idx50$val$i$i) + ($300<<2)|0);
     $308 = HEAP32[$307>>2]|0;
     HEAP32[$299>>2] = $308;
     $$idx71$val$i$i = HEAP32[$$idx51$i$i>>2]|0;
     $309 = ($$idx71$val$i$i>>>0)>($300>>>0);
     if (!($309)) {
      label = 104;
      break L116;
     }
     $$idx70$val$i$i = HEAP32[$$idx50$i$i>>2]|0;
     $310 = (($$idx70$val$i$i) + ($300<<2)|0);
     HEAP32[$310>>2] = -1;
     $obji$0$i$i = $300;
    } else {
     $$idx48$val$i$i = HEAP32[$$idx50$i$i>>2]|0;
     $o$0$i$i = $300;
     while(1) {
      $311 = ($$idx51$val$i$i>>>0)>($o$0$i$i>>>0);
      if (!($311)) {
       label = 107;
       break L116;
      }
      $312 = (($$idx48$val$i$i) + ($o$0$i$i<<2)|0);
      $313 = HEAP32[$312>>2]|0;
      $314 = ($313|0)==(-1);
      if ($314) {
       break L119;
      }
      $315 = ($$idx79$val$i$i>>>0)>($313>>>0);
      if (!($315)) {
       label = 110;
       break L116;
      }
      $316 = (($$idx78$val$i$i) + (($313*12)|0)|0);
      $$val54$i$i = HEAP32[$316>>2]|0;
      $317 = ($$val54$i$i|0)==($$val|0);
      if ($317) {
       break;
      } else {
       $o$0$i$i = $313;
      }
     }
     $318 = ($$idx51$val$i$i>>>0)>($313>>>0);
     if (!($318)) {
      label = 113;
      break L116;
     }
     $319 = (($$idx48$val$i$i) + ($313<<2)|0);
     $320 = HEAP32[$319>>2]|0;
     HEAP32[$312>>2] = $320;
     $$idx67$val$i$i = HEAP32[$$idx51$i$i>>2]|0;
     $321 = ($$idx67$val$i$i>>>0)>($313>>>0);
     if (!($321)) {
      label = 115;
      break L116;
     }
     $$idx66$val$i$i = HEAP32[$$idx50$i$i>>2]|0;
     $322 = (($$idx66$val$i$i) + ($313<<2)|0);
     HEAP32[$322>>2] = -1;
     $obji$0$i$i = $313;
    }
    $323 = HEAP32[$280>>2]|0;
    $324 = (($323) + -1)|0;
    HEAP32[$280>>2] = $324;
    $$idx$val$i$i$i = HEAP32[$$idx1$i$pre$phiZZZ2D>>2]|0;
    $325 = HEAP32[$$idx$i$pre$phiZZZ2D>>2]|0;
    $326 = (($$idx$val$i$i$i) + -1)|0;
    $327 = ($$idx$val$i$i$i>>>0)>($obji$0$i$i>>>0);
    if (!($327)) {
     label = 119;
     break L116;
    }
    $328 = ($$idx$val$i$i$i|0)==(0);
    if ($328) {
     label = 120;
     break L116;
    }
    $329 = (($325) + (($obji$0$i$i*12)|0)|0);
    $330 = (($325) + (($326*12)|0)|0);
    ;HEAP32[$tmp$i$i$i$i$i$i>>2]=HEAP32[$329>>2]|0;HEAP32[$tmp$i$i$i$i$i$i+4>>2]=HEAP32[$329+4>>2]|0;HEAP32[$tmp$i$i$i$i$i$i+8>>2]=HEAP32[$329+8>>2]|0;
    _memmove(($329|0),($330|0),12)|0;
    ;HEAP32[$330>>2]=HEAP32[$tmp$i$i$i$i$i$i>>2]|0;HEAP32[$330+4>>2]=HEAP32[$tmp$i$i$i$i$i$i+4>>2]|0;HEAP32[$330+8>>2]=HEAP32[$tmp$i$i$i$i$i$i+8>>2]|0;
    $331 = HEAP32[$$idx1$i$pre$phiZZZ2D>>2]|0;
    $332 = ($331|0)==(0);
    if ($332) {
     label = 123;
     break L116;
    }
    $333 = (($331) + -1)|0;
    HEAP32[$$idx1$i$pre$phiZZZ2D>>2] = $333;
    $334 = HEAP32[$$idx$i$pre$phiZZZ2D>>2]|0;
    $_14$sroa$4$0$$sroa_idx7$i$i$i = (((($334) + (($333*12)|0)|0)) + 4|0);
    $_14$sroa$4$0$copyload$i$i$i = HEAP32[$_14$sroa$4$0$$sroa_idx7$i$i$i>>2]|0;
    $switch3tmp$i$i$i$i = ($_14$sroa$4$0$copyload$i$i$i|0)==(0|0);
    if ($switch3tmp$i$i$i$i) {
     label = 123;
     break L116;
    }
    $_14$sroa$6$0$$sroa_idx9$i$i$i = (((($334) + (($333*12)|0)|0)) + 8|0);
    $_14$sroa$6$0$copyload$i$i$i = HEAP32[$_14$sroa$6$0$$sroa_idx9$i$i$i>>2]|0;
    $335 = HEAP32[$280>>2]|0;
    $336 = ($obji$0$i$i|0)==($335|0);
    if (!($336)) {
     $337 = ($333>>>0)>($obji$0$i$i>>>0);
     if (!($337)) {
      label = 126;
      break L116;
     }
     $339 = (($334) + (($obji$0$i$i*12)|0)|0);
     $$val30$i$i = HEAP32[$339>>2]|0;
     $340 = $$val30$i$i << 15;
     $341 = $340 ^ -1;
     $342 = (($$val30$i$i) + ($341))|0;
     $343 = $342 >>> 10;
     $344 = $343 ^ $342;
     $345 = ($344*9)|0;
     $346 = $345 >>> 6;
     $347 = $346 ^ $345;
     $348 = $347 << 11;
     $349 = $348 ^ -1;
     $350 = (($347) + ($349))|0;
     $351 = $350 >>> 16;
     $352 = $351 ^ $350;
     $353 = HEAP32[$279>>2]|0;
     $354 = $352 & $353;
     $$idx41$val$i$i = HEAP32[$$idx53$i$i>>2]|0;
     $355 = ($$idx41$val$i$i>>>0)>($354>>>0);
     if (!($355)) {
      label = 128;
      break L116;
     }
     $$idx40$val$i$i = HEAP32[$$idx52$i$i>>2]|0;
     $357 = (($$idx40$val$i$i) + ($354<<2)|0);
     $358 = HEAP32[$357>>2]|0;
     $359 = ($358|0)==($335|0);
     if ($359) {
      HEAP32[$357>>2] = $obji$0$i$i;
     } else {
      $$idx37$val$i$i = HEAP32[$$idx51$i$i>>2]|0;
      $$idx36$val$i$i = HEAP32[$$idx50$i$i>>2]|0;
      $no$0$i$i = $358;
      while(1) {
       $360 = ($$idx37$val$i$i>>>0)>($no$0$i$i>>>0);
       if (!($360)) {
        label = 133;
        break L116;
       }
       $362 = (($$idx36$val$i$i) + ($no$0$i$i<<2)|0);
       $363 = HEAP32[$362>>2]|0;
       $364 = ($363|0)==($335|0);
       if ($364) {
        break;
       } else {
        $no$0$i$i = $363;
       }
      }
      HEAP32[$362>>2] = $obji$0$i$i;
     }
     $365 = HEAP32[$280>>2]|0;
     $$idx32$val$i$i = HEAP32[$$idx50$i$i>>2]|0;
     $$idx33$val$i$i = HEAP32[$$idx51$i$i>>2]|0;
     $366 = ($$idx33$val$i$i>>>0)>($365>>>0);
     if (!($366)) {
      label = 137;
      break L116;
     }
     $368 = ($$idx33$val$i$i>>>0)>($obji$0$i$i>>>0);
     if (!($368)) {
      label = 139;
      break L116;
     }
     $370 = (($$idx32$val$i$i) + ($365<<2)|0);
     $371 = HEAP32[$370>>2]|0;
     $372 = (($$idx32$val$i$i) + ($obji$0$i$i<<2)|0);
     HEAP32[$372>>2] = $371;
     $373 = HEAP32[$280>>2]|0;
     $$idx59$val$i$i = HEAP32[$$idx51$i$i>>2]|0;
     $374 = ($$idx59$val$i$i>>>0)>($373>>>0);
     if (!($374)) {
      label = 141;
      break L116;
     }
     $$idx58$val$i$i = HEAP32[$$idx50$i$i>>2]|0;
     $383 = (($$idx58$val$i$i) + ($373<<2)|0);
     HEAP32[$383>>2] = -1;
    }
    $384 = $_14$sroa$6$0$copyload$i$i$i;
    $$idx1$val$val$i$i$i1$i = HEAP32[$384>>2]|0;
    FUNCTION_TABLE_vi[$$idx1$val$val$i$i$i1$i & 511]($_14$sroa$4$0$copyload$i$i$i);
    $385 = $_14$sroa$6$0$copyload$i$i$i;
    $386 = ((($385)) + 4|0);
    $387 = HEAP32[$386>>2]|0;
    $388 = ($387|0)==(0);
    if (!($388)) {
     _free($_14$sroa$4$0$copyload$i$i$i);
    }
   }
  } while(0);
  $302 = ($281|0)==($277|0);
  if ($302) {
   label = 92;
   break;
  } else {
   $282 = $281;
  }
 }
 switch (label|0) {
  case 92: {
   $$pre757 = HEAP32[$$pre$phiZ2D>>2]|0;
   $phitmp = ($$pre757|0)==(0);
   if ($phitmp) {
    STACKTOP = sp;return;
   }
   HEAP32[$$pre$phiZ2D>>2] = 0;
   STACKTOP = sp;return;
   break;
  }
  case 94: {
   __ZN4core9panicking18panic_bounds_check17hd14a5808e41829e9E(12236,104,1349,$297,$$idx53$val$i$i);
   // unreachable;
   break;
  }
  case 98: {
   __ZN4core9panicking18panic_bounds_check17hd14a5808e41829e9E(12236,104,1349,$300,$$idx79$val$i$i);
   // unreachable;
   break;
  }
  case 102: {
   __ZN4core9panicking18panic_bounds_check17hd14a5808e41829e9E(12236,104,1349,$300,$$idx51$val$i$i);
   // unreachable;
   break;
  }
  case 104: {
   __ZN4core9panicking18panic_bounds_check17hd14a5808e41829e9E(12236,104,1358,$300,$$idx71$val$i$i);
   // unreachable;
   break;
  }
  case 107: {
   __ZN4core9panicking18panic_bounds_check17hd14a5808e41829e9E(12236,104,1349,$o$0$i$i,$$idx51$val$i$i);
   // unreachable;
   break;
  }
  case 110: {
   __ZN4core9panicking18panic_bounds_check17hd14a5808e41829e9E(12236,104,1349,$313,$$idx79$val$i$i);
   // unreachable;
   break;
  }
  case 113: {
   __ZN4core9panicking18panic_bounds_check17hd14a5808e41829e9E(12236,104,1349,$313,$$idx51$val$i$i);
   // unreachable;
   break;
  }
  case 115: {
   __ZN4core9panicking18panic_bounds_check17hd14a5808e41829e9E(12236,104,1358,$313,$$idx67$val$i$i);
   // unreachable;
   break;
  }
  case 119: {
   __ZN4core9panicking18panic_bounds_check17hd14a5808e41829e9E(11401,99,433,$obji$0$i$i,$$idx$val$i$i$i);
   // unreachable;
   break;
  }
  case 120: {
   __ZN4core9panicking18panic_bounds_check17hd14a5808e41829e9E(11401,99,434,$326,0);
   // unreachable;
   break;
  }
  case 123: {
   __ZN4core9panicking5panic17ha7507e8e32961bfeE(6500);
   // unreachable;
   break;
  }
  case 126: {
   __THREW__ = 0;
   invoke_viiiii(214,(12236|0),104,1349,($obji$0$i$i|0),($333|0));
   $338 = __THREW__; __THREW__ = 0;
   break;
  }
  case 128: {
   __THREW__ = 0;
   invoke_viiiii(214,(12236|0),104,1349,($354|0),($$idx41$val$i$i|0));
   $356 = __THREW__; __THREW__ = 0;
   break;
  }
  case 133: {
   __THREW__ = 0;
   invoke_viiiii(214,(12236|0),104,1349,($no$0$i$i|0),($$idx37$val$i$i|0));
   $361 = __THREW__; __THREW__ = 0;
   break;
  }
  case 137: {
   __THREW__ = 0;
   invoke_viiiii(214,(12236|0),104,1349,($365|0),($$idx33$val$i$i|0));
   $367 = __THREW__; __THREW__ = 0;
   break;
  }
  case 139: {
   __THREW__ = 0;
   invoke_viiiii(214,(12236|0),104,1358,($obji$0$i$i|0),($$idx33$val$i$i|0));
   $369 = __THREW__; __THREW__ = 0;
   break;
  }
  case 141: {
   __THREW__ = 0;
   invoke_viiiii(214,(12236|0),104,1358,($373|0),($$idx59$val$i$i|0));
   $375 = __THREW__; __THREW__ = 0;
   break;
  }
 }
 $376 = ___cxa_find_matching_catch_2()|0;
 $377 = tempRet0;
 $378 = $_14$sroa$6$0$copyload$i$i$i;
 $$idx1$val$val$i$i$i$i = HEAP32[$378>>2]|0;
 FUNCTION_TABLE_vi[$$idx1$val$val$i$i$i$i & 511]($_14$sroa$4$0$copyload$i$i$i);
 $379 = $_14$sroa$6$0$copyload$i$i$i;
 $380 = ((($379)) + 4|0);
 $381 = HEAP32[$380>>2]|0;
 $382 = ($381|0)==(0);
 if ($382) {
  $eh$lpad$body$sink$index3Z2D = $377;$eh$lpad$body$sink$indexZ2D = $376;
  ___resumeException($eh$lpad$body$sink$indexZ2D|0);
  // unreachable;
 }
 _free($_14$sroa$4$0$copyload$i$i$i);
 $eh$lpad$body$sink$index3Z2D = $377;$eh$lpad$body$sink$indexZ2D = $376;
 ___resumeException($eh$lpad$body$sink$indexZ2D|0);
 // unreachable;
}
function __ZN158__LT_ncollide_pipeline__narrow_phase__proximity_detector__composite_shape_shape_proximity_detector__CompositeShapeShapeProximityDetector_LT_P_C__u20_M_GT__GT_3new17h7f611a8acd52177aE($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $_13$i = 0, $_17$i = 0;
 var $_2$sroa$0$0$$sroa_idx = 0, $_2$sroa$10$0$$sroa_idx49 = 0, $_2$sroa$11$0$$sroa_idx51 = 0, $_2$sroa$12$0$$sroa_idx53 = 0, $_2$sroa$4$0$$sroa_idx32 = 0, $_2$sroa$5$0$$sroa_idx35 = 0, $_2$sroa$6$0$$sroa_idx37 = 0, $_2$sroa$7$0$$sroa_idx39 = 0, $_2$sroa$8 = 0, $_2$sroa$8$0$$sroa_idx = 0, $_2$sroa$9 = 0, $_2$sroa$9$0$$sroa_idx = 0, $_5$sroa$0$0$$sroa_idx = 0, $_6$sroa$4$0$$sroa_idx21 = 0, $_6$sroa$5$0$$sroa_idx23 = 0, $not$$i$i$i$i$i = 0, $personalityslot$sroa$0$0$i = 0, $personalityslot$sroa$0$1$i = 0, $personalityslot$sroa$7$0$i = 0, $personalityslot$sroa$7$1$i = 0;
 var label = 0, sp = 0, temp_Int32x4_ptr = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $_13$i = sp + 48|0;
 $_17$i = sp + 32|0;
 $_2$sroa$8 = sp + 16|0;
 $_2$sroa$9 = sp;
 $1 = (_malloc(96)|0);
 $2 = ($1|0)==(0|0);
 if ($2) {
  __THREW__ = 0;
  invoke_v(210);
  $3 = __THREW__; __THREW__ = 0;
  $4 = ___cxa_find_matching_catch_2()|0;
  $5 = tempRet0;
  $personalityslot$sroa$0$1$i = $4;$personalityslot$sroa$7$1$i = $5;
  ___resumeException($personalityslot$sroa$0$1$i|0);
  // unreachable;
 }
 $6 = $1;
 __THREW__ = 0;
 invoke_vii(211,($_13$i|0),8);
 $7 = __THREW__; __THREW__ = 0;
 $8 = $7&1;
 if ($8) {
  $11 = ___cxa_find_matching_catch_2()|0;
  $12 = tempRet0;
  $personalityslot$sroa$0$0$i = $11;$personalityslot$sroa$7$0$i = $12;
 } else {
  __THREW__ = 0;
  invoke_vii(211,($_17$i|0),8);
  $9 = __THREW__; __THREW__ = 0;
  $10 = $9&1;
  if (!($10)) {
   ;HEAP32[$_2$sroa$8>>2]=HEAP32[$_13$i>>2]|0;HEAP32[$_2$sroa$8+4>>2]=HEAP32[$_13$i+4>>2]|0;HEAP32[$_2$sroa$8+8>>2]=HEAP32[$_13$i+8>>2]|0;
   ;HEAP32[$_2$sroa$9>>2]=HEAP32[$_17$i>>2]|0;HEAP32[$_2$sroa$9+4>>2]=HEAP32[$_17$i+4>>2]|0;HEAP32[$_2$sroa$9+8>>2]=HEAP32[$_17$i+8>>2]|0;
   HEAP8[$0>>0] = 2;
   $_2$sroa$0$0$$sroa_idx = ((($0)) + 4|0);
   HEAP32[$_2$sroa$0$0$$sroa_idx>>2] = 0;
   $_2$sroa$4$0$$sroa_idx32 = ((($0)) + 8|0);
   HEAP32[$_2$sroa$4$0$$sroa_idx32>>2] = $6;
   $_2$sroa$5$0$$sroa_idx35 = ((($0)) + 12|0);
   HEAP32[$_2$sroa$5$0$$sroa_idx35>>2] = 8;
   $_2$sroa$6$0$$sroa_idx37 = ((($0)) + 16|0);
   HEAP32[$_2$sroa$6$0$$sroa_idx37>>2] = 0;
   $_2$sroa$7$0$$sroa_idx39 = ((($0)) + 20|0);
   HEAP32[$_2$sroa$7$0$$sroa_idx39>>2] = 7;
   $_2$sroa$8$0$$sroa_idx = ((($0)) + 24|0);
   ;HEAP32[$_2$sroa$8$0$$sroa_idx>>2]=HEAP32[$_2$sroa$8>>2]|0;HEAP32[$_2$sroa$8$0$$sroa_idx+4>>2]=HEAP32[$_2$sroa$8+4>>2]|0;HEAP32[$_2$sroa$8$0$$sroa_idx+8>>2]=HEAP32[$_2$sroa$8+8>>2]|0;
   $_2$sroa$9$0$$sroa_idx = ((($0)) + 36|0);
   ;HEAP32[$_2$sroa$9$0$$sroa_idx>>2]=HEAP32[$_2$sroa$9>>2]|0;HEAP32[$_2$sroa$9$0$$sroa_idx+4>>2]=HEAP32[$_2$sroa$9+4>>2]|0;HEAP32[$_2$sroa$9$0$$sroa_idx+8>>2]=HEAP32[$_2$sroa$9+8>>2]|0;
   $_2$sroa$10$0$$sroa_idx49 = ((($0)) + 48|0);
   HEAP32[$_2$sroa$10$0$$sroa_idx49>>2] = 0;
   $_2$sroa$11$0$$sroa_idx51 = ((($0)) + 52|0);
   HEAP32[$_2$sroa$11$0$$sroa_idx51>>2] = 8;
   $_2$sroa$12$0$$sroa_idx53 = ((($0)) + 56|0);
   HEAP32[$_2$sroa$12$0$$sroa_idx53>>2] = 5;
   $_5$sroa$0$0$$sroa_idx = ((($0)) + 60|0);
   temp_Int32x4_ptr = $_5$sroa$0$0$$sroa_idx;SIMD_Int32x4_store(HEAPU8, temp_Int32x4_ptr, SIMD_Int32x4(1,0,0,1));
   $_6$sroa$4$0$$sroa_idx21 = ((($0)) + 76|0);
   HEAP32[$_6$sroa$4$0$$sroa_idx21>>2] = 0;
   $_6$sroa$5$0$$sroa_idx23 = ((($0)) + 80|0);
   HEAP32[$_6$sroa$5$0$$sroa_idx23>>2] = 0;
   $18 = ((($0)) + 84|0);
   HEAP32[$18>>2] = -1;
   STACKTOP = sp;return;
  }
  $13 = ___cxa_find_matching_catch_2()|0;
  $14 = tempRet0;
  $15 = ((($_13$i)) + 4|0);
  $16 = HEAP32[$15>>2]|0;
  $not$$i$i$i$i$i = ($16|0)==(0);
  if ($not$$i$i$i$i$i) {
   $personalityslot$sroa$0$0$i = $13;$personalityslot$sroa$7$0$i = $14;
  } else {
   $17 = HEAP32[$_13$i>>2]|0;
   _free($17);
   $personalityslot$sroa$0$0$i = $13;$personalityslot$sroa$7$0$i = $14;
  }
 }
 _free($1);
 $personalityslot$sroa$0$1$i = $personalityslot$sroa$0$0$i;$personalityslot$sroa$7$1$i = $personalityslot$sroa$7$0$i;
 ___resumeException($personalityslot$sroa$0$1$i|0);
 // unreachable;
}
function __ZN158__LT_ncollide_pipeline__narrow_phase__proximity_detector__composite_shape_shape_proximity_detector__CompositeShapeShapeProximityDetector_LT_P_C__u20_M_GT__GT_9do_update17heca235c9d95b8b41E($0,$1,$2,$3,$4,$5,$6,$7,$8,$9) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 $7 = $7|0;
 $8 = $8|0;
 $9 = +$9;
 var $$fca$0$extract2493$i$i = 0, $$fca$0$extract4110$i = 0, $$fca$1$extract2695$i$i = 0, $$fca$1$extract6111$i = 0, $$idx$i = 0, $$idx$i37$i = 0, $$idx$i58 = 0, $$idx$i70 = 0, $$idx$i82 = 0, $$idx$val$i = 0, $$idx$val$i$i = 0, $$idx$val$i$i$i = 0, $$idx$val$i38$i = 0, $$idx$val$i59 = 0, $$idx$val$i71 = 0, $$idx$val$i77 = 0.0, $$idx$val$i83 = 0, $$idx1$i = 0, $$idx1$i$i$i$i = 0, $$idx1$i72 = 0;
 var $$idx1$val$i = 0, $$idx1$val$i$i$i$i = 0, $$idx1$val$i73 = 0, $$idx1$val$i79 = 0.0, $$idx1$val$val$i$i = 0, $$idx1$val$val$i$i$i$i = 0, $$idx1$val$val$i$i$i$i52 = 0, $$idx1$val$val$i$i$i1$i = 0, $$idx1$val$val$i$i$i41$i = 0, $$idx18$i = 0, $$idx18$val$i = 0, $$idx19$val$i = 0, $$idx2$i = 0, $$idx2$val$i = 0.0, $$idx20$val$i = 0, $$idx21$i = 0, $$idx21$val$i = 0, $$idx22$i = 0, $$idx22$val$i = 0, $$idx24$val$i = 0;
 var $$idx26$val$i = 0, $$idx27$val$i = 0, $$idx3$i = 0, $$idx3$val$i = 0.0, $$idx32$val$i$i = 0, $$idx33$val$i$i = 0, $$idx36$val$i$i = 0, $$idx37$val$i$i = 0, $$idx4$val$i = 0.0, $$idx40$val$i$i = 0, $$idx41$val$i$i = 0, $$idx48$val$i$i = 0, $$idx5$val$i = 0.0, $$idx50$i$i = 0, $$idx50$val$i$i = 0, $$idx51$i$i = 0, $$idx51$val$i$i = 0, $$idx52$i$i = 0, $$idx52$val$i$i = 0, $$idx53$i$i = 0;
 var $$idx53$val$i$i = 0, $$idx55$val$i$i = 0, $$idx58$val$i$i = 0, $$idx59$val$i$i = 0, $$idx6$val$i = 0.0, $$idx66$val$i$i = 0, $$idx67$val$i$i = 0, $$idx7$i = 0, $$idx7$val$i = 0.0, $$idx70$val$i$i = 0, $$idx71$val$i$i = 0, $$idx78$i$i = 0, $$idx78$val$i$i = 0, $$idx79$i$i = 0, $$idx79$val$i$i = 0, $$pre = 0, $$pre$i = 0, $$pre$i$i = 0, $$pre$i84 = 0, $$sink = 0;
 var $$val = 0, $$val$i$i = 0, $$val30$i$i = 0, $$val45 = 0, $$val46 = 0, $$val54$i$i = 0, $$val56$i$i = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0;
 var $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0;
 var $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0;
 var $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0.0, $155 = 0.0, $156 = 0.0, $157 = 0.0, $158 = 0.0, $159 = 0.0, $16 = 0, $160 = 0.0, $161 = 0.0, $162 = 0, $163 = 0.0, $164 = 0.0, $165 = 0.0;
 var $166 = 0.0, $167 = 0.0, $168 = 0.0, $169 = 0.0, $17 = 0, $170 = 0.0, $171 = 0.0, $172 = 0.0, $173 = 0.0, $174 = 0.0, $175 = 0.0, $176 = 0.0, $177 = 0.0, $178 = 0.0, $179 = 0.0, $18 = 0, $180 = 0.0, $181 = 0.0, $182 = 0.0, $183 = 0;
 var $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0.0, $19 = 0, $190 = 0, $191 = 0, $192 = 0.0, $193 = 0.0, $194 = 0.0, $195 = 0.0, $196 = 0, $197 = 0, $198 = 0.0, $199 = 0.0, $20 = 0, $200 = 0.0, $201 = 0.0;
 var $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0;
 var $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0;
 var $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0;
 var $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0;
 var $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0;
 var $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $30 = 0, $300 = 0.0, $301 = 0.0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0;
 var $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0;
 var $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0;
 var $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0;
 var $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0;
 var $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $40 = 0, $400 = 0, $401 = 0;
 var $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0;
 var $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0;
 var $56 = 0, $57 = 0, $58 = 0, $59 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0;
 var $76 = 0, $77 = 0, $78 = 0, $79 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0;
 var $96 = 0, $97 = 0, $98 = 0, $99 = 0, $_10$i$i = 0, $_10$sroa$4$0$_5$sroa$0$0$$sroa_cast3$i$sroa_idx55$i = 0, $_10$sroa$5$0$_5$sroa$0$0$$sroa_cast3$i$sroa_idx57$i = 0, $_10$sroa$6$0$_5$sroa$0$0$$sroa_cast3$i$sroa_idx59$i = 0, $_101 = 0, $_111 = 0, $_14$sroa$4$0$$sroa_idx7$i$i$i = 0, $_14$sroa$4$0$copyload$i$i$i = 0, $_14$sroa$6$0$$sroa_idx9$i$i$i = 0, $_14$sroa$6$0$copyload$i$i$i = 0, $_167 = 0, $_22$sroa$0$0$$sroa_idx$i$i = 0, $_22$sroa$4$0$$sroa_idx18$i$i = 0, $_22$sroa$5$0$$sroa_idx20$i$i = 0, $_4$sroa$0$0$copyload$i$i = 0.0, $_4$sroa$4$0$$sroa_idx39$i$i = 0;
 var $_4$sroa$4$0$copyload$i$i214 = 0.0, $_4$sroa$5$0$$sroa_idx41$i$i = 0, $_4$sroa$5$0$copyload$i$i215 = 0.0, $_4$sroa$6$0$$sroa_idx43$i$i = 0, $_4$sroa$6$0$copyload$i$i = 0.0, $_4$sroa$7$0$$sroa_idx45$i$i = 0, $_4$sroa$7$0$copyload$i$i = 0.0, $_4$sroa$8$0$$sroa_idx47$i$i = 0, $_4$sroa$8$0$copyload$i$i = 0.0, $_54 = 0, $_69$sroa$0$0$copyload = 0.0, $_69$sroa$4$0$$sroa_idx = 0, $_69$sroa$4$0$copyload = 0.0, $_69$sroa$5$0$$sroa_idx = 0, $_69$sroa$5$0$copyload = 0.0, $_69$sroa$6$0$$sroa_idx = 0, $_69$sroa$6$0$copyload = 0.0, $_69$sroa$7$0$$sroa_idx = 0, $_69$sroa$7$0$copyload = 0.0, $_69$sroa$8$0$$sroa_idx = 0;
 var $_69$sroa$8$0$copyload = 0.0, $_72 = 0, $detector = 0, $detector3 = 0, $disp = 0, $eh$lpad$body$i$index5Z2D = 0, $eh$lpad$body$i$indexZ2D = 0, $g2 = 0, $iter$sroa$0$0109$i$i = 0, $iter$sroa$0$0109$i$i$phi = 0, $iter5$sroa$0$0$in480 = 0, $ls_aabb2 = 0, $m12 = 0, $m2 = 0, $margin = 0, $new_detector$i$i = 0, $new_detector$i$sroa_raw_idx$i = 0, $newhash$i$i = 0, $newhash$idx$val$i$i = 0, $newhash$idx48$i$i = 0;
 var $newhash$idx48$val$i$i = 0, $newnext$i$i = 0, $newnext$idx$val$i$i = 0, $newnext$idx54$i$i = 0, $newnext$idx54$val$i$i = 0, $no$0$i$i = 0, $not$$i$i$i$i$i$i = 0, $not$$i$i$i$i56$i$i = 0, $not$$i$i$i$i59$i$i = 0, $not$$i$i$i$i62$i$i = 0, $o$0$i$i = 0, $obji$0$i$i = 0, $or$cond$i$i$i = 0, $or$cond$i$i8$i = 0, $personalityslot$sroa$0$0$i = 0, $personalityslot$sroa$5$0$i = 0, $sub_detector = 0, $switch$i = 0, $switch3tmp$i$i$i$i = 0, $switchtmp = 0;
 var $switchtmp$i = 0, $switchtmp$i$i$i = 0, $t$i$i$i = 0, $t$i69$i$i = 0, $tmp$i$i$i$i$i$i = 0, $visitor = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 288|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(288|0);
 $tmp$i$i$i$i$i$i = sp + 256|0;
 $t$i69$i$i = sp + 240|0;
 $t$i$i$i = sp + 224|0;
 $newhash$i$i = sp + 208|0;
 $newnext$i$i = sp + 192|0;
 $new_detector$i$i = sp + 184|0;
 $_10$i$i = sp + 168|0;
 $disp = sp + 160|0;
 $m2 = sp + 284|0;
 $g2 = sp + 152|0;
 $margin = sp + 280|0;
 $detector = sp + 276|0;
 $_54 = sp + 128|0;
 $m12 = sp + 104|0;
 $ls_aabb2 = sp + 88|0;
 $_72 = sp + 72|0;
 $detector3 = sp + 272|0;
 $_101 = sp + 56|0;
 $_111 = sp + 32|0;
 $visitor = sp + 24|0;
 $sub_detector = sp + 268|0;
 $_167 = sp;
 HEAP32[$disp>>2] = $1;
 $10 = ((($disp)) + 4|0);
 HEAP32[$10>>2] = $2;
 HEAP32[$m2>>2] = $6;
 HEAP32[$g2>>2] = $7;
 $11 = ((($g2)) + 4|0);
 HEAP32[$11>>2] = $8;
 HEAPF32[$margin>>2] = $9;
 $12 = ((($0)) + 60|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = ((($0)) + 68|0);
 $15 = HEAP32[$14>>2]|0;
 $16 = (($13) + ($15<<2)|0);
 $17 = ($15|0)==(0);
 L1: do {
  if (!($17)) {
   $18 = ((($0)) + 20|0);
   $$idx52$i$i = ((($0)) + 24|0);
   $$idx53$i$i = ((($0)) + 32|0);
   $$idx78$i$i = ((($0)) + 8|0);
   $$idx79$i$i = ((($0)) + 16|0);
   $$idx50$i$i = ((($0)) + 36|0);
   $$idx51$i$i = ((($0)) + 44|0);
   $19 = ((($0)) + 48|0);
   $21 = $13;
   L3: while(1) {
    $20 = ((($21)) + 4|0);
    $$val45 = HEAP32[$21>>2]|0;
    $22 = $$val45 << 15;
    $23 = $22 ^ -1;
    $24 = (($$val45) + ($23))|0;
    $25 = $24 >>> 10;
    $26 = $25 ^ $24;
    $27 = ($26*9)|0;
    $28 = $27 >>> 6;
    $29 = $28 ^ $27;
    $30 = $29 << 11;
    $31 = $30 ^ -1;
    $32 = (($29) + ($31))|0;
    $33 = $32 >>> 16;
    $34 = $33 ^ $32;
    $35 = HEAP32[$18>>2]|0;
    $36 = $34 & $35;
    $$idx53$val$i$i = HEAP32[$$idx53$i$i>>2]|0;
    $37 = ($$idx53$val$i$i>>>0)>($36>>>0);
    if (!($37)) {
     label = 9;
     break;
    }
    $$idx52$val$i$i = HEAP32[$$idx52$i$i>>2]|0;
    $44 = (($$idx52$val$i$i) + ($36<<2)|0);
    $45 = HEAP32[$44>>2]|0;
    $46 = ($45|0)==(-1);
    L6: do {
     if (!($46)) {
      $$idx79$val$i$i = HEAP32[$$idx79$i$i>>2]|0;
      $48 = ($$idx79$val$i$i>>>0)>($45>>>0);
      if (!($48)) {
       label = 13;
       break L3;
      }
      $$idx78$val$i$i = HEAP32[$$idx78$i$i>>2]|0;
      $49 = (($$idx78$val$i$i) + (($45*12)|0)|0);
      $$val56$i$i = HEAP32[$49>>2]|0;
      $50 = ($$val56$i$i|0)==($$val45|0);
      $$idx51$val$i$i = HEAP32[$$idx51$i$i>>2]|0;
      if ($50) {
       $51 = ($$idx51$val$i$i>>>0)>($45>>>0);
       if (!($51)) {
        label = 17;
        break L3;
       }
       $$idx50$val$i$i = HEAP32[$$idx50$i$i>>2]|0;
       $52 = (($$idx50$val$i$i) + ($45<<2)|0);
       $53 = HEAP32[$52>>2]|0;
       HEAP32[$44>>2] = $53;
       $$idx71$val$i$i = HEAP32[$$idx51$i$i>>2]|0;
       $54 = ($$idx71$val$i$i>>>0)>($45>>>0);
       if (!($54)) {
        label = 19;
        break L3;
       }
       $$idx70$val$i$i = HEAP32[$$idx50$i$i>>2]|0;
       $55 = (($$idx70$val$i$i) + ($45<<2)|0);
       HEAP32[$55>>2] = -1;
       $obji$0$i$i = $45;
      } else {
       $$idx48$val$i$i = HEAP32[$$idx50$i$i>>2]|0;
       $o$0$i$i = $45;
       while(1) {
        $56 = ($$idx51$val$i$i>>>0)>($o$0$i$i>>>0);
        if (!($56)) {
         label = 22;
         break L3;
        }
        $57 = (($$idx48$val$i$i) + ($o$0$i$i<<2)|0);
        $58 = HEAP32[$57>>2]|0;
        $59 = ($58|0)==(-1);
        if ($59) {
         break L6;
        }
        $60 = ($$idx79$val$i$i>>>0)>($58>>>0);
        if (!($60)) {
         label = 25;
         break L3;
        }
        $61 = (($$idx78$val$i$i) + (($58*12)|0)|0);
        $$val54$i$i = HEAP32[$61>>2]|0;
        $62 = ($$val54$i$i|0)==($$val45|0);
        if ($62) {
         break;
        } else {
         $o$0$i$i = $58;
        }
       }
       $63 = ($$idx51$val$i$i>>>0)>($58>>>0);
       if (!($63)) {
        label = 28;
        break L3;
       }
       $64 = (($$idx48$val$i$i) + ($58<<2)|0);
       $65 = HEAP32[$64>>2]|0;
       HEAP32[$57>>2] = $65;
       $$idx67$val$i$i = HEAP32[$$idx51$i$i>>2]|0;
       $66 = ($$idx67$val$i$i>>>0)>($58>>>0);
       if (!($66)) {
        label = 30;
        break L3;
       }
       $$idx66$val$i$i = HEAP32[$$idx50$i$i>>2]|0;
       $67 = (($$idx66$val$i$i) + ($58<<2)|0);
       HEAP32[$67>>2] = -1;
       $obji$0$i$i = $58;
      }
      $68 = HEAP32[$19>>2]|0;
      $69 = (($68) + -1)|0;
      HEAP32[$19>>2] = $69;
      $$idx$val$i$i$i = HEAP32[$$idx79$i$i>>2]|0;
      $70 = HEAP32[$$idx78$i$i>>2]|0;
      $71 = (($$idx$val$i$i$i) + -1)|0;
      $72 = ($$idx$val$i$i$i>>>0)>($obji$0$i$i>>>0);
      if (!($72)) {
       label = 34;
       break L3;
      }
      $73 = ($$idx$val$i$i$i|0)==(0);
      if ($73) {
       label = 35;
       break L3;
      }
      $74 = (($70) + (($obji$0$i$i*12)|0)|0);
      $75 = (($70) + (($71*12)|0)|0);
      ;HEAP32[$tmp$i$i$i$i$i$i>>2]=HEAP32[$74>>2]|0;HEAP32[$tmp$i$i$i$i$i$i+4>>2]=HEAP32[$74+4>>2]|0;HEAP32[$tmp$i$i$i$i$i$i+8>>2]=HEAP32[$74+8>>2]|0;
      _memmove(($74|0),($75|0),12)|0;
      ;HEAP32[$75>>2]=HEAP32[$tmp$i$i$i$i$i$i>>2]|0;HEAP32[$75+4>>2]=HEAP32[$tmp$i$i$i$i$i$i+4>>2]|0;HEAP32[$75+8>>2]=HEAP32[$tmp$i$i$i$i$i$i+8>>2]|0;
      $76 = HEAP32[$$idx79$i$i>>2]|0;
      $77 = ($76|0)==(0);
      if ($77) {
       label = 38;
       break L3;
      }
      $78 = (($76) + -1)|0;
      HEAP32[$$idx79$i$i>>2] = $78;
      $79 = HEAP32[$$idx78$i$i>>2]|0;
      $_14$sroa$4$0$$sroa_idx7$i$i$i = (((($79) + (($78*12)|0)|0)) + 4|0);
      $_14$sroa$4$0$copyload$i$i$i = HEAP32[$_14$sroa$4$0$$sroa_idx7$i$i$i>>2]|0;
      $switch3tmp$i$i$i$i = ($_14$sroa$4$0$copyload$i$i$i|0)==(0|0);
      if ($switch3tmp$i$i$i$i) {
       label = 38;
       break L3;
      }
      $_14$sroa$6$0$$sroa_idx9$i$i$i = (((($79) + (($78*12)|0)|0)) + 8|0);
      $_14$sroa$6$0$copyload$i$i$i = HEAP32[$_14$sroa$6$0$$sroa_idx9$i$i$i>>2]|0;
      $81 = HEAP32[$19>>2]|0;
      $82 = ($obji$0$i$i|0)==($81|0);
      if (!($82)) {
       $83 = ($78>>>0)>($obji$0$i$i>>>0);
       if (!($83)) {
        label = 42;
        break L3;
       }
       $85 = (($79) + (($obji$0$i$i*12)|0)|0);
       $$val30$i$i = HEAP32[$85>>2]|0;
       $86 = $$val30$i$i << 15;
       $87 = $86 ^ -1;
       $88 = (($$val30$i$i) + ($87))|0;
       $89 = $88 >>> 10;
       $90 = $89 ^ $88;
       $91 = ($90*9)|0;
       $92 = $91 >>> 6;
       $93 = $92 ^ $91;
       $94 = $93 << 11;
       $95 = $94 ^ -1;
       $96 = (($93) + ($95))|0;
       $97 = $96 >>> 16;
       $98 = $97 ^ $96;
       $99 = HEAP32[$18>>2]|0;
       $100 = $98 & $99;
       $$idx41$val$i$i = HEAP32[$$idx53$i$i>>2]|0;
       $101 = ($$idx41$val$i$i>>>0)>($100>>>0);
       if (!($101)) {
        label = 44;
        break L3;
       }
       $$idx40$val$i$i = HEAP32[$$idx52$i$i>>2]|0;
       $103 = (($$idx40$val$i$i) + ($100<<2)|0);
       $104 = HEAP32[$103>>2]|0;
       $105 = ($104|0)==($81|0);
       if ($105) {
        HEAP32[$103>>2] = $obji$0$i$i;
       } else {
        $$idx37$val$i$i = HEAP32[$$idx51$i$i>>2]|0;
        $$idx36$val$i$i = HEAP32[$$idx50$i$i>>2]|0;
        $no$0$i$i = $104;
        while(1) {
         $106 = ($$idx37$val$i$i>>>0)>($no$0$i$i>>>0);
         if (!($106)) {
          label = 49;
          break L3;
         }
         $108 = (($$idx36$val$i$i) + ($no$0$i$i<<2)|0);
         $109 = HEAP32[$108>>2]|0;
         $110 = ($109|0)==($81|0);
         if ($110) {
          break;
         } else {
          $no$0$i$i = $109;
         }
        }
        HEAP32[$108>>2] = $obji$0$i$i;
       }
       $111 = HEAP32[$19>>2]|0;
       $$idx32$val$i$i = HEAP32[$$idx50$i$i>>2]|0;
       $$idx33$val$i$i = HEAP32[$$idx51$i$i>>2]|0;
       $112 = ($$idx33$val$i$i>>>0)>($111>>>0);
       if (!($112)) {
        label = 53;
        break L3;
       }
       $114 = ($$idx33$val$i$i>>>0)>($obji$0$i$i>>>0);
       if (!($114)) {
        label = 55;
        break L3;
       }
       $116 = (($$idx32$val$i$i) + ($111<<2)|0);
       $117 = HEAP32[$116>>2]|0;
       $118 = (($$idx32$val$i$i) + ($obji$0$i$i<<2)|0);
       HEAP32[$118>>2] = $117;
       $119 = HEAP32[$19>>2]|0;
       $$idx59$val$i$i = HEAP32[$$idx51$i$i>>2]|0;
       $120 = ($$idx59$val$i$i>>>0)>($119>>>0);
       if (!($120)) {
        label = 57;
        break L3;
       }
       $$idx58$val$i$i = HEAP32[$$idx50$i$i>>2]|0;
       $128 = (($$idx58$val$i$i) + ($119<<2)|0);
       HEAP32[$128>>2] = -1;
      }
      $129 = $_14$sroa$6$0$copyload$i$i$i;
      $$idx1$val$val$i$i$i1$i = HEAP32[$129>>2]|0;
      FUNCTION_TABLE_vi[$$idx1$val$val$i$i$i1$i & 511]($_14$sroa$4$0$copyload$i$i$i);
      $130 = $_14$sroa$6$0$copyload$i$i$i;
      $131 = ((($130)) + 4|0);
      $132 = HEAP32[$131>>2]|0;
      $133 = ($132|0)==(0);
      if (!($133)) {
       _free($_14$sroa$4$0$copyload$i$i$i);
      }
     }
    } while(0);
    $47 = ($20|0)==($16|0);
    if ($47) {
     label = 4;
     break;
    } else {
     $21 = $20;
    }
   }
   switch (label|0) {
    case 4: {
     $$pre = HEAP32[$14>>2]|0;
     $38 = ($$pre|0)==(0);
     if ($38) {
      break L1;
     }
     HEAP32[$14>>2] = 0;
     break L1;
     break;
    }
    case 9: {
     __ZN4core9panicking18panic_bounds_check17hd14a5808e41829e9E(12236,104,1349,$36,$$idx53$val$i$i);
     // unreachable;
     break;
    }
    case 13: {
     __ZN4core9panicking18panic_bounds_check17hd14a5808e41829e9E(12236,104,1349,$45,$$idx79$val$i$i);
     // unreachable;
     break;
    }
    case 17: {
     __ZN4core9panicking18panic_bounds_check17hd14a5808e41829e9E(12236,104,1349,$45,$$idx51$val$i$i);
     // unreachable;
     break;
    }
    case 19: {
     __ZN4core9panicking18panic_bounds_check17hd14a5808e41829e9E(12236,104,1358,$45,$$idx71$val$i$i);
     // unreachable;
     break;
    }
    case 22: {
     __ZN4core9panicking18panic_bounds_check17hd14a5808e41829e9E(12236,104,1349,$o$0$i$i,$$idx51$val$i$i);
     // unreachable;
     break;
    }
    case 25: {
     __ZN4core9panicking18panic_bounds_check17hd14a5808e41829e9E(12236,104,1349,$58,$$idx79$val$i$i);
     // unreachable;
     break;
    }
    case 28: {
     __ZN4core9panicking18panic_bounds_check17hd14a5808e41829e9E(12236,104,1349,$58,$$idx51$val$i$i);
     // unreachable;
     break;
    }
    case 30: {
     __ZN4core9panicking18panic_bounds_check17hd14a5808e41829e9E(12236,104,1358,$58,$$idx67$val$i$i);
     // unreachable;
     break;
    }
    case 34: {
     __ZN4core9panicking18panic_bounds_check17hd14a5808e41829e9E(11401,99,433,$obji$0$i$i,$$idx$val$i$i$i);
     // unreachable;
     break;
    }
    case 35: {
     __ZN4core9panicking18panic_bounds_check17hd14a5808e41829e9E(11401,99,434,$71,0);
     // unreachable;
     break;
    }
    case 38: {
     __ZN4core9panicking5panic17ha7507e8e32961bfeE(6500);
     // unreachable;
     break;
    }
    case 42: {
     __THREW__ = 0;
     invoke_viiiii(214,(12236|0),104,1349,($obji$0$i$i|0),($78|0));
     $84 = __THREW__; __THREW__ = 0;
     break;
    }
    case 44: {
     __THREW__ = 0;
     invoke_viiiii(214,(12236|0),104,1349,($100|0),($$idx41$val$i$i|0));
     $102 = __THREW__; __THREW__ = 0;
     break;
    }
    case 49: {
     __THREW__ = 0;
     invoke_viiiii(214,(12236|0),104,1349,($no$0$i$i|0),($$idx37$val$i$i|0));
     $107 = __THREW__; __THREW__ = 0;
     break;
    }
    case 53: {
     __THREW__ = 0;
     invoke_viiiii(214,(12236|0),104,1349,($111|0),($$idx33$val$i$i|0));
     $113 = __THREW__; __THREW__ = 0;
     break;
    }
    case 55: {
     __THREW__ = 0;
     invoke_viiiii(214,(12236|0),104,1358,($obji$0$i$i|0),($$idx33$val$i$i|0));
     $115 = __THREW__; __THREW__ = 0;
     break;
    }
    case 57: {
     __THREW__ = 0;
     invoke_viiiii(214,(12236|0),104,1358,($119|0),($$idx59$val$i$i|0));
     $121 = __THREW__; __THREW__ = 0;
     break;
    }
   }
   $80 = ___cxa_find_matching_catch_2()|0;
   $122 = tempRet0;
   $123 = $_14$sroa$6$0$copyload$i$i$i;
   $$idx1$val$val$i$i$i$i52 = HEAP32[$123>>2]|0;
   FUNCTION_TABLE_vi[$$idx1$val$val$i$i$i$i52 & 511]($_14$sroa$4$0$copyload$i$i$i);
   $124 = $_14$sroa$6$0$copyload$i$i$i;
   $125 = ((($124)) + 4|0);
   $126 = HEAP32[$125>>2]|0;
   $127 = ($126|0)==(0);
   if ($127) {
    ___resumeException($80|0);
    // unreachable;
   }
   _free($_14$sroa$4$0$copyload$i$i$i);
   ___resumeException($80|0);
   // unreachable;
  }
 } while(0);
 $39 = ((($0)) + 72|0);
 $40 = ((($0)) + 80|0);
 $41 = HEAP32[$40>>2]|0;
 $42 = ($41|0)==(0);
 if (!($42)) {
  HEAP32[$40>>2] = 0;
 }
 $$val = HEAP8[$0>>0]|0;
 $43 = ($$val<<24>>24)==(0);
 L75: do {
  if ($43) {
   $134 = ((($0)) + 4|0);
   $135 = ((($0)) + 84|0);
   $$val46 = HEAP32[$135>>2]|0;
   $136 = (__ZN75__LT_ncollide_utils__data__hash_map__HashMap_LT_K_C__u20_V_C__u20_H_GT__GT_13find_entry_id17hc8fb07c6c2c87be9E($134,$$val46)|0);
   $137 = ($136|0)==(-1);
   if ($137) {
    __ZN4core9panicking5panic17ha7507e8e32961bfeE(6500);
    // unreachable;
   }
   $$idx1$i = ((($0)) + 16|0);
   $$idx1$val$i = HEAP32[$$idx1$i>>2]|0;
   $138 = ($$idx1$val$i>>>0)>($136>>>0);
   if (!($138)) {
    __ZN4core9panicking18panic_bounds_check17hd14a5808e41829e9E(12236,104,1358,$136,$$idx1$val$i);
    // unreachable;
   }
   $$idx$i58 = ((($0)) + 8|0);
   $$idx$val$i59 = HEAP32[$$idx$i58>>2]|0;
   $139 = (((($$idx$val$i59) + (($136*12)|0)|0)) + 4|0);
   HEAP32[$detector>>2] = $139;
   $140 = HEAP32[$135>>2]|0;
   HEAP32[$_54>>2] = $detector;
   $141 = ((($_54)) + 4|0);
   HEAP32[$141>>2] = $disp;
   $142 = ((($_54)) + 8|0);
   HEAP32[$142>>2] = $m2;
   $143 = ((($_54)) + 12|0);
   HEAP32[$143>>2] = $g2;
   $144 = ((($_54)) + 16|0);
   HEAP32[$144>>2] = $margin;
   $145 = ((($5)) + 16|0);
   $146 = HEAP32[$145>>2]|0;
   FUNCTION_TABLE_viiiii[$146 & 511]($4,$140,$3,$_54,104);
   $147 = HEAP32[$detector>>2]|0;
   $148 = HEAP32[$147>>2]|0;
   $149 = ((($147)) + 4|0);
   $150 = HEAP32[$149>>2]|0;
   $151 = ((($150)) + 16|0);
   $152 = HEAP32[$151>>2]|0;
   $153 = (FUNCTION_TABLE_ii[$152 & 511]($148)|0);
   switch ($153<<24>>24) {
   case 0:  {
    break L75;
    break;
   }
   case 1:  {
    HEAP8[$0>>0] = 1;
    break;
   }
   case 2:  {
    break;
   }
   default: {
    // unreachable;
   }
   }
   label = 73;
  } else {
   label = 73;
  }
 } while(0);
 if ((label|0) == 73) {
  HEAP8[$0>>0] = 2;
  $_4$sroa$0$0$copyload$i$i = +HEAPF32[$3>>2];
  $_4$sroa$4$0$$sroa_idx39$i$i = ((($3)) + 4|0);
  $_4$sroa$4$0$copyload$i$i214 = +HEAPF32[$_4$sroa$4$0$$sroa_idx39$i$i>>2];
  $_4$sroa$5$0$$sroa_idx41$i$i = ((($3)) + 8|0);
  $_4$sroa$5$0$copyload$i$i215 = +HEAPF32[$_4$sroa$5$0$$sroa_idx41$i$i>>2];
  $_4$sroa$6$0$$sroa_idx43$i$i = ((($3)) + 12|0);
  $_4$sroa$6$0$copyload$i$i = +HEAPF32[$_4$sroa$6$0$$sroa_idx43$i$i>>2];
  $_4$sroa$7$0$$sroa_idx45$i$i = ((($3)) + 16|0);
  $_4$sroa$7$0$copyload$i$i = +HEAPF32[$_4$sroa$7$0$$sroa_idx45$i$i>>2];
  $_4$sroa$8$0$$sroa_idx47$i$i = ((($3)) + 20|0);
  $_4$sroa$8$0$copyload$i$i = +HEAPF32[$_4$sroa$8$0$$sroa_idx47$i$i>>2];
  $154 = -$_4$sroa$7$0$copyload$i$i;
  $155 = -$_4$sroa$8$0$copyload$i$i;
  $156 = $_4$sroa$0$0$copyload$i$i * $154;
  $157 = $_4$sroa$4$0$copyload$i$i214 * $155;
  $158 = $156 + $157;
  $159 = $_4$sroa$5$0$copyload$i$i215 * $154;
  $160 = $_4$sroa$6$0$copyload$i$i * $155;
  $161 = $159 + $160;
  $162 = HEAP32[$m2>>2]|0;
  $_69$sroa$0$0$copyload = +HEAPF32[$162>>2];
  $_69$sroa$4$0$$sroa_idx = ((($162)) + 4|0);
  $_69$sroa$4$0$copyload = +HEAPF32[$_69$sroa$4$0$$sroa_idx>>2];
  $_69$sroa$5$0$$sroa_idx = ((($162)) + 8|0);
  $_69$sroa$5$0$copyload = +HEAPF32[$_69$sroa$5$0$$sroa_idx>>2];
  $_69$sroa$6$0$$sroa_idx = ((($162)) + 12|0);
  $_69$sroa$6$0$copyload = +HEAPF32[$_69$sroa$6$0$$sroa_idx>>2];
  $_69$sroa$7$0$$sroa_idx = ((($162)) + 16|0);
  $_69$sroa$7$0$copyload = +HEAPF32[$_69$sroa$7$0$$sroa_idx>>2];
  $_69$sroa$8$0$$sroa_idx = ((($162)) + 20|0);
  $_69$sroa$8$0$copyload = +HEAPF32[$_69$sroa$8$0$$sroa_idx>>2];
  $163 = $_4$sroa$0$0$copyload$i$i * $_69$sroa$7$0$copyload;
  $164 = $_4$sroa$4$0$copyload$i$i214 * $_69$sroa$8$0$copyload;
  $165 = $163 + $164;
  $166 = $_4$sroa$5$0$copyload$i$i215 * $_69$sroa$7$0$copyload;
  $167 = $_4$sroa$6$0$copyload$i$i * $_69$sroa$8$0$copyload;
  $168 = $166 + $167;
  $169 = $158 + $165;
  $170 = $161 + $168;
  $171 = $_4$sroa$0$0$copyload$i$i * $_69$sroa$0$0$copyload;
  $172 = $_4$sroa$4$0$copyload$i$i214 * $_69$sroa$4$0$copyload;
  $173 = $171 + $172;
  $174 = $_4$sroa$0$0$copyload$i$i * $_69$sroa$5$0$copyload;
  $175 = $_4$sroa$4$0$copyload$i$i214 * $_69$sroa$6$0$copyload;
  $176 = $174 + $175;
  $177 = $_4$sroa$5$0$copyload$i$i215 * $_69$sroa$0$0$copyload;
  $178 = $_4$sroa$6$0$copyload$i$i * $_69$sroa$4$0$copyload;
  $179 = $177 + $178;
  $180 = $_4$sroa$5$0$copyload$i$i215 * $_69$sroa$5$0$copyload;
  $181 = $_4$sroa$6$0$copyload$i$i * $_69$sroa$6$0$copyload;
  $182 = $180 + $181;
  HEAPF32[$m12>>2] = $173;
  $_10$sroa$4$0$_5$sroa$0$0$$sroa_cast3$i$sroa_idx55$i = ((($m12)) + 4|0);
  HEAPF32[$_10$sroa$4$0$_5$sroa$0$0$$sroa_cast3$i$sroa_idx55$i>>2] = $179;
  $_10$sroa$5$0$_5$sroa$0$0$$sroa_cast3$i$sroa_idx57$i = ((($m12)) + 8|0);
  HEAPF32[$_10$sroa$5$0$_5$sroa$0$0$$sroa_cast3$i$sroa_idx57$i>>2] = $176;
  $_10$sroa$6$0$_5$sroa$0$0$$sroa_cast3$i$sroa_idx59$i = ((($m12)) + 12|0);
  HEAPF32[$_10$sroa$6$0$_5$sroa$0$0$$sroa_cast3$i$sroa_idx59$i>>2] = $182;
  $183 = ((($m12)) + 16|0);
  HEAPF32[$183>>2] = $169;
  $184 = ((($m12)) + 20|0);
  HEAPF32[$184>>2] = $170;
  $185 = HEAP32[$g2>>2]|0;
  $186 = HEAP32[$11>>2]|0;
  $187 = ((($186)) + 12|0);
  $188 = HEAP32[$187>>2]|0;
  FUNCTION_TABLE_viii[$188 & 511]($_72,$185,$m12);
  $189 = +HEAPF32[$margin>>2];
  $190 = !($189 >= 0.0);
  if ($190) {
   __ZN3std9panicking11begin_panic17h9936a195de5ffc4dE(11057,38,5412);
   // unreachable;
  }
  $191 = ((($_72)) + 4|0);
  $192 = +HEAPF32[$_72>>2];
  $193 = +HEAPF32[$191>>2];
  $194 = $192 - $189;
  $195 = $193 - $189;
  $196 = ((($_72)) + 8|0);
  $197 = ((($_72)) + 12|0);
  $198 = +HEAPF32[$196>>2];
  $199 = +HEAPF32[$197>>2];
  $200 = $189 + $198;
  $201 = $189 + $199;
  HEAPF32[$ls_aabb2>>2] = $194;
  $202 = ((($ls_aabb2)) + 4|0);
  HEAPF32[$202>>2] = $195;
  $203 = ((($ls_aabb2)) + 8|0);
  HEAPF32[$203>>2] = $200;
  $204 = ((($ls_aabb2)) + 12|0);
  HEAPF32[$204>>2] = $201;
  $205 = ((($0)) + 4|0);
  $$idx$i70 = ((($0)) + 8|0);
  $$idx$val$i71 = HEAP32[$$idx$i70>>2]|0;
  $$idx1$i72 = ((($0)) + 16|0);
  $$idx1$val$i73 = HEAP32[$$idx1$i72>>2]|0;
  $206 = (($$idx$val$i71) + (($$idx1$val$i73*12)|0)|0);
  $207 = ($$idx1$val$i73|0)==(0);
  L93: do {
   if ($207) {
    label = 91;
   } else {
    $208 = ((($0)) + 84|0);
    $209 = ((($5)) + 20|0);
    $$idx2$i = ((($_101)) + 8|0);
    $$idx3$i = ((($_101)) + 12|0);
    $$idx7$i = ((($_101)) + 4|0);
    $210 = ((($_111)) + 4|0);
    $211 = ((($_111)) + 8|0);
    $212 = ((($_111)) + 12|0);
    $213 = ((($_111)) + 16|0);
    $214 = ((($5)) + 16|0);
    $$idx$i82 = ((($0)) + 64|0);
    $216 = $$idx$val$i71;
    L95: while(1) {
     $215 = ((($216)) + 12|0);
     $switchtmp = ($216|0)==(0|0);
     if ($switchtmp) {
      label = 91;
      break L93;
     }
     HEAP32[$detector3>>2] = $216;
     $217 = HEAP32[$216>>2]|0;
     $218 = HEAP32[$208>>2]|0;
     $219 = ($217|0)==($218|0);
     if ($219) {
     } else {
      $220 = HEAP32[$209>>2]|0;
      FUNCTION_TABLE_viii[$220 & 511]($_101,$4,$217);
      $$idx$val$i77 = +HEAPF32[$ls_aabb2>>2];
      $$idx1$val$i79 = +HEAPF32[$202>>2];
      $$idx2$val$i = +HEAPF32[$$idx2$i>>2];
      $$idx3$val$i = +HEAPF32[$$idx3$i>>2];
      $221 = $$idx$val$i77 <= $$idx2$val$i;
      $222 = $$idx1$val$i79 <= $$idx3$val$i;
      $or$cond$i$i$i = $221 & $222;
      L101: do {
       if ($or$cond$i$i$i) {
        $$idx4$val$i = +HEAPF32[$203>>2];
        $$idx5$val$i = +HEAPF32[$204>>2];
        $$idx6$val$i = +HEAPF32[$_101>>2];
        $$idx7$val$i = +HEAPF32[$$idx7$i>>2];
        $223 = $$idx4$val$i >= $$idx6$val$i;
        $224 = $$idx5$val$i >= $$idx7$val$i;
        $or$cond$i$i8$i = $223 & $224;
        if ($or$cond$i$i8$i) {
         HEAP32[$_111>>2] = $detector3;
         HEAP32[$210>>2] = $disp;
         HEAP32[$211>>2] = $m2;
         HEAP32[$212>>2] = $g2;
         HEAP32[$213>>2] = $margin;
         $225 = HEAP32[$214>>2]|0;
         FUNCTION_TABLE_viiiii[$225 & 511]($4,$217,$3,$_111,128);
         $226 = HEAP32[$detector3>>2]|0;
         $227 = ((($226)) + 4|0);
         $228 = HEAP32[$227>>2]|0;
         $229 = ((($226)) + 8|0);
         $230 = HEAP32[$229>>2]|0;
         $231 = ((($230)) + 16|0);
         $232 = HEAP32[$231>>2]|0;
         $233 = (FUNCTION_TABLE_ii[$232 & 511]($228)|0);
         switch ($233<<24>>24) {
         case 0:  {
          label = 86;
          break L95;
          break;
         }
         case 2:  {
          break L101;
          break;
         }
         case 1:  {
          break;
         }
         default: {
          label = 158;
          break L95;
         }
         }
         HEAP8[$0>>0] = 1;
        } else {
         label = 83;
        }
       } else {
        label = 83;
       }
      } while(0);
      if ((label|0) == 83) {
       label = 0;
       $234 = HEAP32[$14>>2]|0;
       $$idx$val$i83 = HEAP32[$$idx$i82>>2]|0;
       $235 = ($234|0)==($$idx$val$i83|0);
       if ($235) {
        __ZN40__LT_alloc__raw_vec__RawVec_LT_T_GT__GT_6double17he78dc10a992efc57E($12);
        $$pre$i84 = HEAP32[$14>>2]|0;
        $238 = $$pre$i84;
       } else {
        $238 = $234;
       }
       $236 = HEAP32[$12>>2]|0;
       $237 = (($236) + ($238<<2)|0);
       HEAP32[$237>>2] = $217;
       $239 = HEAP32[$14>>2]|0;
       $240 = (($239) + 1)|0;
       HEAP32[$14>>2] = $240;
      }
     }
     $243 = ($215|0)==($206|0);
     if ($243) {
      label = 91;
      break L93;
     } else {
      $216 = $215;
     }
    }
    if ((label|0) == 86) {
     HEAP8[$0>>0] = 0;
     $241 = HEAP32[$detector3>>2]|0;
     $242 = HEAP32[$241>>2]|0;
     HEAP32[$208>>2] = $242;
     break;
    }
    else if ((label|0) == 158) {
     // unreachable;
    }
   }
  } while(0);
  L115: do {
   if ((label|0) == 91) {
    HEAP32[$visitor>>2] = $ls_aabb2;
    $244 = ((($visitor)) + 4|0);
    HEAP32[$244>>2] = $39;
    $245 = ((($5)) + 24|0);
    $246 = HEAP32[$245>>2]|0;
    $247 = (FUNCTION_TABLE_ii[$246 & 511]($4)|0);
    $248 = HEAP32[$247>>2]|0;
    $switch$i = ($248|0)==(1);
    if ($switch$i) {
     $249 = ((($247)) + 4|0);
     __ZN73__LT_ncollide_geometry__partitioning__bvt__BVTNode_LT_B_C__u20_BV_GT__GT_5visit17he0ab4eeb7498f34dE($249,$visitor);
    }
    $250 = HEAP32[$39>>2]|0;
    $251 = HEAP32[$40>>2]|0;
    $252 = (($250) + ($251<<2)|0);
    $253 = ($251|0)==(0);
    L120: do {
     if (!($253)) {
      $254 = $disp;
      $255 = $g2;
      $256 = ((($_10$i$i)) + 4|0);
      $257 = ((($_10$i$i)) + 8|0);
      $258 = ((($5)) + 12|0);
      $new_detector$i$sroa_raw_idx$i = ((($new_detector$i$i)) + 4|0);
      $259 = ((($0)) + 48|0);
      $260 = ((($0)) + 56|0);
      $$pre$i = ((($0)) + 20|0);
      $$idx$i = ((($0)) + 24|0);
      $$idx18$i = ((($0)) + 32|0);
      $$idx22$i = ((($0)) + 44|0);
      $$idx21$i = ((($0)) + 36|0);
      $261 = ((($0)) + 8|0);
      $$idx$i37$i = ((($0)) + 12|0);
      $262 = ((($0)) + 52|0);
      $263 = ((($0)) + 24|0);
      $264 = ((($0)) + 36|0);
      $265 = ((($newnext$i$i)) + 4|0);
      $266 = ((($newhash$i$i)) + 4|0);
      $newhash$idx48$i$i = ((($newhash$i$i)) + 8|0);
      $newnext$idx54$i$i = ((($newnext$i$i)) + 8|0);
      $267 = ((($_167)) + 4|0);
      $268 = ((($_167)) + 8|0);
      $269 = ((($_167)) + 12|0);
      $270 = ((($_167)) + 16|0);
      $271 = ((($5)) + 16|0);
      $iter5$sroa$0$0$in480 = $250;
      L122: while(1) {
       $272 = ((($iter5$sroa$0$0$in480)) + 4|0);
       $273 = HEAP32[$iter5$sroa$0$0$in480>>2]|0;
       __THREW__ = 0;
       $274 = (invoke_iii(216,($205|0),($273|0))|0);
       $275 = __THREW__; __THREW__ = 0;
       $276 = $275&1;
       if ($276) {
        label = 147;
        break;
       }
       $277 = ($274|0)==(-1);
       if ($277) {
        HEAP32[$new_detector$i$i>>2] = 0;
        $278 = HEAP32[$iter5$sroa$0$0$in480>>2]|0;
        HEAP32[$_10$i$i>>2] = $new_detector$i$i;
        HEAP32[$256>>2] = $254;
        HEAP32[$257>>2] = $255;
        $279 = HEAP32[$258>>2]|0;
        __THREW__ = 0;
        invoke_viiii($279|0,($4|0),($278|0),($_10$i$i|0),(152|0));
        $280 = __THREW__; __THREW__ = 0;
        $281 = $280&1;
        if ($281) {
         label = 99;
         break;
        }
        $293 = HEAP32[$new_detector$i$i>>2]|0;
        $294 = HEAP32[$new_detector$i$sroa_raw_idx$i>>2]|0;
        $switchtmp$i = ($293|0)==(0|0);
        if (!($switchtmp$i)) {
         $295 = HEAP32[$259>>2]|0;
         $296 = HEAP32[$260>>2]|0;
         $297 = ($295>>>0)<($296>>>0);
         if (!($297)) {
          $298 = HEAP32[$262>>2]|0;
          $299 = $298 << 1;
          HEAP32[$262>>2] = $299;
          $300 = (+($299>>>0));
          $301 = $300 * 0.69999998807907104;
          $302 = (~~(($301))>>>0);
          HEAP32[$260>>2] = $302;
          $303 = (($299) + -1)|0;
          HEAP32[$$pre$i>>2] = $303;
          __THREW__ = 0;
          invoke_vii(211,($newhash$i$i|0),($299|0));
          $304 = __THREW__; __THREW__ = 0;
          $305 = $304&1;
          if ($305) {
           label = 125;
           break;
          }
          $306 = HEAP32[$262>>2]|0;
          __THREW__ = 0;
          invoke_vii(211,($newnext$i$i|0),($306|0));
          $307 = __THREW__; __THREW__ = 0;
          $308 = $307&1;
          if ($308) {
           label = 128;
           break;
          }
          $309 = HEAP32[$259>>2]|0;
          $310 = ($309|0)==(0);
          if (!($310)) {
           $newhash$idx48$val$i$i = HEAP32[$newhash$idx48$i$i>>2]|0;
           $newnext$idx54$val$i$i = HEAP32[$newnext$idx54$i$i>>2]|0;
           $newnext$idx$val$i$i = HEAP32[$newnext$i$i>>2]|0;
           $newhash$idx$val$i$i = HEAP32[$newhash$i$i>>2]|0;
           $336 = 1;$iter$sroa$0$0109$i$i = 0;
           while(1) {
            $$idx55$val$i$i = HEAP32[$$idx1$i72>>2]|0;
            $311 = ($$idx55$val$i$i>>>0)>($iter$sroa$0$0109$i$i>>>0);
            if (!($311)) {
             label = 112;
             break L122;
            }
            $$idx$val$i$i = HEAP32[$$idx$i70>>2]|0;
            $313 = (($$idx$val$i$i) + (($iter$sroa$0$0109$i$i*12)|0)|0);
            $$val$i$i = HEAP32[$313>>2]|0;
            $314 = $$val$i$i << 15;
            $315 = $314 ^ -1;
            $316 = (($$val$i$i) + ($315))|0;
            $317 = $316 >>> 10;
            $318 = $317 ^ $316;
            $319 = ($318*9)|0;
            $320 = $319 >>> 6;
            $321 = $320 ^ $319;
            $322 = $321 << 11;
            $323 = $322 ^ -1;
            $324 = (($321) + ($323))|0;
            $325 = $324 >>> 16;
            $326 = $325 ^ $324;
            $327 = HEAP32[$$pre$i>>2]|0;
            $328 = $326 & $327;
            $329 = ($newhash$idx48$val$i$i>>>0)>($328>>>0);
            if (!($329)) {
             label = 114;
             break L122;
            }
            $331 = ($newnext$idx54$val$i$i>>>0)>($iter$sroa$0$0109$i$i>>>0);
            if (!($331)) {
             label = 116;
             break L122;
            }
            $333 = (($newhash$idx$val$i$i) + ($328<<2)|0);
            $334 = HEAP32[$333>>2]|0;
            $335 = (($newnext$idx$val$i$i) + ($iter$sroa$0$0109$i$i<<2)|0);
            HEAP32[$335>>2] = $334;
            HEAP32[$333>>2] = $iter$sroa$0$0109$i$i;
            $337 = ($336>>>0)<($309>>>0);
            $338 = (($336) + 1)|0;
            if ($337) {
             $iter$sroa$0$0109$i$i$phi = $336;$336 = $338;$iter$sroa$0$0109$i$i = $iter$sroa$0$0109$i$i$phi;
            } else {
             break;
            }
           }
          }
          ;HEAP32[$t$i69$i$i>>2]=HEAP32[$newhash$i$i>>2]|0;HEAP32[$t$i69$i$i+4>>2]=HEAP32[$newhash$i$i+4>>2]|0;HEAP32[$t$i69$i$i+8>>2]=HEAP32[$newhash$i$i+8>>2]|0;
          ;HEAP32[$newhash$i$i>>2]=HEAP32[$263>>2]|0;HEAP32[$newhash$i$i+4>>2]=HEAP32[$263+4>>2]|0;HEAP32[$newhash$i$i+8>>2]=HEAP32[$263+8>>2]|0;
          ;HEAP32[$263>>2]=HEAP32[$t$i69$i$i>>2]|0;HEAP32[$263+4>>2]=HEAP32[$t$i69$i$i+4>>2]|0;HEAP32[$263+8>>2]=HEAP32[$t$i69$i$i+8>>2]|0;
          ;HEAP32[$t$i$i$i>>2]=HEAP32[$newnext$i$i>>2]|0;HEAP32[$t$i$i$i+4>>2]=HEAP32[$newnext$i$i+4>>2]|0;HEAP32[$t$i$i$i+8>>2]=HEAP32[$newnext$i$i+8>>2]|0;
          ;HEAP32[$newnext$i$i>>2]=HEAP32[$264>>2]|0;HEAP32[$newnext$i$i+4>>2]=HEAP32[$264+4>>2]|0;HEAP32[$newnext$i$i+8>>2]=HEAP32[$264+8>>2]|0;
          ;HEAP32[$264>>2]=HEAP32[$t$i$i$i>>2]|0;HEAP32[$264+4>>2]=HEAP32[$t$i$i$i+4>>2]|0;HEAP32[$264+8>>2]=HEAP32[$t$i$i$i+8>>2]|0;
          $339 = HEAP32[$265>>2]|0;
          $not$$i$i$i$i62$i$i = ($339|0)==(0);
          if (!($not$$i$i$i$i62$i$i)) {
           $340 = HEAP32[$newnext$i$i>>2]|0;
           _free($340);
          }
          $341 = HEAP32[$266>>2]|0;
          $not$$i$i$i$i59$i$i = ($341|0)==(0);
          if (!($not$$i$i$i$i59$i$i)) {
           $342 = HEAP32[$newhash$i$i>>2]|0;
           _free($342);
          }
         }
         $352 = $273 << 15;
         $353 = $352 ^ -1;
         $354 = (($273) + ($353))|0;
         $355 = $354 >>> 10;
         $356 = $355 ^ $354;
         $357 = ($356*9)|0;
         $358 = $357 >>> 6;
         $359 = $358 ^ $357;
         $360 = $359 << 11;
         $361 = $360 ^ -1;
         $362 = (($359) + ($361))|0;
         $363 = $362 >>> 16;
         $364 = $363 ^ $362;
         $365 = HEAP32[$$pre$i>>2]|0;
         $366 = $365 & $364;
         $$idx18$val$i = HEAP32[$$idx18$i>>2]|0;
         $367 = ($$idx18$val$i>>>0)>($366>>>0);
         if (!($367)) {
          label = 130;
          break;
         }
         $369 = HEAP32[$259>>2]|0;
         $$idx22$val$i = HEAP32[$$idx22$i>>2]|0;
         $370 = ($$idx22$val$i>>>0)>($369>>>0);
         if (!($370)) {
          label = 132;
          break;
         }
         $$idx21$val$i = HEAP32[$$idx21$i>>2]|0;
         $$idx$val$i = HEAP32[$$idx$i>>2]|0;
         $372 = (($$idx$val$i) + ($366<<2)|0);
         $373 = HEAP32[$372>>2]|0;
         $374 = (($$idx21$val$i) + ($369<<2)|0);
         HEAP32[$374>>2] = $373;
         $$idx20$val$i = HEAP32[$$idx18$i>>2]|0;
         $375 = ($$idx20$val$i>>>0)>($366>>>0);
         if (!($375)) {
          label = 134;
          break;
         }
         $$idx19$val$i = HEAP32[$$idx$i>>2]|0;
         $377 = HEAP32[$259>>2]|0;
         $378 = (($$idx19$val$i) + ($366<<2)|0);
         HEAP32[$378>>2] = $377;
         $379 = $294;
         $380 = HEAP32[$$idx1$i72>>2]|0;
         $$idx$val$i38$i = HEAP32[$$idx$i37$i>>2]|0;
         $381 = ($380|0)==($$idx$val$i38$i|0);
         if ($381) {
          __THREW__ = 0;
          invoke_vi(217,($261|0));
          $382 = __THREW__; __THREW__ = 0;
          $383 = $382&1;
          if ($383) {
           label = 138;
           break;
          }
          $$pre$i$i = HEAP32[$$idx1$i72>>2]|0;
          $392 = $$pre$i$i;
         } else {
          $392 = $380;
         }
         $391 = HEAP32[$261>>2]|0;
         $_22$sroa$0$0$$sroa_idx$i$i = (($391) + (($392*12)|0)|0);
         HEAP32[$_22$sroa$0$0$$sroa_idx$i$i>>2] = $273;
         $_22$sroa$4$0$$sroa_idx18$i$i = (((($391) + (($392*12)|0)|0)) + 4|0);
         HEAP32[$_22$sroa$4$0$$sroa_idx18$i$i>>2] = $293;
         $_22$sroa$5$0$$sroa_idx20$i$i = (((($391) + (($392*12)|0)|0)) + 8|0);
         HEAP32[$_22$sroa$5$0$$sroa_idx20$i$i>>2] = $379;
         $393 = HEAP32[$$idx1$i72>>2]|0;
         $394 = (($393) + 1)|0;
         HEAP32[$$idx1$i72>>2] = $394;
         $395 = HEAP32[$259>>2]|0;
         $396 = (($395) + 1)|0;
         HEAP32[$259>>2] = $396;
         $397 = ($394>>>0)>($395>>>0);
         if (!($397)) {
          label = 142;
          break;
         }
         $$idx24$val$i = HEAP32[$261>>2]|0;
         $399 = (((($$idx24$val$i) + (($395*12)|0)|0)) + 4|0);
         $$sink = $399;
         label = 153;
        }
       } else {
        $$idx27$val$i = HEAP32[$$idx1$i72>>2]|0;
        $291 = ($$idx27$val$i>>>0)>($274>>>0);
        if (!($291)) {
         label = 104;
         break;
        }
        $$idx26$val$i = HEAP32[$$idx$i70>>2]|0;
        $400 = (((($$idx26$val$i) + (($274*12)|0)|0)) + 4|0);
        $$sink = $400;
        label = 153;
       }
       L158: do {
        if ((label|0) == 153) {
         label = 0;
         HEAP32[$sub_detector>>2] = $$sink;
         $414 = HEAP32[$iter5$sroa$0$0$in480>>2]|0;
         HEAP32[$_167>>2] = $sub_detector;
         HEAP32[$267>>2] = $disp;
         HEAP32[$268>>2] = $m2;
         HEAP32[$269>>2] = $g2;
         HEAP32[$270>>2] = $margin;
         $415 = HEAP32[$271>>2]|0;
         FUNCTION_TABLE_viiiii[$415 & 511]($4,$414,$3,$_167,176);
         $416 = HEAP32[$sub_detector>>2]|0;
         $417 = HEAP32[$416>>2]|0;
         $418 = ((($416)) + 4|0);
         $419 = HEAP32[$418>>2]|0;
         $420 = ((($419)) + 16|0);
         $421 = HEAP32[$420>>2]|0;
         $422 = (FUNCTION_TABLE_ii[$421 & 511]($417)|0);
         switch ($422<<24>>24) {
         case 0:  {
          label = 155;
          break L122;
          break;
         }
         case 2:  {
          break L158;
          break;
         }
         case 1:  {
          break;
         }
         default: {
          label = 158;
          break L122;
         }
         }
         HEAP8[$0>>0] = 1;
        }
       } while(0);
       $423 = ($272|0)==($252|0);
       if ($423) {
        break L120;
       } else {
        $iter5$sroa$0$0$in480 = $272;
       }
      }
      switch (label|0) {
       case 99: {
        $282 = ___cxa_find_matching_catch_2()|0;
        $283 = tempRet0;
        $284 = HEAP32[$new_detector$i$i>>2]|0;
        $switchtmp$i$i$i = ($284|0)==(0|0);
        if ($switchtmp$i$i$i) {
         $eh$lpad$body$i$index5Z2D = $283;$eh$lpad$body$i$indexZ2D = $282;
         label = 149;
        } else {
         $$idx1$i$i$i$i = ((($new_detector$i$i)) + 4|0);
         $$idx1$val$i$i$i$i = HEAP32[$$idx1$i$i$i$i>>2]|0;
         $$idx1$val$val$i$i$i$i = HEAP32[$$idx1$val$i$i$i$i>>2]|0;
         __THREW__ = 0;
         invoke_vi($$idx1$val$val$i$i$i$i|0,($284|0));
         $285 = __THREW__; __THREW__ = 0;
         $286 = $285&1;
         if ($286) {
          label = 148;
         } else {
          $287 = HEAP32[$$idx1$i$i$i$i>>2]|0;
          $288 = ((($287)) + 4|0);
          $289 = HEAP32[$288>>2]|0;
          $290 = ($289|0)==(0);
          if ($290) {
           $eh$lpad$body$i$index5Z2D = $283;$eh$lpad$body$i$indexZ2D = $282;
           label = 149;
          } else {
           _free($284);
           $eh$lpad$body$i$index5Z2D = $283;$eh$lpad$body$i$indexZ2D = $282;
           label = 149;
          }
         }
        }
        break;
       }
       case 104: {
        __THREW__ = 0;
        invoke_viiiii(214,(12236|0),104,1358,($274|0),($$idx27$val$i|0));
        $292 = __THREW__; __THREW__ = 0;
        label = 148;
        break;
       }
       case 112: {
        __THREW__ = 0;
        invoke_viiiii(214,(12236|0),104,1349,($iter$sroa$0$0109$i$i|0),($$idx55$val$i$i|0));
        $312 = __THREW__; __THREW__ = 0;
        label = 126;
        break;
       }
       case 114: {
        __THREW__ = 0;
        invoke_viiiii(214,(12236|0),104,1349,($328|0),($newhash$idx48$val$i$i|0));
        $330 = __THREW__; __THREW__ = 0;
        label = 126;
        break;
       }
       case 116: {
        __THREW__ = 0;
        invoke_viiiii(214,(12236|0),104,1358,($iter$sroa$0$0109$i$i|0),($newnext$idx54$val$i$i|0));
        $332 = __THREW__; __THREW__ = 0;
        label = 126;
        break;
       }
       case 125: {
        $345 = ___cxa_find_matching_catch_2()|0;
        $346 = tempRet0;
        $$fca$0$extract4110$i = $345;$$fca$1$extract6111$i = $346;
        break;
       }
       case 128: {
        $350 = ___cxa_find_matching_catch_2()|0;
        $351 = tempRet0;
        $$fca$0$extract2493$i$i = $350;$$fca$1$extract2695$i$i = $351;
        label = 123;
        break;
       }
       case 130: {
        __THREW__ = 0;
        invoke_viiiii(214,(12236|0),104,1349,($366|0),($$idx18$val$i|0));
        $368 = __THREW__; __THREW__ = 0;
        label = 151;
        break;
       }
       case 132: {
        __THREW__ = 0;
        invoke_viiiii(214,(12236|0),104,1358,($369|0),($$idx22$val$i|0));
        $371 = __THREW__; __THREW__ = 0;
        label = 151;
        break;
       }
       case 134: {
        __THREW__ = 0;
        invoke_viiiii(214,(12236|0),104,1358,($366|0),($$idx20$val$i|0));
        $376 = __THREW__; __THREW__ = 0;
        label = 151;
        break;
       }
       case 138: {
        $384 = ___cxa_find_matching_catch_2()|0;
        $385 = tempRet0;
        $$idx1$val$val$i$i$i41$i = HEAP32[$379>>2]|0;
        __THREW__ = 0;
        invoke_vi($$idx1$val$val$i$i$i41$i|0,($293|0));
        $386 = __THREW__; __THREW__ = 0;
        $387 = $386&1;
        if ($387) {
         label = 152;
        } else {
         $388 = ((($379)) + 4|0);
         $389 = HEAP32[$388>>2]|0;
         $390 = ($389|0)==(0);
         if (!($390)) {
          _free($293);
         }
         $personalityslot$sroa$0$0$i = $384;$personalityslot$sroa$5$0$i = $385;
         ___resumeException($personalityslot$sroa$0$0$i|0);
         // unreachable;
        }
        break;
       }
       case 142: {
        __THREW__ = 0;
        invoke_viiiii(214,(12236|0),104,1358,($395|0),($394|0));
        $398 = __THREW__; __THREW__ = 0;
        label = 152;
        break;
       }
       case 147: {
        $406 = ___cxa_find_matching_catch_2()|0;
        $407 = tempRet0;
        $eh$lpad$body$i$index5Z2D = $407;$eh$lpad$body$i$indexZ2D = $406;
        label = 149;
        break;
       }
       case 155: {
        HEAP8[$0>>0] = 0;
        $424 = HEAP32[$iter5$sroa$0$0$in480>>2]|0;
        $425 = ((($0)) + 84|0);
        HEAP32[$425>>2] = $424;
        break L115;
        break;
       }
       case 158: {
        // unreachable;
        break;
       }
      }
      if ((label|0) == 126) {
       $347 = ___cxa_find_matching_catch_2()|0;
       $348 = tempRet0;
       $349 = HEAP32[$265>>2]|0;
       $not$$i$i$i$i$i$i = ($349|0)==(0);
       if ($not$$i$i$i$i$i$i) {
        $$fca$0$extract2493$i$i = $347;$$fca$1$extract2695$i$i = $348;
        label = 123;
       } else {
        _free($newnext$idx$val$i$i);
        $$fca$0$extract2493$i$i = $347;$$fca$1$extract2695$i$i = $348;
        label = 123;
       }
      }
      else if ((label|0) == 148) {
       $408 = ___cxa_find_matching_catch_2()|0;
       $409 = tempRet0;
       $eh$lpad$body$i$index5Z2D = $409;$eh$lpad$body$i$indexZ2D = $408;
       label = 149;
      }
      else if ((label|0) == 151) {
       $410 = ___cxa_find_matching_catch_2()|0;
       $411 = tempRet0;
       $$fca$0$extract4110$i = $410;$$fca$1$extract6111$i = $411;
      }
      else if ((label|0) == 152) {
       $412 = ___cxa_find_matching_catch_2()|0;
       $413 = tempRet0;
       $personalityslot$sroa$0$0$i = $412;$personalityslot$sroa$5$0$i = $413;
       ___resumeException($personalityslot$sroa$0$0$i|0);
       // unreachable;
      }
      if ((label|0) == 123) {
       $343 = HEAP32[$266>>2]|0;
       $not$$i$i$i$i56$i$i = ($343|0)==(0);
       if ($not$$i$i$i$i56$i$i) {
        $$fca$0$extract4110$i = $$fca$0$extract2493$i$i;$$fca$1$extract6111$i = $$fca$1$extract2695$i$i;
       } else {
        $344 = HEAP32[$newhash$i$i>>2]|0;
        _free($344);
        $$fca$0$extract4110$i = $$fca$0$extract2493$i$i;$$fca$1$extract6111$i = $$fca$1$extract2695$i$i;
       }
      }
      else if ((label|0) == 149) {
       $personalityslot$sroa$0$0$i = $eh$lpad$body$i$indexZ2D;$personalityslot$sroa$5$0$i = $eh$lpad$body$i$index5Z2D;
       ___resumeException($personalityslot$sroa$0$0$i|0);
       // unreachable;
      }
      $401 = $294;
      $$idx1$val$val$i$i = HEAP32[$401>>2]|0;
      FUNCTION_TABLE_vi[$$idx1$val$val$i$i & 511]($293);
      $402 = $294;
      $403 = ((($402)) + 4|0);
      $404 = HEAP32[$403>>2]|0;
      $405 = ($404|0)==(0);
      if ($405) {
       $personalityslot$sroa$0$0$i = $$fca$0$extract4110$i;$personalityslot$sroa$5$0$i = $$fca$1$extract6111$i;
       ___resumeException($personalityslot$sroa$0$0$i|0);
       // unreachable;
      }
      _free($293);
      $personalityslot$sroa$0$0$i = $$fca$0$extract4110$i;$personalityslot$sroa$5$0$i = $$fca$1$extract6111$i;
      ___resumeException($personalityslot$sroa$0$0$i|0);
      // unreachable;
     }
    } while(0);
    $426 = ((($0)) + 84|0);
    HEAP32[$426>>2] = -1;
    STACKTOP = sp;return;
   }
  } while(0);
 }
 STACKTOP = sp;return;
}
function __ZN162__LT_ncollide_geometry__query__algorithms__johnson_simplex__JohnsonSimplex_LT_P_GT__u20_as_u20_ncollide_geometry__query__algorithms__simplex__Simplex_LT_P_GT__GT_25project_origin_and_reduce17hfe5256e2c63ddccbE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$foundit$0$off0$us$us$i$us = 0, $$foundit$0$off0$us360$i = 0, $$idx$i$i = 0, $$idx$i81$i = 0, $$idx$phi$trans$insert$i = 0, $$idx$val$i$i = 0, $$idx$val$i82$i = 0.0, $$idx$val$pre$i = 0.0, $$idx$val21$i$i = 0, $$idx$val21$i104318$i = 0.0, $$idx$val21$i113316$i = 0.0, $$idx$val21$i126$i = 0, $$idx1$i$i = 0, $$idx1$val$i$i = 0.0, $$idx12$i$i = 0, $$idx12$i105$i = 0, $$idx12$i114$i = 0, $$idx12$i127$i = 0, $$idx12$val22$i$i = 0, $$idx12$val22$i106319$i = 0.0;
 var $$idx12$val22$i115317$i = 0.0, $$idx12$val22$i128$i = 0, $$idx25$val$pre$i = 0.0, $$idx26$val$i = 0, $$idx27$i = 0, $$idx27$val$i = 0, $$idx28$i = 0, $$idx28$val$i = 0, $$idx29$i = 0, $$idx29$val$i = 0, $$idx3$i$i = 0, $$idx3$val$i$i = 0.0, $$idx32$i = 0, $$idx32$val$i = 0, $$idx33$val$i = 0, $$idx35$i = 0, $$idx35$val$i = 0, $$idx38$i = 0, $$idx38$val$i = 0, $$idx39$i = 0;
 var $$idx39$val$i = 0, $$idx4$i$i = 0, $$idx4$val$i$i = 0.0, $$idx40$val$i = 0, $$idx40$val$i$pre = 0, $$idx42$val$i = 0, $$idx44$val$i = 0, $$idx44$val$i$pre = 0, $$idx48$i = 0, $$idx48$val$us$us$i$us = 0, $$idx48$val$us352$pre$i$pre = 0, $$idx50$val$i = 0, $$idx50$val$pre$i = 0, $$idx51$val$i = 0, $$idx51$val$pre$i = 0, $$idx52$i = 0, $$idx52$val$i = 0, $$idx52$val$pre$i = 0, $$idx54$val$i = 0, $$idx6$i$i = 0;
 var $$idx6$val$i$i = 0.0, $$idx60$val$i = 0, $$idx62$val$i = 0, $$idx68$val$i = 0, $$idx7$i$i = 0, $$idx7$val$i$i = 0.0, $$idx70$val$i = 0, $$idx70$val$i$pre = 0, $$idx72$val$i = 0, $$idx74$val$us$us$i$us = 0, $$idx74$val$us351$pre$i$pre = 0, $$idx78$val$i = 0, $$idx78$val$i$pre = 0, $$phi$trans$insert$i = 0, $$phi$trans$insert422$i = 0, $$pre$i = 0, $$pre$i$i = 0, $$pre$phi$iZ2D = 0, $$pre$phi433$iZ2D = 0, $$pre424$i = 0;
 var $$pre430$i = 0, $$pre431$i = 0, $$pre432$i = 0, $$pre434$i = 0, $$ptr$i = 0, $$ptr391$i = 0, $$val$us$us$i$us = 0.0, $$val17$i = 0.0, $$val18$us$us$i$us = 0.0, $$val18$us353$i = 0.0, $$val19$i = 0.0, $$val19$i15 = 0.0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0;
 var $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0.0, $12 = 0, $120 = 0, $121 = 0, $122 = 0.0, $123 = 0.0, $124 = 0.0;
 var $125 = 0.0, $126 = 0.0, $127 = 0.0, $128 = 0.0, $129 = 0.0, $13 = 0, $130 = 0.0, $131 = 0.0, $132 = 0.0, $133 = 0.0, $134 = 0, $135 = 0, $136 = 0.0, $137 = 0.0, $138 = 0.0, $139 = 0.0, $14 = 0, $140 = 0.0, $141 = 0.0, $142 = 0;
 var $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = SIMD_Int32x4(0,0,0,0), $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0;
 var $161 = 0, $162 = 0, $163 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = SIMD_Int32x4(0,0,0,0), $30 = 0, $31 = 0;
 var $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0;
 var $50 = 0, $51 = 0, $52 = 0.0, $53 = 0.0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0.0, $59 = 0.0, $6 = 0, $60 = 0.0, $61 = 0.0, $62 = 0.0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0;
 var $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0.0, $74 = 0.0, $75 = 0.0, $76 = 0.0, $77 = 0.0, $78 = 0.0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0;
 var $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $cmp$n = 0, $cmp$zero = 0, $curr$0$lcssa$i = 0, $curr$0383$i = 0, $curr$0383$pn$i = 0, $curr$1$lcssa$i = 0;
 var $curr$2369$i = 0, $curr$3$lcssa$i = 0, $curr$3343$us$i = 0, $curr$3343$us$i$lcssa = 0, $curr$3343$us$i$us = 0, $curr_num_pts$0$lcssa$i = 0, $curr_num_pts$1370$i = 0, $curr_num_pts$1370$i35 = 0, $determinant$0$lcssa$i = 0.0, $exitcond$i = 0, $exitcond409$i = 0, $exitcond410$i = 0, $exitcond413$i$us = 0, $exitcond420$i = 0, $exitcond420$i16 = 0, $foundit$0$off0$be$us$us$i$us = 0, $foundit$0$off0$be$us362$i = 0, $foundit$0$off0339$us$us$i$us = 0, $foundit$0$off0339$us349$i = 0, $ind$end = 0;
 var $index = 0, $index$next = 0, $indvars$iv$i = 0, $indvars$iv$next412$i = 0, $indvars$iv$next415$i = 0, $indvars$iv411$i = 0, $indvars$iv414$i = 0, $indvars$iv418$i = 0, $iter$sroa$0$0$in390$i = 0, $iter10$sroa$0$0324$i = 0, $iter13$sroa$0$0323$i = 0, $iter13$sroa$0$0323$i$phi = 0, $iter2$sroa$0$0$in382$i = 0, $iter6$sroa$5$0$in368$i = 0, $iter8$sroa$0$0338$us$us$i$us = 0, $iter8$sroa$0$0338$us$us$i$us$phi = 0, $iter8$sroa$0$0338$us350$i = 0, $iter8$sroa$0$0338$us350$i$phi = 0, $min$iters$check = 0, $n$vec = 0;
 var $next$gep = 0, $not$$us$us$i$us = 0, $not$$us359$i = 0, $offsets_iter$sroa$6$0$v$i = 0, $or$cond389$i = 0, $proj$sroa$0$0$lcssa437$i = 0.0, $proj$sroa$0$0325$i = 0.0, $proj$sroa$12$0$lcssa443$i = 0.0, $proj$sroa$12$0328$i = 0.0, $proj$sroa$15$0$lcssa445$i = 0.0, $proj$sroa$15$0329$i = 0.0, $proj$sroa$18$0$lcssa447$i = 0.0, $proj$sroa$18$0330$i = 0.0, $proj$sroa$6$0$lcssa439$i = 0.0, $proj$sroa$6$0326$i = 0.0, $proj$sroa$9$0$lcssa441$i = 0.0, $proj$sroa$9$0327$i = 0.0, $switchtmp388$i = 0, $t$i$i = 0, $total_det$0$lcssa449$i = 0.0;
 var $total_det$0331$i = 0.0, $value$i$sroa$7$0$$sroa_idx296$i = 0, $value$i$sroa$8$0$$sroa_idx298$i = 0, label = 0, sp = 0, temp_Float32x4_ptr = 0, temp_Int32x4_ptr = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $t$i$i = sp;
 $2 = ((($1)) + 4|0);
 $$idx32$i = ((($1)) + 12|0);
 $$idx32$val$i = HEAP32[$$idx32$i>>2]|0;
 switch ($$idx32$val$i|0) {
 case 0:  {
  __ZN3std9panicking11begin_panic17h9936a195de5ffc4dE(12444,46,5532);
  // unreachable;
  break;
 }
 case 1:  {
  $$idx33$val$i = HEAP32[$2>>2]|0;
  $3 = SIMD_Int32x4_load(HEAPU8, $$idx33$val$i);
  $4 = ((($$idx33$val$i)) + 16|0);
  $$idx$val21$i126$i = HEAP32[$4>>2]|0;
  $$idx12$i127$i = ((($$idx33$val$i)) + 20|0);
  $$idx12$val22$i128$i = HEAP32[$$idx12$i127$i>>2]|0;
  temp_Int32x4_ptr = $0;SIMD_Int32x4_store(HEAPU8, temp_Int32x4_ptr, $3);
  $5 = ((($0)) + 16|0);
  HEAP32[$5>>2] = $$idx$val21$i126$i;
  $6 = ((($0)) + 20|0);
  HEAP32[$6>>2] = $$idx12$val22$i128$i;
  STACKTOP = sp;return;
  break;
 }
 default: {
  $$idx26$val$i = HEAP32[$1>>2]|0;
  $7 = (($$idx32$val$i) + -1)|0;
  $$idx28$i = ((($$idx26$val$i)) + 16|0);
  $$idx28$val$i = HEAP32[$$idx28$i>>2]|0;
  $8 = ($$idx28$val$i>>>0)>($7>>>0);
  if (!($8)) {
   __ZN4core9panicking18panic_bounds_check17hd14a5808e41829e9E(12236,104,1349,$7,$$idx28$val$i);
   // unreachable;
  }
  $$idx27$i = ((($$idx26$val$i)) + 8|0);
  $$idx27$val$i = HEAP32[$$idx27$i>>2]|0;
  $9 = (($$idx27$val$i) + (($7*44)|0)|0);
  $$idx29$i = ((($1)) + 36|0);
  $$idx29$val$i = HEAP32[$$idx29$i>>2]|0;
  $10 = (((($$idx27$val$i) + (($7*44)|0)|0)) + 36|0);
  $11 = HEAP32[$10>>2]|0;
  $12 = (($11) - ($$idx32$val$i))|0;
  $$idx35$i = ((($1)) + 28|0);
  $13 = ($$idx29$val$i>>>0)<($12>>>0);
  if ($13) {
   __ZN4core5slice22slice_index_order_fail17h0bf73460ffe8be02E($12,$$idx29$val$i);
   // unreachable;
  }
  $$idx35$val$i = HEAP32[$$idx35$i>>2]|0;
  $14 = (($$idx35$val$i) + ($12<<2)|0);
  $15 = (($$idx29$val$i) - ($12))|0;
  $16 = (($14) + ($15<<2)|0);
  $17 = ($15|0)==(0);
  $switchtmp388$i = ($14|0)==(0|0);
  $or$cond389$i = $17 | $switchtmp388$i;
  do {
   if (!($or$cond389$i)) {
    $18 = (($$idx32$val$i) + ($$idx29$val$i))|0;
    $19 = $18 << 2;
    $20 = (($19) + -4)|0;
    $21 = $11 << 2;
    $22 = (($20) - ($21))|0;
    $23 = $22 >>> 2;
    $24 = (($23) + 1)|0;
    $min$iters$check = ($24>>>0)<(4);
    if ($min$iters$check) {
     $iter$sroa$0$0$in390$i = $14;
    } else {
     $n$vec = $24 & 2147483644;
     $cmp$zero = ($n$vec|0)==(0);
     $ind$end = (($14) + ($n$vec<<2)|0);
     if ($cmp$zero) {
      $iter$sroa$0$0$in390$i = $14;
     } else {
      $index = 0;
      while(1) {
       $next$gep = (($14) + ($index<<2)|0);
       temp_Float32x4_ptr = $next$gep;SIMD_Float32x4_store(HEAPU8, temp_Float32x4_ptr, SIMD_Float32x4_splat(Math_fround(1.0)));
       $index$next = (($index) + 4)|0;
       $25 = ($index$next|0)==($n$vec|0);
       if ($25) {
        break;
       } else {
        $index = $index$next;
       }
      }
      $cmp$n = ($24|0)==($n$vec|0);
      if ($cmp$n) {
       break;
      } else {
       $iter$sroa$0$0$in390$i = $ind$end;
      }
     }
    }
    while(1) {
     $29 = ((($iter$sroa$0$0$in390$i)) + 4|0);
     HEAPF32[$iter$sroa$0$0$in390$i>>2] = 1.0;
     $30 = ($29|0)==($16|0);
     if ($30) {
      break;
     } else {
      $iter$sroa$0$0$in390$i = $29;
     }
    }
   }
  } while(0);
  $$idx38$i = (((($$idx27$val$i) + (($7*44)|0)|0)) + 12|0);
  $$idx39$i = (((($$idx27$val$i) + (($7*44)|0)|0)) + 20|0);
  $$idx39$val$i = HEAP32[$$idx39$i>>2]|0;
  $26 = ($$idx39$val$i>>>0)<(2);
  if ($26) {
   __ZN4core5slice22slice_index_order_fail17h0bf73460ffe8be02E(2,$$idx39$val$i);
   // unreachable;
  }
  $$idx38$val$i = HEAP32[$$idx38$i>>2]|0;
  $$ptr391$i = (($$idx38$val$i) + ($$idx39$val$i<<2)|0);
  $27 = ($$idx39$val$i|0)==(2);
  if ($27) {
   $$idx50$val$i = $$idx38$val$i;$$idx51$val$i = 2;$curr$0$lcssa$i = $$idx32$val$i;$curr_num_pts$0$lcssa$i = 1;
  } else {
   $$ptr$i = ((($$idx38$val$i)) + 8|0);
   $$idx52$i = (((($$idx27$val$i) + (($7*44)|0)|0)) + 24|0);
   $28 = $$idx39$val$i << 2;
   $curr$0383$i = $$idx32$val$i;$indvars$iv$i = 1;$indvars$iv414$i = 2;$iter2$sroa$0$0$in382$i = $$ptr$i;
   while(1) {
    $31 = ((($iter2$sroa$0$0$in382$i)) + 4|0);
    $32 = HEAP32[$iter2$sroa$0$0$in382$i>>2]|0;
    $33 = ($curr$0383$i|0)==($32|0);
    $$pre434$i = (($indvars$iv$i) + 1)|0;
    if ($33) {
     $curr$1$lcssa$i = $curr$0383$i;
    } else {
     $curr$0383$pn$i = $curr$0383$i;
     while(1) {
      $indvars$iv418$i = (($curr$0383$pn$i) + ($indvars$iv414$i))|0;
      $$idx62$val$i = HEAP32[$2>>2]|0;
      $$idx60$val$i = HEAP32[$9>>2]|0;
      $43 = (($curr$0383$pn$i) + 1)|0;
      $44 = (($$idx60$val$i) + ($43<<2)|0);
      $45 = HEAP32[$44>>2]|0;
      $46 = (($$idx60$val$i) + ($curr$0383$pn$i<<2)|0);
      $47 = HEAP32[$46>>2]|0;
      $48 = (($43) + ($indvars$iv$i))|0;
      $49 = ($43>>>0)<($48>>>0);
      if ($49) {
       $$idx12$i105$i = (((($$idx62$val$i) + (($47*24)|0)|0)) + 20|0);
       $$idx12$val22$i106319$i = +HEAPF32[$$idx12$i105$i>>2];
       $50 = (((($$idx62$val$i) + (($47*24)|0)|0)) + 16|0);
       $$idx$val21$i104318$i = +HEAPF32[$50>>2];
       $$idx12$i114$i = (((($$idx62$val$i) + (($45*24)|0)|0)) + 20|0);
       $$idx12$val22$i115317$i = +HEAPF32[$$idx12$i114$i>>2];
       $51 = (((($$idx62$val$i) + (($45*24)|0)|0)) + 16|0);
       $$idx$val21$i113316$i = +HEAPF32[$51>>2];
       $$idx72$val$i = HEAP32[$$idx35$i>>2]|0;
       $$idx54$val$i = HEAP32[$$idx52$i>>2]|0;
       $52 = $$idx$val21$i113316$i - $$idx$val21$i104318$i;
       $53 = $$idx12$val22$i115317$i - $$idx12$val22$i106319$i;
       $54 = (($curr$0383$pn$i) + 2)|0;
       $55 = (($$idx54$val$i) + ($43<<2)|0);
       $56 = HEAP32[$55>>2]|0;
       $57 = (($$idx72$val$i) + ($56<<2)|0);
       $$val19$i15 = +HEAPF32[$57>>2];
       $58 = $52 * $$idx$val21$i113316$i;
       $59 = $53 * $$idx12$val22$i115317$i;
       $60 = $59 + $58;
       $61 = $60 * $$val19$i15;
       $62 = $61 + 0.0;
       $exitcond420$i16 = ($54|0)==($indvars$iv418$i|0);
       if ($exitcond420$i16) {
        $$idx52$val$i = $$idx54$val$i;$66 = $$idx72$val$i;$determinant$0$lcssa$i = $62;
       } else {
        $68 = $54;$78 = $62;
        while(1) {
         $$phi$trans$insert$i = (($$idx60$val$i) + ($68<<2)|0);
         $$pre$i = HEAP32[$$phi$trans$insert$i>>2]|0;
         $$idx$phi$trans$insert$i = (((($$idx62$val$i) + (($$pre$i*24)|0)|0)) + 16|0);
         $$idx$val$pre$i = +HEAPF32[$$idx$phi$trans$insert$i>>2];
         $$phi$trans$insert422$i = (((($$idx62$val$i) + (($$pre$i*24)|0)|0)) + 20|0);
         $$idx25$val$pre$i = +HEAPF32[$$phi$trans$insert422$i>>2];
         $69 = (($68) + 1)|0;
         $70 = (($$idx54$val$i) + ($68<<2)|0);
         $71 = HEAP32[$70>>2]|0;
         $72 = (($$idx72$val$i) + ($71<<2)|0);
         $$val19$i = +HEAPF32[$72>>2];
         $73 = $52 * $$idx$val$pre$i;
         $74 = $53 * $$idx25$val$pre$i;
         $75 = $74 + $73;
         $76 = $75 * $$val19$i;
         $77 = $78 + $76;
         $exitcond420$i = ($69|0)==($indvars$iv418$i|0);
         if ($exitcond420$i) {
          $$idx52$val$i = $$idx54$val$i;$66 = $$idx72$val$i;$determinant$0$lcssa$i = $77;
          break;
         } else {
          $68 = $69;$78 = $77;
         }
        }
       }
      } else {
       $$pre424$i = HEAP32[$$idx35$i>>2]|0;
       $$idx52$val$pre$i = HEAP32[$$idx52$i>>2]|0;
       $$idx52$val$i = $$idx52$val$pre$i;$66 = $$pre424$i;$determinant$0$lcssa$i = 0.0;
      }
      $63 = (($$idx52$val$i) + ($curr$0383$pn$i<<2)|0);
      $64 = HEAP32[$63>>2]|0;
      $65 = (($66) + ($64<<2)|0);
      HEAPF32[$65>>2] = $determinant$0$lcssa$i;
      $67 = ($indvars$iv418$i|0)==($32|0);
      if ($67) {
       $curr$1$lcssa$i = $32;
       break;
      } else {
       $curr$0383$pn$i = $indvars$iv418$i;
      }
     }
    }
    $42 = ($31|0)==($$ptr391$i|0);
    $indvars$iv$next415$i = (($indvars$iv414$i) + 1)|0;
    if ($42) {
     break;
    } else {
     $curr$0383$i = $curr$1$lcssa$i;$indvars$iv$i = $$pre434$i;$indvars$iv414$i = $indvars$iv$next415$i;$iter2$sroa$0$0$in382$i = $31;
    }
   }
   $34 = (($28) + -12)|0;
   $35 = $34 >>> 2;
   $36 = (($35) + 2)|0;
   $$idx50$val$pre$i = HEAP32[$$idx38$i>>2]|0;
   $$idx51$val$pre$i = HEAP32[$$idx39$i>>2]|0;
   $$idx50$val$i = $$idx50$val$pre$i;$$idx51$val$i = $$idx51$val$pre$i;$curr$0$lcssa$i = $curr$1$lcssa$i;$curr_num_pts$0$lcssa$i = $36;
  }
  $37 = (($$idx50$val$i) + ($$idx51$val$i<<2)|0);
  $38 = ($$idx51$val$i|0)==(0);
  $39 = ((($37)) + -4|0);
  $offsets_iter$sroa$6$0$v$i = $38 ? $37 : $39;
  $40 = ($offsets_iter$sroa$6$0$v$i|0)==($$idx50$val$i|0);
  L38: do {
   if (!($40)) {
    $$idx48$i = (((($$idx27$val$i) + (($7*44)|0)|0)) + 24|0);
    $41 = (($curr_num_pts$0$lcssa$i) + 1)|0;
    $curr$2369$i = $curr$0$lcssa$i;$curr_num_pts$1370$i = $curr_num_pts$0$lcssa$i;$indvars$iv411$i = $41;$iter6$sroa$5$0$in368$i = $offsets_iter$sroa$6$0$v$i;
    L40: while(1) {
     $79 = ((($iter6$sroa$5$0$in368$i)) + -4|0);
     $80 = HEAP32[$79>>2]|0;
     $81 = ($curr$2369$i|0)==($80|0);
     L42: do {
      if ($81) {
       $curr$3$lcssa$i = $curr$2369$i;
      } else {
       $82 = Math_imul($curr_num_pts$1370$i, $curr_num_pts$1370$i)|0;
       switch ($curr_num_pts$1370$i|0) {
       case 0:  {
        label = 49;
        break L40;
        break;
       }
       case 1:  {
        $$idx74$val$us351$pre$i$pre = HEAP32[$$idx35$i>>2]|0;
        $$idx48$val$us352$pre$i$pre = HEAP32[$$idx48$i>>2]|0;
        $curr$3343$us$i = $curr$2369$i;
        while(1) {
         $108 = 1;$foundit$0$off0339$us349$i = 1;$iter8$sroa$0$0338$us350$i = 0;
         while(1) {
          $101 = (($iter8$sroa$0$0338$us350$i) + 1)|0;
          $102 = (($curr$3343$us$i) - ($101))|0;
          $103 = (($$idx48$val$us352$pre$i$pre) + ($102<<2)|0);
          $104 = HEAP32[$103>>2]|0;
          $105 = (($$idx74$val$us351$pre$i$pre) + ($104<<2)|0);
          $$val18$us353$i = +HEAPF32[$105>>2];
          $106 = $$val18$us353$i > 0.0;
          if ($106) {
           $not$$us359$i = $$val18$us353$i != 3.4028234663852886E+38;
           $$foundit$0$off0$us360$i = $foundit$0$off0339$us349$i & $not$$us359$i;
           $foundit$0$off0$be$us362$i = $$foundit$0$off0$us360$i;
          } else {
           $foundit$0$off0$be$us362$i = 0;
          }
          $107 = (($108) + 1)|0;
          $exitcond410$i = ($107|0)==($indvars$iv411$i|0);
          if ($exitcond410$i) {
           break;
          } else {
           $iter8$sroa$0$0338$us350$i$phi = $108;$108 = $107;$foundit$0$off0339$us349$i = $foundit$0$off0$be$us362$i;$iter8$sroa$0$0338$us350$i = $iter8$sroa$0$0338$us350$i$phi;
          }
         }
         if ($foundit$0$off0$be$us362$i) {
          $$idx44$val$i = $$idx48$val$us352$pre$i$pre;$$idx78$val$i = $$idx74$val$us351$pre$i$pre;$curr$3343$us$i$lcssa = $curr$3343$us$i;$curr_num_pts$1370$i35 = 1;
          label = 48;
          break L40;
         }
         $99 = (($curr$3343$us$i) - ($82))|0;
         $100 = ($99|0)==($80|0);
         if ($100) {
          $curr$3$lcssa$i = $80;
          break L42;
         } else {
          $curr$3343$us$i = $99;
         }
        }
        break;
       }
       default: {
        $curr$3343$us$i$us = $curr$2369$i;
       }
       }
       while(1) {
        $96 = 1;$foundit$0$off0339$us$us$i$us = 1;$iter8$sroa$0$0338$us$us$i$us = 0;
        while(1) {
         $83 = (($iter8$sroa$0$0338$us$us$i$us) + 1)|0;
         $84 = Math_imul($83, $curr_num_pts$1370$i)|0;
         $85 = (($curr$3343$us$i$us) - ($84))|0;
         $$idx74$val$us$us$i$us = HEAP32[$$idx35$i>>2]|0;
         $$idx48$val$us$us$i$us = HEAP32[$$idx48$i>>2]|0;
         $86 = (($$idx48$val$us$us$i$us) + ($85<<2)|0);
         $87 = HEAP32[$86>>2]|0;
         $88 = (($$idx74$val$us$us$i$us) + ($87<<2)|0);
         $$val18$us$us$i$us = +HEAPF32[$88>>2];
         $89 = $$val18$us$us$i$us > 0.0;
         if ($89) {
          $90 = (($85) + 1)|0;
          $91 = (($$idx48$val$us$us$i$us) + ($90<<2)|0);
          $92 = HEAP32[$91>>2]|0;
          $93 = (($$idx74$val$us$us$i$us) + ($92<<2)|0);
          $$val$us$us$i$us = +HEAPF32[$93>>2];
          $94 = $$val$us$us$i$us > 0.0;
          if ($94) {
           HEAPF32[$93>>2] = 3.4028234663852886E+38;
          }
          $not$$us$us$i$us = $$val18$us$us$i$us != 3.4028234663852886E+38;
          $$foundit$0$off0$us$us$i$us = $foundit$0$off0339$us$us$i$us & $not$$us$us$i$us;
          $foundit$0$off0$be$us$us$i$us = $$foundit$0$off0$us$us$i$us;
         } else {
          $foundit$0$off0$be$us$us$i$us = 0;
         }
         $95 = (($96) + 1)|0;
         $exitcond413$i$us = ($95|0)==($indvars$iv411$i|0);
         if ($exitcond413$i$us) {
          break;
         } else {
          $iter8$sroa$0$0338$us$us$i$us$phi = $96;$96 = $95;$foundit$0$off0339$us$us$i$us = $foundit$0$off0$be$us$us$i$us;$iter8$sroa$0$0338$us$us$i$us = $iter8$sroa$0$0338$us$us$i$us$phi;
         }
        }
        if ($foundit$0$off0$be$us$us$i$us) {
         label = 47;
         break L40;
        }
        $97 = (($curr$3343$us$i$us) - ($82))|0;
        $98 = ($97|0)==($80|0);
        if ($98) {
         $curr$3$lcssa$i = $80;
         break;
        } else {
         $curr$3343$us$i$us = $97;
        }
       }
      }
     } while(0);
     $109 = (($curr_num_pts$1370$i) + -1)|0;
     $110 = ($79|0)==($$idx50$val$i|0);
     $indvars$iv$next412$i = (($indvars$iv411$i) + -1)|0;
     if ($110) {
      break L38;
     } else {
      $curr$2369$i = $curr$3$lcssa$i;$curr_num_pts$1370$i = $109;$indvars$iv411$i = $indvars$iv$next412$i;$iter6$sroa$5$0$in368$i = $79;
     }
    }
    if ((label|0) == 47) {
     $$idx78$val$i$pre = HEAP32[$$idx35$i>>2]|0;
     $$idx44$val$i$pre = HEAP32[$$idx48$i>>2]|0;
     $$idx44$val$i = $$idx44$val$i$pre;$$idx78$val$i = $$idx78$val$i$pre;$curr$3343$us$i$lcssa = $curr$3343$us$i$us;$curr_num_pts$1370$i35 = $curr_num_pts$1370$i;
     label = 48;
    }
    else if ((label|0) == 49) {
     $$pre431$i = ((($1)) + 16|0);
     $$pre432$i = ((($1)) + 24|0);
     $$pre$phi$iZ2D = $$pre431$i;$$pre$phi433$iZ2D = $$pre432$i;$proj$sroa$0$0$lcssa437$i = 0.0;$proj$sroa$12$0$lcssa443$i = 0.0;$proj$sroa$15$0$lcssa445$i = 0.0;$proj$sroa$18$0$lcssa447$i = 0.0;$proj$sroa$6$0$lcssa439$i = 0.0;$proj$sroa$9$0$lcssa441$i = 0.0;$total_det$0$lcssa449$i = 0.0;
    }
    L71: do {
     if ((label|0) == 48) {
      $$idx68$val$i = HEAP32[$2>>2]|0;
      $$idx42$val$i = HEAP32[$9>>2]|0;
      $iter10$sroa$0$0324$i = 0;$proj$sroa$0$0325$i = 0.0;$proj$sroa$12$0328$i = 0.0;$proj$sroa$15$0329$i = 0.0;$proj$sroa$18$0330$i = 0.0;$proj$sroa$6$0326$i = 0.0;$proj$sroa$9$0327$i = 0.0;$total_det$0331$i = 0.0;
      while(1) {
       $113 = (($iter10$sroa$0$0324$i) + 1)|0;
       $114 = Math_imul($113, $curr_num_pts$1370$i35)|0;
       $115 = (($curr$3343$us$i$lcssa) - ($114))|0;
       $116 = (($$idx44$val$i) + ($115<<2)|0);
       $117 = HEAP32[$116>>2]|0;
       $118 = (($$idx78$val$i) + ($117<<2)|0);
       $$val17$i = +HEAPF32[$118>>2];
       $119 = $total_det$0331$i + $$val17$i;
       $120 = (($$idx42$val$i) + ($115<<2)|0);
       $121 = HEAP32[$120>>2]|0;
       $$idx6$i$i = (($$idx68$val$i) + (($121*24)|0)|0);
       $$idx6$val$i$i = +HEAPF32[$$idx6$i$i>>2];
       $$idx7$i$i = (((($$idx68$val$i) + (($121*24)|0)|0)) + 4|0);
       $$idx7$val$i$i = +HEAPF32[$$idx7$i$i>>2];
       $122 = $$val17$i * $$idx6$val$i$i;
       $123 = $proj$sroa$0$0325$i + $122;
       $124 = $$val17$i * $$idx7$val$i$i;
       $125 = $proj$sroa$6$0326$i + $124;
       $$idx3$i$i = (((($$idx68$val$i) + (($121*24)|0)|0)) + 8|0);
       $$idx3$val$i$i = +HEAPF32[$$idx3$i$i>>2];
       $$idx4$i$i = (((($$idx68$val$i) + (($121*24)|0)|0)) + 12|0);
       $$idx4$val$i$i = +HEAPF32[$$idx4$i$i>>2];
       $126 = $$val17$i * $$idx3$val$i$i;
       $127 = $proj$sroa$9$0327$i + $126;
       $128 = $$val17$i * $$idx4$val$i$i;
       $129 = $proj$sroa$12$0328$i + $128;
       $$idx$i81$i = (((($$idx68$val$i) + (($121*24)|0)|0)) + 16|0);
       $$idx$val$i82$i = +HEAPF32[$$idx$i81$i>>2];
       $$idx1$i$i = (((($$idx68$val$i) + (($121*24)|0)|0)) + 20|0);
       $$idx1$val$i$i = +HEAPF32[$$idx1$i$i>>2];
       $130 = $$val17$i * $$idx$val$i82$i;
       $131 = $proj$sroa$15$0329$i + $130;
       $132 = $$val17$i * $$idx1$val$i$i;
       $133 = $proj$sroa$18$0330$i + $132;
       $exitcond409$i = ($113|0)==($curr_num_pts$1370$i35|0);
       if ($exitcond409$i) {
        break;
       } else {
        $iter10$sroa$0$0324$i = $113;$proj$sroa$0$0325$i = $123;$proj$sroa$12$0328$i = $129;$proj$sroa$15$0329$i = $131;$proj$sroa$18$0330$i = $133;$proj$sroa$6$0326$i = $125;$proj$sroa$9$0327$i = $127;$total_det$0331$i = $119;
       }
      }
      $111 = ((($1)) + 16|0);
      $112 = ((($1)) + 24|0);
      $$idx$i$i = ((($1)) + 20|0);
      $$pre430$i = HEAP32[$112>>2]|0;
      $$idx40$val$i = $$idx42$val$i;$$idx70$val$i = $$idx68$val$i;$155 = $$pre430$i;$162 = 1;$iter13$sroa$0$0323$i = 0;
      while(1) {
       $147 = (($iter13$sroa$0$0323$i) + 1)|0;
       $148 = Math_imul($147, $curr_num_pts$1370$i35)|0;
       $149 = (($curr$3343$us$i$lcssa) - ($148))|0;
       $150 = (($$idx40$val$i) + ($149<<2)|0);
       $151 = HEAP32[$150>>2]|0;
       $152 = (($$idx70$val$i) + (($151*24)|0)|0);
       $153 = SIMD_Int32x4_load(HEAPU8, $152);
       $154 = (((($$idx70$val$i) + (($151*24)|0)|0)) + 16|0);
       $$idx$val21$i$i = HEAP32[$154>>2]|0;
       $$idx12$i$i = (((($$idx70$val$i) + (($151*24)|0)|0)) + 20|0);
       $$idx12$val22$i$i = HEAP32[$$idx12$i$i>>2]|0;
       $$idx$val$i$i = HEAP32[$$idx$i$i>>2]|0;
       $156 = ($155|0)==($$idx$val$i$i|0);
       if ($156) {
        __ZN40__LT_alloc__raw_vec__RawVec_LT_T_GT__GT_6double17hac6a54ac5941c853E($111);
        $$pre$i$i = HEAP32[$112>>2]|0;
        $159 = $$pre$i$i;
       } else {
        $159 = $155;
       }
       $157 = HEAP32[$111>>2]|0;
       $158 = (($157) + (($159*24)|0)|0);
       temp_Int32x4_ptr = $158;SIMD_Int32x4_store(HEAPU8, temp_Int32x4_ptr, $153);
       $value$i$sroa$7$0$$sroa_idx296$i = (((($157) + (($159*24)|0)|0)) + 16|0);
       HEAP32[$value$i$sroa$7$0$$sroa_idx296$i>>2] = $$idx$val21$i$i;
       $value$i$sroa$8$0$$sroa_idx298$i = (((($157) + (($159*24)|0)|0)) + 20|0);
       HEAP32[$value$i$sroa$8$0$$sroa_idx298$i>>2] = $$idx12$val22$i$i;
       $160 = HEAP32[$112>>2]|0;
       $161 = (($160) + 1)|0;
       HEAP32[$112>>2] = $161;
       $exitcond$i = ($162|0)==($curr_num_pts$1370$i35|0);
       if ($exitcond$i) {
        $$pre$phi$iZ2D = $111;$$pre$phi433$iZ2D = $112;$proj$sroa$0$0$lcssa437$i = $123;$proj$sroa$12$0$lcssa443$i = $129;$proj$sroa$15$0$lcssa445$i = $131;$proj$sroa$18$0$lcssa447$i = $133;$proj$sroa$6$0$lcssa439$i = $125;$proj$sroa$9$0$lcssa441$i = $127;$total_det$0$lcssa449$i = $119;
        break L71;
       }
       $163 = (($162) + 1)|0;
       $$idx70$val$i$pre = HEAP32[$2>>2]|0;
       $$idx40$val$i$pre = HEAP32[$9>>2]|0;
       $iter13$sroa$0$0323$i$phi = $162;$$idx40$val$i = $$idx40$val$i$pre;$$idx70$val$i = $$idx70$val$i$pre;$155 = $161;$162 = $163;$iter13$sroa$0$0323$i = $iter13$sroa$0$0323$i$phi;
      }
     }
    } while(0);
    ;HEAP32[$t$i$i>>2]=HEAP32[$$pre$phi$iZ2D>>2]|0;HEAP32[$t$i$i+4>>2]=HEAP32[$$pre$phi$iZ2D+4>>2]|0;HEAP32[$t$i$i+8>>2]=HEAP32[$$pre$phi$iZ2D+8>>2]|0;
    ;HEAP32[$$pre$phi$iZ2D>>2]=HEAP32[$2>>2]|0;HEAP32[$$pre$phi$iZ2D+4>>2]=HEAP32[$2+4>>2]|0;HEAP32[$$pre$phi$iZ2D+8>>2]=HEAP32[$2+8>>2]|0;
    ;HEAP32[$2>>2]=HEAP32[$t$i$i>>2]|0;HEAP32[$2+4>>2]=HEAP32[$t$i$i+4>>2]|0;HEAP32[$2+8>>2]=HEAP32[$t$i$i+8>>2]|0;
    $134 = HEAP32[$$pre$phi433$iZ2D>>2]|0;
    $135 = ($134|0)==(0);
    if (!($135)) {
     HEAP32[$$pre$phi433$iZ2D>>2] = 0;
    }
    $136 = $proj$sroa$0$0$lcssa437$i / $total_det$0$lcssa449$i;
    $137 = $proj$sroa$6$0$lcssa439$i / $total_det$0$lcssa449$i;
    $138 = $proj$sroa$9$0$lcssa441$i / $total_det$0$lcssa449$i;
    $139 = $proj$sroa$12$0$lcssa443$i / $total_det$0$lcssa449$i;
    $140 = $proj$sroa$15$0$lcssa445$i / $total_det$0$lcssa449$i;
    $141 = $proj$sroa$18$0$lcssa447$i / $total_det$0$lcssa449$i;
    HEAPF32[$0>>2] = $136;
    $142 = ((($0)) + 4|0);
    HEAPF32[$142>>2] = $137;
    $143 = ((($0)) + 8|0);
    HEAPF32[$143>>2] = $138;
    $144 = ((($0)) + 12|0);
    HEAPF32[$144>>2] = $139;
    $145 = ((($0)) + 16|0);
    HEAPF32[$145>>2] = $140;
    $146 = ((($0)) + 20|0);
    HEAPF32[$146>>2] = $141;
    STACKTOP = sp;return;
   }
  } while(0);
  ;HEAP32[$0>>2]=0|0;HEAP32[$0+4>>2]=0|0;HEAP32[$0+8>>2]=0|0;HEAP32[$0+12>>2]=0|0;HEAP32[$0+16>>2]=0|0;HEAP32[$0+20>>2]=0|0;
  STACKTOP = sp;return;
 }
 }
}
function __ZN164__LT_ncollide_pipeline__narrow_phase__contact_generator__incremental_contact_manifold_generator__IncrementalContactManifoldGenerator_LT_P_C__u20_M_C__u20_CD_GT__GT_15update_contacts17h02f933627238d8c3E($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = +$3;
 var $$idx = 0, $$idx$val = 0.0, $$idx$val$i = 0, $$idx15 = 0, $$idx15$val = 0.0, $$idx16 = 0, $$idx16$val = 0.0, $$idx17 = 0, $$idx17$val = 0.0, $$idx19 = 0, $$idx19$val = 0.0, $$idx20 = 0, $$idx20$val = 0.0, $$idx25 = 0, $$idx25$val86 = 0, $$idx25$val8688 = 0, $$idx25$val8690 = 0, $$idx26$val = 0, $10 = 0, $11 = 0.0;
 var $12 = 0.0, $13 = 0.0, $14 = 0, $15 = 0.0, $16 = 0.0, $17 = 0.0, $18 = 0.0, $19 = 0.0, $20 = 0.0, $21 = 0.0, $22 = 0.0, $23 = 0.0, $24 = 0.0, $25 = 0.0, $26 = 0.0, $27 = 0.0, $28 = 0.0, $29 = 0.0, $30 = 0.0, $31 = 0.0;
 var $32 = 0.0, $33 = 0.0, $34 = 0.0, $35 = 0.0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0.0, $46 = 0.0, $47 = 0.0, $48 = 0.0, $49 = 0.0, $5 = 0;
 var $50 = 0.0, $51 = 0.0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $7 = 0.0, $8 = 0.0, $9 = 0, $_5$sroa$0$0$copyload$i$i$i = 0.0, $_5$sroa$0$0$copyload$i$i$i29 = 0.0, $_5$sroa$4$0$$sroa_idx2$i$i$i = 0, $_5$sroa$4$0$$sroa_idx2$i$i$i30 = 0, $_5$sroa$4$0$copyload$i$i$i = 0.0, $_5$sroa$4$0$copyload$i$i$i31 = 0.0;
 var $_5$sroa$5$0$$sroa_idx4$i$i$i = 0, $_5$sroa$5$0$$sroa_idx4$i$i$i32 = 0, $_5$sroa$5$0$copyload$i$i$i = 0.0, $_5$sroa$5$0$copyload$i$i$i33 = 0.0, $_5$sroa$6$0$$sroa_idx6$i$i$i = 0, $_5$sroa$6$0$$sroa_idx6$i$i$i34 = 0, $_5$sroa$6$0$copyload$i$i$i = 0.0, $_5$sroa$6$0$copyload$i$i$i35 = 0.0, $i$0$ph89 = 0, $tmp$i$i$i$i = 0, dest = 0, label = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $tmp$i$i$i$i = sp;
 $$idx25 = ((($0)) + 8|0);
 $$idx25$val8688 = HEAP32[$$idx25>>2]|0;
 $4 = ($$idx25$val8688|0)==(0);
 if ($4) {
  STACKTOP = sp;return;
 }
 $_5$sroa$0$0$copyload$i$i$i = +HEAPF32[$1>>2];
 $_5$sroa$4$0$$sroa_idx2$i$i$i = ((($1)) + 4|0);
 $_5$sroa$4$0$copyload$i$i$i = +HEAPF32[$_5$sroa$4$0$$sroa_idx2$i$i$i>>2];
 $_5$sroa$5$0$$sroa_idx4$i$i$i = ((($1)) + 8|0);
 $_5$sroa$5$0$copyload$i$i$i = +HEAPF32[$_5$sroa$5$0$$sroa_idx4$i$i$i>>2];
 $_5$sroa$6$0$$sroa_idx6$i$i$i = ((($1)) + 12|0);
 $_5$sroa$6$0$copyload$i$i$i = +HEAPF32[$_5$sroa$6$0$$sroa_idx6$i$i$i>>2];
 $5 = ((($1)) + 16|0);
 $6 = ((($1)) + 20|0);
 $7 = +HEAPF32[$5>>2];
 $8 = +HEAPF32[$6>>2];
 $_5$sroa$0$0$copyload$i$i$i29 = +HEAPF32[$2>>2];
 $_5$sroa$4$0$$sroa_idx2$i$i$i30 = ((($2)) + 4|0);
 $_5$sroa$4$0$copyload$i$i$i31 = +HEAPF32[$_5$sroa$4$0$$sroa_idx2$i$i$i30>>2];
 $_5$sroa$5$0$$sroa_idx4$i$i$i32 = ((($2)) + 8|0);
 $_5$sroa$5$0$copyload$i$i$i33 = +HEAPF32[$_5$sroa$5$0$$sroa_idx4$i$i$i32>>2];
 $_5$sroa$6$0$$sroa_idx6$i$i$i34 = ((($2)) + 12|0);
 $_5$sroa$6$0$copyload$i$i$i35 = +HEAPF32[$_5$sroa$6$0$$sroa_idx6$i$i$i34>>2];
 $9 = ((($2)) + 16|0);
 $10 = ((($2)) + 20|0);
 $11 = +HEAPF32[$9>>2];
 $12 = +HEAPF32[$10>>2];
 $13 = -$3;
 $$idx25$val8690 = $$idx25$val8688;$i$0$ph89 = 0;
 L4: while(1) {
  $$idx$val$i = $$idx25$val8690;
  while(1) {
   $14 = ($$idx$val$i>>>0)>($i$0$ph89>>>0);
   if (!($14)) {
    label = 6;
    break L4;
   }
   $$idx26$val = HEAP32[$0>>2]|0;
   $$idx16 = (($$idx26$val) + (($i$0$ph89*52)|0)|0);
   $$idx16$val = +HEAPF32[$$idx16>>2];
   $$idx17 = (((($$idx26$val) + (($i$0$ph89*52)|0)|0)) + 4|0);
   $$idx17$val = +HEAPF32[$$idx17>>2];
   $15 = $$idx16$val * $_5$sroa$0$0$copyload$i$i$i;
   $16 = $$idx17$val * $_5$sroa$5$0$copyload$i$i$i;
   $17 = $15 + $16;
   $18 = $$idx16$val * $_5$sroa$4$0$copyload$i$i$i;
   $19 = $$idx17$val * $_5$sroa$6$0$copyload$i$i$i;
   $20 = $18 + $19;
   $21 = $17 + $7;
   $22 = $20 + $8;
   $$idx = (((($$idx26$val) + (($i$0$ph89*52)|0)|0)) + 8|0);
   $$idx$val = +HEAPF32[$$idx>>2];
   $$idx15 = (((($$idx26$val) + (($i$0$ph89*52)|0)|0)) + 12|0);
   $$idx15$val = +HEAPF32[$$idx15>>2];
   $23 = $$idx$val * $_5$sroa$0$0$copyload$i$i$i29;
   $24 = $$idx15$val * $_5$sroa$5$0$copyload$i$i$i33;
   $25 = $23 + $24;
   $26 = $$idx$val * $_5$sroa$4$0$copyload$i$i$i31;
   $27 = $$idx15$val * $_5$sroa$6$0$copyload$i$i$i35;
   $28 = $26 + $27;
   $29 = $25 + $11;
   $30 = $28 + $12;
   $31 = $21 - $29;
   $32 = $22 - $30;
   $$idx19 = (((($$idx26$val) + (($i$0$ph89*52)|0)|0)) + 40|0);
   $$idx19$val = +HEAPF32[$$idx19>>2];
   $$idx20 = (((($$idx26$val) + (($i$0$ph89*52)|0)|0)) + 44|0);
   $$idx20$val = +HEAPF32[$$idx20>>2];
   $33 = $31 * $$idx19$val;
   $34 = $32 * $$idx20$val;
   $35 = $33 + $34;
   $36 = !($35 >= $13);
   if (!($36)) {
    $45 = $35 * $$idx19$val;
    $46 = $35 * $$idx20$val;
    $47 = $31 - $45;
    $48 = $32 - $46;
    $49 = $47 * $47;
    $50 = $48 * $48;
    $51 = $49 + $50;
    $52 = !($51 <= 0.0099999997764825821);
    if (!($52)) {
     break;
    }
   }
   $37 = (($$idx$val$i) + -1)|0;
   $38 = ($$idx$val$i|0)==(0);
   if ($38) {
    label = 9;
    break L4;
   }
   $39 = (($$idx26$val) + (($i$0$ph89*52)|0)|0);
   $40 = (($$idx26$val) + (($37*52)|0)|0);
   dest=$tmp$i$i$i$i; src=$39; stop=dest+52|0; do { HEAP32[dest>>2]=HEAP32[src>>2]|0; dest=dest+4|0; src=src+4|0; } while ((dest|0) < (stop|0));
   _memmove(($39|0),($40|0),52)|0;
   dest=$40; src=$tmp$i$i$i$i; stop=dest+52|0; do { HEAP32[dest>>2]=HEAP32[src>>2]|0; dest=dest+4|0; src=src+4|0; } while ((dest|0) < (stop|0));
   $41 = HEAP32[$$idx25>>2]|0;
   $42 = ($41|0)==(0);
   if ($42) {
    label = 11;
    break L4;
   }
   $43 = (($41) + -1)|0;
   HEAP32[$$idx25>>2] = $43;
   $44 = ($i$0$ph89|0)==($43|0);
   if ($44) {
    label = 4;
    break L4;
   } else {
    $$idx$val$i = $43;
   }
  }
  $53 = (((($$idx26$val) + (($i$0$ph89*52)|0)|0)) + 48|0);
  HEAPF32[$53>>2] = $35;
  $54 = (((($$idx26$val) + (($i$0$ph89*52)|0)|0)) + 24|0);
  HEAPF32[$54>>2] = $21;
  $55 = (((($$idx26$val) + (($i$0$ph89*52)|0)|0)) + 28|0);
  HEAPF32[$55>>2] = $22;
  $56 = (((($$idx26$val) + (($i$0$ph89*52)|0)|0)) + 32|0);
  HEAPF32[$56>>2] = $29;
  $57 = (((($$idx26$val) + (($i$0$ph89*52)|0)|0)) + 36|0);
  HEAPF32[$57>>2] = $30;
  $58 = (($i$0$ph89) + 1)|0;
  $$idx25$val86 = HEAP32[$$idx25>>2]|0;
  $59 = ($58|0)==($$idx25$val86|0);
  if ($59) {
   label = 4;
   break;
  } else {
   $$idx25$val8690 = $$idx25$val86;$i$0$ph89 = $58;
  }
 }
 if ((label|0) == 4) {
  STACKTOP = sp;return;
 }
 else if ((label|0) == 6) {
  __ZN4core9panicking18panic_bounds_check17hd14a5808e41829e9E(12236,104,1358,$i$0$ph89,$$idx$val$i);
  // unreachable;
 }
 else if ((label|0) == 9) {
  __ZN4core9panicking18panic_bounds_check17hd14a5808e41829e9E(11401,99,434,$37,0);
  // unreachable;
 }
 else if ((label|0) == 11) {
  __ZN4core9panicking5panic17ha7507e8e32961bfeE(6500);
  // unreachable;
 }
}
function __ZN164__LT_ncollide_pipeline__narrow_phase__contact_generator__incremental_contact_manifold_generator__IncrementalContactManifoldGenerator_LT_P_C__u20_M_C__u20_CD_GT__GT_15update_contacts17h73a8d23b9606021bE($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = +$3;
 var $$idx = 0, $$idx$val = 0.0, $$idx$val$i = 0, $$idx15 = 0, $$idx15$val = 0.0, $$idx16 = 0, $$idx16$val = 0.0, $$idx17 = 0, $$idx17$val = 0.0, $$idx19 = 0, $$idx19$val = 0.0, $$idx20 = 0, $$idx20$val = 0.0, $$idx25 = 0, $$idx25$val86 = 0, $$idx25$val8688 = 0, $$idx25$val8690 = 0, $$idx26$val = 0, $10 = 0, $11 = 0.0;
 var $12 = 0.0, $13 = 0.0, $14 = 0, $15 = 0.0, $16 = 0.0, $17 = 0.0, $18 = 0.0, $19 = 0.0, $20 = 0.0, $21 = 0.0, $22 = 0.0, $23 = 0.0, $24 = 0.0, $25 = 0.0, $26 = 0.0, $27 = 0.0, $28 = 0.0, $29 = 0.0, $30 = 0.0, $31 = 0.0;
 var $32 = 0.0, $33 = 0.0, $34 = 0.0, $35 = 0.0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0.0, $46 = 0.0, $47 = 0.0, $48 = 0.0, $49 = 0.0, $5 = 0;
 var $50 = 0.0, $51 = 0.0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $7 = 0.0, $8 = 0.0, $9 = 0, $_5$sroa$0$0$copyload$i$i$i = 0.0, $_5$sroa$0$0$copyload$i$i$i29 = 0.0, $_5$sroa$4$0$$sroa_idx2$i$i$i = 0, $_5$sroa$4$0$$sroa_idx2$i$i$i30 = 0, $_5$sroa$4$0$copyload$i$i$i = 0.0, $_5$sroa$4$0$copyload$i$i$i31 = 0.0;
 var $_5$sroa$5$0$$sroa_idx4$i$i$i = 0, $_5$sroa$5$0$$sroa_idx4$i$i$i32 = 0, $_5$sroa$5$0$copyload$i$i$i = 0.0, $_5$sroa$5$0$copyload$i$i$i33 = 0.0, $_5$sroa$6$0$$sroa_idx6$i$i$i = 0, $_5$sroa$6$0$$sroa_idx6$i$i$i34 = 0, $_5$sroa$6$0$copyload$i$i$i = 0.0, $_5$sroa$6$0$copyload$i$i$i35 = 0.0, $i$0$ph89 = 0, $tmp$i$i$i$i = 0, dest = 0, label = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $tmp$i$i$i$i = sp;
 $$idx25 = ((($0)) + 8|0);
 $$idx25$val8688 = HEAP32[$$idx25>>2]|0;
 $4 = ($$idx25$val8688|0)==(0);
 if ($4) {
  STACKTOP = sp;return;
 }
 $_5$sroa$0$0$copyload$i$i$i = +HEAPF32[$1>>2];
 $_5$sroa$4$0$$sroa_idx2$i$i$i = ((($1)) + 4|0);
 $_5$sroa$4$0$copyload$i$i$i = +HEAPF32[$_5$sroa$4$0$$sroa_idx2$i$i$i>>2];
 $_5$sroa$5$0$$sroa_idx4$i$i$i = ((($1)) + 8|0);
 $_5$sroa$5$0$copyload$i$i$i = +HEAPF32[$_5$sroa$5$0$$sroa_idx4$i$i$i>>2];
 $_5$sroa$6$0$$sroa_idx6$i$i$i = ((($1)) + 12|0);
 $_5$sroa$6$0$copyload$i$i$i = +HEAPF32[$_5$sroa$6$0$$sroa_idx6$i$i$i>>2];
 $5 = ((($1)) + 16|0);
 $6 = ((($1)) + 20|0);
 $7 = +HEAPF32[$5>>2];
 $8 = +HEAPF32[$6>>2];
 $_5$sroa$0$0$copyload$i$i$i29 = +HEAPF32[$2>>2];
 $_5$sroa$4$0$$sroa_idx2$i$i$i30 = ((($2)) + 4|0);
 $_5$sroa$4$0$copyload$i$i$i31 = +HEAPF32[$_5$sroa$4$0$$sroa_idx2$i$i$i30>>2];
 $_5$sroa$5$0$$sroa_idx4$i$i$i32 = ((($2)) + 8|0);
 $_5$sroa$5$0$copyload$i$i$i33 = +HEAPF32[$_5$sroa$5$0$$sroa_idx4$i$i$i32>>2];
 $_5$sroa$6$0$$sroa_idx6$i$i$i34 = ((($2)) + 12|0);
 $_5$sroa$6$0$copyload$i$i$i35 = +HEAPF32[$_5$sroa$6$0$$sroa_idx6$i$i$i34>>2];
 $9 = ((($2)) + 16|0);
 $10 = ((($2)) + 20|0);
 $11 = +HEAPF32[$9>>2];
 $12 = +HEAPF32[$10>>2];
 $13 = -$3;
 $$idx25$val8690 = $$idx25$val8688;$i$0$ph89 = 0;
 L4: while(1) {
  $$idx$val$i = $$idx25$val8690;
  while(1) {
   $14 = ($$idx$val$i>>>0)>($i$0$ph89>>>0);
   if (!($14)) {
    label = 6;
    break L4;
   }
   $$idx26$val = HEAP32[$0>>2]|0;
   $$idx16 = (($$idx26$val) + (($i$0$ph89*52)|0)|0);
   $$idx16$val = +HEAPF32[$$idx16>>2];
   $$idx17 = (((($$idx26$val) + (($i$0$ph89*52)|0)|0)) + 4|0);
   $$idx17$val = +HEAPF32[$$idx17>>2];
   $15 = $$idx16$val * $_5$sroa$0$0$copyload$i$i$i;
   $16 = $$idx17$val * $_5$sroa$5$0$copyload$i$i$i;
   $17 = $15 + $16;
   $18 = $$idx16$val * $_5$sroa$4$0$copyload$i$i$i;
   $19 = $$idx17$val * $_5$sroa$6$0$copyload$i$i$i;
   $20 = $18 + $19;
   $21 = $17 + $7;
   $22 = $20 + $8;
   $$idx = (((($$idx26$val) + (($i$0$ph89*52)|0)|0)) + 8|0);
   $$idx$val = +HEAPF32[$$idx>>2];
   $$idx15 = (((($$idx26$val) + (($i$0$ph89*52)|0)|0)) + 12|0);
   $$idx15$val = +HEAPF32[$$idx15>>2];
   $23 = $$idx$val * $_5$sroa$0$0$copyload$i$i$i29;
   $24 = $$idx15$val * $_5$sroa$5$0$copyload$i$i$i33;
   $25 = $23 + $24;
   $26 = $$idx$val * $_5$sroa$4$0$copyload$i$i$i31;
   $27 = $$idx15$val * $_5$sroa$6$0$copyload$i$i$i35;
   $28 = $26 + $27;
   $29 = $25 + $11;
   $30 = $28 + $12;
   $31 = $21 - $29;
   $32 = $22 - $30;
   $$idx19 = (((($$idx26$val) + (($i$0$ph89*52)|0)|0)) + 40|0);
   $$idx19$val = +HEAPF32[$$idx19>>2];
   $$idx20 = (((($$idx26$val) + (($i$0$ph89*52)|0)|0)) + 44|0);
   $$idx20$val = +HEAPF32[$$idx20>>2];
   $33 = $31 * $$idx19$val;
   $34 = $32 * $$idx20$val;
   $35 = $33 + $34;
   $36 = !($35 >= $13);
   if (!($36)) {
    $45 = $35 * $$idx19$val;
    $46 = $35 * $$idx20$val;
    $47 = $31 - $45;
    $48 = $32 - $46;
    $49 = $47 * $47;
    $50 = $48 * $48;
    $51 = $49 + $50;
    $52 = !($51 <= 0.0099999997764825821);
    if (!($52)) {
     break;
    }
   }
   $37 = (($$idx$val$i) + -1)|0;
   $38 = ($$idx$val$i|0)==(0);
   if ($38) {
    label = 9;
    break L4;
   }
   $39 = (($$idx26$val) + (($i$0$ph89*52)|0)|0);
   $40 = (($$idx26$val) + (($37*52)|0)|0);
   dest=$tmp$i$i$i$i; src=$39; stop=dest+52|0; do { HEAP32[dest>>2]=HEAP32[src>>2]|0; dest=dest+4|0; src=src+4|0; } while ((dest|0) < (stop|0));
   _memmove(($39|0),($40|0),52)|0;
   dest=$40; src=$tmp$i$i$i$i; stop=dest+52|0; do { HEAP32[dest>>2]=HEAP32[src>>2]|0; dest=dest+4|0; src=src+4|0; } while ((dest|0) < (stop|0));
   $41 = HEAP32[$$idx25>>2]|0;
   $42 = ($41|0)==(0);
   if ($42) {
    label = 11;
    break L4;
   }
   $43 = (($41) + -1)|0;
   HEAP32[$$idx25>>2] = $43;
   $44 = ($i$0$ph89|0)==($43|0);
   if ($44) {
    label = 4;
    break L4;
   } else {
    $$idx$val$i = $43;
   }
  }
  $53 = (((($$idx26$val) + (($i$0$ph89*52)|0)|0)) + 48|0);
  HEAPF32[$53>>2] = $35;
  $54 = (((($$idx26$val) + (($i$0$ph89*52)|0)|0)) + 24|0);
  HEAPF32[$54>>2] = $21;
  $55 = (((($$idx26$val) + (($i$0$ph89*52)|0)|0)) + 28|0);
  HEAPF32[$55>>2] = $22;
  $56 = (((($$idx26$val) + (($i$0$ph89*52)|0)|0)) + 32|0);
  HEAPF32[$56>>2] = $29;
  $57 = (((($$idx26$val) + (($i$0$ph89*52)|0)|0)) + 36|0);
  HEAPF32[$57>>2] = $30;
  $58 = (($i$0$ph89) + 1)|0;
  $$idx25$val86 = HEAP32[$$idx25>>2]|0;
  $59 = ($58|0)==($$idx25$val86|0);
  if ($59) {
   label = 4;
   break;
  } else {
   $$idx25$val8690 = $$idx25$val86;$i$0$ph89 = $58;
  }
 }
 if ((label|0) == 4) {
  STACKTOP = sp;return;
 }
 else if ((label|0) == 6) {
  __ZN4core9panicking18panic_bounds_check17hd14a5808e41829e9E(12236,104,1358,$i$0$ph89,$$idx$val$i);
  // unreachable;
 }
 else if ((label|0) == 9) {
  __ZN4core9panicking18panic_bounds_check17hd14a5808e41829e9E(11401,99,434,$37,0);
  // unreachable;
 }
 else if ((label|0) == 11) {
  __ZN4core9panicking5panic17ha7507e8e32961bfeE(6500);
  // unreachable;
 }
}
function __ZN164__LT_ncollide_pipeline__narrow_phase__contact_generator__incremental_contact_manifold_generator__IncrementalContactManifoldGenerator_LT_P_C__u20_M_C__u20_CD_GT__GT_15update_contacts17h83223752ba9f5b78E($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = +$3;
 var $$idx = 0, $$idx$val = 0.0, $$idx$val$i = 0, $$idx15 = 0, $$idx15$val = 0.0, $$idx16 = 0, $$idx16$val = 0.0, $$idx17 = 0, $$idx17$val = 0.0, $$idx19 = 0, $$idx19$val = 0.0, $$idx20 = 0, $$idx20$val = 0.0, $$idx25 = 0, $$idx25$val86 = 0, $$idx25$val8688 = 0, $$idx25$val8690 = 0, $$idx26$val = 0, $10 = 0, $11 = 0.0;
 var $12 = 0.0, $13 = 0.0, $14 = 0, $15 = 0.0, $16 = 0.0, $17 = 0.0, $18 = 0.0, $19 = 0.0, $20 = 0.0, $21 = 0.0, $22 = 0.0, $23 = 0.0, $24 = 0.0, $25 = 0.0, $26 = 0.0, $27 = 0.0, $28 = 0.0, $29 = 0.0, $30 = 0.0, $31 = 0.0;
 var $32 = 0.0, $33 = 0.0, $34 = 0.0, $35 = 0.0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0.0, $46 = 0.0, $47 = 0.0, $48 = 0.0, $49 = 0.0, $5 = 0;
 var $50 = 0.0, $51 = 0.0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $7 = 0.0, $8 = 0.0, $9 = 0, $_5$sroa$0$0$copyload$i$i$i = 0.0, $_5$sroa$0$0$copyload$i$i$i29 = 0.0, $_5$sroa$4$0$$sroa_idx2$i$i$i = 0, $_5$sroa$4$0$$sroa_idx2$i$i$i30 = 0, $_5$sroa$4$0$copyload$i$i$i = 0.0, $_5$sroa$4$0$copyload$i$i$i31 = 0.0;
 var $_5$sroa$5$0$$sroa_idx4$i$i$i = 0, $_5$sroa$5$0$$sroa_idx4$i$i$i32 = 0, $_5$sroa$5$0$copyload$i$i$i = 0.0, $_5$sroa$5$0$copyload$i$i$i33 = 0.0, $_5$sroa$6$0$$sroa_idx6$i$i$i = 0, $_5$sroa$6$0$$sroa_idx6$i$i$i34 = 0, $_5$sroa$6$0$copyload$i$i$i = 0.0, $_5$sroa$6$0$copyload$i$i$i35 = 0.0, $i$0$ph89 = 0, $tmp$i$i$i$i = 0, dest = 0, label = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $tmp$i$i$i$i = sp;
 $$idx25 = ((($0)) + 8|0);
 $$idx25$val8688 = HEAP32[$$idx25>>2]|0;
 $4 = ($$idx25$val8688|0)==(0);
 if ($4) {
  STACKTOP = sp;return;
 }
 $_5$sroa$0$0$copyload$i$i$i = +HEAPF32[$1>>2];
 $_5$sroa$4$0$$sroa_idx2$i$i$i = ((($1)) + 4|0);
 $_5$sroa$4$0$copyload$i$i$i = +HEAPF32[$_5$sroa$4$0$$sroa_idx2$i$i$i>>2];
 $_5$sroa$5$0$$sroa_idx4$i$i$i = ((($1)) + 8|0);
 $_5$sroa$5$0$copyload$i$i$i = +HEAPF32[$_5$sroa$5$0$$sroa_idx4$i$i$i>>2];
 $_5$sroa$6$0$$sroa_idx6$i$i$i = ((($1)) + 12|0);
 $_5$sroa$6$0$copyload$i$i$i = +HEAPF32[$_5$sroa$6$0$$sroa_idx6$i$i$i>>2];
 $5 = ((($1)) + 16|0);
 $6 = ((($1)) + 20|0);
 $7 = +HEAPF32[$5>>2];
 $8 = +HEAPF32[$6>>2];
 $_5$sroa$0$0$copyload$i$i$i29 = +HEAPF32[$2>>2];
 $_5$sroa$4$0$$sroa_idx2$i$i$i30 = ((($2)) + 4|0);
 $_5$sroa$4$0$copyload$i$i$i31 = +HEAPF32[$_5$sroa$4$0$$sroa_idx2$i$i$i30>>2];
 $_5$sroa$5$0$$sroa_idx4$i$i$i32 = ((($2)) + 8|0);
 $_5$sroa$5$0$copyload$i$i$i33 = +HEAPF32[$_5$sroa$5$0$$sroa_idx4$i$i$i32>>2];
 $_5$sroa$6$0$$sroa_idx6$i$i$i34 = ((($2)) + 12|0);
 $_5$sroa$6$0$copyload$i$i$i35 = +HEAPF32[$_5$sroa$6$0$$sroa_idx6$i$i$i34>>2];
 $9 = ((($2)) + 16|0);
 $10 = ((($2)) + 20|0);
 $11 = +HEAPF32[$9>>2];
 $12 = +HEAPF32[$10>>2];
 $13 = -$3;
 $$idx25$val8690 = $$idx25$val8688;$i$0$ph89 = 0;
 L4: while(1) {
  $$idx$val$i = $$idx25$val8690;
  while(1) {
   $14 = ($$idx$val$i>>>0)>($i$0$ph89>>>0);
   if (!($14)) {
    label = 6;
    break L4;
   }
   $$idx26$val = HEAP32[$0>>2]|0;
   $$idx16 = (($$idx26$val) + (($i$0$ph89*52)|0)|0);
   $$idx16$val = +HEAPF32[$$idx16>>2];
   $$idx17 = (((($$idx26$val) + (($i$0$ph89*52)|0)|0)) + 4|0);
   $$idx17$val = +HEAPF32[$$idx17>>2];
   $15 = $$idx16$val * $_5$sroa$0$0$copyload$i$i$i;
   $16 = $$idx17$val * $_5$sroa$5$0$copyload$i$i$i;
   $17 = $15 + $16;
   $18 = $$idx16$val * $_5$sroa$4$0$copyload$i$i$i;
   $19 = $$idx17$val * $_5$sroa$6$0$copyload$i$i$i;
   $20 = $18 + $19;
   $21 = $17 + $7;
   $22 = $20 + $8;
   $$idx = (((($$idx26$val) + (($i$0$ph89*52)|0)|0)) + 8|0);
   $$idx$val = +HEAPF32[$$idx>>2];
   $$idx15 = (((($$idx26$val) + (($i$0$ph89*52)|0)|0)) + 12|0);
   $$idx15$val = +HEAPF32[$$idx15>>2];
   $23 = $$idx$val * $_5$sroa$0$0$copyload$i$i$i29;
   $24 = $$idx15$val * $_5$sroa$5$0$copyload$i$i$i33;
   $25 = $23 + $24;
   $26 = $$idx$val * $_5$sroa$4$0$copyload$i$i$i31;
   $27 = $$idx15$val * $_5$sroa$6$0$copyload$i$i$i35;
   $28 = $26 + $27;
   $29 = $25 + $11;
   $30 = $28 + $12;
   $31 = $21 - $29;
   $32 = $22 - $30;
   $$idx19 = (((($$idx26$val) + (($i$0$ph89*52)|0)|0)) + 40|0);
   $$idx19$val = +HEAPF32[$$idx19>>2];
   $$idx20 = (((($$idx26$val) + (($i$0$ph89*52)|0)|0)) + 44|0);
   $$idx20$val = +HEAPF32[$$idx20>>2];
   $33 = $31 * $$idx19$val;
   $34 = $32 * $$idx20$val;
   $35 = $33 + $34;
   $36 = !($35 >= $13);
   if (!($36)) {
    $45 = $35 * $$idx19$val;
    $46 = $35 * $$idx20$val;
    $47 = $31 - $45;
    $48 = $32 - $46;
    $49 = $47 * $47;
    $50 = $48 * $48;
    $51 = $49 + $50;
    $52 = !($51 <= 0.0099999997764825821);
    if (!($52)) {
     break;
    }
   }
   $37 = (($$idx$val$i) + -1)|0;
   $38 = ($$idx$val$i|0)==(0);
   if ($38) {
    label = 9;
    break L4;
   }
   $39 = (($$idx26$val) + (($i$0$ph89*52)|0)|0);
   $40 = (($$idx26$val) + (($37*52)|0)|0);
   dest=$tmp$i$i$i$i; src=$39; stop=dest+52|0; do { HEAP32[dest>>2]=HEAP32[src>>2]|0; dest=dest+4|0; src=src+4|0; } while ((dest|0) < (stop|0));
   _memmove(($39|0),($40|0),52)|0;
   dest=$40; src=$tmp$i$i$i$i; stop=dest+52|0; do { HEAP32[dest>>2]=HEAP32[src>>2]|0; dest=dest+4|0; src=src+4|0; } while ((dest|0) < (stop|0));
   $41 = HEAP32[$$idx25>>2]|0;
   $42 = ($41|0)==(0);
   if ($42) {
    label = 11;
    break L4;
   }
   $43 = (($41) + -1)|0;
   HEAP32[$$idx25>>2] = $43;
   $44 = ($i$0$ph89|0)==($43|0);
   if ($44) {
    label = 4;
    break L4;
   } else {
    $$idx$val$i = $43;
   }
  }
  $53 = (((($$idx26$val) + (($i$0$ph89*52)|0)|0)) + 48|0);
  HEAPF32[$53>>2] = $35;
  $54 = (((($$idx26$val) + (($i$0$ph89*52)|0)|0)) + 24|0);
  HEAPF32[$54>>2] = $21;
  $55 = (((($$idx26$val) + (($i$0$ph89*52)|0)|0)) + 28|0);
  HEAPF32[$55>>2] = $22;
  $56 = (((($$idx26$val) + (($i$0$ph89*52)|0)|0)) + 32|0);
  HEAPF32[$56>>2] = $29;
  $57 = (((($$idx26$val) + (($i$0$ph89*52)|0)|0)) + 36|0);
  HEAPF32[$57>>2] = $30;
  $58 = (($i$0$ph89) + 1)|0;
  $$idx25$val86 = HEAP32[$$idx25>>2]|0;
  $59 = ($58|0)==($$idx25$val86|0);
  if ($59) {
   label = 4;
   break;
  } else {
   $$idx25$val8690 = $$idx25$val86;$i$0$ph89 = $58;
  }
 }
 if ((label|0) == 4) {
  STACKTOP = sp;return;
 }
 else if ((label|0) == 6) {
  __ZN4core9panicking18panic_bounds_check17hd14a5808e41829e9E(12236,104,1358,$i$0$ph89,$$idx$val$i);
  // unreachable;
 }
 else if ((label|0) == 9) {
  __ZN4core9panicking18panic_bounds_check17hd14a5808e41829e9E(11401,99,434,$37,0);
  // unreachable;
 }
 else if ((label|0) == 11) {
  __ZN4core9panicking5panic17ha7507e8e32961bfeE(6500);
  // unreachable;
 }
}
function __ZN164__LT_ncollide_pipeline__narrow_phase__contact_generator__incremental_contact_manifold_generator__IncrementalContactManifoldGenerator_LT_P_C__u20_M_C__u20_CD_GT__GT_16add_new_contacts17h1231fb23ef14a2e2E($0,$1,$2,$3,$4,$5,$6,$7,$8,$9) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 $7 = $7|0;
 $8 = $8|0;
 $9 = +$9;
 var $$idx$i = 0, $$idx$i$i = 0, $$idx$val = 0, $$idx$val$i = 0, $$idx$val$i$i = 0, $$idx$val12$i = 0, $$idx$val12$i$i = 0, $$idx$val12$i18 = 0, $$idx10 = 0, $$idx10$val = 0, $$idx3$i = 0, $$idx3$i$i = 0, $$idx3$i19 = 0, $$idx3$val13$i = 0, $$idx3$val13$i$i = 0, $$idx3$val13$i20 = 0, $$phi$trans$insert = 0, $$pre = 0, $$pre$i = 0, $$pre$i$i = 0;
 var $$pre$phi107Z2D = 0, $$pre$phiZ2D = 0, $$pre105 = 0, $$val14$i = 0, $$val14$i$i = 0, $$val14$i21 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = SIMD_Int32x4(0,0,0,0), $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = SIMD_Int32x4(0,0,0,0);
 var $44 = 0, $45 = 0, $46 = 0, $47 = SIMD_Float32x4(0,0,0,0), $48 = 0.0, $49 = 0.0, $50 = 0.0, $51 = 0.0, $52 = 0.0, $53 = 0.0, $54 = 0.0, $55 = 0.0, $56 = 0.0, $57 = 0.0, $58 = 0.0, $59 = 0.0, $60 = 0.0, $61 = 0.0, $62 = 0.0, $63 = 0.0;
 var $64 = 0.0, $65 = 0.0, $66 = 0.0, $67 = 0.0, $68 = 0.0, $69 = 0.0, $70 = 0.0, $71 = 0.0, $72 = 0.0, $73 = 0.0, $74 = 0.0, $75 = 0.0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $80 = 0, $_0$0$off0 = 0, $_56 = 0, $_6$sroa$0$0$copyload$i$i$i$i = 0.0;
 var $_6$sroa$0$0$copyload$i$i$i9$i = 0.0, $_6$sroa$4$0$$sroa_idx2$i$i$i$i = 0, $_6$sroa$4$0$$sroa_idx2$i$i$i10$i = 0, $_6$sroa$4$0$copyload$i$i$i$i = 0.0, $_6$sroa$4$0$copyload$i$i$i11$i = 0.0, $_6$sroa$5$0$$sroa_idx4$i$i$i$i = 0, $_6$sroa$5$0$$sroa_idx4$i$i$i12$i = 0, $_6$sroa$5$0$copyload$i$i$i$i = 0.0, $_6$sroa$5$0$copyload$i$i$i13$i = 0.0, $_6$sroa$6$0$$sroa_idx6$i$i$i$i = 0, $_6$sroa$6$0$$sroa_idx6$i$i$i14$i = 0, $_6$sroa$6$0$copyload$i$i$i$i = 0.0, $_6$sroa$6$0$copyload$i$i$i15$i = 0.0, $cond$i = 0, $phitmp = 0, $value$i$sroa$0$0$$sroa_idx = 0, $value$i$sroa$13$0$$sroa_idx90 = 0, $value$i$sroa$14$0$$sroa_idx93 = 0, $value$i$sroa$15$0$$sroa_idx96 = 0, $value$i$sroa$4$0$$sroa_idx72 = 0;
 var $value$i$sroa$5$0$$sroa_idx74 = 0, $value$i$sroa$6$0$$sroa_idx76 = 0, $value$i$sroa$7$0$$sroa_idx36$i = 0, $value$i$sroa$7$0$$sroa_idx78 = 0, $value$i$sroa$8$0$$sroa_idx39$i = 0, $value$i$sroa$8$0$$sroa_idx80 = 0, $value$i$sroa$9$0$$sroa_idx42$i = 0, $value$i$sroa$9$0$$sroa_idx82 = 0, label = 0, sp = 0, temp_Float32x4_ptr = 0, temp_Int32x4_ptr = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $_56 = sp;
 $10 = ((($0)) + 24|0);
 $11 = (__ZN284__LT_ncollide_pipeline__narrow_phase__contact_generator__support_map_support_map_contact_generator__SupportMapSupportMapContactGenerator_LT_P_C__u20_M_C__u20_S_GT__u20_as_u20_ncollide_pipeline__narrow_phase__contact_generator__contact_generator__ContactGenerator_LT_P_C__u20_M_GT__GT_6update17h56901798cdd2742bE($10,$1,$2,$3,$4,$5,$6,$7,$8,$9)|0);
 if (!($11)) {
  $_0$0$off0 = 0;
  STACKTOP = sp;return ($_0$0$off0|0);
 }
 $12 = ((($0)) + 12|0);
 $13 = ((($0)) + 64|0);
 $14 = HEAP32[$13>>2]|0;
 $cond$i = ($14|0)==(1);
 if ($cond$i) {
  $15 = ((($0)) + 84|0);
  $16 = ((($0)) + 92|0);
  $17 = ((($0)) + 68|0);
  $18 = SIMD_Int32x4_load(HEAPU8, $17);
  $$idx$val12$i$i = HEAP32[$15>>2]|0;
  $$idx3$i$i = ((($0)) + 88|0);
  $$idx3$val13$i$i = HEAP32[$$idx3$i$i>>2]|0;
  $$val14$i$i = HEAP32[$16>>2]|0;
  $19 = ((($0)) + 20|0);
  $20 = HEAP32[$19>>2]|0;
  $$idx$i$i = ((($0)) + 16|0);
  $$idx$val$i$i = HEAP32[$$idx$i$i>>2]|0;
  $21 = ($20|0)==($$idx$val$i$i|0);
  if ($21) {
   __ZN40__LT_alloc__raw_vec__RawVec_LT_T_GT__GT_6double17ha4899d9ca8626977E($12);
   $$pre$i$i = HEAP32[$19>>2]|0;
   $24 = $$pre$i$i;
  } else {
   $24 = $20;
  }
  $22 = HEAP32[$12>>2]|0;
  $23 = (($22) + (($24*28)|0)|0);
  temp_Int32x4_ptr = $23;SIMD_Int32x4_store(HEAPU8, temp_Int32x4_ptr, $18);
  $value$i$sroa$7$0$$sroa_idx36$i = (((($22) + (($24*28)|0)|0)) + 16|0);
  HEAP32[$value$i$sroa$7$0$$sroa_idx36$i>>2] = $$idx$val12$i$i;
  $value$i$sroa$8$0$$sroa_idx39$i = (((($22) + (($24*28)|0)|0)) + 20|0);
  HEAP32[$value$i$sroa$8$0$$sroa_idx39$i>>2] = $$idx3$val13$i$i;
  $value$i$sroa$9$0$$sroa_idx42$i = (((($22) + (($24*28)|0)|0)) + 24|0);
  HEAP32[$value$i$sroa$9$0$$sroa_idx42$i>>2] = $$val14$i$i;
  $25 = HEAP32[$19>>2]|0;
  $26 = (($25) + 1)|0;
  HEAP32[$19>>2] = $26;
  $$pre$phi107Z2D = $19;$$pre$phiZ2D = $12;$29 = $26;
 } else {
  $$phi$trans$insert = ((($0)) + 20|0);
  $$pre = HEAP32[$$phi$trans$insert>>2]|0;
  $$pre$phi107Z2D = $$phi$trans$insert;$$pre$phiZ2D = $12;$29 = $$pre;
 }
 $27 = HEAP32[$$pre$phiZ2D>>2]|0;
 $28 = (($27) + (($29*28)|0)|0);
 $30 = ($29|0)==(0);
 if ($30) {
  $_0$0$off0 = 1;
  STACKTOP = sp;return ($_0$0$off0|0);
 }
 $$idx10 = ((($0)) + 8|0);
 $31 = ((($_56)) + 16|0);
 $32 = ((($_56)) + 20|0);
 $33 = ((($_56)) + 24|0);
 $34 = ((($3)) + 16|0);
 $35 = ((($3)) + 20|0);
 $_6$sroa$4$0$$sroa_idx2$i$i$i$i = ((($3)) + 4|0);
 $_6$sroa$5$0$$sroa_idx4$i$i$i$i = ((($3)) + 8|0);
 $_6$sroa$6$0$$sroa_idx6$i$i$i$i = ((($3)) + 12|0);
 $36 = ((($6)) + 16|0);
 $37 = ((($6)) + 20|0);
 $_6$sroa$4$0$$sroa_idx2$i$i$i10$i = ((($6)) + 4|0);
 $_6$sroa$5$0$$sroa_idx4$i$i$i12$i = ((($6)) + 8|0);
 $_6$sroa$6$0$$sroa_idx6$i$i$i14$i = ((($6)) + 12|0);
 $$idx$i = ((($0)) + 4|0);
 $39 = $27;
 while(1) {
  $38 = ((($39)) + 28|0);
  $$idx10$val = HEAP32[$$idx10>>2]|0;
  $40 = ($$idx10$val|0)==(2);
  if ($40) {
   $$idx$val = HEAP32[$0>>2]|0;
   $41 = ((($39)) + 16|0);
   $42 = ((($39)) + 24|0);
   $43 = SIMD_Int32x4_load(HEAPU8, $39);
   $$idx$val12$i18 = HEAP32[$41>>2]|0;
   $$idx3$i19 = ((($39)) + 20|0);
   $$idx3$val13$i20 = HEAP32[$$idx3$i19>>2]|0;
   $$val14$i21 = HEAP32[$42>>2]|0;
   temp_Int32x4_ptr = $_56;SIMD_Int32x4_store(HEAPU8, temp_Int32x4_ptr, $43);
   HEAP32[$31>>2] = $$idx$val12$i18;
   HEAP32[$32>>2] = $$idx3$val13$i20;
   HEAP32[$33>>2] = $$val14$i21;
   __ZN17ncollide_pipeline12narrow_phase17contact_generator38incremental_contact_manifold_generator22add_reduce_by_variance17h436ef11197f907e4E($$idx$val,$_56,$3,$6);
  } else {
   $45 = ((($39)) + 16|0);
   $46 = ((($39)) + 24|0);
   $47 = SIMD_Float32x4_load(HEAPU8, $39);
   $$idx$val12$i = HEAP32[$45>>2]|0;
   $$idx3$i = ((($39)) + 20|0);
   $$idx3$val13$i = HEAP32[$$idx3$i>>2]|0;
   $$val14$i = HEAP32[$46>>2]|0;
   $48 = +HEAPF32[$34>>2];
   $49 = +HEAPF32[$35>>2];
   $50 = +SIMD_Float32x4_extractLane($47,0);
   $51 = $50 - $48;
   $52 = +SIMD_Float32x4_extractLane($47,1);
   $53 = $52 - $49;
   $_6$sroa$0$0$copyload$i$i$i$i = +HEAPF32[$3>>2];
   $_6$sroa$4$0$copyload$i$i$i$i = +HEAPF32[$_6$sroa$4$0$$sroa_idx2$i$i$i$i>>2];
   $_6$sroa$5$0$copyload$i$i$i$i = +HEAPF32[$_6$sroa$5$0$$sroa_idx4$i$i$i$i>>2];
   $_6$sroa$6$0$copyload$i$i$i$i = +HEAPF32[$_6$sroa$6$0$$sroa_idx6$i$i$i$i>>2];
   $54 = $51 * $_6$sroa$0$0$copyload$i$i$i$i;
   $55 = $53 * $_6$sroa$4$0$copyload$i$i$i$i;
   $56 = $54 + $55;
   $57 = $51 * $_6$sroa$5$0$copyload$i$i$i$i;
   $58 = $53 * $_6$sroa$6$0$copyload$i$i$i$i;
   $59 = $57 + $58;
   $60 = +HEAPF32[$36>>2];
   $61 = +HEAPF32[$37>>2];
   $62 = +SIMD_Float32x4_extractLane($47,2);
   $63 = $62 - $60;
   $64 = +SIMD_Float32x4_extractLane($47,3);
   $65 = $64 - $61;
   $_6$sroa$0$0$copyload$i$i$i9$i = +HEAPF32[$6>>2];
   $_6$sroa$4$0$copyload$i$i$i11$i = +HEAPF32[$_6$sroa$4$0$$sroa_idx2$i$i$i10$i>>2];
   $_6$sroa$5$0$copyload$i$i$i13$i = +HEAPF32[$_6$sroa$5$0$$sroa_idx4$i$i$i12$i>>2];
   $_6$sroa$6$0$copyload$i$i$i15$i = +HEAPF32[$_6$sroa$6$0$$sroa_idx6$i$i$i14$i>>2];
   $66 = $63 * $_6$sroa$0$0$copyload$i$i$i9$i;
   $67 = $65 * $_6$sroa$4$0$copyload$i$i$i11$i;
   $68 = $66 + $67;
   $69 = $63 * $_6$sroa$5$0$copyload$i$i$i13$i;
   $70 = $65 * $_6$sroa$6$0$copyload$i$i$i15$i;
   $71 = $69 + $70;
   $72 = $50 + $62;
   $73 = $52 + $64;
   $74 = $72 * 0.5;
   $75 = $73 * 0.5;
   $$idx$val$i = HEAP32[$$idx$i>>2]|0;
   $76 = ($$idx10$val|0)==($$idx$val$i|0);
   if ($76) {
    __ZN40__LT_alloc__raw_vec__RawVec_LT_T_GT__GT_6double17h592c9c93ffb654b3E($0);
    $$pre$i = HEAP32[$$idx10>>2]|0;
    $78 = $$pre$i;
   } else {
    $78 = $$idx10$val;
   }
   $77 = HEAP32[$0>>2]|0;
   $value$i$sroa$0$0$$sroa_idx = (($77) + (($78*52)|0)|0);
   HEAPF32[$value$i$sroa$0$0$$sroa_idx>>2] = $56;
   $value$i$sroa$4$0$$sroa_idx72 = (((($77) + (($78*52)|0)|0)) + 4|0);
   HEAPF32[$value$i$sroa$4$0$$sroa_idx72>>2] = $59;
   $value$i$sroa$5$0$$sroa_idx74 = (((($77) + (($78*52)|0)|0)) + 8|0);
   HEAPF32[$value$i$sroa$5$0$$sroa_idx74>>2] = $68;
   $value$i$sroa$6$0$$sroa_idx76 = (((($77) + (($78*52)|0)|0)) + 12|0);
   HEAPF32[$value$i$sroa$6$0$$sroa_idx76>>2] = $71;
   $value$i$sroa$7$0$$sroa_idx78 = (((($77) + (($78*52)|0)|0)) + 16|0);
   HEAPF32[$value$i$sroa$7$0$$sroa_idx78>>2] = $74;
   $value$i$sroa$8$0$$sroa_idx80 = (((($77) + (($78*52)|0)|0)) + 20|0);
   HEAPF32[$value$i$sroa$8$0$$sroa_idx80>>2] = $75;
   $value$i$sroa$9$0$$sroa_idx82 = (((($77) + (($78*52)|0)|0)) + 24|0);
   temp_Float32x4_ptr = $value$i$sroa$9$0$$sroa_idx82;SIMD_Float32x4_store(HEAPU8, temp_Float32x4_ptr, $47);
   $value$i$sroa$13$0$$sroa_idx90 = (((($77) + (($78*52)|0)|0)) + 40|0);
   HEAP32[$value$i$sroa$13$0$$sroa_idx90>>2] = $$idx$val12$i;
   $value$i$sroa$14$0$$sroa_idx93 = (((($77) + (($78*52)|0)|0)) + 44|0);
   HEAP32[$value$i$sroa$14$0$$sroa_idx93>>2] = $$idx3$val13$i;
   $value$i$sroa$15$0$$sroa_idx96 = (((($77) + (($78*52)|0)|0)) + 48|0);
   HEAP32[$value$i$sroa$15$0$$sroa_idx96>>2] = $$val14$i;
   $79 = HEAP32[$$idx10>>2]|0;
   $80 = (($79) + 1)|0;
   HEAP32[$$idx10>>2] = $80;
  }
  $44 = ($38|0)==($28|0);
  if ($44) {
   break;
  } else {
   $39 = $38;
  }
 }
 $$pre105 = HEAP32[$$pre$phi107Z2D>>2]|0;
 $phitmp = ($$pre105|0)==(0);
 if ($phitmp) {
  $_0$0$off0 = 1;
  STACKTOP = sp;return ($_0$0$off0|0);
 }
 HEAP32[$$pre$phi107Z2D>>2] = 0;
 $_0$0$off0 = 1;
 STACKTOP = sp;return ($_0$0$off0|0);
}
function __ZN164__LT_ncollide_pipeline__narrow_phase__contact_generator__incremental_contact_manifold_generator__IncrementalContactManifoldGenerator_LT_P_C__u20_M_C__u20_CD_GT__GT_16add_new_contacts17h15f900b83120ee33E($0,$1,$2,$3,$4,$5,$6,$7) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 $7 = +$7;
 var $$$i$i = 0, $$idx$i = 0, $$idx$i$i = 0, $$idx$val = 0, $$idx$val$i = 0, $$idx$val$i$i = 0, $$idx$val12$i = 0, $$idx$val12$i19 = 0, $$idx10 = 0, $$idx10$val = 0, $$idx13$val$i = 0.0, $$idx14$i = 0, $$idx14$val$i = 0.0, $$idx3$i = 0, $$idx3$i20 = 0, $$idx3$val13$i = 0, $$idx3$val13$i21 = 0, $$pre$i = 0, $$pre$i$i = 0, $$pre$phiZ2D = 0;
 var $$pre92 = 0, $$sink$i5$i$i = 0, $$val14$i = 0, $$val14$i22 = 0, $10 = 0, $100 = 0.0, $101 = 0.0, $102 = 0.0, $103 = 0.0, $104 = 0.0, $105 = 0.0, $106 = 0.0, $107 = 0.0, $108 = 0.0, $109 = 0.0, $11 = 0, $110 = 0.0, $111 = 0.0, $112 = 0, $113 = 0;
 var $114 = 0, $115 = 0, $116 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0.0, $18 = 0.0, $19 = 0.0, $20 = 0.0, $21 = 0.0, $22 = 0.0, $23 = 0, $24 = 0, $25 = 0.0, $26 = 0.0, $27 = 0.0, $28 = 0.0;
 var $29 = 0.0, $30 = 0.0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0.0, $38 = 0.0, $39 = 0.0, $40 = 0.0, $41 = 0.0, $42 = 0.0, $43 = 0.0, $44 = 0.0, $45 = 0, $46 = 0.0, $47 = 0.0, $48 = 0.0;
 var $49 = 0.0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0;
 var $69 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = SIMD_Int32x4(0,0,0,0), $82 = 0, $83 = 0, $84 = 0, $85 = SIMD_Float32x4(0,0,0,0), $86 = 0.0, $87 = 0.0;
 var $88 = 0.0, $89 = 0.0, $9 = 0, $90 = 0.0, $91 = 0.0, $92 = 0.0, $93 = 0.0, $94 = 0.0, $95 = 0.0, $96 = 0.0, $97 = 0.0, $98 = 0.0, $99 = 0.0, $_0$0$off0 = 0, $_14$sroa$0$0$copyload$i = 0, $_14$sroa$5$0$$sroa_idx10$i = 0, $_14$sroa$5$0$copyload$i = 0, $_15$i = 0, $_21$sroa$0$0$$sroa_idx$i = 0, $_21$sroa$4$0$$sroa_idx16$i = 0;
 var $_21$sroa$5$0$$sroa_idx19$i = 0, $_21$sroa$5$0$i = 0.0, $_21$sroa$6$0$$sroa_idx22$i = 0, $_21$sroa$6$0$i = 0.0, $_21$sroa$7$0$$sroa_idx25$i = 0, $_21$sroa$8$0$$sroa_idx28$i = 0, $_21$sroa$9$0$$sroa_idx31$i = 0, $_26$i$i$i = 0, $_5$sroa$0$0$copyload$i$i$i$i$i = 0.0, $_5$sroa$4$0$$sroa_idx2$i$i$i$i$i = 0, $_5$sroa$4$0$copyload$i$i$i$i$i = 0.0, $_5$sroa$5$0$$sroa_idx4$i$i$i$i$i = 0, $_5$sroa$5$0$copyload$i$i$i$i$i = 0.0, $_5$sroa$6$0$$sroa_idx6$i$i$i$i$i = 0, $_5$sroa$6$0$copyload$i$i$i$i$i = 0.0, $_56 = 0, $_6$sroa$0$0$copyload$i$i$i$i = 0.0, $_6$sroa$4$0$$sroa_idx2$i$i$i$i = 0, $_6$sroa$4$0$copyload$i$i$i$i = 0.0, $_6$sroa$5$0$$sroa_idx4$i$i$i$i = 0;
 var $_6$sroa$5$0$copyload$i$i$i$i = 0.0, $_6$sroa$6$0$$sroa_idx6$i$i$i$i = 0, $_6$sroa$6$0$copyload$i$i$i$i = 0.0, $or$cond$i = 0, $phitmp = 0, $switch$i = 0, $switch1tmp$i = 0, $switchtmp$i = 0, $tmp_ret1$i$i$i = 0, $value$i$sroa$0$0$$sroa_idx = 0, $value$i$sroa$13$0$$sroa_idx69 = 0, $value$i$sroa$14$0$$sroa_idx72 = 0, $value$i$sroa$15$0$$sroa_idx75 = 0, $value$i$sroa$4$0$$sroa_idx27$i = 0, $value$i$sroa$4$0$$sroa_idx51 = 0, $value$i$sroa$5$0$$sroa_idx53 = 0, $value$i$sroa$6$0$$sroa_idx33$i = 0, $value$i$sroa$6$0$$sroa_idx55 = 0, $value$i$sroa$7$0$$sroa_idx57 = 0, $value$i$sroa$8$0$$sroa_idx39$i = 0;
 var $value$i$sroa$8$0$$sroa_idx59 = 0, $value$i$sroa$9$0$$sroa_idx42$i = 0, $value$i$sroa$9$0$$sroa_idx61 = 0, label = 0, sp = 0, temp_Float32x4_ptr = 0, temp_Int32x4_ptr = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $_26$i$i$i = sp + 48|0;
 $tmp_ret1$i$i$i = sp + 40|0;
 $_15$i = sp + 32|0;
 $_56 = sp;
 $8 = ((($3)) + 28|0);
 $9 = HEAP32[$8>>2]|0;
 FUNCTION_TABLE_vii[$9 & 511]($_15$i,$2);
 $10 = ((($6)) + 48|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = (FUNCTION_TABLE_ii[$11 & 511]($5)|0);
 $13 = tempRet0;
 $14 = ($12|0)==(-255454720);
 $15 = ($13|0)==(-1918276056);
 $16 = $14 & $15;
 $$$i$i = $16 ? $5 : 0;
 $_14$sroa$0$0$copyload$i = HEAP32[$_15$i>>2]|0;
 $switch1tmp$i = ($_14$sroa$0$0$copyload$i|0)==(0|0);
 $switchtmp$i = ($$$i$i|0)==(0|0);
 $or$cond$i = $switch1tmp$i | $switchtmp$i;
 if ($or$cond$i) {
  $_0$0$off0 = 0;
  STACKTOP = sp;return ($_0$0$off0|0);
 }
 $_14$sroa$5$0$$sroa_idx10$i = ((($_15$i)) + 4|0);
 $_14$sroa$5$0$copyload$i = HEAP32[$_14$sroa$5$0$$sroa_idx10$i>>2]|0;
 $$idx13$val$i = +HEAPF32[$$$i$i>>2];
 $$idx14$i = ((($$$i$i)) + 4|0);
 $$idx14$val$i = +HEAPF32[$$idx14$i>>2];
 $_5$sroa$0$0$copyload$i$i$i$i$i = +HEAPF32[$4>>2];
 $_5$sroa$4$0$$sroa_idx2$i$i$i$i$i = ((($4)) + 4|0);
 $_5$sroa$4$0$copyload$i$i$i$i$i = +HEAPF32[$_5$sroa$4$0$$sroa_idx2$i$i$i$i$i>>2];
 $_5$sroa$5$0$$sroa_idx4$i$i$i$i$i = ((($4)) + 8|0);
 $_5$sroa$5$0$copyload$i$i$i$i$i = +HEAPF32[$_5$sroa$5$0$$sroa_idx4$i$i$i$i$i>>2];
 $_5$sroa$6$0$$sroa_idx6$i$i$i$i$i = ((($4)) + 12|0);
 $_5$sroa$6$0$copyload$i$i$i$i$i = +HEAPF32[$_5$sroa$6$0$$sroa_idx6$i$i$i$i$i>>2];
 $17 = $$idx13$val$i * $_5$sroa$0$0$copyload$i$i$i$i$i;
 $18 = $$idx14$val$i * $_5$sroa$5$0$copyload$i$i$i$i$i;
 $19 = $17 + $18;
 $20 = $$idx13$val$i * $_5$sroa$4$0$copyload$i$i$i$i$i;
 $21 = $$idx14$val$i * $_5$sroa$6$0$copyload$i$i$i$i$i;
 $22 = $20 + $21;
 $23 = ((($4)) + 16|0);
 $24 = ((($4)) + 20|0);
 $25 = +HEAPF32[$23>>2];
 $26 = +HEAPF32[$24>>2];
 $27 = $25 + 0.0;
 $28 = $26 + 0.0;
 $29 = -$19;
 $30 = -$22;
 HEAPF32[$_26$i$i$i>>2] = $29;
 $31 = ((($_26$i$i$i)) + 4|0);
 HEAPF32[$31>>2] = $30;
 $32 = ((($_14$sroa$5$0$copyload$i)) + 12|0);
 $33 = HEAP32[$32>>2]|0;
 FUNCTION_TABLE_viiii[$33 & 511]($tmp_ret1$i$i$i,$_14$sroa$0$0$copyload$i,$1,$_26$i$i$i);
 $34 = ((($tmp_ret1$i$i$i)) + 4|0);
 $35 = HEAP32[$tmp_ret1$i$i$i>>2]|0;
 $36 = HEAP32[$34>>2]|0;
 $37 = (HEAP32[tempDoublePtr>>2]=$35,+HEAPF32[tempDoublePtr>>2]);
 $38 = (HEAP32[tempDoublePtr>>2]=$36,+HEAPF32[tempDoublePtr>>2]);
 $39 = $27 - $37;
 $40 = $28 - $38;
 $41 = $19 * $39;
 $42 = $22 * $40;
 $43 = $41 + $42;
 $44 = -$7;
 $45 = $43 > $44;
 if ($45) {
  $46 = $19 * $43;
  $47 = $22 * $43;
  $48 = $37 + $46;
  $49 = $38 + $47;
  $$sink$i5$i$i = 1;$52 = $35;$55 = $36;$_21$sroa$5$0$i = $48;$_21$sroa$6$0$i = $49;
 } else {
  $$sink$i5$i$i = 0;$52 = 0;$55 = 0;$_21$sroa$5$0$i = 0.0;$_21$sroa$6$0$i = 0.0;
 }
 $_21$sroa$0$0$$sroa_idx$i = ((($0)) + 24|0);
 HEAP32[$_21$sroa$0$0$$sroa_idx$i>>2] = $$sink$i5$i$i;
 $_21$sroa$4$0$$sroa_idx16$i = ((($0)) + 28|0);
 $50 = $_21$sroa$4$0$$sroa_idx16$i;
 $51 = $50;
 HEAP32[$51>>2] = $52;
 $53 = (($50) + 4)|0;
 $54 = $53;
 HEAP32[$54>>2] = $55;
 $_21$sroa$5$0$$sroa_idx19$i = ((($0)) + 36|0);
 HEAPF32[$_21$sroa$5$0$$sroa_idx19$i>>2] = $_21$sroa$5$0$i;
 $_21$sroa$6$0$$sroa_idx22$i = ((($0)) + 40|0);
 HEAPF32[$_21$sroa$6$0$$sroa_idx22$i>>2] = $_21$sroa$6$0$i;
 $_21$sroa$7$0$$sroa_idx25$i = ((($0)) + 44|0);
 HEAPF32[$_21$sroa$7$0$$sroa_idx25$i>>2] = $29;
 $_21$sroa$8$0$$sroa_idx28$i = ((($0)) + 48|0);
 HEAPF32[$_21$sroa$8$0$$sroa_idx28$i>>2] = $30;
 $_21$sroa$9$0$$sroa_idx31$i = ((($0)) + 52|0);
 HEAPF32[$_21$sroa$9$0$$sroa_idx31$i>>2] = $43;
 $56 = ((($0)) + 12|0);
 $switch$i = ($$sink$i5$i$i|0)==(1);
 $57 = ((($0)) + 20|0);
 $58 = HEAP32[$57>>2]|0;
 if ($switch$i) {
  $$idx$i$i = ((($0)) + 16|0);
  $$idx$val$i$i = HEAP32[$$idx$i$i>>2]|0;
  $59 = ($58|0)==($$idx$val$i$i|0);
  if ($59) {
   __ZN40__LT_alloc__raw_vec__RawVec_LT_T_GT__GT_6double17ha4899d9ca8626977E($56);
   $$pre$i$i = HEAP32[$57>>2]|0;
   $62 = $$pre$i$i;
  } else {
   $62 = $58;
  }
  $60 = HEAP32[$56>>2]|0;
  $61 = (($60) + (($62*28)|0)|0);
  HEAP32[$61>>2] = $52;
  $value$i$sroa$4$0$$sroa_idx27$i = (((($60) + (($62*28)|0)|0)) + 4|0);
  HEAP32[$value$i$sroa$4$0$$sroa_idx27$i>>2] = $55;
  $63 = (((($60) + (($62*28)|0)|0)) + 8|0);
  HEAPF32[$63>>2] = $_21$sroa$5$0$i;
  $value$i$sroa$6$0$$sroa_idx33$i = (((($60) + (($62*28)|0)|0)) + 12|0);
  HEAPF32[$value$i$sroa$6$0$$sroa_idx33$i>>2] = $_21$sroa$6$0$i;
  $64 = (((($60) + (($62*28)|0)|0)) + 16|0);
  HEAPF32[$64>>2] = $29;
  $value$i$sroa$8$0$$sroa_idx39$i = (((($60) + (($62*28)|0)|0)) + 20|0);
  HEAPF32[$value$i$sroa$8$0$$sroa_idx39$i>>2] = $30;
  $value$i$sroa$9$0$$sroa_idx42$i = (((($60) + (($62*28)|0)|0)) + 24|0);
  HEAPF32[$value$i$sroa$9$0$$sroa_idx42$i>>2] = $43;
  $65 = HEAP32[$57>>2]|0;
  $66 = (($65) + 1)|0;
  HEAP32[$57>>2] = $66;
  $$pre$phiZ2D = $56;$69 = $66;
 } else {
  $$pre$phiZ2D = $56;$69 = $58;
 }
 $67 = HEAP32[$$pre$phiZ2D>>2]|0;
 $68 = (($67) + (($69*28)|0)|0);
 $70 = ($69|0)==(0);
 if ($70) {
  $_0$0$off0 = 1;
  STACKTOP = sp;return ($_0$0$off0|0);
 }
 $$idx10 = ((($0)) + 8|0);
 $71 = ((($_56)) + 16|0);
 $72 = ((($_56)) + 20|0);
 $73 = ((($_56)) + 24|0);
 $74 = ((($1)) + 16|0);
 $75 = ((($1)) + 20|0);
 $_6$sroa$4$0$$sroa_idx2$i$i$i$i = ((($1)) + 4|0);
 $_6$sroa$5$0$$sroa_idx4$i$i$i$i = ((($1)) + 8|0);
 $_6$sroa$6$0$$sroa_idx6$i$i$i$i = ((($1)) + 12|0);
 $$idx$i = ((($0)) + 4|0);
 $77 = $67;
 while(1) {
  $76 = ((($77)) + 28|0);
  $$idx10$val = HEAP32[$$idx10>>2]|0;
  $78 = ($$idx10$val|0)==(2);
  if ($78) {
   $$idx$val = HEAP32[$0>>2]|0;
   $79 = ((($77)) + 16|0);
   $80 = ((($77)) + 24|0);
   $81 = SIMD_Int32x4_load(HEAPU8, $77);
   $$idx$val12$i19 = HEAP32[$79>>2]|0;
   $$idx3$i20 = ((($77)) + 20|0);
   $$idx3$val13$i21 = HEAP32[$$idx3$i20>>2]|0;
   $$val14$i22 = HEAP32[$80>>2]|0;
   temp_Int32x4_ptr = $_56;SIMD_Int32x4_store(HEAPU8, temp_Int32x4_ptr, $81);
   HEAP32[$71>>2] = $$idx$val12$i19;
   HEAP32[$72>>2] = $$idx3$val13$i21;
   HEAP32[$73>>2] = $$val14$i22;
   __ZN17ncollide_pipeline12narrow_phase17contact_generator38incremental_contact_manifold_generator22add_reduce_by_variance17h436ef11197f907e4E($$idx$val,$_56,$1,$4);
  } else {
   $83 = ((($77)) + 16|0);
   $84 = ((($77)) + 24|0);
   $85 = SIMD_Float32x4_load(HEAPU8, $77);
   $$idx$val12$i = HEAP32[$83>>2]|0;
   $$idx3$i = ((($77)) + 20|0);
   $$idx3$val13$i = HEAP32[$$idx3$i>>2]|0;
   $$val14$i = HEAP32[$84>>2]|0;
   $86 = +HEAPF32[$74>>2];
   $87 = +HEAPF32[$75>>2];
   $88 = +SIMD_Float32x4_extractLane($85,0);
   $89 = $88 - $86;
   $90 = +SIMD_Float32x4_extractLane($85,1);
   $91 = $90 - $87;
   $_6$sroa$0$0$copyload$i$i$i$i = +HEAPF32[$1>>2];
   $_6$sroa$4$0$copyload$i$i$i$i = +HEAPF32[$_6$sroa$4$0$$sroa_idx2$i$i$i$i>>2];
   $_6$sroa$5$0$copyload$i$i$i$i = +HEAPF32[$_6$sroa$5$0$$sroa_idx4$i$i$i$i>>2];
   $_6$sroa$6$0$copyload$i$i$i$i = +HEAPF32[$_6$sroa$6$0$$sroa_idx6$i$i$i$i>>2];
   $92 = $89 * $_6$sroa$0$0$copyload$i$i$i$i;
   $93 = $91 * $_6$sroa$4$0$copyload$i$i$i$i;
   $94 = $92 + $93;
   $95 = $89 * $_6$sroa$5$0$copyload$i$i$i$i;
   $96 = $91 * $_6$sroa$6$0$copyload$i$i$i$i;
   $97 = $95 + $96;
   $98 = +SIMD_Float32x4_extractLane($85,2);
   $99 = $98 - $25;
   $100 = +SIMD_Float32x4_extractLane($85,3);
   $101 = $100 - $26;
   $102 = $99 * $_5$sroa$0$0$copyload$i$i$i$i$i;
   $103 = $101 * $_5$sroa$4$0$copyload$i$i$i$i$i;
   $104 = $102 + $103;
   $105 = $99 * $_5$sroa$5$0$copyload$i$i$i$i$i;
   $106 = $101 * $_5$sroa$6$0$copyload$i$i$i$i$i;
   $107 = $105 + $106;
   $108 = $88 + $98;
   $109 = $90 + $100;
   $110 = $108 * 0.5;
   $111 = $109 * 0.5;
   $$idx$val$i = HEAP32[$$idx$i>>2]|0;
   $112 = ($$idx10$val|0)==($$idx$val$i|0);
   if ($112) {
    __ZN40__LT_alloc__raw_vec__RawVec_LT_T_GT__GT_6double17h592c9c93ffb654b3E($0);
    $$pre$i = HEAP32[$$idx10>>2]|0;
    $114 = $$pre$i;
   } else {
    $114 = $$idx10$val;
   }
   $113 = HEAP32[$0>>2]|0;
   $value$i$sroa$0$0$$sroa_idx = (($113) + (($114*52)|0)|0);
   HEAPF32[$value$i$sroa$0$0$$sroa_idx>>2] = $94;
   $value$i$sroa$4$0$$sroa_idx51 = (((($113) + (($114*52)|0)|0)) + 4|0);
   HEAPF32[$value$i$sroa$4$0$$sroa_idx51>>2] = $97;
   $value$i$sroa$5$0$$sroa_idx53 = (((($113) + (($114*52)|0)|0)) + 8|0);
   HEAPF32[$value$i$sroa$5$0$$sroa_idx53>>2] = $104;
   $value$i$sroa$6$0$$sroa_idx55 = (((($113) + (($114*52)|0)|0)) + 12|0);
   HEAPF32[$value$i$sroa$6$0$$sroa_idx55>>2] = $107;
   $value$i$sroa$7$0$$sroa_idx57 = (((($113) + (($114*52)|0)|0)) + 16|0);
   HEAPF32[$value$i$sroa$7$0$$sroa_idx57>>2] = $110;
   $value$i$sroa$8$0$$sroa_idx59 = (((($113) + (($114*52)|0)|0)) + 20|0);
   HEAPF32[$value$i$sroa$8$0$$sroa_idx59>>2] = $111;
   $value$i$sroa$9$0$$sroa_idx61 = (((($113) + (($114*52)|0)|0)) + 24|0);
   temp_Float32x4_ptr = $value$i$sroa$9$0$$sroa_idx61;SIMD_Float32x4_store(HEAPU8, temp_Float32x4_ptr, $85);
   $value$i$sroa$13$0$$sroa_idx69 = (((($113) + (($114*52)|0)|0)) + 40|0);
   HEAP32[$value$i$sroa$13$0$$sroa_idx69>>2] = $$idx$val12$i;
   $value$i$sroa$14$0$$sroa_idx72 = (((($113) + (($114*52)|0)|0)) + 44|0);
   HEAP32[$value$i$sroa$14$0$$sroa_idx72>>2] = $$idx3$val13$i;
   $value$i$sroa$15$0$$sroa_idx75 = (((($113) + (($114*52)|0)|0)) + 48|0);
   HEAP32[$value$i$sroa$15$0$$sroa_idx75>>2] = $$val14$i;
   $115 = HEAP32[$$idx10>>2]|0;
   $116 = (($115) + 1)|0;
   HEAP32[$$idx10>>2] = $116;
  }
  $82 = ($76|0)==($68|0);
  if ($82) {
   break;
  } else {
   $77 = $76;
  }
 }
 $$pre92 = HEAP32[$57>>2]|0;
 $phitmp = ($$pre92|0)==(0);
 if ($phitmp) {
  $_0$0$off0 = 1;
  STACKTOP = sp;return ($_0$0$off0|0);
 }
 HEAP32[$57>>2] = 0;
 $_0$0$off0 = 1;
 STACKTOP = sp;return ($_0$0$off0|0);
}
function __ZN164__LT_ncollide_pipeline__narrow_phase__contact_generator__incremental_contact_manifold_generator__IncrementalContactManifoldGenerator_LT_P_C__u20_M_C__u20_CD_GT__GT_16add_new_contacts17ha149d6427b72e0c8E($0,$1,$2,$3,$4,$5,$6,$7) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 $7 = +$7;
 var $$$i$i = 0, $$idx$i = 0, $$idx$i$i11 = 0, $$idx$val = 0, $$idx$val$i = 0, $$idx$val$i$i = 0.0, $$idx$val$i$i12 = 0, $$idx$val12$i = 0, $$idx$val12$i21 = 0, $$idx10 = 0, $$idx10$val = 0, $$idx17$i$i = 0, $$idx17$val$i$i = 0.0, $$idx3$i = 0, $$idx3$i22 = 0, $$idx3$val13$i = 0, $$idx3$val13$i23 = 0, $$pre$i = 0, $$pre$i$i = 0, $$pre$phiZ2D = 0;
 var $$pre92 = 0, $$sink$i$i = 0, $$val14$i = 0, $$val14$i24 = 0, $10 = 0, $100 = 0.0, $101 = 0.0, $102 = 0.0, $103 = 0.0, $104 = 0.0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0;
 var $16 = 0, $17 = 0.0, $18 = 0.0, $19 = 0.0, $20 = 0.0, $21 = 0.0, $22 = 0.0, $23 = 0, $24 = 0, $25 = 0.0, $26 = 0.0, $27 = 0.0, $28 = 0.0, $29 = 0.0, $30 = 0.0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0;
 var $36 = 0, $37 = 0.0, $38 = 0.0, $39 = 0.0, $40 = 0.0, $41 = 0.0, $42 = 0.0, $43 = 0.0, $44 = 0.0, $45 = 0, $46 = 0.0, $47 = 0.0, $48 = 0.0, $49 = 0.0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0;
 var $56 = 0, $57 = 0, $58 = 0, $59 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = SIMD_Int32x4(0,0,0,0), $75 = 0;
 var $76 = 0, $77 = 0, $78 = SIMD_Float32x4(0,0,0,0), $79 = 0.0, $8 = 0, $80 = 0.0, $81 = 0.0, $82 = 0.0, $83 = 0.0, $84 = 0.0, $85 = 0.0, $86 = 0.0, $87 = 0.0, $88 = 0.0, $89 = 0.0, $9 = 0, $90 = 0.0, $91 = 0.0, $92 = 0.0, $93 = 0.0;
 var $94 = 0.0, $95 = 0.0, $96 = 0.0, $97 = 0.0, $98 = 0.0, $99 = 0.0, $_0$0$off0 = 0, $_14$sroa$5$4$copyload$i = 0, $_14$sroa$8$4$$sroa_idx12$i = 0, $_14$sroa$8$4$copyload$i = 0, $_17$i = 0, $_21$sroa$0$0$$sroa_idx$i = 0, $_21$sroa$10$0$$sroa_idx30$i = 0, $_21$sroa$4$0$$sroa_idx14$i = 0, $_21$sroa$4$0$i = 0.0, $_21$sroa$5$0$$sroa_idx17$i = 0, $_21$sroa$5$0$i = 0.0, $_21$sroa$6$0$$sroa_idx20$i = 0, $_21$sroa$7$0$$sroa_idx22$i = 0, $_21$sroa$8$0$$sroa_idx24$i = 0;
 var $_21$sroa$9$0$$sroa_idx27$i = 0, $_26$i$i = 0, $_5$sroa$0$0$copyload$i$i$i$i = 0.0, $_5$sroa$4$0$$sroa_idx2$i$i$i$i = 0, $_5$sroa$4$0$copyload$i$i$i$i = 0.0, $_5$sroa$5$0$$sroa_idx4$i$i$i$i = 0, $_5$sroa$5$0$copyload$i$i$i$i = 0.0, $_5$sroa$6$0$$sroa_idx6$i$i$i$i = 0, $_5$sroa$6$0$copyload$i$i$i$i = 0.0, $_56 = 0, $_6$sroa$0$0$copyload$i$i$i9$i = 0.0, $_6$sroa$4$0$$sroa_idx2$i$i$i10$i = 0, $_6$sroa$4$0$copyload$i$i$i11$i = 0.0, $_6$sroa$5$0$$sroa_idx4$i$i$i12$i = 0, $_6$sroa$5$0$copyload$i$i$i13$i = 0.0, $_6$sroa$6$0$$sroa_idx6$i$i$i14$i = 0, $_6$sroa$6$0$copyload$i$i$i15$i = 0.0, $or$cond$i = 0, $phitmp = 0, $switch$i = 0;
 var $switch1tmp$i = 0, $switchtmp$i = 0, $tmp_ret1$i$i = 0, $value$i$sroa$0$0$$sroa_idx = 0, $value$i$sroa$13$0$$sroa_idx69 = 0, $value$i$sroa$14$0$$sroa_idx72 = 0, $value$i$sroa$15$0$$sroa_idx75 = 0, $value$i$sroa$4$0$$sroa_idx27$i = 0, $value$i$sroa$4$0$$sroa_idx51 = 0, $value$i$sroa$5$0$$sroa_idx30$i = 0, $value$i$sroa$5$0$$sroa_idx53 = 0, $value$i$sroa$6$0$$sroa_idx33$i = 0, $value$i$sroa$6$0$$sroa_idx55 = 0, $value$i$sroa$7$0$$sroa_idx57 = 0, $value$i$sroa$8$0$$sroa_idx39$i = 0, $value$i$sroa$8$0$$sroa_idx59 = 0, $value$i$sroa$9$0$$sroa_idx42$i = 0, $value$i$sroa$9$0$$sroa_idx61 = 0, label = 0, sp = 0;
 var temp_Float32x4_ptr = 0, temp_Int32x4_ptr = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $_26$i$i = sp + 48|0;
 $tmp_ret1$i$i = sp + 40|0;
 $_17$i = sp + 32|0;
 $_56 = sp;
 $8 = ((($3)) + 48|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = (FUNCTION_TABLE_ii[$9 & 511]($2)|0);
 $11 = tempRet0;
 $12 = ($10|0)==(-255454720);
 $13 = ($11|0)==(-1918276056);
 $14 = $12 & $13;
 $$$i$i = $14 ? $2 : 0;
 $15 = ((($6)) + 28|0);
 $16 = HEAP32[$15>>2]|0;
 FUNCTION_TABLE_vii[$16 & 511]($_17$i,$5);
 $_14$sroa$5$4$copyload$i = HEAP32[$_17$i>>2]|0;
 $switch1tmp$i = ($$$i$i|0)==(0|0);
 $switchtmp$i = ($_14$sroa$5$4$copyload$i|0)==(0|0);
 $or$cond$i = $switch1tmp$i | $switchtmp$i;
 if ($or$cond$i) {
  $_0$0$off0 = 0;
  STACKTOP = sp;return ($_0$0$off0|0);
 }
 $_14$sroa$8$4$$sroa_idx12$i = ((($_17$i)) + 4|0);
 $_14$sroa$8$4$copyload$i = HEAP32[$_14$sroa$8$4$$sroa_idx12$i>>2]|0;
 $$idx$val$i$i = +HEAPF32[$$$i$i>>2];
 $$idx17$i$i = ((($$$i$i)) + 4|0);
 $$idx17$val$i$i = +HEAPF32[$$idx17$i$i>>2];
 $_5$sroa$0$0$copyload$i$i$i$i = +HEAPF32[$1>>2];
 $_5$sroa$4$0$$sroa_idx2$i$i$i$i = ((($1)) + 4|0);
 $_5$sroa$4$0$copyload$i$i$i$i = +HEAPF32[$_5$sroa$4$0$$sroa_idx2$i$i$i$i>>2];
 $_5$sroa$5$0$$sroa_idx4$i$i$i$i = ((($1)) + 8|0);
 $_5$sroa$5$0$copyload$i$i$i$i = +HEAPF32[$_5$sroa$5$0$$sroa_idx4$i$i$i$i>>2];
 $_5$sroa$6$0$$sroa_idx6$i$i$i$i = ((($1)) + 12|0);
 $_5$sroa$6$0$copyload$i$i$i$i = +HEAPF32[$_5$sroa$6$0$$sroa_idx6$i$i$i$i>>2];
 $17 = $$idx$val$i$i * $_5$sroa$0$0$copyload$i$i$i$i;
 $18 = $$idx17$val$i$i * $_5$sroa$5$0$copyload$i$i$i$i;
 $19 = $17 + $18;
 $20 = $$idx$val$i$i * $_5$sroa$4$0$copyload$i$i$i$i;
 $21 = $$idx17$val$i$i * $_5$sroa$6$0$copyload$i$i$i$i;
 $22 = $20 + $21;
 $23 = ((($1)) + 16|0);
 $24 = ((($1)) + 20|0);
 $25 = +HEAPF32[$23>>2];
 $26 = +HEAPF32[$24>>2];
 $27 = $25 + 0.0;
 $28 = $26 + 0.0;
 $29 = -$19;
 $30 = -$22;
 HEAPF32[$_26$i$i>>2] = $29;
 $31 = ((($_26$i$i)) + 4|0);
 HEAPF32[$31>>2] = $30;
 $32 = ((($_14$sroa$8$4$copyload$i)) + 12|0);
 $33 = HEAP32[$32>>2]|0;
 FUNCTION_TABLE_viiii[$33 & 511]($tmp_ret1$i$i,$_14$sroa$5$4$copyload$i,$4,$_26$i$i);
 $34 = ((($tmp_ret1$i$i)) + 4|0);
 $35 = HEAP32[$tmp_ret1$i$i>>2]|0;
 $36 = HEAP32[$34>>2]|0;
 $37 = (HEAP32[tempDoublePtr>>2]=$35,+HEAPF32[tempDoublePtr>>2]);
 $38 = (HEAP32[tempDoublePtr>>2]=$36,+HEAPF32[tempDoublePtr>>2]);
 $39 = $27 - $37;
 $40 = $28 - $38;
 $41 = $19 * $39;
 $42 = $22 * $40;
 $43 = $41 + $42;
 $44 = -$7;
 $45 = $43 > $44;
 if ($45) {
  $46 = $19 * $43;
  $47 = $22 * $43;
  $48 = $37 + $46;
  $49 = $38 + $47;
  $$sink$i$i = 1;$_21$sroa$4$0$i = $48;$_21$sroa$5$0$i = $49;
 } else {
  $$sink$i$i = 0;$_21$sroa$4$0$i = 0.0;$_21$sroa$5$0$i = 0.0;
 }
 $_21$sroa$0$0$$sroa_idx$i = ((($0)) + 24|0);
 HEAP32[$_21$sroa$0$0$$sroa_idx$i>>2] = $$sink$i$i;
 $_21$sroa$4$0$$sroa_idx14$i = ((($0)) + 28|0);
 HEAPF32[$_21$sroa$4$0$$sroa_idx14$i>>2] = $_21$sroa$4$0$i;
 $_21$sroa$5$0$$sroa_idx17$i = ((($0)) + 32|0);
 HEAPF32[$_21$sroa$5$0$$sroa_idx17$i>>2] = $_21$sroa$5$0$i;
 $_21$sroa$6$0$$sroa_idx20$i = ((($0)) + 36|0);
 HEAP32[$_21$sroa$6$0$$sroa_idx20$i>>2] = $35;
 $_21$sroa$7$0$$sroa_idx22$i = ((($0)) + 40|0);
 HEAP32[$_21$sroa$7$0$$sroa_idx22$i>>2] = $36;
 $_21$sroa$8$0$$sroa_idx24$i = ((($0)) + 44|0);
 HEAPF32[$_21$sroa$8$0$$sroa_idx24$i>>2] = $19;
 $_21$sroa$9$0$$sroa_idx27$i = ((($0)) + 48|0);
 HEAPF32[$_21$sroa$9$0$$sroa_idx27$i>>2] = $22;
 $_21$sroa$10$0$$sroa_idx30$i = ((($0)) + 52|0);
 HEAPF32[$_21$sroa$10$0$$sroa_idx30$i>>2] = $43;
 $50 = ((($0)) + 12|0);
 $switch$i = ($$sink$i$i|0)==(1);
 $51 = ((($0)) + 20|0);
 $52 = HEAP32[$51>>2]|0;
 if ($switch$i) {
  $$idx$i$i11 = ((($0)) + 16|0);
  $$idx$val$i$i12 = HEAP32[$$idx$i$i11>>2]|0;
  $53 = ($52|0)==($$idx$val$i$i12|0);
  if ($53) {
   __ZN40__LT_alloc__raw_vec__RawVec_LT_T_GT__GT_6double17ha4899d9ca8626977E($50);
   $$pre$i$i = HEAP32[$51>>2]|0;
   $56 = $$pre$i$i;
  } else {
   $56 = $52;
  }
  $54 = HEAP32[$50>>2]|0;
  $55 = (($54) + (($56*28)|0)|0);
  HEAPF32[$55>>2] = $_21$sroa$4$0$i;
  $value$i$sroa$4$0$$sroa_idx27$i = (((($54) + (($56*28)|0)|0)) + 4|0);
  HEAPF32[$value$i$sroa$4$0$$sroa_idx27$i>>2] = $_21$sroa$5$0$i;
  $value$i$sroa$5$0$$sroa_idx30$i = (((($54) + (($56*28)|0)|0)) + 8|0);
  HEAP32[$value$i$sroa$5$0$$sroa_idx30$i>>2] = $35;
  $value$i$sroa$6$0$$sroa_idx33$i = (((($54) + (($56*28)|0)|0)) + 12|0);
  HEAP32[$value$i$sroa$6$0$$sroa_idx33$i>>2] = $36;
  $57 = (((($54) + (($56*28)|0)|0)) + 16|0);
  HEAPF32[$57>>2] = $19;
  $value$i$sroa$8$0$$sroa_idx39$i = (((($54) + (($56*28)|0)|0)) + 20|0);
  HEAPF32[$value$i$sroa$8$0$$sroa_idx39$i>>2] = $22;
  $value$i$sroa$9$0$$sroa_idx42$i = (((($54) + (($56*28)|0)|0)) + 24|0);
  HEAPF32[$value$i$sroa$9$0$$sroa_idx42$i>>2] = $43;
  $58 = HEAP32[$51>>2]|0;
  $59 = (($58) + 1)|0;
  HEAP32[$51>>2] = $59;
  $$pre$phiZ2D = $50;$62 = $59;
 } else {
  $$pre$phiZ2D = $50;$62 = $52;
 }
 $60 = HEAP32[$$pre$phiZ2D>>2]|0;
 $61 = (($60) + (($62*28)|0)|0);
 $63 = ($62|0)==(0);
 if ($63) {
  $_0$0$off0 = 1;
  STACKTOP = sp;return ($_0$0$off0|0);
 }
 $$idx10 = ((($0)) + 8|0);
 $64 = ((($_56)) + 16|0);
 $65 = ((($_56)) + 20|0);
 $66 = ((($_56)) + 24|0);
 $67 = ((($4)) + 16|0);
 $68 = ((($4)) + 20|0);
 $_6$sroa$4$0$$sroa_idx2$i$i$i10$i = ((($4)) + 4|0);
 $_6$sroa$5$0$$sroa_idx4$i$i$i12$i = ((($4)) + 8|0);
 $_6$sroa$6$0$$sroa_idx6$i$i$i14$i = ((($4)) + 12|0);
 $$idx$i = ((($0)) + 4|0);
 $70 = $60;
 while(1) {
  $69 = ((($70)) + 28|0);
  $$idx10$val = HEAP32[$$idx10>>2]|0;
  $71 = ($$idx10$val|0)==(2);
  if ($71) {
   $$idx$val = HEAP32[$0>>2]|0;
   $72 = ((($70)) + 16|0);
   $73 = ((($70)) + 24|0);
   $74 = SIMD_Int32x4_load(HEAPU8, $70);
   $$idx$val12$i21 = HEAP32[$72>>2]|0;
   $$idx3$i22 = ((($70)) + 20|0);
   $$idx3$val13$i23 = HEAP32[$$idx3$i22>>2]|0;
   $$val14$i24 = HEAP32[$73>>2]|0;
   temp_Int32x4_ptr = $_56;SIMD_Int32x4_store(HEAPU8, temp_Int32x4_ptr, $74);
   HEAP32[$64>>2] = $$idx$val12$i21;
   HEAP32[$65>>2] = $$idx3$val13$i23;
   HEAP32[$66>>2] = $$val14$i24;
   __ZN17ncollide_pipeline12narrow_phase17contact_generator38incremental_contact_manifold_generator22add_reduce_by_variance17h436ef11197f907e4E($$idx$val,$_56,$1,$4);
  } else {
   $76 = ((($70)) + 16|0);
   $77 = ((($70)) + 24|0);
   $78 = SIMD_Float32x4_load(HEAPU8, $70);
   $$idx$val12$i = HEAP32[$76>>2]|0;
   $$idx3$i = ((($70)) + 20|0);
   $$idx3$val13$i = HEAP32[$$idx3$i>>2]|0;
   $$val14$i = HEAP32[$77>>2]|0;
   $79 = +SIMD_Float32x4_extractLane($78,0);
   $80 = $79 - $25;
   $81 = +SIMD_Float32x4_extractLane($78,1);
   $82 = $81 - $26;
   $83 = $80 * $_5$sroa$0$0$copyload$i$i$i$i;
   $84 = $82 * $_5$sroa$4$0$copyload$i$i$i$i;
   $85 = $83 + $84;
   $86 = $80 * $_5$sroa$5$0$copyload$i$i$i$i;
   $87 = $82 * $_5$sroa$6$0$copyload$i$i$i$i;
   $88 = $86 + $87;
   $89 = +HEAPF32[$67>>2];
   $90 = +HEAPF32[$68>>2];
   $91 = +SIMD_Float32x4_extractLane($78,2);
   $92 = $91 - $89;
   $93 = +SIMD_Float32x4_extractLane($78,3);
   $94 = $93 - $90;
   $_6$sroa$0$0$copyload$i$i$i9$i = +HEAPF32[$4>>2];
   $_6$sroa$4$0$copyload$i$i$i11$i = +HEAPF32[$_6$sroa$4$0$$sroa_idx2$i$i$i10$i>>2];
   $_6$sroa$5$0$copyload$i$i$i13$i = +HEAPF32[$_6$sroa$5$0$$sroa_idx4$i$i$i12$i>>2];
   $_6$sroa$6$0$copyload$i$i$i15$i = +HEAPF32[$_6$sroa$6$0$$sroa_idx6$i$i$i14$i>>2];
   $95 = $92 * $_6$sroa$0$0$copyload$i$i$i9$i;
   $96 = $94 * $_6$sroa$4$0$copyload$i$i$i11$i;
   $97 = $95 + $96;
   $98 = $92 * $_6$sroa$5$0$copyload$i$i$i13$i;
   $99 = $94 * $_6$sroa$6$0$copyload$i$i$i15$i;
   $100 = $98 + $99;
   $101 = $79 + $91;
   $102 = $81 + $93;
   $103 = $101 * 0.5;
   $104 = $102 * 0.5;
   $$idx$val$i = HEAP32[$$idx$i>>2]|0;
   $105 = ($$idx10$val|0)==($$idx$val$i|0);
   if ($105) {
    __ZN40__LT_alloc__raw_vec__RawVec_LT_T_GT__GT_6double17h592c9c93ffb654b3E($0);
    $$pre$i = HEAP32[$$idx10>>2]|0;
    $107 = $$pre$i;
   } else {
    $107 = $$idx10$val;
   }
   $106 = HEAP32[$0>>2]|0;
   $value$i$sroa$0$0$$sroa_idx = (($106) + (($107*52)|0)|0);
   HEAPF32[$value$i$sroa$0$0$$sroa_idx>>2] = $85;
   $value$i$sroa$4$0$$sroa_idx51 = (((($106) + (($107*52)|0)|0)) + 4|0);
   HEAPF32[$value$i$sroa$4$0$$sroa_idx51>>2] = $88;
   $value$i$sroa$5$0$$sroa_idx53 = (((($106) + (($107*52)|0)|0)) + 8|0);
   HEAPF32[$value$i$sroa$5$0$$sroa_idx53>>2] = $97;
   $value$i$sroa$6$0$$sroa_idx55 = (((($106) + (($107*52)|0)|0)) + 12|0);
   HEAPF32[$value$i$sroa$6$0$$sroa_idx55>>2] = $100;
   $value$i$sroa$7$0$$sroa_idx57 = (((($106) + (($107*52)|0)|0)) + 16|0);
   HEAPF32[$value$i$sroa$7$0$$sroa_idx57>>2] = $103;
   $value$i$sroa$8$0$$sroa_idx59 = (((($106) + (($107*52)|0)|0)) + 20|0);
   HEAPF32[$value$i$sroa$8$0$$sroa_idx59>>2] = $104;
   $value$i$sroa$9$0$$sroa_idx61 = (((($106) + (($107*52)|0)|0)) + 24|0);
   temp_Float32x4_ptr = $value$i$sroa$9$0$$sroa_idx61;SIMD_Float32x4_store(HEAPU8, temp_Float32x4_ptr, $78);
   $value$i$sroa$13$0$$sroa_idx69 = (((($106) + (($107*52)|0)|0)) + 40|0);
   HEAP32[$value$i$sroa$13$0$$sroa_idx69>>2] = $$idx$val12$i;
   $value$i$sroa$14$0$$sroa_idx72 = (((($106) + (($107*52)|0)|0)) + 44|0);
   HEAP32[$value$i$sroa$14$0$$sroa_idx72>>2] = $$idx3$val13$i;
   $value$i$sroa$15$0$$sroa_idx75 = (((($106) + (($107*52)|0)|0)) + 48|0);
   HEAP32[$value$i$sroa$15$0$$sroa_idx75>>2] = $$val14$i;
   $108 = HEAP32[$$idx10>>2]|0;
   $109 = (($108) + 1)|0;
   HEAP32[$$idx10>>2] = $109;
  }
  $75 = ($69|0)==($61|0);
  if ($75) {
   break;
  } else {
   $70 = $69;
  }
 }
 $$pre92 = HEAP32[$51>>2]|0;
 $phitmp = ($$pre92|0)==(0);
 if ($phitmp) {
  $_0$0$off0 = 1;
  STACKTOP = sp;return ($_0$0$off0|0);
 }
 HEAP32[$51>>2] = 0;
 $_0$0$off0 = 1;
 STACKTOP = sp;return ($_0$0$off0|0);
}
function __ZN17ncollide_geometry5query10algorithms3gjk28project_origin_with_max_dist17h20c0944449d69aadE($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = +$2;
 $3 = $3|0;
 $4 = $4|0;
 var $$idx$i = 0, $$idx$i$i = 0, $$idx$i26 = 0, $$idx$val$i = 0, $$idx$val$i$i = 0, $$idx$val$i27 = 0, $$idx$val$i27185 = 0, $$idx3$i = 0, $$idx3$val$i = 0, $$idx4$val$i = 0, $$idx5$i = 0, $$idx5$val$i = 0, $$idx6$i = 0, $$idx6$val = 0.0, $$idx6$val$i = 0, $$idx7$val = 0.0, $$idx7$val$i = 0, $$idx8 = 0, $$idx8$i = 0, $$idx8$val = 0.0;
 var $$idx8$val$i = 0, $$idx9$val = 0.0, $$pre$i$i = 0, $$sink = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0.0, $18 = 0.0, $19 = 0.0, $20 = 0, $21 = 0, $22 = 0, $23 = 0.0, $24 = 0.0, $25 = 0.0;
 var $26 = 0.0, $27 = 0, $28 = 0, $29 = 0.0, $30 = 0.0, $31 = 0.0, $32 = 0.0, $33 = 0.0, $34 = 0.0, $35 = 0.0, $36 = 0.0, $37 = 0.0, $38 = 0.0, $39 = 0.0, $40 = 0.0, $41 = 0.0, $42 = 0.0, $43 = 0.0, $44 = 0.0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0.0, $49 = 0.0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0.0, $6 = 0.0, $60 = 0.0, $61 = 0.0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0.0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $8 = 0.0, $9 = 0, $_101$sroa$0$0$$sroa_idx = 0, $_101$sroa$4$0$$sroa_idx79 = 0, $_101$sroa$5$0$$sroa_idx81 = 0, $_14$i$i = 0, $_41 = 0, $_65$sroa$3$0$copyload$in = 0.0, $_65$sroa$4$0$copyload$in = 0.0;
 var $max_bound$sroa$0$0$in187 = 0.0, $old_proj$sroa$0 = 0, $or$cond = 0, $or$cond181 = 0, $or$cond181186 = 0, $proj = 0, $tmp_ret$i = 0, $tmp_ret$i$i = 0, $value$i$i$sroa$4$0$$sroa_idx170 = 0, $value$i$i$sroa$5$0$$sroa_idx172 = 0, $value$i$i$sroa$6$0$$sroa_idx174 = 0, $value$i$i$sroa$7$0$$sroa_idx176 = 0, $value$i$i$sroa$8$0$$sroa_idx178 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(80|0);
 $_14$i$i = sp + 64|0;
 $tmp_ret$i$i = sp + 56|0;
 $tmp_ret$i = sp + 48|0;
 $proj = sp + 24|0;
 $_41 = sp + 16|0;
 $old_proj$sroa$0 = sp;
 __ZN162__LT_ncollide_geometry__query__algorithms__johnson_simplex__JohnsonSimplex_LT_P_GT__u20_as_u20_ncollide_geometry__query__algorithms__simplex__Simplex_LT_P_GT__GT_25project_origin_and_reduce17hfe5256e2c63ddccbE($proj,$4);
 $$idx8 = ((($proj)) + 16|0);
 $$idx8$val = +HEAPF32[$$idx8>>2];
 $5 = ((($proj)) + 20|0);
 $$idx9$val = +HEAPF32[$5>>2];
 $6 = $$idx8$val * $$idx8$val;
 $7 = $$idx9$val * $$idx9$val;
 $8 = $6 + $7;
 $$idx$i26 = ((($4)) + 12|0);
 $$idx$val$i27185 = HEAP32[$$idx$i26>>2]|0;
 $9 = ($$idx$val$i27185|0)!=(3);
 $10 = !($8 <= 1.1920928955078125E-5);
 $or$cond181186 = $10 & $9;
 L1: do {
  if ($or$cond181186) {
   $11 = ((($_41)) + 4|0);
   $$idx$i = ((($1)) + 4|0);
   $$idx$val$i = HEAP32[$$idx$i>>2]|0;
   $$idx3$i = ((($1)) + 8|0);
   $$idx3$val$i = HEAP32[$$idx3$i>>2]|0;
   $$idx4$val$i = HEAP32[$1>>2]|0;
   $12 = ((($$idx3$val$i)) + 12|0);
   $13 = ((($tmp_ret$i)) + 4|0);
   $$idx5$i = ((($1)) + 16|0);
   $$idx5$val$i = HEAP32[$$idx5$i>>2]|0;
   $$idx6$i = ((($1)) + 12|0);
   $$idx6$val$i = HEAP32[$$idx6$i>>2]|0;
   $$idx8$i = ((($$idx5$val$i)) + 4|0);
   $14 = ((($_14$i$i)) + 4|0);
   $15 = ((($tmp_ret$i$i)) + 4|0);
   $16 = ((($4)) + 4|0);
   $$idx$i$i = ((($4)) + 8|0);
   $17 = $2 * $2;
   $_65$sroa$3$0$copyload$in = $$idx8$val;$_65$sroa$4$0$copyload$in = $$idx9$val;$max_bound$sroa$0$0$in187 = $8;
   while(1) {
    $18 = -$_65$sroa$3$0$copyload$in;
    $19 = -$_65$sroa$4$0$copyload$in;
    HEAPF32[$_41>>2] = $18;
    HEAPF32[$11>>2] = $19;
    $20 = HEAP32[$12>>2]|0;
    FUNCTION_TABLE_viiii[$20 & 511]($tmp_ret$i,$$idx$val$i,$$idx4$val$i,$_41);
    $21 = HEAP32[$tmp_ret$i>>2]|0;
    $22 = HEAP32[$13>>2]|0;
    $$idx7$val$i = HEAP32[$$idx5$val$i>>2]|0;
    $$idx8$val$i = HEAP32[$$idx8$i>>2]|0;
    $23 = +HEAPF32[$_41>>2];
    $24 = +HEAPF32[$11>>2];
    $25 = -$23;
    $26 = -$24;
    HEAPF32[$_14$i$i>>2] = $25;
    HEAPF32[$14>>2] = $26;
    $27 = ((($$idx8$val$i)) + 12|0);
    $28 = HEAP32[$27>>2]|0;
    FUNCTION_TABLE_viiii[$28 & 511]($tmp_ret$i$i,$$idx7$val$i,$$idx6$val$i,$_14$i$i);
    $29 = +HEAPF32[$tmp_ret$i$i>>2];
    $30 = +HEAPF32[$15>>2];
    $31 = -$29;
    $32 = -$30;
    $33 = (HEAP32[tempDoublePtr>>2]=$21,+HEAPF32[tempDoublePtr>>2]);
    $34 = (HEAP32[tempDoublePtr>>2]=$22,+HEAPF32[tempDoublePtr>>2]);
    $35 = $33 - $29;
    $36 = $34 - $30;
    $37 = $35 * $_65$sroa$3$0$copyload$in;
    $38 = $36 * $_65$sroa$4$0$copyload$in;
    $39 = $37 + $38;
    $40 = $_65$sroa$3$0$copyload$in * $_65$sroa$3$0$copyload$in;
    $41 = $_65$sroa$4$0$copyload$in * $_65$sroa$4$0$copyload$in;
    $42 = $40 + $41;
    $43 = (+Math_sqrt((+$42)));
    $44 = $43 * $2;
    $45 = $39 > $44;
    if ($45) {
     label = 6;
     break;
    }
    $48 = $max_bound$sroa$0$0$in187 - $39;
    $49 = $max_bound$sroa$0$0$in187 * 3.4526697709225118E-4;
    $50 = !($48 <= $49);
    if (!($50)) {
     label = 8;
     break;
    }
    $51 = HEAP32[$$idx$i26>>2]|0;
    $$idx$val$i$i = HEAP32[$$idx$i$i>>2]|0;
    $52 = ($51|0)==($$idx$val$i$i|0);
    if ($52) {
     __ZN40__LT_alloc__raw_vec__RawVec_LT_T_GT__GT_6double17hac6a54ac5941c853E($16);
     $$pre$i$i = HEAP32[$$idx$i26>>2]|0;
     $55 = $$pre$i$i;
    } else {
     $55 = $51;
    }
    $53 = HEAP32[$16>>2]|0;
    $54 = (($53) + (($55*24)|0)|0);
    HEAP32[$54>>2] = $21;
    $value$i$i$sroa$4$0$$sroa_idx170 = (((($53) + (($55*24)|0)|0)) + 4|0);
    HEAP32[$value$i$i$sroa$4$0$$sroa_idx170>>2] = $22;
    $value$i$i$sroa$5$0$$sroa_idx172 = (((($53) + (($55*24)|0)|0)) + 8|0);
    HEAPF32[$value$i$i$sroa$5$0$$sroa_idx172>>2] = $31;
    $value$i$i$sroa$6$0$$sroa_idx174 = (((($53) + (($55*24)|0)|0)) + 12|0);
    HEAPF32[$value$i$i$sroa$6$0$$sroa_idx174>>2] = $32;
    $value$i$i$sroa$7$0$$sroa_idx176 = (((($53) + (($55*24)|0)|0)) + 16|0);
    HEAPF32[$value$i$i$sroa$7$0$$sroa_idx176>>2] = $35;
    $value$i$i$sroa$8$0$$sroa_idx178 = (((($53) + (($55*24)|0)|0)) + 20|0);
    HEAPF32[$value$i$i$sroa$8$0$$sroa_idx178>>2] = $36;
    $56 = HEAP32[$$idx$i26>>2]|0;
    $57 = (($56) + 1)|0;
    HEAP32[$$idx$i26>>2] = $57;
    $58 = ($57>>>0)>(3);
    if ($58) {
     label = 12;
     break;
    }
    ;HEAP32[$old_proj$sroa$0>>2]=HEAP32[$proj>>2]|0;HEAP32[$old_proj$sroa$0+4>>2]=HEAP32[$proj+4>>2]|0;HEAP32[$old_proj$sroa$0+8>>2]=HEAP32[$proj+8>>2]|0;HEAP32[$old_proj$sroa$0+12>>2]=HEAP32[$proj+12>>2]|0;
    __ZN162__LT_ncollide_geometry__query__algorithms__johnson_simplex__JohnsonSimplex_LT_P_GT__u20_as_u20_ncollide_geometry__query__algorithms__simplex__Simplex_LT_P_GT__GT_25project_origin_and_reduce17hfe5256e2c63ddccbE($proj,$4);
    $$idx6$val = +HEAPF32[$$idx8>>2];
    $$idx7$val = +HEAPF32[$5>>2];
    $59 = $$idx6$val * $$idx6$val;
    $60 = $$idx7$val * $$idx7$val;
    $61 = $59 + $60;
    $62 = !($61 >= $max_bound$sroa$0$0$in187);
    if (!($62)) {
     label = 16;
     break;
    }
    if (!($3)) {
     $70 = $39 > 0.0;
     $71 = $61 <= $17;
     $or$cond = $70 & $71;
     if ($or$cond) {
      label = 23;
      break;
     }
    }
    $$idx$val$i27 = HEAP32[$$idx$i26>>2]|0;
    $68 = ($$idx$val$i27|0)!=(3);
    $69 = !($61 <= 1.1920928955078125E-5);
    $or$cond181 = $69 & $68;
    if ($or$cond181) {
     $_65$sroa$3$0$copyload$in = $$idx6$val;$_65$sroa$4$0$copyload$in = $$idx7$val;$max_bound$sroa$0$0$in187 = $61;
    } else {
     break L1;
    }
   }
   if ((label|0) == 6) {
    HEAP32[$0>>2] = 3;
    $46 = ((($0)) + 4|0);
    HEAPF32[$46>>2] = $_65$sroa$3$0$copyload$in;
    $47 = ((($0)) + 8|0);
    HEAPF32[$47>>2] = $_65$sroa$4$0$copyload$in;
    STACKTOP = sp;return;
   }
   else if ((label|0) == 8) {
    if ($3) {
     HEAP32[$0>>2] = 1;
     $63 = ((($0)) + 4|0);
     ;HEAP32[$63>>2]=HEAP32[$proj>>2]|0;HEAP32[$63+4>>2]=HEAP32[$proj+4>>2]|0;HEAP32[$63+8>>2]=HEAP32[$proj+8>>2]|0;HEAP32[$63+12>>2]=HEAP32[$proj+12>>2]|0;HEAP32[$63+16>>2]=HEAP32[$proj+16>>2]|0;HEAP32[$63+20>>2]=HEAP32[$proj+20>>2]|0;
     STACKTOP = sp;return;
    } else {
     HEAP32[$0>>2] = 2;
     $64 = ((($0)) + 4|0);
     HEAPF32[$64>>2] = $_65$sroa$3$0$copyload$in;
     $65 = ((($0)) + 8|0);
     HEAPF32[$65>>2] = $_65$sroa$4$0$copyload$in;
     STACKTOP = sp;return;
    }
   }
   else if ((label|0) == 12) {
    __ZN3std9panicking11begin_panic17h9936a195de5ffc4dE(10523,63,5544);
    // unreachable;
   }
   else if ((label|0) == 16) {
    if ($3) {
     $_101$sroa$0$0$$sroa_idx = ((($0)) + 4|0);
     ;HEAP32[$_101$sroa$0$0$$sroa_idx>>2]=HEAP32[$old_proj$sroa$0>>2]|0;HEAP32[$_101$sroa$0$0$$sroa_idx+4>>2]=HEAP32[$old_proj$sroa$0+4>>2]|0;HEAP32[$_101$sroa$0$0$$sroa_idx+8>>2]=HEAP32[$old_proj$sroa$0+8>>2]|0;HEAP32[$_101$sroa$0$0$$sroa_idx+12>>2]=HEAP32[$old_proj$sroa$0+12>>2]|0;
     $_101$sroa$4$0$$sroa_idx79 = ((($0)) + 20|0);
     HEAPF32[$_101$sroa$4$0$$sroa_idx79>>2] = $_65$sroa$3$0$copyload$in;
     $_101$sroa$5$0$$sroa_idx81 = ((($0)) + 24|0);
     HEAPF32[$_101$sroa$5$0$$sroa_idx81>>2] = $_65$sroa$4$0$copyload$in;
     $$sink = 1;
    } else {
     $66 = ((($0)) + 4|0);
     HEAPF32[$66>>2] = $_65$sroa$3$0$copyload$in;
     $67 = ((($0)) + 8|0);
     HEAPF32[$67>>2] = $_65$sroa$4$0$copyload$in;
     $$sink = 2;
    }
    HEAP32[$0>>2] = $$sink;
    STACKTOP = sp;return;
   }
   else if ((label|0) == 23) {
    HEAP32[$0>>2] = 2;
    $72 = ((($0)) + 4|0);
    HEAPF32[$72>>2] = $_65$sroa$3$0$copyload$in;
    $73 = ((($0)) + 8|0);
    HEAPF32[$73>>2] = $_65$sroa$4$0$copyload$in;
    STACKTOP = sp;return;
   }
  }
 } while(0);
 HEAP32[$0>>2] = 0;
 STACKTOP = sp;return;
}
function __ZN17ncollide_geometry5query12ray_internal3ray7RayCast12toi_with_ray17h2eacccfe4b1b96c0E($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$idx20$i = 0, $$idx20$val$i = 0.0, $$idx21$i = 0, $$idx21$val$i = 0.0, $$idx27$val$i = 0.0, $$idx28$i = 0, $$idx28$val$i = 0.0, $$sink$i = 0, $10 = 0.0, $11 = 0.0, $12 = 0.0, $13 = 0.0, $14 = 0.0, $15 = 0.0, $16 = 0.0, $17 = 0.0, $18 = 0.0, $19 = 0.0, $20 = 0.0, $21 = 0.0;
 var $22 = 0.0, $23 = 0.0, $24 = 0, $25 = 0.0, $26 = 0.0, $27 = 0.0, $28 = 0.0, $29 = 0.0, $30 = 0.0, $31 = 0.0, $32 = 0.0, $33 = 0.0, $34 = 0.0, $35 = 0, $36 = 0, $37 = 0, $5 = 0, $6 = 0.0, $7 = 0.0, $8 = 0;
 var $9 = 0, $_6$sroa$0$0$copyload$i$i$i$i = 0.0, $_6$sroa$4$0$$sroa_idx2$i$i$i$i = 0, $_6$sroa$4$0$copyload$i$i$i$i = 0.0, $_6$sroa$5$0$$sroa_idx4$i$i$i$i = 0, $_6$sroa$5$0$copyload$i$i$i$i = 0.0, $_6$sroa$6$0$$sroa_idx6$i$i$i$i = 0, $_6$sroa$6$0$copyload$i$i$i$i = 0.0, $_9$sroa$6$0$ph = 0, $or$cond$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $5 = ((($3)) + 4|0);
 $6 = +HEAPF32[$3>>2];
 $7 = +HEAPF32[$5>>2];
 $8 = ((($2)) + 16|0);
 $9 = ((($2)) + 20|0);
 $10 = +HEAPF32[$8>>2];
 $11 = +HEAPF32[$9>>2];
 $12 = $6 - $10;
 $13 = $7 - $11;
 $_6$sroa$0$0$copyload$i$i$i$i = +HEAPF32[$2>>2];
 $_6$sroa$4$0$$sroa_idx2$i$i$i$i = ((($2)) + 4|0);
 $_6$sroa$4$0$copyload$i$i$i$i = +HEAPF32[$_6$sroa$4$0$$sroa_idx2$i$i$i$i>>2];
 $_6$sroa$5$0$$sroa_idx4$i$i$i$i = ((($2)) + 8|0);
 $_6$sroa$5$0$copyload$i$i$i$i = +HEAPF32[$_6$sroa$5$0$$sroa_idx4$i$i$i$i>>2];
 $_6$sroa$6$0$$sroa_idx6$i$i$i$i = ((($2)) + 12|0);
 $_6$sroa$6$0$copyload$i$i$i$i = +HEAPF32[$_6$sroa$6$0$$sroa_idx6$i$i$i$i>>2];
 $14 = $12 * $_6$sroa$0$0$copyload$i$i$i$i;
 $15 = $13 * $_6$sroa$4$0$copyload$i$i$i$i;
 $16 = $14 + $15;
 $17 = $12 * $_6$sroa$5$0$copyload$i$i$i$i;
 $18 = $13 * $_6$sroa$6$0$copyload$i$i$i$i;
 $19 = $17 + $18;
 $$idx20$i = ((($3)) + 8|0);
 $$idx20$val$i = +HEAPF32[$$idx20$i>>2];
 $$idx21$i = ((($3)) + 12|0);
 $$idx21$val$i = +HEAPF32[$$idx21$i>>2];
 $$idx27$val$i = +HEAPF32[$1>>2];
 $$idx28$i = ((($1)) + 4|0);
 $$idx28$val$i = +HEAPF32[$$idx28$i>>2];
 $20 = $16 * $$idx27$val$i;
 $21 = $19 * $$idx28$val$i;
 $22 = -$21;
 $23 = $22 - $20;
 $24 = $23 > 0.0;
 $or$cond$i = $24 & $4;
 do {
  if ($or$cond$i) {
   $_9$sroa$6$0$ph = 0;
  } else {
   $25 = $_6$sroa$5$0$copyload$i$i$i$i * $$idx20$val$i;
   $26 = $_6$sroa$6$0$copyload$i$i$i$i * $$idx21$val$i;
   $27 = $25 + $26;
   $28 = $_6$sroa$0$0$copyload$i$i$i$i * $$idx20$val$i;
   $29 = $_6$sroa$4$0$copyload$i$i$i$i * $$idx21$val$i;
   $30 = $28 + $29;
   $31 = $$idx27$val$i * $30;
   $32 = $27 * $$idx28$val$i;
   $33 = $31 + $32;
   $34 = $23 / $33;
   $35 = !($34 >= 0.0);
   if ($35) {
    $$sink$i = 0;
    HEAP32[$0>>2] = $$sink$i;
    return;
   } else {
    $36 = (HEAPF32[tempDoublePtr>>2]=$34,HEAP32[tempDoublePtr>>2]|0);
    $_9$sroa$6$0$ph = $36;
    break;
   }
  }
 } while(0);
 $37 = ((($0)) + 4|0);
 HEAP32[$37>>2] = $_9$sroa$6$0$ph;
 $$sink$i = 1;
 HEAP32[$0>>2] = $$sink$i;
 return;
}
function __ZN17ncollide_geometry5query12ray_internal3ray7RayCast14intersects_ray17hb73b37cba00364dfE($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$idx$val$i = 0.0, $$idx24$i$i = 0, $$idx24$val$i$i = 0.0, $$idx25$i$i = 0, $$idx25$val$i$i = 0.0, $10 = 0.0, $11 = 0.0, $12 = 0.0, $13 = 0.0, $14 = 0.0, $15 = 0.0, $16 = 0.0, $17 = 0.0, $18 = 0.0, $19 = 0.0, $20 = 0.0, $21 = 0.0, $22 = 0, $23 = 0, $24 = 0.0;
 var $25 = 0.0, $26 = 0.0, $27 = 0.0, $28 = 0.0, $29 = 0.0, $3 = 0, $30 = 0, $4 = 0, $5 = 0.0, $6 = 0.0, $7 = 0.0, $8 = 0.0, $9 = 0, $_10$sroa$710$0$i = 0, $or$cond$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($1)) + 16|0);
 $4 = ((($1)) + 20|0);
 $5 = +HEAPF32[$3>>2];
 $6 = +HEAPF32[$4>>2];
 $7 = $5 + 0.0;
 $8 = $6 + 0.0;
 $$idx$val$i = +HEAPF32[$0>>2];
 $9 = ((($2)) + 4|0);
 $10 = +HEAPF32[$2>>2];
 $11 = +HEAPF32[$9>>2];
 $12 = $10 - $7;
 $13 = $11 - $8;
 $$idx24$i$i = ((($2)) + 8|0);
 $$idx24$val$i$i = +HEAPF32[$$idx24$i$i>>2];
 $$idx25$i$i = ((($2)) + 12|0);
 $$idx25$val$i$i = +HEAPF32[$$idx25$i$i>>2];
 $14 = $12 * $$idx24$val$i$i;
 $15 = $13 * $$idx25$val$i$i;
 $16 = $14 + $15;
 $17 = $12 * $12;
 $18 = $13 * $13;
 $19 = $17 + $18;
 $20 = $$idx$val$i * $$idx$val$i;
 $21 = $19 - $20;
 $22 = $21 > 0.0;
 $23 = $16 > 0.0;
 $or$cond$i$i = $22 & $23;
 if ($or$cond$i$i) {
  $_10$sroa$710$0$i = 0;
  return ($_10$sroa$710$0$i|0);
 }
 $24 = $$idx24$val$i$i * $$idx24$val$i$i;
 $25 = $$idx25$val$i$i * $$idx25$val$i$i;
 $26 = $24 + $25;
 $27 = $16 * $16;
 $28 = $26 * $21;
 $29 = $27 - $28;
 $30 = $29 < 0.0;
 if ($30) {
  $_10$sroa$710$0$i = 0;
  return ($_10$sroa$710$0$i|0);
 }
 $_10$sroa$710$0$i = 1;
 return ($_10$sroa$710$0$i|0);
}
function __ZN17ncollide_geometry5query12ray_internal3ray7RayCast14intersects_ray17he933b0940781c252E($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$idx20$i$i = 0, $$idx20$val$i$i = 0.0, $$idx21$i$i = 0, $$idx21$val$i$i = 0.0, $$idx27$val$i$i = 0.0, $$idx28$i$i = 0, $$idx28$val$i$i = 0.0, $$sink$i$i = 0, $10 = 0.0, $11 = 0.0, $12 = 0.0, $13 = 0.0, $14 = 0.0, $15 = 0.0, $16 = 0.0, $17 = 0.0, $18 = 0.0, $19 = 0.0, $20 = 0.0, $21 = 0.0;
 var $22 = 0, $23 = 0.0, $24 = 0.0, $25 = 0.0, $26 = 0.0, $27 = 0.0, $28 = 0.0, $29 = 0.0, $3 = 0, $30 = 0.0, $31 = 0.0, $32 = 0.0, $33 = 0, $4 = 0.0, $5 = 0.0, $6 = 0, $7 = 0, $8 = 0.0, $9 = 0.0, $_6$sroa$0$0$copyload$i$i$i$i$i = 0.0;
 var $_6$sroa$4$0$$sroa_idx2$i$i$i$i$i = 0, $_6$sroa$4$0$copyload$i$i$i$i$i = 0.0, $_6$sroa$5$0$$sroa_idx4$i$i$i$i$i = 0, $_6$sroa$5$0$copyload$i$i$i$i$i = 0.0, $_6$sroa$6$0$$sroa_idx6$i$i$i$i$i = 0, $_6$sroa$6$0$copyload$i$i$i$i$i = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($2)) + 4|0);
 $4 = +HEAPF32[$2>>2];
 $5 = +HEAPF32[$3>>2];
 $6 = ((($1)) + 16|0);
 $7 = ((($1)) + 20|0);
 $8 = +HEAPF32[$6>>2];
 $9 = +HEAPF32[$7>>2];
 $10 = $4 - $8;
 $11 = $5 - $9;
 $_6$sroa$0$0$copyload$i$i$i$i$i = +HEAPF32[$1>>2];
 $_6$sroa$4$0$$sroa_idx2$i$i$i$i$i = ((($1)) + 4|0);
 $_6$sroa$4$0$copyload$i$i$i$i$i = +HEAPF32[$_6$sroa$4$0$$sroa_idx2$i$i$i$i$i>>2];
 $_6$sroa$5$0$$sroa_idx4$i$i$i$i$i = ((($1)) + 8|0);
 $_6$sroa$5$0$copyload$i$i$i$i$i = +HEAPF32[$_6$sroa$5$0$$sroa_idx4$i$i$i$i$i>>2];
 $_6$sroa$6$0$$sroa_idx6$i$i$i$i$i = ((($1)) + 12|0);
 $_6$sroa$6$0$copyload$i$i$i$i$i = +HEAPF32[$_6$sroa$6$0$$sroa_idx6$i$i$i$i$i>>2];
 $12 = $10 * $_6$sroa$0$0$copyload$i$i$i$i$i;
 $13 = $11 * $_6$sroa$4$0$copyload$i$i$i$i$i;
 $14 = $12 + $13;
 $15 = $10 * $_6$sroa$5$0$copyload$i$i$i$i$i;
 $16 = $11 * $_6$sroa$6$0$copyload$i$i$i$i$i;
 $17 = $15 + $16;
 $$idx20$i$i = ((($2)) + 8|0);
 $$idx20$val$i$i = +HEAPF32[$$idx20$i$i>>2];
 $$idx21$i$i = ((($2)) + 12|0);
 $$idx21$val$i$i = +HEAPF32[$$idx21$i$i>>2];
 $$idx27$val$i$i = +HEAPF32[$0>>2];
 $$idx28$i$i = ((($0)) + 4|0);
 $$idx28$val$i$i = +HEAPF32[$$idx28$i$i>>2];
 $18 = $14 * $$idx27$val$i$i;
 $19 = $17 * $$idx28$val$i$i;
 $20 = -$19;
 $21 = $20 - $18;
 $22 = $21 > 0.0;
 if (!($22)) {
  $23 = $_6$sroa$5$0$copyload$i$i$i$i$i * $$idx20$val$i$i;
  $24 = $_6$sroa$6$0$copyload$i$i$i$i$i * $$idx21$val$i$i;
  $25 = $23 + $24;
  $26 = $_6$sroa$0$0$copyload$i$i$i$i$i * $$idx20$val$i$i;
  $27 = $_6$sroa$4$0$copyload$i$i$i$i$i * $$idx21$val$i$i;
  $28 = $26 + $27;
  $29 = $$idx27$val$i$i * $28;
  $30 = $25 * $$idx28$val$i$i;
  $31 = $29 + $30;
  $32 = $21 / $31;
  $33 = !($32 >= 0.0);
  if ($33) {
   $$sink$i$i = 0;
   return ($$sink$i$i|0);
  }
 }
 $$sink$i$i = 1;
 return ($$sink$i$i|0);
}
function __ZN17ncollide_geometry5query12ray_internal3ray7RayCast30toi_and_normal_and_uv_with_ray17h510c5df06c199a79E($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$idx20$i = 0, $$idx20$val$i = 0.0, $$idx21$i = 0, $$idx21$val$i = 0.0, $$idx27$val$i = 0.0, $$idx28$i = 0, $$idx28$val$i = 0.0, $10 = 0.0, $11 = 0.0, $12 = 0.0, $13 = 0.0, $14 = 0.0, $15 = 0.0, $16 = 0.0, $17 = 0.0, $18 = 0.0, $19 = 0.0, $20 = 0.0, $21 = 0.0, $22 = 0.0;
 var $23 = 0.0, $24 = 0, $25 = 0.0, $26 = 0.0, $27 = 0.0, $28 = 0.0, $29 = 0.0, $30 = 0.0, $31 = 0.0, $32 = 0.0, $33 = 0.0, $34 = 0.0, $35 = 0, $36 = 0.0, $37 = 0.0, $38 = 0.0, $39 = 0.0, $40 = 0.0, $41 = 0.0, $42 = 0.0;
 var $43 = 0.0, $5 = 0, $6 = 0.0, $7 = 0.0, $8 = 0, $9 = 0, $_36$sroa$0$0$$sroa_idx$i = 0, $_6$sroa$0$0$copyload$i$i$i$i = 0.0, $_6$sroa$4$0$$sroa_idx2$i$i$i$i = 0, $_6$sroa$4$0$copyload$i$i$i$i = 0.0, $_6$sroa$5$0$$sroa_idx4$i$i$i$i = 0, $_6$sroa$5$0$copyload$i$i$i$i = 0.0, $_6$sroa$6$0$$sroa_idx6$i$i$i$i = 0, $_6$sroa$6$0$copyload$i$i$i$i = 0.0, $_62$sroa$0$0$$sroa_idx$i = 0, $_62$sroa$4$0$$sroa_idx36$i = 0, $_62$sroa$5$0$$sroa_idx38$i = 0, $_62$sroa$6$0$$sroa_idx40$i = 0, $n$sroa$0$0$i = 0.0, $n$sroa$5$0$i = 0.0;
 var $or$cond$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $5 = ((($3)) + 4|0);
 $6 = +HEAPF32[$3>>2];
 $7 = +HEAPF32[$5>>2];
 $8 = ((($2)) + 16|0);
 $9 = ((($2)) + 20|0);
 $10 = +HEAPF32[$8>>2];
 $11 = +HEAPF32[$9>>2];
 $12 = $6 - $10;
 $13 = $7 - $11;
 $_6$sroa$0$0$copyload$i$i$i$i = +HEAPF32[$2>>2];
 $_6$sroa$4$0$$sroa_idx2$i$i$i$i = ((($2)) + 4|0);
 $_6$sroa$4$0$copyload$i$i$i$i = +HEAPF32[$_6$sroa$4$0$$sroa_idx2$i$i$i$i>>2];
 $_6$sroa$5$0$$sroa_idx4$i$i$i$i = ((($2)) + 8|0);
 $_6$sroa$5$0$copyload$i$i$i$i = +HEAPF32[$_6$sroa$5$0$$sroa_idx4$i$i$i$i>>2];
 $_6$sroa$6$0$$sroa_idx6$i$i$i$i = ((($2)) + 12|0);
 $_6$sroa$6$0$copyload$i$i$i$i = +HEAPF32[$_6$sroa$6$0$$sroa_idx6$i$i$i$i>>2];
 $14 = $12 * $_6$sroa$0$0$copyload$i$i$i$i;
 $15 = $13 * $_6$sroa$4$0$copyload$i$i$i$i;
 $16 = $14 + $15;
 $17 = $12 * $_6$sroa$5$0$copyload$i$i$i$i;
 $18 = $13 * $_6$sroa$6$0$copyload$i$i$i$i;
 $19 = $17 + $18;
 $$idx20$i = ((($3)) + 8|0);
 $$idx20$val$i = +HEAPF32[$$idx20$i>>2];
 $$idx21$i = ((($3)) + 12|0);
 $$idx21$val$i = +HEAPF32[$$idx21$i>>2];
 $$idx27$val$i = +HEAPF32[$1>>2];
 $$idx28$i = ((($1)) + 4|0);
 $$idx28$val$i = +HEAPF32[$$idx28$i>>2];
 $20 = $16 * $$idx27$val$i;
 $21 = $19 * $$idx28$val$i;
 $22 = -$21;
 $23 = $22 - $20;
 $24 = $23 > 0.0;
 $or$cond$i = $24 & $4;
 if ($or$cond$i) {
  HEAP32[$0>>2] = 1;
  $_36$sroa$0$0$$sroa_idx$i = ((($0)) + 4|0);
  ;HEAP32[$_36$sroa$0$0$$sroa_idx$i>>2]=0|0;HEAP32[$_36$sroa$0$0$$sroa_idx$i+4>>2]=0|0;HEAP32[$_36$sroa$0$0$$sroa_idx$i+8>>2]=0|0;HEAP32[$_36$sroa$0$0$$sroa_idx$i+12>>2]=0|0;
  return;
 }
 $25 = $_6$sroa$5$0$copyload$i$i$i$i * $$idx20$val$i;
 $26 = $_6$sroa$6$0$copyload$i$i$i$i * $$idx21$val$i;
 $27 = $25 + $26;
 $28 = $_6$sroa$0$0$copyload$i$i$i$i * $$idx20$val$i;
 $29 = $_6$sroa$4$0$copyload$i$i$i$i * $$idx21$val$i;
 $30 = $28 + $29;
 $31 = $$idx27$val$i * $30;
 $32 = $27 * $$idx28$val$i;
 $33 = $31 + $32;
 $34 = $23 / $33;
 $35 = !($34 >= 0.0);
 if ($35) {
  HEAP32[$0>>2] = 0;
  return;
 } else {
  $36 = -$$idx27$val$i;
  $37 = -$$idx28$val$i;
  $n$sroa$0$0$i = $24 ? $36 : $$idx27$val$i;
  $n$sroa$5$0$i = $24 ? $37 : $$idx28$val$i;
  $38 = $_6$sroa$0$0$copyload$i$i$i$i * $n$sroa$0$0$i;
  $39 = $_6$sroa$5$0$copyload$i$i$i$i * $n$sroa$5$0$i;
  $40 = $38 + $39;
  $41 = $_6$sroa$4$0$copyload$i$i$i$i * $n$sroa$0$0$i;
  $42 = $_6$sroa$6$0$copyload$i$i$i$i * $n$sroa$5$0$i;
  $43 = $41 + $42;
  HEAP32[$0>>2] = 1;
  $_62$sroa$0$0$$sroa_idx$i = ((($0)) + 4|0);
  HEAPF32[$_62$sroa$0$0$$sroa_idx$i>>2] = $34;
  $_62$sroa$4$0$$sroa_idx36$i = ((($0)) + 8|0);
  HEAPF32[$_62$sroa$4$0$$sroa_idx36$i>>2] = $40;
  $_62$sroa$5$0$$sroa_idx38$i = ((($0)) + 12|0);
  HEAPF32[$_62$sroa$5$0$$sroa_idx38$i>>2] = $43;
  $_62$sroa$6$0$$sroa_idx40$i = ((($0)) + 16|0);
  HEAP32[$_62$sroa$6$0$$sroa_idx40$i>>2] = 0;
  return;
 }
}
function __ZN17ncollide_geometry5query12ray_internal8ray_ball241__LT_impl_u20_ncollide_geometry__query__ray_internal__ray__RayCast_LT_P_C__u20_M_GT__u20_for_u20_ncollide_geometry__shape__ball__Ball_LT__LT__LT_P_u20_as_u20_ncollide_math__Point_GT___Vect_u20_as_u20_ncollide_math__Vector_GT___Scalar_GT__GT_12toi_with_ray17h21b67f4f785800b8E($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$idx$val = 0.0, $$idx24$i = 0, $$idx24$val$i = 0.0, $$idx25$i = 0, $$idx25$val$i = 0.0, $$sroa_idx8 = 0, $10 = 0.0, $11 = 0, $12 = 0.0, $13 = 0.0, $14 = 0.0, $15 = 0.0, $16 = 0.0, $17 = 0.0, $18 = 0.0, $19 = 0.0, $20 = 0.0, $21 = 0.0, $22 = 0.0, $23 = 0.0;
 var $24 = 0.0, $25 = 0.0, $26 = 0.0, $27 = 0, $28 = 0, $29 = 0.0, $30 = 0.0, $31 = 0.0, $32 = 0, $33 = 0.0, $34 = 0.0, $35 = 0.0, $36 = 0.0, $37 = 0, $38 = 0, $39 = 0.0, $40 = 0.0, $41 = 0, $5 = 0, $6 = 0;
 var $7 = 0.0, $8 = 0.0, $9 = 0.0, $_10$sroa$13$0 = 0, $_10$sroa$710$0 = 0, $or$cond$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $5 = ((($2)) + 16|0);
 $6 = ((($2)) + 20|0);
 $7 = +HEAPF32[$5>>2];
 $8 = +HEAPF32[$6>>2];
 $9 = $7 + 0.0;
 $10 = $8 + 0.0;
 $$idx$val = +HEAPF32[$1>>2];
 $11 = ((($3)) + 4|0);
 $12 = +HEAPF32[$3>>2];
 $13 = +HEAPF32[$11>>2];
 $14 = $12 - $9;
 $15 = $13 - $10;
 $$idx24$i = ((($3)) + 8|0);
 $$idx24$val$i = +HEAPF32[$$idx24$i>>2];
 $$idx25$i = ((($3)) + 12|0);
 $$idx25$val$i = +HEAPF32[$$idx25$i>>2];
 $16 = $$idx24$val$i * $$idx24$val$i;
 $17 = $$idx25$val$i * $$idx25$val$i;
 $18 = $16 + $17;
 $19 = $14 * $$idx24$val$i;
 $20 = $15 * $$idx25$val$i;
 $21 = $19 + $20;
 $22 = $14 * $14;
 $23 = $15 * $15;
 $24 = $22 + $23;
 $25 = $$idx$val * $$idx$val;
 $26 = $24 - $25;
 $27 = $26 > 0.0;
 $28 = $21 > 0.0;
 $or$cond$i = $27 & $28;
 do {
  if ($or$cond$i) {
   $_10$sroa$13$0 = 0;$_10$sroa$710$0 = 0;
  } else {
   $29 = $21 * $21;
   $30 = $18 * $26;
   $31 = $29 - $30;
   $32 = $31 < 0.0;
   if ($32) {
    $_10$sroa$13$0 = 0;$_10$sroa$710$0 = 0;
   } else {
    $33 = -$21;
    $34 = (+Math_sqrt((+$31)));
    $35 = $33 - $34;
    $36 = $35 / $18;
    $37 = !($36 <= 0.0);
    if ($37) {
     $38 = (HEAPF32[tempDoublePtr>>2]=$36,HEAP32[tempDoublePtr>>2]|0);
     $_10$sroa$13$0 = $38;$_10$sroa$710$0 = 1;
     break;
    }
    if ($4) {
     $_10$sroa$13$0 = 0;$_10$sroa$710$0 = 1;
    } else {
     $39 = $34 - $21;
     $40 = $39 / $18;
     $41 = (HEAPF32[tempDoublePtr>>2]=$40,HEAP32[tempDoublePtr>>2]|0);
     $_10$sroa$13$0 = $41;$_10$sroa$710$0 = 1;
    }
   }
  }
 } while(0);
 HEAP32[$0>>2] = $_10$sroa$710$0;
 $$sroa_idx8 = ((($0)) + 4|0);
 HEAP32[$$sroa_idx8>>2] = $_10$sroa$13$0;
 return;
}
function __ZN17ncollide_geometry5query12ray_internal8ray_ball241__LT_impl_u20_ncollide_geometry__query__ray_internal__ray__RayCast_LT_P_C__u20_M_GT__u20_for_u20_ncollide_geometry__shape__ball__Ball_LT__LT__LT_P_u20_as_u20_ncollide_math__Point_GT___Vect_u20_as_u20_ncollide_math__Vector_GT___Scalar_GT__GT_23toi_and_normal_with_ray17h5c16f213fc7b28d5E($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$idx$val = 0.0, $$idx24$i = 0, $$idx24$val$i = 0.0, $$idx25$i = 0, $$idx25$val$i = 0.0, $$sink$i = 0, $10 = 0.0, $11 = 0, $12 = 0.0, $13 = 0.0, $14 = 0.0, $15 = 0.0, $16 = 0.0, $17 = 0.0, $18 = 0.0, $19 = 0.0, $20 = 0.0, $21 = 0.0, $22 = 0.0, $23 = 0.0;
 var $24 = 0.0, $25 = 0.0, $26 = 0.0, $27 = 0, $28 = 0, $29 = 0.0, $30 = 0.0, $31 = 0.0, $32 = 0, $33 = 0.0, $34 = 0.0, $35 = 0.0, $36 = 0.0, $37 = 0, $38 = 0, $39 = 0.0, $40 = 0.0, $41 = 0, $42 = 0.0, $43 = 0.0;
 var $44 = 0.0, $45 = 0.0, $46 = 0.0, $47 = 0.0, $48 = 0.0, $49 = 0.0, $5 = 0, $50 = 0.0, $51 = 0.0, $52 = 0.0, $53 = 0.0, $54 = 0.0, $55 = 0.0, $56 = 0.0, $57 = 0, $6 = 0, $7 = 0.0, $8 = 0.0, $9 = 0.0, $_15$sroa$0$0$in$i$i = 0.0;
 var $_15$sroa$5$0$in$i$i = 0.0, $_16$sroa$0$0$ph = 0, $_16$sroa$14$0$ph = 0, $_7$sroa$4$0$$sroa_idx27$i = 0, $_7$sroa$5$0$$sroa_idx30$i = 0, $_7$sroa$6$0$$sroa_idx33$i = 0, $or$cond$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $5 = ((($2)) + 16|0);
 $6 = ((($2)) + 20|0);
 $7 = +HEAPF32[$5>>2];
 $8 = +HEAPF32[$6>>2];
 $9 = $7 + 0.0;
 $10 = $8 + 0.0;
 $$idx$val = +HEAPF32[$1>>2];
 $11 = ((($3)) + 4|0);
 $12 = +HEAPF32[$3>>2];
 $13 = +HEAPF32[$11>>2];
 $14 = $12 - $9;
 $15 = $13 - $10;
 $$idx24$i = ((($3)) + 8|0);
 $$idx24$val$i = +HEAPF32[$$idx24$i>>2];
 $$idx25$i = ((($3)) + 12|0);
 $$idx25$val$i = +HEAPF32[$$idx25$i>>2];
 $16 = $$idx24$val$i * $$idx24$val$i;
 $17 = $$idx25$val$i * $$idx25$val$i;
 $18 = $16 + $17;
 $19 = $14 * $$idx24$val$i;
 $20 = $15 * $$idx25$val$i;
 $21 = $19 + $20;
 $22 = $14 * $14;
 $23 = $15 * $15;
 $24 = $22 + $23;
 $25 = $$idx$val * $$idx$val;
 $26 = $24 - $25;
 $27 = $26 > 0.0;
 $28 = $21 > 0.0;
 $or$cond$i = $27 & $28;
 if ($or$cond$i) {
  $$sink$i = 0;
  HEAP32[$0>>2] = $$sink$i;
  return;
 }
 $29 = $21 * $21;
 $30 = $18 * $26;
 $31 = $29 - $30;
 $32 = $31 < 0.0;
 if ($32) {
  $$sink$i = 0;
  HEAP32[$0>>2] = $$sink$i;
  return;
 }
 $33 = -$21;
 $34 = (+Math_sqrt((+$31)));
 $35 = $33 - $34;
 $36 = $35 / $18;
 $37 = !($36 <= 0.0);
 if ($37) {
  $38 = (HEAPF32[tempDoublePtr>>2]=$36,HEAP32[tempDoublePtr>>2]|0);
  $_16$sroa$0$0$ph = 1;$_16$sroa$14$0$ph = $38;
 } else {
  if ($4) {
   $_16$sroa$0$0$ph = 0;$_16$sroa$14$0$ph = 0;
  } else {
   $39 = $34 - $21;
   $40 = $39 / $18;
   $41 = (HEAPF32[tempDoublePtr>>2]=$40,HEAP32[tempDoublePtr>>2]|0);
   $_16$sroa$0$0$ph = 0;$_16$sroa$14$0$ph = $41;
  }
 }
 $42 = (HEAP32[tempDoublePtr>>2]=$_16$sroa$14$0$ph,+HEAPF32[tempDoublePtr>>2]);
 $43 = $42 * $$idx24$val$i;
 $44 = $42 * $$idx25$val$i;
 $45 = $12 + $43;
 $46 = $13 + $44;
 $47 = $45 - $9;
 $48 = $46 - $10;
 $49 = $47 * $47;
 $50 = $48 * $48;
 $51 = $49 + $50;
 $52 = (+Math_sqrt((+$51)));
 $53 = $47 / $52;
 $54 = $48 / $52;
 $55 = -$53;
 $56 = -$54;
 $_15$sroa$0$0$in$i$i = $_16$sroa$0$0$ph ? $53 : $55;
 $_15$sroa$5$0$in$i$i = $_16$sroa$0$0$ph ? $54 : $56;
 $57 = ((($0)) + 4|0);
 HEAP32[$57>>2] = $_16$sroa$14$0$ph;
 $_7$sroa$4$0$$sroa_idx27$i = ((($0)) + 8|0);
 HEAPF32[$_7$sroa$4$0$$sroa_idx27$i>>2] = $_15$sroa$0$0$in$i$i;
 $_7$sroa$5$0$$sroa_idx30$i = ((($0)) + 12|0);
 HEAPF32[$_7$sroa$5$0$$sroa_idx30$i>>2] = $_15$sroa$5$0$in$i$i;
 $_7$sroa$6$0$$sroa_idx33$i = ((($0)) + 16|0);
 HEAP32[$_7$sroa$6$0$$sroa_idx33$i>>2] = 0;
 $$sink$i = 1;
 HEAP32[$0>>2] = $$sink$i;
 return;
}
function __ZN17ncollide_geometry5query12ray_internal8ray_ball241__LT_impl_u20_ncollide_geometry__query__ray_internal__ray__RayCast_LT_P_C__u20_M_GT__u20_for_u20_ncollide_geometry__shape__ball__Ball_LT__LT__LT_P_u20_as_u20_ncollide_math__Point_GT___Vect_u20_as_u20_ncollide_math__Vector_GT___Scalar_GT__GT_30toi_and_normal_and_uv_with_ray17hb5aaf52f0ceb1eeeE($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$idx$val = 0.0, $$idx24$i = 0, $$idx24$val$i = 0.0, $$idx25$i = 0, $$idx25$val$i = 0.0, $$sink$i = 0, $10 = 0.0, $11 = 0, $12 = 0.0, $13 = 0.0, $14 = 0.0, $15 = 0.0, $16 = 0.0, $17 = 0.0, $18 = 0.0, $19 = 0.0, $20 = 0.0, $21 = 0.0, $22 = 0.0, $23 = 0.0;
 var $24 = 0.0, $25 = 0.0, $26 = 0.0, $27 = 0, $28 = 0, $29 = 0.0, $30 = 0.0, $31 = 0.0, $32 = 0, $33 = 0.0, $34 = 0.0, $35 = 0.0, $36 = 0.0, $37 = 0, $38 = 0, $39 = 0.0, $40 = 0.0, $41 = 0, $42 = 0.0, $43 = 0.0;
 var $44 = 0.0, $45 = 0.0, $46 = 0.0, $47 = 0.0, $48 = 0.0, $49 = 0.0, $5 = 0, $50 = 0.0, $51 = 0.0, $52 = 0.0, $53 = 0.0, $54 = 0.0, $55 = 0.0, $56 = 0.0, $57 = 0, $6 = 0, $7 = 0.0, $8 = 0.0, $9 = 0.0, $_16$sroa$0$0$ph = 0;
 var $_16$sroa$14$0$ph = 0, $_18$sroa$0$0$in$i$i = 0.0, $_18$sroa$5$0$in$i$i = 0.0, $_7$sroa$4$0$$sroa_idx27$i = 0, $_7$sroa$5$0$$sroa_idx30$i = 0, $_7$sroa$6$0$$sroa_idx33$i = 0, $or$cond$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $5 = ((($2)) + 16|0);
 $6 = ((($2)) + 20|0);
 $7 = +HEAPF32[$5>>2];
 $8 = +HEAPF32[$6>>2];
 $9 = $7 + 0.0;
 $10 = $8 + 0.0;
 $$idx$val = +HEAPF32[$1>>2];
 $11 = ((($3)) + 4|0);
 $12 = +HEAPF32[$3>>2];
 $13 = +HEAPF32[$11>>2];
 $14 = $12 - $9;
 $15 = $13 - $10;
 $$idx24$i = ((($3)) + 8|0);
 $$idx24$val$i = +HEAPF32[$$idx24$i>>2];
 $$idx25$i = ((($3)) + 12|0);
 $$idx25$val$i = +HEAPF32[$$idx25$i>>2];
 $16 = $$idx24$val$i * $$idx24$val$i;
 $17 = $$idx25$val$i * $$idx25$val$i;
 $18 = $16 + $17;
 $19 = $14 * $$idx24$val$i;
 $20 = $15 * $$idx25$val$i;
 $21 = $19 + $20;
 $22 = $14 * $14;
 $23 = $15 * $15;
 $24 = $22 + $23;
 $25 = $$idx$val * $$idx$val;
 $26 = $24 - $25;
 $27 = $26 > 0.0;
 $28 = $21 > 0.0;
 $or$cond$i = $27 & $28;
 if ($or$cond$i) {
  $$sink$i = 0;
  HEAP32[$0>>2] = $$sink$i;
  return;
 }
 $29 = $21 * $21;
 $30 = $18 * $26;
 $31 = $29 - $30;
 $32 = $31 < 0.0;
 if ($32) {
  $$sink$i = 0;
  HEAP32[$0>>2] = $$sink$i;
  return;
 }
 $33 = -$21;
 $34 = (+Math_sqrt((+$31)));
 $35 = $33 - $34;
 $36 = $35 / $18;
 $37 = !($36 <= 0.0);
 if ($37) {
  $38 = (HEAPF32[tempDoublePtr>>2]=$36,HEAP32[tempDoublePtr>>2]|0);
  $_16$sroa$0$0$ph = 1;$_16$sroa$14$0$ph = $38;
 } else {
  if ($4) {
   $_16$sroa$0$0$ph = 0;$_16$sroa$14$0$ph = 0;
  } else {
   $39 = $34 - $21;
   $40 = $39 / $18;
   $41 = (HEAPF32[tempDoublePtr>>2]=$40,HEAP32[tempDoublePtr>>2]|0);
   $_16$sroa$0$0$ph = 0;$_16$sroa$14$0$ph = $41;
  }
 }
 $42 = (HEAP32[tempDoublePtr>>2]=$_16$sroa$14$0$ph,+HEAPF32[tempDoublePtr>>2]);
 $43 = $42 * $$idx24$val$i;
 $44 = $42 * $$idx25$val$i;
 $45 = $12 + $43;
 $46 = $13 + $44;
 $47 = $45 - $9;
 $48 = $46 - $10;
 $49 = $47 * $47;
 $50 = $48 * $48;
 $51 = $49 + $50;
 $52 = (+Math_sqrt((+$51)));
 $53 = $47 / $52;
 $54 = $48 / $52;
 $55 = -$53;
 $56 = -$54;
 $_18$sroa$0$0$in$i$i = $_16$sroa$0$0$ph ? $53 : $55;
 $_18$sroa$5$0$in$i$i = $_16$sroa$0$0$ph ? $54 : $56;
 $57 = ((($0)) + 4|0);
 HEAP32[$57>>2] = $_16$sroa$14$0$ph;
 $_7$sroa$4$0$$sroa_idx27$i = ((($0)) + 8|0);
 HEAPF32[$_7$sroa$4$0$$sroa_idx27$i>>2] = $_18$sroa$0$0$in$i$i;
 $_7$sroa$5$0$$sroa_idx30$i = ((($0)) + 12|0);
 HEAPF32[$_7$sroa$5$0$$sroa_idx30$i>>2] = $_18$sroa$5$0$in$i$i;
 $_7$sroa$6$0$$sroa_idx33$i = ((($0)) + 16|0);
 HEAP32[$_7$sroa$6$0$$sroa_idx33$i>>2] = 0;
 $$sink$i = 1;
 HEAP32[$0>>2] = $$sink$i;
 return;
}
function __ZN17ncollide_geometry5query12ray_internal9ray_plane194__LT_impl_u20_ncollide_geometry__query__ray_internal__ray__RayCast_LT_P_C__u20_M_GT__u20_for_u20_ncollide_geometry__shape__plane__Plane_LT__LT_P_u20_as_u20_ncollide_math__Point_GT___Vect_GT__GT_23toi_and_normal_with_ray17h7ca785cc829c099fE($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$idx20 = 0, $$idx20$val = 0.0, $$idx21 = 0, $$idx21$val = 0.0, $$idx27$val = 0.0, $$idx28 = 0, $$idx28$val = 0.0, $10 = 0.0, $11 = 0.0, $12 = 0.0, $13 = 0.0, $14 = 0.0, $15 = 0.0, $16 = 0.0, $17 = 0.0, $18 = 0.0, $19 = 0.0, $20 = 0.0, $21 = 0.0, $22 = 0.0;
 var $23 = 0.0, $24 = 0, $25 = 0.0, $26 = 0.0, $27 = 0.0, $28 = 0.0, $29 = 0.0, $30 = 0.0, $31 = 0.0, $32 = 0.0, $33 = 0.0, $34 = 0.0, $35 = 0, $36 = 0.0, $37 = 0.0, $38 = 0.0, $39 = 0.0, $40 = 0.0, $41 = 0.0, $42 = 0.0;
 var $43 = 0.0, $5 = 0, $6 = 0.0, $7 = 0.0, $8 = 0, $9 = 0, $_36$sroa$0$0$$sroa_idx = 0, $_6$sroa$0$0$copyload$i$i$i = 0.0, $_6$sroa$4$0$$sroa_idx2$i$i$i = 0, $_6$sroa$4$0$copyload$i$i$i = 0.0, $_6$sroa$5$0$$sroa_idx4$i$i$i = 0, $_6$sroa$5$0$copyload$i$i$i = 0.0, $_6$sroa$6$0$$sroa_idx6$i$i$i = 0, $_6$sroa$6$0$copyload$i$i$i = 0.0, $_62$sroa$0$0$$sroa_idx = 0, $_62$sroa$4$0$$sroa_idx36 = 0, $_62$sroa$5$0$$sroa_idx38 = 0, $_62$sroa$6$0$$sroa_idx40 = 0, $n$sroa$0$0 = 0.0, $n$sroa$5$0 = 0.0;
 var $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $5 = ((($3)) + 4|0);
 $6 = +HEAPF32[$3>>2];
 $7 = +HEAPF32[$5>>2];
 $8 = ((($2)) + 16|0);
 $9 = ((($2)) + 20|0);
 $10 = +HEAPF32[$8>>2];
 $11 = +HEAPF32[$9>>2];
 $12 = $6 - $10;
 $13 = $7 - $11;
 $_6$sroa$0$0$copyload$i$i$i = +HEAPF32[$2>>2];
 $_6$sroa$4$0$$sroa_idx2$i$i$i = ((($2)) + 4|0);
 $_6$sroa$4$0$copyload$i$i$i = +HEAPF32[$_6$sroa$4$0$$sroa_idx2$i$i$i>>2];
 $_6$sroa$5$0$$sroa_idx4$i$i$i = ((($2)) + 8|0);
 $_6$sroa$5$0$copyload$i$i$i = +HEAPF32[$_6$sroa$5$0$$sroa_idx4$i$i$i>>2];
 $_6$sroa$6$0$$sroa_idx6$i$i$i = ((($2)) + 12|0);
 $_6$sroa$6$0$copyload$i$i$i = +HEAPF32[$_6$sroa$6$0$$sroa_idx6$i$i$i>>2];
 $14 = $12 * $_6$sroa$0$0$copyload$i$i$i;
 $15 = $13 * $_6$sroa$4$0$copyload$i$i$i;
 $16 = $14 + $15;
 $17 = $12 * $_6$sroa$5$0$copyload$i$i$i;
 $18 = $13 * $_6$sroa$6$0$copyload$i$i$i;
 $19 = $17 + $18;
 $$idx20 = ((($3)) + 8|0);
 $$idx20$val = +HEAPF32[$$idx20>>2];
 $$idx21 = ((($3)) + 12|0);
 $$idx21$val = +HEAPF32[$$idx21>>2];
 $$idx27$val = +HEAPF32[$1>>2];
 $$idx28 = ((($1)) + 4|0);
 $$idx28$val = +HEAPF32[$$idx28>>2];
 $20 = $16 * $$idx27$val;
 $21 = $19 * $$idx28$val;
 $22 = -$21;
 $23 = $22 - $20;
 $24 = $23 > 0.0;
 $or$cond = $24 & $4;
 if ($or$cond) {
  HEAP32[$0>>2] = 1;
  $_36$sroa$0$0$$sroa_idx = ((($0)) + 4|0);
  ;HEAP32[$_36$sroa$0$0$$sroa_idx>>2]=0|0;HEAP32[$_36$sroa$0$0$$sroa_idx+4>>2]=0|0;HEAP32[$_36$sroa$0$0$$sroa_idx+8>>2]=0|0;HEAP32[$_36$sroa$0$0$$sroa_idx+12>>2]=0|0;
  return;
 }
 $25 = $_6$sroa$5$0$copyload$i$i$i * $$idx20$val;
 $26 = $_6$sroa$6$0$copyload$i$i$i * $$idx21$val;
 $27 = $25 + $26;
 $28 = $_6$sroa$0$0$copyload$i$i$i * $$idx20$val;
 $29 = $_6$sroa$4$0$copyload$i$i$i * $$idx21$val;
 $30 = $28 + $29;
 $31 = $30 * $$idx27$val;
 $32 = $27 * $$idx28$val;
 $33 = $31 + $32;
 $34 = $23 / $33;
 $35 = !($34 >= 0.0);
 if ($35) {
  HEAP32[$0>>2] = 0;
  return;
 } else {
  $36 = -$$idx27$val;
  $37 = -$$idx28$val;
  $n$sroa$0$0 = $24 ? $36 : $$idx27$val;
  $n$sroa$5$0 = $24 ? $37 : $$idx28$val;
  $38 = $n$sroa$0$0 * $_6$sroa$0$0$copyload$i$i$i;
  $39 = $n$sroa$5$0 * $_6$sroa$5$0$copyload$i$i$i;
  $40 = $38 + $39;
  $41 = $n$sroa$0$0 * $_6$sroa$4$0$copyload$i$i$i;
  $42 = $n$sroa$5$0 * $_6$sroa$6$0$copyload$i$i$i;
  $43 = $41 + $42;
  HEAP32[$0>>2] = 1;
  $_62$sroa$0$0$$sroa_idx = ((($0)) + 4|0);
  HEAPF32[$_62$sroa$0$0$$sroa_idx>>2] = $34;
  $_62$sroa$4$0$$sroa_idx36 = ((($0)) + 8|0);
  HEAPF32[$_62$sroa$4$0$$sroa_idx36>>2] = $40;
  $_62$sroa$5$0$$sroa_idx38 = ((($0)) + 12|0);
  HEAPF32[$_62$sroa$5$0$$sroa_idx38>>2] = $43;
  $_62$sroa$6$0$$sroa_idx40 = ((($0)) + 16|0);
  HEAP32[$_62$sroa$6$0$$sroa_idx40>>2] = 0;
  return;
 }
}
function __ZN17ncollide_geometry5query14point_internal10point_ball254__LT_impl_u20_ncollide_geometry__query__point_internal__point_query__PointQuery_LT_P_C__u20_M_GT__u20_for_u20_ncollide_geometry__shape__ball__Ball_LT__LT__LT_P_u20_as_u20_ncollide_math__Point_GT___Vect_u20_as_u20_ncollide_math__Vector_GT___Scalar_GT__GT_13project_point17h5ed85295562113e0E($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$idx9$val = 0.0, $$sink = 0, $$sink25 = 0.0, $$sink26 = 0.0, $10 = 0.0, $11 = 0.0, $12 = 0.0, $13 = 0.0, $14 = 0.0, $15 = 0.0, $16 = 0.0, $17 = 0.0, $18 = 0, $19 = 0.0, $20 = 0.0, $21 = 0.0, $22 = 0.0, $23 = 0.0, $24 = 0.0, $25 = 0.0;
 var $26 = 0, $27 = 0, $28 = 0, $5 = 0, $6 = 0.0, $7 = 0.0, $8 = 0, $9 = 0, $brmerge$demorgan = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $5 = ((($3)) + 4|0);
 $6 = +HEAPF32[$3>>2];
 $7 = +HEAPF32[$5>>2];
 $8 = ((($2)) + 16|0);
 $9 = ((($2)) + 20|0);
 $10 = +HEAPF32[$8>>2];
 $11 = +HEAPF32[$9>>2];
 $12 = $6 - $10;
 $13 = $7 - $11;
 $14 = $12 * $12;
 $15 = $13 * $13;
 $16 = $14 + $15;
 $$idx9$val = +HEAPF32[$1>>2];
 $17 = $$idx9$val * $$idx9$val;
 $18 = $16 <= $17;
 $brmerge$demorgan = $18 & $4;
 if ($brmerge$demorgan) {
  $$sink = 1;$$sink25 = $7;$$sink26 = $6;
 } else {
  $19 = (+Math_sqrt((+$16)));
  $20 = $12 / $19;
  $21 = $13 / $19;
  $22 = $20 + 0.0;
  $23 = $21 + 0.0;
  $24 = $10 + $22;
  $25 = $11 + $23;
  $26 = $18&1;
  $$sink = $26;$$sink25 = $25;$$sink26 = $24;
 }
 $27 = ((($0)) + 4|0);
 HEAPF32[$27>>2] = $$sink26;
 $28 = ((($0)) + 8|0);
 HEAPF32[$28>>2] = $$sink25;
 HEAP8[$0>>0] = $$sink;
 return;
}
function __ZN17ncollide_geometry5query14point_internal10point_ball254__LT_impl_u20_ncollide_geometry__query__point_internal__point_query__PointQuery_LT_P_C__u20_M_GT__u20_for_u20_ncollide_geometry__shape__ball__Ball_LT__LT__LT_P_u20_as_u20_ncollide_math__Point_GT___Vect_u20_as_u20_ncollide_math__Vector_GT___Scalar_GT__GT_14contains_point17h6d6607fcc114b62cE($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$idx1$val = 0.0, $10 = 0.0, $11 = 0.0, $12 = 0.0, $13 = 0.0, $14 = 0.0, $15 = 0.0, $16 = 0, $3 = 0, $4 = 0.0, $5 = 0.0, $6 = 0, $7 = 0, $8 = 0.0, $9 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($2)) + 4|0);
 $4 = +HEAPF32[$2>>2];
 $5 = +HEAPF32[$3>>2];
 $6 = ((($1)) + 16|0);
 $7 = ((($1)) + 20|0);
 $8 = +HEAPF32[$6>>2];
 $9 = +HEAPF32[$7>>2];
 $10 = $4 - $8;
 $11 = $5 - $9;
 $12 = $10 * $10;
 $13 = $11 * $11;
 $14 = $12 + $13;
 $$idx1$val = +HEAPF32[$0>>2];
 $15 = $$idx1$val * $$idx1$val;
 $16 = $14 <= $15;
 return ($16|0);
}
function __ZN17ncollide_geometry5query14point_internal10point_ball254__LT_impl_u20_ncollide_geometry__query__point_internal__point_query__PointQuery_LT_P_C__u20_M_GT__u20_for_u20_ncollide_geometry__shape__ball__Ball_LT__LT__LT_P_u20_as_u20_ncollide_math__Point_GT___Vect_u20_as_u20_ncollide_math__Vector_GT___Scalar_GT__GT_17distance_to_point17h85ae21cd19af2b7bE($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$idx$val = 0.0, $10 = 0.0, $11 = 0.0, $12 = 0.0, $13 = 0.0, $14 = 0.0, $15 = 0.0, $16 = 0.0, $17 = 0.0, $18 = 0, $4 = 0, $5 = 0.0, $6 = 0.0, $7 = 0, $8 = 0, $9 = 0.0, $_0$0 = 0.0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = ((($2)) + 4|0);
 $5 = +HEAPF32[$2>>2];
 $6 = +HEAPF32[$4>>2];
 $7 = ((($1)) + 16|0);
 $8 = ((($1)) + 20|0);
 $9 = +HEAPF32[$7>>2];
 $10 = +HEAPF32[$8>>2];
 $11 = $5 - $9;
 $12 = $6 - $10;
 $13 = $11 * $11;
 $14 = $12 * $12;
 $15 = $13 + $14;
 $16 = (+Math_sqrt((+$15)));
 $$idx$val = +HEAPF32[$0>>2];
 $17 = $16 - $$idx$val;
 $18 = $17 < 0.0;
 $or$cond = $18 & $3;
 $_0$0 = $or$cond ? 0.0 : $17;
 return (+$_0$0);
}
function __ZN17ncollide_geometry5query14point_internal11point_plane207__LT_impl_u20_ncollide_geometry__query__point_internal__point_query__PointQuery_LT_P_C__u20_M_GT__u20_for_u20_ncollide_geometry__shape__plane__Plane_LT__LT_P_u20_as_u20_ncollide_math__Point_GT___Vect_GT__GT_13project_point17hea24680a0757ad0fE($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$idx$val = 0.0, $$idx12 = 0, $$idx12$val = 0.0, $$sink = 0, $$sink25 = 0.0, $$sink26 = 0.0, $10 = 0.0, $11 = 0.0, $12 = 0.0, $13 = 0.0, $14 = 0.0, $15 = 0.0, $16 = 0.0, $17 = 0.0, $18 = 0.0, $19 = 0.0, $20 = 0.0, $21 = 0.0, $22 = 0.0, $23 = 0;
 var $24 = 0.0, $25 = 0.0, $26 = 0.0, $27 = 0.0, $28 = 0, $29 = 0, $30 = 0, $5 = 0, $6 = 0.0, $7 = 0.0, $8 = 0, $9 = 0, $_6$sroa$0$0$copyload$i$i$i = 0.0, $_6$sroa$4$0$$sroa_idx2$i$i$i = 0, $_6$sroa$4$0$copyload$i$i$i = 0.0, $_6$sroa$5$0$$sroa_idx4$i$i$i = 0, $_6$sroa$5$0$copyload$i$i$i = 0.0, $_6$sroa$6$0$$sroa_idx6$i$i$i = 0, $_6$sroa$6$0$copyload$i$i$i = 0.0, $brmerge$demorgan = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $5 = ((($3)) + 4|0);
 $6 = +HEAPF32[$3>>2];
 $7 = +HEAPF32[$5>>2];
 $8 = ((($2)) + 16|0);
 $9 = ((($2)) + 20|0);
 $10 = +HEAPF32[$8>>2];
 $11 = +HEAPF32[$9>>2];
 $12 = $6 - $10;
 $13 = $7 - $11;
 $_6$sroa$0$0$copyload$i$i$i = +HEAPF32[$2>>2];
 $_6$sroa$4$0$$sroa_idx2$i$i$i = ((($2)) + 4|0);
 $_6$sroa$4$0$copyload$i$i$i = +HEAPF32[$_6$sroa$4$0$$sroa_idx2$i$i$i>>2];
 $_6$sroa$5$0$$sroa_idx4$i$i$i = ((($2)) + 8|0);
 $_6$sroa$5$0$copyload$i$i$i = +HEAPF32[$_6$sroa$5$0$$sroa_idx4$i$i$i>>2];
 $_6$sroa$6$0$$sroa_idx6$i$i$i = ((($2)) + 12|0);
 $_6$sroa$6$0$copyload$i$i$i = +HEAPF32[$_6$sroa$6$0$$sroa_idx6$i$i$i>>2];
 $14 = $12 * $_6$sroa$0$0$copyload$i$i$i;
 $15 = $13 * $_6$sroa$4$0$copyload$i$i$i;
 $16 = $14 + $15;
 $17 = $12 * $_6$sroa$5$0$copyload$i$i$i;
 $18 = $13 * $_6$sroa$6$0$copyload$i$i$i;
 $19 = $17 + $18;
 $$idx$val = +HEAPF32[$1>>2];
 $$idx12 = ((($1)) + 4|0);
 $$idx12$val = +HEAPF32[$$idx12>>2];
 $20 = $16 * $$idx$val;
 $21 = $$idx12$val * $19;
 $22 = $20 + $21;
 $23 = $22 <= 0.0;
 $brmerge$demorgan = $23 & $4;
 if ($brmerge$demorgan) {
  $$sink = 1;$$sink25 = $7;$$sink26 = $6;
  $29 = ((($0)) + 4|0);
  HEAPF32[$29>>2] = $$sink26;
  $30 = ((($0)) + 8|0);
  HEAPF32[$30>>2] = $$sink25;
  HEAP8[$0>>0] = $$sink;
  return;
 }
 $24 = $22 * $$idx$val;
 $25 = $22 * $$idx12$val;
 $26 = $6 - $24;
 $27 = $7 - $25;
 $28 = $23&1;
 $$sink = $28;$$sink25 = $27;$$sink26 = $26;
 $29 = ((($0)) + 4|0);
 HEAPF32[$29>>2] = $$sink26;
 $30 = ((($0)) + 8|0);
 HEAPF32[$30>>2] = $$sink25;
 HEAP8[$0>>0] = $$sink;
 return;
}
function __ZN17ncollide_geometry5query14point_internal11point_plane207__LT_impl_u20_ncollide_geometry__query__point_internal__point_query__PointQuery_LT_P_C__u20_M_GT__u20_for_u20_ncollide_geometry__shape__plane__Plane_LT__LT_P_u20_as_u20_ncollide_math__Point_GT___Vect_GT__GT_14contains_point17hf4e81a19d9c9f810E($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$idx$val = 0.0, $$idx1 = 0, $$idx1$val = 0.0, $10 = 0.0, $11 = 0.0, $12 = 0.0, $13 = 0.0, $14 = 0.0, $15 = 0.0, $16 = 0.0, $17 = 0.0, $18 = 0.0, $19 = 0.0, $20 = 0.0, $21 = 0, $3 = 0, $4 = 0.0, $5 = 0.0, $6 = 0, $7 = 0;
 var $8 = 0.0, $9 = 0.0, $_6$sroa$0$0$copyload$i$i$i = 0.0, $_6$sroa$4$0$$sroa_idx2$i$i$i = 0, $_6$sroa$4$0$copyload$i$i$i = 0.0, $_6$sroa$5$0$$sroa_idx4$i$i$i = 0, $_6$sroa$5$0$copyload$i$i$i = 0.0, $_6$sroa$6$0$$sroa_idx6$i$i$i = 0, $_6$sroa$6$0$copyload$i$i$i = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($2)) + 4|0);
 $4 = +HEAPF32[$2>>2];
 $5 = +HEAPF32[$3>>2];
 $6 = ((($1)) + 16|0);
 $7 = ((($1)) + 20|0);
 $8 = +HEAPF32[$6>>2];
 $9 = +HEAPF32[$7>>2];
 $10 = $4 - $8;
 $11 = $5 - $9;
 $_6$sroa$0$0$copyload$i$i$i = +HEAPF32[$1>>2];
 $_6$sroa$4$0$$sroa_idx2$i$i$i = ((($1)) + 4|0);
 $_6$sroa$4$0$copyload$i$i$i = +HEAPF32[$_6$sroa$4$0$$sroa_idx2$i$i$i>>2];
 $_6$sroa$5$0$$sroa_idx4$i$i$i = ((($1)) + 8|0);
 $_6$sroa$5$0$copyload$i$i$i = +HEAPF32[$_6$sroa$5$0$$sroa_idx4$i$i$i>>2];
 $_6$sroa$6$0$$sroa_idx6$i$i$i = ((($1)) + 12|0);
 $_6$sroa$6$0$copyload$i$i$i = +HEAPF32[$_6$sroa$6$0$$sroa_idx6$i$i$i>>2];
 $12 = $10 * $_6$sroa$0$0$copyload$i$i$i;
 $13 = $11 * $_6$sroa$4$0$copyload$i$i$i;
 $14 = $12 + $13;
 $15 = $10 * $_6$sroa$5$0$copyload$i$i$i;
 $16 = $11 * $_6$sroa$6$0$copyload$i$i$i;
 $17 = $15 + $16;
 $$idx$val = +HEAPF32[$0>>2];
 $$idx1 = ((($0)) + 4|0);
 $$idx1$val = +HEAPF32[$$idx1>>2];
 $18 = $14 * $$idx$val;
 $19 = $$idx1$val * $17;
 $20 = $18 + $19;
 $21 = $20 <= 0.0;
 return ($21|0);
}
function __ZN17ncollide_geometry5query14point_internal11point_plane207__LT_impl_u20_ncollide_geometry__query__point_internal__point_query__PointQuery_LT_P_C__u20_M_GT__u20_for_u20_ncollide_geometry__shape__plane__Plane_LT__LT_P_u20_as_u20_ncollide_math__Point_GT___Vect_GT__GT_17distance_to_point17hcda027f0dc732addE($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$9 = 0.0, $$idx$val = 0.0, $$idx2 = 0, $$idx2$val = 0.0, $10 = 0.0, $11 = 0.0, $12 = 0.0, $13 = 0.0, $14 = 0.0, $15 = 0.0, $16 = 0.0, $17 = 0.0, $18 = 0.0, $19 = 0.0, $20 = 0.0, $21 = 0.0, $22 = 0, $4 = 0, $5 = 0.0, $6 = 0.0;
 var $7 = 0, $8 = 0, $9 = 0.0, $_6$sroa$0$0$copyload$i$i$i = 0.0, $_6$sroa$4$0$$sroa_idx2$i$i$i = 0, $_6$sroa$4$0$copyload$i$i$i = 0.0, $_6$sroa$5$0$$sroa_idx4$i$i$i = 0, $_6$sroa$5$0$copyload$i$i$i = 0.0, $_6$sroa$6$0$$sroa_idx6$i$i$i = 0, $_6$sroa$6$0$copyload$i$i$i = 0.0, $brmerge$demorgan = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = ((($2)) + 4|0);
 $5 = +HEAPF32[$2>>2];
 $6 = +HEAPF32[$4>>2];
 $7 = ((($1)) + 16|0);
 $8 = ((($1)) + 20|0);
 $9 = +HEAPF32[$7>>2];
 $10 = +HEAPF32[$8>>2];
 $11 = $5 - $9;
 $12 = $6 - $10;
 $_6$sroa$0$0$copyload$i$i$i = +HEAPF32[$1>>2];
 $_6$sroa$4$0$$sroa_idx2$i$i$i = ((($1)) + 4|0);
 $_6$sroa$4$0$copyload$i$i$i = +HEAPF32[$_6$sroa$4$0$$sroa_idx2$i$i$i>>2];
 $_6$sroa$5$0$$sroa_idx4$i$i$i = ((($1)) + 8|0);
 $_6$sroa$5$0$copyload$i$i$i = +HEAPF32[$_6$sroa$5$0$$sroa_idx4$i$i$i>>2];
 $_6$sroa$6$0$$sroa_idx6$i$i$i = ((($1)) + 12|0);
 $_6$sroa$6$0$copyload$i$i$i = +HEAPF32[$_6$sroa$6$0$$sroa_idx6$i$i$i>>2];
 $13 = $11 * $_6$sroa$0$0$copyload$i$i$i;
 $14 = $12 * $_6$sroa$4$0$copyload$i$i$i;
 $15 = $13 + $14;
 $16 = $11 * $_6$sroa$5$0$copyload$i$i$i;
 $17 = $12 * $_6$sroa$6$0$copyload$i$i$i;
 $18 = $16 + $17;
 $$idx$val = +HEAPF32[$0>>2];
 $$idx2 = ((($0)) + 4|0);
 $$idx2$val = +HEAPF32[$$idx2>>2];
 $19 = $15 * $$idx$val;
 $20 = $$idx2$val * $18;
 $21 = $19 + $20;
 $22 = $21 < 0.0;
 $brmerge$demorgan = $22 & $3;
 $$9 = $brmerge$demorgan ? 0.0 : $21;
 return (+$$9);
}
function __ZN17ncollide_geometry5query23time_of_impact_internal19shape_against_shape19shape_against_shape17h7395edb4f4a16d88E($0,$1,$2,$3,$4,$5,$6,$7,$8) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 $7 = $7|0;
 $8 = $8|0;
 var $$$i = 0, $$$i48 = 0, $$$i49 = 0, $$$i51 = 0, $$fca$0$0$0$load3845$i$i$i$i$i$i = 0, $$foundit$0$off0$us$us$i$us$i$i$i$i$i$i = 0, $$foundit$0$off0$us262$i$i$i$i$i$i$i = 0, $$idx$i52$i$i$i$i$i$i = 0, $$idx$phi$trans$insert$i$i$i$i$i$i$i = 0, $$idx$val = 0.0, $$idx$val$i = 0.0, $$idx$val$i$i$i$i$i$i = 0, $$idx$val$i$i$i$i$i$i$i = 0, $$idx$val$i$i$i$i$i$i$i$i = 0, $$idx$val$i$i$i12$i$i$i = 0.0, $$idx$val$i$i45$i$i$i$i$i = 0, $$idx$val$i35$i$i$i$i$i = 0, $$idx$val$i53$i$i$i$i$i$i = 0, $$idx$val$i61$pre$i$i$i$i$i = 0.0, $$idx$val$i61$pre$pre$i$i$i$i$i = 0.0;
 var $$idx$val$pre$i$i$i$i$i$i$i = 0.0, $$idx1$val$i$pre$i$i$i$i$i = 0.0, $$idx1$val$i$pre$pre$i$i$i$i$i = 0.0, $$idx18$i = 0, $$idx18$val$i = 0.0, $$idx25$val$pre$i$i$i$i$i$i$i = 0.0, $$idx26$val218$i$i$i$i$i$i$i = 0, $$idx27$i$i$i$i$i$i$i = 0, $$idx27$val219$i$i$i$i$i$i$i = 0, $$idx28$val228$i$i$i$i$i$i$i = 0, $$idx29$i$i$i$i$i$i$i = 0, $$idx29$val229$i$i$i$i$i$i$i = 0, $$idx30$i$i$i$i$i$i$i = 0, $$idx30$val224225$i$i$i$i$i$i$i = 0.0, $$idx31$i$i$i$i$i$i$i = 0, $$idx31$val226227$i$i$i$i$i$i$i = 0.0, $$idx32$i$i$i$i$i$i$i = 0, $$idx32$val220221$i$i$i$i$i$i$i = 0.0, $$idx33$i$i$i$i$i$i$i = 0, $$idx33$val222223$i$i$i$i$i$i$i = 0.0;
 var $$idx35$val$i$i$i$i$i$i$i = 0, $$idx36$i$i$i$i$i$i$i = 0, $$idx36$val$i$i$i$i$i$i$i = 0, $$idx37$i$i$i$i$i$i$i = 0, $$idx37$val$i$i$i$i$i$i$i = 0, $$idx38$i$i$i$i$i$i$i = 0, $$idx38$val$i$i$i$i$i$i$i = 0, $$idx39$i$i$i$i$i$i$i = 0, $$idx39$val$i$i$i$i$i$i$i = 0, $$idx41$val = 0.0, $$idx42$i$i$i$i$i$i$i = 0, $$idx42$val = 0.0, $$idx42$val$i$i$i$i$i$i$i = 0, $$idx43 = 0, $$idx43$i$i$i$i$i$i$i = 0, $$idx43$val = 0.0, $$idx43$val$i$i$i$i$i$i$i = 0, $$idx44$val = 0.0, $$idx44$val$i$i$i$i$i$i$i = 0, $$idx44$val$i$pre$i$i$i$i$i$i = 0;
 var $$idx45 = 0, $$idx45$val = 0.0, $$idx46$i$i$i$i$i$i = 0, $$idx46$val = 0.0, $$idx46$val$i$i$i$i$i$i = 0, $$idx46$val$i$i$i$i$i$i$i = 0, $$idx47 = 0, $$idx47$val = 0.0, $$idx48$i$i$i$i$i$i$i = 0, $$idx48$val$i$i$i$i$i$i$i = 0, $$idx48$val$i$i$i$i11$i$i$i = 0, $$idx48$val$i$i$pre$i$i$i$i$i = 0, $$idx5$i$i$i$i$i$i = 0, $$idx5$val$i$i$i$i$i$i = 0.0, $$idx52$i$i$i$i$i$i$i = 0, $$idx52$val$us$us$i$us$i$i$i$i$i$i = 0, $$idx52$val$us254$pre$i$pre$i$i$i$i$i$i = 0, $$idx54$val$i$i$i$i$i$i$i = 0, $$idx54$val$pre$i$i$i$i$i$i$i = 0, $$idx55$val$i$i$i$i$i$i$i = 0;
 var $$idx55$val$pre$i$i$i$i$i$i$i = 0, $$idx56$i$i$i$i$i$i$i = 0, $$idx56$val$i$i$i$i$i$i$i = 0, $$idx56$val$pre$i$i$i$i$i$i$i = 0, $$idx58$val$i$i$i$i$i$i$i = 0, $$idx64$val$i$i$i$i$i$i$i = 0, $$idx66$val$i$i$i$i$i$i$i = 0, $$idx68$val$us$us$i$us$i$i$i$i$i$i = 0, $$idx68$val$us253$pre$i$pre$i$i$i$i$i$i = 0, $$idx72$val$i$i$i$i$i$i$i = 0, $$idx75$i$i$i$i$i$i$i = 0, $$idx75$val$i$i$i$i$i$i$i = 0.0, $$idx76$i$i$i$i$i$i$i = 0, $$idx76$val$i$i$i$i$i$i$i = 0.0, $$idx90$val$i$i$i$i$i$i$i = 0, $$idx90$val$i$pre$i$i$i$i$i$i = 0, $$neg$i$i$i$i$i = 0, $$phi$trans$insert$i$i$i$i$i$i$i = 0, $$phi$trans$insert320$i$i$i$i$i$i$i = 0, $$pre$i$i$i = 0;
 var $$pre$i$i$i$i$i$i$i = 0, $$pre$i$i$i$i$i$i$i$i = 0, $$pre$i$i40$i$i$i$i$i = 0, $$pre$i$i46$i$i$i$i$i = 0, $$pre328$i$i$i$i$i$i$i = 0, $$pre332$i$i$i$i$i$i$i = 0, $$ptr$i$i$i$i$i$i$i = 0, $$ptr293$i$i$i$i$i$i$i = 0, $$sink$i$i$i = 0, $$sink$i$i$i$i = 0, $$sink$i$i$i$i55 = 0, $$sink$i$i$i53 = 0, $$sroa_idx8$i = 0, $$val$us$us$i$us$i$i$i$i$i$i = 0.0, $$val17$i$i$i$i$i$i$i = 0.0, $$val18$us$us$i$us$i$i$i$i$i$i = 0.0, $$val18$us255$i$i$i$i$i$i$i = 0.0, $$val19$i$i$i$i$i$i$i = 0.0, $$val19$i11$i$i$i$i$i$i = 0.0, $10 = 0;
 var $100 = 0.0, $101 = 0.0, $102 = 0.0, $103 = 0.0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0.0, $109 = 0.0, $11 = 0, $110 = 0, $111 = 0, $112 = 0.0, $113 = 0.0, $114 = 0.0, $115 = 0.0, $116 = 0.0, $117 = 0.0, $118 = 0.0;
 var $119 = 0.0, $12 = 0, $120 = 0.0, $121 = 0.0, $122 = 0.0, $123 = 0.0, $124 = 0.0, $125 = 0.0, $126 = 0, $127 = 0.0, $128 = 0.0, $129 = 0.0, $13 = 0, $130 = 0.0, $131 = 0.0, $132 = 0.0, $133 = 0.0, $134 = 0.0, $135 = 0.0, $136 = 0.0;
 var $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0.0, $143 = 0.0, $144 = 0.0, $145 = 0.0, $146 = 0.0, $147 = 0.0, $148 = 0.0, $149 = 0.0, $15 = 0, $150 = 0.0, $151 = 0.0, $152 = 0, $153 = 0, $154 = 0;
 var $155 = 0, $156 = 0.0, $157 = 0.0, $158 = 0, $159 = 0, $16 = 0, $160 = 0.0, $161 = 0.0, $162 = 0.0, $163 = 0.0, $164 = 0.0, $165 = 0.0, $166 = 0.0, $167 = 0.0, $168 = 0.0, $169 = 0.0, $17 = 0, $170 = 0.0, $171 = 0.0, $172 = 0.0;
 var $173 = 0.0, $174 = 0, $175 = 0.0, $176 = 0.0, $177 = 0.0, $178 = 0.0, $179 = 0.0, $18 = 0, $180 = 0.0, $181 = 0.0, $182 = 0.0, $183 = 0.0, $184 = 0.0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0;
 var $191 = 0, $192 = 0.0, $193 = 0.0, $194 = 0, $195 = 0.0, $196 = 0.0, $197 = 0.0, $198 = 0.0, $199 = 0.0, $20 = 0, $200 = 0.0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0;
 var $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0;
 var $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0;
 var $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0;
 var $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0;
 var $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0.0, $291 = 0.0, $292 = 0.0, $293 = 0.0, $294 = 0.0, $295 = 0.0, $296 = 0.0, $297 = 0.0, $298 = 0, $299 = 0, $30 = 0;
 var $300 = 0, $301 = 0, $302 = 0.0, $303 = 0.0, $304 = 0.0, $305 = 0.0, $306 = 0.0, $307 = 0.0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0.0, $312 = 0.0, $313 = 0.0, $314 = 0.0, $315 = 0.0, $316 = 0.0, $317 = 0.0, $318 = 0.0;
 var $319 = 0.0, $32 = 0, $320 = 0.0, $321 = 0.0, $322 = 0.0, $323 = 0.0, $324 = 0, $325 = 0, $326 = 0, $327 = 0.0, $328 = 0.0, $329 = 0.0, $33 = 0.0, $330 = 0.0, $331 = 0.0, $332 = 0, $333 = 0, $334 = 0.0, $335 = 0.0, $336 = 0.0;
 var $337 = 0.0, $338 = 0, $339 = 0, $34 = 0.0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0.0, $350 = 0.0, $351 = 0.0, $352 = 0, $353 = 0, $354 = 0;
 var $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0.0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0;
 var $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0.0, $390 = 0;
 var $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $40 = 0.0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0.0, $406 = 0.0, $407 = 0, $408 = 0, $409 = 0;
 var $41 = 0.0, $410 = 0, $411 = 0.0, $412 = 0.0, $413 = 0.0, $414 = 0.0, $415 = 0.0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0.0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0.0, $426 = 0.0, $427 = 0.0;
 var $428 = 0.0, $429 = 0.0, $43 = 0, $430 = 0.0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0.0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0;
 var $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0.0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0;
 var $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0.0, $469 = 0, $47 = 0.0, $470 = 0, $471 = 0.0, $472 = 0.0, $473 = 0.0, $474 = 0.0, $475 = 0, $476 = 0, $477 = 0.0, $478 = 0.0, $479 = 0, $48 = 0.0, $480 = 0, $481 = 0;
 var $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0.0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0.0, $499 = 0.0, $50 = 0.0;
 var $500 = 0.0, $501 = 0.0, $502 = 0.0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0.0, $510 = 0, $511 = 0, $512 = 0, $513 = 0.0, $514 = 0.0, $515 = 0.0, $516 = 0, $517 = 0.0, $518 = 0;
 var $519 = 0.0, $52 = 0.0, $520 = 0, $521 = 0.0, $522 = 0.0, $523 = 0.0, $524 = 0.0, $525 = 0.0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0.0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0;
 var $537 = 0, $538 = 0, $539 = 0, $54 = 0.0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0.0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0;
 var $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0.0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $57 = 0.0, $58 = 0.0, $59 = 0.0, $60 = 0.0, $61 = 0.0;
 var $62 = 0.0, $63 = 0.0, $64 = 0.0, $65 = 0.0, $66 = 0.0, $67 = 0.0, $68 = 0, $69 = 0, $70 = 0.0, $71 = 0.0, $72 = 0.0, $73 = 0, $74 = 0.0, $75 = 0.0, $76 = 0.0, $77 = 0.0, $78 = 0, $79 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0.0, $9 = 0, $90 = 0.0, $91 = 0, $92 = 0.0, $93 = 0.0, $94 = 0.0, $95 = 0.0, $96 = 0.0, $97 = 0.0, $98 = 0.0, $99 = 0.0, $_10$i$i$i$i$i$i = 0;
 var $_11$i$i$i$i$i$i$i = 0, $_14$i$i$i$i$i$i$i = 0, $_16$i$i$i$i$i$i = 0, $_26$i = 0, $_26$i$i = 0, $_26$i$i$i = 0, $_28$sroa$11$0$i = 0, $_28$sroa$610$0$i = 0, $_38$sroa$5$4$copyload = 0, $_38$sroa$8$4$$sroa_idx31 = 0, $_38$sroa$8$4$copyload = 0, $_41 = 0, $_5$sroa$0$0$$sroa_idx$i$i$i$i$i$i$i = 0, $_5$sroa$0$0$copyload$i$i$i = 0.0, $_5$sroa$0$0$copyload$i$i$i$i = 0.0, $_5$sroa$4$0$$sroa_idx2$i$i$i = 0, $_5$sroa$4$0$$sroa_idx2$i$i$i$i = 0, $_5$sroa$4$0$copyload$i$i$i = 0.0, $_5$sroa$4$0$copyload$i$i$i$i = 0.0, $_5$sroa$5$0$$sroa_idx4$i$i$i = 0;
 var $_5$sroa$5$0$$sroa_idx4$i$i$i$i = 0, $_5$sroa$5$0$$sroa_idx64$i$i$i$i$i$i$i = 0, $_5$sroa$5$0$copyload$i$i$i = 0.0, $_5$sroa$5$0$copyload$i$i$i$i = 0.0, $_5$sroa$6$0$$sroa_idx6$i$i$i = 0, $_5$sroa$6$0$$sroa_idx6$i$i$i$i = 0, $_5$sroa$6$0$copyload$i$i$i = 0.0, $_5$sroa$6$0$copyload$i$i$i$i = 0.0, $_5$sroa$7$0$$sroa_idx66$i$i$i$i$i$i$i = 0, $_51$sroa$0$0$copyload = 0, $_51$sroa$5$0$$sroa_idx22 = 0, $_51$sroa$5$0$copyload = 0, $_52 = 0, $_64$sroa$0$0$copyload = 0, $_64$sroa$5$0$$sroa_idx13 = 0, $_64$sroa$5$0$copyload = 0, $_64$sroa$6$8$copyload = 0, $_64$sroa$9$8$$sroa_idx17 = 0, $_64$sroa$9$8$copyload = 0, $_65 = 0;
 var $_67 = 0, $_77 = 0, $_8$sroa$0$0$$sroa_idx$i$i$i$i$i$i$i = 0, $_8$sroa$5$0$$sroa_idx58$i$i$i$i$i$i$i = 0, $_8$sroa$7$0$$sroa_idx60$i$i$i$i$i$i$i = 0, $_87 = 0, $_9$sroa$4$0$i$i = 0, $_9$sroa$6$0$ph$i$i = 0, $_9$sroa$6$0$ph$i$i$i = 0, $arg5$i$i$i$i$i$i$i = 0, $cmp$n = 0, $cmp$zero = 0, $cond$i$i$i$i$i$i$i$i$i = 0, $cond$i$i$i56$i$i$i$i$i$i = 0, $curr$0$lcssa$i$i$i$i$i$i$i = 0, $curr$0285$i$i$i$i$i$i$i = 0, $curr$0285$pn$i$i$i$i$i$i$i = 0, $curr$1$lcssa$i$i$i$i$i$i$i = 0, $curr$2271$i$i$i$i$i$i$i = 0, $curr$3$lcssa$i$i$i$i$i$i$i = 0;
 var $curr$3245$us$i$i$i$i$i$i$i = 0, $curr$3245$us$i$lcssa$i$i$i$i$i$i = 0, $curr$3245$us$i$us$i$i$i$i$i$i = 0, $curr_num_pts$0$lcssa$i$i$i$i$i$i$i = 0, $curr_num_pts$1272$i$i$i$i$i$i$i = 0, $curr_num_pts$1272$i27$i$i$i$i$i$i = 0, $curr_ray$sroa$0$0$ph$i$i$i$i$i = 0, $curr_ray$sroa$7$0$ph$i$i$i$i$i = 0, $data$i$sroa$5$0$$sroa_idx$i = 0, $determinant$0$lcssa$i$i$i$i$i$i$i = 0.0, $dir$i$i$i$i$i = 0, $dir$idx32$val$i$i$i$i$i = 0.0, $dir$idx33$val$i$i$i$i$i = 0.0, $eh$lpad$body$i$i$i$index11Z2D = 0, $eh$lpad$body$i$i$i$indexZ2D = 0, $exitcond$i$i$i$i$i$i$i = 0, $exitcond307$i$i$i$i$i$i$i = 0, $exitcond308$i$i$i$i$i$i$i = 0, $exitcond311$i$us$i$i$i$i$i$i = 0, $exitcond318$i$i$i$i$i$i$i = 0;
 var $exitcond318$i12$i$i$i$i$i$i = 0, $fold = 0, $foundit$0$off0$be$us$us$i$us$i$i$i$i$i$i = 0, $foundit$0$off0$be$us264$i$i$i$i$i$i$i = 0, $foundit$0$off0241$us$us$i$us$i$i$i$i$i$i = 0, $foundit$0$off0241$us251$i$i$i$i$i$i$i = 0, $ind$end = 0, $index = 0, $index$next = 0, $indvars$iv$i$i$i$i$i$i$i = 0, $indvars$iv$next310$i$i$i$i$i$i$i = 0, $indvars$iv$next313$i$i$i$i$i$i$i = 0, $indvars$iv309$i$i$i$i$i$i$i = 0, $indvars$iv312$i$i$i$i$i$i$i = 0, $indvars$iv316$i$i$i$i$i$i$i = 0, $iter$sroa$0$0$i$i$i$i$i$i = 0, $iter$sroa$0$0$in292$i$i$i$i$i$i$i = 0, $iter$sroa$0$0$ph$i$i$i$i$i$i = 0, $iter10$sroa$0$0234$i$i$i$i$i$i$i = 0, $iter13$sroa$0$0233$i$i$i$i$i$i$i = 0;
 var $iter13$sroa$0$0233$i$i$i$i$i$i$i$phi = 0, $iter2$sroa$0$0$in284$i$i$i$i$i$i$i = 0, $iter6$sroa$5$0$in270$i$i$i$i$i$i$i = 0, $iter8$sroa$0$0240$us$us$i$us$i$i$i$i$i$i = 0, $iter8$sroa$0$0240$us$us$i$us$i$i$i$i$i$i$phi = 0, $iter8$sroa$0$0240$us252$i$i$i$i$i$i$i = 0, $iter8$sroa$0$0240$us252$i$i$i$i$i$i$i$phi = 0, $lpad$phi$i$i$i$index = 0, $lpad$phi$i$i$i$index4 = 0, $ltoi$0$ph$i$i$i$i$i = 0.0, $max_sq_len$sroa$0$0$ph$i$i$i$i$i$i = 0.0, $min$iters$check = 0, $n$mod$vf = 0, $n$vec = 0, $next$gep = 0, $not$$i$i$i$i$i$i$i$i = 0, $not$$i$i$i$i$i26$i$i$i = 0, $not$$i$i$i$i1$i$i$i$i = 0, $not$$i$i$i$i1$i29$i$i$i = 0, $not$$i$i$i$i4$i$i$i$i = 0;
 var $not$$i$i$i$i4$i32$i$i$i = 0, $not$$us$us$i$us$i$i$i$i$i$i = 0, $not$$us261$i$i$i$i$i$i$i = 0, $offsets_iter$sroa$6$0$v$i$i$i$i$i$i$i = 0, $old_max_bound$sroa$0$0$i114$i$i$i$i = 0, $or$cond = 0, $or$cond$i$i = 0, $or$cond$i$i$i$i$i = 0, $or$cond$i$i50 = 0, $or$cond291$i$i$i$i$i$i$i = 0, $or$cond38 = 0, $or$cond39 = 0, $or$cond40 = 0, $personalityslot$sroa$0$0$i$i$i = 0, $personalityslot$sroa$0$0$i$i$i$i$i$i = 0, $personalityslot$sroa$0$0$i$i$i$i$i$i$i = 0, $personalityslot$sroa$0$1$i$i$i$i$i$i$i = 0, $personalityslot$sroa$7$0$i$i$i$i$i$i$i = 0, $personalityslot$sroa$7$1$i$i$i$i$i$i$i = 0, $personalityslot$sroa$8$0$i$i$i = 0;
 var $personalityslot$sroa$9$0$i$i$i$i$i$i = 0, $proj$sroa$0$0$lcssa335$i$i$i$i$i$i$i = 0.0, $proj$sroa$0$0235$i$i$i$i$i$i$i = 0.0, $proj$sroa$6$0$lcssa337$i$i$i$i$i$i$i = 0.0, $proj$sroa$6$0236$i$i$i$i$i$i$i = 0.0, $recursion$i$i$i$i$i$i$i = 0, $self$sroa$10$i$sroa$4$0$$sroa_cast5362$i$i$i = 0, $self$sroa$10$i$sroa$4$i$i$i = 0, $switch1tmp = 0, $switch2tmp = 0, $switch2tmp$i$i$i$i$i$i = 0, $switch3$i$i$i = 0, $switch3tmp = 0, $switch4tmp = 0, $switch5tmp = 0, $switch6tmp = 0, $switch7tmp = 0, $switch8tmp = 0, $switch9tmp = 0, $switchtmp = 0;
 var $switchtmp$i$i$i$i$i = 0, $switchtmp$i$i$i$i$i$i$i = 0, $switchtmp$i2$i$i$i$i$i$i = 0, $switchtmp290$i$i$i$i$i$i$i = 0, $t$i$i$i$i$i$i$i$i = 0, $tmp_ret$i$i$i$i$i$i = 0, $tmp_ret$i$i$i$i$i$i$i = 0, $tmp_ret27$sroa$0$0$i$i$i$i$i = 0, $tmp_ret27$sroa$4$0$i$i$i$i$i = 0, $tmp_ret3$i = 0, $tmp_ret3$i$i = 0, $total_det$0$lcssa339$i$i$i$i$i$i$i = 0.0, $total_det$0237$i$i$i$i$i$i$i = 0.0, label = 0, sp = 0, temp_Float32x4_ptr = 0, temp_Int32x4_ptr = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(224|0);
 $_26$i$i = sp + 216|0;
 $tmp_ret3$i$i = sp + 208|0;
 $_26$i = sp + 200|0;
 $tmp_ret3$i = sp + 192|0;
 $self$sroa$10$i$sroa$4$i$i$i = sp + 184|0;
 $_14$i$i$i$i$i$i$i = sp + 176|0;
 $tmp_ret$i$i$i$i$i$i$i = sp + 168|0;
 $tmp_ret$i$i$i$i$i$i = sp + 160|0;
 $t$i$i$i$i$i$i$i$i = sp + 144|0;
 $dir$i$i$i$i$i = sp + 136|0;
 $_10$i$i$i$i$i$i = sp + 128|0;
 $recursion$i$i$i$i$i$i$i = sp + 120|0;
 $_11$i$i$i$i$i$i$i = sp + 104|0;
 $arg5$i$i$i$i$i$i$i = sp + 96|0;
 $_16$i$i$i$i$i$i = sp + 88|0;
 $_26$i$i$i = sp + 48|0;
 $_41 = sp + 40|0;
 $_52 = sp + 32|0;
 $_65 = sp + 24|0;
 $_67 = sp + 16|0;
 $_77 = sp + 8|0;
 $_87 = sp;
 $9 = ((($4)) + 48|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = (FUNCTION_TABLE_ii[$10 & 511]($3)|0);
 $12 = tempRet0;
 $13 = ($11|0)==(391555669);
 $14 = ($12|0)==(162210410);
 $15 = $13 & $14;
 $$$i = $15 ? $3 : 0;
 $16 = ((($8)) + 48|0);
 $17 = HEAP32[$16>>2]|0;
 $18 = (FUNCTION_TABLE_ii[$17 & 511]($7)|0);
 $19 = tempRet0;
 $20 = ($18|0)==(391555669);
 $21 = ($19|0)==(162210410);
 $22 = $20 & $21;
 $$$i48 = $22 ? $7 : 0;
 $switch4tmp = ($$$i|0)==(0|0);
 $switchtmp = ($$$i48|0)==(0|0);
 $or$cond = $switch4tmp | $switchtmp;
 if (!($or$cond)) {
  $31 = ((($1)) + 16|0);
  $32 = ((($1)) + 20|0);
  $33 = +HEAPF32[$31>>2];
  $34 = +HEAPF32[$32>>2];
  $35 = $33 + 0.0;
  $36 = $34 + 0.0;
  $37 = ((($5)) + 16|0);
  $38 = ((($5)) + 20|0);
  $39 = +HEAPF32[$37>>2];
  $40 = +HEAPF32[$38>>2];
  $41 = $39 + 0.0;
  $42 = $40 + 0.0;
  $$idx$val = +HEAPF32[$$$i>>2];
  $$idx41$val = +HEAPF32[$$$i48>>2];
  $43 = ((($2)) + 4|0);
  $44 = +HEAPF32[$2>>2];
  $45 = +HEAPF32[$43>>2];
  $46 = ((($6)) + 4|0);
  $47 = +HEAPF32[$6>>2];
  $48 = +HEAPF32[$46>>2];
  $49 = $44 - $47;
  $50 = $45 - $48;
  $51 = $$idx$val + $$idx41$val;
  $52 = $35 - $41;
  $53 = $36 - $42;
  $54 = 0.0 - $52;
  $55 = 0.0 - $53;
  $56 = $49 * $49;
  $57 = $50 * $50;
  $58 = $56 + $57;
  $59 = $54 * $49;
  $60 = $55 * $50;
  $61 = -$60;
  $62 = $61 - $59;
  $63 = $54 * $54;
  $64 = $55 * $55;
  $65 = $63 + $64;
  $66 = $51 * $51;
  $67 = $65 - $66;
  $68 = $67 > 0.0;
  $69 = $62 > 0.0;
  $or$cond$i$i = $68 & $69;
  if ($or$cond$i$i) {
   $_28$sroa$11$0$i = 0;$_28$sroa$610$0$i = 0;
  } else {
   $70 = $62 * $62;
   $71 = $67 * $58;
   $72 = $70 - $71;
   $73 = $72 < 0.0;
   if ($73) {
    $_28$sroa$11$0$i = 0;$_28$sroa$610$0$i = 0;
   } else {
    $74 = -$62;
    $75 = (+Math_sqrt((+$72)));
    $76 = $74 - $75;
    $77 = $76 / $58;
    $78 = !($77 <= 0.0);
    if ($78) {
     $79 = (HEAPF32[tempDoublePtr>>2]=$77,HEAP32[tempDoublePtr>>2]|0);
     $_28$sroa$11$0$i = $79;$_28$sroa$610$0$i = 1;
    } else {
     $_28$sroa$11$0$i = 0;$_28$sroa$610$0$i = 1;
    }
   }
  }
  HEAP32[$0>>2] = $_28$sroa$610$0$i;
  $$sroa_idx8$i = ((($0)) + 4|0);
  HEAP32[$$sroa_idx8$i>>2] = $_28$sroa$11$0$i;
  STACKTOP = sp;return;
 }
 $23 = HEAP32[$9>>2]|0;
 $24 = (FUNCTION_TABLE_ii[$23 & 511]($3)|0);
 $25 = tempRet0;
 $26 = ($24|0)==(-255454720);
 $27 = ($25|0)==(-1918276056);
 $28 = $26 & $27;
 $$$i49 = $28 ? $3 : 0;
 $29 = ((($8)) + 28|0);
 $30 = HEAP32[$29>>2]|0;
 FUNCTION_TABLE_vii[$30 & 511]($_41,$7);
 $_38$sroa$5$4$copyload = HEAP32[$_41>>2]|0;
 $switch5tmp = ($$$i49|0)==(0|0);
 $switch1tmp = ($_38$sroa$5$4$copyload|0)==(0|0);
 $or$cond38 = $switch5tmp | $switch1tmp;
 if ($or$cond38) {
  $80 = ((($4)) + 28|0);
  $81 = HEAP32[$80>>2]|0;
  FUNCTION_TABLE_vii[$81 & 511]($_52,$3);
  $82 = HEAP32[$16>>2]|0;
  $83 = (FUNCTION_TABLE_ii[$82 & 511]($7)|0);
  $84 = tempRet0;
  $85 = ($83|0)==(-255454720);
  $86 = ($84|0)==(-1918276056);
  $87 = $85 & $86;
  $$$i51 = $87 ? $7 : 0;
  $_51$sroa$0$0$copyload = HEAP32[$_52>>2]|0;
  $switch6tmp = ($_51$sroa$0$0$copyload|0)==(0|0);
  $switch2tmp = ($$$i51|0)==(0|0);
  $or$cond39 = $switch6tmp | $switch2tmp;
  if ($or$cond39) {
   $140 = HEAP32[$80>>2]|0;
   FUNCTION_TABLE_vii[$140 & 511]($_65,$3);
   $141 = HEAP32[$29>>2]|0;
   FUNCTION_TABLE_vii[$141 & 511]($_67,$7);
   $_64$sroa$0$0$copyload = HEAP32[$_65>>2]|0;
   $_64$sroa$5$0$$sroa_idx13 = ((($_65)) + 4|0);
   $_64$sroa$5$0$copyload = HEAP32[$_64$sroa$5$0$$sroa_idx13>>2]|0;
   $_64$sroa$6$8$copyload = HEAP32[$_67>>2]|0;
   $_64$sroa$9$8$$sroa_idx17 = ((($_67)) + 4|0);
   $_64$sroa$9$8$copyload = HEAP32[$_64$sroa$9$8$$sroa_idx17>>2]|0;
   $switch7tmp = ($_64$sroa$0$0$copyload|0)==(0|0);
   $switch3tmp = ($_64$sroa$6$8$copyload|0)==(0|0);
   $or$cond40 = $switch7tmp | $switch3tmp;
   L14: do {
    if ($or$cond40) {
     $188 = ((($4)) + 32|0);
     $189 = HEAP32[$188>>2]|0;
     FUNCTION_TABLE_vii[$189 & 511]($_77,$3);
     $190 = HEAP32[$_77>>2]|0;
     $switch8tmp = ($190|0)==(0|0);
     do {
      if ($switch8tmp) {
       $559 = ((($8)) + 32|0);
       $560 = HEAP32[$559>>2]|0;
       FUNCTION_TABLE_vii[$560 & 511]($_87,$7);
       $561 = HEAP32[$_87>>2]|0;
       $switch9tmp = ($561|0)==(0|0);
       if ($switch9tmp) {
        __ZN3std9panicking11begin_panic17h9936a195de5ffc4dE(10632,79,5616);
        // unreachable;
       } else {
        $564 = ((($_87)) + 4|0);
        $565 = HEAP32[$564>>2]|0;
        __ZN17ncollide_geometry5query23time_of_impact_internal29composite_shape_against_shape29composite_shape_against_shape17h6dc17f65ec92973fE($0,$5,$6,$561,$565,$1,$2,$3,$4);
        break;
       }
      } else {
       $562 = ((($_77)) + 4|0);
       $563 = HEAP32[$562>>2]|0;
       __ZN17ncollide_geometry5query23time_of_impact_internal29composite_shape_against_shape29composite_shape_against_shape17h6dc17f65ec92973fE($0,$1,$2,$190,$563,$5,$6,$7,$8);
      }
     } while(0);
    } else {
     $191 = ((($2)) + 4|0);
     $192 = +HEAPF32[$2>>2];
     $193 = +HEAPF32[$191>>2];
     $194 = ((($6)) + 4|0);
     $195 = +HEAPF32[$6>>2];
     $196 = +HEAPF32[$194>>2];
     $197 = $192 - $195;
     $198 = $193 - $196;
     $199 = -$197;
     $200 = -$198;
     __THREW__ = 0;
     $201 = (invoke_i(218)|0);
     $202 = __THREW__; __THREW__ = 0;
     $203 = $202&1;
     L24: do {
      if ($203) {
       label = 168;
      } else {
       $switch2tmp$i$i$i$i$i$i = ($201|0)==(0|0);
       if ($switch2tmp$i$i$i$i$i$i) {
        __THREW__ = 0;
        invoke_vii(219,(11189|0),57);
        $204 = __THREW__; __THREW__ = 0;
        label = 168;
        break;
       }
       $205 = ((($201)) + 4|0);
       $206 = HEAP32[$205>>2]|0;
       $switchtmp$i$i$i$i$i = ($206|0)==(0|0);
       do {
        if ($switchtmp$i$i$i$i$i) {
         $207 = (_malloc(20)|0);
         $208 = ($207|0)==(0|0);
         if ($208) {
          __THREW__ = 0;
          invoke_v(210);
          $209 = __THREW__; __THREW__ = 0;
          label = 168;
          break L24;
         }
         temp_Int32x4_ptr = $207;SIMD_Int32x4_store(HEAPU8, temp_Int32x4_ptr, SIMD_Int32x4(1,1,1,0));
         $data$i$sroa$5$0$$sroa_idx$i = ((($207)) + 16|0);
         HEAP32[$data$i$sroa$5$0$$sroa_idx$i>>2] = 0;
         $210 = $207;
         $211 = $201;
         $212 = $211;
         $213 = HEAP32[$212>>2]|0;
         $214 = (($211) + 4)|0;
         $215 = $214;
         $216 = HEAP32[$215>>2]|0;
         $217 = $201;
         $218 = $217;
         HEAP32[$218>>2] = 0;
         $219 = (($217) + 4)|0;
         $220 = $219;
         HEAP32[$220>>2] = $210;
         $221 = $_10$i$i$i$i$i$i;
         $222 = $221;
         HEAP32[$222>>2] = $213;
         $223 = (($221) + 4)|0;
         $224 = $223;
         HEAP32[$224>>2] = $216;
         $switchtmp$i$i$i$i$i$i$i = ($216|0)==(0);
         if (!($switchtmp$i$i$i$i$i$i$i)) {
          $225 = $216;
          $226 = HEAP32[$225>>2]|0;HEAP32[$225>>2] = (($226-1)|0);
          $227 = ($226|0)==(1);
          if ($227) {
           $228 = ((($_10$i$i$i$i$i$i)) + 4|0);
           /* fence */;
           __ZN33__LT_alloc__arc__Arc_LT_T_GT__GT_9drop_slow17h639b296ab3838c06E($228);
          }
         }
         $229 = HEAP32[$205>>2]|0;
         $switchtmp$i2$i$i$i$i$i$i = ($229|0)==(0|0);
         if ($switchtmp$i2$i$i$i$i$i$i) {
          __THREW__ = 0;
          invoke_vi(220,(6500|0));
          $230 = __THREW__; __THREW__ = 0;
          label = 168;
          break L24;
         } else {
          $$idx$val$i$i$i$i$i$i = $229;
          break;
         }
        } else {
         $$idx$val$i$i$i$i$i$i = $206;
        }
       } while(0);
       $231 = HEAP32[$201>>2]|0;
       $cond$i$i$i$i$i$i$i$i$i = ($231|0)==(-1);
       if ($cond$i$i$i$i$i$i$i$i$i) {
        __THREW__ = 0;
        invoke_v(221);
        $232 = __THREW__; __THREW__ = 0;
        label = 168;
        break;
       }
       $233 = (($231) + 1)|0;
       HEAP32[$201>>2] = $233;
       $$idx46$i$i$i$i$i$i = ((($$idx$val$i$i$i$i$i$i)) + 16|0);
       $$idx46$val$i$i$i$i$i$i = HEAP32[$$idx46$i$i$i$i$i$i>>2]|0;
       HEAP32[$201>>2] = $231;
       $234 = ($$idx46$val$i$i$i$i$i$i>>>0)<(3);
       do {
        if ($234) {
         __THREW__ = 0;
         $235 = (invoke_i(222)|0);
         $236 = __THREW__; __THREW__ = 0;
         $237 = $236&1;
         if ($237) {
          label = 168;
          break L24;
         }
         HEAP32[$_16$i$i$i$i$i$i>>2] = $235;
         $238 = HEAP32[$201>>2]|0;
         $cond$i$i$i56$i$i$i$i$i$i = ($238|0)==(0);
         $239 = $235;
         if (!($cond$i$i$i56$i$i$i$i$i$i)) {
          __THREW__ = 0;
          invoke_v(212);
          $240 = __THREW__; __THREW__ = 0;
          $241 = ___cxa_find_matching_catch_2()|0;
          $242 = tempRet0;
          $243 = HEAP32[$239>>2]|0;HEAP32[$239>>2] = (($243-1)|0);
          $244 = ($243|0)==(1);
          if (!($244)) {
           $personalityslot$sroa$0$0$i$i$i$i$i$i = $241;$personalityslot$sroa$9$0$i$i$i$i$i$i = $242;
           break;
          }
          /* fence */;
          __ZN33__LT_alloc__arc__Arc_LT_T_GT__GT_9drop_slow17h639b296ab3838c06E($_16$i$i$i$i$i$i);
          $personalityslot$sroa$0$0$i$i$i$i$i$i = $241;$personalityslot$sroa$9$0$i$i$i$i$i$i = $242;
          break;
         }
         HEAP32[$201>>2] = -1;
         $245 = HEAP32[$205>>2]|0;
         $246 = HEAP32[$245>>2]|0;HEAP32[$245>>2] = (($246-1)|0);
         $247 = ($246|0)==(1);
         if ($247) {
          /* fence */;
          __ZN33__LT_alloc__arc__Arc_LT_T_GT__GT_9drop_slow17h639b296ab3838c06E($205);
         }
         $$fca$0$0$0$load3845$i$i$i$i$i$i = HEAP32[$_16$i$i$i$i$i$i>>2]|0;
         HEAP32[$205>>2] = $$fca$0$0$0$load3845$i$i$i$i$i$i;
         HEAP32[$201>>2] = 0;
         $248 = $$fca$0$0$0$load3845$i$i$i$i$i$i;
         $250 = 0;$252 = $248;
         label = 46;
        } else {
         $250 = $231;$252 = $$idx$val$i$i$i$i$i$i;
         label = 46;
        }
       } while(0);
       if ((label|0) == 46) {
        $249 = (($250) + 1)|0;
        HEAP32[$201>>2] = $249;
        $251 = HEAP32[$252>>2]|0;HEAP32[$252>>2] = (($251+1)|0);
        $253 = ($251|0)<(0);
        if ($253) {
         _llvm_trap();
         // unreachable;
        }
        $254 = $252;
        HEAP32[$recursion$i$i$i$i$i$i$i>>2] = $252;
        $255 = (_malloc(24)|0);
        $256 = ($255|0)==(0|0);
        if ($256) {
         __THREW__ = 0;
         invoke_v(210);
         $257 = __THREW__; __THREW__ = 0;
         $258 = ___cxa_find_matching_catch_2()|0;
         $259 = tempRet0;
         $personalityslot$sroa$0$0$i$i$i$i$i$i$i = $258;$personalityslot$sroa$7$0$i$i$i$i$i$i$i = $259;
        } else {
         $260 = $255;
         $261 = (_malloc(24)|0);
         $262 = ($261|0)==(0|0);
         if ($262) {
          __THREW__ = 0;
          invoke_v(210);
          $263 = __THREW__; __THREW__ = 0;
          $264 = ___cxa_find_matching_catch_2()|0;
          $265 = tempRet0;
          $personalityslot$sroa$0$1$i$i$i$i$i$i$i = $264;$personalityslot$sroa$7$1$i$i$i$i$i$i$i = $265;
         } else {
          $266 = $261;
          $$idx48$i$i$i$i$i$i$i = ((($252)) + 16|0);
          $$idx48$val$i$i$i$i$i$i$i = HEAP32[$$idx48$i$i$i$i$i$i$i>>2]|0;
          $267 = ($$idx48$val$i$i$i$i$i$i$i>>>0)>(2);
          do {
           if ($267) {
            $$idx$i52$i$i$i$i$i$i = ((($252)) + 8|0);
            $$idx$val$i53$i$i$i$i$i$i = HEAP32[$$idx$i52$i$i$i$i$i$i>>2]|0;
            $269 = ((($$idx$val$i53$i$i$i$i$i$i)) + 124|0);
            $270 = HEAP32[$269>>2]|0;
            HEAP32[$arg5$i$i$i$i$i$i$i>>2] = 0;
            $271 = ((($arg5$i$i$i$i$i$i$i)) + 4|0);
            HEAP32[$271>>2] = $270;
            __THREW__ = 0;
            invoke_vii(223,($_11$i$i$i$i$i$i$i|0),($arg5$i$i$i$i$i$i$i|0));
            $272 = __THREW__; __THREW__ = 0;
            $273 = $272&1;
            if ($273) {
             break;
            }
            HEAP32[$_26$i$i$i>>2] = $254;
            $_5$sroa$0$0$$sroa_idx$i$i$i$i$i$i$i = ((($_26$i$i$i)) + 4|0);
            HEAP32[$_5$sroa$0$0$$sroa_idx$i$i$i$i$i$i$i>>2] = $260;
            $_5$sroa$5$0$$sroa_idx64$i$i$i$i$i$i$i = ((($_26$i$i$i)) + 8|0);
            HEAP32[$_5$sroa$5$0$$sroa_idx64$i$i$i$i$i$i$i>>2] = 3;
            $_5$sroa$7$0$$sroa_idx66$i$i$i$i$i$i$i = ((($_26$i$i$i)) + 12|0);
            HEAP32[$_5$sroa$7$0$$sroa_idx66$i$i$i$i$i$i$i>>2] = 0;
            $_8$sroa$0$0$$sroa_idx$i$i$i$i$i$i$i = ((($_26$i$i$i)) + 16|0);
            HEAP32[$_8$sroa$0$0$$sroa_idx$i$i$i$i$i$i$i>>2] = $266;
            $_8$sroa$5$0$$sroa_idx58$i$i$i$i$i$i$i = ((($_26$i$i$i)) + 20|0);
            HEAP32[$_8$sroa$5$0$$sroa_idx58$i$i$i$i$i$i$i>>2] = 3;
            $_8$sroa$7$0$$sroa_idx60$i$i$i$i$i$i$i = ((($_26$i$i$i)) + 24|0);
            HEAP32[$_8$sroa$7$0$$sroa_idx60$i$i$i$i$i$i$i>>2] = 0;
            $280 = ((($_26$i$i$i)) + 28|0);
            ;HEAP32[$280>>2]=HEAP32[$_11$i$i$i$i$i$i$i>>2]|0;HEAP32[$280+4>>2]=HEAP32[$_11$i$i$i$i$i$i$i+4>>2]|0;HEAP32[$280+8>>2]=HEAP32[$_11$i$i$i$i$i$i$i+8>>2]|0;
            $281 = HEAP32[$201>>2]|0;
            $282 = (($281) + -1)|0;
            HEAP32[$201>>2] = $282;
            $283 = ((($dir$i$i$i$i$i)) + 4|0);
            HEAP32[$283>>2] = 0;
            HEAPF32[$dir$i$i$i$i$i>>2] = 1.0;
            $284 = ((($tmp_ret$i$i$i$i$i$i)) + 4|0);
            $285 = ((($_14$i$i$i$i$i$i$i)) + 4|0);
            $286 = ((($tmp_ret$i$i$i$i$i$i$i)) + 4|0);
            $$idx38$i$i$i$i$i$i$i = ((($_26$i$i$i)) + 36|0);
            $$idx39$i$i$i$i$i$i$i = ((($_26$i$i$i)) + 28|0);
            $287 = ((($_26$i$i$i)) + 4|0);
            $288 = ((($_64$sroa$5$0$copyload)) + 12|0);
            $289 = ((($_64$sroa$9$8$copyload)) + 12|0);
            $$idx$val$i61$pre$i$i$i$i$i = 1.0;$$idx1$val$i$pre$i$i$i$i$i = 0.0;$566 = $255;$567 = 0;$curr_ray$sroa$0$0$ph$i$i$i$i$i = 0;$curr_ray$sroa$7$0$ph$i$i$i$i$i = 0;$ltoi$0$ph$i$i$i$i$i = 0.0;
            L69: while(1) {
             $290 = (HEAP32[tempDoublePtr>>2]=$curr_ray$sroa$0$0$ph$i$i$i$i$i,+HEAPF32[tempDoublePtr>>2]);
             $291 = (HEAP32[tempDoublePtr>>2]=$curr_ray$sroa$7$0$ph$i$i$i$i$i,+HEAPF32[tempDoublePtr>>2]);
             $292 = $$idx$val$i61$pre$i$i$i$i$i * $$idx$val$i61$pre$i$i$i$i$i;
             $293 = $$idx1$val$i$pre$i$i$i$i$i * $$idx1$val$i$pre$i$i$i$i$i;
             $294 = $293 + $292;
             $295 = (+Math_sqrt((+$294)));
             $296 = $$idx$val$i61$pre$i$i$i$i$i / $295;
             HEAPF32[$dir$i$i$i$i$i>>2] = $296;
             $297 = $$idx1$val$i$pre$i$i$i$i$i / $295;
             HEAPF32[$283>>2] = $297;
             $298 = $295 == 0.0;
             if ($298) {
              label = 158;
              break;
             } else {
              $338 = $567;$568 = $566;$old_max_bound$sroa$0$0$i114$i$i$i$i = 2139095039;
             }
             while(1) {
              $299 = HEAP32[$288>>2]|0;
              __THREW__ = 0;
              invoke_viiii($299|0,($tmp_ret$i$i$i$i$i$i|0),($_64$sroa$0$0$copyload|0),($1|0),($dir$i$i$i$i$i|0));
              $300 = __THREW__; __THREW__ = 0;
              $301 = $300&1;
              if ($301) {
               label = 146;
               break L69;
              }
              $302 = +HEAPF32[$tmp_ret$i$i$i$i$i$i>>2];
              $303 = +HEAPF32[$284>>2];
              $304 = +HEAPF32[$dir$i$i$i$i$i>>2];
              $305 = +HEAPF32[$283>>2];
              $306 = -$304;
              $307 = -$305;
              HEAPF32[$_14$i$i$i$i$i$i$i>>2] = $306;
              HEAPF32[$285>>2] = $307;
              $308 = HEAP32[$289>>2]|0;
              __THREW__ = 0;
              invoke_viiii($308|0,($tmp_ret$i$i$i$i$i$i$i|0),($_64$sroa$6$8$copyload|0),($5|0),($_14$i$i$i$i$i$i$i|0));
              $309 = __THREW__; __THREW__ = 0;
              $310 = $309&1;
              if ($310) {
               label = 146;
               break L69;
              }
              $311 = +HEAPF32[$tmp_ret$i$i$i$i$i$i$i>>2];
              $312 = +HEAPF32[$286>>2];
              $313 = $302 - $311;
              $314 = $303 - $312;
              $dir$idx32$val$i$i$i$i$i = +HEAPF32[$dir$i$i$i$i$i>>2];
              $dir$idx33$val$i$i$i$i$i = +HEAPF32[$283>>2];
              $315 = $313 - $290;
              $316 = $314 - $291;
              $317 = $315 * $dir$idx32$val$i$i$i$i$i;
              $318 = $316 * $dir$idx33$val$i$i$i$i$i;
              $319 = $317 + $318;
              $320 = $dir$idx32$val$i$i$i$i$i * $199;
              $321 = $dir$idx33$val$i$i$i$i$i * $200;
              $322 = $320 + $321;
              $323 = $319 / $322;
              $324 = !($323 >= 0.0);
              if ($324) {
               $349 = $322 > 0.0;
               if ($349) {
                label = 157;
                break L69;
               }
              } else {
               $325 = $322 < 0.0;
               $326 = $323 > 1.1920928955078125E-5;
               $or$cond$i$i$i$i$i = $325 & $326;
               if ($or$cond$i$i$i$i$i) {
                break;
               }
              }
              $350 = $315 + 0.0;
              $351 = $316 + 0.0;
              $$idx$val$i$i$i$i$i$i$i = HEAP32[$_5$sroa$5$0$$sroa_idx64$i$i$i$i$i$i$i>>2]|0;
              $352 = ($338|0)==($$idx$val$i$i$i$i$i$i$i|0);
              if ($352) {
               __THREW__ = 0;
               invoke_vi(224,($_5$sroa$0$0$$sroa_idx$i$i$i$i$i$i$i|0));
               $353 = __THREW__; __THREW__ = 0;
               $354 = $353&1;
               if ($354) {
                label = 146;
                break L69;
               }
               $$pre$i$i40$i$i$i$i$i = HEAP32[$_5$sroa$7$0$$sroa_idx66$i$i$i$i$i$i$i>>2]|0;
               $357 = $$pre$i$i40$i$i$i$i$i;
              } else {
               $357 = $338;
              }
              $355 = HEAP32[$_5$sroa$0$0$$sroa_idx$i$i$i$i$i$i$i>>2]|0;
              $356 = (($355) + ($357<<3)|0);
              HEAPF32[$356>>2] = $350;
              $358 = (((($355) + ($357<<3)|0)) + 4|0);
              HEAPF32[$358>>2] = $351;
              $359 = (($357) + 1)|0;
              HEAP32[$_5$sroa$7$0$$sroa_idx66$i$i$i$i$i$i$i>>2] = $359;
              $360 = ($359>>>0)>(3);
              if ($360) {
               label = 78;
               break L69;
              }
              L84: do {
               switch ($357|0) {
               case -1:  {
                label = 80;
                break L69;
                break;
               }
               case 0:  {
                $$idx26$val218$i$i$i$i$i$i$i = HEAP32[$355>>2]|0;
                $$idx27$i$i$i$i$i$i$i = ((($355)) + 4|0);
                $$idx27$val219$i$i$i$i$i$i$i = HEAP32[$$idx27$i$i$i$i$i$i$i>>2]|0;
                $tmp_ret27$sroa$0$0$i$i$i$i$i = $$idx26$val218$i$i$i$i$i$i$i;$tmp_ret27$sroa$4$0$i$i$i$i$i = $$idx27$val219$i$i$i$i$i$i$i;
                break;
               }
               default: {
                $$idx35$val$i$i$i$i$i$i$i = HEAP32[$_26$i$i$i>>2]|0;
                $$idx37$i$i$i$i$i$i$i = ((($$idx35$val$i$i$i$i$i$i$i)) + 16|0);
                $$idx37$val$i$i$i$i$i$i$i = HEAP32[$$idx37$i$i$i$i$i$i$i>>2]|0;
                $363 = ($$idx37$val$i$i$i$i$i$i$i>>>0)>($357>>>0);
                if (!($363)) {
                 label = 83;
                 break L69;
                }
                $$idx36$i$i$i$i$i$i$i = ((($$idx35$val$i$i$i$i$i$i$i)) + 8|0);
                $$idx36$val$i$i$i$i$i$i$i = HEAP32[$$idx36$i$i$i$i$i$i$i>>2]|0;
                $365 = (($$idx36$val$i$i$i$i$i$i$i) + (($357*44)|0)|0);
                $$idx38$val$i$i$i$i$i$i$i = HEAP32[$$idx38$i$i$i$i$i$i$i>>2]|0;
                $366 = (((($$idx36$val$i$i$i$i$i$i$i) + (($357*44)|0)|0)) + 36|0);
                $367 = HEAP32[$366>>2]|0;
                $368 = (($367) - ($359))|0;
                $369 = ($$idx38$val$i$i$i$i$i$i$i>>>0)<($368>>>0);
                if ($369) {
                 label = 85;
                 break L69;
                }
                $$idx39$val$i$i$i$i$i$i$i = HEAP32[$$idx39$i$i$i$i$i$i$i>>2]|0;
                $371 = (($$idx39$val$i$i$i$i$i$i$i) + ($368<<2)|0);
                $372 = (($$idx38$val$i$i$i$i$i$i$i) - ($368))|0;
                $373 = (($371) + ($372<<2)|0);
                $374 = ($372|0)==(0);
                $switchtmp290$i$i$i$i$i$i$i = ($371|0)==(0|0);
                $or$cond291$i$i$i$i$i$i$i = $374 | $switchtmp290$i$i$i$i$i$i$i;
                L88: do {
                 if (!($or$cond291$i$i$i$i$i$i$i)) {
                  $375 = (($357) + ($$idx38$val$i$i$i$i$i$i$i))|0;
                  $376 = (($375) - ($367))|0;
                  $377 = $376 & 1073741823;
                  $378 = (($377) + 1)|0;
                  $min$iters$check = ($378>>>0)<(4);
                  do {
                   if ($min$iters$check) {
                    $iter$sroa$0$0$in292$i$i$i$i$i$i$i = $371;
                   } else {
                    $fold = (($376) + 1)|0;
                    $n$mod$vf = $fold & 3;
                    $n$vec = (($378) - ($n$mod$vf))|0;
                    $cmp$zero = ($n$vec|0)==(0);
                    $ind$end = (($371) + ($n$vec<<2)|0);
                    if ($cmp$zero) {
                     $iter$sroa$0$0$in292$i$i$i$i$i$i$i = $371;
                     break;
                    } else {
                     $index = 0;
                    }
                    while(1) {
                     $next$gep = (($371) + ($index<<2)|0);
                     temp_Float32x4_ptr = $next$gep;SIMD_Float32x4_store(HEAPU8, temp_Float32x4_ptr, SIMD_Float32x4_splat(Math_fround(1.0)));
                     $index$next = (($index) + 4)|0;
                     $379 = ($index$next|0)==($n$vec|0);
                     if ($379) {
                      break;
                     } else {
                      $index = $index$next;
                     }
                    }
                    $cmp$n = ($n$mod$vf|0)==(0);
                    if ($cmp$n) {
                     break L88;
                    } else {
                     $iter$sroa$0$0$in292$i$i$i$i$i$i$i = $ind$end;
                    }
                   }
                  } while(0);
                  while(1) {
                   $383 = ((($iter$sroa$0$0$in292$i$i$i$i$i$i$i)) + 4|0);
                   HEAPF32[$iter$sroa$0$0$in292$i$i$i$i$i$i$i>>2] = 1.0;
                   $384 = ($383|0)==($373|0);
                   if ($384) {
                    break;
                   } else {
                    $iter$sroa$0$0$in292$i$i$i$i$i$i$i = $383;
                   }
                  }
                 }
                } while(0);
                $$idx42$i$i$i$i$i$i$i = (((($$idx36$val$i$i$i$i$i$i$i) + (($357*44)|0)|0)) + 12|0);
                $$idx43$i$i$i$i$i$i$i = (((($$idx36$val$i$i$i$i$i$i$i) + (($357*44)|0)|0)) + 20|0);
                $$idx43$val$i$i$i$i$i$i$i = HEAP32[$$idx43$i$i$i$i$i$i$i>>2]|0;
                $380 = ($$idx43$val$i$i$i$i$i$i$i>>>0)<(2);
                if ($380) {
                 label = 92;
                 break L69;
                }
                $$idx42$val$i$i$i$i$i$i$i = HEAP32[$$idx42$i$i$i$i$i$i$i>>2]|0;
                $$ptr293$i$i$i$i$i$i$i = (($$idx42$val$i$i$i$i$i$i$i) + ($$idx43$val$i$i$i$i$i$i$i<<2)|0);
                $382 = ($$idx43$val$i$i$i$i$i$i$i|0)==(2);
                if ($382) {
                 $$idx54$val$i$i$i$i$i$i$i = $$idx42$val$i$i$i$i$i$i$i;$$idx55$val$i$i$i$i$i$i$i = 2;$curr$0$lcssa$i$i$i$i$i$i$i = $359;$curr_num_pts$0$lcssa$i$i$i$i$i$i$i = 1;
                } else {
                 $$ptr$i$i$i$i$i$i$i = ((($$idx42$val$i$i$i$i$i$i$i)) + 8|0);
                 $$idx56$i$i$i$i$i$i$i = (((($$idx36$val$i$i$i$i$i$i$i) + (($357*44)|0)|0)) + 24|0);
                 $curr$0285$i$i$i$i$i$i$i = $359;$indvars$iv$i$i$i$i$i$i$i = 1;$indvars$iv312$i$i$i$i$i$i$i = 2;$iter2$sroa$0$0$in284$i$i$i$i$i$i$i = $$ptr$i$i$i$i$i$i$i;
                 while(1) {
                  $385 = ((($iter2$sroa$0$0$in284$i$i$i$i$i$i$i)) + 4|0);
                  $386 = HEAP32[$iter2$sroa$0$0$in284$i$i$i$i$i$i$i>>2]|0;
                  $387 = ($curr$0285$i$i$i$i$i$i$i|0)==($386|0);
                  $$pre332$i$i$i$i$i$i$i = (($indvars$iv$i$i$i$i$i$i$i) + 1)|0;
                  if ($387) {
                   $curr$1$lcssa$i$i$i$i$i$i$i = $curr$0285$i$i$i$i$i$i$i;
                  } else {
                   $$idx66$val$i$i$i$i$i$i$i = HEAP32[$$idx39$i$i$i$i$i$i$i>>2]|0;
                   $curr$0285$pn$i$i$i$i$i$i$i = $curr$0285$i$i$i$i$i$i$i;
                   while(1) {
                    $indvars$iv316$i$i$i$i$i$i$i = (($curr$0285$pn$i$i$i$i$i$i$i) + ($indvars$iv312$i$i$i$i$i$i$i))|0;
                    $$idx64$val$i$i$i$i$i$i$i = HEAP32[$365>>2]|0;
                    $398 = (($curr$0285$pn$i$i$i$i$i$i$i) + 1)|0;
                    $399 = (($$idx64$val$i$i$i$i$i$i$i) + ($398<<2)|0);
                    $400 = HEAP32[$399>>2]|0;
                    $401 = (($$idx64$val$i$i$i$i$i$i$i) + ($curr$0285$pn$i$i$i$i$i$i$i<<2)|0);
                    $402 = HEAP32[$401>>2]|0;
                    $403 = (($398) + ($indvars$iv$i$i$i$i$i$i$i))|0;
                    $404 = ($398>>>0)<($403>>>0);
                    do {
                     if ($404) {
                      $$idx31$i$i$i$i$i$i$i = (((($355) + ($402<<3)|0)) + 4|0);
                      $$idx31$val226227$i$i$i$i$i$i$i = +HEAPF32[$$idx31$i$i$i$i$i$i$i>>2];
                      $$idx30$i$i$i$i$i$i$i = (($355) + ($402<<3)|0);
                      $$idx30$val224225$i$i$i$i$i$i$i = +HEAPF32[$$idx30$i$i$i$i$i$i$i>>2];
                      $$idx33$i$i$i$i$i$i$i = (((($355) + ($400<<3)|0)) + 4|0);
                      $$idx33$val222223$i$i$i$i$i$i$i = +HEAPF32[$$idx33$i$i$i$i$i$i$i>>2];
                      $$idx32$i$i$i$i$i$i$i = (($355) + ($400<<3)|0);
                      $$idx32$val220221$i$i$i$i$i$i$i = +HEAPF32[$$idx32$i$i$i$i$i$i$i>>2];
                      $$idx58$val$i$i$i$i$i$i$i = HEAP32[$$idx56$i$i$i$i$i$i$i>>2]|0;
                      $405 = $$idx32$val220221$i$i$i$i$i$i$i - $$idx30$val224225$i$i$i$i$i$i$i;
                      $406 = $$idx33$val222223$i$i$i$i$i$i$i - $$idx31$val226227$i$i$i$i$i$i$i;
                      $407 = (($curr$0285$pn$i$i$i$i$i$i$i) + 2)|0;
                      $408 = (($$idx58$val$i$i$i$i$i$i$i) + ($398<<2)|0);
                      $409 = HEAP32[$408>>2]|0;
                      $410 = (($$idx66$val$i$i$i$i$i$i$i) + ($409<<2)|0);
                      $$val19$i11$i$i$i$i$i$i = +HEAPF32[$410>>2];
                      $411 = $$idx32$val220221$i$i$i$i$i$i$i * $405;
                      $412 = $$idx33$val222223$i$i$i$i$i$i$i * $406;
                      $413 = $412 + $411;
                      $414 = $413 * $$val19$i11$i$i$i$i$i$i;
                      $415 = $414 + 0.0;
                      $exitcond318$i12$i$i$i$i$i$i = ($407|0)==($indvars$iv316$i$i$i$i$i$i$i|0);
                      if ($exitcond318$i12$i$i$i$i$i$i) {
                       $$idx56$val$i$i$i$i$i$i$i = $$idx58$val$i$i$i$i$i$i$i;$determinant$0$lcssa$i$i$i$i$i$i$i = $415;
                       break;
                      } else {
                       $420 = $407;$430 = $415;
                      }
                      while(1) {
                       $$phi$trans$insert$i$i$i$i$i$i$i = (($$idx64$val$i$i$i$i$i$i$i) + ($420<<2)|0);
                       $$pre$i$i$i$i$i$i$i = HEAP32[$$phi$trans$insert$i$i$i$i$i$i$i>>2]|0;
                       $$idx$phi$trans$insert$i$i$i$i$i$i$i = (($355) + ($$pre$i$i$i$i$i$i$i<<3)|0);
                       $$idx$val$pre$i$i$i$i$i$i$i = +HEAPF32[$$idx$phi$trans$insert$i$i$i$i$i$i$i>>2];
                       $$phi$trans$insert320$i$i$i$i$i$i$i = (((($355) + ($$pre$i$i$i$i$i$i$i<<3)|0)) + 4|0);
                       $$idx25$val$pre$i$i$i$i$i$i$i = +HEAPF32[$$phi$trans$insert320$i$i$i$i$i$i$i>>2];
                       $421 = (($420) + 1)|0;
                       $422 = (($$idx58$val$i$i$i$i$i$i$i) + ($420<<2)|0);
                       $423 = HEAP32[$422>>2]|0;
                       $424 = (($$idx66$val$i$i$i$i$i$i$i) + ($423<<2)|0);
                       $$val19$i$i$i$i$i$i$i = +HEAPF32[$424>>2];
                       $425 = $405 * $$idx$val$pre$i$i$i$i$i$i$i;
                       $426 = $406 * $$idx25$val$pre$i$i$i$i$i$i$i;
                       $427 = $425 + $426;
                       $428 = $427 * $$val19$i$i$i$i$i$i$i;
                       $429 = $430 + $428;
                       $exitcond318$i$i$i$i$i$i$i = ($421|0)==($indvars$iv316$i$i$i$i$i$i$i|0);
                       if ($exitcond318$i$i$i$i$i$i$i) {
                        $$idx56$val$i$i$i$i$i$i$i = $$idx58$val$i$i$i$i$i$i$i;$determinant$0$lcssa$i$i$i$i$i$i$i = $429;
                        break;
                       } else {
                        $420 = $421;$430 = $429;
                       }
                      }
                     } else {
                      $$idx56$val$pre$i$i$i$i$i$i$i = HEAP32[$$idx56$i$i$i$i$i$i$i>>2]|0;
                      $$idx56$val$i$i$i$i$i$i$i = $$idx56$val$pre$i$i$i$i$i$i$i;$determinant$0$lcssa$i$i$i$i$i$i$i = 0.0;
                     }
                    } while(0);
                    $416 = (($$idx56$val$i$i$i$i$i$i$i) + ($curr$0285$pn$i$i$i$i$i$i$i<<2)|0);
                    $417 = HEAP32[$416>>2]|0;
                    $418 = (($$idx66$val$i$i$i$i$i$i$i) + ($417<<2)|0);
                    HEAPF32[$418>>2] = $determinant$0$lcssa$i$i$i$i$i$i$i;
                    $419 = ($indvars$iv316$i$i$i$i$i$i$i|0)==($386|0);
                    if ($419) {
                     $curr$1$lcssa$i$i$i$i$i$i$i = $386;
                     break;
                    } else {
                     $curr$0285$pn$i$i$i$i$i$i$i = $indvars$iv316$i$i$i$i$i$i$i;
                    }
                   }
                  }
                  $397 = ($385|0)==($$ptr293$i$i$i$i$i$i$i|0);
                  $indvars$iv$next313$i$i$i$i$i$i$i = (($indvars$iv312$i$i$i$i$i$i$i) + 1)|0;
                  if ($397) {
                   break;
                  } else {
                   $curr$0285$i$i$i$i$i$i$i = $curr$1$lcssa$i$i$i$i$i$i$i;$indvars$iv$i$i$i$i$i$i$i = $$pre332$i$i$i$i$i$i$i;$indvars$iv312$i$i$i$i$i$i$i = $indvars$iv$next313$i$i$i$i$i$i$i;$iter2$sroa$0$0$in284$i$i$i$i$i$i$i = $385;
                  }
                 }
                 $388 = $$idx43$val$i$i$i$i$i$i$i << 2;
                 $389 = (($388) + -12)|0;
                 $390 = $389 >>> 2;
                 $391 = (($390) + 2)|0;
                 $$idx54$val$pre$i$i$i$i$i$i$i = HEAP32[$$idx42$i$i$i$i$i$i$i>>2]|0;
                 $$idx55$val$pre$i$i$i$i$i$i$i = HEAP32[$$idx43$i$i$i$i$i$i$i>>2]|0;
                 $$idx54$val$i$i$i$i$i$i$i = $$idx54$val$pre$i$i$i$i$i$i$i;$$idx55$val$i$i$i$i$i$i$i = $$idx55$val$pre$i$i$i$i$i$i$i;$curr$0$lcssa$i$i$i$i$i$i$i = $curr$1$lcssa$i$i$i$i$i$i$i;$curr_num_pts$0$lcssa$i$i$i$i$i$i$i = $391;
                }
                $392 = (($$idx54$val$i$i$i$i$i$i$i) + ($$idx55$val$i$i$i$i$i$i$i<<2)|0);
                $393 = ($$idx55$val$i$i$i$i$i$i$i|0)==(0);
                $394 = ((($392)) + -4|0);
                $offsets_iter$sroa$6$0$v$i$i$i$i$i$i$i = $393 ? $392 : $394;
                $395 = ($offsets_iter$sroa$6$0$v$i$i$i$i$i$i$i|0)==($$idx54$val$i$i$i$i$i$i$i|0);
                if ($395) {
                 $tmp_ret27$sroa$0$0$i$i$i$i$i = 0;$tmp_ret27$sroa$4$0$i$i$i$i$i = 0;
                 break L84;
                }
                $$idx52$i$i$i$i$i$i$i = (((($$idx36$val$i$i$i$i$i$i$i) + (($357*44)|0)|0)) + 24|0);
                $396 = (($curr_num_pts$0$lcssa$i$i$i$i$i$i$i) + 1)|0;
                $curr$2271$i$i$i$i$i$i$i = $curr$0$lcssa$i$i$i$i$i$i$i;$curr_num_pts$1272$i$i$i$i$i$i$i = $curr_num_pts$0$lcssa$i$i$i$i$i$i$i;$indvars$iv309$i$i$i$i$i$i$i = $396;$iter6$sroa$5$0$in270$i$i$i$i$i$i$i = $offsets_iter$sroa$6$0$v$i$i$i$i$i$i$i;
                L117: while(1) {
                 $431 = ((($iter6$sroa$5$0$in270$i$i$i$i$i$i$i)) + -4|0);
                 $432 = HEAP32[$431>>2]|0;
                 $433 = ($curr$2271$i$i$i$i$i$i$i|0)==($432|0);
                 L119: do {
                  if ($433) {
                   $curr$3$lcssa$i$i$i$i$i$i$i = $curr$2271$i$i$i$i$i$i$i;
                  } else {
                   $434 = Math_imul($curr_num_pts$1272$i$i$i$i$i$i$i, $curr_num_pts$1272$i$i$i$i$i$i$i)|0;
                   switch ($curr_num_pts$1272$i$i$i$i$i$i$i|0) {
                   case 0:  {
                    $proj$sroa$0$0$lcssa335$i$i$i$i$i$i$i = 0.0;$proj$sroa$6$0$lcssa337$i$i$i$i$i$i$i = 0.0;$total_det$0$lcssa339$i$i$i$i$i$i$i = 0.0;
                    break L117;
                    break;
                   }
                   case 1:  {
                    $$idx68$val$us253$pre$i$pre$i$i$i$i$i$i = HEAP32[$$idx39$i$i$i$i$i$i$i>>2]|0;
                    $$idx52$val$us254$pre$i$pre$i$i$i$i$i$i = HEAP32[$$idx52$i$i$i$i$i$i$i>>2]|0;
                    $curr$3245$us$i$i$i$i$i$i$i = $curr$2271$i$i$i$i$i$i$i;
                    while(1) {
                     $$neg$i$i$i$i$i = (($curr$3245$us$i$i$i$i$i$i$i) + -1)|0;
                     $459 = 1;$foundit$0$off0241$us251$i$i$i$i$i$i$i = 1;$iter8$sroa$0$0240$us252$i$i$i$i$i$i$i = 0;
                     while(1) {
                      $453 = (($$neg$i$i$i$i$i) - ($iter8$sroa$0$0240$us252$i$i$i$i$i$i$i))|0;
                      $454 = (($$idx52$val$us254$pre$i$pre$i$i$i$i$i$i) + ($453<<2)|0);
                      $455 = HEAP32[$454>>2]|0;
                      $456 = (($$idx68$val$us253$pre$i$pre$i$i$i$i$i$i) + ($455<<2)|0);
                      $$val18$us255$i$i$i$i$i$i$i = +HEAPF32[$456>>2];
                      $457 = $$val18$us255$i$i$i$i$i$i$i > 0.0;
                      if ($457) {
                       $not$$us261$i$i$i$i$i$i$i = $$val18$us255$i$i$i$i$i$i$i != 3.4028234663852886E+38;
                       $$foundit$0$off0$us262$i$i$i$i$i$i$i = $foundit$0$off0241$us251$i$i$i$i$i$i$i & $not$$us261$i$i$i$i$i$i$i;
                       $foundit$0$off0$be$us264$i$i$i$i$i$i$i = $$foundit$0$off0$us262$i$i$i$i$i$i$i;
                      } else {
                       $foundit$0$off0$be$us264$i$i$i$i$i$i$i = 0;
                      }
                      $458 = (($459) + 1)|0;
                      $exitcond308$i$i$i$i$i$i$i = ($458|0)==($indvars$iv309$i$i$i$i$i$i$i|0);
                      if ($exitcond308$i$i$i$i$i$i$i) {
                       break;
                      } else {
                       $iter8$sroa$0$0240$us252$i$i$i$i$i$i$i$phi = $459;$459 = $458;$foundit$0$off0241$us251$i$i$i$i$i$i$i = $foundit$0$off0$be$us264$i$i$i$i$i$i$i;$iter8$sroa$0$0240$us252$i$i$i$i$i$i$i = $iter8$sroa$0$0240$us252$i$i$i$i$i$i$i$phi;
                      }
                     }
                     if ($foundit$0$off0$be$us264$i$i$i$i$i$i$i) {
                      $$idx48$val$i$i$i$i11$i$i$i = $$idx52$val$us254$pre$i$pre$i$i$i$i$i$i;$$idx72$val$i$i$i$i$i$i$i = $$idx68$val$us253$pre$i$pre$i$i$i$i$i$i;$curr$3245$us$i$lcssa$i$i$i$i$i$i = $curr$3245$us$i$i$i$i$i$i$i;$curr_num_pts$1272$i27$i$i$i$i$i$i = 1;
                      label = 127;
                      break L117;
                     }
                     $451 = (($curr$3245$us$i$i$i$i$i$i$i) - ($434))|0;
                     $452 = ($451|0)==($432|0);
                     if ($452) {
                      $curr$3$lcssa$i$i$i$i$i$i$i = $432;
                      break L119;
                     } else {
                      $curr$3245$us$i$i$i$i$i$i$i = $451;
                     }
                    }
                    break;
                   }
                   default: {
                   }
                   }
                   $$idx68$val$us$us$i$us$i$i$i$i$i$i = HEAP32[$$idx39$i$i$i$i$i$i$i>>2]|0;
                   $curr$3245$us$i$us$i$i$i$i$i$i = $curr$2271$i$i$i$i$i$i$i;
                   while(1) {
                    $448 = 1;$foundit$0$off0241$us$us$i$us$i$i$i$i$i$i = 1;$iter8$sroa$0$0240$us$us$i$us$i$i$i$i$i$i = 0;
                    while(1) {
                     $435 = (($iter8$sroa$0$0240$us$us$i$us$i$i$i$i$i$i) + 1)|0;
                     $436 = Math_imul($435, $curr_num_pts$1272$i$i$i$i$i$i$i)|0;
                     $437 = (($curr$3245$us$i$us$i$i$i$i$i$i) - ($436))|0;
                     $$idx52$val$us$us$i$us$i$i$i$i$i$i = HEAP32[$$idx52$i$i$i$i$i$i$i>>2]|0;
                     $438 = (($$idx52$val$us$us$i$us$i$i$i$i$i$i) + ($437<<2)|0);
                     $439 = HEAP32[$438>>2]|0;
                     $440 = (($$idx68$val$us$us$i$us$i$i$i$i$i$i) + ($439<<2)|0);
                     $$val18$us$us$i$us$i$i$i$i$i$i = +HEAPF32[$440>>2];
                     $441 = $$val18$us$us$i$us$i$i$i$i$i$i > 0.0;
                     if ($441) {
                      $442 = (($437) + 1)|0;
                      $443 = (($$idx52$val$us$us$i$us$i$i$i$i$i$i) + ($442<<2)|0);
                      $444 = HEAP32[$443>>2]|0;
                      $445 = (($$idx68$val$us$us$i$us$i$i$i$i$i$i) + ($444<<2)|0);
                      $$val$us$us$i$us$i$i$i$i$i$i = +HEAPF32[$445>>2];
                      $446 = $$val$us$us$i$us$i$i$i$i$i$i > 0.0;
                      if ($446) {
                       HEAPF32[$445>>2] = 3.4028234663852886E+38;
                      }
                      $not$$us$us$i$us$i$i$i$i$i$i = $$val18$us$us$i$us$i$i$i$i$i$i != 3.4028234663852886E+38;
                      $$foundit$0$off0$us$us$i$us$i$i$i$i$i$i = $foundit$0$off0241$us$us$i$us$i$i$i$i$i$i & $not$$us$us$i$us$i$i$i$i$i$i;
                      $foundit$0$off0$be$us$us$i$us$i$i$i$i$i$i = $$foundit$0$off0$us$us$i$us$i$i$i$i$i$i;
                     } else {
                      $foundit$0$off0$be$us$us$i$us$i$i$i$i$i$i = 0;
                     }
                     $447 = (($448) + 1)|0;
                     $exitcond311$i$us$i$i$i$i$i$i = ($447|0)==($indvars$iv309$i$i$i$i$i$i$i|0);
                     if ($exitcond311$i$us$i$i$i$i$i$i) {
                      break;
                     } else {
                      $iter8$sroa$0$0240$us$us$i$us$i$i$i$i$i$i$phi = $448;$448 = $447;$foundit$0$off0241$us$us$i$us$i$i$i$i$i$i = $foundit$0$off0$be$us$us$i$us$i$i$i$i$i$i;$iter8$sroa$0$0240$us$us$i$us$i$i$i$i$i$i = $iter8$sroa$0$0240$us$us$i$us$i$i$i$i$i$i$phi;
                     }
                    }
                    if ($foundit$0$off0$be$us$us$i$us$i$i$i$i$i$i) {
                     label = 126;
                     break L117;
                    }
                    $449 = (($curr$3245$us$i$us$i$i$i$i$i$i) - ($434))|0;
                    $450 = ($449|0)==($432|0);
                    if ($450) {
                     $curr$3$lcssa$i$i$i$i$i$i$i = $432;
                     break;
                    } else {
                     $curr$3245$us$i$us$i$i$i$i$i$i = $449;
                    }
                   }
                  }
                 } while(0);
                 $460 = (($curr_num_pts$1272$i$i$i$i$i$i$i) + -1)|0;
                 $461 = ($431|0)==($$idx54$val$i$i$i$i$i$i$i|0);
                 $indvars$iv$next310$i$i$i$i$i$i$i = (($indvars$iv309$i$i$i$i$i$i$i) + -1)|0;
                 if ($461) {
                  $tmp_ret27$sroa$0$0$i$i$i$i$i = 0;$tmp_ret27$sroa$4$0$i$i$i$i$i = 0;
                  break L84;
                 } else {
                  $curr$2271$i$i$i$i$i$i$i = $curr$3$lcssa$i$i$i$i$i$i$i;$curr_num_pts$1272$i$i$i$i$i$i$i = $460;$indvars$iv309$i$i$i$i$i$i$i = $indvars$iv$next310$i$i$i$i$i$i$i;$iter6$sroa$5$0$in270$i$i$i$i$i$i$i = $431;
                 }
                }
                if ((label|0) == 126) {
                 label = 0;
                 $$idx48$val$i$i$pre$i$i$i$i$i = HEAP32[$$idx52$i$i$i$i$i$i$i>>2]|0;
                 $$idx48$val$i$i$i$i11$i$i$i = $$idx48$val$i$i$pre$i$i$i$i$i;$$idx72$val$i$i$i$i$i$i$i = $$idx68$val$us$us$i$us$i$i$i$i$i$i;$curr$3245$us$i$lcssa$i$i$i$i$i$i = $curr$3245$us$i$us$i$i$i$i$i$i;$curr_num_pts$1272$i27$i$i$i$i$i$i = $curr_num_pts$1272$i$i$i$i$i$i$i;
                 label = 127;
                }
                L148: do {
                 if ((label|0) == 127) {
                  label = 0;
                  $$idx46$val$i$i$i$i$i$i$i = HEAP32[$365>>2]|0;
                  $iter10$sroa$0$0234$i$i$i$i$i$i$i = 0;$proj$sroa$0$0235$i$i$i$i$i$i$i = 0.0;$proj$sroa$6$0236$i$i$i$i$i$i$i = 0.0;$total_det$0237$i$i$i$i$i$i$i = 0.0;
                  while(1) {
                   $462 = (($iter10$sroa$0$0234$i$i$i$i$i$i$i) + 1)|0;
                   $463 = Math_imul($462, $curr_num_pts$1272$i27$i$i$i$i$i$i)|0;
                   $464 = (($curr$3245$us$i$lcssa$i$i$i$i$i$i) - ($463))|0;
                   $465 = (($$idx48$val$i$i$i$i11$i$i$i) + ($464<<2)|0);
                   $466 = HEAP32[$465>>2]|0;
                   $467 = (($$idx72$val$i$i$i$i$i$i$i) + ($466<<2)|0);
                   $$val17$i$i$i$i$i$i$i = +HEAPF32[$467>>2];
                   $468 = $total_det$0237$i$i$i$i$i$i$i + $$val17$i$i$i$i$i$i$i;
                   $469 = (($$idx46$val$i$i$i$i$i$i$i) + ($464<<2)|0);
                   $470 = HEAP32[$469>>2]|0;
                   $$idx75$i$i$i$i$i$i$i = (($355) + ($470<<3)|0);
                   $$idx75$val$i$i$i$i$i$i$i = +HEAPF32[$$idx75$i$i$i$i$i$i$i>>2];
                   $$idx76$i$i$i$i$i$i$i = (((($355) + ($470<<3)|0)) + 4|0);
                   $$idx76$val$i$i$i$i$i$i$i = +HEAPF32[$$idx76$i$i$i$i$i$i$i>>2];
                   $471 = $$val17$i$i$i$i$i$i$i * $$idx75$val$i$i$i$i$i$i$i;
                   $472 = $proj$sroa$0$0235$i$i$i$i$i$i$i + $471;
                   $473 = $$val17$i$i$i$i$i$i$i * $$idx76$val$i$i$i$i$i$i$i;
                   $474 = $proj$sroa$6$0236$i$i$i$i$i$i$i + $473;
                   $exitcond307$i$i$i$i$i$i$i = ($462|0)==($curr_num_pts$1272$i27$i$i$i$i$i$i|0);
                   if ($exitcond307$i$i$i$i$i$i$i) {
                    break;
                   } else {
                    $iter10$sroa$0$0234$i$i$i$i$i$i$i = $462;$proj$sroa$0$0235$i$i$i$i$i$i$i = $472;$proj$sroa$6$0236$i$i$i$i$i$i$i = $474;$total_det$0237$i$i$i$i$i$i$i = $468;
                   }
                  }
                  $$pre328$i$i$i$i$i$i$i = HEAP32[$_8$sroa$7$0$$sroa_idx60$i$i$i$i$i$i$i>>2]|0;
                  $$idx44$val$i$i$i$i$i$i$i = $$idx46$val$i$i$i$i$i$i$i;$$idx90$val$i$i$i$i$i$i$i = $355;$487 = $$pre328$i$i$i$i$i$i$i;$496 = 1;$iter13$sroa$0$0233$i$i$i$i$i$i$i = 0;
                  while(1) {
                   $481 = (($iter13$sroa$0$0233$i$i$i$i$i$i$i) + 1)|0;
                   $482 = Math_imul($481, $curr_num_pts$1272$i27$i$i$i$i$i$i)|0;
                   $483 = (($curr$3245$us$i$lcssa$i$i$i$i$i$i) - ($482))|0;
                   $484 = (($$idx44$val$i$i$i$i$i$i$i) + ($483<<2)|0);
                   $485 = HEAP32[$484>>2]|0;
                   $486 = (($$idx90$val$i$i$i$i$i$i$i) + ($485<<3)|0);
                   $$idx28$val228$i$i$i$i$i$i$i = HEAP32[$486>>2]|0;
                   $$idx29$i$i$i$i$i$i$i = (((($$idx90$val$i$i$i$i$i$i$i) + ($485<<3)|0)) + 4|0);
                   $$idx29$val229$i$i$i$i$i$i$i = HEAP32[$$idx29$i$i$i$i$i$i$i>>2]|0;
                   $$idx$val$i$i$i$i$i$i$i$i = HEAP32[$_8$sroa$5$0$$sroa_idx58$i$i$i$i$i$i$i>>2]|0;
                   $488 = ($487|0)==($$idx$val$i$i$i$i$i$i$i$i|0);
                   if ($488) {
                    __THREW__ = 0;
                    invoke_vi(224,($_8$sroa$0$0$$sroa_idx$i$i$i$i$i$i$i|0));
                    $489 = __THREW__; __THREW__ = 0;
                    $490 = $489&1;
                    if ($490) {
                     label = 145;
                     break L69;
                    }
                    $$pre$i$i$i$i$i$i$i$i = HEAP32[$_8$sroa$7$0$$sroa_idx60$i$i$i$i$i$i$i>>2]|0;
                    $493 = $$pre$i$i$i$i$i$i$i$i;
                   } else {
                    $493 = $487;
                   }
                   $491 = HEAP32[$_8$sroa$0$0$$sroa_idx$i$i$i$i$i$i$i>>2]|0;
                   $492 = (($491) + ($493<<3)|0);
                   HEAP32[$492>>2] = $$idx28$val228$i$i$i$i$i$i$i;
                   $494 = (((($491) + ($493<<3)|0)) + 4|0);
                   HEAP32[$494>>2] = $$idx29$val229$i$i$i$i$i$i$i;
                   $495 = (($493) + 1)|0;
                   HEAP32[$_8$sroa$7$0$$sroa_idx60$i$i$i$i$i$i$i>>2] = $495;
                   $exitcond$i$i$i$i$i$i$i = ($496|0)==($curr_num_pts$1272$i27$i$i$i$i$i$i|0);
                   if ($exitcond$i$i$i$i$i$i$i) {
                    $proj$sroa$0$0$lcssa335$i$i$i$i$i$i$i = $472;$proj$sroa$6$0$lcssa337$i$i$i$i$i$i$i = $474;$total_det$0$lcssa339$i$i$i$i$i$i$i = $468;
                    break L148;
                   }
                   $497 = (($496) + 1)|0;
                   $$idx90$val$i$pre$i$i$i$i$i$i = HEAP32[$_5$sroa$0$0$$sroa_idx$i$i$i$i$i$i$i>>2]|0;
                   $$idx44$val$i$pre$i$i$i$i$i$i = HEAP32[$365>>2]|0;
                   $iter13$sroa$0$0233$i$i$i$i$i$i$i$phi = $496;$$idx44$val$i$i$i$i$i$i$i = $$idx44$val$i$pre$i$i$i$i$i$i;$$idx90$val$i$i$i$i$i$i$i = $$idx90$val$i$pre$i$i$i$i$i$i;$487 = $495;$496 = $497;$iter13$sroa$0$0233$i$i$i$i$i$i$i = $iter13$sroa$0$0233$i$i$i$i$i$i$i$phi;
                  }
                 }
                } while(0);
                ;HEAP32[$t$i$i$i$i$i$i$i$i>>2]=HEAP32[$_8$sroa$0$0$$sroa_idx$i$i$i$i$i$i$i>>2]|0;HEAP32[$t$i$i$i$i$i$i$i$i+4>>2]=HEAP32[$_8$sroa$0$0$$sroa_idx$i$i$i$i$i$i$i+4>>2]|0;HEAP32[$t$i$i$i$i$i$i$i$i+8>>2]=HEAP32[$_8$sroa$0$0$$sroa_idx$i$i$i$i$i$i$i+8>>2]|0;
                ;HEAP32[$_8$sroa$0$0$$sroa_idx$i$i$i$i$i$i$i>>2]=HEAP32[$_5$sroa$0$0$$sroa_idx$i$i$i$i$i$i$i>>2]|0;HEAP32[$_8$sroa$0$0$$sroa_idx$i$i$i$i$i$i$i+4>>2]=HEAP32[$_5$sroa$0$0$$sroa_idx$i$i$i$i$i$i$i+4>>2]|0;HEAP32[$_8$sroa$0$0$$sroa_idx$i$i$i$i$i$i$i+8>>2]=HEAP32[$_5$sroa$0$0$$sroa_idx$i$i$i$i$i$i$i+8>>2]|0;
                ;HEAP32[$_5$sroa$0$0$$sroa_idx$i$i$i$i$i$i$i>>2]=HEAP32[$t$i$i$i$i$i$i$i$i>>2]|0;HEAP32[$_5$sroa$0$0$$sroa_idx$i$i$i$i$i$i$i+4>>2]=HEAP32[$t$i$i$i$i$i$i$i$i+4>>2]|0;HEAP32[$_5$sroa$0$0$$sroa_idx$i$i$i$i$i$i$i+8>>2]=HEAP32[$t$i$i$i$i$i$i$i$i+8>>2]|0;
                $475 = HEAP32[$_8$sroa$7$0$$sroa_idx60$i$i$i$i$i$i$i>>2]|0;
                $476 = ($475|0)==(0);
                if (!($476)) {
                 HEAP32[$_8$sroa$7$0$$sroa_idx60$i$i$i$i$i$i$i>>2] = 0;
                }
                $477 = $proj$sroa$0$0$lcssa335$i$i$i$i$i$i$i / $total_det$0$lcssa339$i$i$i$i$i$i$i;
                $478 = $proj$sroa$6$0$lcssa337$i$i$i$i$i$i$i / $total_det$0$lcssa339$i$i$i$i$i$i$i;
                $479 = (HEAPF32[tempDoublePtr>>2]=$477,HEAP32[tempDoublePtr>>2]|0);
                $480 = (HEAPF32[tempDoublePtr>>2]=$478,HEAP32[tempDoublePtr>>2]|0);
                $tmp_ret27$sroa$0$0$i$i$i$i$i = $479;$tmp_ret27$sroa$4$0$i$i$i$i$i = $480;
               }
               }
              } while(0);
              $498 = (HEAP32[tempDoublePtr>>2]=$tmp_ret27$sroa$0$0$i$i$i$i$i,+HEAPF32[tempDoublePtr>>2]);
              $499 = (HEAP32[tempDoublePtr>>2]=$tmp_ret27$sroa$4$0$i$i$i$i$i,+HEAPF32[tempDoublePtr>>2]);
              $500 = $498 * $498;
              $501 = $499 * $499;
              $502 = $501 + $500;
              $503 = (HEAPF32[tempDoublePtr>>2]=$502,HEAP32[tempDoublePtr>>2]|0);
              $$idx$val$i35$i$i$i$i$i = HEAP32[$_5$sroa$7$0$$sroa_idx66$i$i$i$i$i$i$i>>2]|0;
              $504 = ($$idx$val$i35$i$i$i$i$i|0)==(3);
              if ($504) {
               label = 158;
               break L69;
              }
              $505 = HEAP32[$287>>2]|0;
              $506 = (($505) + ($$idx$val$i35$i$i$i$i$i<<3)|0);
              $507 = $505;
              $iter$sroa$0$0$ph$i$i$i$i$i$i = $507;$max_sq_len$sroa$0$0$ph$i$i$i$i$i$i = 0.0;
              L167: while(1) {
               $iter$sroa$0$0$i$i$i$i$i$i = $iter$sroa$0$0$ph$i$i$i$i$i$i;
               while(1) {
                $508 = $iter$sroa$0$0$i$i$i$i$i$i;
                $509 = ($508|0)==($506|0);
                if ($509) {
                 break L167;
                }
                $510 = ((($508)) + 8|0);
                $511 = $510;
                $512 = $iter$sroa$0$0$i$i$i$i$i$i;
                $$idx$val$i$i$i12$i$i$i = +HEAPF32[$512>>2];
                $$idx5$i$i$i$i$i$i = ((($512)) + 4|0);
                $$idx5$val$i$i$i$i$i$i = +HEAPF32[$$idx5$i$i$i$i$i$i>>2];
                $513 = $$idx$val$i$i$i12$i$i$i * $$idx$val$i$i$i12$i$i$i;
                $514 = $$idx5$val$i$i$i$i$i$i * $$idx5$val$i$i$i$i$i$i;
                $515 = $513 + $514;
                $516 = $515 > $max_sq_len$sroa$0$0$ph$i$i$i$i$i$i;
                if ($516) {
                 $iter$sroa$0$0$ph$i$i$i$i$i$i = $511;$max_sq_len$sroa$0$0$ph$i$i$i$i$i$i = $515;
                 continue L167;
                } else {
                 $iter$sroa$0$0$i$i$i$i$i$i = $511;
                }
               }
              }
              $517 = $max_sq_len$sroa$0$0$ph$i$i$i$i$i$i * 1.1920928955078125E-5;
              $518 = !($502 <= $517);
              $519 = (HEAP32[tempDoublePtr>>2]=$old_max_bound$sroa$0$0$i114$i$i$i$i,+HEAPF32[tempDoublePtr>>2]);
              $520 = !($502 >= $519);
              $or$cond$i$i50 = $520 & $518;
              if (!($or$cond$i$i50)) {
               label = 158;
               break L69;
              }
              $521 = -$498;
              $522 = -$499;
              $523 = (+Math_sqrt((+$502)));
              $524 = $521 / $523;
              HEAPF32[$dir$i$i$i$i$i>>2] = $524;
              $525 = $522 / $523;
              HEAPF32[$283>>2] = $525;
              $526 = $523 == 0.0;
              if ($526) {
               label = 158;
               break L69;
              } else {
               $338 = $$idx$val$i35$i$i$i$i$i;$568 = $505;$old_max_bound$sroa$0$0$i114$i$i$i$i = $503;
              }
             }
             $327 = $ltoi$0$ph$i$i$i$i$i + $323;
             $328 = $327 * $199;
             $329 = $327 * $200;
             $330 = $328 + 0.0;
             $331 = $329 + 0.0;
             $332 = (HEAPF32[tempDoublePtr>>2]=$330,HEAP32[tempDoublePtr>>2]|0);
             $333 = (HEAPF32[tempDoublePtr>>2]=$331,HEAP32[tempDoublePtr>>2]|0);
             $334 = $330 - $313;
             $335 = $331 - $314;
             HEAPF32[$dir$i$i$i$i$i>>2] = $334;
             HEAPF32[$283>>2] = $335;
             $336 = 0.0 - $334;
             $337 = 0.0 - $335;
             $339 = ($338|0)==(0);
             if (!($339)) {
              HEAP32[$_5$sroa$7$0$$sroa_idx66$i$i$i$i$i$i$i>>2] = 0;
             }
             $$idx$val$i$i45$i$i$i$i$i = HEAP32[$_5$sroa$5$0$$sroa_idx64$i$i$i$i$i$i$i>>2]|0;
             $340 = ($$idx$val$i$i45$i$i$i$i$i|0)==(0);
             if ($340) {
              __THREW__ = 0;
              invoke_vi(224,($_5$sroa$0$0$$sroa_idx$i$i$i$i$i$i$i|0));
              $341 = __THREW__; __THREW__ = 0;
              $342 = $341&1;
              if ($342) {
               label = 147;
               break;
              }
              $$pre$i$i46$i$i$i$i$i = HEAP32[$_5$sroa$7$0$$sroa_idx66$i$i$i$i$i$i$i>>2]|0;
              $$pre$i$i$i = HEAP32[$_5$sroa$0$0$$sroa_idx$i$i$i$i$i$i$i>>2]|0;
              $344 = $$pre$i$i$i;$345 = $$pre$i$i46$i$i$i$i$i;
             } else {
              $344 = $568;$345 = 0;
             }
             $343 = (($344) + ($345<<3)|0);
             HEAPF32[$343>>2] = $336;
             $346 = (((($344) + ($345<<3)|0)) + 4|0);
             HEAPF32[$346>>2] = $337;
             $347 = HEAP32[$_5$sroa$7$0$$sroa_idx66$i$i$i$i$i$i$i>>2]|0;
             $348 = (($347) + 1)|0;
             HEAP32[$_5$sroa$7$0$$sroa_idx66$i$i$i$i$i$i$i>>2] = $348;
             $$idx$val$i61$pre$pre$i$i$i$i$i = +HEAPF32[$dir$i$i$i$i$i>>2];
             $$idx1$val$i$pre$pre$i$i$i$i$i = +HEAPF32[$283>>2];
             $$idx$val$i61$pre$i$i$i$i$i = $$idx$val$i61$pre$pre$i$i$i$i$i;$$idx1$val$i$pre$i$i$i$i$i = $$idx1$val$i$pre$pre$i$i$i$i$i;$566 = $344;$567 = $348;$curr_ray$sroa$0$0$ph$i$i$i$i$i = $332;$curr_ray$sroa$7$0$ph$i$i$i$i$i = $333;$ltoi$0$ph$i$i$i$i$i = $327;
            }
            switch (label|0) {
             case 78: {
              __THREW__ = 0;
              invoke_viii(225,(10523|0),63,(5544|0));
              $361 = __THREW__; __THREW__ = 0;
              label = 148;
              break;
             }
             case 80: {
              __THREW__ = 0;
              invoke_viii(225,(12444|0),46,(5532|0));
              $362 = __THREW__; __THREW__ = 0;
              label = 148;
              break;
             }
             case 83: {
              __THREW__ = 0;
              invoke_viiiii(214,(12236|0),104,1349,($357|0),($$idx37$val$i$i$i$i$i$i$i|0));
              $364 = __THREW__; __THREW__ = 0;
              label = 148;
              break;
             }
             case 85: {
              __THREW__ = 0;
              invoke_vii(226,($368|0),($$idx38$val$i$i$i$i$i$i$i|0));
              $370 = __THREW__; __THREW__ = 0;
              label = 148;
              break;
             }
             case 92: {
              __THREW__ = 0;
              invoke_vii(226,2,($$idx43$val$i$i$i$i$i$i$i|0));
              $381 = __THREW__; __THREW__ = 0;
              label = 148;
              break;
             }
             case 145: {
              $527 = ___cxa_find_matching_catch_2()|0;
              $528 = tempRet0;
              $lpad$phi$i$i$i$index = $527;$lpad$phi$i$i$i$index4 = $528;
              break;
             }
             case 146: {
              $529 = ___cxa_find_matching_catch_2()|0;
              $530 = tempRet0;
              $lpad$phi$i$i$i$index = $529;$lpad$phi$i$i$i$index4 = $530;
              break;
             }
             case 147: {
              $531 = ___cxa_find_matching_catch_2()|0;
              $532 = tempRet0;
              $lpad$phi$i$i$i$index = $531;$lpad$phi$i$i$i$index4 = $532;
              break;
             }
             case 157: {
              $$sink$i$i$i$i = 0;$_9$sroa$4$0$i$i = 0;$self$sroa$10$i$sroa$4$0$$sroa_cast5362$i$i$i = $self$sroa$10$i$sroa$4$i$i$i;
              label = 159;
              break;
             }
             case 158: {
              $545 = (HEAPF32[tempDoublePtr>>2]=$ltoi$0$ph$i$i$i$i$i,HEAP32[tempDoublePtr>>2]|0);
              $$sink$i$i$i$i = 1;$_9$sroa$4$0$i$i = $545;$self$sroa$10$i$sroa$4$0$$sroa_cast5362$i$i$i = $self$sroa$10$i$sroa$4$i$i$i;
              label = 159;
              break;
             }
            }
            if ((label|0) == 148) {
             $533 = ___cxa_find_matching_catch_2()|0;
             $534 = tempRet0;
             $lpad$phi$i$i$i$index = $533;$lpad$phi$i$i$i$index4 = $534;
            }
            else if ((label|0) == 159) {
             $546 = HEAP32[$_26$i$i$i>>2]|0;
             $547 = HEAP32[$546>>2]|0;HEAP32[$546>>2] = (($547-1)|0);
             $548 = ($547|0)==(1);
             if ($548) {
              /* fence */;
              __ZN33__LT_alloc__arc__Arc_LT_T_GT__GT_9drop_slow17h639b296ab3838c06E($_26$i$i$i);
             }
             $549 = HEAP32[$_5$sroa$5$0$$sroa_idx64$i$i$i$i$i$i$i>>2]|0;
             $not$$i$i$i$i$i$i$i$i = ($549|0)==(0);
             if (!($not$$i$i$i$i$i$i$i$i)) {
              $550 = HEAP32[$_5$sroa$0$0$$sroa_idx$i$i$i$i$i$i$i>>2]|0;
              _free($550);
             }
             $551 = HEAP32[$_8$sroa$5$0$$sroa_idx58$i$i$i$i$i$i$i>>2]|0;
             $not$$i$i$i$i1$i$i$i$i = ($551|0)==(0);
             if (!($not$$i$i$i$i1$i$i$i$i)) {
              $552 = HEAP32[$_8$sroa$0$0$$sroa_idx$i$i$i$i$i$i$i>>2]|0;
              _free($552);
             }
             $553 = ((($_26$i$i$i)) + 32|0);
             $554 = HEAP32[$553>>2]|0;
             $not$$i$i$i$i4$i$i$i$i = ($554|0)==(0);
             if (!($not$$i$i$i$i4$i$i$i$i)) {
              $555 = HEAP32[$280>>2]|0;
              _free($555);
             }
             $switch3$i$i$i = ($$sink$i$i$i$i|0)==(1);
             if ($switch3$i$i$i) {
              $558 = ((($0)) + 4|0);
              HEAP32[$558>>2] = $_9$sroa$4$0$i$i;
              $$sink$i$i$i = 1;
             } else {
              $$sink$i$i$i = 0;
             }
             HEAP32[$0>>2] = $$sink$i$i$i;
             break L14;
            }
            $535 = HEAP32[$_26$i$i$i>>2]|0;
            $536 = HEAP32[$535>>2]|0;HEAP32[$535>>2] = (($536-1)|0);
            $537 = ($536|0)==(1);
            if ($537) {
             /* fence */;
             __ZN33__LT_alloc__arc__Arc_LT_T_GT__GT_9drop_slow17h639b296ab3838c06E($_26$i$i$i);
            }
            $538 = HEAP32[$_5$sroa$5$0$$sroa_idx64$i$i$i$i$i$i$i>>2]|0;
            $not$$i$i$i$i$i26$i$i$i = ($538|0)==(0);
            if (!($not$$i$i$i$i$i26$i$i$i)) {
             $539 = HEAP32[$_5$sroa$0$0$$sroa_idx$i$i$i$i$i$i$i>>2]|0;
             _free($539);
            }
            $540 = HEAP32[$_8$sroa$5$0$$sroa_idx58$i$i$i$i$i$i$i>>2]|0;
            $not$$i$i$i$i1$i29$i$i$i = ($540|0)==(0);
            if (!($not$$i$i$i$i1$i29$i$i$i)) {
             $541 = HEAP32[$_8$sroa$0$0$$sroa_idx$i$i$i$i$i$i$i>>2]|0;
             _free($541);
            }
            $542 = ((($_26$i$i$i)) + 32|0);
            $543 = HEAP32[$542>>2]|0;
            $not$$i$i$i$i4$i32$i$i$i = ($543|0)==(0);
            if ($not$$i$i$i$i4$i32$i$i$i) {
             $personalityslot$sroa$0$0$i$i$i = $lpad$phi$i$i$i$index;$personalityslot$sroa$8$0$i$i$i = $lpad$phi$i$i$i$index4;
             ___resumeException($personalityslot$sroa$0$0$i$i$i|0);
             // unreachable;
            }
            $544 = HEAP32[$280>>2]|0;
            _free($544);
            $personalityslot$sroa$0$0$i$i$i = $lpad$phi$i$i$i$index;$personalityslot$sroa$8$0$i$i$i = $lpad$phi$i$i$i$index4;
            ___resumeException($personalityslot$sroa$0$0$i$i$i|0);
            // unreachable;
           } else {
            __THREW__ = 0;
            invoke_viiiii(214,(12236|0),104,1349,2,($$idx48$val$i$i$i$i$i$i$i|0));
            $268 = __THREW__; __THREW__ = 0;
           }
          } while(0);
          $276 = ___cxa_find_matching_catch_2()|0;
          $277 = tempRet0;
          _free($261);
          $personalityslot$sroa$0$1$i$i$i$i$i$i$i = $276;$personalityslot$sroa$7$1$i$i$i$i$i$i$i = $277;
         }
         _free($255);
         $personalityslot$sroa$0$0$i$i$i$i$i$i$i = $personalityslot$sroa$0$1$i$i$i$i$i$i$i;$personalityslot$sroa$7$0$i$i$i$i$i$i$i = $personalityslot$sroa$7$1$i$i$i$i$i$i$i;
        }
        $274 = HEAP32[$252>>2]|0;HEAP32[$252>>2] = (($274-1)|0);
        $275 = ($274|0)==(1);
        if ($275) {
         /* fence */;
         __ZN33__LT_alloc__arc__Arc_LT_T_GT__GT_9drop_slow17h639b296ab3838c06E($recursion$i$i$i$i$i$i$i);
        }
        $278 = HEAP32[$201>>2]|0;
        $279 = (($278) + -1)|0;
        HEAP32[$201>>2] = $279;
        $personalityslot$sroa$0$0$i$i$i$i$i$i = $personalityslot$sroa$0$0$i$i$i$i$i$i$i;$personalityslot$sroa$9$0$i$i$i$i$i$i = $personalityslot$sroa$7$0$i$i$i$i$i$i$i;
       }
       $eh$lpad$body$i$i$i$index11Z2D = $personalityslot$sroa$9$0$i$i$i$i$i$i;$eh$lpad$body$i$i$i$indexZ2D = $personalityslot$sroa$0$0$i$i$i$i$i$i;
      }
     } while(0);
     if ((label|0) == 168) {
      $556 = ___cxa_find_matching_catch_2()|0;
      $557 = tempRet0;
      $eh$lpad$body$i$i$i$index11Z2D = $557;$eh$lpad$body$i$i$i$indexZ2D = $556;
     }
     $personalityslot$sroa$0$0$i$i$i = $eh$lpad$body$i$i$i$indexZ2D;$personalityslot$sroa$8$0$i$i$i = $eh$lpad$body$i$i$i$index11Z2D;
     ___resumeException($personalityslot$sroa$0$0$i$i$i|0);
     // unreachable;
    }
   } while(0);
  } else {
   $_51$sroa$5$0$$sroa_idx22 = ((($_52)) + 4|0);
   $_51$sroa$5$0$copyload = HEAP32[$_51$sroa$5$0$$sroa_idx22>>2]|0;
   $$idx42$val = +HEAPF32[$2>>2];
   $$idx43 = ((($2)) + 4|0);
   $$idx43$val = +HEAPF32[$$idx43>>2];
   $$idx44$val = +HEAPF32[$6>>2];
   $$idx45 = ((($6)) + 4|0);
   $$idx45$val = +HEAPF32[$$idx45>>2];
   $$idx46$val = +HEAPF32[$$$i51>>2];
   $$idx47 = ((($$$i51)) + 4|0);
   $$idx47$val = +HEAPF32[$$idx47>>2];
   $142 = $$idx42$val - $$idx44$val;
   $143 = $$idx43$val - $$idx45$val;
   $_5$sroa$0$0$copyload$i$i$i$i = +HEAPF32[$5>>2];
   $_5$sroa$4$0$$sroa_idx2$i$i$i$i = ((($5)) + 4|0);
   $_5$sroa$4$0$copyload$i$i$i$i = +HEAPF32[$_5$sroa$4$0$$sroa_idx2$i$i$i$i>>2];
   $_5$sroa$5$0$$sroa_idx4$i$i$i$i = ((($5)) + 8|0);
   $_5$sroa$5$0$copyload$i$i$i$i = +HEAPF32[$_5$sroa$5$0$$sroa_idx4$i$i$i$i>>2];
   $_5$sroa$6$0$$sroa_idx6$i$i$i$i = ((($5)) + 12|0);
   $_5$sroa$6$0$copyload$i$i$i$i = +HEAPF32[$_5$sroa$6$0$$sroa_idx6$i$i$i$i>>2];
   $144 = $$idx46$val * $_5$sroa$0$0$copyload$i$i$i$i;
   $145 = $$idx47$val * $_5$sroa$5$0$copyload$i$i$i$i;
   $146 = $144 + $145;
   $147 = $$idx46$val * $_5$sroa$4$0$copyload$i$i$i$i;
   $148 = $$idx47$val * $_5$sroa$6$0$copyload$i$i$i$i;
   $149 = $147 + $148;
   $150 = -$146;
   $151 = -$149;
   HEAPF32[$_26$i$i>>2] = $150;
   $152 = ((($_26$i$i)) + 4|0);
   HEAPF32[$152>>2] = $151;
   $153 = ((($_51$sroa$5$0$copyload)) + 12|0);
   $154 = HEAP32[$153>>2]|0;
   FUNCTION_TABLE_viiii[$154 & 511]($tmp_ret3$i$i,$_51$sroa$0$0$copyload,$1,$_26$i$i);
   $155 = ((($tmp_ret3$i$i)) + 4|0);
   $156 = +HEAPF32[$tmp_ret3$i$i>>2];
   $157 = +HEAPF32[$155>>2];
   $158 = ((($5)) + 16|0);
   $159 = ((($5)) + 20|0);
   $160 = +HEAPF32[$158>>2];
   $161 = +HEAPF32[$159>>2];
   $162 = $156 - $160;
   $163 = $157 - $161;
   $164 = $_5$sroa$0$0$copyload$i$i$i$i * $162;
   $165 = $_5$sroa$4$0$copyload$i$i$i$i * $163;
   $166 = $164 + $165;
   $167 = $_5$sroa$5$0$copyload$i$i$i$i * $162;
   $168 = $_5$sroa$6$0$copyload$i$i$i$i * $163;
   $169 = $167 + $168;
   $170 = $$idx46$val * $166;
   $171 = $$idx47$val * $169;
   $172 = -$171;
   $173 = $172 - $170;
   $174 = $173 > 0.0;
   if ($174) {
    $_9$sroa$6$0$ph$i$i$i = 0;
    label = 20;
   } else {
    $175 = $142 * $_5$sroa$5$0$copyload$i$i$i$i;
    $176 = $143 * $_5$sroa$6$0$copyload$i$i$i$i;
    $177 = $175 + $176;
    $178 = $142 * $_5$sroa$0$0$copyload$i$i$i$i;
    $179 = $143 * $_5$sroa$4$0$copyload$i$i$i$i;
    $180 = $178 + $179;
    $181 = $$idx46$val * $180;
    $182 = $$idx47$val * $177;
    $183 = $181 + $182;
    $184 = $173 / $183;
    $185 = !($184 >= 0.0);
    if ($185) {
     $$sink$i$i$i$i55 = 0;
    } else {
     $186 = (HEAPF32[tempDoublePtr>>2]=$184,HEAP32[tempDoublePtr>>2]|0);
     $_9$sroa$6$0$ph$i$i$i = $186;
     label = 20;
    }
   }
   if ((label|0) == 20) {
    $187 = ((($0)) + 4|0);
    HEAP32[$187>>2] = $_9$sroa$6$0$ph$i$i$i;
    $$sink$i$i$i$i55 = 1;
   }
   HEAP32[$0>>2] = $$sink$i$i$i$i55;
  }
 } else {
  $_38$sroa$8$4$$sroa_idx31 = ((($_41)) + 4|0);
  $_38$sroa$8$4$copyload = HEAP32[$_38$sroa$8$4$$sroa_idx31>>2]|0;
  $88 = ((($6)) + 4|0);
  $89 = +HEAPF32[$6>>2];
  $90 = +HEAPF32[$88>>2];
  $91 = ((($2)) + 4|0);
  $92 = +HEAPF32[$2>>2];
  $93 = +HEAPF32[$91>>2];
  $94 = $89 - $92;
  $95 = $90 - $93;
  $$idx$val$i = +HEAPF32[$$$i49>>2];
  $$idx18$i = ((($$$i49)) + 4|0);
  $$idx18$val$i = +HEAPF32[$$idx18$i>>2];
  $_5$sroa$0$0$copyload$i$i$i = +HEAPF32[$1>>2];
  $_5$sroa$4$0$$sroa_idx2$i$i$i = ((($1)) + 4|0);
  $_5$sroa$4$0$copyload$i$i$i = +HEAPF32[$_5$sroa$4$0$$sroa_idx2$i$i$i>>2];
  $_5$sroa$5$0$$sroa_idx4$i$i$i = ((($1)) + 8|0);
  $_5$sroa$5$0$copyload$i$i$i = +HEAPF32[$_5$sroa$5$0$$sroa_idx4$i$i$i>>2];
  $_5$sroa$6$0$$sroa_idx6$i$i$i = ((($1)) + 12|0);
  $_5$sroa$6$0$copyload$i$i$i = +HEAPF32[$_5$sroa$6$0$$sroa_idx6$i$i$i>>2];
  $96 = $$idx$val$i * $_5$sroa$0$0$copyload$i$i$i;
  $97 = $$idx18$val$i * $_5$sroa$5$0$copyload$i$i$i;
  $98 = $96 + $97;
  $99 = $$idx$val$i * $_5$sroa$4$0$copyload$i$i$i;
  $100 = $$idx18$val$i * $_5$sroa$6$0$copyload$i$i$i;
  $101 = $99 + $100;
  $102 = -$98;
  $103 = -$101;
  HEAPF32[$_26$i>>2] = $102;
  $104 = ((($_26$i)) + 4|0);
  HEAPF32[$104>>2] = $103;
  $105 = ((($_38$sroa$8$4$copyload)) + 12|0);
  $106 = HEAP32[$105>>2]|0;
  FUNCTION_TABLE_viiii[$106 & 511]($tmp_ret3$i,$_38$sroa$5$4$copyload,$5,$_26$i);
  $107 = ((($tmp_ret3$i)) + 4|0);
  $108 = +HEAPF32[$tmp_ret3$i>>2];
  $109 = +HEAPF32[$107>>2];
  $110 = ((($1)) + 16|0);
  $111 = ((($1)) + 20|0);
  $112 = +HEAPF32[$110>>2];
  $113 = +HEAPF32[$111>>2];
  $114 = $108 - $112;
  $115 = $109 - $113;
  $116 = $_5$sroa$0$0$copyload$i$i$i * $114;
  $117 = $_5$sroa$4$0$copyload$i$i$i * $115;
  $118 = $116 + $117;
  $119 = $_5$sroa$5$0$copyload$i$i$i * $114;
  $120 = $_5$sroa$6$0$copyload$i$i$i * $115;
  $121 = $119 + $120;
  $122 = $$idx$val$i * $118;
  $123 = $$idx18$val$i * $121;
  $124 = -$123;
  $125 = $124 - $122;
  $126 = $125 > 0.0;
  if ($126) {
   $_9$sroa$6$0$ph$i$i = 0;
   label = 13;
  } else {
   $127 = $94 * $_5$sroa$5$0$copyload$i$i$i;
   $128 = $95 * $_5$sroa$6$0$copyload$i$i$i;
   $129 = $127 + $128;
   $130 = $94 * $_5$sroa$0$0$copyload$i$i$i;
   $131 = $95 * $_5$sroa$4$0$copyload$i$i$i;
   $132 = $130 + $131;
   $133 = $$idx$val$i * $132;
   $134 = $$idx18$val$i * $129;
   $135 = $133 + $134;
   $136 = $125 / $135;
   $137 = !($136 >= 0.0);
   if ($137) {
    $$sink$i$i$i53 = 0;
   } else {
    $138 = (HEAPF32[tempDoublePtr>>2]=$136,HEAP32[tempDoublePtr>>2]|0);
    $_9$sroa$6$0$ph$i$i = $138;
    label = 13;
   }
  }
  if ((label|0) == 13) {
   $139 = ((($0)) + 4|0);
   HEAP32[$139>>2] = $_9$sroa$6$0$ph$i$i;
   $$sink$i$i$i53 = 1;
  }
  HEAP32[$0>>2] = $$sink$i$i$i53;
 }
 STACKTOP = sp;return;
}
function __ZN17ncollide_geometry5query23time_of_impact_internal29composite_shape_against_shape29composite_shape_against_shape17h6dc17f65ec92973fE($0,$1,$2,$3,$4,$5,$6,$7,$8) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 $7 = $7|0;
 $8 = $8|0;
 var $$1$i$i$i$i$i$i$i$i$i$i = 0, $$2$i$i$i$i$i$i$i$i$i$i = 0, $$idx$val$i$i$i$i = 0, $$idx$val$i$i$i$i$i$i$i = 0, $$idx$val$i6$i$i$i = 0, $$idx$val$i6$i95$i$i = 0, $$idx9$val14$i$i$i$i21$i = 0, $$idx9$val14$i$i$i155$i$i = 0, $$idx9$val14$i$i$i156$i$i = 0, $$idx9$val14$i$i$i157172$i$i = 0, $$idx9$val14$i$i$i159$i31$i = 0, $$in$i$i = 0, $$pre = 0, $$pre$i$i = 0, $$pre$i$i$i$i = 0, $$pre$i$i77$i$i = 0, $$pre$i$i96$i$i = 0, $$pre166$i$i = 0, $$sink$i = 0, $$sink$i$i$index = 0;
 var $$sink$i$i$index7 = 0, $$val$i$i = 0, $$val1$i$i = 0.0, $$val1$i$i157 = 0.0, $$val1$i$i184 = 0.0, $$val3$i$i = 0.0, $$val3$i$i152 = 0.0, $$val3$i$i179 = 0.0, $$val5$i$i = 0.0, $$val5$i$i154 = 0.0, $$val5$i$i181 = 0.0, $$val6$i$i = 0.0, $$val6$i$i155 = 0.0, $$val6$i$i182 = 0.0, $10 = 0.0, $100 = 0.0, $101 = 0.0, $102 = 0.0, $103 = 0.0, $104 = 0;
 var $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0.0, $110 = SIMD_Int32x4(0,0,0,0), $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0.0, $120 = 0, $121 = 0.0, $122 = 0;
 var $123 = 0.0, $124 = 0, $125 = 0.0, $126 = 0.0, $127 = 0.0, $128 = 0, $129 = 0, $13 = 0.0, $130 = 0.0, $131 = 0.0, $132 = 0.0, $133 = 0, $134 = 0, $135 = 0.0, $136 = 0.0, $137 = 0.0, $138 = 0, $139 = 0.0, $14 = 0.0, $140 = 0.0;
 var $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0.0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0;
 var $16 = 0.0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0.0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0;
 var $178 = 0, $179 = 0, $18 = 0.0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0.0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0;
 var $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0.0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0.0, $210 = 0, $211 = 0, $212 = 0, $213 = 0;
 var $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0.0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0.0, $230 = 0, $231 = 0;
 var $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0.0, $237 = 0.0, $238 = 0, $239 = 0.0, $24 = 0.0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0.0;
 var $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0.0, $255 = 0.0, $256 = 0.0, $257 = 0.0, $258 = 0.0, $259 = 0.0, $26 = 0.0, $260 = 0.0, $261 = 0.0, $262 = 0.0, $263 = 0.0, $264 = 0, $265 = 0, $266 = 0.0, $267 = 0.0, $268 = 0.0;
 var $269 = 0.0, $27 = 0.0, $270 = 0.0, $271 = 0.0, $272 = 0, $273 = 0, $274 = 0, $275 = SIMD_Int32x4(0,0,0,0), $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0.0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0.0, $286 = 0;
 var $287 = 0.0, $288 = 0, $289 = 0.0, $29 = 0.0, $290 = 0.0, $291 = 0.0, $292 = 0, $293 = 0, $294 = 0.0, $295 = 0.0, $296 = 0.0, $297 = 0, $298 = 0, $299 = 0.0, $30 = 0.0, $300 = 0.0, $301 = 0.0, $302 = 0, $303 = 0.0, $304 = 0.0;
 var $305 = 0, $306 = 0.0, $307 = 0, $308 = 0, $309 = 0.0, $31 = 0.0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0.0, $320 = 0, $321 = 0, $322 = 0;
 var $323 = 0, $324 = 0.0, $325 = 0.0, $326 = 0.0, $327 = 0.0, $328 = 0.0, $329 = 0.0, $33 = 0.0, $330 = 0.0, $331 = 0.0, $332 = 0.0, $333 = 0.0, $334 = 0, $335 = 0, $336 = 0.0, $337 = 0.0, $338 = 0.0, $339 = 0.0, $34 = 0.0, $340 = 0.0;
 var $341 = 0.0, $342 = 0, $343 = 0, $344 = 0, $345 = SIMD_Int32x4(0,0,0,0), $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0.0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0.0, $356 = 0, $357 = 0.0, $358 = 0, $359 = 0.0;
 var $36 = 0.0, $360 = 0.0, $361 = 0.0, $362 = 0, $363 = 0, $364 = 0.0, $365 = 0.0, $366 = 0.0, $367 = 0, $368 = 0, $369 = 0.0, $37 = 0, $370 = 0.0, $371 = 0.0, $372 = 0, $373 = 0.0, $374 = 0.0, $375 = 0, $376 = 0, $377 = 0;
 var $378 = 0.0, $379 = 0, $38 = 0, $380 = 0, $381 = 0.0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0.0, $393 = 0, $394 = 0.0, $395 = 0;
 var $396 = 0, $397 = 0, $398 = 0, $399 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0;
 var $414 = 0, $415 = 0, $416 = 0, $417 = 0, $42 = 0.0, $43 = 0.0, $44 = 0, $45 = 0, $46 = 0.0, $47 = 0.0, $48 = 0.0, $49 = 0.0, $50 = 0.0, $51 = 0.0, $52 = 0.0, $53 = 0.0, $54 = 0.0, $55 = 0.0, $56 = 0.0, $57 = 0.0;
 var $58 = 0, $59 = 0.0, $60 = 0.0, $61 = 0, $62 = 0.0, $63 = 0.0, $64 = 0.0, $65 = 0.0, $66 = 0.0, $67 = 0.0, $68 = 0.0, $69 = 0.0, $70 = 0.0, $71 = 0.0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;
 var $78 = 0, $79 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0.0, $90 = 0.0, $91 = 0.0, $92 = 0.0, $93 = 0.0, $94 = 0.0, $95 = 0.0, $96 = 0;
 var $97 = 0, $98 = 0.0, $99 = 0.0, $_0$sroa$0$0$insert$insert$i$i$i$i$i$i$i$i$i$i = 0, $_1$sroa$4$0$$sroa_idx7$i$i$i = 0, $_1$sroa$5$0$$sroa_idx9$i$i$i = 0, $_10$sroa$4$0$_5$sroa$0$0$$sroa_cast3$i$sroa_idx55$i$i = 0, $_10$sroa$5$0$_5$sroa$0$0$$sroa_cast3$i$sroa_idx57$i$i = 0, $_10$sroa$6$0$_5$sroa$0$0$$sroa_cast3$i$sroa_idx59$i$i = 0, $_13$i$i$i = 0, $_19$sroa$0$0$copyload$i = 0.0, $_19$sroa$4$0$$sroa_idx33$i = 0, $_19$sroa$4$0$copyload$i = 0.0, $_19$sroa$5$0$$sroa_idx35$i = 0, $_19$sroa$5$0$copyload$i = 0.0, $_19$sroa$6$0$$sroa_idx37$i = 0, $_19$sroa$6$0$copyload$i = 0.0, $_19$sroa$7$0$$sroa_idx39$i = 0, $_19$sroa$7$0$copyload$i = 0.0, $_19$sroa$8$0$$sroa_idx41$i = 0;
 var $_19$sroa$8$0$copyload$i = 0.0, $_22$sroa$7$1173$i$i = 0, $_3$0$in$i$i$i = 0, $_3$0$in$i102$i$i = 0, $_3$0$in$i89$i$i = 0, $_31$sroa$0$0$$sroa_idx$i = 0, $_31$sroa$4$0$$sroa_idx23$i = 0, $_31$sroa$6$0$$sroa_idx29$i = 0, $_34$val$idx$i$i$i$i$i$i = 0, $_34$val$idx$val$i$i$i$i$i$i = 0.0, $_37$i$i$sroa$6$0 = 0, $_37$i$i$sroa$6$1 = 0, $_37$i$i$sroa$6$2366 = 0, $_38$val$idx$i$i$i$i$i$i = 0, $_38$val$idx$val$i$i$i$i$i$i = 0.0, $_4$sroa$0$0$copyload$i$i$i = 0.0, $_4$sroa$4$0$$sroa_idx39$i$i$i = 0, $_4$sroa$4$0$copyload$i$i72$i = 0.0, $_4$sroa$5$0$$sroa_idx41$i$i$i = 0, $_4$sroa$5$0$copyload$i$i73$i = 0.0;
 var $_4$sroa$6$0$$sroa_idx43$i$i$i = 0, $_4$sroa$6$0$copyload$i$i$i = 0.0, $_4$sroa$7$0$$sroa_idx45$i$i$i = 0, $_4$sroa$7$0$copyload$i$i$i = 0.0, $_4$sroa$8$0$$sroa_idx47$i$i$i = 0, $_4$sroa$8$0$copyload$i$i$i = 0.0, $_5$sroa$0$0$extract$trunc$i$i$i$i$i$i$i$i = 0, $_5$sroa$4$0$extract$shift$mask$i$i$i$i$i$i$i$i = 0, $_52$i$i$sroa$6$0 = 0, $_52$i$i$sroa$6$1 = 0, $_52$i$i$sroa$6$2368 = 0, $_67$sroa$0$0$copyload$i$i = 0, $_67$sroa$4$0$$sroa_idx107$i$i = 0, $_67$sroa$4$0$copyload$i$i = 0, $_67$sroa$5$0$$sroa_idx109$i$i = 0, $_67$sroa$5$0$copyload$i$i = 0.0, $best_cost$sroa$0$0$ph$i32$i = 0, $best_cost$sroa$0$2$i$i = 0, $child$0$$i$i$i$i$i$i = 0, $child$026$i$i$i$i$i$i = 0;
 var $cond$i$i$i$i$i$i$i$i = 0, $cost_fn = 0, $hole$sroa$17$0$lcssa$i$i$i$i$i$i = 0, $hole$sroa$17$025$i$i$i$i$i$i = 0, $inter_with_far_plane$sroa$0$0$i$i = 0, $inter_with_far_plane$sroa$0$0$i$i161 = 0, $inter_with_far_plane$sroa$0$0$i$i188 = 0, $inter_with_near_plane$sroa$0$0$i$i = 0, $inter_with_near_plane$sroa$0$0$i$i162 = 0, $inter_with_near_plane$sroa$0$0$i$i189 = 0, $iter$sroa$0$0$i$i = 0, $iter$sroa$0$0$i$i150 = 0, $iter$sroa$0$0$i$i177 = 0, $iter$sroa$0$0$ph$i$i = 0, $iter$sroa$0$0$ph$i$i146 = 0, $iter$sroa$0$0$ph$i$i173 = 0, $ls_aabb2$i = 0, $ls_m2$i = 0, $ls_ray$i$i = 0, $ls_ray$i$i141 = 0;
 var $ls_ray$i$i168 = 0, $msum$i = 0, $msum$i142 = 0, $msum$i169 = 0, $not$$i$i$i$i$i$i$i = 0, $not$$i$i$i$i$i86$i$i = 0, $or$cond$i$i = 0, $or$cond$i$i$i$i = 0, $or$cond$i$i$i$i$i$i$i$i = 0, $or$cond$i$i$i$i143 = 0, $or$cond$i$i$i$i170 = 0, $queue$i$i = 0, $queue$i$i$idx$val = 0, $queue$i$i$idx201$val = 0, $res$i$i$i = 0, $result$sroa$0$0$ph$i$lcssa$i = 0, $result$sroa$0$0$ph$i33$i = 0, $result$sroa$0$2$i$i = 0, $result$sroa$6$0$ph$i$lcssa$i = 0.0, $result$sroa$6$0$ph$i34$i = 0.0;
 var $result$sroa$6$2$i$i = 0.0, $self$i$i$i = 0, $switch$i = 0, $switch$i$i$i$i$i$i$i$i = 0, $switch11$i$i = 0, $switch15$i$i = 0, $switch2tmp$i = 0, $switch2tmp$i$i$i$i = 0, $switch2tmp$i$i$i6$i$i$i$i$i$i = 0, $switch2tmp$i$i$i7$i$i = 0, $switch9tmp$i$i = 0, $tmax$0$ph$i$i = 0.0, $tmax$0$ph$i$i147 = 0.0, $tmax$0$ph$i$i174 = 0.0, $tmin$sroa$0$0$ph$i$i = 0, $tmin$sroa$0$0$ph$i$i148 = 0, $tmin$sroa$0$0$ph$i$i175 = 0, label = 0, sp = 0, temp_Int32x4_ptr = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 256|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(256|0);
 $ls_ray$i$i168 = sp + 32|0;
 $msum$i169 = sp + 224|0;
 $ls_ray$i$i141 = sp + 16|0;
 $msum$i142 = sp + 208|0;
 $ls_ray$i$i = sp;
 $msum$i = sp + 192|0;
 $self$i$i$i = sp + 240|0;
 $res$i$i$i = sp + 176|0;
 $_13$i$i$i = sp + 168|0;
 $queue$i$i = sp + 152|0;
 $ls_m2$i = sp + 128|0;
 $ls_aabb2$i = sp + 112|0;
 $cost_fn = sp + 48|0;
 $_4$sroa$0$0$copyload$i$i$i = +HEAPF32[$1>>2];
 $_4$sroa$4$0$$sroa_idx39$i$i$i = ((($1)) + 4|0);
 $_4$sroa$4$0$copyload$i$i72$i = +HEAPF32[$_4$sroa$4$0$$sroa_idx39$i$i$i>>2];
 $_4$sroa$5$0$$sroa_idx41$i$i$i = ((($1)) + 8|0);
 $_4$sroa$5$0$copyload$i$i73$i = +HEAPF32[$_4$sroa$5$0$$sroa_idx41$i$i$i>>2];
 $_4$sroa$6$0$$sroa_idx43$i$i$i = ((($1)) + 12|0);
 $_4$sroa$6$0$copyload$i$i$i = +HEAPF32[$_4$sroa$6$0$$sroa_idx43$i$i$i>>2];
 $_4$sroa$7$0$$sroa_idx45$i$i$i = ((($1)) + 16|0);
 $_4$sroa$7$0$copyload$i$i$i = +HEAPF32[$_4$sroa$7$0$$sroa_idx45$i$i$i>>2];
 $_4$sroa$8$0$$sroa_idx47$i$i$i = ((($1)) + 20|0);
 $_4$sroa$8$0$copyload$i$i$i = +HEAPF32[$_4$sroa$8$0$$sroa_idx47$i$i$i>>2];
 $9 = -$_4$sroa$7$0$copyload$i$i$i;
 $10 = -$_4$sroa$8$0$copyload$i$i$i;
 $11 = $_4$sroa$0$0$copyload$i$i$i * $9;
 $12 = $_4$sroa$4$0$copyload$i$i72$i * $10;
 $13 = $11 + $12;
 $14 = $_4$sroa$5$0$copyload$i$i73$i * $9;
 $15 = $_4$sroa$6$0$copyload$i$i$i * $10;
 $16 = $14 + $15;
 $_19$sroa$0$0$copyload$i = +HEAPF32[$5>>2];
 $_19$sroa$4$0$$sroa_idx33$i = ((($5)) + 4|0);
 $_19$sroa$4$0$copyload$i = +HEAPF32[$_19$sroa$4$0$$sroa_idx33$i>>2];
 $_19$sroa$5$0$$sroa_idx35$i = ((($5)) + 8|0);
 $_19$sroa$5$0$copyload$i = +HEAPF32[$_19$sroa$5$0$$sroa_idx35$i>>2];
 $_19$sroa$6$0$$sroa_idx37$i = ((($5)) + 12|0);
 $_19$sroa$6$0$copyload$i = +HEAPF32[$_19$sroa$6$0$$sroa_idx37$i>>2];
 $_19$sroa$7$0$$sroa_idx39$i = ((($5)) + 16|0);
 $_19$sroa$7$0$copyload$i = +HEAPF32[$_19$sroa$7$0$$sroa_idx39$i>>2];
 $_19$sroa$8$0$$sroa_idx41$i = ((($5)) + 20|0);
 $_19$sroa$8$0$copyload$i = +HEAPF32[$_19$sroa$8$0$$sroa_idx41$i>>2];
 $17 = $_4$sroa$0$0$copyload$i$i$i * $_19$sroa$7$0$copyload$i;
 $18 = $_4$sroa$4$0$copyload$i$i72$i * $_19$sroa$8$0$copyload$i;
 $19 = $17 + $18;
 $20 = $_4$sroa$5$0$copyload$i$i73$i * $_19$sroa$7$0$copyload$i;
 $21 = $_4$sroa$6$0$copyload$i$i$i * $_19$sroa$8$0$copyload$i;
 $22 = $20 + $21;
 $23 = $13 + $19;
 $24 = $16 + $22;
 $25 = $_4$sroa$0$0$copyload$i$i$i * $_19$sroa$0$0$copyload$i;
 $26 = $_4$sroa$4$0$copyload$i$i72$i * $_19$sroa$4$0$copyload$i;
 $27 = $25 + $26;
 $28 = $_4$sroa$0$0$copyload$i$i$i * $_19$sroa$5$0$copyload$i;
 $29 = $_4$sroa$4$0$copyload$i$i72$i * $_19$sroa$6$0$copyload$i;
 $30 = $28 + $29;
 $31 = $_4$sroa$5$0$copyload$i$i73$i * $_19$sroa$0$0$copyload$i;
 $32 = $_4$sroa$6$0$copyload$i$i$i * $_19$sroa$4$0$copyload$i;
 $33 = $31 + $32;
 $34 = $_4$sroa$5$0$copyload$i$i73$i * $_19$sroa$5$0$copyload$i;
 $35 = $_4$sroa$6$0$copyload$i$i$i * $_19$sroa$6$0$copyload$i;
 $36 = $34 + $35;
 HEAPF32[$ls_m2$i>>2] = $27;
 $_10$sroa$4$0$_5$sroa$0$0$$sroa_cast3$i$sroa_idx55$i$i = ((($ls_m2$i)) + 4|0);
 HEAPF32[$_10$sroa$4$0$_5$sroa$0$0$$sroa_cast3$i$sroa_idx55$i$i>>2] = $33;
 $_10$sroa$5$0$_5$sroa$0$0$$sroa_cast3$i$sroa_idx57$i$i = ((($ls_m2$i)) + 8|0);
 HEAPF32[$_10$sroa$5$0$_5$sroa$0$0$$sroa_cast3$i$sroa_idx57$i$i>>2] = $30;
 $_10$sroa$6$0$_5$sroa$0$0$$sroa_cast3$i$sroa_idx59$i$i = ((($ls_m2$i)) + 12|0);
 HEAPF32[$_10$sroa$6$0$_5$sroa$0$0$$sroa_cast3$i$sroa_idx59$i$i>>2] = $36;
 $37 = ((($ls_m2$i)) + 16|0);
 HEAPF32[$37>>2] = $23;
 $38 = ((($ls_m2$i)) + 20|0);
 HEAPF32[$38>>2] = $24;
 $39 = ((($8)) + 12|0);
 $40 = HEAP32[$39>>2]|0;
 FUNCTION_TABLE_viii[$40 & 511]($ls_aabb2$i,$7,$ls_m2$i);
 $41 = ((($ls_aabb2$i)) + 4|0);
 $42 = +HEAPF32[$ls_aabb2$i>>2];
 $43 = +HEAPF32[$41>>2];
 $44 = ((($ls_aabb2$i)) + 12|0);
 $45 = ((($ls_aabb2$i)) + 8|0);
 $46 = +HEAPF32[$45>>2];
 $47 = +HEAPF32[$44>>2];
 $48 = $42 + $46;
 $49 = $43 + $47;
 $50 = $48 * 0.5;
 $51 = $49 * 0.5;
 $52 = -$50;
 $53 = -$51;
 $54 = $46 - $42;
 $55 = $47 - $43;
 $56 = $54 * 0.5;
 $57 = $55 * 0.5;
 $58 = ((($6)) + 4|0);
 $59 = +HEAPF32[$6>>2];
 $60 = +HEAPF32[$58>>2];
 $61 = ((($2)) + 4|0);
 $62 = +HEAPF32[$2>>2];
 $63 = +HEAPF32[$61>>2];
 $64 = $59 - $62;
 $65 = $60 - $63;
 $66 = $_4$sroa$0$0$copyload$i$i$i * $64;
 $67 = $_4$sroa$4$0$copyload$i$i72$i * $65;
 $68 = $66 + $67;
 $69 = $_4$sroa$5$0$copyload$i$i73$i * $64;
 $70 = $_4$sroa$6$0$copyload$i$i$i * $65;
 $71 = $69 + $70;
 HEAPF32[$cost_fn>>2] = $52;
 $72 = ((($cost_fn)) + 4|0);
 HEAPF32[$72>>2] = $53;
 $73 = ((($cost_fn)) + 8|0);
 HEAPF32[$73>>2] = $56;
 $74 = ((($cost_fn)) + 12|0);
 HEAPF32[$74>>2] = $57;
 $_31$sroa$0$0$$sroa_idx$i = ((($cost_fn)) + 16|0);
 HEAP32[$_31$sroa$0$0$$sroa_idx$i>>2] = 0;
 $_31$sroa$4$0$$sroa_idx23$i = ((($cost_fn)) + 20|0);
 HEAP32[$_31$sroa$4$0$$sroa_idx23$i>>2] = 0;
 $75 = ((($cost_fn)) + 24|0);
 HEAPF32[$75>>2] = $68;
 $_31$sroa$6$0$$sroa_idx29$i = ((($cost_fn)) + 28|0);
 HEAPF32[$_31$sroa$6$0$$sroa_idx29$i>>2] = $71;
 $76 = ((($cost_fn)) + 32|0);
 HEAP32[$76>>2] = $1;
 $77 = ((($cost_fn)) + 36|0);
 HEAP32[$77>>2] = $2;
 $78 = ((($cost_fn)) + 40|0);
 HEAP32[$78>>2] = $3;
 $79 = ((($cost_fn)) + 44|0);
 HEAP32[$79>>2] = $4;
 $80 = ((($cost_fn)) + 48|0);
 HEAP32[$80>>2] = $5;
 $81 = ((($cost_fn)) + 52|0);
 HEAP32[$81>>2] = $6;
 $82 = ((($cost_fn)) + 56|0);
 HEAP32[$82>>2] = $7;
 $83 = ((($cost_fn)) + 60|0);
 HEAP32[$83>>2] = $8;
 $84 = ((($4)) + 24|0);
 $85 = HEAP32[$84>>2]|0;
 $86 = (FUNCTION_TABLE_ii[$85 & 511]($3)|0);
 $87 = HEAP32[$86>>2]|0;
 $switch$i = ($87|0)==(1);
 if (!($switch$i)) {
  $$sink$i = 0;
  HEAP32[$0>>2] = $$sink$i;
  STACKTOP = sp;return;
 }
 $88 = ((($86)) + 4|0);
 HEAP32[$queue$i$i>>2] = 1;
 $_1$sroa$4$0$$sroa_idx7$i$i$i = ((($queue$i$i)) + 4|0);
 HEAP32[$_1$sroa$4$0$$sroa_idx7$i$i$i>>2] = 0;
 $_1$sroa$5$0$$sroa_idx9$i$i$i = ((($queue$i$i)) + 8|0);
 HEAP32[$_1$sroa$5$0$$sroa_idx9$i$i$i>>2] = 0;
 $_3$0$in$i$i$i = ((($86)) + 8|0);
 $89 = ((($86)) + 12|0);
 $90 = +HEAPF32[$_3$0$in$i$i$i>>2];
 $91 = +HEAPF32[$89>>2];
 $92 = $90 - $50;
 $93 = $91 - $51;
 $94 = $92 - $56;
 $95 = $93 - $57;
 $96 = ((($86)) + 20|0);
 $97 = ((($86)) + 16|0);
 $98 = +HEAPF32[$97>>2];
 $99 = +HEAPF32[$96>>2];
 $100 = $98 - $50;
 $101 = $99 - $51;
 $102 = $56 + $100;
 $103 = $57 + $101;
 $104 = $94 <= $102;
 $105 = $95 <= $103;
 $or$cond$i$i$i$i = $104 & $105;
 do {
  if ($or$cond$i$i$i$i) {
   HEAPF32[$msum$i>>2] = $94;
   $107 = ((($msum$i)) + 4|0);
   HEAPF32[$107>>2] = $95;
   $108 = ((($msum$i)) + 8|0);
   HEAPF32[$108>>2] = $102;
   $109 = ((($msum$i)) + 12|0);
   HEAPF32[$109>>2] = $103;
   $110 = SIMD_Int32x4_load(HEAPU8, $_31$sroa$0$0$$sroa_idx$i);
   temp_Int32x4_ptr = $ls_ray$i$i;SIMD_Int32x4_store(HEAPU8, temp_Int32x4_ptr, $110);
   $111 = ((($ls_ray$i$i)) + 8|0);
   $iter$sroa$0$0$ph$i$i = 0;$tmax$0$ph$i$i = 3.4028234663852886E+38;$tmin$sroa$0$0$ph$i$i = 0;
   L6: while(1) {
    $iter$sroa$0$0$i$i = $iter$sroa$0$0$ph$i$i;
    while(1) {
     $112 = ($iter$sroa$0$0$i$i>>>0)<(2);
     $113 = (($iter$sroa$0$0$i$i) + 1)|0;
     if (!($112)) {
      break L6;
     }
     $114 = (($111) + ($iter$sroa$0$0$i$i<<2)|0);
     $$val3$i$i = +HEAPF32[$114>>2];
     $115 = $$val3$i$i == 0.0;
     if (!($115)) {
      break;
     }
     $116 = (($ls_ray$i$i) + ($iter$sroa$0$0$i$i<<2)|0);
     $117 = (($msum$i) + ($iter$sroa$0$0$i$i<<2)|0);
     $$val5$i$i = +HEAPF32[$116>>2];
     $$val6$i$i = +HEAPF32[$117>>2];
     $118 = $$val5$i$i < $$val6$i$i;
     if ($118) {
      label = 11;
      break L6;
     }
     $119 = (($108) + ($iter$sroa$0$0$i$i<<2)|0);
     $$val1$i$i = +HEAPF32[$119>>2];
     $120 = $$val5$i$i > $$val1$i$i;
     if ($120) {
      label = 11;
      break L6;
     } else {
      $iter$sroa$0$0$i$i = $113;
     }
    }
    $121 = 1.0 / $$val3$i$i;
    $122 = (($msum$i) + ($iter$sroa$0$0$i$i<<2)|0);
    $123 = +HEAPF32[$122>>2];
    $124 = (($ls_ray$i$i) + ($iter$sroa$0$0$i$i<<2)|0);
    $125 = +HEAPF32[$124>>2];
    $126 = $123 - $125;
    $127 = $121 * $126;
    $128 = (HEAPF32[tempDoublePtr>>2]=$127,HEAP32[tempDoublePtr>>2]|0);
    $129 = (($108) + ($iter$sroa$0$0$i$i<<2)|0);
    $130 = +HEAPF32[$129>>2];
    $131 = $130 - $125;
    $132 = $121 * $131;
    $133 = (HEAPF32[tempDoublePtr>>2]=$132,HEAP32[tempDoublePtr>>2]|0);
    $134 = $127 > $132;
    $inter_with_far_plane$sroa$0$0$i$i = $134 ? $128 : $133;
    $inter_with_near_plane$sroa$0$0$i$i = $134 ? $133 : $128;
    $135 = (HEAP32[tempDoublePtr>>2]=$tmin$sroa$0$0$ph$i$i,+HEAPF32[tempDoublePtr>>2]);
    $136 = (HEAP32[tempDoublePtr>>2]=$inter_with_near_plane$sroa$0$0$i$i,+HEAPF32[tempDoublePtr>>2]);
    $137 = (+_fmaxf($135,$136));
    $138 = (HEAPF32[tempDoublePtr>>2]=$137,HEAP32[tempDoublePtr>>2]|0);
    $139 = (HEAP32[tempDoublePtr>>2]=$inter_with_far_plane$sroa$0$0$i$i,+HEAPF32[tempDoublePtr>>2]);
    $140 = (+_fminf($tmax$0$ph$i$i,$139));
    $141 = $137 > $140;
    if ($141) {
     label = 11;
     break;
    } else {
     $iter$sroa$0$0$ph$i$i = $113;$tmax$0$ph$i$i = $140;$tmin$sroa$0$0$ph$i$i = $138;
    }
   }
   if ((label|0) == 11) {
    $$sink$i = 0;
    HEAP32[$0>>2] = $$sink$i;
    STACKTOP = sp;return;
   }
   __THREW__ = 0;
   invoke_vi(227,($queue$i$i|0));
   $142 = __THREW__; __THREW__ = 0;
   $143 = $142&1;
   if ($143) {
    label = 76;
   } else {
    $144 = $88;
    $$pre$i$i77$i$i = HEAP32[$_1$sroa$5$0$$sroa_idx9$i$i$i>>2]|0;
    $$pre$i$i = HEAP32[$queue$i$i>>2]|0;
    $145 = (($$pre$i$i) + ($$pre$i$i77$i$i<<3)|0);
    HEAP32[$145>>2] = $144;
    $146 = (((($$pre$i$i) + ($$pre$i$i77$i$i<<3)|0)) + 4|0);
    HEAP32[$146>>2] = $tmin$sroa$0$0$ph$i$i;
    $147 = (($$pre$i$i77$i$i) + 1)|0;
    HEAP32[$_1$sroa$5$0$$sroa_idx9$i$i$i>>2] = $147;
    $148 = ($147|0)==(0);
    if ($148) {
     __THREW__ = 0;
     invoke_viiiii(214,(11617|0),112,897,0,0);
     $149 = __THREW__; __THREW__ = 0;
     $150 = ___cxa_find_matching_catch_2()|0;
     $151 = tempRet0;
     $$sink$i$i$index = $150;$$sink$i$i$index7 = $151;
     break;
    }
    $152 = $$pre$i$i;
    $153 = $152;
    $154 = HEAP32[$153>>2]|0;
    $155 = (($152) + 4)|0;
    $156 = $155;
    $157 = HEAP32[$156>>2]|0;
    $switch2tmp$i$i$i7$i$i = ($154|0)==(0);
    if ($switch2tmp$i$i$i7$i$i) {
     __THREW__ = 0;
     invoke_vi(220,(6500|0));
     $158 = __THREW__; __THREW__ = 0;
     $159 = ___cxa_find_matching_catch_2()|0;
     $160 = tempRet0;
     $$sink$i$i$index = $159;$$sink$i$i$index7 = $160;
     break;
    }
    HEAP32[$$pre$i$i>>2] = $154;
    $161 = ((($$pre$i$i)) + 4|0);
    HEAP32[$161>>2] = $157;
    $162 = ((($_13$i$i$i)) + 4|0);
    $_67$sroa$4$0$$sroa_idx107$i$i = ((($res$i$i$i)) + 4|0);
    $_67$sroa$5$0$$sroa_idx109$i$i = ((($res$i$i$i)) + 8|0);
    $163 = ((($msum$i142)) + 4|0);
    $164 = ((($msum$i142)) + 8|0);
    $165 = ((($msum$i142)) + 12|0);
    $166 = ((($ls_ray$i$i141)) + 8|0);
    $167 = ((($msum$i169)) + 4|0);
    $168 = ((($msum$i169)) + 8|0);
    $169 = ((($msum$i169)) + 12|0);
    $170 = ((($ls_ray$i$i168)) + 8|0);
    $$idx9$val14$i$i$i159$i31$i = $$pre$i$i;$239 = 3.4028234663852886E+38;$403 = $$pre$i$i;$404 = $$pre$i$i;$405 = $147;$406 = $$pre$i$i;$_37$i$i$sroa$6$0 = 0;$_52$i$i$sroa$6$0 = 0;$best_cost$sroa$0$0$ph$i32$i = 2139095039;$result$sroa$0$0$ph$i33$i = 0;$result$sroa$6$0$ph$i34$i = 0.0;
    L25: while(1) {
     $$idx9$val14$i$i$i$i21$i = $$idx9$val14$i$i$i159$i31$i;$172 = $405;$174 = $406;$407 = $403;$408 = $404;$_37$i$i$sroa$6$1 = $_37$i$i$sroa$6$0;$_52$i$i$sroa$6$1 = $_52$i$i$sroa$6$0;
     while(1) {
      $171 = (($172) + -1)|0;
      HEAP32[$_1$sroa$5$0$$sroa_idx9$i$i$i>>2] = $171;
      $173 = (($174) + ($171<<3)|0);
      $175 = $173;
      $176 = $175;
      $177 = HEAP32[$176>>2]|0;
      $178 = (($175) + 4)|0;
      $179 = $178;
      $180 = HEAP32[$179>>2]|0;
      $switch2tmp$i$i$i$i = ($177|0)==(0);
      if ($switch2tmp$i$i$i$i) {
       $243 = $407;$result$sroa$0$0$ph$i$lcssa$i = $result$sroa$0$0$ph$i33$i;$result$sroa$6$0$ph$i$lcssa$i = $result$sroa$6$0$ph$i34$i;
       label = 38;
       break L25;
      }
      $181 = ($171|0)==(0);
      if ($181) {
       $$idx9$val14$i$i$i157172$i$i = $$idx9$val14$i$i$i$i21$i;$$in$i$i = $177;$310 = 0;$409 = $407;$410 = $408;$411 = $174;$_22$sroa$7$1173$i$i = $180;
      } else {
       $182 = $$idx9$val14$i$i$i$i21$i;
       $183 = $182;
       $184 = HEAP32[$183>>2]|0;
       $185 = (($182) + 4)|0;
       $186 = $185;
       $187 = HEAP32[$186>>2]|0;
       $188 = $$idx9$val14$i$i$i$i21$i;
       $189 = $188;
       HEAP32[$189>>2] = $177;
       $190 = (($188) + 4)|0;
       $191 = $190;
       HEAP32[$191>>2] = $180;
       $$idx$val$i$i$i$i$i$i$i = HEAP32[$_1$sroa$5$0$$sroa_idx9$i$i$i>>2]|0;
       $192 = HEAP32[$queue$i$i>>2]|0;
       $193 = ($$idx$val$i$i$i$i$i$i$i|0)==(0);
       if ($193) {
        label = 24;
        break L25;
       }
       $195 = $192;
       $196 = $195;
       $197 = HEAP32[$196>>2]|0;
       $198 = (($195) + 4)|0;
       $199 = $198;
       $200 = HEAP32[$199>>2]|0;
       $201 = ($$idx$val$i$i$i$i$i$i$i|0)==(1);
       if ($201) {
        $hole$sroa$17$0$lcssa$i$i$i$i$i$i = 0;
       } else {
        $child$026$i$i$i$i$i$i = 1;$hole$sroa$17$025$i$i$i$i$i$i = 0;
        while(1) {
         $203 = (($child$026$i$i$i$i$i$i) + 1)|0;
         $204 = ($203>>>0)<($$idx$val$i$i$i$i$i$i$i>>>0);
         if ($204) {
          $_34$val$idx$i$i$i$i$i$i = (((($192) + ($child$026$i$i$i$i$i$i<<3)|0)) + 4|0);
          $_34$val$idx$val$i$i$i$i$i$i = +HEAPF32[$_34$val$idx$i$i$i$i$i$i>>2];
          $_38$val$idx$i$i$i$i$i$i = (((($192) + ($203<<3)|0)) + 4|0);
          $_38$val$idx$val$i$i$i$i$i$i = +HEAPF32[$_38$val$idx$i$i$i$i$i$i>>2];
          $205 = $_34$val$idx$val$i$i$i$i$i$i <= $_38$val$idx$val$i$i$i$i$i$i;
          $206 = $_34$val$idx$val$i$i$i$i$i$i >= $_38$val$idx$val$i$i$i$i$i$i;
          $$1$i$i$i$i$i$i$i$i$i$i = $206&1;
          $$2$i$i$i$i$i$i$i$i$i$i = $206 ? 256 : 0;
          $207 = $206 ? 1 : -255;
          $208 = $$2$i$i$i$i$i$i$i$i$i$i | $$1$i$i$i$i$i$i$i$i$i$i;
          $_0$sroa$0$0$insert$insert$i$i$i$i$i$i$i$i$i$i = $205 ? $207 : $208;
          $_5$sroa$0$0$extract$trunc$i$i$i$i$i$i$i$i = $_0$sroa$0$0$insert$insert$i$i$i$i$i$i$i$i$i$i&255;
          $switch$i$i$i$i$i$i$i$i = ($_5$sroa$0$0$extract$trunc$i$i$i$i$i$i$i$i<<24>>24)!=(0);
          $_5$sroa$4$0$extract$shift$mask$i$i$i$i$i$i$i$i = $_0$sroa$0$0$insert$insert$i$i$i$i$i$i$i$i$i$i & -256;
          $cond$i$i$i$i$i$i$i$i = ($_5$sroa$4$0$extract$shift$mask$i$i$i$i$i$i$i$i<<16>>16)==(256);
          $or$cond$i$i$i$i$i$i$i$i = $switch$i$i$i$i$i$i$i$i & $cond$i$i$i$i$i$i$i$i;
          $child$0$$i$i$i$i$i$i = $or$cond$i$i$i$i$i$i$i$i ? $child$026$i$i$i$i$i$i : $203;
          $210 = $child$0$$i$i$i$i$i$i;
         } else {
          $210 = $child$026$i$i$i$i$i$i;
         }
         $209 = (($192) + ($210<<3)|0);
         $211 = (($192) + ($hole$sroa$17$025$i$i$i$i$i$i<<3)|0);
         $212 = $209;
         $213 = $212;
         $214 = HEAP32[$213>>2]|0;
         $215 = (($212) + 4)|0;
         $216 = $215;
         $217 = HEAP32[$216>>2]|0;
         $218 = $211;
         $219 = $218;
         HEAP32[$219>>2] = $214;
         $220 = (($218) + 4)|0;
         $221 = $220;
         HEAP32[$221>>2] = $217;
         $222 = $210 << 1;
         $223 = $222 | 1;
         $224 = ($223>>>0)<($$idx$val$i$i$i$i$i$i$i>>>0);
         if ($224) {
          $child$026$i$i$i$i$i$i = $223;$hole$sroa$17$025$i$i$i$i$i$i = $210;
         } else {
          $hole$sroa$17$0$lcssa$i$i$i$i$i$i = $210;
          break;
         }
        }
       }
       $switch2tmp$i$i$i6$i$i$i$i$i$i = ($197|0)==(0);
       if ($switch2tmp$i$i$i6$i$i$i$i$i$i) {
        label = 27;
        break L25;
       }
       $225 = (($192) + ($hole$sroa$17$0$lcssa$i$i$i$i$i$i<<3)|0);
       HEAP32[$225>>2] = $197;
       $226 = (((($192) + ($hole$sroa$17$0$lcssa$i$i$i$i$i$i<<3)|0)) + 4|0);
       HEAP32[$226>>2] = $200;
       __THREW__ = 0;
       invoke_viii(228,($192|0),($$idx$val$i$i$i$i$i$i$i|0),($hole$sroa$17$0$lcssa$i$i$i$i$i$i|0));
       $227 = __THREW__; __THREW__ = 0;
       $228 = $227&1;
       if ($228) {
        label = 75;
        break L25;
       }
       $switch9tmp$i$i = ($184|0)==(0);
       if ($switch9tmp$i$i) {
        $243 = $192;$result$sroa$0$0$ph$i$lcssa$i = $result$sroa$0$0$ph$i33$i;$result$sroa$6$0$ph$i$lcssa$i = $result$sroa$6$0$ph$i34$i;
        label = 38;
        break L25;
       } else {
        $$idx9$val14$i$i$i157172$i$i = $192;$$in$i$i = $184;$310 = $$idx$val$i$i$i$i$i$i$i;$409 = $192;$410 = $192;$411 = $192;$_22$sroa$7$1173$i$i = $187;
       }
      }
      $235 = $$in$i$i;
      $236 = (HEAP32[tempDoublePtr>>2]=$_22$sroa$7$1173$i$i,+HEAPF32[tempDoublePtr>>2]);
      $237 = -$236;
      $238 = !($239 <= $237);
      if (!($238)) {
       $243 = $409;$result$sroa$0$0$ph$i$lcssa$i = $result$sroa$0$0$ph$i33$i;$result$sroa$6$0$ph$i$lcssa$i = $result$sroa$6$0$ph$i34$i;
       label = 38;
       break L25;
      }
      $240 = HEAP32[$235>>2]|0;
      $switch11$i$i = ($240|0)==(1);
      $241 = ((($235)) + 20|0);
      if ($switch11$i$i) {
       break;
      }
      $251 = ((($235)) + 24|0);
      $252 = HEAP32[$241>>2]|0;
      $_3$0$in$i89$i$i = ((($252)) + 4|0);
      $253 = ((($252)) + 8|0);
      $254 = +HEAPF32[$_3$0$in$i89$i$i>>2];
      $255 = +HEAPF32[$253>>2];
      $256 = +HEAPF32[$cost_fn>>2];
      $257 = +HEAPF32[$72>>2];
      $258 = $254 + $256;
      $259 = $255 + $257;
      $260 = +HEAPF32[$73>>2];
      $261 = +HEAPF32[$74>>2];
      $262 = $258 - $260;
      $263 = $259 - $261;
      $264 = ((($252)) + 16|0);
      $265 = ((($252)) + 12|0);
      $266 = +HEAPF32[$265>>2];
      $267 = +HEAPF32[$264>>2];
      $268 = $256 + $266;
      $269 = $257 + $267;
      $270 = $260 + $268;
      $271 = $261 + $269;
      $272 = $262 <= $270;
      $273 = $263 <= $271;
      $or$cond$i$i$i$i143 = $272 & $273;
      if (!($or$cond$i$i$i$i143)) {
       label = 42;
       break L25;
      }
      HEAPF32[$msum$i142>>2] = $262;
      HEAPF32[$163>>2] = $263;
      HEAPF32[$164>>2] = $270;
      HEAPF32[$165>>2] = $271;
      $275 = SIMD_Int32x4_load(HEAPU8, $_31$sroa$0$0$$sroa_idx$i);
      temp_Int32x4_ptr = $ls_ray$i$i141;SIMD_Int32x4_store(HEAPU8, temp_Int32x4_ptr, $275);
      $iter$sroa$0$0$ph$i$i146 = 0;$tmax$0$ph$i$i147 = 3.4028234663852886E+38;$tmin$sroa$0$0$ph$i$i148 = 0;
      L47: while(1) {
       $iter$sroa$0$0$i$i150 = $iter$sroa$0$0$ph$i$i146;
       while(1) {
        $276 = ($iter$sroa$0$0$i$i150>>>0)<(2);
        $277 = (($iter$sroa$0$0$i$i150) + 1)|0;
        if (!($276)) {
         label = 51;
         break L47;
        }
        $278 = (($166) + ($iter$sroa$0$0$i$i150<<2)|0);
        $$val3$i$i152 = +HEAPF32[$278>>2];
        $279 = $$val3$i$i152 == 0.0;
        if (!($279)) {
         break;
        }
        $280 = (($ls_ray$i$i141) + ($iter$sroa$0$0$i$i150<<2)|0);
        $281 = (($msum$i142) + ($iter$sroa$0$0$i$i150<<2)|0);
        $$val5$i$i154 = +HEAPF32[$280>>2];
        $$val6$i$i155 = +HEAPF32[$281>>2];
        $282 = $$val5$i$i154 < $$val6$i$i155;
        if ($282) {
         label = 50;
         break L47;
        }
        $283 = (($164) + ($iter$sroa$0$0$i$i150<<2)|0);
        $$val1$i$i157 = +HEAPF32[$283>>2];
        $284 = $$val5$i$i154 > $$val1$i$i157;
        if ($284) {
         label = 50;
         break L47;
        } else {
         $iter$sroa$0$0$i$i150 = $277;
        }
       }
       $285 = 1.0 / $$val3$i$i152;
       $286 = (($msum$i142) + ($iter$sroa$0$0$i$i150<<2)|0);
       $287 = +HEAPF32[$286>>2];
       $288 = (($ls_ray$i$i141) + ($iter$sroa$0$0$i$i150<<2)|0);
       $289 = +HEAPF32[$288>>2];
       $290 = $287 - $289;
       $291 = $285 * $290;
       $292 = (HEAPF32[tempDoublePtr>>2]=$291,HEAP32[tempDoublePtr>>2]|0);
       $293 = (($164) + ($iter$sroa$0$0$i$i150<<2)|0);
       $294 = +HEAPF32[$293>>2];
       $295 = $294 - $289;
       $296 = $285 * $295;
       $297 = (HEAPF32[tempDoublePtr>>2]=$296,HEAP32[tempDoublePtr>>2]|0);
       $298 = $291 > $296;
       $inter_with_far_plane$sroa$0$0$i$i161 = $298 ? $292 : $297;
       $inter_with_near_plane$sroa$0$0$i$i162 = $298 ? $297 : $292;
       $299 = (HEAP32[tempDoublePtr>>2]=$tmin$sroa$0$0$ph$i$i148,+HEAPF32[tempDoublePtr>>2]);
       $300 = (HEAP32[tempDoublePtr>>2]=$inter_with_near_plane$sroa$0$0$i$i162,+HEAPF32[tempDoublePtr>>2]);
       $301 = (+_fmaxf($299,$300));
       $302 = (HEAPF32[tempDoublePtr>>2]=$301,HEAP32[tempDoublePtr>>2]|0);
       $303 = (HEAP32[tempDoublePtr>>2]=$inter_with_far_plane$sroa$0$0$i$i161,+HEAPF32[tempDoublePtr>>2]);
       $304 = (+_fminf($tmax$0$ph$i$i147,$303));
       $305 = $301 > $304;
       if ($305) {
        label = 50;
        break;
       } else {
        $iter$sroa$0$0$ph$i$i146 = $277;$tmax$0$ph$i$i147 = $304;$tmin$sroa$0$0$ph$i$i148 = $302;
       }
      }
      if ((label|0) == 50) {
       label = 0;
       $$idx$val$i$i$i$i = $310;$$idx9$val14$i$i$i156$i$i = $$idx9$val14$i$i$i157172$i$i;$412 = $409;$413 = $410;$414 = $411;$_37$i$i$sroa$6$2366 = $_37$i$i$sroa$6$1;
      }
      else if ((label|0) == 51) {
       label = 0;
       $306 = (HEAP32[tempDoublePtr>>2]=$tmin$sroa$0$0$ph$i$i148,+HEAPF32[tempDoublePtr>>2]);
       $307 = $306 < $239;
       if ($307) {
        $308 = HEAP32[$241>>2]|0;
        $309 = -$306;
        $$idx$val$i6$i95$i$i = HEAP32[$_1$sroa$4$0$$sroa_idx7$i$i$i>>2]|0;
        $311 = ($310|0)==($$idx$val$i6$i95$i$i|0);
        if ($311) {
         __THREW__ = 0;
         invoke_vi(227,($queue$i$i|0));
         $312 = __THREW__; __THREW__ = 0;
         $313 = $312&1;
         if ($313) {
          label = 33;
          break L25;
         }
         $$pre$i$i96$i$i = HEAP32[$_1$sroa$5$0$$sroa_idx9$i$i$i>>2]|0;
         $$pre166$i$i = HEAP32[$queue$i$i>>2]|0;
         $315 = $$pre166$i$i;$316 = $$pre$i$i96$i$i;
        } else {
         $315 = $411;$316 = $310;
        }
        $314 = (($315) + ($316<<3)|0);
        HEAP32[$314>>2] = $308;
        $317 = (((($315) + ($316<<3)|0)) + 4|0);
        HEAPF32[$317>>2] = $309;
        $318 = HEAP32[$_1$sroa$5$0$$sroa_idx9$i$i$i>>2]|0;
        $319 = (($318) + 1)|0;
        HEAP32[$_1$sroa$5$0$$sroa_idx9$i$i$i>>2] = $319;
        $queue$i$i$idx201$val = HEAP32[$queue$i$i>>2]|0;
        __THREW__ = 0;
        invoke_viii(228,($queue$i$i$idx201$val|0),($319|0),($310|0));
        $320 = __THREW__; __THREW__ = 0;
        $321 = $320&1;
        if ($321) {
         label = 33;
         break L25;
        } else {
         $$idx$val$i$i$i$i = $319;$$idx9$val14$i$i$i156$i$i = $315;$412 = $queue$i$i$idx201$val;$413 = $queue$i$i$idx201$val;$414 = $315;$_37$i$i$sroa$6$2366 = $tmin$sroa$0$0$ph$i$i148;
        }
       } else {
        $$idx$val$i$i$i$i = $310;$$idx9$val14$i$i$i156$i$i = $$idx9$val14$i$i$i157172$i$i;$412 = $409;$413 = $410;$414 = $411;$_37$i$i$sroa$6$2366 = $tmin$sroa$0$0$ph$i$i148;
       }
      }
      $322 = HEAP32[$251>>2]|0;
      $_3$0$in$i102$i$i = ((($322)) + 4|0);
      $323 = ((($322)) + 8|0);
      $324 = +HEAPF32[$_3$0$in$i102$i$i>>2];
      $325 = +HEAPF32[$323>>2];
      $326 = +HEAPF32[$cost_fn>>2];
      $327 = +HEAPF32[$72>>2];
      $328 = $324 + $326;
      $329 = $325 + $327;
      $330 = +HEAPF32[$73>>2];
      $331 = +HEAPF32[$74>>2];
      $332 = $328 - $330;
      $333 = $329 - $331;
      $334 = ((($322)) + 16|0);
      $335 = ((($322)) + 12|0);
      $336 = +HEAPF32[$335>>2];
      $337 = +HEAPF32[$334>>2];
      $338 = $326 + $336;
      $339 = $327 + $337;
      $340 = $330 + $338;
      $341 = $331 + $339;
      $342 = $332 <= $340;
      $343 = $333 <= $341;
      $or$cond$i$i$i$i170 = $342 & $343;
      if (!($or$cond$i$i$i$i170)) {
       label = 57;
       break L25;
      }
      HEAPF32[$msum$i169>>2] = $332;
      HEAPF32[$167>>2] = $333;
      HEAPF32[$168>>2] = $340;
      HEAPF32[$169>>2] = $341;
      $345 = SIMD_Int32x4_load(HEAPU8, $_31$sroa$0$0$$sroa_idx$i);
      temp_Int32x4_ptr = $ls_ray$i$i168;SIMD_Int32x4_store(HEAPU8, temp_Int32x4_ptr, $345);
      $iter$sroa$0$0$ph$i$i173 = 0;$tmax$0$ph$i$i174 = 3.4028234663852886E+38;$tmin$sroa$0$0$ph$i$i175 = 0;
      L65: while(1) {
       $iter$sroa$0$0$i$i177 = $iter$sroa$0$0$ph$i$i173;
       while(1) {
        $346 = ($iter$sroa$0$0$i$i177>>>0)<(2);
        $347 = (($iter$sroa$0$0$i$i177) + 1)|0;
        if (!($346)) {
         label = 67;
         break L65;
        }
        $348 = (($170) + ($iter$sroa$0$0$i$i177<<2)|0);
        $$val3$i$i179 = +HEAPF32[$348>>2];
        $349 = $$val3$i$i179 == 0.0;
        if (!($349)) {
         break;
        }
        $350 = (($ls_ray$i$i168) + ($iter$sroa$0$0$i$i177<<2)|0);
        $351 = (($msum$i169) + ($iter$sroa$0$0$i$i177<<2)|0);
        $$val5$i$i181 = +HEAPF32[$350>>2];
        $$val6$i$i182 = +HEAPF32[$351>>2];
        $352 = $$val5$i$i181 < $$val6$i$i182;
        if ($352) {
         label = 65;
         break L65;
        }
        $353 = (($168) + ($iter$sroa$0$0$i$i177<<2)|0);
        $$val1$i$i184 = +HEAPF32[$353>>2];
        $354 = $$val5$i$i181 > $$val1$i$i184;
        if ($354) {
         label = 65;
         break L65;
        } else {
         $iter$sroa$0$0$i$i177 = $347;
        }
       }
       $355 = 1.0 / $$val3$i$i179;
       $356 = (($msum$i169) + ($iter$sroa$0$0$i$i177<<2)|0);
       $357 = +HEAPF32[$356>>2];
       $358 = (($ls_ray$i$i168) + ($iter$sroa$0$0$i$i177<<2)|0);
       $359 = +HEAPF32[$358>>2];
       $360 = $357 - $359;
       $361 = $355 * $360;
       $362 = (HEAPF32[tempDoublePtr>>2]=$361,HEAP32[tempDoublePtr>>2]|0);
       $363 = (($168) + ($iter$sroa$0$0$i$i177<<2)|0);
       $364 = +HEAPF32[$363>>2];
       $365 = $364 - $359;
       $366 = $355 * $365;
       $367 = (HEAPF32[tempDoublePtr>>2]=$366,HEAP32[tempDoublePtr>>2]|0);
       $368 = $361 > $366;
       $inter_with_far_plane$sroa$0$0$i$i188 = $368 ? $362 : $367;
       $inter_with_near_plane$sroa$0$0$i$i189 = $368 ? $367 : $362;
       $369 = (HEAP32[tempDoublePtr>>2]=$tmin$sroa$0$0$ph$i$i175,+HEAPF32[tempDoublePtr>>2]);
       $370 = (HEAP32[tempDoublePtr>>2]=$inter_with_near_plane$sroa$0$0$i$i189,+HEAPF32[tempDoublePtr>>2]);
       $371 = (+_fmaxf($369,$370));
       $372 = (HEAPF32[tempDoublePtr>>2]=$371,HEAP32[tempDoublePtr>>2]|0);
       $373 = (HEAP32[tempDoublePtr>>2]=$inter_with_far_plane$sroa$0$0$i$i188,+HEAPF32[tempDoublePtr>>2]);
       $374 = (+_fminf($tmax$0$ph$i$i174,$373));
       $375 = $371 > $374;
       if ($375) {
        label = 65;
        break;
       } else {
        $iter$sroa$0$0$ph$i$i173 = $347;$tmax$0$ph$i$i174 = $374;$tmin$sroa$0$0$ph$i$i175 = $372;
       }
      }
      if ((label|0) == 65) {
       label = 0;
       $$idx9$val14$i$i$i155$i$i = $$idx9$val14$i$i$i156$i$i;$376 = $$idx$val$i$i$i$i;$415 = $412;$416 = $413;$417 = $414;$_52$i$i$sroa$6$2368 = $_52$i$i$sroa$6$1;
      }
      else if ((label|0) == 67) {
       label = 0;
       $378 = (HEAP32[tempDoublePtr>>2]=$tmin$sroa$0$0$ph$i$i175,+HEAPF32[tempDoublePtr>>2]);
       $379 = $378 < $239;
       if ($379) {
        $380 = HEAP32[$251>>2]|0;
        $381 = -$378;
        $$idx$val$i6$i$i$i = HEAP32[$_1$sroa$4$0$$sroa_idx7$i$i$i>>2]|0;
        $382 = ($$idx$val$i$i$i$i|0)==($$idx$val$i6$i$i$i|0);
        if ($382) {
         __THREW__ = 0;
         invoke_vi(227,($queue$i$i|0));
         $383 = __THREW__; __THREW__ = 0;
         $384 = $383&1;
         if ($384) {
          label = 33;
          break L25;
         }
         $$pre$i$i$i$i = HEAP32[$_1$sroa$5$0$$sroa_idx9$i$i$i>>2]|0;
         $$pre = HEAP32[$queue$i$i>>2]|0;
         $386 = $$pre;$387 = $$pre$i$i$i$i;
        } else {
         $386 = $413;$387 = $$idx$val$i$i$i$i;
        }
        $385 = (($386) + ($387<<3)|0);
        HEAP32[$385>>2] = $380;
        $388 = (((($386) + ($387<<3)|0)) + 4|0);
        HEAPF32[$388>>2] = $381;
        $389 = (($387) + 1)|0;
        HEAP32[$_1$sroa$5$0$$sroa_idx9$i$i$i>>2] = $389;
        $queue$i$i$idx$val = HEAP32[$queue$i$i>>2]|0;
        __THREW__ = 0;
        invoke_viii(228,($queue$i$i$idx$val|0),($389|0),($$idx$val$i$i$i$i|0));
        $390 = __THREW__; __THREW__ = 0;
        $391 = $390&1;
        if ($391) {
         label = 33;
         break L25;
        } else {
         $$idx9$val14$i$i$i155$i$i = $386;$376 = $389;$415 = $queue$i$i$idx$val;$416 = $queue$i$i$idx$val;$417 = $386;$_52$i$i$sroa$6$2368 = $tmin$sroa$0$0$ph$i$i175;
        }
       } else {
        $$idx9$val14$i$i$i155$i$i = $$idx9$val14$i$i$i156$i$i;$376 = $$idx$val$i$i$i$i;$415 = $412;$416 = $413;$417 = $414;$_52$i$i$sroa$6$2368 = $tmin$sroa$0$0$ph$i$i175;
       }
      }
      $377 = ($376|0)==(0);
      if ($377) {
       $243 = $415;$result$sroa$0$0$ph$i$lcssa$i = $result$sroa$0$0$ph$i33$i;$result$sroa$6$0$ph$i$lcssa$i = $result$sroa$6$0$ph$i34$i;
       label = 38;
       break L25;
      } else {
       $$idx9$val14$i$i$i$i21$i = $$idx9$val14$i$i$i155$i$i;$172 = $376;$174 = $417;$407 = $415;$408 = $416;$_37$i$i$sroa$6$1 = $_37$i$i$sroa$6$2366;$_52$i$i$sroa$6$1 = $_52$i$i$sroa$6$2368;
      }
     }
     $$val$i$i = HEAP32[$241>>2]|0;
     HEAP32[$self$i$i$i>>2] = $cost_fn;
     HEAP32[$res$i$i$i>>2] = 0;
     $244 = HEAP32[$78>>2]|0;
     $245 = HEAP32[$79>>2]|0;
     $246 = HEAP32[$76>>2]|0;
     HEAP32[$_13$i$i$i>>2] = $res$i$i$i;
     HEAP32[$162>>2] = $self$i$i$i;
     $247 = ((($245)) + 16|0);
     $248 = HEAP32[$247>>2]|0;
     __THREW__ = 0;
     invoke_viiiii($248|0,($244|0),($$val$i$i|0),($246|0),($_13$i$i$i|0),(760|0));
     $249 = __THREW__; __THREW__ = 0;
     $250 = $249&1;
     if ($250) {
      label = 35;
      break;
     }
     $_67$sroa$0$0$copyload$i$i = HEAP32[$res$i$i$i>>2]|0;
     $_67$sroa$4$0$copyload$i$i = HEAP32[$_67$sroa$4$0$$sroa_idx107$i$i>>2]|0;
     $_67$sroa$5$0$copyload$i$i = +HEAPF32[$_67$sroa$5$0$$sroa_idx109$i$i>>2];
     $switch15$i$i = ($_67$sroa$0$0$copyload$i$i|0)==(1);
     $392 = (HEAP32[tempDoublePtr>>2]=$_67$sroa$4$0$copyload$i$i,+HEAPF32[tempDoublePtr>>2]);
     $393 = $392 < $239;
     $or$cond$i$i = $switch15$i$i & $393;
     $best_cost$sroa$0$2$i$i = $or$cond$i$i ? $_67$sroa$4$0$copyload$i$i : $best_cost$sroa$0$0$ph$i32$i;
     $result$sroa$0$2$i$i = $or$cond$i$i ? $241 : $result$sroa$0$0$ph$i33$i;
     $result$sroa$6$2$i$i = $or$cond$i$i ? $_67$sroa$5$0$copyload$i$i : $result$sroa$6$0$ph$i34$i;
     $394 = (HEAP32[tempDoublePtr>>2]=$best_cost$sroa$0$2$i$i,+HEAPF32[tempDoublePtr>>2]);
     $395 = ($310|0)==(0);
     if ($395) {
      $243 = $409;$result$sroa$0$0$ph$i$lcssa$i = $result$sroa$0$2$i$i;$result$sroa$6$0$ph$i$lcssa$i = $result$sroa$6$2$i$i;
      label = 38;
      break;
     } else {
      $$idx9$val14$i$i$i159$i31$i = $$idx9$val14$i$i$i157172$i$i;$239 = $394;$403 = $409;$404 = $410;$405 = $310;$406 = $411;$_37$i$i$sroa$6$0 = $_37$i$i$sroa$6$1;$_52$i$i$sroa$6$0 = $_52$i$i$sroa$6$1;$best_cost$sroa$0$0$ph$i32$i = $best_cost$sroa$0$2$i$i;$result$sroa$0$0$ph$i33$i = $result$sroa$0$2$i$i;$result$sroa$6$0$ph$i34$i = $result$sroa$6$2$i$i;
     }
    }
    if ((label|0) == 24) {
     __THREW__ = 0;
     invoke_viiiii(214,(11617|0),112,897,0,0);
     $194 = __THREW__; __THREW__ = 0;
     label = 76;
     break;
    }
    else if ((label|0) == 27) {
     __THREW__ = 0;
     invoke_vi(220,(6500|0));
     $202 = __THREW__; __THREW__ = 0;
     label = 76;
     break;
    }
    else if ((label|0) == 33) {
     $229 = ___cxa_find_matching_catch_2()|0;
     $230 = tempRet0;
     $$sink$i$i$index = $229;$$sink$i$i$index7 = $230;
     break;
    }
    else if ((label|0) == 35) {
     $233 = ___cxa_find_matching_catch_2()|0;
     $234 = tempRet0;
     $$sink$i$i$index = $233;$$sink$i$i$index7 = $234;
     break;
    }
    else if ((label|0) == 38) {
     $242 = HEAP32[$_1$sroa$4$0$$sroa_idx7$i$i$i>>2]|0;
     $not$$i$i$i$i$i86$i$i = ($242|0)==(0);
     if (!($not$$i$i$i$i$i86$i$i)) {
      _free($243);
     }
     $switch2tmp$i = ($result$sroa$0$0$ph$i$lcssa$i|0)==(0|0);
     if ($switch2tmp$i) {
      $$sink$i = 0;
      HEAP32[$0>>2] = $$sink$i;
      STACKTOP = sp;return;
     }
     $402 = ((($0)) + 4|0);
     HEAPF32[$402>>2] = $result$sroa$6$0$ph$i$lcssa$i;
     $$sink$i = 1;
     HEAP32[$0>>2] = $$sink$i;
     STACKTOP = sp;return;
    }
    else if ((label|0) == 42) {
     __THREW__ = 0;
     invoke_viii(225,(11795|0),46,(5388|0));
     $274 = __THREW__; __THREW__ = 0;
    }
    else if ((label|0) == 57) {
     __THREW__ = 0;
     invoke_viii(225,(11795|0),46,(5388|0));
     $344 = __THREW__; __THREW__ = 0;
    }
    else if ((label|0) == 75) {
     $398 = ___cxa_find_matching_catch_2()|0;
     $399 = tempRet0;
     $$sink$i$i$index = $398;$$sink$i$i$index7 = $399;
     break;
    }
    $231 = ___cxa_find_matching_catch_2()|0;
    $232 = tempRet0;
    $$sink$i$i$index = $231;$$sink$i$i$index7 = $232;
   }
  } else {
   __THREW__ = 0;
   invoke_viii(225,(11795|0),46,(5388|0));
   $106 = __THREW__; __THREW__ = 0;
   label = 76;
  }
 } while(0);
 if ((label|0) == 76) {
  $400 = ___cxa_find_matching_catch_2()|0;
  $401 = tempRet0;
  $$sink$i$i$index = $400;$$sink$i$i$index7 = $401;
 }
 $396 = HEAP32[$_1$sroa$4$0$$sroa_idx7$i$i$i>>2]|0;
 $not$$i$i$i$i$i$i$i = ($396|0)==(0);
 if ($not$$i$i$i$i$i$i$i) {
  ___resumeException($$sink$i$i$index|0);
  // unreachable;
 }
 $397 = HEAP32[$queue$i$i>>2]|0;
 _free($397);
 ___resumeException($$sink$i$i$index|0);
 // unreachable;
}
function __ZN17ncollide_geometry5shape10shape_impl180__LT_impl_u20_ncollide_geometry__shape__shape__Shape_LT_P_C__u20_M_GT__u20_for_u20_ncollide_geometry__shape__plane__Plane_LT__LT_P_u20_as_u20_ncollide_math__Point_GT___Vect_GT__GT_11as_ray_cast17hc2f9b56ca33f5451E($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$0>>2] = $1;
 $2 = ((($0)) + 4|0);
 HEAP32[$2>>2] = 200;
 return;
}
function __ZN17ncollide_geometry5shape10shape_impl180__LT_impl_u20_ncollide_geometry__shape__shape__Shape_LT_P_C__u20_M_GT__u20_for_u20_ncollide_geometry__shape__plane__Plane_LT__LT_P_u20_as_u20_ncollide_math__Point_GT___Vect_GT__GT_14as_point_query17h03a576416b91e76eE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$0>>2] = $1;
 $2 = ((($0)) + 4|0);
 HEAP32[$2>>2] = 232;
 return;
}
function __ZN17ncollide_geometry5shape10shape_impl180__LT_impl_u20_ncollide_geometry__shape__shape__Shape_LT_P_C__u20_M_GT__u20_for_u20_ncollide_geometry__shape__plane__Plane_LT__LT_P_u20_as_u20_ncollide_math__Point_GT___Vect_GT__GT_15bounding_sphere17h46da2f4fa292042bE($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$0>>2] = 0;
 $3 = ((($0)) + 4|0);
 HEAP32[$3>>2] = 0;
 $4 = ((($0)) + 8|0);
 HEAPF32[$4>>2] = 3.4028234663852886E+38;
 return;
}
function __ZN17ncollide_geometry5shape10shape_impl180__LT_impl_u20_ncollide_geometry__shape__shape__Shape_LT_P_C__u20_M_GT__u20_for_u20_ncollide_geometry__shape__plane__Plane_LT__LT_P_u20_as_u20_ncollide_math__Point_GT___Vect_GT__GT_4aabb17h833bac5df2483fd2E($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var label = 0, sp = 0, temp_Int32x4_ptr = 0;
 sp = STACKTOP;
 temp_Int32x4_ptr = $0;SIMD_Int32x4_store(HEAPU8, temp_Int32x4_ptr, SIMD_Int32x4(-16777217,-16777217,2130706431,2130706431));
 return;
}
function __ZN17ncollide_geometry5shape10shape_impl227__LT_impl_u20_ncollide_geometry__shape__shape__Shape_LT_P_C__u20_M_GT__u20_for_u20_ncollide_geometry__shape__ball__Ball_LT__LT__LT_P_u20_as_u20_ncollide_math__Point_GT___Vect_u20_as_u20_ncollide_math__Vector_GT___Scalar_GT__GT_11as_ray_cast17ha3f802fb7840f1d6E($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$0>>2] = $1;
 $2 = ((($0)) + 4|0);
 HEAP32[$2>>2] = 256;
 return;
}
function __ZN17ncollide_geometry5shape10shape_impl227__LT_impl_u20_ncollide_geometry__shape__shape__Shape_LT_P_C__u20_M_GT__u20_for_u20_ncollide_geometry__shape__ball__Ball_LT__LT__LT_P_u20_as_u20_ncollide_math__Point_GT___Vect_u20_as_u20_ncollide_math__Vector_GT___Scalar_GT__GT_14as_point_query17h7f482c22ac5242daE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$0>>2] = $1;
 $2 = ((($0)) + 4|0);
 HEAP32[$2>>2] = 288;
 return;
}
function __ZN17ncollide_geometry5shape10shape_impl227__LT_impl_u20_ncollide_geometry__shape__shape__Shape_LT_P_C__u20_M_GT__u20_for_u20_ncollide_geometry__shape__ball__Ball_LT__LT__LT_P_u20_as_u20_ncollide_math__Point_GT___Vect_u20_as_u20_ncollide_math__Vector_GT___Scalar_GT__GT_14as_support_map17h9c06e6c627b76332E($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$0>>2] = $1;
 $2 = ((($0)) + 4|0);
 HEAP32[$2>>2] = 312;
 return;
}
function __ZN17ncollide_geometry5shape10shape_impl227__LT_impl_u20_ncollide_geometry__shape__shape__Shape_LT_P_C__u20_M_GT__u20_for_u20_ncollide_geometry__shape__ball__Ball_LT__LT__LT_P_u20_as_u20_ncollide_math__Point_GT___Vect_u20_as_u20_ncollide_math__Vector_GT___Scalar_GT__GT_14is_support_map17h1d23661126402770E($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 1;
}
function __ZN17ncollide_geometry5shape10shape_impl227__LT_impl_u20_ncollide_geometry__shape__shape__Shape_LT_P_C__u20_M_GT__u20_for_u20_ncollide_geometry__shape__ball__Ball_LT__LT__LT_P_u20_as_u20_ncollide_math__Point_GT___Vect_u20_as_u20_ncollide_math__Vector_GT___Scalar_GT__GT_15bounding_sphere17hcecce46e5b7234c4E($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$idx$val3 = 0, $$idx1 = 0, $$idx1$val = 0.0, $$idx2 = 0, $$idx2$val = 0.0, $3 = 0.0, $4 = 0.0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $$idx$val3 = HEAP32[$1>>2]|0;
 $$idx1 = ((($2)) + 16|0);
 $$idx1$val = +HEAPF32[$$idx1>>2];
 $$idx2 = ((($2)) + 20|0);
 $$idx2$val = +HEAPF32[$$idx2>>2];
 $3 = $$idx1$val + 0.0;
 $4 = $$idx2$val + 0.0;
 HEAPF32[$0>>2] = $3;
 $5 = ((($0)) + 4|0);
 HEAPF32[$5>>2] = $4;
 $6 = ((($0)) + 8|0);
 HEAP32[$6>>2] = $$idx$val3;
 return;
}
function __ZN17ncollide_geometry5shape10shape_impl227__LT_impl_u20_ncollide_geometry__shape__shape__Shape_LT_P_C__u20_M_GT__u20_for_u20_ncollide_geometry__shape__ball__Ball_LT__LT__LT_P_u20_as_u20_ncollide_math__Point_GT___Vect_u20_as_u20_ncollide_math__Vector_GT___Scalar_GT__GT_4aabb17h7f9595c4d6c2be12E($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$idx$val = 0.0, $$idx1 = 0, $$idx1$val = 0.0, $$idx2 = 0, $$idx2$val = 0.0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $3 = 0.0, $4 = 0.0, $5 = 0.0, $6 = 0.0, $7 = 0.0, $8 = 0.0, $9 = 0, $or$cond$i$i$i$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $$idx$val = +HEAPF32[$1>>2];
 $$idx1 = ((($2)) + 16|0);
 $$idx1$val = +HEAPF32[$$idx1>>2];
 $$idx2 = ((($2)) + 20|0);
 $$idx2$val = +HEAPF32[$$idx2>>2];
 $3 = $$idx1$val + 0.0;
 $4 = $$idx2$val + 0.0;
 $5 = $3 - $$idx$val;
 $6 = $4 - $$idx$val;
 $7 = $$idx$val + $3;
 $8 = $$idx$val + $4;
 $9 = $5 <= $7;
 $10 = $6 <= $8;
 $or$cond$i$i$i$i$i$i = $9 & $10;
 if ($or$cond$i$i$i$i$i$i) {
  HEAPF32[$0>>2] = $5;
  $11 = ((($0)) + 4|0);
  HEAPF32[$11>>2] = $6;
  $12 = ((($0)) + 8|0);
  HEAPF32[$12>>2] = $7;
  $13 = ((($0)) + 12|0);
  HEAPF32[$13>>2] = $8;
  return;
 } else {
  __ZN3std9panicking11begin_panic17h9936a195de5ffc4dE(11795,46,5388);
  // unreachable;
 }
}
function __ZN17ncollide_geometry5shape5shape5Shape14as_support_map17h3d8a28d854f15ef4E($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$0>>2] = 0;
 return;
}
function __ZN17ncollide_geometry5shape5shape5Shape14is_support_map17h66ecdc5eb65b6e11E($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __ZN17ncollide_geometry5shape5shape5Shape18as_composite_shape17h157be3161b1da986E($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$0>>2] = 0;
 return;
}
function __ZN17ncollide_geometry5shape5shape5Shape18as_composite_shape17h67bac9b81535845aE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$0>>2] = 0;
 return;
}
function __ZN17ncollide_geometry5shape5shape5Shape18is_composite_shape17h5187135d6307b037E($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __ZN17ncollide_geometry5shape5shape5Shape18is_composite_shape17h7b4e76f2c8fc5c20E($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __ZN17ncollide_pipeline12narrow_phase17contact_generator38incremental_contact_manifold_generator22add_reduce_by_variance17h436ef11197f907e4E($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$sink$i = 0.0, $$sink$i20 = 0.0, $$sink71$i = 0.0, $$sink71$i19 = 0.0, $10 = 0.0, $11 = 0.0, $12 = 0.0, $13 = 0, $14 = 0, $15 = 0.0, $16 = 0.0, $17 = 0.0, $18 = 0.0, $19 = 0.0, $20 = 0.0, $21 = 0.0, $22 = 0, $23 = 0, $24 = 0, $25 = 0.0;
 var $26 = 0.0, $27 = 0.0, $28 = 0.0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0.0, $35 = 0.0, $36 = 0.0, $37 = 0.0, $38 = 0.0, $39 = 0.0, $4 = SIMD_Float32x4(0,0,0,0), $40 = 0.0, $41 = 0.0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0.0, $47 = 0.0, $48 = 0.0, $49 = 0.0, $5 = 0.0, $50 = 0.0, $51 = 0.0, $52 = 0.0, $53 = 0, $54 = 0, $55 = 0, $56 = 0.0, $57 = 0.0, $58 = 0.0, $59 = 0.0, $6 = 0.0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0.0, $66 = 0.0, $67 = 0.0, $68 = 0.0, $69 = 0.0, $7 = 0.0, $70 = 0.0, $71 = 0.0, $72 = 0.0, $73 = 0, $74 = 0, $75 = 0, $76 = 0.0, $77 = 0.0, $78 = 0.0, $79 = 0.0, $8 = 0.0, $80 = 0;
 var $81 = 0, $82 = 0.0, $83 = 0.0, $84 = 0.0, $85 = 0.0, $86 = 0, $87 = 0.0, $88 = 0.0, $89 = 0.0, $9 = 0.0, $90 = 0.0, $91 = 0.0, $92 = 0.0, $93 = 0.0, $94 = 0.0, $95 = 0.0, $96 = 0.0, $97 = 0.0, $98 = 0.0, $_39$sroa$0$0$$sroa_idx = 0;
 var $_39$sroa$13 = 0, $_39$sroa$13$0$$sroa_idx = 0, $_39$sroa$4$0$$sroa_idx51 = 0, $_39$sroa$5$0$$sroa_idx53 = 0, $_39$sroa$6$0$$sroa_idx55 = 0, $_39$sroa$7$0$$sroa_idx57 = 0, $_39$sroa$8$0$$sroa_idx59 = 0, $_39$sroa$9$0$$sroa_idx61 = 0, $_6$sroa$0$0$copyload$i$i$i$i = 0.0, $_6$sroa$0$0$copyload$i$i$i9$i = 0.0, $_6$sroa$4$0$$sroa_idx2$i$i$i$i = 0, $_6$sroa$4$0$$sroa_idx2$i$i$i10$i = 0, $_6$sroa$4$0$copyload$i$i$i$i = 0.0, $_6$sroa$4$0$copyload$i$i$i11$i = 0.0, $_6$sroa$5$0$$sroa_idx4$i$i$i$i = 0, $_6$sroa$5$0$$sroa_idx4$i$i$i12$i = 0, $_6$sroa$5$0$copyload$i$i$i$i = 0.0, $_6$sroa$5$0$copyload$i$i$i13$i = 0.0, $_6$sroa$6$0$$sroa_idx6$i$i$i$i = 0, $_6$sroa$6$0$$sroa_idx6$i$i$i14$i = 0;
 var $_6$sroa$6$0$copyload$i$i$i$i = 0.0, $_6$sroa$6$0$copyload$i$i$i15$i = 0.0, $argmax$0$ph = 0, $iter$sroa$0$0 = 0, $iter$sroa$0$0$i = 0, $iter$sroa$0$0$i23 = 0, $iter$sroa$0$0$ph = 0, $iter$sroa$0$0$ph$i = 0, $iter$sroa$0$0$ph$i21 = 0, $iter2$sroa$0$0$i = 0, $iter2$sroa$0$0$i31 = 0, $iter2$sroa$0$0$ph$i = 0, $iter2$sroa$0$0$ph$i26 = 0, $sum$0$ph$i = 0.0, $sum$0$ph$i$lcssa$sink = 0.0, $sum$0$ph$i27 = 0.0, $to_add$sroa$15 = 0, $to_add$sroa$15$0$$sroa_idx = 0, label = 0, sp = 0;
 var temp_Float32x4_ptr = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $to_add$sroa$15 = sp + 16|0;
 $_39$sroa$13 = sp;
 $4 = SIMD_Float32x4_load(HEAPU8, $1);
 $to_add$sroa$15$0$$sroa_idx = ((($1)) + 16|0);
 ;HEAP32[$to_add$sroa$15>>2]=HEAP32[$to_add$sroa$15$0$$sroa_idx>>2]|0;HEAP32[$to_add$sroa$15+4>>2]=HEAP32[$to_add$sroa$15$0$$sroa_idx+4>>2]|0;HEAP32[$to_add$sroa$15+8>>2]=HEAP32[$to_add$sroa$15$0$$sroa_idx+8>>2]|0;
 $5 = +SIMD_Float32x4_extractLane($4,0);
 $6 = +SIMD_Float32x4_extractLane($4,2);
 $7 = $5 + $6;
 $8 = +SIMD_Float32x4_extractLane($4,1);
 $9 = +SIMD_Float32x4_extractLane($4,3);
 $10 = $8 + $9;
 $11 = $7 * 0.5;
 $12 = $10 * 0.5;
 $$sink$i = $12;$$sink71$i = $11;$iter$sroa$0$0$ph$i = 0;
 L1: while(1) {
  $iter$sroa$0$0$i = $iter$sroa$0$0$ph$i;
  while(1) {
   $13 = ($iter$sroa$0$0$i>>>0)<(2);
   $14 = (($iter$sroa$0$0$i) + 1)|0;
   if (!($13)) {
    break L1;
   }
   $22 = ($iter$sroa$0$0$i|0)==(0);
   if ($22) {
    $iter$sroa$0$0$i = $14;
   } else {
    break;
   }
  }
  $23 = (((($0) + (($iter$sroa$0$0$i*52)|0)|0)) + 20|0);
  $24 = (((($0) + (($iter$sroa$0$0$i*52)|0)|0)) + 16|0);
  $25 = +HEAPF32[$24>>2];
  $26 = +HEAPF32[$23>>2];
  $27 = $$sink71$i + $25;
  $28 = $$sink$i + $26;
  $$sink$i = $28;$$sink71$i = $27;$iter$sroa$0$0$ph$i = $14;
 }
 $15 = $$sink71$i * 0.5;
 $16 = $$sink$i * 0.5;
 $17 = $11 - $15;
 $18 = $12 - $16;
 $19 = $17 * $17;
 $20 = $18 * $18;
 $21 = $19 + $20;
 $iter2$sroa$0$0$ph$i = 0;$sum$0$ph$i = $21;
 L8: while(1) {
  $iter2$sroa$0$0$i = $iter2$sroa$0$0$ph$i;
  while(1) {
   $29 = ($iter2$sroa$0$0$i>>>0)<(2);
   $30 = (($iter2$sroa$0$0$i) + 1)|0;
   if (!($29)) {
    $argmax$0$ph = 0;$iter$sroa$0$0$ph = 1;$sum$0$ph$i$lcssa$sink = $sum$0$ph$i;
    break L8;
   }
   $31 = ($iter2$sroa$0$0$i|0)==(0);
   if ($31) {
    $iter2$sroa$0$0$i = $30;
   } else {
    break;
   }
  }
  $32 = (((($0) + (($iter2$sroa$0$0$i*52)|0)|0)) + 16|0);
  $33 = (((($0) + (($iter2$sroa$0$0$i*52)|0)|0)) + 20|0);
  $34 = +HEAPF32[$32>>2];
  $35 = +HEAPF32[$33>>2];
  $36 = $34 - $15;
  $37 = $35 - $16;
  $38 = $36 * $36;
  $39 = $37 * $37;
  $40 = $38 + $39;
  $41 = $sum$0$ph$i + $40;
  $iter2$sroa$0$0$ph$i = $30;$sum$0$ph$i = $41;
 }
 L14: while(1) {
  $iter$sroa$0$0 = $iter$sroa$0$0$ph;
  while(1) {
   $42 = ($iter$sroa$0$0>>>0)<(2);
   $43 = (($iter$sroa$0$0) + 1)|0;
   if ($42) {
    $$sink$i20 = $12;$$sink71$i19 = $11;$iter$sroa$0$0$ph$i21 = 0;
   } else {
    break L14;
   }
   L18: while(1) {
    $iter$sroa$0$0$i23 = $iter$sroa$0$0$ph$i21;
    while(1) {
     $44 = ($iter$sroa$0$0$i23>>>0)<(2);
     $45 = (($iter$sroa$0$0$i23) + 1)|0;
     if (!($44)) {
      break L18;
     }
     $53 = ($iter$sroa$0$0$i23|0)==($iter$sroa$0$0|0);
     if ($53) {
      $iter$sroa$0$0$i23 = $45;
     } else {
      break;
     }
    }
    $54 = (((($0) + (($iter$sroa$0$0$i23*52)|0)|0)) + 20|0);
    $55 = (((($0) + (($iter$sroa$0$0$i23*52)|0)|0)) + 16|0);
    $56 = +HEAPF32[$55>>2];
    $57 = +HEAPF32[$54>>2];
    $58 = $$sink71$i19 + $56;
    $59 = $$sink$i20 + $57;
    $$sink$i20 = $59;$$sink71$i19 = $58;$iter$sroa$0$0$ph$i21 = $45;
   }
   $46 = $$sink71$i19 * 0.5;
   $47 = $$sink$i20 * 0.5;
   $48 = $11 - $46;
   $49 = $12 - $47;
   $50 = $48 * $48;
   $51 = $49 * $49;
   $52 = $50 + $51;
   $iter2$sroa$0$0$ph$i26 = 0;$sum$0$ph$i27 = $52;
   L25: while(1) {
    $iter2$sroa$0$0$i31 = $iter2$sroa$0$0$ph$i26;
    while(1) {
     $60 = ($iter2$sroa$0$0$i31>>>0)<(2);
     $61 = (($iter2$sroa$0$0$i31) + 1)|0;
     if (!($60)) {
      break L25;
     }
     $62 = ($iter2$sroa$0$0$i31|0)==($iter$sroa$0$0|0);
     if ($62) {
      $iter2$sroa$0$0$i31 = $61;
     } else {
      break;
     }
    }
    $63 = (((($0) + (($iter2$sroa$0$0$i31*52)|0)|0)) + 16|0);
    $64 = (((($0) + (($iter2$sroa$0$0$i31*52)|0)|0)) + 20|0);
    $65 = +HEAPF32[$63>>2];
    $66 = +HEAPF32[$64>>2];
    $67 = $65 - $46;
    $68 = $66 - $47;
    $69 = $67 * $67;
    $70 = $68 * $68;
    $71 = $69 + $70;
    $72 = $sum$0$ph$i27 + $71;
    $iter2$sroa$0$0$ph$i26 = $61;$sum$0$ph$i27 = $72;
   }
   $73 = $sum$0$ph$i27 > $sum$0$ph$i$lcssa$sink;
   if ($73) {
    $argmax$0$ph = $iter$sroa$0$0;$iter$sroa$0$0$ph = $43;$sum$0$ph$i$lcssa$sink = $sum$0$ph$i27;
    continue L14;
   } else {
    $iter$sroa$0$0 = $43;
   }
  }
 }
 ;HEAP32[$_39$sroa$13>>2]=HEAP32[$to_add$sroa$15>>2]|0;HEAP32[$_39$sroa$13+4>>2]=HEAP32[$to_add$sroa$15+4>>2]|0;HEAP32[$_39$sroa$13+8>>2]=HEAP32[$to_add$sroa$15+8>>2]|0;
 $74 = ((($2)) + 16|0);
 $75 = ((($2)) + 20|0);
 $76 = +HEAPF32[$74>>2];
 $77 = +HEAPF32[$75>>2];
 $78 = $5 - $76;
 $79 = $8 - $77;
 $80 = ((($3)) + 16|0);
 $81 = ((($3)) + 20|0);
 $82 = +HEAPF32[$80>>2];
 $83 = +HEAPF32[$81>>2];
 $84 = $6 - $82;
 $85 = $9 - $83;
 $86 = ($argmax$0$ph>>>0)<(2);
 if ($86) {
  $_6$sroa$6$0$$sroa_idx6$i$i$i14$i = ((($3)) + 12|0);
  $_6$sroa$6$0$copyload$i$i$i15$i = +HEAPF32[$_6$sroa$6$0$$sroa_idx6$i$i$i14$i>>2];
  $_6$sroa$5$0$$sroa_idx4$i$i$i12$i = ((($3)) + 8|0);
  $_6$sroa$5$0$copyload$i$i$i13$i = +HEAPF32[$_6$sroa$5$0$$sroa_idx4$i$i$i12$i>>2];
  $_6$sroa$4$0$$sroa_idx2$i$i$i10$i = ((($3)) + 4|0);
  $_6$sroa$4$0$copyload$i$i$i11$i = +HEAPF32[$_6$sroa$4$0$$sroa_idx2$i$i$i10$i>>2];
  $_6$sroa$0$0$copyload$i$i$i9$i = +HEAPF32[$3>>2];
  $_6$sroa$6$0$$sroa_idx6$i$i$i$i = ((($2)) + 12|0);
  $_6$sroa$6$0$copyload$i$i$i$i = +HEAPF32[$_6$sroa$6$0$$sroa_idx6$i$i$i$i>>2];
  $_6$sroa$5$0$$sroa_idx4$i$i$i$i = ((($2)) + 8|0);
  $_6$sroa$5$0$copyload$i$i$i$i = +HEAPF32[$_6$sroa$5$0$$sroa_idx4$i$i$i$i>>2];
  $_6$sroa$4$0$$sroa_idx2$i$i$i$i = ((($2)) + 4|0);
  $_6$sroa$4$0$copyload$i$i$i$i = +HEAPF32[$_6$sroa$4$0$$sroa_idx2$i$i$i$i>>2];
  $_6$sroa$0$0$copyload$i$i$i$i = +HEAPF32[$2>>2];
  $87 = $84 * $_6$sroa$5$0$copyload$i$i$i13$i;
  $88 = $85 * $_6$sroa$6$0$copyload$i$i$i15$i;
  $89 = $87 + $88;
  $90 = $84 * $_6$sroa$0$0$copyload$i$i$i9$i;
  $91 = $85 * $_6$sroa$4$0$copyload$i$i$i11$i;
  $92 = $90 + $91;
  $93 = $78 * $_6$sroa$5$0$copyload$i$i$i$i;
  $94 = $79 * $_6$sroa$6$0$copyload$i$i$i$i;
  $95 = $93 + $94;
  $96 = $78 * $_6$sroa$0$0$copyload$i$i$i$i;
  $97 = $79 * $_6$sroa$4$0$copyload$i$i$i$i;
  $98 = $96 + $97;
  $_39$sroa$0$0$$sroa_idx = (($0) + (($argmax$0$ph*52)|0)|0);
  HEAPF32[$_39$sroa$0$0$$sroa_idx>>2] = $98;
  $_39$sroa$4$0$$sroa_idx51 = (((($0) + (($argmax$0$ph*52)|0)|0)) + 4|0);
  HEAPF32[$_39$sroa$4$0$$sroa_idx51>>2] = $95;
  $_39$sroa$5$0$$sroa_idx53 = (((($0) + (($argmax$0$ph*52)|0)|0)) + 8|0);
  HEAPF32[$_39$sroa$5$0$$sroa_idx53>>2] = $92;
  $_39$sroa$6$0$$sroa_idx55 = (((($0) + (($argmax$0$ph*52)|0)|0)) + 12|0);
  HEAPF32[$_39$sroa$6$0$$sroa_idx55>>2] = $89;
  $_39$sroa$7$0$$sroa_idx57 = (((($0) + (($argmax$0$ph*52)|0)|0)) + 16|0);
  HEAPF32[$_39$sroa$7$0$$sroa_idx57>>2] = $11;
  $_39$sroa$8$0$$sroa_idx59 = (((($0) + (($argmax$0$ph*52)|0)|0)) + 20|0);
  HEAPF32[$_39$sroa$8$0$$sroa_idx59>>2] = $12;
  $_39$sroa$9$0$$sroa_idx61 = (((($0) + (($argmax$0$ph*52)|0)|0)) + 24|0);
  temp_Float32x4_ptr = $_39$sroa$9$0$$sroa_idx61;SIMD_Float32x4_store(HEAPU8, temp_Float32x4_ptr, $4);
  $_39$sroa$13$0$$sroa_idx = (((($0) + (($argmax$0$ph*52)|0)|0)) + 40|0);
  ;HEAP32[$_39$sroa$13$0$$sroa_idx>>2]=HEAP32[$_39$sroa$13>>2]|0;HEAP32[$_39$sroa$13$0$$sroa_idx+4>>2]=HEAP32[$_39$sroa$13+4>>2]|0;HEAP32[$_39$sroa$13$0$$sroa_idx+8>>2]=HEAP32[$_39$sroa$13+8>>2]|0;
  STACKTOP = sp;return;
 } else {
  __ZN4core9panicking18panic_bounds_check17hd14a5808e41829e9E(10711,156,209,$argmax$0$ph,2);
  // unreachable;
 }
}
function __ZN196__LT_ncollide_pipeline__broad_phase__dbvt_broad_phase__DBVTBroadPhase_LT_P_C__u20_BV_C__u20_T_GT__u20_as_u20_ncollide_pipeline__broad_phase__broad_phase__BroadPhase_LT_P_C__u20_BV_C__u20_T_GT__GT_12deferred_add17he324559ad8776310E($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$idx$i = 0, $$idx$val$i = 0, $$pre$i = 0, $10 = 0, $11 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $value$i$sroa$0$0$$sroa_idx = 0, $value$i$sroa$4 = 0, $value$i$sroa$4$0$$sroa_idx = 0, $value$i$sroa$5$0$$sroa_idx30 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $value$i$sroa$4 = sp;
 $4 = ((($0)) + 236|0);
 ;HEAP32[$value$i$sroa$4>>2]=HEAP32[$2>>2]|0;HEAP32[$value$i$sroa$4+4>>2]=HEAP32[$2+4>>2]|0;HEAP32[$value$i$sroa$4+8>>2]=HEAP32[$2+8>>2]|0;HEAP32[$value$i$sroa$4+12>>2]=HEAP32[$2+12>>2]|0;
 $5 = ((($0)) + 244|0);
 $6 = HEAP32[$5>>2]|0;
 $$idx$i = ((($0)) + 240|0);
 $$idx$val$i = HEAP32[$$idx$i>>2]|0;
 $7 = ($6|0)==($$idx$val$i|0);
 if ($7) {
  __ZN40__LT_alloc__raw_vec__RawVec_LT_T_GT__GT_6double17h445e638d2d3df6a4E($4);
  $$pre$i = HEAP32[$5>>2]|0;
  $9 = $$pre$i;
 } else {
  $9 = $6;
 }
 $8 = HEAP32[$4>>2]|0;
 $value$i$sroa$0$0$$sroa_idx = (($8) + (($9*24)|0)|0);
 HEAP32[$value$i$sroa$0$0$$sroa_idx>>2] = $1;
 $value$i$sroa$4$0$$sroa_idx = (((($8) + (($9*24)|0)|0)) + 4|0);
 ;HEAP32[$value$i$sroa$4$0$$sroa_idx>>2]=HEAP32[$value$i$sroa$4>>2]|0;HEAP32[$value$i$sroa$4$0$$sroa_idx+4>>2]=HEAP32[$value$i$sroa$4+4>>2]|0;HEAP32[$value$i$sroa$4$0$$sroa_idx+8>>2]=HEAP32[$value$i$sroa$4+8>>2]|0;HEAP32[$value$i$sroa$4$0$$sroa_idx+12>>2]=HEAP32[$value$i$sroa$4+12>>2]|0;
 $value$i$sroa$5$0$$sroa_idx30 = (((($8) + (($9*24)|0)|0)) + 20|0);
 HEAP32[$value$i$sroa$5$0$$sroa_idx30>>2] = $3;
 $10 = HEAP32[$5>>2]|0;
 $11 = (($10) + 1)|0;
 HEAP32[$5>>2] = $11;
 STACKTOP = sp;return;
}
function __ZN196__LT_ncollide_pipeline__broad_phase__dbvt_broad_phase__DBVTBroadPhase_LT_P_C__u20_BV_C__u20_T_GT__u20_as_u20_ncollide_pipeline__broad_phase__broad_phase__BroadPhase_LT_P_C__u20_BV_C__u20_T_GT__GT_15deferred_remove17hf9fd181c0ba3613bE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$idx = 0, $$idx$i = 0, $$idx$i$i = 0, $$idx$i$i$i = 0, $$idx$i$i$i$i = 0, $$idx$val$i = 0, $$idx$val$i$i = 0, $$idx$val$i$i$i = 0, $$idx$val$i$i$i$i = 0, $$idx1$val$i$i = 0, $$idx25 = 0, $$in$i$i = 0, $$pre$i = 0, $$sink237250$i$i$i$i = 0, $$val$i$i$i$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0;
 var $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0;
 var $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0;
 var $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0;
 var $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $8 = 0, $9 = 0, $_6$sroa$6$1 = 0, $dist$0$i$i$i$i$i$i = 0, $or$cond = 0, $probe$sroa$8$0252$i$i$i$i = 0, $switch2tmp$i = 0, $switchtmp$i = 0, $switchtmp$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 40|0);
 $3 = HEAP32[$2>>2]|0;
 $switchtmp$i = ($3|0)==(0|0);
 do {
  if ($switchtmp$i) {
   $_6$sroa$6$1 = $1;
  } else {
   $$idx = ((($0)) + 16|0);
   $4 = $$idx;
   $5 = $4;
   $6 = HEAP32[$5>>2]|0;
   $7 = (($4) + 4)|0;
   $8 = $7;
   $9 = HEAP32[$8>>2]|0;
   $$idx25 = ((($0)) + 24|0);
   $10 = $$idx25;
   $11 = $10;
   $12 = HEAP32[$11>>2]|0;
   $13 = (($10) + 4)|0;
   $14 = $13;
   $15 = HEAP32[$14>>2]|0;
   $16 = (__ZN72__LT_std__collections__hash__map__HashMap_LT_K_C__u20_V_C__u20_S_GT__GT_9make_hash17he80a4aab712026bfE($6,$9,$12,$15,$1)|0);
   $17 = tempRet0;
   $$idx$i$i$i$i = ((($0)) + 32|0);
   $$idx$val$i$i$i$i = HEAP32[$$idx$i$i$i$i>>2]|0;
   $18 = ($$idx$val$i$i$i$i|0)==(0);
   if ($18) {
    return;
   }
   $19 = (($$idx$val$i$i$i$i) + -1)|0;
   $20 = $19 & $16;
   $21 = (($3) + ($20<<3)|0);
   $22 = $21;
   $23 = $22;
   $24 = HEAP32[$23>>2]|0;
   $25 = (($22) + 4)|0;
   $26 = $25;
   $27 = HEAP32[$26>>2]|0;
   $28 = ($24|0)==(0);
   $29 = ($27|0)==(0);
   $30 = $28 & $29;
   if ($30) {
    return;
   }
   $31 = (($3) + ($$idx$val$i$i$i$i<<3)|0);
   $32 = (($31) + ($20<<3)|0);
   $33 = (1 - ($$idx$val$i$i$i$i))|0;
   $$in$i$i = $32;$$sink237250$i$i$i$i = $21;$35 = $24;$40 = $27;$probe$sroa$8$0252$i$i$i$i = $20;
   while(1) {
    $34 = (($probe$sroa$8$0252$i$i$i$i) - ($35))|0;
    $36 = $34 & $19;
    $37 = (($probe$sroa$8$0252$i$i$i$i) - ($36))|0;
    $38 = ($20|0)<($37|0);
    if ($38) {
     label = 14;
     break;
    }
    $39 = ($35|0)==($16|0);
    $41 = ($40|0)==($17|0);
    $42 = $39 & $41;
    if ($42) {
     $$val$i$i$i$i = HEAP32[$$in$i$i>>2]|0;
     $43 = ($$val$i$i$i$i|0)==($1|0);
     if ($43) {
      label = 9;
      break;
     }
    }
    $44 = (($probe$sroa$8$0252$i$i$i$i) + 1)|0;
    $45 = $44 & $19;
    $46 = ($45|0)==(0);
    $dist$0$i$i$i$i$i$i = $46 ? $33 : 1;
    $47 = (($$sink237250$i$i$i$i) + ($dist$0$i$i$i$i$i$i<<3)|0);
    $48 = (($$in$i$i) + ($dist$0$i$i$i$i$i$i<<3)|0);
    $49 = $47;
    $50 = $49;
    $51 = HEAP32[$50>>2]|0;
    $52 = (($49) + 4)|0;
    $53 = $52;
    $54 = HEAP32[$53>>2]|0;
    $55 = ($51|0)==(0);
    $56 = ($54|0)==(0);
    $57 = $55 & $56;
    if ($57) {
     label = 14;
     break;
    } else {
     $$in$i$i = $48;$$sink237250$i$i$i$i = $47;$35 = $51;$40 = $54;$probe$sroa$8$0252$i$i$i$i = $44;
    }
   }
   if ((label|0) == 9) {
    $$idx$i$i$i = ((($$in$i$i)) + 4|0);
    $$idx$val$i$i$i = HEAP32[$$idx$i$i$i>>2]|0;
    $_6$sroa$6$1 = $$idx$val$i$i$i;
    break;
   }
   else if ((label|0) == 14) {
    return;
   }
  }
 } while(0);
 $$idx$i$i = ((($0)) + 8|0);
 $$idx$val$i$i = HEAP32[$$idx$i$i>>2]|0;
 $58 = ($$idx$val$i$i>>>0)>($_6$sroa$6$1>>>0);
 if (!($58)) {
  __ZN4core9panicking5panic17ha7507e8e32961bfeE(6500);
  // unreachable;
 }
 $$idx1$val$i$i = HEAP32[$0>>2]|0;
 $59 = (($$idx1$val$i$i) + (($_6$sroa$6$1*12)|0)|0);
 $60 = (((($$idx1$val$i$i) + (($_6$sroa$6$1*12)|0)|0)) + 4|0);
 $61 = HEAP32[$60>>2]|0;
 $switchtmp$i$i = ($61|0)==(0|0);
 $switch2tmp$i = ($59|0)==(0|0);
 $or$cond = $switchtmp$i$i | $switch2tmp$i;
 if ($or$cond) {
  __ZN4core9panicking5panic17ha7507e8e32961bfeE(6500);
  // unreachable;
 }
 $62 = (((($$idx1$val$i$i) + (($_6$sroa$6$1*12)|0)|0)) + 8|0);
 $63 = HEAP32[$62>>2]|0;
 switch ($63|0) {
 case -2: case -1:  {
  break;
 }
 case 0:  {
  HEAP32[$62>>2] = -2;
  break;
 }
 default: {
  HEAP32[$62>>2] = -1;
 }
 }
 $64 = ((($0)) + 184|0);
 HEAP8[$64>>0] = 1;
 $65 = ((($0)) + 212|0);
 $66 = ((($0)) + 220|0);
 $67 = HEAP32[$66>>2]|0;
 $$idx$i = ((($0)) + 216|0);
 $$idx$val$i = HEAP32[$$idx$i>>2]|0;
 $68 = ($67|0)==($$idx$val$i|0);
 if ($68) {
  __ZN40__LT_alloc__raw_vec__RawVec_LT_T_GT__GT_6double17he78dc10a992efc57E($65);
  $$pre$i = HEAP32[$66>>2]|0;
  $71 = $$pre$i;
 } else {
  $71 = $67;
 }
 $69 = HEAP32[$65>>2]|0;
 $70 = (($69) + ($71<<2)|0);
 HEAP32[$70>>2] = $1;
 $72 = HEAP32[$66>>2]|0;
 $73 = (($72) + 1)|0;
 HEAP32[$66>>2] = $73;
 return;
}
function __ZN196__LT_ncollide_pipeline__broad_phase__dbvt_broad_phase__DBVTBroadPhase_LT_P_C__u20_BV_C__u20_T_GT__u20_as_u20_ncollide_pipeline__broad_phase__broad_phase__BroadPhase_LT_P_C__u20_BV_C__u20_T_GT__GT_22interferences_with_ray17he3480c968536d3f2E($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$idx$i = 0, $$idx$val = 0, $$idx$val$i = 0, $$idx$val$i31 = 0, $$idx21 = 0, $$idx21$val = 0, $$pre$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $_25$sroa$0$0$copyload = 0, $_25$sroa$4$0$copyload = 0, $_25$sroa$5$0$copyload = 0, $collector = 0, $iter$sroa$7$081 = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, $not$$i$i$i$i = 0, $not$$i$i$i$i22 = 0, $not$$i$i$i$i36 = 0, $or$cond$i = 0, $personalityslot$sroa$0$079 = 0, $personalityslot$sroa$5$077 = 0;
 var $switch$i = 0, $switch$i24 = 0, $switch2tmp$i$i = 0, $switchtmp$i$i$i = 0, $visitor = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $collector = sp + 8|0;
 $visitor = sp;
 HEAP32[$collector>>2] = 1;
 $3 = ((($collector)) + 4|0);
 HEAP32[$3>>2] = 0;
 $4 = ((($collector)) + 8|0);
 HEAP32[$4>>2] = 0;
 HEAP32[$visitor>>2] = $1;
 $5 = ((($visitor)) + 4|0);
 HEAP32[$5>>2] = $collector;
 $6 = ((($0)) + 76|0);
 $7 = HEAP32[$6>>2]|0;
 $switch$i = ($7|0)==(1);
 if ($switch$i) {
  $8 = ((($0)) + 80|0);
  __THREW__ = 0;
  invoke_vii(229,($8|0),($visitor|0));
  $9 = __THREW__; __THREW__ = 0;
  $10 = $9&1;
  if (!($10)) {
   label = 4;
  }
 } else {
  label = 4;
 }
 do {
  if ((label|0) == 4) {
   $11 = ((($0)) + 104|0);
   $12 = HEAP32[$11>>2]|0;
   $switch$i24 = ($12|0)==(1);
   if ($switch$i24) {
    $13 = ((($0)) + 108|0);
    __THREW__ = 0;
    invoke_vii(229,($13|0),($visitor|0));
    $14 = __THREW__; __THREW__ = 0;
    $15 = $14&1;
    if ($15) {
     break;
    }
   }
   $_25$sroa$0$0$copyload = HEAP32[$collector>>2]|0;
   $_25$sroa$4$0$copyload = HEAP32[$3>>2]|0;
   $_25$sroa$5$0$copyload = HEAP32[$4>>2]|0;
   $16 = (($_25$sroa$0$0$copyload) + ($_25$sroa$5$0$copyload<<2)|0);
   $17 = ($_25$sroa$5$0$copyload|0)==(0);
   L8: do {
    if (!($17)) {
     $$idx21 = ((($0)) + 8|0);
     $18 = ((($2)) + 8|0);
     $$idx$i = ((($2)) + 4|0);
     $iter$sroa$7$081 = $_25$sroa$0$0$copyload;
     while(1) {
      $19 = ((($iter$sroa$7$081)) + 4|0);
      $$idx$val$i31 = HEAP32[$iter$sroa$7$081>>2]|0;
      $$idx$val = HEAP32[$0>>2]|0;
      $$idx21$val = HEAP32[$$idx21>>2]|0;
      $20 = ($$idx21$val>>>0)>($$idx$val$i31>>>0);
      if (!($20)) {
       label = 12;
       break;
      }
      $21 = (((($$idx$val) + (($$idx$val$i31*12)|0)|0)) + 4|0);
      $22 = (($$idx$val) + (($$idx$val$i31*12)|0)|0);
      $23 = HEAP32[$21>>2]|0;
      $switchtmp$i$i$i = ($23|0)==(0|0);
      $switch2tmp$i$i = ($22|0)==(0|0);
      $or$cond$i = $switch2tmp$i$i | $switchtmp$i$i$i;
      if ($or$cond$i) {
       label = 12;
       break;
      }
      $27 = HEAP32[$18>>2]|0;
      $$idx$val$i = HEAP32[$$idx$i>>2]|0;
      $28 = ($27|0)==($$idx$val$i|0);
      if ($28) {
       __THREW__ = 0;
       invoke_vi(230,($2|0));
       $29 = __THREW__; __THREW__ = 0;
       $30 = $29&1;
       if ($30) {
        label = 20;
        break;
       }
       $$pre$i = HEAP32[$18>>2]|0;
       $33 = $$pre$i;
      } else {
       $33 = $27;
      }
      $31 = HEAP32[$2>>2]|0;
      $32 = (($31) + ($33<<2)|0);
      HEAP32[$32>>2] = $22;
      $34 = HEAP32[$18>>2]|0;
      $35 = (($34) + 1)|0;
      HEAP32[$18>>2] = $35;
      $36 = ($19|0)==($16|0);
      if ($36) {
       break L8;
      } else {
       $iter$sroa$7$081 = $19;
      }
     }
     if ((label|0) == 12) {
      __THREW__ = 0;
      invoke_vii(219,(10432|0),15);
      $24 = __THREW__; __THREW__ = 0;
      $25 = ___cxa_find_matching_catch_2()|0;
      $26 = tempRet0;
      $lpad$phi$index = $25;$lpad$phi$index2 = $26;
     }
     else if ((label|0) == 20) {
      $41 = ___cxa_find_matching_catch_2()|0;
      $42 = tempRet0;
      $lpad$phi$index = $41;$lpad$phi$index2 = $42;
     }
     $not$$i$i$i$i = ($_25$sroa$4$0$copyload|0)==(0);
     if ($not$$i$i$i$i) {
      $personalityslot$sroa$0$079 = $lpad$phi$index;$personalityslot$sroa$5$077 = $lpad$phi$index2;
      ___resumeException($personalityslot$sroa$0$079|0);
      // unreachable;
     }
     _free($_25$sroa$0$0$copyload);
     $personalityslot$sroa$0$079 = $lpad$phi$index;$personalityslot$sroa$5$077 = $lpad$phi$index2;
     ___resumeException($personalityslot$sroa$0$079|0);
     // unreachable;
    }
   } while(0);
   $not$$i$i$i$i36 = ($_25$sroa$4$0$copyload|0)==(0);
   if ($not$$i$i$i$i36) {
    STACKTOP = sp;return;
   }
   _free($_25$sroa$0$0$copyload);
   STACKTOP = sp;return;
  }
 } while(0);
 $37 = ___cxa_find_matching_catch_2()|0;
 $38 = tempRet0;
 $39 = HEAP32[$3>>2]|0;
 $not$$i$i$i$i22 = ($39|0)==(0);
 if ($not$$i$i$i$i22) {
  $personalityslot$sroa$0$079 = $37;$personalityslot$sroa$5$077 = $38;
  ___resumeException($personalityslot$sroa$0$079|0);
  // unreachable;
 }
 $40 = HEAP32[$collector>>2]|0;
 _free($40);
 $personalityslot$sroa$0$079 = $37;$personalityslot$sroa$5$077 = $38;
 ___resumeException($personalityslot$sroa$0$079|0);
 // unreachable;
}
function __ZN196__LT_ncollide_pipeline__broad_phase__dbvt_broad_phase__DBVTBroadPhase_LT_P_C__u20_BV_C__u20_T_GT__u20_as_u20_ncollide_pipeline__broad_phase__broad_phase__BroadPhase_LT_P_C__u20_BV_C__u20_T_GT__GT_24interferences_with_point17h6b57069de7a9c17aE($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$idx$i = 0, $$idx$val = 0, $$idx$val$i = 0, $$idx$val$i31 = 0, $$idx21 = 0, $$idx21$val = 0, $$pre$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $_25$sroa$0$0$copyload = 0, $_25$sroa$4$0$copyload = 0, $_25$sroa$5$0$copyload = 0, $collector = 0, $iter$sroa$7$081 = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, $not$$i$i$i$i = 0, $not$$i$i$i$i22 = 0, $not$$i$i$i$i36 = 0, $or$cond$i = 0, $personalityslot$sroa$0$079 = 0, $personalityslot$sroa$5$077 = 0;
 var $switch$i = 0, $switch$i24 = 0, $switch2tmp$i$i = 0, $switchtmp$i$i$i = 0, $visitor = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $collector = sp + 8|0;
 $visitor = sp;
 HEAP32[$collector>>2] = 1;
 $3 = ((($collector)) + 4|0);
 HEAP32[$3>>2] = 0;
 $4 = ((($collector)) + 8|0);
 HEAP32[$4>>2] = 0;
 HEAP32[$visitor>>2] = $1;
 $5 = ((($visitor)) + 4|0);
 HEAP32[$5>>2] = $collector;
 $6 = ((($0)) + 76|0);
 $7 = HEAP32[$6>>2]|0;
 $switch$i = ($7|0)==(1);
 if ($switch$i) {
  $8 = ((($0)) + 80|0);
  __THREW__ = 0;
  invoke_vii(231,($8|0),($visitor|0));
  $9 = __THREW__; __THREW__ = 0;
  $10 = $9&1;
  if (!($10)) {
   label = 4;
  }
 } else {
  label = 4;
 }
 do {
  if ((label|0) == 4) {
   $11 = ((($0)) + 104|0);
   $12 = HEAP32[$11>>2]|0;
   $switch$i24 = ($12|0)==(1);
   if ($switch$i24) {
    $13 = ((($0)) + 108|0);
    __THREW__ = 0;
    invoke_vii(231,($13|0),($visitor|0));
    $14 = __THREW__; __THREW__ = 0;
    $15 = $14&1;
    if ($15) {
     break;
    }
   }
   $_25$sroa$0$0$copyload = HEAP32[$collector>>2]|0;
   $_25$sroa$4$0$copyload = HEAP32[$3>>2]|0;
   $_25$sroa$5$0$copyload = HEAP32[$4>>2]|0;
   $16 = (($_25$sroa$0$0$copyload) + ($_25$sroa$5$0$copyload<<2)|0);
   $17 = ($_25$sroa$5$0$copyload|0)==(0);
   L8: do {
    if (!($17)) {
     $$idx21 = ((($0)) + 8|0);
     $18 = ((($2)) + 8|0);
     $$idx$i = ((($2)) + 4|0);
     $iter$sroa$7$081 = $_25$sroa$0$0$copyload;
     while(1) {
      $19 = ((($iter$sroa$7$081)) + 4|0);
      $$idx$val$i31 = HEAP32[$iter$sroa$7$081>>2]|0;
      $$idx$val = HEAP32[$0>>2]|0;
      $$idx21$val = HEAP32[$$idx21>>2]|0;
      $20 = ($$idx21$val>>>0)>($$idx$val$i31>>>0);
      if (!($20)) {
       label = 12;
       break;
      }
      $21 = (((($$idx$val) + (($$idx$val$i31*12)|0)|0)) + 4|0);
      $22 = (($$idx$val) + (($$idx$val$i31*12)|0)|0);
      $23 = HEAP32[$21>>2]|0;
      $switchtmp$i$i$i = ($23|0)==(0|0);
      $switch2tmp$i$i = ($22|0)==(0|0);
      $or$cond$i = $switch2tmp$i$i | $switchtmp$i$i$i;
      if ($or$cond$i) {
       label = 12;
       break;
      }
      $27 = HEAP32[$18>>2]|0;
      $$idx$val$i = HEAP32[$$idx$i>>2]|0;
      $28 = ($27|0)==($$idx$val$i|0);
      if ($28) {
       __THREW__ = 0;
       invoke_vi(230,($2|0));
       $29 = __THREW__; __THREW__ = 0;
       $30 = $29&1;
       if ($30) {
        label = 20;
        break;
       }
       $$pre$i = HEAP32[$18>>2]|0;
       $33 = $$pre$i;
      } else {
       $33 = $27;
      }
      $31 = HEAP32[$2>>2]|0;
      $32 = (($31) + ($33<<2)|0);
      HEAP32[$32>>2] = $22;
      $34 = HEAP32[$18>>2]|0;
      $35 = (($34) + 1)|0;
      HEAP32[$18>>2] = $35;
      $36 = ($19|0)==($16|0);
      if ($36) {
       break L8;
      } else {
       $iter$sroa$7$081 = $19;
      }
     }
     if ((label|0) == 12) {
      __THREW__ = 0;
      invoke_vii(219,(10432|0),15);
      $24 = __THREW__; __THREW__ = 0;
      $25 = ___cxa_find_matching_catch_2()|0;
      $26 = tempRet0;
      $lpad$phi$index = $25;$lpad$phi$index2 = $26;
     }
     else if ((label|0) == 20) {
      $41 = ___cxa_find_matching_catch_2()|0;
      $42 = tempRet0;
      $lpad$phi$index = $41;$lpad$phi$index2 = $42;
     }
     $not$$i$i$i$i = ($_25$sroa$4$0$copyload|0)==(0);
     if ($not$$i$i$i$i) {
      $personalityslot$sroa$0$079 = $lpad$phi$index;$personalityslot$sroa$5$077 = $lpad$phi$index2;
      ___resumeException($personalityslot$sroa$0$079|0);
      // unreachable;
     }
     _free($_25$sroa$0$0$copyload);
     $personalityslot$sroa$0$079 = $lpad$phi$index;$personalityslot$sroa$5$077 = $lpad$phi$index2;
     ___resumeException($personalityslot$sroa$0$079|0);
     // unreachable;
    }
   } while(0);
   $not$$i$i$i$i36 = ($_25$sroa$4$0$copyload|0)==(0);
   if ($not$$i$i$i$i36) {
    STACKTOP = sp;return;
   }
   _free($_25$sroa$0$0$copyload);
   STACKTOP = sp;return;
  }
 } while(0);
 $37 = ___cxa_find_matching_catch_2()|0;
 $38 = tempRet0;
 $39 = HEAP32[$3>>2]|0;
 $not$$i$i$i$i22 = ($39|0)==(0);
 if ($not$$i$i$i$i22) {
  $personalityslot$sroa$0$079 = $37;$personalityslot$sroa$5$077 = $38;
  ___resumeException($personalityslot$sroa$0$079|0);
  // unreachable;
 }
 $40 = HEAP32[$collector>>2]|0;
 _free($40);
 $personalityslot$sroa$0$079 = $37;$personalityslot$sroa$5$077 = $38;
 ___resumeException($personalityslot$sroa$0$079|0);
 // unreachable;
}
function __ZN196__LT_ncollide_pipeline__broad_phase__dbvt_broad_phase__DBVTBroadPhase_LT_P_C__u20_BV_C__u20_T_GT__u20_as_u20_ncollide_pipeline__broad_phase__broad_phase__BroadPhase_LT_P_C__u20_BV_C__u20_T_GT__GT_28deferred_set_bounding_volume17he8085a76ae8c8ed0E($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$arith = 0, $$idx$i$i = 0, $$idx$i$i$i = 0, $$idx$i$i$i$i = 0, $$idx$i26 = 0, $$idx$i30 = 0, $$idx$val$i = 0, $$idx$val$i$i = 0, $$idx$val$i$i$i = 0, $$idx$val$i$i$i$i = 0, $$idx$val$i27 = 0, $$idx$val$i31 = 0.0, $$idx1$i = 0, $$idx1$val$i = 0.0, $$idx1$val$i$i = 0, $$idx4$i = 0, $$idx4$val$i = 0.0, $$idx5$i = 0, $$idx5$val$i = 0.0, $$idx84 = 0;
 var $$idx85 = 0, $$in$i$i = 0, $$overflow = 0, $$pre$i = 0, $$sink237250$i$i$i$i = 0, $$val$i$i$i$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0.0, $76 = 0, $77 = 0, $78 = 0.0;
 var $79 = 0.0, $8 = 0, $80 = 0.0, $81 = 0.0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $_7$sroa$5$1 = 0, $bounding_volume$sroa$0$0$copyload = 0.0, $bounding_volume$sroa$5$0$$sroa_idx61 = 0;
 var $bounding_volume$sroa$5$0$copyload = 0.0, $bounding_volume$sroa$7$0$$sroa_idx63 = 0, $bounding_volume$sroa$7$0$copyload = 0.0, $bounding_volume$sroa$9$0$$sroa_idx65 = 0, $bounding_volume$sroa$9$0$copyload = 0.0, $cond$i$i$i = 0, $dist$0$i$i$i$i$i$i = 0, $or$cond = 0, $or$cond$i$i$i = 0, $or$cond$i$i8$i = 0, $probe$sroa$8$0252$i$i$i$i = 0, $switch2tmp$i = 0, $switchtmp$i = 0, $switchtmp$i$i = 0, $value$i$sroa$0$0$$sroa_idx = 0, $value$i$sroa$4$0$$sroa_idx68 = 0, $value$i$sroa$5$0$$sroa_idx70 = 0, $value$i$sroa$6$0$$sroa_idx72 = 0, $value$i$sroa$7$0$$sroa_idx74 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $bounding_volume$sroa$0$0$copyload = +HEAPF32[$2>>2];
 $bounding_volume$sroa$5$0$$sroa_idx61 = ((($2)) + 4|0);
 $bounding_volume$sroa$5$0$copyload = +HEAPF32[$bounding_volume$sroa$5$0$$sroa_idx61>>2];
 $bounding_volume$sroa$7$0$$sroa_idx63 = ((($2)) + 8|0);
 $bounding_volume$sroa$7$0$copyload = +HEAPF32[$bounding_volume$sroa$7$0$$sroa_idx63>>2];
 $bounding_volume$sroa$9$0$$sroa_idx65 = ((($2)) + 12|0);
 $bounding_volume$sroa$9$0$copyload = +HEAPF32[$bounding_volume$sroa$9$0$$sroa_idx65>>2];
 $3 = ((($0)) + 40|0);
 $4 = HEAP32[$3>>2]|0;
 $switchtmp$i = ($4|0)==(0|0);
 do {
  if ($switchtmp$i) {
   $_7$sroa$5$1 = $1;
  } else {
   $$idx84 = ((($0)) + 16|0);
   $5 = $$idx84;
   $6 = $5;
   $7 = HEAP32[$6>>2]|0;
   $8 = (($5) + 4)|0;
   $9 = $8;
   $10 = HEAP32[$9>>2]|0;
   $$idx85 = ((($0)) + 24|0);
   $11 = $$idx85;
   $12 = $11;
   $13 = HEAP32[$12>>2]|0;
   $14 = (($11) + 4)|0;
   $15 = $14;
   $16 = HEAP32[$15>>2]|0;
   $17 = (__ZN72__LT_std__collections__hash__map__HashMap_LT_K_C__u20_V_C__u20_S_GT__GT_9make_hash17he80a4aab712026bfE($7,$10,$13,$16,$1)|0);
   $18 = tempRet0;
   $$idx$i$i$i$i = ((($0)) + 32|0);
   $$idx$val$i$i$i$i = HEAP32[$$idx$i$i$i$i>>2]|0;
   $19 = ($$idx$val$i$i$i$i|0)==(0);
   if ($19) {
    return;
   }
   $20 = (($$idx$val$i$i$i$i) + -1)|0;
   $21 = $20 & $17;
   $22 = (($4) + ($21<<3)|0);
   $23 = $22;
   $24 = $23;
   $25 = HEAP32[$24>>2]|0;
   $26 = (($23) + 4)|0;
   $27 = $26;
   $28 = HEAP32[$27>>2]|0;
   $29 = ($25|0)==(0);
   $30 = ($28|0)==(0);
   $31 = $29 & $30;
   if ($31) {
    return;
   }
   $32 = (($4) + ($$idx$val$i$i$i$i<<3)|0);
   $33 = (($32) + ($21<<3)|0);
   $34 = (1 - ($$idx$val$i$i$i$i))|0;
   $$in$i$i = $33;$$sink237250$i$i$i$i = $22;$36 = $25;$41 = $28;$probe$sroa$8$0252$i$i$i$i = $21;
   while(1) {
    $35 = (($probe$sroa$8$0252$i$i$i$i) - ($36))|0;
    $37 = $35 & $20;
    $38 = (($probe$sroa$8$0252$i$i$i$i) - ($37))|0;
    $39 = ($21|0)<($38|0);
    if ($39) {
     label = 12;
     break;
    }
    $40 = ($36|0)==($17|0);
    $42 = ($41|0)==($18|0);
    $43 = $40 & $42;
    if ($43) {
     $$val$i$i$i$i = HEAP32[$$in$i$i>>2]|0;
     $44 = ($$val$i$i$i$i|0)==($1|0);
     if ($44) {
      label = 9;
      break;
     }
    }
    $45 = (($probe$sroa$8$0252$i$i$i$i) + 1)|0;
    $46 = $45 & $20;
    $47 = ($46|0)==(0);
    $dist$0$i$i$i$i$i$i = $47 ? $34 : 1;
    $48 = (($$sink237250$i$i$i$i) + ($dist$0$i$i$i$i$i$i<<3)|0);
    $49 = (($$in$i$i) + ($dist$0$i$i$i$i$i$i<<3)|0);
    $50 = $48;
    $51 = $50;
    $52 = HEAP32[$51>>2]|0;
    $53 = (($50) + 4)|0;
    $54 = $53;
    $55 = HEAP32[$54>>2]|0;
    $56 = ($52|0)==(0);
    $57 = ($55|0)==(0);
    $58 = $56 & $57;
    if ($58) {
     label = 12;
     break;
    } else {
     $$in$i$i = $49;$$sink237250$i$i$i$i = $48;$36 = $52;$41 = $55;$probe$sroa$8$0252$i$i$i$i = $45;
    }
   }
   if ((label|0) == 9) {
    $$idx$i$i$i = ((($$in$i$i)) + 4|0);
    $$idx$val$i$i$i = HEAP32[$$idx$i$i$i>>2]|0;
    $_7$sroa$5$1 = $$idx$val$i$i$i;
    break;
   }
   else if ((label|0) == 12) {
    return;
   }
  }
 } while(0);
 $$idx$i$i = ((($0)) + 8|0);
 $$idx$val$i$i = HEAP32[$$idx$i$i>>2]|0;
 $59 = ($$idx$val$i$i>>>0)>($_7$sroa$5$1>>>0);
 if (!($59)) {
  __ZN4core9panicking5panic17ha7507e8e32961bfeE(6500);
  // unreachable;
 }
 $$idx1$val$i$i = HEAP32[$0>>2]|0;
 $60 = (($$idx1$val$i$i) + (($_7$sroa$5$1*12)|0)|0);
 $61 = (((($$idx1$val$i$i) + (($_7$sroa$5$1*12)|0)|0)) + 4|0);
 $62 = HEAP32[$61>>2]|0;
 $switchtmp$i$i = ($62|0)==(0|0);
 $switch2tmp$i = ($60|0)==(0|0);
 $or$cond = $switchtmp$i$i | $switch2tmp$i;
 if ($or$cond) {
  __ZN4core9panicking5panic17ha7507e8e32961bfeE(6500);
  // unreachable;
 }
 $63 = (((($$idx1$val$i$i) + (($_7$sroa$5$1*12)|0)|0)) + 8|0);
 $64 = HEAP32[$63>>2]|0;
 $65 = ($64|0)>(-1);
 if (!($65)) {
  return;
 }
 $66 = (((($$idx1$val$i$i) + (($_7$sroa$5$1*12)|0)|0)) + 4|0);
 $67 = ((($62)) + 8|0);
 $68 = HEAP32[$67>>2]|0;
 $cond$i$i$i = ($68|0)==(-1);
 if ($cond$i$i$i) {
  __ZN4core6result13unwrap_failed17h0dc63b200336bf84E();
  // unreachable;
 }
 $69 = (($68) + 1)|0;
 HEAP32[$67>>2] = $69;
 $$idx$i30 = ((($62)) + 12|0);
 $$idx$val$i31 = +HEAPF32[$$idx$i30>>2];
 $$idx1$i = ((($62)) + 16|0);
 $$idx1$val$i = +HEAPF32[$$idx1$i>>2];
 $70 = $$idx$val$i31 <= $bounding_volume$sroa$0$0$copyload;
 $71 = $$idx1$val$i <= $bounding_volume$sroa$5$0$copyload;
 $or$cond$i$i$i = $70 & $71;
 if ($or$cond$i$i$i) {
  $$idx4$i = ((($62)) + 20|0);
  $$idx4$val$i = +HEAPF32[$$idx4$i>>2];
  $$idx5$i = ((($62)) + 24|0);
  $$idx5$val$i = +HEAPF32[$$idx5$i>>2];
  $72 = $$idx4$val$i >= $bounding_volume$sroa$7$0$copyload;
  $73 = $$idx5$val$i >= $bounding_volume$sroa$9$0$copyload;
  $or$cond$i$i8$i = $72 & $73;
  if ($or$cond$i$i8$i) {
   HEAP32[$67>>2] = $68;
   $77 = HEAP32[$63>>2]|0;
   switch ($77|0) {
   case 0:  {
    label = 25;
    break;
   }
   case 100:  {
    return;
    break;
   }
   default: {
   }
   }
   do {
    if ((label|0) == 25) {
     $90 = ((($0)) + 92|0);
     __ZN80__LT_ncollide_geometry__partitioning__dbvt__DBVT_LT_P_C__u20_B_C__u20_BV_GT__GT_6remove17h870bd997ceaebb8cE($90,$66);
     $$idx$val$i = HEAP32[$66>>2]|0;
     $91 = HEAP32[$$idx$val$i>>2]|0;
     $$arith = (($91) + 1)|0;
     $$overflow = ($91>>>0)>(4294967294);
     if ($$overflow) {
      _llvm_trap();
      // unreachable;
     } else {
      $92 = $$idx$val$i;
      HEAP32[$$idx$val$i>>2] = $$arith;
      $93 = ((($0)) + 64|0);
      __ZN80__LT_ncollide_geometry__partitioning__dbvt__DBVT_LT_P_C__u20_B_C__u20_BV_GT__GT_6insert17hdfd54d5ead3fd847E($93,$92);
      break;
     }
    }
   } while(0);
   HEAP32[$63>>2] = 99;
   return;
  }
 }
 HEAP32[$67>>2] = $68;
 $74 = ((($0)) + 176|0);
 $75 = +HEAPF32[$74>>2];
 $76 = !($75 >= 0.0);
 if ($76) {
  __ZN3std9panicking11begin_panic17h9936a195de5ffc4dE(11057,38,5412);
  // unreachable;
 }
 $78 = $bounding_volume$sroa$0$0$copyload - $75;
 $79 = $bounding_volume$sroa$5$0$copyload - $75;
 $80 = $bounding_volume$sroa$7$0$copyload + $75;
 $81 = $bounding_volume$sroa$9$0$copyload + $75;
 $82 = ((($0)) + 224|0);
 $83 = ((($0)) + 232|0);
 $84 = HEAP32[$83>>2]|0;
 $$idx$i26 = ((($0)) + 228|0);
 $$idx$val$i27 = HEAP32[$$idx$i26>>2]|0;
 $85 = ($84|0)==($$idx$val$i27|0);
 if ($85) {
  __ZN40__LT_alloc__raw_vec__RawVec_LT_T_GT__GT_6double17h7f0870b65cc12174E($82);
  $$pre$i = HEAP32[$83>>2]|0;
  $87 = $$pre$i;
 } else {
  $87 = $84;
 }
 $86 = HEAP32[$82>>2]|0;
 $value$i$sroa$0$0$$sroa_idx = (($86) + (($87*20)|0)|0);
 HEAP32[$value$i$sroa$0$0$$sroa_idx>>2] = $_7$sroa$5$1;
 $value$i$sroa$4$0$$sroa_idx68 = (((($86) + (($87*20)|0)|0)) + 4|0);
 HEAPF32[$value$i$sroa$4$0$$sroa_idx68>>2] = $78;
 $value$i$sroa$5$0$$sroa_idx70 = (((($86) + (($87*20)|0)|0)) + 8|0);
 HEAPF32[$value$i$sroa$5$0$$sroa_idx70>>2] = $79;
 $value$i$sroa$6$0$$sroa_idx72 = (((($86) + (($87*20)|0)|0)) + 12|0);
 HEAPF32[$value$i$sroa$6$0$$sroa_idx72>>2] = $80;
 $value$i$sroa$7$0$$sroa_idx74 = (((($86) + (($87*20)|0)|0)) + 16|0);
 HEAPF32[$value$i$sroa$7$0$$sroa_idx74>>2] = $81;
 $88 = HEAP32[$83>>2]|0;
 $89 = (($88) + 1)|0;
 HEAP32[$83>>2] = $89;
 return;
}
function __ZN196__LT_ncollide_pipeline__broad_phase__dbvt_broad_phase__DBVTBroadPhase_LT_P_C__u20_BV_C__u20_T_GT__u20_as_u20_ncollide_pipeline__broad_phase__broad_phase__BroadPhase_LT_P_C__u20_BV_C__u20_T_GT__GT_34deferred_recompute_all_proximities17h31ee571b19fadd27E($0) {
 $0 = $0|0;
 var $$idx$i$i = 0, $$idx$i17 = 0, $$idx$val$i$i = 0, $$idx$val$i18 = 0, $$pre$i = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = SIMD_Int32x4(0,0,0,0), $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, $cond$i$i$i = 0, $iter$sroa$0$0104 = 0, $iter$sroa$7$0105 = 0, $switchtmp$i$i$i = 0, $value$i$sroa$0$0$$sroa_idx = 0, $value$i$sroa$4$0$$sroa_idx66 = 0, label = 0, sp = 0, temp_Int32x4_ptr = 0;
 sp = STACKTOP;
 $$idx$i$i = ((($0)) + 8|0);
 $$idx$val$i$i = HEAP32[$$idx$i$i>>2]|0;
 $1 = HEAP32[$0>>2]|0;
 $2 = (($1) + (($$idx$val$i$i*12)|0)|0);
 $3 = ((($0)) + 224|0);
 $4 = ((($0)) + 232|0);
 $$idx$i17 = ((($0)) + 228|0);
 $5 = ($$idx$val$i$i|0)==(0);
 if ($5) {
  return;
 } else {
  $iter$sroa$0$0104 = 0;$iter$sroa$7$0105 = $1;
 }
 L3: while(1) {
  $12 = $iter$sroa$0$0104;$6 = $iter$sroa$7$0105;
  while(1) {
   $7 = ($6|0)==($2|0);
   if ($7) {
    $38 = $2;
   } else {
    $8 = ((($6)) + 12|0);
    $9 = ((($6)) + 4|0);
    $10 = HEAP32[$9>>2]|0;
    $switchtmp$i$i$i = ($10|0)==(0|0);
    if ($switchtmp$i$i$i) {
     $38 = $8;
    } else {
     break;
    }
   }
   $11 = (($12) + 1)|0;
   $13 = ($11>>>0)<($$idx$val$i$i>>>0);
   if ($13) {
    $12 = $11;$6 = $38;
   } else {
    label = 7;
    break L3;
   }
  }
  $14 = (($12) + 1)|0;
  $15 = ((($6)) + 8|0);
  $16 = HEAP32[$15>>2]|0;
  $17 = ($16|0)>(-1);
  if ($17) {
   $19 = ((($10)) + 8|0);
   $20 = HEAP32[$19>>2]|0;
   $cond$i$i$i = ($20|0)==(-1);
   if ($cond$i$i$i) {
    label = 10;
    break;
   }
   $25 = (($20) + 1)|0;
   HEAP32[$19>>2] = $25;
   $26 = ((($10)) + 12|0);
   $27 = SIMD_Int32x4_load(HEAPU8, $26);
   $28 = HEAP32[$4>>2]|0;
   $$idx$val$i18 = HEAP32[$$idx$i17>>2]|0;
   $29 = ($28|0)==($$idx$val$i18|0);
   if ($29) {
    __THREW__ = 0;
    invoke_vi(232,($3|0));
    $30 = __THREW__; __THREW__ = 0;
    $31 = $30&1;
    if ($31) {
     label = 11;
     break;
    }
    $$pre$i = HEAP32[$4>>2]|0;
    $33 = $$pre$i;
   } else {
    $33 = $28;
   }
   $32 = HEAP32[$3>>2]|0;
   $value$i$sroa$0$0$$sroa_idx = (($32) + (($33*20)|0)|0);
   HEAP32[$value$i$sroa$0$0$$sroa_idx>>2] = $12;
   $value$i$sroa$4$0$$sroa_idx66 = (((($32) + (($33*20)|0)|0)) + 4|0);
   temp_Int32x4_ptr = $value$i$sroa$4$0$$sroa_idx66;SIMD_Int32x4_store(HEAPU8, temp_Int32x4_ptr, $27);
   $34 = HEAP32[$4>>2]|0;
   $35 = (($34) + 1)|0;
   HEAP32[$4>>2] = $35;
   $36 = HEAP32[$19>>2]|0;
   $37 = (($36) + -1)|0;
   HEAP32[$19>>2] = $37;
  }
  $18 = ($14>>>0)<($$idx$val$i$i>>>0);
  if ($18) {
   $iter$sroa$0$0104 = $14;$iter$sroa$7$0105 = $8;
  } else {
   label = 7;
   break;
  }
 }
 if ((label|0) == 7) {
  return;
 }
 else if ((label|0) == 10) {
  __ZN4core6result13unwrap_failed17h0dc63b200336bf84E();
  // unreachable;
 }
 else if ((label|0) == 11) {
  $21 = ___cxa_find_matching_catch_2()|0;
  $22 = tempRet0;
  $23 = HEAP32[$19>>2]|0;
  $24 = (($23) + -1)|0;
  HEAP32[$19>>2] = $24;
  ___resumeException($21|0);
  // unreachable;
 }
}
function __ZN196__LT_ncollide_pipeline__broad_phase__dbvt_broad_phase__DBVTBroadPhase_LT_P_C__u20_BV_C__u20_T_GT__u20_as_u20_ncollide_pipeline__broad_phase__broad_phase__BroadPhase_LT_P_C__u20_BV_C__u20_T_GT__GT_34interferences_with_bounding_volume17h5cc11f9d6f2415e3E($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$idx$i = 0, $$idx$val = 0, $$idx$val$i = 0, $$idx$val$i31 = 0, $$idx21 = 0, $$idx21$val = 0, $$pre$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $_25$sroa$0$0$copyload = 0, $_25$sroa$4$0$copyload = 0, $_25$sroa$5$0$copyload = 0, $collector = 0, $iter$sroa$7$081 = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, $not$$i$i$i$i = 0, $not$$i$i$i$i22 = 0, $not$$i$i$i$i36 = 0, $or$cond$i = 0, $personalityslot$sroa$0$079 = 0, $personalityslot$sroa$5$077 = 0;
 var $switch$i = 0, $switch$i24 = 0, $switch2tmp$i$i = 0, $switchtmp$i$i$i = 0, $visitor = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $collector = sp + 8|0;
 $visitor = sp;
 HEAP32[$collector>>2] = 1;
 $3 = ((($collector)) + 4|0);
 HEAP32[$3>>2] = 0;
 $4 = ((($collector)) + 8|0);
 HEAP32[$4>>2] = 0;
 HEAP32[$visitor>>2] = $1;
 $5 = ((($visitor)) + 4|0);
 HEAP32[$5>>2] = $collector;
 $6 = ((($0)) + 76|0);
 $7 = HEAP32[$6>>2]|0;
 $switch$i = ($7|0)==(1);
 if ($switch$i) {
  $8 = ((($0)) + 80|0);
  __THREW__ = 0;
  invoke_vii(233,($8|0),($visitor|0));
  $9 = __THREW__; __THREW__ = 0;
  $10 = $9&1;
  if (!($10)) {
   label = 4;
  }
 } else {
  label = 4;
 }
 do {
  if ((label|0) == 4) {
   $11 = ((($0)) + 104|0);
   $12 = HEAP32[$11>>2]|0;
   $switch$i24 = ($12|0)==(1);
   if ($switch$i24) {
    $13 = ((($0)) + 108|0);
    __THREW__ = 0;
    invoke_vii(233,($13|0),($visitor|0));
    $14 = __THREW__; __THREW__ = 0;
    $15 = $14&1;
    if ($15) {
     break;
    }
   }
   $_25$sroa$0$0$copyload = HEAP32[$collector>>2]|0;
   $_25$sroa$4$0$copyload = HEAP32[$3>>2]|0;
   $_25$sroa$5$0$copyload = HEAP32[$4>>2]|0;
   $16 = (($_25$sroa$0$0$copyload) + ($_25$sroa$5$0$copyload<<2)|0);
   $17 = ($_25$sroa$5$0$copyload|0)==(0);
   L8: do {
    if (!($17)) {
     $$idx21 = ((($0)) + 8|0);
     $18 = ((($2)) + 8|0);
     $$idx$i = ((($2)) + 4|0);
     $iter$sroa$7$081 = $_25$sroa$0$0$copyload;
     while(1) {
      $19 = ((($iter$sroa$7$081)) + 4|0);
      $$idx$val$i31 = HEAP32[$iter$sroa$7$081>>2]|0;
      $$idx$val = HEAP32[$0>>2]|0;
      $$idx21$val = HEAP32[$$idx21>>2]|0;
      $20 = ($$idx21$val>>>0)>($$idx$val$i31>>>0);
      if (!($20)) {
       label = 12;
       break;
      }
      $21 = (((($$idx$val) + (($$idx$val$i31*12)|0)|0)) + 4|0);
      $22 = (($$idx$val) + (($$idx$val$i31*12)|0)|0);
      $23 = HEAP32[$21>>2]|0;
      $switchtmp$i$i$i = ($23|0)==(0|0);
      $switch2tmp$i$i = ($22|0)==(0|0);
      $or$cond$i = $switch2tmp$i$i | $switchtmp$i$i$i;
      if ($or$cond$i) {
       label = 12;
       break;
      }
      $27 = HEAP32[$18>>2]|0;
      $$idx$val$i = HEAP32[$$idx$i>>2]|0;
      $28 = ($27|0)==($$idx$val$i|0);
      if ($28) {
       __THREW__ = 0;
       invoke_vi(230,($2|0));
       $29 = __THREW__; __THREW__ = 0;
       $30 = $29&1;
       if ($30) {
        label = 20;
        break;
       }
       $$pre$i = HEAP32[$18>>2]|0;
       $33 = $$pre$i;
      } else {
       $33 = $27;
      }
      $31 = HEAP32[$2>>2]|0;
      $32 = (($31) + ($33<<2)|0);
      HEAP32[$32>>2] = $22;
      $34 = HEAP32[$18>>2]|0;
      $35 = (($34) + 1)|0;
      HEAP32[$18>>2] = $35;
      $36 = ($19|0)==($16|0);
      if ($36) {
       break L8;
      } else {
       $iter$sroa$7$081 = $19;
      }
     }
     if ((label|0) == 12) {
      __THREW__ = 0;
      invoke_vii(219,(10432|0),15);
      $24 = __THREW__; __THREW__ = 0;
      $25 = ___cxa_find_matching_catch_2()|0;
      $26 = tempRet0;
      $lpad$phi$index = $25;$lpad$phi$index2 = $26;
     }
     else if ((label|0) == 20) {
      $41 = ___cxa_find_matching_catch_2()|0;
      $42 = tempRet0;
      $lpad$phi$index = $41;$lpad$phi$index2 = $42;
     }
     $not$$i$i$i$i = ($_25$sroa$4$0$copyload|0)==(0);
     if ($not$$i$i$i$i) {
      $personalityslot$sroa$0$079 = $lpad$phi$index;$personalityslot$sroa$5$077 = $lpad$phi$index2;
      ___resumeException($personalityslot$sroa$0$079|0);
      // unreachable;
     }
     _free($_25$sroa$0$0$copyload);
     $personalityslot$sroa$0$079 = $lpad$phi$index;$personalityslot$sroa$5$077 = $lpad$phi$index2;
     ___resumeException($personalityslot$sroa$0$079|0);
     // unreachable;
    }
   } while(0);
   $not$$i$i$i$i36 = ($_25$sroa$4$0$copyload|0)==(0);
   if ($not$$i$i$i$i36) {
    STACKTOP = sp;return;
   }
   _free($_25$sroa$0$0$copyload);
   STACKTOP = sp;return;
  }
 } while(0);
 $37 = ___cxa_find_matching_catch_2()|0;
 $38 = tempRet0;
 $39 = HEAP32[$3>>2]|0;
 $not$$i$i$i$i22 = ($39|0)==(0);
 if ($not$$i$i$i$i22) {
  $personalityslot$sroa$0$079 = $37;$personalityslot$sroa$5$077 = $38;
  ___resumeException($personalityslot$sroa$0$079|0);
  // unreachable;
 }
 $40 = HEAP32[$collector>>2]|0;
 _free($40);
 $personalityslot$sroa$0$079 = $37;$personalityslot$sroa$5$077 = $38;
 ___resumeException($personalityslot$sroa$0$079|0);
 // unreachable;
}
function __ZN196__LT_ncollide_pipeline__broad_phase__dbvt_broad_phase__DBVTBroadPhase_LT_P_C__u20_BV_C__u20_T_GT__u20_as_u20_ncollide_pipeline__broad_phase__broad_phase__BroadPhase_LT_P_C__u20_BV_C__u20_T_GT__GT_6update17hfa26e2950d70afcdE($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$$i = 0, $$46$i = 0, $$arith = 0, $$arith19 = 0, $$fca$0$extract2495$i$i = 0, $$fca$0$gep25$i = 0, $$fca$0$load26$i = 0, $$fca$1$extract2697$i$i = 0, $$idx$i = 0, $$idx$i$i372 = 0, $$idx$i$i435 = 0, $$idx$i$i572 = 0, $$idx$i27$i = 0, $$idx$i387 = 0, $$idx$i45$i = 0, $$idx$i475 = 0, $$idx$i494 = 0, $$idx$i514 = 0, $$idx$val = 0, $$idx$val$i = 0;
 var $$idx$val$i$i$i$i$i$i = 0, $$idx$val$i$i$i$i99$i = 0, $$idx$val$i$i$i433 = 0, $$idx$val$i$i$i44$i$i$i = 0, $$idx$val$i$i373 = 0, $$idx$val$i$i400 = 0, $$idx$val$i$i434 = 0, $$idx$val$i$i436 = 0, $$idx$val$i$i485 = 0, $$idx$val$i$i573 = 0, $$idx$val$i28$i = 0, $$idx$val$i388 = 0, $$idx$val$i421 = 0, $$idx$val$i46$i = 0, $$idx$val$i476 = 0, $$idx$val$i49$i = 0, $$idx$val$i495 = 0, $$idx$val$i515 = 0.0, $$idx$val$i547 = 0, $$idx$val$i551 = 0;
 var $$idx$val$i584 = 0, $$idx1$i = 0, $$idx1$val$i = 0.0, $$idx1$val$i$i = 0, $$idx1$val$i$i438 = 0, $$idx1$val$i52$i = 0, $$idx1$val$i553 = 0, $$idx11$val$i$i = 0, $$idx12$val$i$i = 0, $$idx13$i$i = 0, $$idx13$val$i$i = 0, $$idx14$i$i = 0, $$idx14$val$i$i = 0, $$idx19$val$i$i = 0, $$idx2$i = 0, $$idx2$val$i = 0.0, $$idx2$val$i$i$i = 0, $$idx2$val$i$i$i338 = 0, $$idx2$val$i577 = 0, $$idx2$val$i577$pre = 0;
 var $$idx20$val$i$i = 0, $$idx21$i$i = 0, $$idx21$val$i$i = 0, $$idx22$i$i = 0, $$idx22$val$i$i = 0, $$idx25$i$i = 0, $$idx25$val$i$i = 0, $$idx26$i$i = 0, $$idx26$val$i$i = 0, $$idx3$i = 0, $$idx3$i$i = 0, $$idx3$val$i = 0.0, $$idx3$val$i$i = 0, $$idx3$val$i587 = 0, $$idx305$val = 0, $$idx307$val = 0, $$idx313$val = 0, $$idx314$val = 0, $$idx315$val = 0, $$idx316$val = 0;
 var $$idx317$pre$phiZZ2D = 0, $$idx317$val = 0, $$idx318$pre$phiZZ2D = 0, $$idx318$val = 0, $$idx320$val = 0, $$idx323$val = 0, $$idx323$val$lcssa = 0, $$idx323$val1333 = 0, $$idx323$val1335 = 0, $$idx324$val967 = 0, $$idx325$val = 0, $$idx326 = 0, $$idx326$val = 0, $$idx327 = 0, $$idx327$val = 0, $$idx37$val$i$i = 0, $$idx4$i = 0, $$idx4$val$i = 0.0, $$idx4$val$i585 = 0, $$idx40$val$i$i = 0;
 var $$idx41$val$i$i = 0, $$idx44$val$i$i = 0, $$idx45$val$i$i = 0, $$idx5$i = 0, $$idx5$i582 = 0, $$idx5$val$i = 0.0, $$idx5$val$i583 = 0, $$idx54$val$i$i = 0, $$idx55$i$i574 = 0, $$idx55$val$i$i = 0, $$idx55$val$i$i575 = 0, $$idx56$i$i = 0, $$idx56$val$i$i = 0, $$idx56$val$i$i571 = 0, $$idx57$val$i$i = 0, $$idx58$val$i$i = 0, $$idx59$val$i$i = 0, $$idx6$i517 = 0, $$idx6$i579 = 0, $$idx6$val$i = 0.0;
 var $$idx6$val$i580 = 0, $$idx66$val$i$i = 0, $$idx67$val$i$i = 0, $$idx68$val$i$i = 0, $$idx69$val$i$i = 0, $$idx7$i = 0, $$idx7$val$i = 0.0, $$idx72$val$i$i = 0, $$idx73$val$i$i = 0, $$idx76$i$i = 0, $$idx76$val$i$i = 0, $$idx77$i$i = 0, $$idx77$val$i$i = 0, $$idx84$val$i$i = 0, $$idx85$val$i$i = 0, $$idx86$i$i = 0, $$idx86$val$i$i = 0, $$idx87$i$i = 0, $$idx87$val$i$i = 0, $$idx90$i$i = 0;
 var $$idx90$val$i$i = 0, $$idx91$i$i = 0, $$idx91$val$i$i = 0, $$in = 0, $$lcssa1177 = 0, $$overflow = 0, $$overflow20 = 0, $$phi$trans$insert = 0, $$pre = 0, $$pre$i = 0, $$pre$i$i = 0, $$pre$i$i589 = 0, $$pre$i496 = 0, $$pre$phi1661Z2D = 0, $$pre$phi1665Z2D = 0, $$pre$phiZ2D = 0, $$pre1650 = 0, $$pre1651 = 0, $$pre1653 = 0, $$pre1654 = 0;
 var $$pre1657 = 0, $$pre1658 = 0, $$pre1659 = 0, $$pre1660 = 0, $$pre1663 = 0, $$pre1664 = 0, $$unpack = 0, $$unpack290 = 0, $$unpack291 = 0, $$unpack292 = 0, $$val = 0.0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0;
 var $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0;
 var $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0;
 var $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0;
 var $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0;
 var $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0;
 var $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0;
 var $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0.0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0;
 var $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0.0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0.0, $250 = 0, $251 = 0, $252 = 0;
 var $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0.0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0;
 var $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0;
 var $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = SIMD_Int32x4(0,0,0,0), $305 = 0, $306 = 0, $307 = 0;
 var $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = SIMD_Int32x4(0,0,0,0), $317 = 0, $318 = 0, $319 = 0, $32 = 0.0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0;
 var $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0.0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0.0, $340 = 0, $341 = 0, $342 = 0, $343 = 0;
 var $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0.0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0.0, $360 = 0, $361 = 0;
 var $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0.0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0;
 var $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0;
 var $399 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0.0, $408 = 0.0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0;
 var $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0;
 var $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0;
 var $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0;
 var $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0;
 var $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0;
 var $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0;
 var $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0;
 var $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0;
 var $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0;
 var $58 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0;
 var $598 = 0, $599 = 0, $6 = 0, $60 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0;
 var $615 = 0, $616 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0, $63 = 0, $630 = 0, $631 = 0, $632 = 0;
 var $633 = 0, $634 = 0, $635 = 0, $636 = 0, $637 = 0, $638 = 0, $639 = 0, $64 = 0, $640 = 0, $641 = 0, $642 = 0, $643 = 0, $644 = 0, $645 = 0, $646 = 0, $647 = 0, $648 = 0, $649 = 0, $65 = 0, $650 = 0;
 var $651 = 0, $652 = 0, $653 = 0, $654 = 0, $655 = 0, $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0, $661 = 0, $662 = 0, $663 = 0, $664 = 0, $665 = 0, $666 = 0, $667 = 0, $668 = 0, $669 = 0;
 var $67 = 0, $670 = 0, $671 = 0, $672 = 0, $673 = 0, $674 = 0, $675 = 0, $676 = 0, $677 = 0, $678 = 0, $679 = 0, $68 = 0, $680 = 0, $681 = 0, $682 = 0, $683 = 0, $684 = 0, $685 = 0, $686 = 0, $687 = 0;
 var $688 = 0, $689 = 0, $69 = 0, $690 = 0, $691 = 0, $692 = 0, $693 = 0, $694 = 0, $695 = 0, $696 = 0, $697 = 0, $698 = 0, $699 = 0, $7 = 0, $70 = 0, $700 = 0, $701 = 0, $702 = 0, $703 = 0, $704 = 0;
 var $705 = 0, $706 = 0, $707 = 0, $708 = 0, $709 = 0, $71 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0, $714 = 0, $715 = 0, $716 = 0, $717 = 0, $718 = 0, $719 = 0, $72 = 0, $720 = 0, $721 = 0, $722 = 0;
 var $723 = 0, $724 = 0, $725 = 0, $726 = 0, $727 = 0, $728 = 0, $729 = 0, $73 = 0, $730 = 0, $731 = 0, $732 = 0, $733 = 0, $734 = 0, $735 = 0, $736 = 0, $737 = 0, $738 = 0, $739 = 0, $74 = 0, $740 = 0;
 var $741 = 0, $742 = 0, $743 = 0, $744 = 0, $745 = 0, $746 = 0, $747 = 0, $748 = 0, $749 = 0, $75 = 0, $750 = 0, $751 = 0, $752 = 0, $753 = 0, $754 = 0, $755 = 0, $756 = 0, $757 = 0, $758 = 0, $759 = 0;
 var $76 = 0, $760 = 0, $761 = 0, $762 = 0, $763 = 0, $764 = 0, $765 = 0, $766 = 0, $767 = 0, $768 = 0, $769 = 0, $77 = 0, $770 = 0, $771 = 0, $772 = 0, $773 = 0, $774 = 0, $775 = 0, $776 = 0, $777 = 0;
 var $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0;
 var $96 = 0, $97 = 0, $98 = 0, $99 = 0, $_0$0$in$sroa$speculate$load$bb5$sroa$speculated$i = 0, $_0$0$in$sroa$speculated$i = 0, $_12$i = 0, $_13$i = 0, $_15$sroa$10$4$$sroa_idx884 = 0, $_15$sroa$10$4$copyload = 0.0, $_15$sroa$11$4$$sroa_idx887 = 0, $_15$sroa$11$4$copyload = 0, $_15$sroa$5$4$copyload = 0, $_15$sroa$7$4$$sroa_idx875 = 0, $_15$sroa$7$4$copyload = 0.0, $_15$sroa$8$4$$sroa_idx878 = 0, $_15$sroa$8$4$copyload = 0.0, $_15$sroa$9$4$$sroa_idx881 = 0, $_15$sroa$9$4$copyload = 0.0, $_18$i = 0;
 var $_271$sroa$0$0$$sroa_idx = 0, $_271$sroa$0$0$copyload = 0, $_271$sroa$4$0$$sroa_idx202 = 0, $_271$sroa$4$0$copyload = 0, $_271$sroa$5$0$$sroa_idx = 0, $_331$0 = 0, $_37$sroa$0$0 = 0, $_37$sroa$0$1 = 0, $_37$sroa$8$0 = 0, $_37$sroa$8$1 = 0, $_37$sroa$8$4$$sroa_idx757 = 0, $_37$sroa$8$4$copyload758 = 0, $_399$sroa$25$4$$sroa_idx602 = 0, $_399$sroa$25$4983 = 0, $_399$sroa$4$4985 = 0, $_399$sroa$7$1984 = 0, $_399$sroa$7$4$$sroa_idx594 = 0, $bucket2$sroa$0$sroa$0$0$i$i$i = 0, $bucket2$sroa$0$sroa$0$1$i$i$i = 0, $bucket2$sroa$0$sroa$6$0$i$i$i = 0;
 var $bucket2$sroa$0$sroa$6$1$i$i$i = 0, $bucket2$sroa$9$0$i$i$i = 0, $bucket2$sroa$9$1$i$i$i = 0, $cond$i$i = 0, $cond$i$i$i = 0, $cond$i$i$i447 = 0, $cond$i$i$i460 = 0, $cond$i$i$i472 = 0, $cond$i$i$i479 = 0, $cond$i$i$i519 = 0, $cond$i$i$i526 = 0, $dist$0$i$i$i$i$i = 0, $dist$0$i$i$i$i$i$i = 0, $dist$0$i$i$i45$i$i$i = 0, $eh$lpad$body$index3Z2D = 0, $eh$lpad$body$indexZ2D = 0, $entry$sroa$4$0$$sroa_idx197$i = 0, $entry$sroa$4$0$copyload$i = 0, $entry$sroa$5$0$copyload$i = 0, $entry$sroa$6$0$$sroa_cast$i = 0;
 var $entry$sroa$6$0$copyload$i = 0, $entry$sroa$7$0$copyload$i = 0, $entry1$sroa$0$0$$sroa_idx$i = 0, $entry1$sroa$4$0$$sroa_idx134$i = 0, $entry1$sroa$4$0$copyload$i = 0, $entry1$sroa$5$0$$sroa_idx$i = 0, $entry1$sroa$5$0$copyload$i = 0, $entry1$sroa$6$0$$sroa_idx137$i = 0, $entry1$sroa$7$0$$sroa_idx139$i = 0, $entry1$sroa$7$0$copyload$i = 0, $entry1$sroa$8$0$$sroa_idx$i = 0, $entry1$sroa$8$0$copyload$i = 0, $entry1$sroa$9$0$$sroa_idx142$i = 0, $entry1$sroa$9$0$copyload$i = 0, $fast_key3$sroa$0$0$i = 0, $gap$sroa$0$0$in$i34$i$i = 0, $gap$sroa$0$0$in$i34$i$i$phi = 0, $gap$sroa$12$0$in$i36$i$i = 0, $gap$sroa$16$0$in$i37$i$i = 0, $gap$sroa$19$0$i38$i$i = 0;
 var $gap$sroa$6$0$in$i35$i$i = 0, $gap$sroa$6$0$in$i35$i$i$phi = 0, $ib$0$i$i$i = 0, $iter$sroa$0$0111$i$i = 0, $iter$sroa$0$0111$i$i$phi = 0, $iter$sroa$9$01340 = 0, $iter14$sroa$0$02323 = 0, $iter14$sroa$7$02322 = 0, $iter5$sroa$4$0$ph$in = 0, $key$0$i$i$i = 0, $lpad$phi$index = 0, $lpad$phi$index14 = 0, $lpad$phi1016$index = 0, $lpad$phi1016$index9 = 0, $newhash$i$i = 0, $newhash$idx$val$i$i = 0, $newhash$idx48$i$i = 0, $newhash$idx48$val$i$i = 0, $newnext$i$i = 0, $newnext$idx$val$i$i = 0;
 var $newnext$idx54$i$i = 0, $newnext$idx54$val$i$i = 0, $no$0$i$i = 0, $not$$i$i$i$i$i$i = 0, $not$$i$i$i$i58$i$i = 0, $not$$i$i$i$i61$i$i = 0, $not$$i$i$i$i64$i$i = 0, $not$switchtmp$i$i = 0, $notlhs$i$i$i = 0, $notlhs$i$i$i563 = 0, $notlhs$i110$i$i = 0, $notlhs$i32$i$i = 0, $notrhs$i$i$i = 0, $notrhs$i$i$i564 = 0, $notrhs$i111$i$i = 0, $notrhs$i33$i$i = 0, $num_removals$0 = 0, $o$0$i$i = 0, $obji$0$i$i = 0, $old_value$i = 0;
 var $old_value$idx$i = 0, $old_value$idx$val$i = 0, $old_value4$i = 0, $old_value4$idx$i = 0, $old_value4$idx$val$i = 0, $or$cond = 0, $or$cond$i = 0, $or$cond$i$i$i = 0, $or$cond$i$i8$i = 0, $or$cond$i535 = 0, $or$cond$i542 = 0, $or$cond$i558 = 0, $personalityslot$sroa$0$0 = 0, $personalityslot$sroa$0$0181$i = 0, $personalityslot$sroa$0$189$i$i = 0, $personalityslot$sroa$0$4 = 0, $personalityslot$sroa$22$0 = 0, $personalityslot$sroa$22$4 = 0, $personalityslot$sroa$6$0180$i = 0, $personalityslot$sroa$6$191$i$i = 0;
 var $phitmp = 0, $pos$0$i$i = 0, $pos$1$i$i = 0, $proxy17 = 0, $res$sroa$0$0$i = 0, $res$sroa$4$0$i = 0, $res$sroa$9$0$i = 0, $src$sroa$0$i$i$i$sroa$0$0$$sroa_idx$i = 0, $src$sroa$0$i$i$i$sroa$0$0$copyload$i = 0, $src$sroa$0$i$i$i$sroa$4$0$$sroa_idx81$i = 0, $src$sroa$0$i$i$i$sroa$4$0$copyload$i = 0, $src$sroa$0$i$i$i$sroa$5$0$$sroa_idx83$i = 0, $src$sroa$0$i$i$i$sroa$5$0$copyload$i = 0, $src$sroa$0$i$i$i47$sroa$0$0$$sroa_idx$i = 0, $src$sroa$0$i$i$i47$sroa$0$0$copyload$i = 0, $src$sroa$0$i$i$i47$sroa$4$0$$sroa_idx86$i = 0, $src$sroa$0$i$i$i47$sroa$4$0$copyload$i = 0, $src$sroa$0$i$i$i47$sroa$5$0$$sroa_idx88$i = 0, $src$sroa$0$i$i$i47$sroa$5$0$copyload$i = 0, $switch$i = 0;
 var $switch$i$i = 0, $switch$i499 = 0, $switch$i503 = 0, $switch2tmp$i = 0, $switch2tmp$i$i = 0, $switch2tmp$i$i534 = 0, $switch2tmp$i$i541 = 0, $switch2tmp$i$i557 = 0, $switch3tmp$i$i = 0, $switch3tmp$i35$i = 0, $switch4$i = 0, $switch8tmp$i = 0, $switchtmp$i$i = 0, $switchtmp$i$i$i = 0, $switchtmp$i$i$i426 = 0, $switchtmp$i$i$i470 = 0, $switchtmp$i$i$i533 = 0, $switchtmp$i$i$i540 = 0, $switchtmp$i$i$i556 = 0, $switchtmp$i$i413 = 0;
 var $switchtmp$i$i439 = 0, $switchtmp$i398 = 0, $switchtmp276$i$i$i = 0, $t$i$i$i = 0, $t$i71$i$i = 0, $tmp$sroa$0$i$i$i$i$i$i = 0, $val$sroa$0$0$i$i$i = 0, $value$i$sroa$0$0$$sroa_idx = 0, $value$i$sroa$10$0$$sroa_idx = 0, $value$i$sroa$11$0$$sroa_idx = 0, $value$i$sroa$4$0$$sroa_idx = 0, $value$i$sroa$5$0$$sroa_idx = 0, $value$i$sroa$6$0$$sroa_idx = 0, $value$i$sroa$7$0$$sroa_idx = 0, $value$i$sroa$8$0$$sroa_idx = 0, $value$i$sroa$9$0$$sroa_idx = 0, $value$i385$sroa$0$0$$sroa_idx = 0, $value$i385$sroa$5$0$$sroa_idx935 = 0, $value$i385$sroa$7$0$$sroa_idx939 = 0, $value$i492$sroa$0$0$$sroa_idx = 0;
 var $value$i492$sroa$4$0$$sroa_idx943 = 0, $value$i492$sroa$5$0$$sroa_idx945 = 0, $value$sroa$0$i$sroa$4$0$_22$sroa$0$0$_9$sroa$0$0$$sroa_cast3$i$sroa_cast$i$sroa_idx84$i = 0, $value$sroa$0$i$sroa$5$0$_22$sroa$0$0$_9$sroa$0$0$$sroa_cast3$i$sroa_cast$i$sroa_idx86$i = 0, $visitor = 0, label = 0, sp = 0, temp_Int32x4_ptr = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 208|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(208|0);
 $t$i71$i$i = sp + 192|0;
 $t$i$i$i = sp + 176|0;
 $newhash$i$i = sp + 160|0;
 $newnext$i$i = sp + 144|0;
 $tmp$sroa$0$i$i$i$i$i$i = sp + 128|0;
 $_13$i = sp + 120|0;
 $_12$i = sp + 104|0;
 $_18$i = sp + 56|0;
 $old_value$i = sp + 40|0;
 $old_value4$i = sp + 24|0;
 $visitor = sp + 16|0;
 $proxy17 = sp;
 $$idx$i = ((($0)) + 244|0);
 $$idx$val$i = HEAP32[$$idx$i>>2]|0;
 HEAP32[$$idx$i>>2] = 0;
 $5 = ((($0)) + 236|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = (($6) + (($$idx$val$i*24)|0)|0);
 $8 = ($$idx$val$i|0)==(0);
 L1: do {
  if ($8) {
   $$pre1660 = ((($0)) + 232|0);
   $$pre$phi1661Z2D = $$pre1660;
  } else {
   $9 = ((($0)) + 176|0);
   $10 = ((($0)) + 40|0);
   $_37$sroa$8$4$$sroa_idx757 = ((($_12$i)) + 4|0);
   $11 = ((($0)) + 224|0);
   $12 = ((($0)) + 232|0);
   $$idx$i387 = ((($0)) + 228|0);
   $13 = ((($0)) + 16|0);
   $$idx$i$i372 = ((($0)) + 36|0);
   $14 = ((($_18$i)) + 8|0);
   $entry1$sroa$0$0$$sroa_idx$i = ((($_18$i)) + 8|0);
   $entry1$sroa$4$0$$sroa_idx134$i = ((($_18$i)) + 16|0);
   $entry1$sroa$5$0$$sroa_idx$i = ((($14)) + 12|0);
   $entry1$sroa$6$0$$sroa_idx137$i = ((($_18$i)) + 24|0);
   $entry1$sroa$7$0$$sroa_idx139$i = ((($_18$i)) + 32|0);
   $entry1$sroa$8$0$$sroa_idx$i = ((($14)) + 28|0);
   $entry1$sroa$9$0$$sroa_idx142$i = ((($_18$i)) + 40|0);
   $15 = ((($0)) + 56|0);
   $old_value4$idx$i = ((($old_value4$i)) + 4|0);
   $16 = ((($0)) + 48|0);
   $17 = ((($_18$i)) + 4|0);
   $entry$sroa$4$0$$sroa_idx197$i = ((($17)) + 8|0);
   $entry$sroa$6$0$$sroa_cast$i = ((($17)) + 16|0);
   $old_value$idx$i = ((($old_value$i)) + 4|0);
   $iter$sroa$9$01340 = $6;
   while(1) {
    $18 = ((($iter$sroa$9$01340)) + 24|0);
    $_15$sroa$5$4$copyload = HEAP32[$iter$sroa$9$01340>>2]|0;
    $_15$sroa$11$4$$sroa_idx887 = ((($iter$sroa$9$01340)) + 20|0);
    $_15$sroa$11$4$copyload = HEAP32[$_15$sroa$11$4$$sroa_idx887>>2]|0;
    $$val = +HEAPF32[$9>>2];
    $19 = !($$val >= 0.0);
    if ($19) {
     label = 6;
     break;
    }
    $_15$sroa$10$4$$sroa_idx884 = ((($iter$sroa$9$01340)) + 16|0);
    $_15$sroa$10$4$copyload = +HEAPF32[$_15$sroa$10$4$$sroa_idx884>>2];
    $_15$sroa$9$4$$sroa_idx881 = ((($iter$sroa$9$01340)) + 12|0);
    $_15$sroa$9$4$copyload = +HEAPF32[$_15$sroa$9$4$$sroa_idx881>>2];
    $_15$sroa$8$4$$sroa_idx878 = ((($iter$sroa$9$01340)) + 8|0);
    $_15$sroa$8$4$copyload = +HEAPF32[$_15$sroa$8$4$$sroa_idx878>>2];
    $_15$sroa$7$4$$sroa_idx875 = ((($iter$sroa$9$01340)) + 4|0);
    $_15$sroa$7$4$copyload = +HEAPF32[$_15$sroa$7$4$$sroa_idx875>>2];
    $23 = $_15$sroa$7$4$copyload - $$val;
    $24 = $_15$sroa$8$4$copyload - $$val;
    $25 = $$val + $_15$sroa$9$4$copyload;
    $26 = $$val + $_15$sroa$10$4$copyload;
    $27 = (_malloc(48)|0);
    $28 = ($27|0)==(0|0);
    if ($28) {
     label = 8;
     break;
    }
    $32 = $26 + $24;
    $33 = $32 * 0.5;
    $34 = $33 + 0.0;
    $35 = $25 + $23;
    $36 = $35 * 0.5;
    $37 = $36 + 0.0;
    $38 = ((($27)) + 4|0);
    HEAP32[$38>>2] = 1;
    $value$i$sroa$0$0$$sroa_idx = ((($27)) + 8|0);
    HEAP32[$value$i$sroa$0$0$$sroa_idx>>2] = 0;
    $value$i$sroa$4$0$$sroa_idx = ((($27)) + 12|0);
    HEAPF32[$value$i$sroa$4$0$$sroa_idx>>2] = $23;
    $value$i$sroa$5$0$$sroa_idx = ((($27)) + 16|0);
    HEAPF32[$value$i$sroa$5$0$$sroa_idx>>2] = $24;
    $value$i$sroa$6$0$$sroa_idx = ((($27)) + 20|0);
    HEAPF32[$value$i$sroa$6$0$$sroa_idx>>2] = $25;
    $value$i$sroa$7$0$$sroa_idx = ((($27)) + 24|0);
    HEAPF32[$value$i$sroa$7$0$$sroa_idx>>2] = $26;
    $value$i$sroa$8$0$$sroa_idx = ((($27)) + 28|0);
    HEAPF32[$value$i$sroa$8$0$$sroa_idx>>2] = $37;
    $value$i$sroa$9$0$$sroa_idx = ((($27)) + 32|0);
    HEAPF32[$value$i$sroa$9$0$$sroa_idx>>2] = $34;
    $value$i$sroa$10$0$$sroa_idx = ((($27)) + 36|0);
    HEAP32[$value$i$sroa$10$0$$sroa_idx>>2] = -1;
    $value$i$sroa$11$0$$sroa_idx = ((($27)) + 40|0);
    HEAP32[$value$i$sroa$11$0$$sroa_idx>>2] = 3;
    HEAP32[$27>>2] = 2;
    $39 = HEAP32[$10>>2]|0;
    $switch8tmp$i = ($39|0)==(0|0);
    if ($switch8tmp$i) {
     __THREW__ = 0;
     invoke_viiiiii(234,($_12$i|0),($0|0),($_15$sroa$5$4$copyload|0),($_15$sroa$11$4$copyload|0),($27|0),100);
     $42 = __THREW__; __THREW__ = 0;
     $43 = $42&1;
     if ($43) {
      label = 11;
      break;
     }
     $_37$sroa$8$4$copyload758 = HEAP32[$_37$sroa$8$4$$sroa_idx757>>2]|0;
     $_37$sroa$0$1 = $_15$sroa$5$4$copyload;$_37$sroa$8$1 = $_37$sroa$8$4$copyload758;
    } else {
     $$idx$val$i$i373 = HEAP32[$$idx$i$i372>>2]|0;
     __THREW__ = 0;
     invoke_viii(235,($_18$i|0),($13|0),($_15$sroa$5$4$copyload|0));
     $44 = __THREW__; __THREW__ = 0;
     $45 = $44&1;
     if ($45) {
      label = 39;
      break;
     }
     $46 = HEAP32[$_18$i>>2]|0;
     $switch$i = ($46|0)==(1);
     if ($switch$i) {
      $118 = $entry1$sroa$0$0$$sroa_idx$i;
      $119 = $118;
      $120 = HEAP32[$119>>2]|0;
      $121 = (($118) + 4)|0;
      $122 = $121;
      $123 = HEAP32[$122>>2]|0;
      $entry1$sroa$4$0$copyload$i = HEAP32[$entry1$sroa$4$0$$sroa_idx134$i>>2]|0;
      $entry1$sroa$5$0$copyload$i = HEAP32[$entry1$sroa$5$0$$sroa_idx$i>>2]|0;
      $124 = $entry1$sroa$6$0$$sroa_idx137$i;
      $125 = $124;
      $126 = HEAP32[$125>>2]|0;
      $127 = (($124) + 4)|0;
      $128 = $127;
      $129 = HEAP32[$128>>2]|0;
      $entry1$sroa$7$0$copyload$i = HEAP32[$entry1$sroa$7$0$$sroa_idx139$i>>2]|0;
      $entry1$sroa$8$0$copyload$i = HEAP32[$entry1$sroa$8$0$$sroa_idx$i>>2]|0;
      $entry1$sroa$9$0$copyload$i = HEAP32[$entry1$sroa$9$0$$sroa_idx142$i>>2]|0;
      $130 = HEAP32[$15>>2]|0;
      $131 = ($130|0)==(0);
      $132 = (($130) + -1)|0;
      if ($131) {
       $fast_key3$sroa$0$0$i = $$idx$val$i$i373;
      } else {
       HEAP32[$15>>2] = $132;
       $138 = HEAP32[$16>>2]|0;
       $$idx3$i$i = (($138) + ($132<<2)|0);
       $$idx3$val$i$i = HEAP32[$$idx3$i$i>>2]|0;
       $fast_key3$sroa$0$0$i = $$idx3$val$i$i;
      }
      $switch$i$i = ($entry1$sroa$5$0$copyload$i|0)==(0);
      if ($switch$i$i) {
       $139 = $entry1$sroa$8$0$copyload$i;
       $149 = $120;$152 = $123;$bucket2$sroa$0$sroa$0$0$i$i$i = $126;$bucket2$sroa$0$sroa$6$0$i$i$i = $129;$bucket2$sroa$9$0$i$i$i = $entry1$sroa$7$0$copyload$i;$ib$0$i$i$i = $entry1$sroa$9$0$copyload$i;$key$0$i$i$i = $entry1$sroa$4$0$copyload$i;$val$sroa$0$0$i$i$i = $fast_key3$sroa$0$0$i;
       L20: while(1) {
        $140 = $bucket2$sroa$0$sroa$0$0$i$i$i;
        $141 = $140;
        $142 = $141;
        $143 = HEAP32[$142>>2]|0;
        $144 = (($141) + 4)|0;
        $145 = $144;
        $146 = HEAP32[$145>>2]|0;
        $147 = $140;
        $148 = $147;
        HEAP32[$148>>2] = $149;
        $150 = (($147) + 4)|0;
        $151 = $150;
        HEAP32[$151>>2] = $152;
        $153 = $bucket2$sroa$0$sroa$6$0$i$i$i;
        $154 = $153;
        $155 = $154;
        $156 = HEAP32[$155>>2]|0;
        $157 = (($154) + 4)|0;
        $158 = $157;
        $159 = HEAP32[$158>>2]|0;
        $160 = $153;
        $161 = $160;
        HEAP32[$161>>2] = $key$0$i$i$i;
        $162 = (($160) + 4)|0;
        $163 = $162;
        HEAP32[$163>>2] = $val$sroa$0$0$i$i$i;
        $$idx$val$i$i$i$i99$i = HEAP32[$139>>2]|0;
        $164 = (($$idx$val$i$i$i$i99$i) + -1)|0;
        $165 = (1 - ($$idx$val$i$i$i$i99$i))|0;
        $bucket2$sroa$0$sroa$0$1$i$i$i = $bucket2$sroa$0$sroa$0$0$i$i$i;$bucket2$sroa$0$sroa$6$1$i$i$i = $bucket2$sroa$0$sroa$6$0$i$i$i;$bucket2$sroa$9$1$i$i$i = $bucket2$sroa$9$0$i$i$i;
        while(1) {
         $166 = (($bucket2$sroa$9$1$i$i$i) + 1)|0;
         $167 = $166 & $164;
         $168 = ($167|0)==(0);
         $dist$0$i$i$i$i$i = $168 ? $165 : 1;
         $169 = $bucket2$sroa$0$sroa$0$1$i$i$i;
         $170 = $bucket2$sroa$0$sroa$6$1$i$i$i;
         $171 = (($169) + ($dist$0$i$i$i$i$i<<3)|0);
         $172 = (($170) + ($dist$0$i$i$i$i$i<<3)|0);
         $173 = $172;
         $174 = $171;
         $175 = $174;
         $176 = HEAP32[$175>>2]|0;
         $177 = (($174) + 4)|0;
         $178 = $177;
         $179 = HEAP32[$178>>2]|0;
         $180 = ($176|0)==(0);
         $181 = ($179|0)==(0);
         $182 = $180 & $181;
         $183 = $171;
         if ($182) {
          break L20;
         }
         $184 = (($166) - ($176))|0;
         $185 = $184 & $164;
         $186 = (($166) - ($185))|0;
         $187 = ($ib$0$i$i$i>>>0)<($186>>>0);
         if ($187) {
          $149 = $143;$152 = $146;$bucket2$sroa$0$sroa$0$0$i$i$i = $183;$bucket2$sroa$0$sroa$6$0$i$i$i = $173;$bucket2$sroa$9$0$i$i$i = $166;$ib$0$i$i$i = $186;$key$0$i$i$i = $156;$val$sroa$0$0$i$i$i = $159;
          continue L20;
         } else {
          $bucket2$sroa$0$sroa$0$1$i$i$i = $183;$bucket2$sroa$0$sroa$6$1$i$i$i = $173;$bucket2$sroa$9$1$i$i$i = $166;
         }
        }
       }
       $188 = $171;
       $189 = $188;
       HEAP32[$189>>2] = $143;
       $190 = (($188) + 4)|0;
       $191 = $190;
       HEAP32[$191>>2] = $146;
       HEAP32[$172>>2] = $156;
       $192 = (((($170) + ($dist$0$i$i$i$i$i<<3)|0)) + 4|0);
       HEAP32[$192>>2] = $159;
       $193 = ((($139)) + 4|0);
       $194 = HEAP32[$193>>2]|0;
       $195 = (($194) + 1)|0;
       HEAP32[$193>>2] = $195;
      } else {
       $196 = $126;
       $197 = $196;
       $198 = $197;
       HEAP32[$198>>2] = $120;
       $199 = (($197) + 4)|0;
       $200 = $199;
       HEAP32[$200>>2] = $123;
       $201 = $129;
       HEAP32[$201>>2] = $entry1$sroa$4$0$copyload$i;
       $202 = ((($201)) + 4|0);
       HEAP32[$202>>2] = $fast_key3$sroa$0$0$i;
       $203 = $entry1$sroa$8$0$copyload$i;
       $204 = ((($203)) + 4|0);
       $205 = HEAP32[$204>>2]|0;
       $206 = (($205) + 1)|0;
       HEAP32[$204>>2] = $206;
      }
      __THREW__ = 0;
      invoke_viiiiii(234,($old_value4$i|0),($0|0),($fast_key3$sroa$0$0$i|0),($_15$sroa$11$4$copyload|0),($27|0),100);
      $207 = __THREW__; __THREW__ = 0;
      $208 = $207&1;
      if ($208) {
       label = 44;
       break;
      }
      $old_value4$idx$val$i = HEAP32[$old_value4$idx$i>>2]|0;
      $209 = ($old_value4$idx$val$i|0)==(0|0);
      if (!($209)) {
       label = 37;
       break;
      }
      $_37$sroa$0$0 = $fast_key3$sroa$0$0$i;$_37$sroa$8$0 = 0;
     } else {
      $entry$sroa$4$0$copyload$i = HEAP32[$entry$sroa$4$0$$sroa_idx197$i>>2]|0;
      $entry$sroa$5$0$copyload$i = HEAP32[$entry1$sroa$4$0$$sroa_idx134$i>>2]|0;
      $entry$sroa$6$0$copyload$i = HEAP32[$entry$sroa$6$0$$sroa_cast$i>>2]|0;
      $entry$sroa$7$0$copyload$i = HEAP32[$entry1$sroa$6$0$$sroa_idx137$i>>2]|0;
      $47 = ((($entry$sroa$7$0$copyload$i)) + 4|0);
      $48 = HEAP32[$47>>2]|0;
      $49 = (($48) + -1)|0;
      HEAP32[$47>>2] = $49;
      $50 = $entry$sroa$4$0$copyload$i;
      $51 = $50;
      HEAP32[$51>>2] = 0;
      $52 = (($50) + 4)|0;
      $53 = $52;
      HEAP32[$53>>2] = 0;
      $54 = $entry$sroa$5$0$copyload$i;
      $55 = $54;
      $56 = HEAP32[$55>>2]|0;
      $57 = (($54) + 4)|0;
      $58 = $57;
      $59 = HEAP32[$58>>2]|0;
      $60 = (($entry$sroa$6$0$copyload$i) + 1)|0;
      $$idx$val$i$i$i44$i$i$i = HEAP32[$entry$sroa$7$0$copyload$i>>2]|0;
      $61 = (($$idx$val$i$i$i44$i$i$i) + -1)|0;
      $62 = $61 & $60;
      $63 = ($62|0)==(0);
      $64 = (1 - ($$idx$val$i$i$i44$i$i$i))|0;
      $dist$0$i$i$i45$i$i$i = $63 ? $64 : 1;
      $65 = (($entry$sroa$4$0$copyload$i) + ($dist$0$i$i$i45$i$i$i<<3)|0);
      $66 = $65;
      $67 = $66;
      $68 = HEAP32[$67>>2]|0;
      $69 = (($66) + 4)|0;
      $70 = $69;
      $71 = HEAP32[$70>>2]|0;
      $72 = ($68|0)==(0);
      $73 = ($71|0)==(0);
      $74 = $72 & $73;
      $switchtmp276$i$i$i = ($entry$sroa$7$0$copyload$i|0)==(0|0);
      $switchtmp$i$i$i = $switchtmp276$i$i$i | $74;
      L31: do {
       if (!($switchtmp$i$i$i)) {
        $75 = (($60) - ($68))|0;
        $76 = $75 & $61;
        $77 = ($76|0)==(0);
        if (!($77)) {
         $78 = (($entry$sroa$5$0$copyload$i) + ($dist$0$i$i$i45$i$i$i<<3)|0);
         $85 = $68;$88 = $71;$gap$sroa$0$0$in$i34$i$i = $entry$sroa$4$0$copyload$i;$gap$sroa$12$0$in$i36$i$i = $65;$gap$sroa$16$0$in$i37$i$i = $78;$gap$sroa$19$0$i38$i$i = $60;$gap$sroa$6$0$in$i35$i$i = $entry$sroa$5$0$copyload$i;
         while(1) {
          $79 = $gap$sroa$12$0$in$i36$i$i;
          $80 = $79;
          HEAP32[$80>>2] = 0;
          $81 = (($79) + 4)|0;
          $82 = $81;
          HEAP32[$82>>2] = 0;
          $83 = $gap$sroa$0$0$in$i34$i$i;
          $84 = $83;
          HEAP32[$84>>2] = $85;
          $86 = (($83) + 4)|0;
          $87 = $86;
          HEAP32[$87>>2] = $88;
          $89 = $gap$sroa$16$0$in$i37$i$i;
          $90 = $89;
          $91 = HEAP32[$90>>2]|0;
          $92 = (($89) + 4)|0;
          $93 = $92;
          $94 = HEAP32[$93>>2]|0;
          $95 = $gap$sroa$6$0$in$i35$i$i;
          $96 = $95;
          HEAP32[$96>>2] = $91;
          $97 = (($95) + 4)|0;
          $98 = $97;
          HEAP32[$98>>2] = $94;
          $99 = (($gap$sroa$19$0$i38$i$i) + 1)|0;
          $$idx$val$i$i$i$i$i$i = HEAP32[$entry$sroa$7$0$copyload$i>>2]|0;
          $100 = (($$idx$val$i$i$i$i$i$i) + -1)|0;
          $101 = $100 & $99;
          $102 = ($101|0)==(0);
          $103 = (1 - ($$idx$val$i$i$i$i$i$i))|0;
          $dist$0$i$i$i$i$i$i = $102 ? $103 : 1;
          $104 = (($gap$sroa$12$0$in$i36$i$i) + ($dist$0$i$i$i$i$i$i<<3)|0);
          $105 = $104;
          $106 = $105;
          $107 = HEAP32[$106>>2]|0;
          $108 = (($105) + 4)|0;
          $109 = $108;
          $110 = HEAP32[$109>>2]|0;
          $111 = ($107|0)==(0);
          $112 = ($110|0)==(0);
          $113 = $111 & $112;
          if ($113) {
           break L31;
          }
          $114 = (($gap$sroa$16$0$in$i37$i$i) + ($dist$0$i$i$i$i$i$i<<3)|0);
          $115 = (($99) - ($107))|0;
          $116 = $115 & $100;
          $117 = ($116|0)==(0);
          if ($117) {
           break;
          } else {
           $gap$sroa$6$0$in$i35$i$i$phi = $gap$sroa$16$0$in$i37$i$i;$gap$sroa$0$0$in$i34$i$i$phi = $gap$sroa$12$0$in$i36$i$i;$85 = $107;$88 = $110;$gap$sroa$12$0$in$i36$i$i = $104;$gap$sroa$16$0$in$i37$i$i = $114;$gap$sroa$19$0$i38$i$i = $99;$gap$sroa$6$0$in$i35$i$i = $gap$sroa$6$0$in$i35$i$i$phi;$gap$sroa$0$0$in$i34$i$i = $gap$sroa$0$0$in$i34$i$i$phi;
          }
         }
        }
       }
      } while(0);
      __THREW__ = 0;
      invoke_viiiiii(234,($old_value$i|0),($0|0),($59|0),($_15$sroa$11$4$copyload|0),($27|0),100);
      $133 = __THREW__; __THREW__ = 0;
      $134 = $133&1;
      if ($134) {
       label = 45;
       break;
      }
      $old_value$idx$val$i = HEAP32[$old_value$idx$i>>2]|0;
      $not$switchtmp$i$i = ($old_value$idx$val$i|0)==(0|0);
      if ($not$switchtmp$i$i) {
       label = 25;
       break;
      }
      $_37$sroa$0$0 = $59;$_37$sroa$8$0 = $old_value$idx$val$i;
     }
     $_37$sroa$0$1 = $_37$sroa$0$0;$_37$sroa$8$1 = $_37$sroa$8$0;
    }
    $switchtmp$i$i = ($_37$sroa$8$1|0)==(0|0);
    if (!($switchtmp$i$i)) {
     $232 = HEAP32[$_37$sroa$8$1>>2]|0;
     $233 = (($232) + -1)|0;
     HEAP32[$_37$sroa$8$1>>2] = $233;
     $234 = ($233|0)==(0);
     if ($234) {
      $235 = ((($_37$sroa$8$1)) + 4|0);
      $236 = HEAP32[$235>>2]|0;
      $237 = (($236) + -1)|0;
      HEAP32[$235>>2] = $237;
      $238 = ($237|0)==(0);
      if ($238) {
       _free($_37$sroa$8$1);
      }
     }
    }
    $239 = HEAP32[$value$i$sroa$0$0$$sroa_idx>>2]|0;
    $cond$i$i$i = ($239|0)==(0);
    if (!($cond$i$i$i)) {
     label = 51;
     break;
    }
    HEAP32[$value$i$sroa$10$0$$sroa_idx>>2] = $_37$sroa$0$1;
    HEAP32[$value$i$sroa$0$0$$sroa_idx>>2] = 0;
    $243 = HEAP32[$12>>2]|0;
    $$idx$val$i388 = HEAP32[$$idx$i387>>2]|0;
    $244 = ($243|0)==($$idx$val$i388|0);
    if ($244) {
     __THREW__ = 0;
     invoke_vi(232,($11|0));
     $245 = __THREW__; __THREW__ = 0;
     $246 = $245&1;
     if ($246) {
      label = 296;
      break;
     }
     $$pre$i = HEAP32[$12>>2]|0;
     $248 = $$pre$i;
    } else {
     $248 = $243;
    }
    $247 = HEAP32[$11>>2]|0;
    $value$i385$sroa$0$0$$sroa_idx = (($247) + (($248*20)|0)|0);
    HEAP32[$value$i385$sroa$0$0$$sroa_idx>>2] = $_37$sroa$0$1;
    $249 = (((($247) + (($248*20)|0)|0)) + 4|0);
    HEAPF32[$249>>2] = $23;
    $value$i385$sroa$5$0$$sroa_idx935 = (((($247) + (($248*20)|0)|0)) + 8|0);
    HEAPF32[$value$i385$sroa$5$0$$sroa_idx935>>2] = $24;
    $250 = (((($247) + (($248*20)|0)|0)) + 12|0);
    HEAPF32[$250>>2] = $25;
    $value$i385$sroa$7$0$$sroa_idx939 = (((($247) + (($248*20)|0)|0)) + 16|0);
    HEAPF32[$value$i385$sroa$7$0$$sroa_idx939>>2] = $26;
    $251 = HEAP32[$12>>2]|0;
    $252 = (($251) + 1)|0;
    HEAP32[$12>>2] = $252;
    $253 = HEAP32[$27>>2]|0;
    $254 = (($253) + -1)|0;
    HEAP32[$27>>2] = $254;
    $255 = ($254|0)==(0);
    if ($255) {
     $256 = HEAP32[$38>>2]|0;
     $257 = (($256) + -1)|0;
     HEAP32[$38>>2] = $257;
     $258 = ($257|0)==(0);
     if ($258) {
      _free($27);
     }
    }
    $259 = ($18|0)==($7|0);
    if ($259) {
     $$pre$phi1661Z2D = $12;
     break L1;
    } else {
     $iter$sroa$9$01340 = $18;
    }
   }
   switch (label|0) {
    case 6: {
     __THREW__ = 0;
     invoke_viii(225,(11057|0),38,(5412|0));
     $20 = __THREW__; __THREW__ = 0;
     $21 = ___cxa_find_matching_catch_2()|0;
     $22 = tempRet0;
     $personalityslot$sroa$0$0 = $21;$personalityslot$sroa$22$0 = $22;
     ___resumeException($personalityslot$sroa$0$0|0);
     // unreachable;
     break;
    }
    case 8: {
     __THREW__ = 0;
     invoke_v(210);
     $29 = __THREW__; __THREW__ = 0;
     $30 = ___cxa_find_matching_catch_2()|0;
     $31 = tempRet0;
     $personalityslot$sroa$0$0 = $30;$personalityslot$sroa$22$0 = $31;
     ___resumeException($personalityslot$sroa$0$0|0);
     // unreachable;
     break;
    }
    case 11: {
     $40 = ___cxa_find_matching_catch_2()|0;
     $41 = tempRet0;
     $personalityslot$sroa$0$0181$i = $40;$personalityslot$sroa$6$0180$i = $41;
     label = 10;
     break;
    }
    case 25: {
     __THREW__ = 0;
     invoke_viii(225,(11537|0),37,(5636|0));
     $135 = __THREW__; __THREW__ = 0;
     $136 = ___cxa_find_matching_catch_2()|0;
     $137 = tempRet0;
     $personalityslot$sroa$0$0181$i = $136;$personalityslot$sroa$6$0180$i = $137;
     label = 10;
     break;
    }
    case 37: {
     __THREW__ = 0;
     invoke_viii(225,(11500|0),37,(5648|0));
     $210 = __THREW__; __THREW__ = 0;
     $211 = ___cxa_find_matching_catch_2()|0;
     $212 = tempRet0;
     $213 = HEAP32[$old_value4$idx$val$i>>2]|0;
     $214 = (($213) + -1)|0;
     HEAP32[$old_value4$idx$val$i>>2] = $214;
     $215 = ($214|0)==(0);
     if ($215) {
      $224 = ((($old_value4$idx$val$i)) + 4|0);
      $225 = HEAP32[$224>>2]|0;
      $226 = (($225) + -1)|0;
      HEAP32[$224>>2] = $226;
      $227 = ($226|0)==(0);
      if ($227) {
       _free($old_value4$idx$val$i);
       $personalityslot$sroa$0$0181$i = $211;$personalityslot$sroa$6$0180$i = $212;
       label = 10;
      } else {
       $personalityslot$sroa$0$0181$i = $211;$personalityslot$sroa$6$0180$i = $212;
       label = 10;
      }
     } else {
      $personalityslot$sroa$0$0181$i = $211;$personalityslot$sroa$6$0180$i = $212;
      label = 10;
     }
     break;
    }
    case 39: {
     $216 = ___cxa_find_matching_catch_2()|0;
     $217 = tempRet0;
     $218 = HEAP32[$27>>2]|0;
     $219 = (($218) + -1)|0;
     HEAP32[$27>>2] = $219;
     $220 = ($219|0)==(0);
     if ($220) {
      $221 = HEAP32[$38>>2]|0;
      $222 = (($221) + -1)|0;
      HEAP32[$38>>2] = $222;
      $223 = ($222|0)==(0);
      if ($223) {
       _free($27);
       $personalityslot$sroa$0$0181$i = $216;$personalityslot$sroa$6$0180$i = $217;
       label = 10;
      } else {
       $personalityslot$sroa$0$0181$i = $216;$personalityslot$sroa$6$0180$i = $217;
       label = 10;
      }
     } else {
      $personalityslot$sroa$0$0181$i = $216;$personalityslot$sroa$6$0180$i = $217;
      label = 10;
     }
     break;
    }
    case 44: {
     $228 = ___cxa_find_matching_catch_2()|0;
     $229 = tempRet0;
     $personalityslot$sroa$0$0181$i = $228;$personalityslot$sroa$6$0180$i = $229;
     label = 10;
     break;
    }
    case 45: {
     $230 = ___cxa_find_matching_catch_2()|0;
     $231 = tempRet0;
     $personalityslot$sroa$0$0181$i = $230;$personalityslot$sroa$6$0180$i = $231;
     label = 10;
     break;
    }
    case 51: {
     __THREW__ = 0;
     invoke_v(212);
     $240 = __THREW__; __THREW__ = 0;
     $241 = ___cxa_find_matching_catch_2()|0;
     $242 = tempRet0;
     $eh$lpad$body$index3Z2D = $242;$eh$lpad$body$indexZ2D = $241;
     break;
    }
    case 296: {
     $759 = ___cxa_find_matching_catch_2()|0;
     $760 = tempRet0;
     $eh$lpad$body$index3Z2D = $760;$eh$lpad$body$indexZ2D = $759;
     break;
    }
   }
   if ((label|0) == 10) {
    $eh$lpad$body$index3Z2D = $personalityslot$sroa$6$0180$i;$eh$lpad$body$indexZ2D = $personalityslot$sroa$0$0181$i;
   }
   $736 = HEAP32[$27>>2]|0;
   $737 = (($736) + -1)|0;
   HEAP32[$27>>2] = $737;
   $738 = ($737|0)==(0);
   if (!($738)) {
    $personalityslot$sroa$0$0 = $eh$lpad$body$indexZ2D;$personalityslot$sroa$22$0 = $eh$lpad$body$index3Z2D;
    ___resumeException($personalityslot$sroa$0$0|0);
    // unreachable;
   }
   $739 = HEAP32[$38>>2]|0;
   $740 = (($739) + -1)|0;
   HEAP32[$38>>2] = $740;
   $741 = ($740|0)==(0);
   if (!($741)) {
    $personalityslot$sroa$0$0 = $eh$lpad$body$indexZ2D;$personalityslot$sroa$22$0 = $eh$lpad$body$index3Z2D;
    ___resumeException($personalityslot$sroa$0$0|0);
    // unreachable;
   }
   _free($27);
   $personalityslot$sroa$0$0 = $eh$lpad$body$indexZ2D;$personalityslot$sroa$22$0 = $eh$lpad$body$index3Z2D;
   ___resumeException($personalityslot$sroa$0$0|0);
   // unreachable;
  }
 } while(0);
 $260 = ((($0)) + 224|0);
 $261 = HEAP32[$260>>2]|0;
 $262 = HEAP32[$$pre$phi1661Z2D>>2]|0;
 $263 = ($262|0)==(0);
 do {
  if ($263) {
   $$pre1663 = ((($0)) + 8|0);
   $$pre1664 = ((($0)) + 64|0);
   $$idx317$pre$phiZZ2D = $0;$$idx318$pre$phiZZ2D = $$pre1663;$$pre$phi1665Z2D = $$pre1664;$272 = $261;$273 = 0;
  } else {
   $264 = (($261) + (($262*20)|0)|0);
   $$idx$i$i435 = ((($0)) + 8|0);
   $265 = ((($0)) + 64|0);
   $266 = ((($0)) + 92|0);
   $268 = $264;
   L87: while(1) {
    $267 = ((($268)) + -20|0);
    $269 = ((($268)) + -16|0);
    $$idx$val = HEAP32[$267>>2]|0;
    $$idx$val$i$i436 = HEAP32[$$idx$i$i435>>2]|0;
    $270 = ($$idx$val$i$i436>>>0)>($$idx$val>>>0);
    if (!($270)) {
     label = 66;
     break;
    }
    $$idx1$val$i$i438 = HEAP32[$0>>2]|0;
    $293 = (($$idx1$val$i$i438) + (($$idx$val*12)|0)|0);
    $294 = (((($$idx1$val$i$i438) + (($$idx$val*12)|0)|0)) + 4|0);
    $295 = HEAP32[$294>>2]|0;
    $switchtmp$i$i439 = ($295|0)==(0|0);
    $switch2tmp$i = ($293|0)==(0|0);
    $or$cond = $switchtmp$i$i439 | $switch2tmp$i;
    if ($or$cond) {
     label = 66;
     break;
    }
    $296 = (((($$idx1$val$i$i438) + (($$idx$val*12)|0)|0)) + 8|0);
    $297 = HEAP32[$296>>2]|0;
    switch ($297|0) {
    case 0:  {
     $298 = ((($295)) + 8|0);
     $299 = HEAP32[$298>>2]|0;
     $cond$i$i$i447 = ($299|0)==(0);
     if (!($cond$i$i$i447)) {
      label = 69;
      break L87;
     }
     $303 = (((($$idx1$val$i$i438) + (($$idx$val*12)|0)|0)) + 4|0);
     $304 = SIMD_Int32x4_load(HEAPU8, $269);
     $305 = ((($295)) + 12|0);
     temp_Int32x4_ptr = $305;SIMD_Int32x4_store(HEAPU8, temp_Int32x4_ptr, $304);
     HEAP32[$298>>2] = 0;
     __ZN80__LT_ncollide_geometry__partitioning__dbvt__DBVT_LT_P_C__u20_B_C__u20_BV_GT__GT_6remove17h870bd997ceaebb8cE($266,$303);
     HEAP32[$296>>2] = 100;
     break;
    }
    case -1:  {
     $306 = (((($$idx1$val$i$i438) + (($$idx$val*12)|0)|0)) + 4|0);
     __ZN80__LT_ncollide_geometry__partitioning__dbvt__DBVT_LT_P_C__u20_B_C__u20_BV_GT__GT_6remove17h870bd997ceaebb8cE($265,$306);
     break;
    }
    case -2:  {
     $308 = (((($$idx1$val$i$i438) + (($$idx$val*12)|0)|0)) + 4|0);
     __ZN80__LT_ncollide_geometry__partitioning__dbvt__DBVT_LT_P_C__u20_B_C__u20_BV_GT__GT_6remove17h870bd997ceaebb8cE($266,$308);
     break;
    }
    default: {
     $309 = ($297|0)<(100);
     if ($309) {
      $310 = ((($295)) + 8|0);
      $311 = HEAP32[$310>>2]|0;
      $cond$i$i$i460 = ($311|0)==(0);
      if (!($cond$i$i$i460)) {
       label = 76;
       break L87;
      }
      $315 = (((($$idx1$val$i$i438) + (($$idx$val*12)|0)|0)) + 4|0);
      $316 = SIMD_Int32x4_load(HEAPU8, $269);
      $317 = ((($295)) + 12|0);
      temp_Int32x4_ptr = $317;SIMD_Int32x4_store(HEAPU8, temp_Int32x4_ptr, $316);
      HEAP32[$310>>2] = 0;
      __ZN80__LT_ncollide_geometry__partitioning__dbvt__DBVT_LT_P_C__u20_B_C__u20_BV_GT__GT_6remove17h870bd997ceaebb8cE($265,$315);
      HEAP32[$296>>2] = 100;
     }
    }
    }
    $307 = ($267|0)==($261|0);
    if ($307) {
     label = 63;
     break;
    } else {
     $268 = $267;
    }
   }
   if ((label|0) == 63) {
    $$pre = HEAP32[$260>>2]|0;
    $$pre1650 = HEAP32[$$pre$phi1661Z2D>>2]|0;
    $$idx317$pre$phiZZ2D = $0;$$idx318$pre$phiZZ2D = $$idx$i$i435;$$pre$phi1665Z2D = $265;$272 = $$pre;$273 = $$pre1650;
    break;
   }
   else if ((label|0) == 66) {
    __ZN4core6option13expect_failed17hc1eeb48c0c4a1725E(10867,24);
    // unreachable;
   }
   else if ((label|0) == 69) {
    __THREW__ = 0;
    invoke_v(212);
    $300 = __THREW__; __THREW__ = 0;
    $301 = ___cxa_find_matching_catch_2()|0;
    $302 = tempRet0;
    $personalityslot$sroa$0$0 = $301;$personalityslot$sroa$22$0 = $302;
    ___resumeException($personalityslot$sroa$0$0|0);
    // unreachable;
   }
   else if ((label|0) == 76) {
    __THREW__ = 0;
    invoke_v(212);
    $312 = __THREW__; __THREW__ = 0;
    $313 = ___cxa_find_matching_catch_2()|0;
    $314 = tempRet0;
    $personalityslot$sroa$0$0 = $313;$personalityslot$sroa$22$0 = $314;
    ___resumeException($personalityslot$sroa$0$0|0);
    // unreachable;
   }
  }
 } while(0);
 $271 = (($272) + (($273*20)|0)|0);
 $274 = ((($0)) + 188|0);
 $275 = ((($visitor)) + 4|0);
 $276 = ((($0)) + 76|0);
 $277 = ((($0)) + 80|0);
 $278 = ((($0)) + 104|0);
 $279 = ((($0)) + 108|0);
 $280 = ((($0)) + 196|0);
 $281 = ((($2)) + 12|0);
 $282 = ((($0)) + 136|0);
 $$idx14$i$i = ((($0)) + 148|0);
 $$idx13$i$i = ((($0)) + 140|0);
 $283 = ((($0)) + 164|0);
 $284 = ((($0)) + 172|0);
 $$idx6$i579 = ((($0)) + 160|0);
 $$idx5$i582 = ((($0)) + 152|0);
 $285 = ((($0)) + 124|0);
 $286 = ((($0)) + 132|0);
 $$idx$i27$i = ((($0)) + 128|0);
 $287 = ((($4)) + 12|0);
 $288 = ((($0)) + 168|0);
 $289 = ((($0)) + 140|0);
 $290 = ((($0)) + 152|0);
 $291 = ((($newnext$i$i)) + 4|0);
 $292 = ((($newhash$i$i)) + 4|0);
 $$idx56$i$i = ((($0)) + 124|0);
 $newhash$idx48$i$i = ((($newhash$i$i)) + 8|0);
 $newnext$idx54$i$i = ((($newnext$i$i)) + 8|0);
 $iter5$sroa$4$0$ph$in = $271;
 L109: while(1) {
  $360 = ($iter5$sroa$4$0$ph$in|0)==($272|0);
  if ($360) {
   label = 79;
   break;
  } else {
   $319 = $iter5$sroa$4$0$ph$in;
  }
  while(1) {
   $318 = ((($319)) + -20|0);
   $$unpack = HEAP32[$318>>2]|0;
   $$idx317$val = HEAP32[$$idx317$pre$phiZZ2D>>2]|0;
   $$idx318$val = HEAP32[$$idx318$pre$phiZZ2D>>2]|0;
   $320 = ($$idx318$val>>>0)>($$unpack>>>0);
   if (!($320)) {
    label = 81;
    break L109;
   }
   $324 = (((($$idx317$val) + (($$unpack*12)|0)|0)) + 4|0);
   $325 = (($$idx317$val) + (($$unpack*12)|0)|0);
   $326 = HEAP32[$324>>2]|0;
   $switchtmp$i$i$i470 = ($326|0)==(0|0);
   $switch2tmp$i$i = ($325|0)==(0|0);
   $or$cond$i = $switch2tmp$i$i | $switchtmp$i$i$i470;
   if ($or$cond$i) {
    label = 81;
    break L109;
   }
   $327 = ((($326)) + 8|0);
   $328 = HEAP32[$327>>2]|0;
   $cond$i$i$i472 = ($328|0)==(-1);
   if ($cond$i$i$i472) {
    label = 83;
    break L109;
   }
   $$idx$i475 = ((($326)) + 40|0);
   $$idx$val$i476 = HEAP32[$$idx$i475>>2]|0;
   $cond$i$i = ($$idx$val$i476|0)==(3);
   if ($cond$i$i) {
    $330 = (((($$idx317$val) + (($$unpack*12)|0)|0)) + 8|0);
    $331 = HEAP32[$330>>2]|0;
    $332 = ($331|0)<(0);
    if (!($332)) {
     break;
    }
   }
   $329 = ($318|0)==($272|0);
   if ($329) {
    label = 79;
    break L109;
   } else {
    $319 = $318;
   }
  }
  $$idx307$val = HEAP32[$324>>2]|0;
  $333 = ((($$idx307$val)) + 8|0);
  $334 = HEAP32[$333>>2]|0;
  $cond$i$i$i479 = ($334|0)==(-1);
  if ($cond$i$i$i479) {
   label = 88;
   break;
  }
  $338 = (($334) + 1)|0;
  HEAP32[$333>>2] = $338;
  $339 = ((($$idx307$val)) + 12|0);
  HEAP32[$visitor>>2] = $339;
  HEAP32[$275>>2] = $274;
  $340 = HEAP32[$276>>2]|0;
  $switch$i499 = ($340|0)==(1);
  if ($switch$i499) {
   __THREW__ = 0;
   invoke_vii(233,($277|0),($visitor|0));
   $341 = __THREW__; __THREW__ = 0;
   $342 = $341&1;
   if ($342) {
    label = 288;
    break;
   }
  }
  $343 = HEAP32[$278>>2]|0;
  $switch$i503 = ($343|0)==(1);
  if ($switch$i503) {
   __THREW__ = 0;
   invoke_vii(233,($279|0),($visitor|0));
   $344 = __THREW__; __THREW__ = 0;
   $345 = $344&1;
   if ($345) {
    label = 288;
    break;
   }
  }
  $346 = HEAP32[$333>>2]|0;
  $347 = (($346) + -1)|0;
  HEAP32[$333>>2] = $347;
  $348 = HEAP32[$274>>2]|0;
  $349 = HEAP32[$280>>2]|0;
  $350 = (($348) + ($349<<2)|0);
  $351 = ($349|0)==(0);
  if (!($351)) {
   $353 = $348;
   while(1) {
    $352 = ((($353)) + 4|0);
    $$unpack290 = HEAP32[$353>>2]|0;
    $$idx315$val = HEAP32[$$idx317$pre$phiZZ2D>>2]|0;
    $$idx316$val = HEAP32[$$idx318$pre$phiZZ2D>>2]|0;
    $354 = ($$idx316$val>>>0)>($$unpack290>>>0);
    if (!($354)) {
     label = 103;
     break L109;
    }
    $361 = (((($$idx315$val) + (($$unpack290*12)|0)|0)) + 4|0);
    $362 = (($$idx315$val) + (($$unpack290*12)|0)|0);
    $363 = HEAP32[$361>>2]|0;
    $switchtmp$i$i$i556 = ($363|0)==(0|0);
    $switch2tmp$i$i557 = ($362|0)==(0|0);
    $or$cond$i558 = $switch2tmp$i$i557 | $switchtmp$i$i$i556;
    if ($or$cond$i558) {
     label = 103;
     break L109;
    }
    $364 = (((($$idx315$val) + (($$unpack290*12)|0)|0)) + 8|0);
    $365 = HEAP32[$364>>2]|0;
    $366 = ($365|0)<(0);
    L133: do {
     if (!($366)) {
      $368 = HEAP32[$281>>2]|0;
      $369 = (FUNCTION_TABLE_iiii[$368 & 511]($1,$325,$362)|0);
      if ($369) {
       $$unpack291 = HEAP32[$318>>2]|0;
       $$unpack292 = HEAP32[$353>>2]|0;
       $370 = ($$unpack291>>>0)<($$unpack292>>>0);
       $$$i = $370 ? $$unpack291 : $$unpack292;
       $$46$i = $370 ? $$unpack292 : $$unpack291;
       $371 = $$$i & 65535;
       $372 = $$46$i << 16;
       $373 = $372 | $371;
       $374 = $373 << 15;
       $375 = $374 ^ -1;
       $376 = (($373) + ($375))|0;
       $377 = $376 >>> 10;
       $378 = $377 ^ $376;
       $379 = ($378*9)|0;
       $380 = $379 >>> 6;
       $381 = $380 ^ $379;
       $382 = $381 << 11;
       $383 = $382 ^ -1;
       $384 = (($381) + ($383))|0;
       $385 = $384 >>> 16;
       $386 = $385 ^ $384;
       $387 = HEAP32[$282>>2]|0;
       $388 = $386 & $387;
       $$idx14$val$i$i = HEAP32[$$idx14$i$i>>2]|0;
       $389 = ($$idx14$val$i$i>>>0)>($388>>>0);
       if (!($389)) {
        label = 108;
        break L109;
       }
       $$idx13$val$i$i = HEAP32[$$idx13$i$i>>2]|0;
       $390 = (($$idx13$val$i$i) + ($388<<2)|0);
       $391 = HEAP32[$390>>2]|0;
       $392 = ($391|0)==(-1);
       L137: do {
        if (!($392)) {
         $$idx20$val$i$i = HEAP32[$286>>2]|0;
         $393 = ($$idx20$val$i$i>>>0)>($391>>>0);
         if (!($393)) {
          label = 111;
          break L109;
         }
         $$idx19$val$i$i = HEAP32[$$idx56$i$i>>2]|0;
         $$idx25$i$i = (((($$idx19$val$i$i) + ($391<<4)|0)) + 8|0);
         $$idx25$val$i$i = HEAP32[$$idx25$i$i>>2]|0;
         $$idx26$i$i = (((($$idx19$val$i$i) + ($391<<4)|0)) + 12|0);
         $$idx26$val$i$i = HEAP32[$$idx26$i$i>>2]|0;
         $notlhs$i$i$i563 = ($$idx25$val$i$i|0)!=($$$i|0);
         $notrhs$i$i$i564 = ($$idx26$val$i$i|0)!=($$46$i|0);
         $394 = $notlhs$i$i$i563 | $notrhs$i$i$i564;
         if ($394) {
          $$idx12$val$i$i = HEAP32[$$idx6$i579>>2]|0;
          $$idx11$val$i$i = HEAP32[$$idx5$i582>>2]|0;
          $pos$0$i$i = $391;
          while(1) {
           $395 = ($$idx12$val$i$i>>>0)>($pos$0$i$i>>>0);
           if (!($395)) {
            label = 115;
            break L109;
           }
           $396 = (($$idx11$val$i$i) + ($pos$0$i$i<<2)|0);
           $397 = HEAP32[$396>>2]|0;
           $398 = ($397|0)==(-1);
           if ($398) {
            break L137;
           }
           $399 = ($$idx20$val$i$i>>>0)>($397>>>0);
           if (!($399)) {
            label = 118;
            break L109;
           }
           $$idx21$i$i = (((($$idx19$val$i$i) + ($397<<4)|0)) + 8|0);
           $$idx21$val$i$i = HEAP32[$$idx21$i$i>>2]|0;
           $$idx22$i$i = (((($$idx19$val$i$i) + ($397<<4)|0)) + 12|0);
           $$idx22$val$i$i = HEAP32[$$idx22$i$i>>2]|0;
           $notlhs$i32$i$i = ($$idx21$val$i$i|0)!=($$$i|0);
           $notrhs$i33$i$i = ($$idx22$val$i$i|0)!=($$46$i|0);
           $400 = $notlhs$i32$i$i | $notrhs$i33$i$i;
           if ($400) {
            $pos$0$i$i = $397;
           } else {
            $pos$1$i$i = $397;
            break;
           }
          }
         } else {
          $pos$1$i$i = $391;
         }
         $401 = ($$idx20$val$i$i>>>0)>($pos$1$i$i>>>0);
         if ($401) {
          break L133;
         } else {
          label = 121;
          break L109;
         }
        }
       } while(0);
       $402 = HEAP32[$283>>2]|0;
       $403 = HEAP32[$284>>2]|0;
       $404 = ($402>>>0)<($403>>>0);
       if ($404) {
        $$idx2$val$i577 = $$idx14$val$i$i;$462 = $387;
       } else {
        $405 = HEAP32[$288>>2]|0;
        $406 = $405 << 1;
        HEAP32[$288>>2] = $406;
        $407 = (+($406>>>0));
        $408 = $407 * 0.69999998807907104;
        $409 = (~~(($408))>>>0);
        HEAP32[$284>>2] = $409;
        $410 = (($406) + -1)|0;
        HEAP32[$282>>2] = $410;
        __THREW__ = 0;
        invoke_vii(211,($newhash$i$i|0),($406|0));
        $411 = __THREW__; __THREW__ = 0;
        $412 = $411&1;
        if ($412) {
         label = 142;
         break L109;
        }
        $413 = HEAP32[$288>>2]|0;
        __THREW__ = 0;
        invoke_vii(211,($newnext$i$i|0),($413|0));
        $414 = __THREW__; __THREW__ = 0;
        $415 = $414&1;
        if ($415) {
         label = 145;
         break L109;
        }
        $416 = HEAP32[$283>>2]|0;
        $417 = ($416|0)==(0);
        if (!($417)) {
         $newhash$idx48$val$i$i = HEAP32[$newhash$idx48$i$i>>2]|0;
         $newnext$idx54$val$i$i = HEAP32[$newnext$idx54$i$i>>2]|0;
         $newnext$idx$val$i$i = HEAP32[$newnext$i$i>>2]|0;
         $newhash$idx$val$i$i = HEAP32[$newhash$i$i>>2]|0;
         $445 = 1;$iter$sroa$0$0111$i$i = 0;
         while(1) {
          $$idx57$val$i$i = HEAP32[$286>>2]|0;
          $418 = ($$idx57$val$i$i>>>0)>($iter$sroa$0$0111$i$i>>>0);
          if (!($418)) {
           label = 129;
           break L109;
          }
          $$idx56$val$i$i571 = HEAP32[$$idx56$i$i>>2]|0;
          $$idx$i$i572 = (((($$idx56$val$i$i571) + ($iter$sroa$0$0111$i$i<<4)|0)) + 8|0);
          $$idx$val$i$i573 = HEAP32[$$idx$i$i572>>2]|0;
          $$idx55$i$i574 = (((($$idx56$val$i$i571) + ($iter$sroa$0$0111$i$i<<4)|0)) + 12|0);
          $$idx55$val$i$i575 = HEAP32[$$idx55$i$i574>>2]|0;
          $420 = $$idx$val$i$i573 & 65535;
          $421 = $$idx55$val$i$i575 << 16;
          $422 = $421 | $420;
          $423 = $422 << 15;
          $424 = $423 ^ -1;
          $425 = (($422) + ($424))|0;
          $426 = $425 >>> 10;
          $427 = $426 ^ $425;
          $428 = ($427*9)|0;
          $429 = $428 >>> 6;
          $430 = $429 ^ $428;
          $431 = $430 << 11;
          $432 = $431 ^ -1;
          $433 = (($430) + ($432))|0;
          $434 = $433 >>> 16;
          $435 = $434 ^ $433;
          $436 = HEAP32[$282>>2]|0;
          $437 = $435 & $436;
          $438 = ($newhash$idx48$val$i$i>>>0)>($437>>>0);
          if (!($438)) {
           label = 131;
           break L109;
          }
          $440 = ($newnext$idx54$val$i$i>>>0)>($iter$sroa$0$0111$i$i>>>0);
          if (!($440)) {
           label = 133;
           break L109;
          }
          $442 = (($newhash$idx$val$i$i) + ($437<<2)|0);
          $443 = HEAP32[$442>>2]|0;
          $444 = (($newnext$idx$val$i$i) + ($iter$sroa$0$0111$i$i<<2)|0);
          HEAP32[$444>>2] = $443;
          HEAP32[$442>>2] = $iter$sroa$0$0111$i$i;
          $446 = ($445>>>0)<($416>>>0);
          $447 = (($445) + 1)|0;
          if ($446) {
           $iter$sroa$0$0111$i$i$phi = $445;$445 = $447;$iter$sroa$0$0111$i$i = $iter$sroa$0$0111$i$i$phi;
          } else {
           break;
          }
         }
        }
        ;HEAP32[$t$i71$i$i>>2]=HEAP32[$newhash$i$i>>2]|0;HEAP32[$t$i71$i$i+4>>2]=HEAP32[$newhash$i$i+4>>2]|0;HEAP32[$t$i71$i$i+8>>2]=HEAP32[$newhash$i$i+8>>2]|0;
        ;HEAP32[$newhash$i$i>>2]=HEAP32[$289>>2]|0;HEAP32[$newhash$i$i+4>>2]=HEAP32[$289+4>>2]|0;HEAP32[$newhash$i$i+8>>2]=HEAP32[$289+8>>2]|0;
        ;HEAP32[$289>>2]=HEAP32[$t$i71$i$i>>2]|0;HEAP32[$289+4>>2]=HEAP32[$t$i71$i$i+4>>2]|0;HEAP32[$289+8>>2]=HEAP32[$t$i71$i$i+8>>2]|0;
        ;HEAP32[$t$i$i$i>>2]=HEAP32[$newnext$i$i>>2]|0;HEAP32[$t$i$i$i+4>>2]=HEAP32[$newnext$i$i+4>>2]|0;HEAP32[$t$i$i$i+8>>2]=HEAP32[$newnext$i$i+8>>2]|0;
        ;HEAP32[$newnext$i$i>>2]=HEAP32[$290>>2]|0;HEAP32[$newnext$i$i+4>>2]=HEAP32[$290+4>>2]|0;HEAP32[$newnext$i$i+8>>2]=HEAP32[$290+8>>2]|0;
        ;HEAP32[$290>>2]=HEAP32[$t$i$i$i>>2]|0;HEAP32[$290+4>>2]=HEAP32[$t$i$i$i+4>>2]|0;HEAP32[$290+8>>2]=HEAP32[$t$i$i$i+8>>2]|0;
        $448 = HEAP32[$291>>2]|0;
        $not$$i$i$i$i64$i$i = ($448|0)==(0);
        if (!($not$$i$i$i$i64$i$i)) {
         $449 = HEAP32[$newnext$i$i>>2]|0;
         _free($449);
        }
        $450 = HEAP32[$292>>2]|0;
        $not$$i$i$i$i61$i$i = ($450|0)==(0);
        if (!($not$$i$i$i$i61$i$i)) {
         $451 = HEAP32[$newhash$i$i>>2]|0;
         _free($451);
        }
        $$pre1651 = HEAP32[$282>>2]|0;
        $$idx2$val$i577$pre = HEAP32[$$idx14$i$i>>2]|0;
        $$idx2$val$i577 = $$idx2$val$i577$pre;$462 = $$pre1651;
       }
       $461 = $462 & $386;
       $463 = ($$idx2$val$i577>>>0)>($461>>>0);
       if (!($463)) {
        label = 147;
        break L109;
       }
       $464 = HEAP32[$283>>2]|0;
       $$idx6$val$i580 = HEAP32[$$idx6$i579>>2]|0;
       $465 = ($$idx6$val$i580>>>0)>($464>>>0);
       if (!($465)) {
        label = 149;
        break L109;
       }
       $$idx5$val$i583 = HEAP32[$$idx5$i582>>2]|0;
       $$idx$val$i584 = HEAP32[$$idx13$i$i>>2]|0;
       $466 = (($$idx$val$i584) + ($461<<2)|0);
       $467 = HEAP32[$466>>2]|0;
       $468 = (($$idx5$val$i583) + ($464<<2)|0);
       HEAP32[$468>>2] = $467;
       $$idx4$val$i585 = HEAP32[$$idx14$i$i>>2]|0;
       $469 = ($$idx4$val$i585>>>0)>($461>>>0);
       if (!($469)) {
        label = 151;
        break L109;
       }
       $$idx3$val$i587 = HEAP32[$$idx13$i$i>>2]|0;
       $470 = HEAP32[$283>>2]|0;
       $471 = (($$idx3$val$i587) + ($461<<2)|0);
       HEAP32[$471>>2] = $470;
       $472 = HEAP32[$286>>2]|0;
       $$idx$val$i28$i = HEAP32[$$idx$i27$i>>2]|0;
       $473 = ($472|0)==($$idx$val$i28$i|0);
       if ($473) {
        __ZN40__LT_alloc__raw_vec__RawVec_LT_T_GT__GT_6double17hf3f26c768d114100E($285);
        $$pre$i$i589 = HEAP32[$286>>2]|0;
        $476 = $$pre$i$i589;
       } else {
        $476 = $472;
       }
       $474 = HEAP32[$285>>2]|0;
       $475 = (($474) + ($476<<4)|0);
       $477 = $475;
       $478 = $477;
       HEAP32[$478>>2] = $$unpack291;
       $479 = (($477) + 4)|0;
       $480 = $479;
       HEAP32[$480>>2] = $$unpack292;
       $value$sroa$0$i$sroa$4$0$_22$sroa$0$0$_9$sroa$0$0$$sroa_cast3$i$sroa_cast$i$sroa_idx84$i = (((($474) + ($476<<4)|0)) + 8|0);
       HEAP32[$value$sroa$0$i$sroa$4$0$_22$sroa$0$0$_9$sroa$0$0$$sroa_cast3$i$sroa_cast$i$sroa_idx84$i>>2] = $$$i;
       $value$sroa$0$i$sroa$5$0$_22$sroa$0$0$_9$sroa$0$0$$sroa_cast3$i$sroa_cast$i$sroa_idx86$i = (((($474) + ($476<<4)|0)) + 12|0);
       HEAP32[$value$sroa$0$i$sroa$5$0$_22$sroa$0$0$_9$sroa$0$0$$sroa_cast3$i$sroa_cast$i$sroa_idx86$i>>2] = $$46$i;
       $481 = HEAP32[$286>>2]|0;
       $482 = (($481) + 1)|0;
       HEAP32[$286>>2] = $482;
       $483 = HEAP32[$283>>2]|0;
       $484 = (($483) + 1)|0;
       HEAP32[$283>>2] = $484;
       $485 = ($482>>>0)>($483>>>0);
       if (!($485)) {
        label = 155;
        break L109;
       }
       $486 = HEAP32[$287>>2]|0;
       FUNCTION_TABLE_viiii[$486 & 511]($3,$325,$362,1);
      }
     }
    } while(0);
    $367 = ($352|0)==($350|0);
    if ($367) {
     break;
    } else {
     $353 = $352;
    }
   }
   $$pre1653 = HEAP32[$280>>2]|0;
   $355 = ($$pre1653|0)==(0);
   if (!($355)) {
    HEAP32[$280>>2] = 0;
   }
  }
  $$idx$val$i547 = HEAP32[$324>>2]|0;
  $356 = HEAP32[$$idx$val$i547>>2]|0;
  $$arith19 = (($356) + 1)|0;
  $$overflow20 = ($356>>>0)>(4294967294);
  if ($$overflow20) {
   label = 99;
   break;
  }
  $357 = $$idx$val$i547;
  HEAP32[$$idx$val$i547>>2] = $$arith19;
  __THREW__ = 0;
  invoke_vii(236,($$pre$phi1665Z2D|0),($357|0));
  $358 = __THREW__; __THREW__ = 0;
  $359 = $358&1;
  if ($359) {
   label = 294;
   break;
  } else {
   $iter5$sroa$4$0$ph$in = $318;
  }
 }
 L180:  switch (label|0) {
  case 79: {
   $321 = ((($0)) + 184|0);
   $322 = HEAP8[$321>>0]|0;
   $323 = ($322<<24>>24)==(0);
   if ($323) {
    $$idx320$val = HEAP32[$$pre$phi1661Z2D>>2]|0;
    $487 = ($$idx320$val|0)==(0);
    if (!($487)) {
     $$idx325$val = HEAP32[$283>>2]|0;
     $488 = ($$idx325$val|0)==(0);
     if ($488) {
      label = 191;
     } else {
      $490 = (($$idx325$val>>>0) / 10)&-1;
      $491 = ($$idx320$val>>>0)>($490>>>0);
      $492 = ($$idx320$val>>>0)<($$idx325$val>>>0);
      $_0$0$in$sroa$speculate$load$bb5$sroa$speculated$i = $492 ? $$idx320$val : $$idx325$val;
      $_0$0$in$sroa$speculated$i = $491 ? $_0$0$in$sroa$speculate$load$bb5$sroa$speculated$i : $490;
      $$phi$trans$insert = ((($0)) + 180|0);
      $$pre1654 = HEAP32[$$phi$trans$insert>>2]|0;
      $$idx323$val1333 = $$idx325$val;$$pre$phiZ2D = $$phi$trans$insert;$494 = $$pre1654;$num_removals$0 = $_0$0$in$sroa$speculated$i;
      label = 161;
     }
    }
   } else {
    $$idx324$val967 = HEAP32[$283>>2]|0;
    $489 = ((($0)) + 180|0);
    HEAP32[$489>>2] = 0;
    HEAP8[$321>>0] = 0;
    $$idx323$val1333 = $$idx324$val967;$$pre$phiZ2D = $489;$494 = 0;$num_removals$0 = $$idx324$val967;
    label = 161;
   }
   if ((label|0) == 161) {
    $493 = (($494) + ($num_removals$0))|0;
    $495 = ($494>>>0)<($493>>>0);
    $496 = ($$idx323$val1333|0)==(0);
    L189: do {
     if ($495) {
      $497 = ((($0)) + 200|0);
      $498 = ((($0)) + 208|0);
      $$idx$i494 = ((($0)) + 204|0);
      $$idx323$val1335 = $$idx323$val1333;$$in = $494;$776 = $496;
      L191: while(1) {
       $499 = (($$in) + 1)|0;
       if ($776) {
        label = 297;
        break;
       }
       $500 = (($$in>>>0) % ($$idx323$val1335>>>0))&-1;
       $$idx$val$i551 = HEAP32[$$idx56$i$i>>2]|0;
       $$idx1$val$i553 = HEAP32[$286>>2]|0;
       $501 = ($500>>>0)<($$idx1$val$i553>>>0);
       if (!($501)) {
        label = 298;
        break;
       }
       $_271$sroa$0$0$$sroa_idx = (($$idx$val$i551) + ($500<<4)|0);
       $_271$sroa$0$0$copyload = HEAP32[$_271$sroa$0$0$$sroa_idx>>2]|0;
       $_271$sroa$4$0$$sroa_idx202 = (((($$idx$val$i551) + ($500<<4)|0)) + 4|0);
       $_271$sroa$4$0$copyload = HEAP32[$_271$sroa$4$0$$sroa_idx202>>2]|0;
       $_271$sroa$5$0$$sroa_idx = (((($$idx$val$i551) + ($500<<4)|0)) + 8|0);
       $502 = $_271$sroa$5$0$$sroa_idx;
       $503 = $502;
       $504 = HEAP32[$503>>2]|0;
       $505 = (($502) + 4)|0;
       $506 = $505;
       $507 = HEAP32[$506>>2]|0;
       $$idx313$val = HEAP32[$$idx317$pre$phiZZ2D>>2]|0;
       $$idx314$val = HEAP32[$$idx318$pre$phiZZ2D>>2]|0;
       $508 = ($$idx314$val>>>0)>($_271$sroa$0$0$copyload>>>0);
       if (!($508)) {
        label = 168;
        break;
       }
       $509 = (((($$idx313$val) + (($_271$sroa$0$0$copyload*12)|0)|0)) + 4|0);
       $510 = (($$idx313$val) + (($_271$sroa$0$0$copyload*12)|0)|0);
       $511 = HEAP32[$509>>2]|0;
       $switchtmp$i$i$i540 = ($511|0)==(0|0);
       $switch2tmp$i$i541 = ($510|0)==(0|0);
       $or$cond$i542 = $switch2tmp$i$i541 | $switchtmp$i$i$i540;
       if ($or$cond$i542) {
        label = 168;
        break;
       }
       $512 = ($$idx314$val>>>0)>($_271$sroa$4$0$copyload>>>0);
       if (!($512)) {
        label = 171;
        break;
       }
       $513 = (((($$idx313$val) + (($_271$sroa$4$0$copyload*12)|0)|0)) + 4|0);
       $514 = (($$idx313$val) + (($_271$sroa$4$0$copyload*12)|0)|0);
       $515 = HEAP32[$513>>2]|0;
       $switchtmp$i$i$i533 = ($515|0)==(0|0);
       $switch2tmp$i$i534 = ($514|0)==(0|0);
       $or$cond$i535 = $switch2tmp$i$i534 | $switchtmp$i$i$i533;
       if ($or$cond$i535) {
        label = 171;
        break;
       }
       $516 = ((($511)) + 8|0);
       $517 = HEAP32[$516>>2]|0;
       $cond$i$i$i526 = ($517|0)==(-1);
       if ($cond$i$i$i526) {
        label = 173;
        break;
       }
       $520 = (($517) + 1)|0;
       HEAP32[$516>>2] = $520;
       $$idx305$val = HEAP32[$513>>2]|0;
       $521 = ((($$idx305$val)) + 8|0);
       $522 = HEAP32[$521>>2]|0;
       $cond$i$i$i519 = ($522|0)==(-1);
       if ($cond$i$i$i519) {
        label = 176;
        break;
       }
       $526 = (($522) + 1)|0;
       HEAP32[$521>>2] = $526;
       $527 = (((($$idx313$val) + (($_271$sroa$0$0$copyload*12)|0)|0)) + 8|0);
       $528 = HEAP32[$527>>2]|0;
       $529 = ($528|0)<(0);
       do {
        if ($529) {
         label = 183;
        } else {
         $538 = (((($$idx313$val) + (($_271$sroa$4$0$copyload*12)|0)|0)) + 8|0);
         $539 = HEAP32[$538>>2]|0;
         $540 = ($539|0)<(0);
         if ($540) {
          label = 183;
         } else {
          $534 = HEAP32[$281>>2]|0;
          __THREW__ = 0;
          $535 = (invoke_iiii($534|0,($1|0),($510|0),($514|0))|0);
          $536 = __THREW__; __THREW__ = 0;
          $537 = $536&1;
          if ($537) {
           label = 299;
           break L191;
          }
          if (!($535)) {
           label = 183;
           break;
          }
          $$idx$i514 = ((($511)) + 12|0);
          $$idx$val$i515 = +HEAPF32[$$idx$i514>>2];
          $$idx1$i = ((($511)) + 16|0);
          $$idx1$val$i = +HEAPF32[$$idx1$i>>2];
          $$idx2$i = ((($$idx305$val)) + 20|0);
          $$idx2$val$i = +HEAPF32[$$idx2$i>>2];
          $$idx3$i = ((($$idx305$val)) + 24|0);
          $$idx3$val$i = +HEAPF32[$$idx3$i>>2];
          $530 = $$idx$val$i515 <= $$idx2$val$i;
          $531 = $$idx1$val$i <= $$idx3$val$i;
          $or$cond$i$i$i = $530 & $531;
          if (!($or$cond$i$i$i)) {
           label = 183;
           break;
          }
          $$idx4$i = ((($511)) + 20|0);
          $$idx4$val$i = +HEAPF32[$$idx4$i>>2];
          $$idx5$i = ((($511)) + 24|0);
          $$idx5$val$i = +HEAPF32[$$idx5$i>>2];
          $$idx6$i517 = ((($$idx305$val)) + 12|0);
          $$idx6$val$i = +HEAPF32[$$idx6$i517>>2];
          $$idx7$i = ((($$idx305$val)) + 16|0);
          $$idx7$val$i = +HEAPF32[$$idx7$i>>2];
          $532 = $$idx4$val$i >= $$idx6$val$i;
          $533 = $$idx5$val$i >= $$idx7$val$i;
          $or$cond$i$i8$i = $532 & $533;
          if (!($or$cond$i$i8$i)) {
           label = 183;
           break;
          }
          $544 = HEAP32[$521>>2]|0;
          $545 = (($544) + -1)|0;
          HEAP32[$521>>2] = $545;
          $546 = HEAP32[$516>>2]|0;
          $547 = (($546) + -1)|0;
          HEAP32[$516>>2] = $547;
         }
        }
       } while(0);
       if ((label|0) == 183) {
        label = 0;
        $541 = HEAP32[$287>>2]|0;
        __THREW__ = 0;
        invoke_viiii($541|0,($3|0),($510|0),($514|0),0);
        $542 = __THREW__; __THREW__ = 0;
        $543 = $542&1;
        if ($543) {
         label = 299;
         break;
        }
        $548 = HEAP32[$521>>2]|0;
        $549 = (($548) + -1)|0;
        HEAP32[$521>>2] = $549;
        $550 = HEAP32[$516>>2]|0;
        $551 = (($550) + -1)|0;
        HEAP32[$516>>2] = $551;
        $552 = HEAP32[$498>>2]|0;
        $$idx$val$i495 = HEAP32[$$idx$i494>>2]|0;
        $553 = ($552|0)==($$idx$val$i495|0);
        if ($553) {
         __ZN40__LT_alloc__raw_vec__RawVec_LT_T_GT__GT_6double17he7ddb4f4d4d2d5aaE($497);
         $$pre$i496 = HEAP32[$498>>2]|0;
         $555 = $$pre$i496;
        } else {
         $555 = $552;
        }
        $554 = HEAP32[$497>>2]|0;
        $value$i492$sroa$0$0$$sroa_idx = (($554) + ($555<<4)|0);
        HEAP32[$value$i492$sroa$0$0$$sroa_idx>>2] = $_271$sroa$0$0$copyload;
        $value$i492$sroa$4$0$$sroa_idx943 = (((($554) + ($555<<4)|0)) + 4|0);
        HEAP32[$value$i492$sroa$4$0$$sroa_idx943>>2] = $_271$sroa$4$0$copyload;
        $value$i492$sroa$5$0$$sroa_idx945 = (((($554) + ($555<<4)|0)) + 8|0);
        $556 = $value$i492$sroa$5$0$$sroa_idx945;
        $557 = $556;
        HEAP32[$557>>2] = $504;
        $558 = (($556) + 4)|0;
        $559 = $558;
        HEAP32[$559>>2] = $507;
        $560 = HEAP32[$498>>2]|0;
        $561 = (($560) + 1)|0;
        HEAP32[$498>>2] = $561;
       }
       $562 = ($499>>>0)<($493>>>0);
       $$idx323$val = HEAP32[$283>>2]|0;
       $563 = ($$idx323$val|0)==(0);
       if ($562) {
        $$idx323$val1335 = $$idx323$val;$$in = $499;$776 = $563;
       } else {
        $$idx323$val$lcssa = $$idx323$val;$$lcssa1177 = $563;
        break L189;
       }
      }
      if ((label|0) == 168) {
       __ZN4core6option13expect_failed17hc1eeb48c0c4a1725E(10432,15);
       // unreachable;
      }
      else if ((label|0) == 171) {
       __ZN4core6option13expect_failed17hc1eeb48c0c4a1725E(10432,15);
       // unreachable;
      }
      else if ((label|0) == 173) {
       __ZN4core6result13unwrap_failed17h0dc63b200336bf84E();
       // unreachable;
      }
      else if ((label|0) == 176) {
       __THREW__ = 0;
       invoke_v(221);
       $523 = __THREW__; __THREW__ = 0;
       $524 = ___cxa_find_matching_catch_2()|0;
       $525 = tempRet0;
       $personalityslot$sroa$0$4 = $524;$personalityslot$sroa$22$4 = $525;
      }
      else if ((label|0) == 297) {
       __ZN4core9panicking5panic17ha7507e8e32961bfeE(5048);
       // unreachable;
      }
      else if ((label|0) == 298) {
       __ZN4core9panicking18panic_bounds_check17hd14a5808e41829e9E(10891,115,221,$500,$$idx1$val$i553);
       // unreachable;
      }
      else if ((label|0) == 299) {
       $761 = ___cxa_find_matching_catch_2()|0;
       $762 = tempRet0;
       $763 = HEAP32[$521>>2]|0;
       $764 = (($763) + -1)|0;
       HEAP32[$521>>2] = $764;
       $personalityslot$sroa$0$4 = $761;$personalityslot$sroa$22$4 = $762;
      }
      $518 = HEAP32[$516>>2]|0;
      $519 = (($518) + -1)|0;
      HEAP32[$516>>2] = $519;
      $personalityslot$sroa$0$0 = $personalityslot$sroa$0$4;$personalityslot$sroa$22$0 = $personalityslot$sroa$22$4;
      ___resumeException($personalityslot$sroa$0$0|0);
      // unreachable;
     } else {
      $$idx323$val$lcssa = $$idx323$val1333;$$lcssa1177 = $496;
     }
    } while(0);
    if ($$lcssa1177) {
     $_331$0 = 0;
    } else {
     $564 = HEAP32[$$pre$phiZ2D>>2]|0;
     $565 = (($564) + ($num_removals$0))|0;
     $566 = (($565>>>0) % ($$idx323$val$lcssa>>>0))&-1;
     $_331$0 = $566;
    }
    HEAP32[$$pre$phiZ2D>>2] = $_331$0;
    $$pre1657 = HEAP32[$$pre$phi1661Z2D>>2]|0;
    $567 = ($$pre1657|0)==(0);
    if (!($567)) {
     label = 191;
    }
   }
   if ((label|0) == 191) {
    HEAP32[$$pre$phi1661Z2D>>2] = 0;
   }
   $568 = ((($0)) + 200|0);
   $569 = HEAP32[$568>>2]|0;
   $570 = ((($0)) + 208|0);
   $571 = HEAP32[$570>>2]|0;
   $572 = (($569) + ($571<<4)|0);
   $573 = ($571|0)==(0);
   L234: do {
    if (!($573)) {
     $575 = $569;
     L236: while(1) {
      $574 = ((($575)) + 16|0);
      $$idx326 = ((($575)) + 8|0);
      $$idx326$val = HEAP32[$$idx326>>2]|0;
      $$idx327 = ((($575)) + 12|0);
      $$idx327$val = HEAP32[$$idx327>>2]|0;
      $576 = $$idx326$val & 65535;
      $577 = $$idx327$val << 16;
      $578 = $577 | $576;
      $579 = $578 << 15;
      $580 = $579 ^ -1;
      $581 = (($578) + ($580))|0;
      $582 = $581 >>> 10;
      $583 = $582 ^ $581;
      $584 = ($583*9)|0;
      $585 = $584 >>> 6;
      $586 = $585 ^ $584;
      $587 = $586 << 11;
      $588 = $587 ^ -1;
      $589 = (($586) + ($588))|0;
      $590 = $589 >>> 16;
      $591 = $590 ^ $589;
      $592 = HEAP32[$282>>2]|0;
      $593 = $591 & $592;
      $$idx59$val$i$i = HEAP32[$$idx14$i$i>>2]|0;
      $594 = ($$idx59$val$i$i>>>0)>($593>>>0);
      if (!($594)) {
       label = 198;
       break;
      }
      $$idx58$val$i$i = HEAP32[$$idx13$i$i>>2]|0;
      $600 = (($$idx58$val$i$i) + ($593<<2)|0);
      $601 = HEAP32[$600>>2]|0;
      $602 = ($601|0)==(-1);
      L239: do {
       if (!($602)) {
        $$idx85$val$i$i = HEAP32[$286>>2]|0;
        $604 = ($$idx85$val$i$i>>>0)>($601>>>0);
        if (!($604)) {
         label = 202;
         break L236;
        }
        $$idx84$val$i$i = HEAP32[$$idx56$i$i>>2]|0;
        $$idx90$i$i = (((($$idx84$val$i$i) + ($601<<4)|0)) + 8|0);
        $$idx90$val$i$i = HEAP32[$$idx90$i$i>>2]|0;
        $$idx91$i$i = (((($$idx84$val$i$i) + ($601<<4)|0)) + 12|0);
        $$idx91$val$i$i = HEAP32[$$idx91$i$i>>2]|0;
        $notlhs$i$i$i = ($$idx90$val$i$i|0)!=($$idx326$val|0);
        $notrhs$i$i$i = ($$idx91$val$i$i|0)!=($$idx327$val|0);
        $605 = $notlhs$i$i$i | $notrhs$i$i$i;
        $$idx55$val$i$i = HEAP32[$$idx6$i579>>2]|0;
        if ($605) {
         $$idx54$val$i$i = HEAP32[$$idx5$i582>>2]|0;
         $o$0$i$i = $601;
         while(1) {
          $611 = ($$idx55$val$i$i>>>0)>($o$0$i$i>>>0);
          if (!($611)) {
           label = 211;
           break L236;
          }
          $612 = (($$idx54$val$i$i) + ($o$0$i$i<<2)|0);
          $613 = HEAP32[$612>>2]|0;
          $614 = ($613|0)==(-1);
          if ($614) {
           break L239;
          }
          $615 = ($$idx85$val$i$i>>>0)>($613>>>0);
          if (!($615)) {
           label = 214;
           break L236;
          }
          $$idx86$i$i = (((($$idx84$val$i$i) + ($613<<4)|0)) + 8|0);
          $$idx86$val$i$i = HEAP32[$$idx86$i$i>>2]|0;
          $$idx87$i$i = (((($$idx84$val$i$i) + ($613<<4)|0)) + 12|0);
          $$idx87$val$i$i = HEAP32[$$idx87$i$i>>2]|0;
          $notlhs$i110$i$i = ($$idx86$val$i$i|0)!=($$idx326$val|0);
          $notrhs$i111$i$i = ($$idx87$val$i$i|0)!=($$idx327$val|0);
          $616 = $notlhs$i110$i$i | $notrhs$i111$i$i;
          if ($616) {
           $o$0$i$i = $613;
          } else {
           break;
          }
         }
         $617 = ($$idx55$val$i$i>>>0)>($613>>>0);
         if (!($617)) {
          label = 217;
          break L236;
         }
         $618 = (($$idx54$val$i$i) + ($613<<2)|0);
         $619 = HEAP32[$618>>2]|0;
         HEAP32[$612>>2] = $619;
         $$idx69$val$i$i = HEAP32[$$idx6$i579>>2]|0;
         $620 = ($$idx69$val$i$i>>>0)>($613>>>0);
         if (!($620)) {
          label = 219;
          break L236;
         }
         $$idx68$val$i$i = HEAP32[$$idx5$i582>>2]|0;
         $621 = (($$idx68$val$i$i) + ($613<<2)|0);
         HEAP32[$621>>2] = -1;
         $obji$0$i$i = $613;
        } else {
         $606 = ($$idx55$val$i$i>>>0)>($601>>>0);
         if (!($606)) {
          label = 206;
          break L236;
         }
         $$idx56$val$i$i = HEAP32[$$idx5$i582>>2]|0;
         $607 = (($$idx56$val$i$i) + ($601<<2)|0);
         $608 = HEAP32[$607>>2]|0;
         HEAP32[$600>>2] = $608;
         $$idx73$val$i$i = HEAP32[$$idx6$i579>>2]|0;
         $609 = ($$idx73$val$i$i>>>0)>($601>>>0);
         if (!($609)) {
          label = 208;
          break L236;
         }
         $$idx72$val$i$i = HEAP32[$$idx5$i582>>2]|0;
         $610 = (($$idx72$val$i$i) + ($601<<2)|0);
         HEAP32[$610>>2] = -1;
         $obji$0$i$i = $601;
        }
        $622 = HEAP32[$283>>2]|0;
        $623 = (($622) + -1)|0;
        HEAP32[$283>>2] = $623;
        $$idx$val$i$i$i433 = HEAP32[$286>>2]|0;
        $624 = HEAP32[$$idx56$i$i>>2]|0;
        $625 = (($$idx$val$i$i$i433) + -1)|0;
        $626 = ($$idx$val$i$i$i433>>>0)>($obji$0$i$i>>>0);
        if (!($626)) {
         label = 223;
         break L236;
        }
        $627 = ($$idx$val$i$i$i433|0)==(0);
        if ($627) {
         label = 224;
         break L236;
        }
        $628 = (($624) + ($obji$0$i$i<<4)|0);
        $629 = (($624) + ($625<<4)|0);
        ;HEAP32[$tmp$sroa$0$i$i$i$i$i$i>>2]=HEAP32[$628>>2]|0;HEAP32[$tmp$sroa$0$i$i$i$i$i$i+4>>2]=HEAP32[$628+4>>2]|0;HEAP32[$tmp$sroa$0$i$i$i$i$i$i+8>>2]=HEAP32[$628+8>>2]|0;HEAP32[$tmp$sroa$0$i$i$i$i$i$i+12>>2]=HEAP32[$628+12>>2]|0;
        _memmove(($628|0),($629|0),16)|0;
        ;HEAP32[$629>>2]=HEAP32[$tmp$sroa$0$i$i$i$i$i$i>>2]|0;HEAP32[$629+4>>2]=HEAP32[$tmp$sroa$0$i$i$i$i$i$i+4>>2]|0;HEAP32[$629+8>>2]=HEAP32[$tmp$sroa$0$i$i$i$i$i$i+8>>2]|0;HEAP32[$629+12>>2]=HEAP32[$tmp$sroa$0$i$i$i$i$i$i+12>>2]|0;
        $630 = HEAP32[$286>>2]|0;
        $631 = ($630|0)==(0);
        if ($631) {
         label = 226;
         break L236;
        }
        $632 = (($630) + -1)|0;
        HEAP32[$286>>2] = $632;
        $633 = HEAP32[$$idx56$i$i>>2]|0;
        $634 = HEAP32[$283>>2]|0;
        $635 = ($obji$0$i$i|0)==($634|0);
        if (!($635)) {
         $636 = ($632>>>0)>($obji$0$i$i>>>0);
         if (!($636)) {
          label = 229;
          break L236;
         }
         $$idx76$i$i = (((($633) + ($obji$0$i$i<<4)|0)) + 8|0);
         $$idx76$val$i$i = HEAP32[$$idx76$i$i>>2]|0;
         $$idx77$i$i = (((($633) + ($obji$0$i$i<<4)|0)) + 12|0);
         $$idx77$val$i$i = HEAP32[$$idx77$i$i>>2]|0;
         $637 = $$idx76$val$i$i & 65535;
         $638 = $$idx77$val$i$i << 16;
         $639 = $638 | $637;
         $640 = $639 << 15;
         $641 = $640 ^ -1;
         $642 = (($639) + ($641))|0;
         $643 = $642 >>> 10;
         $644 = $643 ^ $642;
         $645 = ($644*9)|0;
         $646 = $645 >>> 6;
         $647 = $646 ^ $645;
         $648 = $647 << 11;
         $649 = $648 ^ -1;
         $650 = (($647) + ($649))|0;
         $651 = $650 >>> 16;
         $652 = $651 ^ $650;
         $653 = HEAP32[$282>>2]|0;
         $654 = $652 & $653;
         $$idx37$val$i$i = HEAP32[$$idx14$i$i>>2]|0;
         $655 = ($$idx37$val$i$i>>>0)>($654>>>0);
         if (!($655)) {
          label = 231;
          break L236;
         }
         $$idx$val$i$i434 = HEAP32[$$idx13$i$i>>2]|0;
         $656 = (($$idx$val$i$i434) + ($654<<2)|0);
         $657 = HEAP32[$656>>2]|0;
         $658 = ($657|0)==($634|0);
         if ($658) {
          HEAP32[$656>>2] = $obji$0$i$i;
         } else {
          $$idx41$val$i$i = HEAP32[$$idx6$i579>>2]|0;
          $$idx40$val$i$i = HEAP32[$$idx5$i582>>2]|0;
          $no$0$i$i = $657;
          while(1) {
           $659 = ($$idx41$val$i$i>>>0)>($no$0$i$i>>>0);
           if (!($659)) {
            label = 236;
            break L236;
           }
           $660 = (($$idx40$val$i$i) + ($no$0$i$i<<2)|0);
           $661 = HEAP32[$660>>2]|0;
           $662 = ($661|0)==($634|0);
           if ($662) {
            break;
           } else {
            $no$0$i$i = $661;
           }
          }
          HEAP32[$660>>2] = $obji$0$i$i;
         }
         $663 = HEAP32[$283>>2]|0;
         $$idx44$val$i$i = HEAP32[$$idx5$i582>>2]|0;
         $$idx45$val$i$i = HEAP32[$$idx6$i579>>2]|0;
         $664 = ($$idx45$val$i$i>>>0)>($663>>>0);
         if (!($664)) {
          label = 240;
          break L236;
         }
         $665 = ($$idx45$val$i$i>>>0)>($obji$0$i$i>>>0);
         if (!($665)) {
          label = 242;
          break L236;
         }
         $666 = (($$idx44$val$i$i) + ($663<<2)|0);
         $667 = HEAP32[$666>>2]|0;
         $668 = (($$idx44$val$i$i) + ($obji$0$i$i<<2)|0);
         HEAP32[$668>>2] = $667;
         $669 = HEAP32[$283>>2]|0;
         $$idx67$val$i$i = HEAP32[$$idx6$i579>>2]|0;
         $670 = ($$idx67$val$i$i>>>0)>($669>>>0);
         if (!($670)) {
          label = 244;
          break L236;
         }
         $$idx66$val$i$i = HEAP32[$$idx5$i582>>2]|0;
         $671 = (($$idx66$val$i$i) + ($669<<2)|0);
         HEAP32[$671>>2] = -1;
        }
       }
      } while(0);
      $603 = ($574|0)==($572|0);
      if ($603) {
       label = 195;
       break;
      } else {
       $575 = $574;
      }
     }
     switch (label|0) {
      case 195: {
       $$pre1658 = HEAP32[$570>>2]|0;
       $595 = ($$pre1658|0)==(0);
       if ($595) {
        break L234;
       }
       HEAP32[$570>>2] = 0;
       break L234;
       break;
      }
      case 198: {
       __ZN4core9panicking18panic_bounds_check17hd14a5808e41829e9E(12236,104,1349,$593,$$idx59$val$i$i);
       // unreachable;
       break;
      }
      case 202: {
       __ZN4core9panicking18panic_bounds_check17hd14a5808e41829e9E(12236,104,1349,$601,$$idx85$val$i$i);
       // unreachable;
       break;
      }
      case 206: {
       __ZN4core9panicking18panic_bounds_check17hd14a5808e41829e9E(12236,104,1349,$601,$$idx55$val$i$i);
       // unreachable;
       break;
      }
      case 208: {
       __ZN4core9panicking18panic_bounds_check17hd14a5808e41829e9E(12236,104,1358,$601,$$idx73$val$i$i);
       // unreachable;
       break;
      }
      case 211: {
       __ZN4core9panicking18panic_bounds_check17hd14a5808e41829e9E(12236,104,1349,$o$0$i$i,$$idx55$val$i$i);
       // unreachable;
       break;
      }
      case 214: {
       __ZN4core9panicking18panic_bounds_check17hd14a5808e41829e9E(12236,104,1349,$613,$$idx85$val$i$i);
       // unreachable;
       break;
      }
      case 217: {
       __ZN4core9panicking18panic_bounds_check17hd14a5808e41829e9E(12236,104,1349,$613,$$idx55$val$i$i);
       // unreachable;
       break;
      }
      case 219: {
       __ZN4core9panicking18panic_bounds_check17hd14a5808e41829e9E(12236,104,1358,$613,$$idx69$val$i$i);
       // unreachable;
       break;
      }
      case 223: {
       __ZN4core9panicking18panic_bounds_check17hd14a5808e41829e9E(11401,99,433,$obji$0$i$i,$$idx$val$i$i$i433);
       // unreachable;
       break;
      }
      case 224: {
       __ZN4core9panicking18panic_bounds_check17hd14a5808e41829e9E(11401,99,434,$625,0);
       // unreachable;
       break;
      }
      case 226: {
       __ZN4core9panicking5panic17ha7507e8e32961bfeE(6500);
       // unreachable;
       break;
      }
      case 229: {
       __ZN4core9panicking18panic_bounds_check17hd14a5808e41829e9E(12236,104,1349,$obji$0$i$i,$632);
       // unreachable;
       break;
      }
      case 231: {
       __ZN4core9panicking18panic_bounds_check17hd14a5808e41829e9E(12236,104,1349,$654,$$idx37$val$i$i);
       // unreachable;
       break;
      }
      case 236: {
       __ZN4core9panicking18panic_bounds_check17hd14a5808e41829e9E(12236,104,1349,$no$0$i$i,$$idx41$val$i$i);
       // unreachable;
       break;
      }
      case 240: {
       __ZN4core9panicking18panic_bounds_check17hd14a5808e41829e9E(12236,104,1349,$663,$$idx45$val$i$i);
       // unreachable;
       break;
      }
      case 242: {
       __ZN4core9panicking18panic_bounds_check17hd14a5808e41829e9E(12236,104,1358,$obji$0$i$i,$$idx45$val$i$i);
       // unreachable;
       break;
      }
      case 244: {
       __ZN4core9panicking18panic_bounds_check17hd14a5808e41829e9E(12236,104,1358,$669,$$idx67$val$i$i);
       // unreachable;
       break;
      }
     }
    }
   } while(0);
   $$idx$val$i$i485 = HEAP32[$$idx318$pre$phiZZ2D>>2]|0;
   $596 = HEAP32[$$idx317$pre$phiZZ2D>>2]|0;
   $597 = (($596) + (($$idx$val$i$i485*12)|0)|0);
   $598 = ((($0)) + 92|0);
   $599 = ($$idx$val$i$i485|0)==(0);
   L295: do {
    if (!($599)) {
     $iter14$sroa$0$02323 = 0;$iter14$sroa$7$02322 = $596;
     while(1) {
      $672 = $iter14$sroa$7$02322;$678 = $iter14$sroa$0$02323;
      while(1) {
       $673 = ($672|0)==($597|0);
       if ($673) {
        $777 = $597;
       } else {
        $674 = ((($672)) + 12|0);
        $675 = ((($672)) + 4|0);
        $676 = HEAP32[$675>>2]|0;
        $switchtmp$i$i$i426 = ($676|0)==(0|0);
        if ($switchtmp$i$i$i426) {
         $777 = $674;
        } else {
         break;
        }
       }
       $677 = (($678) + 1)|0;
       $679 = ($677>>>0)<($$idx$val$i$i485>>>0);
       if ($679) {
        $672 = $777;$678 = $677;
       } else {
        break L295;
       }
      }
      $680 = (($678) + 1)|0;
      $681 = ((($672)) + 8|0);
      $682 = HEAP32[$681>>2]|0;
      $683 = ($682|0)==(1);
      if ($683) {
       HEAP32[$681>>2] = 0;
       $695 = ((($672)) + 4|0);
       __ZN80__LT_ncollide_geometry__partitioning__dbvt__DBVT_LT_P_C__u20_B_C__u20_BV_GT__GT_6remove17h870bd997ceaebb8cE($$pre$phi1665Z2D,$695);
       $$idx$val$i421 = HEAP32[$695>>2]|0;
       $696 = HEAP32[$$idx$val$i421>>2]|0;
       $$arith = (($696) + 1)|0;
       $$overflow = ($696>>>0)>(4294967294);
       if ($$overflow) {
        label = 254;
        break;
       }
       $697 = $$idx$val$i421;
       HEAP32[$$idx$val$i421>>2] = $$arith;
       __THREW__ = 0;
       invoke_vii(236,($598|0),($697|0));
       $698 = __THREW__; __THREW__ = 0;
       $699 = $698&1;
       if ($699) {
        label = 293;
        break;
       }
      } else {
       $701 = ($682|0)>(1);
       if ($701) {
        $702 = (($682) + -1)|0;
        HEAP32[$681>>2] = $702;
       }
      }
      $700 = ($680>>>0)<($$idx$val$i$i485>>>0);
      if ($700) {
       $iter14$sroa$0$02323 = $680;$iter14$sroa$7$02322 = $674;
      } else {
       break L295;
      }
     }
     if ((label|0) == 254) {
      _llvm_trap();
      // unreachable;
     }
     else if ((label|0) == 293) {
      $755 = ___cxa_find_matching_catch_2()|0;
      $756 = tempRet0;
      $lpad$phi1016$index = $755;$lpad$phi1016$index9 = $756;
      label = 295;
      break L180;
     }
    }
   } while(0);
   $684 = ((($0)) + 212|0);
   $685 = HEAP32[$684>>2]|0;
   $686 = ((($0)) + 220|0);
   $687 = HEAP32[$686>>2]|0;
   $688 = (($685) + ($687<<2)|0);
   $689 = ($687|0)==(0);
   if ($689) {
    STACKTOP = sp;return;
   }
   $690 = ((($0)) + 40|0);
   $_399$sroa$7$4$$sroa_idx594 = ((($proxy17)) + 4|0);
   $_399$sroa$25$4$$sroa_idx602 = ((($proxy17)) + 8|0);
   $691 = ((($proxy17)) + 4|0);
   $692 = ((($0)) + 16|0);
   $$fca$0$gep25$i = ((($_13$i)) + 4|0);
   $693 = ((($0)) + 48|0);
   $694 = ((($0)) + 56|0);
   $$idx$i45$i = ((($0)) + 52|0);
   $704 = $685;
   L317: while(1) {
    $703 = ((($704)) + 4|0);
    $705 = HEAP32[$704>>2]|0;
    $706 = HEAP32[$690>>2]|0;
    $switchtmp$i398 = ($706|0)==(0|0);
    do {
     if ($switchtmp$i398) {
      $$idx$val$i$i400 = HEAP32[$$idx318$pre$phiZZ2D>>2]|0;
      $707 = ($$idx$val$i$i400>>>0)>($705>>>0);
      if ($707) {
       $$idx1$val$i$i = HEAP32[$$idx317$pre$phiZZ2D>>2]|0;
       $src$sroa$0$i$i$i$sroa$0$0$$sroa_idx$i = (($$idx1$val$i$i) + (($705*12)|0)|0);
       $src$sroa$0$i$i$i$sroa$0$0$copyload$i = HEAP32[$src$sroa$0$i$i$i$sroa$0$0$$sroa_idx$i>>2]|0;
       $src$sroa$0$i$i$i$sroa$4$0$$sroa_idx81$i = (((($$idx1$val$i$i) + (($705*12)|0)|0)) + 4|0);
       $src$sroa$0$i$i$i$sroa$4$0$copyload$i = HEAP32[$src$sroa$0$i$i$i$sroa$4$0$$sroa_idx81$i>>2]|0;
       $src$sroa$0$i$i$i$sroa$5$0$$sroa_idx83$i = (((($$idx1$val$i$i) + (($705*12)|0)|0)) + 8|0);
       $src$sroa$0$i$i$i$sroa$5$0$copyload$i = HEAP32[$src$sroa$0$i$i$i$sroa$5$0$$sroa_idx83$i>>2]|0;
       HEAP32[$src$sroa$0$i$i$i$sroa$4$0$$sroa_idx81$i>>2] = 0;
       $switch3tmp$i$i = ($src$sroa$0$i$i$i$sroa$4$0$copyload$i|0)==(0|0);
       if ($switch3tmp$i$i) {
        label = 282;
       } else {
        $_399$sroa$25$4983 = $src$sroa$0$i$i$i$sroa$5$0$copyload$i;$_399$sroa$4$4985 = $src$sroa$0$i$i$i$sroa$0$0$copyload$i;$_399$sroa$7$1984 = $src$sroa$0$i$i$i$sroa$4$0$copyload$i;
        label = 278;
       }
      } else {
       label = 282;
      }
     } else {
      __ZN72__LT_std__collections__hash__map__HashMap_LT_K_C__u20_V_C__u20_S_GT__GT_6remove17h229702fffc95699cE($_13$i,$692,$705);
      $708 = HEAP32[$_13$i>>2]|0;
      $switch4$i = ($708|0)==(1);
      if ($switch4$i) {
       $$fca$0$load26$i = HEAP32[$$fca$0$gep25$i>>2]|0;
       $$idx$val$i49$i = HEAP32[$$idx318$pre$phiZZ2D>>2]|0;
       $710 = ($$idx$val$i49$i>>>0)>($$fca$0$load26$i>>>0);
       if ($710) {
        $$idx1$val$i52$i = HEAP32[$$idx317$pre$phiZZ2D>>2]|0;
        $src$sroa$0$i$i$i47$sroa$0$0$$sroa_idx$i = (($$idx1$val$i52$i) + (($$fca$0$load26$i*12)|0)|0);
        $src$sroa$0$i$i$i47$sroa$0$0$copyload$i = HEAP32[$src$sroa$0$i$i$i47$sroa$0$0$$sroa_idx$i>>2]|0;
        $src$sroa$0$i$i$i47$sroa$4$0$$sroa_idx86$i = (((($$idx1$val$i52$i) + (($$fca$0$load26$i*12)|0)|0)) + 4|0);
        $src$sroa$0$i$i$i47$sroa$4$0$copyload$i = HEAP32[$src$sroa$0$i$i$i47$sroa$4$0$$sroa_idx86$i>>2]|0;
        $src$sroa$0$i$i$i47$sroa$5$0$$sroa_idx88$i = (((($$idx1$val$i52$i) + (($$fca$0$load26$i*12)|0)|0)) + 8|0);
        $src$sroa$0$i$i$i47$sroa$5$0$copyload$i = HEAP32[$src$sroa$0$i$i$i47$sroa$5$0$$sroa_idx88$i>>2]|0;
        HEAP32[$src$sroa$0$i$i$i47$sroa$4$0$$sroa_idx86$i>>2] = 0;
        $res$sroa$0$0$i = $src$sroa$0$i$i$i47$sroa$0$0$copyload$i;$res$sroa$4$0$i = $src$sroa$0$i$i$i47$sroa$4$0$copyload$i;$res$sroa$9$0$i = $src$sroa$0$i$i$i47$sroa$5$0$copyload$i;
       } else {
        $res$sroa$0$0$i = 0;$res$sroa$4$0$i = 0;$res$sroa$9$0$i = 0;
       }
       $711 = HEAP32[$694>>2]|0;
       $$idx$val$i46$i = HEAP32[$$idx$i45$i>>2]|0;
       $712 = ($711|0)==($$idx$val$i46$i|0);
       if ($712) {
        __THREW__ = 0;
        invoke_vi(237,($693|0));
        $713 = __THREW__; __THREW__ = 0;
        $714 = $713&1;
        if ($714) {
         label = 273;
         break L317;
        }
        $$pre$i$i = HEAP32[$694>>2]|0;
        $717 = $$pre$i$i;
       } else {
        $717 = $711;
       }
       $715 = HEAP32[$693>>2]|0;
       $716 = (($715) + ($717<<2)|0);
       HEAP32[$716>>2] = $$fca$0$load26$i;
       $718 = HEAP32[$694>>2]|0;
       $719 = (($718) + 1)|0;
       HEAP32[$694>>2] = $719;
       $switch3tmp$i35$i = ($res$sroa$4$0$i|0)==(0|0);
       if (!($switch3tmp$i35$i)) {
        $_399$sroa$25$4983 = $res$sroa$9$0$i;$_399$sroa$4$4985 = $res$sroa$0$0$i;$_399$sroa$7$1984 = $res$sroa$4$0$i;
        label = 278;
        break;
       }
      }
      label = 282;
     }
    } while(0);
    do {
     if ((label|0) == 278) {
      label = 0;
      HEAP32[$proxy17>>2] = $_399$sroa$4$4985;
      HEAP32[$_399$sroa$7$4$$sroa_idx594>>2] = $_399$sroa$7$1984;
      HEAP32[$_399$sroa$25$4$$sroa_idx602>>2] = $_399$sroa$25$4983;
      switch ($_399$sroa$25$4983|0) {
      case -1:  {
       __THREW__ = 0;
       invoke_vii(238,($$pre$phi1665Z2D|0),($691|0));
       $728 = __THREW__; __THREW__ = 0;
       $729 = $728&1;
       if ($729) {
        label = 300;
        break L317;
       }
       break;
      }
      case -2:  {
       __THREW__ = 0;
       invoke_vii(238,($598|0),($691|0));
       $733 = __THREW__; __THREW__ = 0;
       $734 = $733&1;
       if ($734) {
        label = 300;
        break L317;
       }
       break;
      }
      default: {
       label = 280;
       break L317;
      }
      }
      $746 = HEAP32[$_399$sroa$7$1984>>2]|0;
      $747 = (($746) + -1)|0;
      HEAP32[$_399$sroa$7$1984>>2] = $747;
      $748 = ($747|0)==(0);
      if ($748) {
       $749 = ((($_399$sroa$7$1984)) + 4|0);
       $750 = HEAP32[$749>>2]|0;
       $751 = (($750) + -1)|0;
       HEAP32[$749>>2] = $751;
       $$idx2$val$i$i$i338 = HEAP32[$691>>2]|0;
       $752 = ((($$idx2$val$i$i$i338)) + 4|0);
       $753 = HEAP32[$752>>2]|0;
       $754 = ($753|0)==(0);
       if ($754) {
        _free($_399$sroa$7$1984);
        break;
       }
      }
     }
     else if ((label|0) == 282) {
      label = 0;
     }
    } while(0);
    $735 = ($703|0)==($688|0);
    if ($735) {
     label = 260;
     break;
    } else {
     $704 = $703;
    }
   }
   if ((label|0) == 260) {
    $$pre1659 = HEAP32[$686>>2]|0;
    $phitmp = ($$pre1659|0)==(0);
    if ($phitmp) {
     STACKTOP = sp;return;
    }
    HEAP32[$686>>2] = 0;
    STACKTOP = sp;return;
   }
   else if ((label|0) == 273) {
    $709 = ___cxa_find_matching_catch_2()|0;
    $720 = tempRet0;
    $switchtmp$i$i413 = ($res$sroa$4$0$i|0)==(0|0);
    if ($switchtmp$i$i413) {
     ___resumeException($709|0);
     // unreachable;
    }
    $721 = HEAP32[$res$sroa$4$0$i>>2]|0;
    $722 = (($721) + -1)|0;
    HEAP32[$res$sroa$4$0$i>>2] = $722;
    $723 = ($722|0)==(0);
    if (!($723)) {
     ___resumeException($709|0);
     // unreachable;
    }
    $724 = ((($res$sroa$4$0$i)) + 4|0);
    $725 = HEAP32[$724>>2]|0;
    $726 = (($725) + -1)|0;
    HEAP32[$724>>2] = $726;
    $727 = ($726|0)==(0);
    if (!($727)) {
     ___resumeException($709|0);
     // unreachable;
    }
    _free($res$sroa$4$0$i);
    ___resumeException($709|0);
    // unreachable;
   }
   else if ((label|0) == 280) {
    __THREW__ = 0;
    invoke_viii(225,(11006|0),51,(5292|0));
    $730 = __THREW__; __THREW__ = 0;
    $731 = ___cxa_find_matching_catch_2()|0;
    $732 = tempRet0;
    $lpad$phi$index = $731;$lpad$phi$index14 = $732;
   }
   else if ((label|0) == 300) {
    $765 = ___cxa_find_matching_catch_2()|0;
    $766 = tempRet0;
    $lpad$phi$index = $765;$lpad$phi$index14 = $766;
   }
   $767 = HEAP32[$_399$sroa$7$1984>>2]|0;
   $768 = (($767) + -1)|0;
   HEAP32[$_399$sroa$7$1984>>2] = $768;
   $769 = ($768|0)==(0);
   if (!($769)) {
    $personalityslot$sroa$0$0 = $lpad$phi$index;$personalityslot$sroa$22$0 = $lpad$phi$index14;
    ___resumeException($personalityslot$sroa$0$0|0);
    // unreachable;
   }
   $770 = ((($_399$sroa$7$1984)) + 4|0);
   $771 = HEAP32[$770>>2]|0;
   $772 = (($771) + -1)|0;
   HEAP32[$770>>2] = $772;
   $$idx2$val$i$i$i = HEAP32[$691>>2]|0;
   $773 = ((($$idx2$val$i$i$i)) + 4|0);
   $774 = HEAP32[$773>>2]|0;
   $775 = ($774|0)==(0);
   if (!($775)) {
    $personalityslot$sroa$0$0 = $lpad$phi$index;$personalityslot$sroa$22$0 = $lpad$phi$index14;
    ___resumeException($personalityslot$sroa$0$0|0);
    // unreachable;
   }
   _free($_399$sroa$7$1984);
   $personalityslot$sroa$0$0 = $lpad$phi$index;$personalityslot$sroa$22$0 = $lpad$phi$index14;
   ___resumeException($personalityslot$sroa$0$0|0);
   // unreachable;
   break;
  }
  case 81: {
   __ZN4core6option13expect_failed17hc1eeb48c0c4a1725E(10432,15);
   // unreachable;
   break;
  }
  case 83: {
   __ZN4core6result13unwrap_failed17h0dc63b200336bf84E();
   // unreachable;
   break;
  }
  case 88: {
   __THREW__ = 0;
   invoke_v(221);
   $335 = __THREW__; __THREW__ = 0;
   $336 = ___cxa_find_matching_catch_2()|0;
   $337 = tempRet0;
   $personalityslot$sroa$0$0 = $336;$personalityslot$sroa$22$0 = $337;
   ___resumeException($personalityslot$sroa$0$0|0);
   // unreachable;
   break;
  }
  case 99: {
   _llvm_trap();
   // unreachable;
   break;
  }
  case 103: {
   __ZN4core6option13expect_failed17hc1eeb48c0c4a1725E(10432,15);
   // unreachable;
   break;
  }
  case 108: {
   __ZN4core9panicking18panic_bounds_check17hd14a5808e41829e9E(12236,104,1349,$388,$$idx14$val$i$i);
   // unreachable;
   break;
  }
  case 111: {
   __ZN4core9panicking18panic_bounds_check17hd14a5808e41829e9E(12236,104,1349,$391,$$idx20$val$i$i);
   // unreachable;
   break;
  }
  case 115: {
   __ZN4core9panicking18panic_bounds_check17hd14a5808e41829e9E(12236,104,1349,$pos$0$i$i,$$idx12$val$i$i);
   // unreachable;
   break;
  }
  case 118: {
   __ZN4core9panicking18panic_bounds_check17hd14a5808e41829e9E(12236,104,1349,$397,$$idx20$val$i$i);
   // unreachable;
   break;
  }
  case 121: {
   __ZN4core9panicking18panic_bounds_check17hd14a5808e41829e9E(12236,104,1358,$pos$1$i$i,$$idx20$val$i$i);
   // unreachable;
   break;
  }
  case 129: {
   __THREW__ = 0;
   invoke_viiiii(214,(12236|0),104,1349,($iter$sroa$0$0111$i$i|0),($$idx57$val$i$i|0));
   $419 = __THREW__; __THREW__ = 0;
   label = 143;
   break;
  }
  case 131: {
   __THREW__ = 0;
   invoke_viiiii(214,(12236|0),104,1349,($437|0),($newhash$idx48$val$i$i|0));
   $439 = __THREW__; __THREW__ = 0;
   label = 143;
   break;
  }
  case 133: {
   __THREW__ = 0;
   invoke_viiiii(214,(12236|0),104,1358,($iter$sroa$0$0111$i$i|0),($newnext$idx54$val$i$i|0));
   $441 = __THREW__; __THREW__ = 0;
   label = 143;
   break;
  }
  case 142: {
   $454 = ___cxa_find_matching_catch_2()|0;
   $455 = tempRet0;
   $personalityslot$sroa$0$189$i$i = $454;$personalityslot$sroa$6$191$i$i = $455;
   ___resumeException($personalityslot$sroa$0$189$i$i|0);
   // unreachable;
   break;
  }
  case 145: {
   $459 = ___cxa_find_matching_catch_2()|0;
   $460 = tempRet0;
   $$fca$0$extract2495$i$i = $459;$$fca$1$extract2697$i$i = $460;
   break;
  }
  case 147: {
   __ZN4core9panicking18panic_bounds_check17hd14a5808e41829e9E(12236,104,1349,$461,$$idx2$val$i577);
   // unreachable;
   break;
  }
  case 149: {
   __ZN4core9panicking18panic_bounds_check17hd14a5808e41829e9E(12236,104,1358,$464,$$idx6$val$i580);
   // unreachable;
   break;
  }
  case 151: {
   __ZN4core9panicking18panic_bounds_check17hd14a5808e41829e9E(12236,104,1358,$461,$$idx4$val$i585);
   // unreachable;
   break;
  }
  case 155: {
   __ZN4core9panicking18panic_bounds_check17hd14a5808e41829e9E(12236,104,1358,$483,$482);
   // unreachable;
   break;
  }
  case 288: {
   $742 = ___cxa_find_matching_catch_2()|0;
   $743 = tempRet0;
   $744 = HEAP32[$333>>2]|0;
   $745 = (($744) + -1)|0;
   HEAP32[$333>>2] = $745;
   $personalityslot$sroa$0$0 = $742;$personalityslot$sroa$22$0 = $743;
   ___resumeException($personalityslot$sroa$0$0|0);
   // unreachable;
   break;
  }
  case 294: {
   $757 = ___cxa_find_matching_catch_2()|0;
   $758 = tempRet0;
   $lpad$phi1016$index = $757;$lpad$phi1016$index9 = $758;
   label = 295;
   break;
  }
 }
 if ((label|0) == 143) {
  $456 = ___cxa_find_matching_catch_2()|0;
  $457 = tempRet0;
  $458 = HEAP32[$291>>2]|0;
  $not$$i$i$i$i$i$i = ($458|0)==(0);
  if ($not$$i$i$i$i$i$i) {
   $$fca$0$extract2495$i$i = $456;$$fca$1$extract2697$i$i = $457;
  } else {
   _free($newnext$idx$val$i$i);
   $$fca$0$extract2495$i$i = $456;$$fca$1$extract2697$i$i = $457;
  }
 }
 else if ((label|0) == 295) {
  $personalityslot$sroa$0$0 = $lpad$phi1016$index;$personalityslot$sroa$22$0 = $lpad$phi1016$index9;
  ___resumeException($personalityslot$sroa$0$0|0);
  // unreachable;
 }
 $452 = HEAP32[$292>>2]|0;
 $not$$i$i$i$i58$i$i = ($452|0)==(0);
 if ($not$$i$i$i$i58$i$i) {
  $personalityslot$sroa$0$189$i$i = $$fca$0$extract2495$i$i;$personalityslot$sroa$6$191$i$i = $$fca$1$extract2697$i$i;
  ___resumeException($personalityslot$sroa$0$189$i$i|0);
  // unreachable;
 }
 $453 = HEAP32[$newhash$i$i>>2]|0;
 _free($453);
 $personalityslot$sroa$0$189$i$i = $$fca$0$extract2495$i$i;$personalityslot$sroa$6$191$i$i = $$fca$1$extract2697$i$i;
 ___resumeException($personalityslot$sroa$0$189$i$i|0);
 // unreachable;
}
function __ZN197__LT_ncollide_pipeline__narrow_phase__default_narrow_phase__DefaultNarrowPhase_LT_P_C__u20_M_GT__u20_as_u20_ncollide_pipeline__narrow_phase__narrow_phase__NarrowPhase_LT_P_C__u20_M_C__u20_T_GT__GT_13contact_pairs17hcc15cfdf13274050E($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$idx$i = 0, $$idx$val$i = 0, $$idx1$i = 0, $$idx1$val$i = 0, $$sroa_idx2 = 0, $$sroa_idx4 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $$idx$i = ((($1)) + 12|0);
 $$idx$val$i = HEAP32[$$idx$i>>2]|0;
 $$idx1$i = ((($1)) + 20|0);
 $$idx1$val$i = HEAP32[$$idx1$i>>2]|0;
 $3 = (($$idx$val$i) + (($$idx1$val$i*24)|0)|0);
 $4 = $$idx$val$i;
 $5 = $3;
 HEAP32[$0>>2] = $2;
 $$sroa_idx2 = ((($0)) + 4|0);
 HEAP32[$$sroa_idx2>>2] = $4;
 $$sroa_idx4 = ((($0)) + 8|0);
 HEAP32[$$sroa_idx4>>2] = $5;
 return;
}
function __ZN197__LT_ncollide_pipeline__narrow_phase__default_narrow_phase__DefaultNarrowPhase_LT_P_C__u20_M_GT__u20_as_u20_ncollide_pipeline__narrow_phase__narrow_phase__NarrowPhase_LT_P_C__u20_M_C__u20_T_GT__GT_15proximity_pairs17hd8d2320984a14a82E($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$idx$i = 0, $$idx$val$i = 0, $$idx1$i = 0, $$idx1$val$i = 0, $$sroa_idx2 = 0, $$sroa_idx4 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $$idx$i = ((($1)) + 76|0);
 $$idx$val$i = HEAP32[$$idx$i>>2]|0;
 $$idx1$i = ((($1)) + 84|0);
 $$idx1$val$i = HEAP32[$$idx1$i>>2]|0;
 $3 = (($$idx$val$i) + (($$idx1$val$i*24)|0)|0);
 $4 = $$idx$val$i;
 $5 = $3;
 HEAP32[$0>>2] = $2;
 $$sroa_idx2 = ((($0)) + 4|0);
 HEAP32[$$sroa_idx2>>2] = $4;
 $$sroa_idx4 = ((($0)) + 8|0);
 HEAP32[$$sroa_idx4>>2] = $5;
 return;
}
function __ZN197__LT_ncollide_pipeline__narrow_phase__default_narrow_phase__DefaultNarrowPhase_LT_P_C__u20_M_GT__u20_as_u20_ncollide_pipeline__narrow_phase__narrow_phase__NarrowPhase_LT_P_C__u20_M_C__u20_T_GT__GT_18handle_interaction17hd9dda2adee4e88fcE($0,$1,$2,$3,$4,$5,$6) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 var $$$i = 0, $$46$i = 0, $$fca$0$extract2495$i$i = 0, $$fca$0$extract2495$i$i229 = 0, $$fca$0$extract4144$i = 0, $$fca$0$extract4144$i282 = 0, $$fca$1$extract2697$i$i = 0, $$fca$1$extract2697$i$i228 = 0, $$fca$1$extract6145$i = 0, $$fca$1$extract6145$i281 = 0, $$idx$i$i$i = 0, $$idx$i27$i = 0, $$idx$i27$i210 = 0, $$idx$i36$i = 0, $$idx$i36$i263 = 0, $$idx$val$i = 0, $$idx$val$i$i$i = 0, $$idx$val$i$i358 = 0, $$idx$val$i$i99 = 0, $$idx$val$i257 = 0;
 var $$idx$val$i28$i = 0, $$idx$val$i28$i211 = 0, $$idx$val$i37$i = 0, $$idx$val$i37$i264 = 0, $$idx$val$idx$i$i = 0, $$idx$val$idx$i$i178 = 0, $$idx$val$idx$val$i$i = 0, $$idx$val$idx$val$i$i179 = 0, $$idx$val$idx3$i$i = 0, $$idx$val$idx3$i$i180 = 0, $$idx$val$idx3$val$i$i = 0, $$idx$val$idx3$val$i$i181 = 0, $$idx1$val$i$i$i = 0, $$idx1$val$idx$i$i = 0, $$idx1$val$idx$i$i172 = 0, $$idx1$val$idx$val$i$i = 0, $$idx1$val$idx$val$i$i173 = 0, $$idx1$val$idx2$i$i = 0, $$idx1$val$idx2$i$i174 = 0, $$idx1$val$idx2$val$i$i = 0;
 var $$idx1$val$idx2$val$i$i175 = 0, $$idx1$val$val$i$i = 0, $$idx1$val$val$i$i$i = 0, $$idx1$val$val$i$i$i$i = 0, $$idx1$val$val$i$i$i$i269 = 0, $$idx1$val$val$i$i$i419 = 0, $$idx1$val$val$i$i283 = 0, $$idx1$val$val$i$i437 = 0, $$idx1$val$val$i$i467 = 0, $$idx1$val$val$i$i487 = 0, $$idx1$val$val$i$i492 = 0, $$idx11$i$i = 0, $$idx11$i$i139 = 0, $$idx11$val$i$i = 0, $$idx11$val$i$i142 = 0, $$idx12$i$i = 0, $$idx12$i$i140 = 0, $$idx12$val$i$i = 0, $$idx12$val$i$i141 = 0, $$idx13$i$i = 0;
 var $$idx13$i$i123 = 0, $$idx13$val$i$i = 0, $$idx13$val$i$i124 = 0, $$idx14$i$i = 0, $$idx14$i$i119 = 0, $$idx14$val$i$i = 0, $$idx14$val$i$i120 = 0, $$idx17$i$i = 0, $$idx17$i$i152 = 0, $$idx17$val$i$i = 0, $$idx17$val$i$i153 = 0, $$idx18$i$i = 0, $$idx18$i$i154 = 0, $$idx18$val$i$i = 0, $$idx18$val$i$i155 = 0, $$idx21$i$i = 0, $$idx21$i$i133 = 0, $$idx21$val$i$i = 0, $$idx21$val$i$i134 = 0, $$idx22$i$i = 0;
 var $$idx22$i$i135 = 0, $$idx22$val$i$i = 0, $$idx22$val$i$i136 = 0, $$idx27$i$i = 0, $$idx27$i$i131 = 0, $$idx27$val$i$i = 0, $$idx27$val$i$i132 = 0, $$idx28$i$i = 0, $$idx28$i$i126 = 0, $$idx28$val$i$i = 0, $$idx28$val$i$i127 = 0, $$idx31$val$i = 0, $$idx31$val$i399 = 0, $$idx32$val$i = 0, $$idx32$val$i400 = 0, $$idx35$val$i = 0, $$idx35$val$i390 = 0, $$idx36$val$i = 0, $$idx36$val$i389 = 0, $$idx39$val$i = 0;
 var $$idx39$val$i387 = 0, $$idx40$val$i = 0, $$idx40$val$i383 = 0, $$idx47$i = 0, $$idx47$i322 = 0, $$idx47$val$i = 0, $$idx47$val$i325 = 0, $$idx48$i = 0, $$idx48$i323 = 0, $$idx48$val$i = 0, $$idx48$val$i324 = 0, $$idx49$val$i = 0, $$idx49$val$i330 = 0, $$idx5$val$i = 0, $$idx5$val$i246 = 0, $$idx51$i = 0, $$idx51$i304 = 0, $$idx51$val$i = 0, $$idx51$val$i308 = 0, $$idx52$i = 0;
 var $$idx52$i305 = 0, $$idx52$val$i = 0, $$idx52$val$i306 = 0, $$idx53$val$i = 0, $$idx53$val$i411 = 0, $$idx54$val$i = 0, $$idx54$val$i407 = 0, $$idx55$i$i = 0, $$idx55$i$i212 = 0, $$idx55$val$i$i = 0, $$idx55$val$i$i213 = 0, $$idx56$i$i = 0, $$idx56$i$i194 = 0, $$idx56$val$i$i = 0, $$idx56$val$i$i209 = 0, $$idx57$i$i = 0, $$idx57$i$i193 = 0, $$idx57$val$i$i = 0, $$idx57$val$i$i205 = 0, $$idx6$val$i = 0;
 var $$idx6$val$i262 = 0, $$idx61$val$i = 0, $$idx61$val$i354 = 0, $$idx62$val$i = 0, $$idx62$val$i351 = 0, $$idx65$val$i = 0, $$idx65$val$i334 = 0, $$idx66$val$i = 0, $$idx66$val$i331 = 0, $$idx7$val$i = 0, $$idx7$val$i258 = 0, $$idx71$i = 0, $$idx71$i379 = 0, $$idx71$val$i = 0, $$idx71$val$i380 = 0, $$idx72$i = 0, $$idx72$i381 = 0, $$idx72$val$i = 0, $$idx72$val$i382 = 0, $$idx73$i = 0;
 var $$idx73$i342 = 0, $$idx73$val$i = 0, $$idx73$val$i343 = 0, $$idx74$i = 0, $$idx74$i344 = 0, $$idx74$val$i = 0, $$idx74$val$i345 = 0, $$idx77$i = 0, $$idx77$i316 = 0, $$idx77$val$i = 0, $$idx77$val$i317 = 0, $$idx78$i = 0, $$idx78$i318 = 0, $$idx78$val$i = 0, $$idx78$val$i319 = 0, $$idx8$i = 0, $$idx8$i255 = 0, $$idx8$val$i = 0, $$idx8$val$i256 = 0, $$idx85$i = 0;
 var $$idx85$i310 = 0, $$idx85$val$i = 0, $$idx85$val$i315 = 0, $$idx86$i = 0, $$idx86$i311 = 0, $$idx86$val$i = 0, $$idx86$val$i312 = 0, $$idx9$i = 0, $$idx9$i250 = 0, $$idx9$val$i = 0, $$idx9$val$i251 = 0, $$pre$i$i = 0, $$pre$i$i267 = 0, $$unpack = 0, $$unpack79 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0;
 var $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0;
 var $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0;
 var $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0;
 var $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0;
 var $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0;
 var $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0;
 var $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0;
 var $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0;
 var $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0;
 var $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0;
 var $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0;
 var $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0;
 var $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0;
 var $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0;
 var $359 = 0.0, $36 = 0, $360 = 0.0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0;
 var $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0;
 var $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0;
 var $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0;
 var $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0;
 var $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0;
 var $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0;
 var $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0;
 var $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0;
 var $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0;
 var $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0;
 var $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0;
 var $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0;
 var $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $60 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0, $612 = 0;
 var $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0, $67 = 0, $68 = 0.0, $69 = 0.0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0;
 var $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $_14$i = 0, $_14$i108 = 0;
 var $_14$sroa$4$0$$sroa_idx10$i$i = 0, $_14$sroa$4$0$$sroa_idx10$i$i366 = 0, $_14$sroa$4$0$copyload$i$i = 0, $_14$sroa$4$0$copyload$i$i367 = 0, $_14$sroa$6$0$$sroa_idx12$i$i = 0, $_14$sroa$6$0$$sroa_idx12$i$i368 = 0, $_14$sroa$6$0$copyload$i$i = 0, $_14$sroa$6$0$copyload$i$i370 = 0, $_22$sroa$4$0$$sroa_idx24$i$i = 0, $_22$sroa$4$0$$sroa_idx24$i$i275 = 0, $_22$sroa$5$0$$sroa_idx26$i$i = 0, $_22$sroa$5$0$$sroa_idx26$i$i276 = 0, $_27$sroa$0$0$$sroa_idx = 0, $_27$sroa$0$0$copyload = 0, $_28$sroa$0$0$$sroa_idx = 0, $_28$sroa$0$0$copyload = 0, $iter$sroa$0$0$in18$i = 0, $iter$sroa$0$0$in18$i423 = 0, $iter$sroa$0$0111$i$i = 0, $iter$sroa$0$0111$i$i$phi = 0;
 var $iter$sroa$0$0111$i$i204 = 0, $iter$sroa$0$0111$i$i204$phi = 0, $lpad$phi$index = 0, $lpad$phi$index7 = 0, $lpad$phi665$index = 0, $lpad$phi665$index2 = 0, $newhash$i$i = 0, $newhash$i$i106 = 0, $newhash$idx$val$i$i = 0, $newhash$idx$val$i$i202 = 0, $newhash$idx48$i$i = 0, $newhash$idx48$i$i196 = 0, $newhash$idx48$val$i$i = 0, $newhash$idx48$val$i$i197 = 0, $newnext$i$i = 0, $newnext$i$i107 = 0, $newnext$idx$val$i$i = 0, $newnext$idx$val$i$i201 = 0, $newnext$idx54$i$i = 0, $newnext$idx54$i$i198 = 0;
 var $newnext$idx54$val$i$i = 0, $newnext$idx54$val$i$i199 = 0, $no$0$i = 0, $no$0$i393 = 0, $not$$i$i$i$i$i$i = 0, $not$$i$i$i$i$i$i239 = 0, $not$$i$i$i$i58$i$i = 0, $not$$i$i$i$i58$i$i230 = 0, $not$$i$i$i$i61$i$i = 0, $not$$i$i$i$i61$i$i224 = 0, $not$$i$i$i$i64$i$i = 0, $not$$i$i$i$i64$i$i221 = 0, $notlhs$i$i = 0, $notlhs$i$i$i = 0, $notlhs$i$i$i137 = 0, $notlhs$i$i320 = 0, $notlhs$i32$i$i = 0, $notlhs$i32$i$i156 = 0, $notlhs$i99$i = 0, $notlhs$i99$i346 = 0;
 var $notrhs$i$i = 0, $notrhs$i$i$i = 0, $notrhs$i$i$i138 = 0, $notrhs$i$i321 = 0, $notrhs$i100$i = 0, $notrhs$i100$i347 = 0, $notrhs$i33$i$i = 0, $notrhs$i33$i$i157 = 0, $o$0$i = 0, $o$0$i336 = 0, $obji$0$i = 0, $obji$0$i356 = 0, $or$cond$i = 0, $or$cond$i92 = 0, $personalityslot$sroa$0$0 = 0, $personalityslot$sroa$0$0$i = 0, $personalityslot$sroa$0$0$i159 = 0, $personalityslot$sroa$5$0$i = 0, $personalityslot$sroa$5$0$i158 = 0, $personalityslot$sroa$8$0 = 0;
 var $pos$0$i$i = 0, $pos$0$i$i144 = 0, $pos$1$i$i = 0, $pos$1$i$i183 = 0, $switch = 0, $switch16 = 0, $switch2tmp$i$i = 0, $switch2tmp$i$i91 = 0, $switch3tmp$i$i$i = 0, $switch3tmp$i$i$i372 = 0, $switchtmp$i = 0, $switchtmp$i$i$i = 0, $switchtmp$i$i$i90 = 0, $switchtmp$i187 = 0, $t$i$i$i = 0, $t$i$i$i105 = 0, $t$i71$i$i = 0, $t$i71$i$i104 = 0, $tmp$i$i$i$i$i = 0, $tmp$i$i$i$i$i300 = 0;
 var $value$idx$val$val$idx$i166 = 0, $value$idx$val$val$idx$val$i = 0, $value$idx$val$val$idx$val$i167 = 0, $value$idx$val$val$idx15$i = 0, $value$idx$val$val$idx15$i168 = 0, $value$idx$val$val$idx15$val$i = 0, $value$idx$val$val$idx15$val$i169 = 0, $value$sroa$0$i$sroa$4$0$_22$sroa$0$0$$sroa_cast$i$sroa_idx126$i = 0, $value$sroa$0$i$sroa$4$0$_22$sroa$0$0$$sroa_cast$i$sroa_idx126$i273 = 0, $value$sroa$0$i$sroa$5$0$_22$sroa$0$0$$sroa_cast$i$sroa_idx128$i = 0, $value$sroa$0$i$sroa$5$0$_22$sroa$0$0$$sroa_cast$i$sroa_idx128$i274 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 192|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(192|0);
 $tmp$i$i$i$i$i300 = sp + 168|0;
 $t$i71$i$i104 = sp + 152|0;
 $t$i$i$i105 = sp + 136|0;
 $newhash$i$i106 = sp + 120|0;
 $newnext$i$i107 = sp + 104|0;
 $_14$i108 = sp + 96|0;
 $tmp$i$i$i$i$i = sp + 72|0;
 $t$i71$i$i = sp + 56|0;
 $t$i$i$i = sp + 40|0;
 $newhash$i$i = sp + 24|0;
 $newnext$i$i = sp + 8|0;
 $_14$i = sp;
 $$unpack = HEAP32[$4>>2]|0;
 $$unpack79 = HEAP32[$5>>2]|0;
 $7 = ($$unpack>>>0)<($$unpack79>>>0);
 $$$i = $7 ? $$unpack : $$unpack79;
 $$46$i = $7 ? $$unpack79 : $$unpack;
 $$idx$i$i$i = ((($3)) + 8|0);
 $$idx$val$i$i$i = HEAP32[$$idx$i$i$i>>2]|0;
 $8 = ($$idx$val$i$i$i>>>0)>($$unpack>>>0);
 if (!($8)) {
  __ZN4core6option13expect_failed17hc1eeb48c0c4a1725E(10432,15);
  // unreachable;
 }
 $$idx1$val$i$i$i = HEAP32[$3>>2]|0;
 $9 = (($$idx1$val$i$i$i) + ($$unpack<<6)|0);
 $10 = (((($$idx1$val$i$i$i) + ($$unpack<<6)|0)) + 28|0);
 $11 = HEAP32[$10>>2]|0;
 $switchtmp$i$i$i = ($11|0)==(0|0);
 $switch2tmp$i$i = ($9|0)==(0|0);
 $or$cond$i = $switchtmp$i$i$i | $switch2tmp$i$i;
 if ($or$cond$i) {
  __ZN4core6option13expect_failed17hc1eeb48c0c4a1725E(10432,15);
  // unreachable;
 }
 $12 = ($$idx$val$i$i$i>>>0)>($$unpack79>>>0);
 if (!($12)) {
  __ZN4core6option13expect_failed17hc1eeb48c0c4a1725E(10432,15);
  // unreachable;
 }
 $13 = (($$idx1$val$i$i$i) + ($$unpack79<<6)|0);
 $14 = (((($$idx1$val$i$i$i) + ($$unpack79<<6)|0)) + 28|0);
 $15 = HEAP32[$14>>2]|0;
 $switchtmp$i$i$i90 = ($15|0)==(0|0);
 $switch2tmp$i$i91 = ($13|0)==(0|0);
 $or$cond$i92 = $switch2tmp$i$i91 | $switchtmp$i$i$i90;
 if ($or$cond$i92) {
  __ZN4core6option13expect_failed17hc1eeb48c0c4a1725E(10432,15);
  // unreachable;
 }
 $_27$sroa$0$0$$sroa_idx = (((($$idx1$val$i$i$i) + ($$unpack<<6)|0)) + 44|0);
 $_27$sroa$0$0$copyload = HEAP32[$_27$sroa$0$0$$sroa_idx>>2]|0;
 $switch16 = ($_27$sroa$0$0$copyload|0)==(0);
 if ($switch16) {
  $_28$sroa$0$0$$sroa_idx = (((($$idx1$val$i$i$i) + ($$unpack79<<6)|0)) + 44|0);
  $_28$sroa$0$0$copyload = HEAP32[$_28$sroa$0$0$$sroa_idx>>2]|0;
  $switch = ($_28$sroa$0$0$copyload|0)==(0);
  if ($switch) {
   if ($6) {
    $16 = $$$i & 65535;
    $17 = $$46$i << 16;
    $18 = $17 | $16;
    $19 = $18 << 15;
    $20 = $19 ^ -1;
    $21 = (($18) + ($20))|0;
    $22 = $21 >>> 10;
    $23 = $22 ^ $21;
    $24 = ($23*9)|0;
    $25 = $24 >>> 6;
    $26 = $25 ^ $24;
    $27 = $26 << 11;
    $28 = $27 ^ -1;
    $29 = (($26) + ($28))|0;
    $30 = $29 >>> 16;
    $31 = $30 ^ $29;
    $32 = ((($0)) + 24|0);
    $33 = HEAP32[$32>>2]|0;
    $34 = $31 & $33;
    $$idx14$i$i = ((($0)) + 36|0);
    $$idx14$val$i$i = HEAP32[$$idx14$i$i>>2]|0;
    $35 = ($$idx14$val$i$i>>>0)>($34>>>0);
    L18: do {
     if ($35) {
      $$idx13$i$i = ((($0)) + 28|0);
      $$idx13$val$i$i = HEAP32[$$idx13$i$i>>2]|0;
      $37 = (($$idx13$val$i$i) + ($34<<2)|0);
      $38 = HEAP32[$37>>2]|0;
      $39 = ($38|0)==(-1);
      L20: do {
       if (!($39)) {
        $$idx28$i$i = ((($0)) + 20|0);
        $$idx28$val$i$i = HEAP32[$$idx28$i$i>>2]|0;
        $40 = ($$idx28$val$i$i>>>0)>($38>>>0);
        if (!($40)) {
         __THREW__ = 0;
         invoke_viiiii(214,(12236|0),104,1349,($38|0),($$idx28$val$i$i|0));
         $41 = __THREW__; __THREW__ = 0;
         break L18;
        }
        $$idx27$i$i = ((($0)) + 12|0);
        $$idx27$val$i$i = HEAP32[$$idx27$i$i>>2]|0;
        $$idx21$i$i = (((($$idx27$val$i$i) + (($38*24)|0)|0)) + 8|0);
        $$idx21$val$i$i = HEAP32[$$idx21$i$i>>2]|0;
        $$idx22$i$i = (((($$idx27$val$i$i) + (($38*24)|0)|0)) + 12|0);
        $$idx22$val$i$i = HEAP32[$$idx22$i$i>>2]|0;
        $notlhs$i$i$i = ($$idx21$val$i$i|0)!=($$$i|0);
        $notrhs$i$i$i = ($$idx22$val$i$i|0)!=($$46$i|0);
        $42 = $notlhs$i$i$i | $notrhs$i$i$i;
        L25: do {
         if ($42) {
          $$idx11$i$i = ((($0)) + 40|0);
          $$idx12$i$i = ((($0)) + 48|0);
          $$idx12$val$i$i = HEAP32[$$idx12$i$i>>2]|0;
          $$idx11$val$i$i = HEAP32[$$idx11$i$i>>2]|0;
          $pos$0$i$i = $38;
          while(1) {
           $43 = ($$idx12$val$i$i>>>0)>($pos$0$i$i>>>0);
           if (!($43)) {
            label = 20;
            break;
           }
           $45 = (($$idx11$val$i$i) + ($pos$0$i$i<<2)|0);
           $46 = HEAP32[$45>>2]|0;
           $47 = ($46|0)==(-1);
           if ($47) {
            break L20;
           }
           $48 = ($$idx28$val$i$i>>>0)>($46>>>0);
           if (!($48)) {
            label = 23;
            break;
           }
           $$idx17$i$i = (((($$idx27$val$i$i) + (($46*24)|0)|0)) + 8|0);
           $$idx17$val$i$i = HEAP32[$$idx17$i$i>>2]|0;
           $$idx18$i$i = (((($$idx27$val$i$i) + (($46*24)|0)|0)) + 12|0);
           $$idx18$val$i$i = HEAP32[$$idx18$i$i>>2]|0;
           $notlhs$i32$i$i = ($$idx17$val$i$i|0)!=($$$i|0);
           $notrhs$i33$i$i = ($$idx18$val$i$i|0)!=($$46$i|0);
           $50 = $notlhs$i32$i$i | $notrhs$i33$i$i;
           if ($50) {
            $pos$0$i$i = $46;
           } else {
            $pos$1$i$i = $46;
            break L25;
           }
          }
          if ((label|0) == 20) {
           __THREW__ = 0;
           invoke_viiiii(214,(12236|0),104,1349,($pos$0$i$i|0),($$idx12$val$i$i|0));
           $44 = __THREW__; __THREW__ = 0;
           break L18;
          }
          else if ((label|0) == 23) {
           __THREW__ = 0;
           invoke_viiiii(214,(12236|0),104,1349,($46|0),($$idx28$val$i$i|0));
           $49 = __THREW__; __THREW__ = 0;
           break L18;
          }
         } else {
          $pos$1$i$i = $38;
         }
        } while(0);
        $55 = ($$idx28$val$i$i>>>0)>($pos$1$i$i>>>0);
        if ($55) {
         STACKTOP = sp;return;
        } else {
         __THREW__ = 0;
         invoke_viiiii(214,(12236|0),104,1358,($pos$1$i$i|0),($$idx28$val$i$i|0));
         $56 = __THREW__; __THREW__ = 0;
         break L18;
        }
       }
      } while(0);
      $value$idx$val$val$idx$val$i = HEAP32[$0>>2]|0;
      $value$idx$val$val$idx15$i = ((($0)) + 4|0);
      $value$idx$val$val$idx15$val$i = HEAP32[$value$idx$val$val$idx15$i>>2]|0;
      $$idx1$val$idx$i$i = ((($11)) + 8|0);
      $$idx1$val$idx$val$i$i = HEAP32[$$idx1$val$idx$i$i>>2]|0;
      $$idx1$val$idx2$i$i = ((($11)) + 12|0);
      $$idx1$val$idx2$val$i$i = HEAP32[$$idx1$val$idx2$i$i>>2]|0;
      $$idx$val$idx$i$i = ((($15)) + 8|0);
      $$idx$val$idx$val$i$i = HEAP32[$$idx$val$idx$i$i>>2]|0;
      $$idx$val$idx3$i$i = ((($15)) + 12|0);
      $$idx$val$idx3$val$i$i = HEAP32[$$idx$val$idx3$i$i>>2]|0;
      $51 = ((($value$idx$val$val$idx15$val$i)) + 12|0);
      $52 = HEAP32[$51>>2]|0;
      __THREW__ = 0;
      invoke_viiiiii($52|0,($_14$i|0),($value$idx$val$val$idx$val$i|0),($$idx1$val$idx$val$i$i|0),($$idx1$val$idx2$val$i$i|0),($$idx$val$idx$val$i$i|0),($$idx$val$idx3$val$i$i|0));
      $53 = __THREW__; __THREW__ = 0;
      $54 = $53&1;
      if (!($54)) {
       $57 = HEAP32[$_14$i>>2]|0;
       $switchtmp$i = ($57|0)==(0|0);
       L41: do {
        if (!($switchtmp$i)) {
         $58 = ((($_14$i)) + 4|0);
         $59 = HEAP32[$58>>2]|0;
         $60 = ((($0)) + 52|0);
         $61 = HEAP32[$60>>2]|0;
         $62 = ((($0)) + 60|0);
         $63 = HEAP32[$62>>2]|0;
         $64 = ($61>>>0)<($63>>>0);
         L43: do {
          if ($64) {
           label = 53;
          } else {
           $65 = ((($0)) + 56|0);
           $66 = HEAP32[$65>>2]|0;
           $67 = $66 << 1;
           HEAP32[$65>>2] = $67;
           $68 = (+($67>>>0));
           $69 = $68 * 0.69999998807907104;
           $70 = (~~(($69))>>>0);
           HEAP32[$62>>2] = $70;
           $71 = (($67) + -1)|0;
           HEAP32[$32>>2] = $71;
           __THREW__ = 0;
           invoke_vii(211,($newhash$i$i|0),($67|0));
           $72 = __THREW__; __THREW__ = 0;
           $73 = $72&1;
           if ($73) {
            $120 = ___cxa_find_matching_catch_2()|0;
            $121 = tempRet0;
            $$fca$0$extract4144$i = $120;$$fca$1$extract6145$i = $121;
            break;
           }
           $74 = HEAP32[$65>>2]|0;
           __THREW__ = 0;
           invoke_vii(211,($newnext$i$i|0),($74|0));
           $75 = __THREW__; __THREW__ = 0;
           $76 = $75&1;
           L48: do {
            if ($76) {
             $126 = ___cxa_find_matching_catch_2()|0;
             $127 = tempRet0;
             $$fca$0$extract2495$i$i = $126;$$fca$1$extract2697$i$i = $127;
            } else {
             $77 = HEAP32[$60>>2]|0;
             $78 = ($77|0)==(0);
             L51: do {
              if (!($78)) {
               $$idx57$i$i = ((($0)) + 20|0);
               $$idx56$i$i = ((($0)) + 12|0);
               $newhash$idx48$i$i = ((($newhash$i$i)) + 8|0);
               $newhash$idx48$val$i$i = HEAP32[$newhash$idx48$i$i>>2]|0;
               $newnext$idx54$i$i = ((($newnext$i$i)) + 8|0);
               $newnext$idx54$val$i$i = HEAP32[$newnext$idx54$i$i>>2]|0;
               $newnext$idx$val$i$i = HEAP32[$newnext$i$i>>2]|0;
               $newhash$idx$val$i$i = HEAP32[$newhash$i$i>>2]|0;
               $106 = 1;$iter$sroa$0$0111$i$i = 0;
               while(1) {
                $$idx57$val$i$i = HEAP32[$$idx57$i$i>>2]|0;
                $79 = ($$idx57$val$i$i>>>0)>($iter$sroa$0$0111$i$i>>>0);
                if (!($79)) {
                 label = 36;
                 break;
                }
                $$idx56$val$i$i = HEAP32[$$idx56$i$i>>2]|0;
                $$idx$i27$i = (((($$idx56$val$i$i) + (($iter$sroa$0$0111$i$i*24)|0)|0)) + 8|0);
                $$idx$val$i28$i = HEAP32[$$idx$i27$i>>2]|0;
                $$idx55$i$i = (((($$idx56$val$i$i) + (($iter$sroa$0$0111$i$i*24)|0)|0)) + 12|0);
                $$idx55$val$i$i = HEAP32[$$idx55$i$i>>2]|0;
                $81 = $$idx$val$i28$i & 65535;
                $82 = $$idx55$val$i$i << 16;
                $83 = $82 | $81;
                $84 = $83 << 15;
                $85 = $84 ^ -1;
                $86 = (($83) + ($85))|0;
                $87 = $86 >>> 10;
                $88 = $87 ^ $86;
                $89 = ($88*9)|0;
                $90 = $89 >>> 6;
                $91 = $90 ^ $89;
                $92 = $91 << 11;
                $93 = $92 ^ -1;
                $94 = (($91) + ($93))|0;
                $95 = $94 >>> 16;
                $96 = $95 ^ $94;
                $97 = HEAP32[$32>>2]|0;
                $98 = $96 & $97;
                $99 = ($newhash$idx48$val$i$i>>>0)>($98>>>0);
                if (!($99)) {
                 label = 38;
                 break;
                }
                $101 = ($newnext$idx54$val$i$i>>>0)>($iter$sroa$0$0111$i$i>>>0);
                if (!($101)) {
                 label = 40;
                 break;
                }
                $103 = (($newhash$idx$val$i$i) + ($98<<2)|0);
                $104 = HEAP32[$103>>2]|0;
                $105 = (($newnext$idx$val$i$i) + ($iter$sroa$0$0111$i$i<<2)|0);
                HEAP32[$105>>2] = $104;
                HEAP32[$103>>2] = $iter$sroa$0$0111$i$i;
                $107 = ($106>>>0)<($77>>>0);
                $108 = (($106) + 1)|0;
                if ($107) {
                 $iter$sroa$0$0111$i$i$phi = $106;$106 = $108;$iter$sroa$0$0111$i$i = $iter$sroa$0$0111$i$i$phi;
                } else {
                 break L51;
                }
               }
               if ((label|0) == 36) {
                __THREW__ = 0;
                invoke_viiiii(214,(12236|0),104,1349,($iter$sroa$0$0111$i$i|0),($$idx57$val$i$i|0));
                $80 = __THREW__; __THREW__ = 0;
               }
               else if ((label|0) == 38) {
                __THREW__ = 0;
                invoke_viiiii(214,(12236|0),104,1349,($98|0),($newhash$idx48$val$i$i|0));
                $100 = __THREW__; __THREW__ = 0;
               }
               else if ((label|0) == 40) {
                __THREW__ = 0;
                invoke_viiiii(214,(12236|0),104,1358,($iter$sroa$0$0111$i$i|0),($newnext$idx54$val$i$i|0));
                $102 = __THREW__; __THREW__ = 0;
               }
               $122 = ___cxa_find_matching_catch_2()|0;
               $123 = tempRet0;
               $124 = ((($newnext$i$i)) + 4|0);
               $125 = HEAP32[$124>>2]|0;
               $not$$i$i$i$i$i$i = ($125|0)==(0);
               if ($not$$i$i$i$i$i$i) {
                $$fca$0$extract2495$i$i = $122;$$fca$1$extract2697$i$i = $123;
                break L48;
               }
               _free($newnext$idx$val$i$i);
               $$fca$0$extract2495$i$i = $122;$$fca$1$extract2697$i$i = $123;
               break L48;
              }
             } while(0);
             $109 = ((($0)) + 28|0);
             ;HEAP32[$t$i71$i$i>>2]=HEAP32[$newhash$i$i>>2]|0;HEAP32[$t$i71$i$i+4>>2]=HEAP32[$newhash$i$i+4>>2]|0;HEAP32[$t$i71$i$i+8>>2]=HEAP32[$newhash$i$i+8>>2]|0;
             ;HEAP32[$newhash$i$i>>2]=HEAP32[$109>>2]|0;HEAP32[$newhash$i$i+4>>2]=HEAP32[$109+4>>2]|0;HEAP32[$newhash$i$i+8>>2]=HEAP32[$109+8>>2]|0;
             ;HEAP32[$109>>2]=HEAP32[$t$i71$i$i>>2]|0;HEAP32[$109+4>>2]=HEAP32[$t$i71$i$i+4>>2]|0;HEAP32[$109+8>>2]=HEAP32[$t$i71$i$i+8>>2]|0;
             $110 = ((($0)) + 40|0);
             ;HEAP32[$t$i$i$i>>2]=HEAP32[$newnext$i$i>>2]|0;HEAP32[$t$i$i$i+4>>2]=HEAP32[$newnext$i$i+4>>2]|0;HEAP32[$t$i$i$i+8>>2]=HEAP32[$newnext$i$i+8>>2]|0;
             ;HEAP32[$newnext$i$i>>2]=HEAP32[$110>>2]|0;HEAP32[$newnext$i$i+4>>2]=HEAP32[$110+4>>2]|0;HEAP32[$newnext$i$i+8>>2]=HEAP32[$110+8>>2]|0;
             ;HEAP32[$110>>2]=HEAP32[$t$i$i$i>>2]|0;HEAP32[$110+4>>2]=HEAP32[$t$i$i$i+4>>2]|0;HEAP32[$110+8>>2]=HEAP32[$t$i$i$i+8>>2]|0;
             $111 = ((($newnext$i$i)) + 4|0);
             $112 = HEAP32[$111>>2]|0;
             $not$$i$i$i$i64$i$i = ($112|0)==(0);
             if (!($not$$i$i$i$i64$i$i)) {
              $113 = HEAP32[$newnext$i$i>>2]|0;
              _free($113);
             }
             $114 = ((($newhash$i$i)) + 4|0);
             $115 = HEAP32[$114>>2]|0;
             $not$$i$i$i$i61$i$i = ($115|0)==(0);
             if (!($not$$i$i$i$i61$i$i)) {
              $116 = HEAP32[$newhash$i$i>>2]|0;
              _free($116);
             }
             label = 53;
             break L43;
            }
           } while(0);
           $117 = ((($newhash$i$i)) + 4|0);
           $118 = HEAP32[$117>>2]|0;
           $not$$i$i$i$i58$i$i = ($118|0)==(0);
           if ($not$$i$i$i$i58$i$i) {
            $$fca$0$extract4144$i = $$fca$0$extract2495$i$i;$$fca$1$extract6145$i = $$fca$1$extract2697$i$i;
           } else {
            $119 = HEAP32[$newhash$i$i>>2]|0;
            _free($119);
            $$fca$0$extract4144$i = $$fca$0$extract2495$i$i;$$fca$1$extract6145$i = $$fca$1$extract2697$i$i;
           }
          }
         } while(0);
         if ((label|0) == 53) {
          $128 = HEAP32[$32>>2]|0;
          $129 = $128 & $31;
          $$idx5$val$i = HEAP32[$$idx14$i$i>>2]|0;
          $130 = ($$idx5$val$i>>>0)>($129>>>0);
          do {
           if ($130) {
            $132 = HEAP32[$60>>2]|0;
            $$idx9$i = ((($0)) + 48|0);
            $$idx9$val$i = HEAP32[$$idx9$i>>2]|0;
            $133 = ($$idx9$val$i>>>0)>($132>>>0);
            if (!($133)) {
             __THREW__ = 0;
             invoke_viiiii(214,(12236|0),104,1358,($132|0),($$idx9$val$i|0));
             $134 = __THREW__; __THREW__ = 0;
             break;
            }
            $$idx8$i = ((($0)) + 40|0);
            $$idx8$val$i = HEAP32[$$idx8$i>>2]|0;
            $$idx$val$i = HEAP32[$$idx13$i$i>>2]|0;
            $135 = (($$idx$val$i) + ($129<<2)|0);
            $136 = HEAP32[$135>>2]|0;
            $137 = (($$idx8$val$i) + ($132<<2)|0);
            HEAP32[$137>>2] = $136;
            $$idx7$val$i = HEAP32[$$idx14$i$i>>2]|0;
            $138 = ($$idx7$val$i>>>0)>($129>>>0);
            if (!($138)) {
             __THREW__ = 0;
             invoke_viiiii(214,(12236|0),104,1358,($129|0),($$idx7$val$i|0));
             $139 = __THREW__; __THREW__ = 0;
             break;
            }
            $$idx6$val$i = HEAP32[$$idx13$i$i>>2]|0;
            $140 = HEAP32[$60>>2]|0;
            $141 = (($$idx6$val$i) + ($129<<2)|0);
            HEAP32[$141>>2] = $140;
            $142 = ((($0)) + 12|0);
            $143 = $59;
            $144 = ((($0)) + 20|0);
            $145 = HEAP32[$144>>2]|0;
            $$idx$i36$i = ((($0)) + 16|0);
            $$idx$val$i37$i = HEAP32[$$idx$i36$i>>2]|0;
            $146 = ($145|0)==($$idx$val$i37$i|0);
            do {
             if ($146) {
              __THREW__ = 0;
              invoke_vi(239,($142|0));
              $147 = __THREW__; __THREW__ = 0;
              $148 = $147&1;
              if (!($148)) {
               $$pre$i$i = HEAP32[$144>>2]|0;
               $158 = $$pre$i$i;
               label = 65;
               break;
              }
              $149 = ___cxa_find_matching_catch_2()|0;
              $150 = tempRet0;
              $$idx1$val$val$i$i$i$i = HEAP32[$143>>2]|0;
              __THREW__ = 0;
              invoke_vi($$idx1$val$val$i$i$i$i|0,($57|0));
              $151 = __THREW__; __THREW__ = 0;
              $152 = $151&1;
              if ($152) {
               break;
              }
              $153 = ((($143)) + 4|0);
              $154 = HEAP32[$153>>2]|0;
              $155 = ($154|0)==(0);
              if (!($155)) {
               _free($57);
              }
              $personalityslot$sroa$0$0$i = $149;$personalityslot$sroa$5$0$i = $150;
              ___resumeException($personalityslot$sroa$0$0$i|0);
              // unreachable;
             } else {
              $158 = $145;
              label = 65;
             }
            } while(0);
            if ((label|0) == 65) {
             $156 = HEAP32[$142>>2]|0;
             $157 = (($156) + (($158*24)|0)|0);
             $159 = $157;
             $160 = $159;
             HEAP32[$160>>2] = $$unpack;
             $161 = (($159) + 4)|0;
             $162 = $161;
             HEAP32[$162>>2] = $$unpack79;
             $value$sroa$0$i$sroa$4$0$_22$sroa$0$0$$sroa_cast$i$sroa_idx126$i = (((($156) + (($158*24)|0)|0)) + 8|0);
             HEAP32[$value$sroa$0$i$sroa$4$0$_22$sroa$0$0$$sroa_cast$i$sroa_idx126$i>>2] = $$$i;
             $value$sroa$0$i$sroa$5$0$_22$sroa$0$0$$sroa_cast$i$sroa_idx128$i = (((($156) + (($158*24)|0)|0)) + 12|0);
             HEAP32[$value$sroa$0$i$sroa$5$0$_22$sroa$0$0$$sroa_cast$i$sroa_idx128$i>>2] = $$46$i;
             $_22$sroa$4$0$$sroa_idx24$i$i = (((($156) + (($158*24)|0)|0)) + 16|0);
             HEAP32[$_22$sroa$4$0$$sroa_idx24$i$i>>2] = $57;
             $_22$sroa$5$0$$sroa_idx26$i$i = (((($156) + (($158*24)|0)|0)) + 20|0);
             HEAP32[$_22$sroa$5$0$$sroa_idx26$i$i>>2] = $143;
             $163 = HEAP32[$144>>2]|0;
             $164 = (($163) + 1)|0;
             HEAP32[$144>>2] = $164;
             $165 = HEAP32[$60>>2]|0;
             $166 = (($165) + 1)|0;
             HEAP32[$60>>2] = $166;
             $167 = ($164>>>0)>($165>>>0);
             if ($167) {
              break L41;
             }
             __THREW__ = 0;
             invoke_viiiii(214,(12236|0),104,1358,($165|0),($164|0));
             $168 = __THREW__; __THREW__ = 0;
            }
            $178 = ___cxa_find_matching_catch_2()|0;
            $179 = tempRet0;
            $personalityslot$sroa$0$0$i = $178;$personalityslot$sroa$5$0$i = $179;
            ___resumeException($personalityslot$sroa$0$0$i|0);
            // unreachable;
           } else {
            __THREW__ = 0;
            invoke_viiiii(214,(12236|0),104,1349,($129|0),($$idx5$val$i|0));
            $131 = __THREW__; __THREW__ = 0;
           }
          } while(0);
          $176 = ___cxa_find_matching_catch_2()|0;
          $177 = tempRet0;
          $$fca$0$extract4144$i = $176;$$fca$1$extract6145$i = $177;
         }
         $169 = $59;
         $$idx1$val$val$i$i = HEAP32[$169>>2]|0;
         FUNCTION_TABLE_vi[$$idx1$val$val$i$i & 511]($57);
         $170 = $59;
         $171 = ((($170)) + 4|0);
         $172 = HEAP32[$171>>2]|0;
         $173 = ($172|0)==(0);
         if ($173) {
          $personalityslot$sroa$0$0$i = $$fca$0$extract4144$i;$personalityslot$sroa$5$0$i = $$fca$1$extract6145$i;
          ___resumeException($personalityslot$sroa$0$0$i|0);
          // unreachable;
         }
         _free($57);
         $personalityslot$sroa$0$0$i = $$fca$0$extract4144$i;$personalityslot$sroa$5$0$i = $$fca$1$extract6145$i;
         ___resumeException($personalityslot$sroa$0$0$i|0);
         // unreachable;
        }
       } while(0);
       STACKTOP = sp;return;
      }
     } else {
      __THREW__ = 0;
      invoke_viiiii(214,(12236|0),104,1349,($34|0),($$idx14$val$i$i|0));
      $36 = __THREW__; __THREW__ = 0;
     }
    } while(0);
    $174 = ___cxa_find_matching_catch_2()|0;
    $175 = tempRet0;
    $personalityslot$sroa$0$0$i = $174;$personalityslot$sroa$5$0$i = $175;
    ___resumeException($personalityslot$sroa$0$0$i|0);
    // unreachable;
   }
   $180 = $$$i & 65535;
   $181 = $$46$i << 16;
   $182 = $181 | $180;
   $183 = $182 << 15;
   $184 = $183 ^ -1;
   $185 = (($182) + ($184))|0;
   $186 = $185 >>> 10;
   $187 = $186 ^ $185;
   $188 = ($187*9)|0;
   $189 = $188 >>> 6;
   $190 = $189 ^ $188;
   $191 = $190 << 11;
   $192 = $191 ^ -1;
   $193 = (($190) + ($192))|0;
   $194 = $193 >>> 16;
   $195 = $194 ^ $193;
   $196 = ((($0)) + 24|0);
   $197 = HEAP32[$196>>2]|0;
   $198 = $195 & $197;
   $$idx51$i = ((($0)) + 28|0);
   $$idx52$i = ((($0)) + 36|0);
   $$idx52$val$i = HEAP32[$$idx52$i>>2]|0;
   $199 = ($$idx52$val$i>>>0)>($198>>>0);
   if (!($199)) {
    __ZN4core9panicking18panic_bounds_check17hd14a5808e41829e9E(12236,104,1349,$198,$$idx52$val$i);
    // unreachable;
   }
   $$idx51$val$i = HEAP32[$$idx51$i>>2]|0;
   $200 = (($$idx51$val$i) + ($198<<2)|0);
   $201 = HEAP32[$200>>2]|0;
   $202 = ($201|0)==(-1);
   if ($202) {
    STACKTOP = sp;return;
   }
   $$idx85$i = ((($0)) + 12|0);
   $$idx86$i = ((($0)) + 20|0);
   $$idx86$val$i = HEAP32[$$idx86$i>>2]|0;
   $203 = ($$idx86$val$i>>>0)>($201>>>0);
   if (!($203)) {
    __ZN4core9panicking18panic_bounds_check17hd14a5808e41829e9E(12236,104,1349,$201,$$idx86$val$i);
    // unreachable;
   }
   $$idx85$val$i = HEAP32[$$idx85$i>>2]|0;
   $$idx77$i = (((($$idx85$val$i) + (($201*24)|0)|0)) + 8|0);
   $$idx77$val$i = HEAP32[$$idx77$i>>2]|0;
   $$idx78$i = (((($$idx85$val$i) + (($201*24)|0)|0)) + 12|0);
   $$idx78$val$i = HEAP32[$$idx78$i>>2]|0;
   $notlhs$i$i = ($$idx77$val$i|0)!=($$$i|0);
   $notrhs$i$i = ($$idx78$val$i|0)!=($$46$i|0);
   $204 = $notlhs$i$i | $notrhs$i$i;
   $$idx47$i = ((($0)) + 40|0);
   $$idx48$i = ((($0)) + 48|0);
   $$idx48$val$i = HEAP32[$$idx48$i>>2]|0;
   do {
    if ($204) {
     $$idx47$val$i = HEAP32[$$idx47$i>>2]|0;
     $o$0$i = $201;
     while(1) {
      $210 = ($$idx48$val$i>>>0)>($o$0$i>>>0);
      if (!($210)) {
       label = 87;
       break;
      }
      $211 = (($$idx47$val$i) + ($o$0$i<<2)|0);
      $212 = HEAP32[$211>>2]|0;
      $213 = ($212|0)==(-1);
      if ($213) {
       label = 11;
       break;
      }
      $214 = ($$idx86$val$i>>>0)>($212>>>0);
      if (!($214)) {
       label = 90;
       break;
      }
      $$idx73$i = (((($$idx85$val$i) + (($212*24)|0)|0)) + 8|0);
      $$idx73$val$i = HEAP32[$$idx73$i>>2]|0;
      $$idx74$i = (((($$idx85$val$i) + (($212*24)|0)|0)) + 12|0);
      $$idx74$val$i = HEAP32[$$idx74$i>>2]|0;
      $notlhs$i99$i = ($$idx73$val$i|0)!=($$$i|0);
      $notrhs$i100$i = ($$idx74$val$i|0)!=($$46$i|0);
      $215 = $notlhs$i99$i | $notrhs$i100$i;
      if ($215) {
       $o$0$i = $212;
      } else {
       label = 92;
       break;
      }
     }
     if ((label|0) == 11) {
      STACKTOP = sp;return;
     }
     else if ((label|0) == 87) {
      __ZN4core9panicking18panic_bounds_check17hd14a5808e41829e9E(12236,104,1349,$o$0$i,$$idx48$val$i);
      // unreachable;
     }
     else if ((label|0) == 90) {
      __ZN4core9panicking18panic_bounds_check17hd14a5808e41829e9E(12236,104,1349,$212,$$idx86$val$i);
      // unreachable;
     }
     else if ((label|0) == 92) {
      $216 = ($$idx48$val$i>>>0)>($212>>>0);
      if (!($216)) {
       __ZN4core9panicking18panic_bounds_check17hd14a5808e41829e9E(12236,104,1349,$212,$$idx48$val$i);
       // unreachable;
      }
      $217 = (($$idx47$val$i) + ($212<<2)|0);
      $218 = HEAP32[$217>>2]|0;
      HEAP32[$211>>2] = $218;
      $$idx62$val$i = HEAP32[$$idx48$i>>2]|0;
      $219 = ($$idx62$val$i>>>0)>($212>>>0);
      if ($219) {
       $$idx61$val$i = HEAP32[$$idx47$i>>2]|0;
       $220 = (($$idx61$val$i) + ($212<<2)|0);
       HEAP32[$220>>2] = -1;
       $obji$0$i = $212;
       break;
      } else {
       __ZN4core9panicking18panic_bounds_check17hd14a5808e41829e9E(12236,104,1358,$212,$$idx62$val$i);
       // unreachable;
      }
     }
    } else {
     $205 = ($$idx48$val$i>>>0)>($201>>>0);
     if (!($205)) {
      __ZN4core9panicking18panic_bounds_check17hd14a5808e41829e9E(12236,104,1349,$201,$$idx48$val$i);
      // unreachable;
     }
     $$idx49$val$i = HEAP32[$$idx47$i>>2]|0;
     $206 = (($$idx49$val$i) + ($201<<2)|0);
     $207 = HEAP32[$206>>2]|0;
     HEAP32[$200>>2] = $207;
     $$idx66$val$i = HEAP32[$$idx48$i>>2]|0;
     $208 = ($$idx66$val$i>>>0)>($201>>>0);
     if ($208) {
      $$idx65$val$i = HEAP32[$$idx47$i>>2]|0;
      $209 = (($$idx65$val$i) + ($201<<2)|0);
      HEAP32[$209>>2] = -1;
      $obji$0$i = $201;
      break;
     } else {
      __ZN4core9panicking18panic_bounds_check17hd14a5808e41829e9E(12236,104,1358,$201,$$idx66$val$i);
      // unreachable;
     }
    }
   } while(0);
   $221 = ((($0)) + 52|0);
   $222 = HEAP32[$221>>2]|0;
   $223 = (($222) + -1)|0;
   HEAP32[$221>>2] = $223;
   $$idx$val$i$i99 = HEAP32[$$idx86$i>>2]|0;
   $224 = HEAP32[$$idx85$i>>2]|0;
   $225 = (($$idx$val$i$i99) + -1)|0;
   $226 = ($$idx$val$i$i99>>>0)>($obji$0$i>>>0);
   if (!($226)) {
    __ZN4core9panicking18panic_bounds_check17hd14a5808e41829e9E(11401,99,433,$obji$0$i,$$idx$val$i$i99);
    // unreachable;
   }
   $227 = ($$idx$val$i$i99|0)==(0);
   if ($227) {
    __ZN4core9panicking18panic_bounds_check17hd14a5808e41829e9E(11401,99,434,$225,0);
    // unreachable;
   }
   $228 = (($224) + (($obji$0$i*24)|0)|0);
   $229 = (($224) + (($225*24)|0)|0);
   ;HEAP32[$tmp$i$i$i$i$i>>2]=HEAP32[$228>>2]|0;HEAP32[$tmp$i$i$i$i$i+4>>2]=HEAP32[$228+4>>2]|0;HEAP32[$tmp$i$i$i$i$i+8>>2]=HEAP32[$228+8>>2]|0;HEAP32[$tmp$i$i$i$i$i+12>>2]=HEAP32[$228+12>>2]|0;HEAP32[$tmp$i$i$i$i$i+16>>2]=HEAP32[$228+16>>2]|0;HEAP32[$tmp$i$i$i$i$i+20>>2]=HEAP32[$228+20>>2]|0;
   _memmove(($228|0),($229|0),24)|0;
   ;HEAP32[$229>>2]=HEAP32[$tmp$i$i$i$i$i>>2]|0;HEAP32[$229+4>>2]=HEAP32[$tmp$i$i$i$i$i+4>>2]|0;HEAP32[$229+8>>2]=HEAP32[$tmp$i$i$i$i$i+8>>2]|0;HEAP32[$229+12>>2]=HEAP32[$tmp$i$i$i$i$i+12>>2]|0;HEAP32[$229+16>>2]=HEAP32[$tmp$i$i$i$i$i+16>>2]|0;HEAP32[$229+20>>2]=HEAP32[$tmp$i$i$i$i$i+20>>2]|0;
   $230 = HEAP32[$$idx86$i>>2]|0;
   $231 = ($230|0)==(0);
   if ($231) {
    __ZN4core9panicking5panic17ha7507e8e32961bfeE(6500);
    // unreachable;
   }
   $232 = (($230) + -1)|0;
   HEAP32[$$idx86$i>>2] = $232;
   $233 = HEAP32[$$idx85$i>>2]|0;
   $_14$sroa$4$0$$sroa_idx10$i$i = (((($233) + (($232*24)|0)|0)) + 16|0);
   $_14$sroa$4$0$copyload$i$i = HEAP32[$_14$sroa$4$0$$sroa_idx10$i$i>>2]|0;
   $_14$sroa$6$0$$sroa_idx12$i$i = (((($233) + (($232*24)|0)|0)) + 20|0);
   $_14$sroa$6$0$copyload$i$i = HEAP32[$_14$sroa$6$0$$sroa_idx12$i$i>>2]|0;
   $switch3tmp$i$i$i = ($_14$sroa$4$0$copyload$i$i|0)==(0|0);
   if ($switch3tmp$i$i$i) {
    __ZN4core9panicking5panic17ha7507e8e32961bfeE(6500);
    // unreachable;
   }
   $235 = HEAP32[$221>>2]|0;
   $236 = ($obji$0$i|0)==($235|0);
   L158: do {
    if (!($236)) {
     $237 = ($232>>>0)>($obji$0$i>>>0);
     L160: do {
      if ($237) {
       $$idx71$i = (((($233) + (($obji$0$i*24)|0)|0)) + 8|0);
       $$idx71$val$i = HEAP32[$$idx71$i>>2]|0;
       $$idx72$i = (((($233) + (($obji$0$i*24)|0)|0)) + 12|0);
       $$idx72$val$i = HEAP32[$$idx72$i>>2]|0;
       $239 = $$idx71$val$i & 65535;
       $240 = $$idx72$val$i << 16;
       $241 = $240 | $239;
       $242 = $241 << 15;
       $243 = $242 ^ -1;
       $244 = (($241) + ($243))|0;
       $245 = $244 >>> 10;
       $246 = $245 ^ $244;
       $247 = ($246*9)|0;
       $248 = $247 >>> 6;
       $249 = $248 ^ $247;
       $250 = $249 << 11;
       $251 = $250 ^ -1;
       $252 = (($249) + ($251))|0;
       $253 = $252 >>> 16;
       $254 = $253 ^ $252;
       $255 = HEAP32[$196>>2]|0;
       $256 = $254 & $255;
       $$idx40$val$i = HEAP32[$$idx52$i>>2]|0;
       $257 = ($$idx40$val$i>>>0)>($256>>>0);
       if (!($257)) {
        __THREW__ = 0;
        invoke_viiiii(214,(12236|0),104,1349,($256|0),($$idx40$val$i|0));
        $258 = __THREW__; __THREW__ = 0;
        break;
       }
       $$idx39$val$i = HEAP32[$$idx51$i>>2]|0;
       $259 = (($$idx39$val$i) + ($256<<2)|0);
       $260 = HEAP32[$259>>2]|0;
       $261 = ($260|0)==($235|0);
       do {
        if ($261) {
         HEAP32[$259>>2] = $obji$0$i;
        } else {
         $$idx36$val$i = HEAP32[$$idx48$i>>2]|0;
         $$idx35$val$i = HEAP32[$$idx47$i>>2]|0;
         $no$0$i = $260;
         while(1) {
          $262 = ($$idx36$val$i>>>0)>($no$0$i>>>0);
          if (!($262)) {
           label = 114;
           break;
          }
          $264 = (($$idx35$val$i) + ($no$0$i<<2)|0);
          $265 = HEAP32[$264>>2]|0;
          $266 = ($265|0)==($235|0);
          if ($266) {
           label = 116;
           break;
          } else {
           $no$0$i = $265;
          }
         }
         if ((label|0) == 114) {
          __THREW__ = 0;
          invoke_viiiii(214,(12236|0),104,1349,($no$0$i|0),($$idx36$val$i|0));
          $263 = __THREW__; __THREW__ = 0;
          break L160;
         }
         else if ((label|0) == 116) {
          HEAP32[$264>>2] = $obji$0$i;
          break;
         }
        }
       } while(0);
       $267 = HEAP32[$221>>2]|0;
       $$idx31$val$i = HEAP32[$$idx47$i>>2]|0;
       $$idx32$val$i = HEAP32[$$idx48$i>>2]|0;
       $268 = ($$idx32$val$i>>>0)>($267>>>0);
       if (!($268)) {
        __THREW__ = 0;
        invoke_viiiii(214,(12236|0),104,1349,($267|0),($$idx32$val$i|0));
        $269 = __THREW__; __THREW__ = 0;
        break;
       }
       $270 = ($$idx32$val$i>>>0)>($obji$0$i>>>0);
       if (!($270)) {
        __THREW__ = 0;
        invoke_viiiii(214,(12236|0),104,1358,($obji$0$i|0),($$idx32$val$i|0));
        $271 = __THREW__; __THREW__ = 0;
        break;
       }
       $272 = (($$idx31$val$i) + ($267<<2)|0);
       $273 = HEAP32[$272>>2]|0;
       $274 = (($$idx31$val$i) + ($obji$0$i<<2)|0);
       HEAP32[$274>>2] = $273;
       $275 = HEAP32[$221>>2]|0;
       $$idx54$val$i = HEAP32[$$idx48$i>>2]|0;
       $276 = ($$idx54$val$i>>>0)>($275>>>0);
       if ($276) {
        $$idx53$val$i = HEAP32[$$idx47$i>>2]|0;
        $284 = (($$idx53$val$i) + ($275<<2)|0);
        HEAP32[$284>>2] = -1;
        break L158;
       } else {
        __THREW__ = 0;
        invoke_viiiii(214,(12236|0),104,1358,($275|0),($$idx54$val$i|0));
        $277 = __THREW__; __THREW__ = 0;
        break;
       }
      } else {
       __THREW__ = 0;
       invoke_viiiii(214,(12236|0),104,1349,($obji$0$i|0),($232|0));
       $238 = __THREW__; __THREW__ = 0;
      }
     } while(0);
     $234 = ___cxa_find_matching_catch_2()|0;
     $278 = tempRet0;
     $279 = $_14$sroa$6$0$copyload$i$i;
     $$idx1$val$val$i$i$i = HEAP32[$279>>2]|0;
     FUNCTION_TABLE_vi[$$idx1$val$val$i$i$i & 511]($_14$sroa$4$0$copyload$i$i);
     $280 = $_14$sroa$6$0$copyload$i$i;
     $281 = ((($280)) + 4|0);
     $282 = HEAP32[$281>>2]|0;
     $283 = ($282|0)==(0);
     if ($283) {
      ___resumeException($234|0);
      // unreachable;
     }
     _free($_14$sroa$4$0$copyload$i$i);
     ___resumeException($234|0);
     // unreachable;
    }
   } while(0);
   $285 = $_14$sroa$6$0$copyload$i$i;
   $286 = ((($285)) + 16|0);
   $287 = HEAP32[$286>>2]|0;
   __THREW__ = 0;
   $288 = (invoke_ii($287|0,($_14$sroa$4$0$copyload$i$i|0))|0);
   $289 = __THREW__; __THREW__ = 0;
   $290 = $289&1;
   L191: do {
    if ($290) {
     $622 = ___cxa_find_matching_catch_2()|0;
     $623 = tempRet0;
     $lpad$phi$index = $622;$lpad$phi$index7 = $623;
    } else {
     $291 = ($288|0)==(0);
     L194: do {
      if (!($291)) {
       $292 = HEAP32[$1>>2]|0;
       $293 = ((($1)) + 8|0);
       $294 = HEAP32[$293>>2]|0;
       $295 = (($292) + (($294*20)|0)|0);
       $296 = ($294|0)==(0);
       if ($296) {
        break;
       } else {
        $iter$sroa$0$0$in18$i = $292;
       }
       while(1) {
        $297 = ((($iter$sroa$0$0$in18$i)) + 20|0);
        $298 = ((($iter$sroa$0$0$in18$i)) + 12|0);
        $299 = HEAP32[$298>>2]|0;
        $300 = ((($iter$sroa$0$0$in18$i)) + 16|0);
        $301 = HEAP32[$300>>2]|0;
        $302 = ((($301)) + 16|0);
        $303 = HEAP32[$302>>2]|0;
        __THREW__ = 0;
        invoke_viii($303|0,($299|0),($9|0),($13|0));
        $304 = __THREW__; __THREW__ = 0;
        $305 = $304&1;
        if ($305) {
         break;
        }
        $306 = ($297|0)==($295|0);
        if ($306) {
         break L194;
        } else {
         $iter$sroa$0$0$in18$i = $297;
        }
       }
       $620 = ___cxa_find_matching_catch_2()|0;
       $621 = tempRet0;
       $lpad$phi$index = $620;$lpad$phi$index7 = $621;
       break L191;
      }
     } while(0);
     $$idx1$val$val$i$i437 = HEAP32[$285>>2]|0;
     __THREW__ = 0;
     invoke_vi($$idx1$val$val$i$i437|0,($_14$sroa$4$0$copyload$i$i|0));
     $598 = __THREW__; __THREW__ = 0;
     $599 = $598&1;
     if ($599) {
      $628 = ___cxa_find_matching_catch_2()|0;
      $629 = tempRet0;
      $personalityslot$sroa$0$0 = $628;$personalityslot$sroa$8$0 = $629;
      ___resumeException($personalityslot$sroa$0$0|0);
      // unreachable;
     }
     $600 = $_14$sroa$6$0$copyload$i$i;
     $601 = ((($600)) + 4|0);
     $602 = HEAP32[$601>>2]|0;
     $603 = ($602|0)==(0);
     if ($603) {
      STACKTOP = sp;return;
     }
     _free($_14$sroa$4$0$copyload$i$i);
     STACKTOP = sp;return;
    }
   } while(0);
   $$idx1$val$val$i$i492 = HEAP32[$285>>2]|0;
   FUNCTION_TABLE_vi[$$idx1$val$val$i$i492 & 511]($_14$sroa$4$0$copyload$i$i);
   $624 = $_14$sroa$6$0$copyload$i$i;
   $625 = ((($624)) + 4|0);
   $626 = HEAP32[$625>>2]|0;
   $627 = ($626|0)==(0);
   if ($627) {
    $personalityslot$sroa$0$0 = $lpad$phi$index;$personalityslot$sroa$8$0 = $lpad$phi$index7;
    ___resumeException($personalityslot$sroa$0$0|0);
    // unreachable;
   }
   _free($_14$sroa$4$0$copyload$i$i);
   $personalityslot$sroa$0$0 = $lpad$phi$index;$personalityslot$sroa$8$0 = $lpad$phi$index7;
   ___resumeException($personalityslot$sroa$0$0|0);
   // unreachable;
  }
 }
 if ($6) {
  $307 = $$$i & 65535;
  $308 = $$46$i << 16;
  $309 = $308 | $307;
  $310 = $309 << 15;
  $311 = $310 ^ -1;
  $312 = (($309) + ($311))|0;
  $313 = $312 >>> 10;
  $314 = $313 ^ $312;
  $315 = ($314*9)|0;
  $316 = $315 >>> 6;
  $317 = $316 ^ $315;
  $318 = $317 << 11;
  $319 = $318 ^ -1;
  $320 = (($317) + ($319))|0;
  $321 = $320 >>> 16;
  $322 = $321 ^ $320;
  $323 = ((($0)) + 88|0);
  $324 = HEAP32[$323>>2]|0;
  $325 = $322 & $324;
  $$idx14$i$i119 = ((($0)) + 100|0);
  $$idx14$val$i$i120 = HEAP32[$$idx14$i$i119>>2]|0;
  $326 = ($$idx14$val$i$i120>>>0)>($325>>>0);
  L217: do {
   if ($326) {
    $$idx13$i$i123 = ((($0)) + 92|0);
    $$idx13$val$i$i124 = HEAP32[$$idx13$i$i123>>2]|0;
    $328 = (($$idx13$val$i$i124) + ($325<<2)|0);
    $329 = HEAP32[$328>>2]|0;
    $330 = ($329|0)==(-1);
    L219: do {
     if (!($330)) {
      $$idx28$i$i126 = ((($0)) + 84|0);
      $$idx28$val$i$i127 = HEAP32[$$idx28$i$i126>>2]|0;
      $331 = ($$idx28$val$i$i127>>>0)>($329>>>0);
      if (!($331)) {
       __THREW__ = 0;
       invoke_viiiii(214,(12236|0),104,1349,($329|0),($$idx28$val$i$i127|0));
       $332 = __THREW__; __THREW__ = 0;
       break L217;
      }
      $$idx27$i$i131 = ((($0)) + 76|0);
      $$idx27$val$i$i132 = HEAP32[$$idx27$i$i131>>2]|0;
      $$idx21$i$i133 = (((($$idx27$val$i$i132) + (($329*24)|0)|0)) + 8|0);
      $$idx21$val$i$i134 = HEAP32[$$idx21$i$i133>>2]|0;
      $$idx22$i$i135 = (((($$idx27$val$i$i132) + (($329*24)|0)|0)) + 12|0);
      $$idx22$val$i$i136 = HEAP32[$$idx22$i$i135>>2]|0;
      $notlhs$i$i$i137 = ($$idx21$val$i$i134|0)!=($$$i|0);
      $notrhs$i$i$i138 = ($$idx22$val$i$i136|0)!=($$46$i|0);
      $333 = $notlhs$i$i$i137 | $notrhs$i$i$i138;
      L224: do {
       if ($333) {
        $$idx11$i$i139 = ((($0)) + 104|0);
        $$idx12$i$i140 = ((($0)) + 112|0);
        $$idx12$val$i$i141 = HEAP32[$$idx12$i$i140>>2]|0;
        $$idx11$val$i$i142 = HEAP32[$$idx11$i$i139>>2]|0;
        $pos$0$i$i144 = $329;
        while(1) {
         $334 = ($$idx12$val$i$i141>>>0)>($pos$0$i$i144>>>0);
         if (!($334)) {
          label = 140;
          break;
         }
         $336 = (($$idx11$val$i$i142) + ($pos$0$i$i144<<2)|0);
         $337 = HEAP32[$336>>2]|0;
         $338 = ($337|0)==(-1);
         if ($338) {
          break L219;
         }
         $339 = ($$idx28$val$i$i127>>>0)>($337>>>0);
         if (!($339)) {
          label = 143;
          break;
         }
         $$idx17$i$i152 = (((($$idx27$val$i$i132) + (($337*24)|0)|0)) + 8|0);
         $$idx17$val$i$i153 = HEAP32[$$idx17$i$i152>>2]|0;
         $$idx18$i$i154 = (((($$idx27$val$i$i132) + (($337*24)|0)|0)) + 12|0);
         $$idx18$val$i$i155 = HEAP32[$$idx18$i$i154>>2]|0;
         $notlhs$i32$i$i156 = ($$idx17$val$i$i153|0)!=($$$i|0);
         $notrhs$i33$i$i157 = ($$idx18$val$i$i155|0)!=($$46$i|0);
         $341 = $notlhs$i32$i$i156 | $notrhs$i33$i$i157;
         if ($341) {
          $pos$0$i$i144 = $337;
         } else {
          $pos$1$i$i183 = $337;
          break L224;
         }
        }
        if ((label|0) == 140) {
         __THREW__ = 0;
         invoke_viiiii(214,(12236|0),104,1349,($pos$0$i$i144|0),($$idx12$val$i$i141|0));
         $335 = __THREW__; __THREW__ = 0;
         break L217;
        }
        else if ((label|0) == 143) {
         __THREW__ = 0;
         invoke_viiiii(214,(12236|0),104,1349,($337|0),($$idx28$val$i$i127|0));
         $340 = __THREW__; __THREW__ = 0;
         break L217;
        }
       } else {
        $pos$1$i$i183 = $329;
       }
      } while(0);
      $346 = ($$idx28$val$i$i127>>>0)>($pos$1$i$i183>>>0);
      if ($346) {
       STACKTOP = sp;return;
      } else {
       __THREW__ = 0;
       invoke_viiiii(214,(12236|0),104,1358,($pos$1$i$i183|0),($$idx28$val$i$i127|0));
       $347 = __THREW__; __THREW__ = 0;
       break L217;
      }
     }
    } while(0);
    $value$idx$val$val$idx$i166 = ((($0)) + 64|0);
    $value$idx$val$val$idx$val$i167 = HEAP32[$value$idx$val$val$idx$i166>>2]|0;
    $value$idx$val$val$idx15$i168 = ((($0)) + 68|0);
    $value$idx$val$val$idx15$val$i169 = HEAP32[$value$idx$val$val$idx15$i168>>2]|0;
    $$idx1$val$idx$i$i172 = ((($11)) + 8|0);
    $$idx1$val$idx$val$i$i173 = HEAP32[$$idx1$val$idx$i$i172>>2]|0;
    $$idx1$val$idx2$i$i174 = ((($11)) + 12|0);
    $$idx1$val$idx2$val$i$i175 = HEAP32[$$idx1$val$idx2$i$i174>>2]|0;
    $$idx$val$idx$i$i178 = ((($15)) + 8|0);
    $$idx$val$idx$val$i$i179 = HEAP32[$$idx$val$idx$i$i178>>2]|0;
    $$idx$val$idx3$i$i180 = ((($15)) + 12|0);
    $$idx$val$idx3$val$i$i181 = HEAP32[$$idx$val$idx3$i$i180>>2]|0;
    $342 = ((($value$idx$val$val$idx15$val$i169)) + 12|0);
    $343 = HEAP32[$342>>2]|0;
    __THREW__ = 0;
    invoke_viiiiii($343|0,($_14$i108|0),($value$idx$val$val$idx$val$i167|0),($$idx1$val$idx$val$i$i173|0),($$idx1$val$idx2$val$i$i175|0),($$idx$val$idx$val$i$i179|0),($$idx$val$idx3$val$i$i181|0));
    $344 = __THREW__; __THREW__ = 0;
    $345 = $344&1;
    if (!($345)) {
     $348 = HEAP32[$_14$i108>>2]|0;
     $switchtmp$i187 = ($348|0)==(0|0);
     L240: do {
      if (!($switchtmp$i187)) {
       $349 = ((($_14$i108)) + 4|0);
       $350 = HEAP32[$349>>2]|0;
       $351 = ((($0)) + 116|0);
       $352 = HEAP32[$351>>2]|0;
       $353 = ((($0)) + 124|0);
       $354 = HEAP32[$353>>2]|0;
       $355 = ($352>>>0)<($354>>>0);
       L242: do {
        if ($355) {
         label = 173;
        } else {
         $356 = ((($0)) + 120|0);
         $357 = HEAP32[$356>>2]|0;
         $358 = $357 << 1;
         HEAP32[$356>>2] = $358;
         $359 = (+($358>>>0));
         $360 = $359 * 0.69999998807907104;
         $361 = (~~(($360))>>>0);
         HEAP32[$353>>2] = $361;
         $362 = (($358) + -1)|0;
         HEAP32[$323>>2] = $362;
         __THREW__ = 0;
         invoke_vii(211,($newhash$i$i106|0),($358|0));
         $363 = __THREW__; __THREW__ = 0;
         $364 = $363&1;
         if ($364) {
          $411 = ___cxa_find_matching_catch_2()|0;
          $412 = tempRet0;
          $$fca$0$extract4144$i282 = $411;$$fca$1$extract6145$i281 = $412;
          break;
         }
         $365 = HEAP32[$356>>2]|0;
         __THREW__ = 0;
         invoke_vii(211,($newnext$i$i107|0),($365|0));
         $366 = __THREW__; __THREW__ = 0;
         $367 = $366&1;
         L247: do {
          if ($367) {
           $417 = ___cxa_find_matching_catch_2()|0;
           $418 = tempRet0;
           $$fca$0$extract2495$i$i229 = $417;$$fca$1$extract2697$i$i228 = $418;
          } else {
           $368 = HEAP32[$351>>2]|0;
           $369 = ($368|0)==(0);
           L250: do {
            if (!($369)) {
             $$idx57$i$i193 = ((($0)) + 84|0);
             $$idx56$i$i194 = ((($0)) + 76|0);
             $newhash$idx48$i$i196 = ((($newhash$i$i106)) + 8|0);
             $newhash$idx48$val$i$i197 = HEAP32[$newhash$idx48$i$i196>>2]|0;
             $newnext$idx54$i$i198 = ((($newnext$i$i107)) + 8|0);
             $newnext$idx54$val$i$i199 = HEAP32[$newnext$idx54$i$i198>>2]|0;
             $newnext$idx$val$i$i201 = HEAP32[$newnext$i$i107>>2]|0;
             $newhash$idx$val$i$i202 = HEAP32[$newhash$i$i106>>2]|0;
             $397 = 1;$iter$sroa$0$0111$i$i204 = 0;
             while(1) {
              $$idx57$val$i$i205 = HEAP32[$$idx57$i$i193>>2]|0;
              $370 = ($$idx57$val$i$i205>>>0)>($iter$sroa$0$0111$i$i204>>>0);
              if (!($370)) {
               label = 156;
               break;
              }
              $$idx56$val$i$i209 = HEAP32[$$idx56$i$i194>>2]|0;
              $$idx$i27$i210 = (((($$idx56$val$i$i209) + (($iter$sroa$0$0111$i$i204*24)|0)|0)) + 8|0);
              $$idx$val$i28$i211 = HEAP32[$$idx$i27$i210>>2]|0;
              $$idx55$i$i212 = (((($$idx56$val$i$i209) + (($iter$sroa$0$0111$i$i204*24)|0)|0)) + 12|0);
              $$idx55$val$i$i213 = HEAP32[$$idx55$i$i212>>2]|0;
              $372 = $$idx$val$i28$i211 & 65535;
              $373 = $$idx55$val$i$i213 << 16;
              $374 = $373 | $372;
              $375 = $374 << 15;
              $376 = $375 ^ -1;
              $377 = (($374) + ($376))|0;
              $378 = $377 >>> 10;
              $379 = $378 ^ $377;
              $380 = ($379*9)|0;
              $381 = $380 >>> 6;
              $382 = $381 ^ $380;
              $383 = $382 << 11;
              $384 = $383 ^ -1;
              $385 = (($382) + ($384))|0;
              $386 = $385 >>> 16;
              $387 = $386 ^ $385;
              $388 = HEAP32[$323>>2]|0;
              $389 = $387 & $388;
              $390 = ($newhash$idx48$val$i$i197>>>0)>($389>>>0);
              if (!($390)) {
               label = 158;
               break;
              }
              $392 = ($newnext$idx54$val$i$i199>>>0)>($iter$sroa$0$0111$i$i204>>>0);
              if (!($392)) {
               label = 160;
               break;
              }
              $394 = (($newhash$idx$val$i$i202) + ($389<<2)|0);
              $395 = HEAP32[$394>>2]|0;
              $396 = (($newnext$idx$val$i$i201) + ($iter$sroa$0$0111$i$i204<<2)|0);
              HEAP32[$396>>2] = $395;
              HEAP32[$394>>2] = $iter$sroa$0$0111$i$i204;
              $398 = ($397>>>0)<($368>>>0);
              $399 = (($397) + 1)|0;
              if ($398) {
               $iter$sroa$0$0111$i$i204$phi = $397;$397 = $399;$iter$sroa$0$0111$i$i204 = $iter$sroa$0$0111$i$i204$phi;
              } else {
               break L250;
              }
             }
             if ((label|0) == 156) {
              __THREW__ = 0;
              invoke_viiiii(214,(12236|0),104,1349,($iter$sroa$0$0111$i$i204|0),($$idx57$val$i$i205|0));
              $371 = __THREW__; __THREW__ = 0;
             }
             else if ((label|0) == 158) {
              __THREW__ = 0;
              invoke_viiiii(214,(12236|0),104,1349,($389|0),($newhash$idx48$val$i$i197|0));
              $391 = __THREW__; __THREW__ = 0;
             }
             else if ((label|0) == 160) {
              __THREW__ = 0;
              invoke_viiiii(214,(12236|0),104,1358,($iter$sroa$0$0111$i$i204|0),($newnext$idx54$val$i$i199|0));
              $393 = __THREW__; __THREW__ = 0;
             }
             $413 = ___cxa_find_matching_catch_2()|0;
             $414 = tempRet0;
             $415 = ((($newnext$i$i107)) + 4|0);
             $416 = HEAP32[$415>>2]|0;
             $not$$i$i$i$i$i$i239 = ($416|0)==(0);
             if ($not$$i$i$i$i$i$i239) {
              $$fca$0$extract2495$i$i229 = $413;$$fca$1$extract2697$i$i228 = $414;
              break L247;
             }
             _free($newnext$idx$val$i$i201);
             $$fca$0$extract2495$i$i229 = $413;$$fca$1$extract2697$i$i228 = $414;
             break L247;
            }
           } while(0);
           $400 = ((($0)) + 92|0);
           ;HEAP32[$t$i71$i$i104>>2]=HEAP32[$newhash$i$i106>>2]|0;HEAP32[$t$i71$i$i104+4>>2]=HEAP32[$newhash$i$i106+4>>2]|0;HEAP32[$t$i71$i$i104+8>>2]=HEAP32[$newhash$i$i106+8>>2]|0;
           ;HEAP32[$newhash$i$i106>>2]=HEAP32[$400>>2]|0;HEAP32[$newhash$i$i106+4>>2]=HEAP32[$400+4>>2]|0;HEAP32[$newhash$i$i106+8>>2]=HEAP32[$400+8>>2]|0;
           ;HEAP32[$400>>2]=HEAP32[$t$i71$i$i104>>2]|0;HEAP32[$400+4>>2]=HEAP32[$t$i71$i$i104+4>>2]|0;HEAP32[$400+8>>2]=HEAP32[$t$i71$i$i104+8>>2]|0;
           $401 = ((($0)) + 104|0);
           ;HEAP32[$t$i$i$i105>>2]=HEAP32[$newnext$i$i107>>2]|0;HEAP32[$t$i$i$i105+4>>2]=HEAP32[$newnext$i$i107+4>>2]|0;HEAP32[$t$i$i$i105+8>>2]=HEAP32[$newnext$i$i107+8>>2]|0;
           ;HEAP32[$newnext$i$i107>>2]=HEAP32[$401>>2]|0;HEAP32[$newnext$i$i107+4>>2]=HEAP32[$401+4>>2]|0;HEAP32[$newnext$i$i107+8>>2]=HEAP32[$401+8>>2]|0;
           ;HEAP32[$401>>2]=HEAP32[$t$i$i$i105>>2]|0;HEAP32[$401+4>>2]=HEAP32[$t$i$i$i105+4>>2]|0;HEAP32[$401+8>>2]=HEAP32[$t$i$i$i105+8>>2]|0;
           $402 = ((($newnext$i$i107)) + 4|0);
           $403 = HEAP32[$402>>2]|0;
           $not$$i$i$i$i64$i$i221 = ($403|0)==(0);
           if (!($not$$i$i$i$i64$i$i221)) {
            $404 = HEAP32[$newnext$i$i107>>2]|0;
            _free($404);
           }
           $405 = ((($newhash$i$i106)) + 4|0);
           $406 = HEAP32[$405>>2]|0;
           $not$$i$i$i$i61$i$i224 = ($406|0)==(0);
           if (!($not$$i$i$i$i61$i$i224)) {
            $407 = HEAP32[$newhash$i$i106>>2]|0;
            _free($407);
           }
           label = 173;
           break L242;
          }
         } while(0);
         $408 = ((($newhash$i$i106)) + 4|0);
         $409 = HEAP32[$408>>2]|0;
         $not$$i$i$i$i58$i$i230 = ($409|0)==(0);
         if ($not$$i$i$i$i58$i$i230) {
          $$fca$0$extract4144$i282 = $$fca$0$extract2495$i$i229;$$fca$1$extract6145$i281 = $$fca$1$extract2697$i$i228;
         } else {
          $410 = HEAP32[$newhash$i$i106>>2]|0;
          _free($410);
          $$fca$0$extract4144$i282 = $$fca$0$extract2495$i$i229;$$fca$1$extract6145$i281 = $$fca$1$extract2697$i$i228;
         }
        }
       } while(0);
       if ((label|0) == 173) {
        $419 = HEAP32[$323>>2]|0;
        $420 = $419 & $322;
        $$idx5$val$i246 = HEAP32[$$idx14$i$i119>>2]|0;
        $421 = ($$idx5$val$i246>>>0)>($420>>>0);
        do {
         if ($421) {
          $423 = HEAP32[$351>>2]|0;
          $$idx9$i250 = ((($0)) + 112|0);
          $$idx9$val$i251 = HEAP32[$$idx9$i250>>2]|0;
          $424 = ($$idx9$val$i251>>>0)>($423>>>0);
          if (!($424)) {
           __THREW__ = 0;
           invoke_viiiii(214,(12236|0),104,1358,($423|0),($$idx9$val$i251|0));
           $425 = __THREW__; __THREW__ = 0;
           break;
          }
          $$idx8$i255 = ((($0)) + 104|0);
          $$idx8$val$i256 = HEAP32[$$idx8$i255>>2]|0;
          $$idx$val$i257 = HEAP32[$$idx13$i$i123>>2]|0;
          $426 = (($$idx$val$i257) + ($420<<2)|0);
          $427 = HEAP32[$426>>2]|0;
          $428 = (($$idx8$val$i256) + ($423<<2)|0);
          HEAP32[$428>>2] = $427;
          $$idx7$val$i258 = HEAP32[$$idx14$i$i119>>2]|0;
          $429 = ($$idx7$val$i258>>>0)>($420>>>0);
          if (!($429)) {
           __THREW__ = 0;
           invoke_viiiii(214,(12236|0),104,1358,($420|0),($$idx7$val$i258|0));
           $430 = __THREW__; __THREW__ = 0;
           break;
          }
          $$idx6$val$i262 = HEAP32[$$idx13$i$i123>>2]|0;
          $431 = HEAP32[$351>>2]|0;
          $432 = (($$idx6$val$i262) + ($420<<2)|0);
          HEAP32[$432>>2] = $431;
          $433 = ((($0)) + 76|0);
          $434 = $350;
          $435 = ((($0)) + 84|0);
          $436 = HEAP32[$435>>2]|0;
          $$idx$i36$i263 = ((($0)) + 80|0);
          $$idx$val$i37$i264 = HEAP32[$$idx$i36$i263>>2]|0;
          $437 = ($436|0)==($$idx$val$i37$i264|0);
          do {
           if ($437) {
            __THREW__ = 0;
            invoke_vi(240,($433|0));
            $438 = __THREW__; __THREW__ = 0;
            $439 = $438&1;
            if (!($439)) {
             $$pre$i$i267 = HEAP32[$435>>2]|0;
             $449 = $$pre$i$i267;
             label = 185;
             break;
            }
            $440 = ___cxa_find_matching_catch_2()|0;
            $441 = tempRet0;
            $$idx1$val$val$i$i$i$i269 = HEAP32[$434>>2]|0;
            __THREW__ = 0;
            invoke_vi($$idx1$val$val$i$i$i$i269|0,($348|0));
            $442 = __THREW__; __THREW__ = 0;
            $443 = $442&1;
            if ($443) {
             break;
            }
            $444 = ((($434)) + 4|0);
            $445 = HEAP32[$444>>2]|0;
            $446 = ($445|0)==(0);
            if (!($446)) {
             _free($348);
            }
            $personalityslot$sroa$0$0$i159 = $440;$personalityslot$sroa$5$0$i158 = $441;
            ___resumeException($personalityslot$sroa$0$0$i159|0);
            // unreachable;
           } else {
            $449 = $436;
            label = 185;
           }
          } while(0);
          if ((label|0) == 185) {
           $447 = HEAP32[$433>>2]|0;
           $448 = (($447) + (($449*24)|0)|0);
           $450 = $448;
           $451 = $450;
           HEAP32[$451>>2] = $$unpack;
           $452 = (($450) + 4)|0;
           $453 = $452;
           HEAP32[$453>>2] = $$unpack79;
           $value$sroa$0$i$sroa$4$0$_22$sroa$0$0$$sroa_cast$i$sroa_idx126$i273 = (((($447) + (($449*24)|0)|0)) + 8|0);
           HEAP32[$value$sroa$0$i$sroa$4$0$_22$sroa$0$0$$sroa_cast$i$sroa_idx126$i273>>2] = $$$i;
           $value$sroa$0$i$sroa$5$0$_22$sroa$0$0$$sroa_cast$i$sroa_idx128$i274 = (((($447) + (($449*24)|0)|0)) + 12|0);
           HEAP32[$value$sroa$0$i$sroa$5$0$_22$sroa$0$0$$sroa_cast$i$sroa_idx128$i274>>2] = $$46$i;
           $_22$sroa$4$0$$sroa_idx24$i$i275 = (((($447) + (($449*24)|0)|0)) + 16|0);
           HEAP32[$_22$sroa$4$0$$sroa_idx24$i$i275>>2] = $348;
           $_22$sroa$5$0$$sroa_idx26$i$i276 = (((($447) + (($449*24)|0)|0)) + 20|0);
           HEAP32[$_22$sroa$5$0$$sroa_idx26$i$i276>>2] = $434;
           $454 = HEAP32[$435>>2]|0;
           $455 = (($454) + 1)|0;
           HEAP32[$435>>2] = $455;
           $456 = HEAP32[$351>>2]|0;
           $457 = (($456) + 1)|0;
           HEAP32[$351>>2] = $457;
           $458 = ($455>>>0)>($456>>>0);
           if ($458) {
            break L240;
           }
           __THREW__ = 0;
           invoke_viiiii(214,(12236|0),104,1358,($456|0),($455|0));
           $459 = __THREW__; __THREW__ = 0;
          }
          $469 = ___cxa_find_matching_catch_2()|0;
          $470 = tempRet0;
          $personalityslot$sroa$0$0$i159 = $469;$personalityslot$sroa$5$0$i158 = $470;
          ___resumeException($personalityslot$sroa$0$0$i159|0);
          // unreachable;
         } else {
          __THREW__ = 0;
          invoke_viiiii(214,(12236|0),104,1349,($420|0),($$idx5$val$i246|0));
          $422 = __THREW__; __THREW__ = 0;
         }
        } while(0);
        $467 = ___cxa_find_matching_catch_2()|0;
        $468 = tempRet0;
        $$fca$0$extract4144$i282 = $467;$$fca$1$extract6145$i281 = $468;
       }
       $460 = $350;
       $$idx1$val$val$i$i283 = HEAP32[$460>>2]|0;
       FUNCTION_TABLE_vi[$$idx1$val$val$i$i283 & 511]($348);
       $461 = $350;
       $462 = ((($461)) + 4|0);
       $463 = HEAP32[$462>>2]|0;
       $464 = ($463|0)==(0);
       if ($464) {
        $personalityslot$sroa$0$0$i159 = $$fca$0$extract4144$i282;$personalityslot$sroa$5$0$i158 = $$fca$1$extract6145$i281;
        ___resumeException($personalityslot$sroa$0$0$i159|0);
        // unreachable;
       }
       _free($348);
       $personalityslot$sroa$0$0$i159 = $$fca$0$extract4144$i282;$personalityslot$sroa$5$0$i158 = $$fca$1$extract6145$i281;
       ___resumeException($personalityslot$sroa$0$0$i159|0);
       // unreachable;
      }
     } while(0);
     STACKTOP = sp;return;
    }
   } else {
    __THREW__ = 0;
    invoke_viiiii(214,(12236|0),104,1349,($325|0),($$idx14$val$i$i120|0));
    $327 = __THREW__; __THREW__ = 0;
   }
  } while(0);
  $465 = ___cxa_find_matching_catch_2()|0;
  $466 = tempRet0;
  $personalityslot$sroa$0$0$i159 = $465;$personalityslot$sroa$5$0$i158 = $466;
  ___resumeException($personalityslot$sroa$0$0$i159|0);
  // unreachable;
 }
 $471 = $$$i & 65535;
 $472 = $$46$i << 16;
 $473 = $472 | $471;
 $474 = $473 << 15;
 $475 = $474 ^ -1;
 $476 = (($473) + ($475))|0;
 $477 = $476 >>> 10;
 $478 = $477 ^ $476;
 $479 = ($478*9)|0;
 $480 = $479 >>> 6;
 $481 = $480 ^ $479;
 $482 = $481 << 11;
 $483 = $482 ^ -1;
 $484 = (($481) + ($483))|0;
 $485 = $484 >>> 16;
 $486 = $485 ^ $484;
 $487 = ((($0)) + 88|0);
 $488 = HEAP32[$487>>2]|0;
 $489 = $486 & $488;
 $$idx51$i304 = ((($0)) + 92|0);
 $$idx52$i305 = ((($0)) + 100|0);
 $$idx52$val$i306 = HEAP32[$$idx52$i305>>2]|0;
 $490 = ($$idx52$val$i306>>>0)>($489>>>0);
 if (!($490)) {
  __ZN4core9panicking18panic_bounds_check17hd14a5808e41829e9E(12236,104,1349,$489,$$idx52$val$i306);
  // unreachable;
 }
 $$idx51$val$i308 = HEAP32[$$idx51$i304>>2]|0;
 $491 = (($$idx51$val$i308) + ($489<<2)|0);
 $492 = HEAP32[$491>>2]|0;
 $493 = ($492|0)==(-1);
 if ($493) {
  STACKTOP = sp;return;
 }
 $$idx85$i310 = ((($0)) + 76|0);
 $$idx86$i311 = ((($0)) + 84|0);
 $$idx86$val$i312 = HEAP32[$$idx86$i311>>2]|0;
 $494 = ($$idx86$val$i312>>>0)>($492>>>0);
 if (!($494)) {
  __ZN4core9panicking18panic_bounds_check17hd14a5808e41829e9E(12236,104,1349,$492,$$idx86$val$i312);
  // unreachable;
 }
 $$idx85$val$i315 = HEAP32[$$idx85$i310>>2]|0;
 $$idx77$i316 = (((($$idx85$val$i315) + (($492*24)|0)|0)) + 8|0);
 $$idx77$val$i317 = HEAP32[$$idx77$i316>>2]|0;
 $$idx78$i318 = (((($$idx85$val$i315) + (($492*24)|0)|0)) + 12|0);
 $$idx78$val$i319 = HEAP32[$$idx78$i318>>2]|0;
 $notlhs$i$i320 = ($$idx77$val$i317|0)!=($$$i|0);
 $notrhs$i$i321 = ($$idx78$val$i319|0)!=($$46$i|0);
 $495 = $notlhs$i$i320 | $notrhs$i$i321;
 $$idx47$i322 = ((($0)) + 104|0);
 $$idx48$i323 = ((($0)) + 112|0);
 $$idx48$val$i324 = HEAP32[$$idx48$i323>>2]|0;
 do {
  if ($495) {
   $$idx47$val$i325 = HEAP32[$$idx47$i322>>2]|0;
   $o$0$i336 = $492;
   while(1) {
    $501 = ($$idx48$val$i324>>>0)>($o$0$i336>>>0);
    if (!($501)) {
     label = 207;
     break;
    }
    $502 = (($$idx47$val$i325) + ($o$0$i336<<2)|0);
    $503 = HEAP32[$502>>2]|0;
    $504 = ($503|0)==(-1);
    if ($504) {
     label = 11;
     break;
    }
    $505 = ($$idx86$val$i312>>>0)>($503>>>0);
    if (!($505)) {
     label = 210;
     break;
    }
    $$idx73$i342 = (((($$idx85$val$i315) + (($503*24)|0)|0)) + 8|0);
    $$idx73$val$i343 = HEAP32[$$idx73$i342>>2]|0;
    $$idx74$i344 = (((($$idx85$val$i315) + (($503*24)|0)|0)) + 12|0);
    $$idx74$val$i345 = HEAP32[$$idx74$i344>>2]|0;
    $notlhs$i99$i346 = ($$idx73$val$i343|0)!=($$$i|0);
    $notrhs$i100$i347 = ($$idx74$val$i345|0)!=($$46$i|0);
    $506 = $notlhs$i99$i346 | $notrhs$i100$i347;
    if ($506) {
     $o$0$i336 = $503;
    } else {
     label = 212;
     break;
    }
   }
   if ((label|0) == 11) {
    STACKTOP = sp;return;
   }
   else if ((label|0) == 207) {
    __ZN4core9panicking18panic_bounds_check17hd14a5808e41829e9E(12236,104,1349,$o$0$i336,$$idx48$val$i324);
    // unreachable;
   }
   else if ((label|0) == 210) {
    __ZN4core9panicking18panic_bounds_check17hd14a5808e41829e9E(12236,104,1349,$503,$$idx86$val$i312);
    // unreachable;
   }
   else if ((label|0) == 212) {
    $507 = ($$idx48$val$i324>>>0)>($503>>>0);
    if (!($507)) {
     __ZN4core9panicking18panic_bounds_check17hd14a5808e41829e9E(12236,104,1349,$503,$$idx48$val$i324);
     // unreachable;
    }
    $508 = (($$idx47$val$i325) + ($503<<2)|0);
    $509 = HEAP32[$508>>2]|0;
    HEAP32[$502>>2] = $509;
    $$idx62$val$i351 = HEAP32[$$idx48$i323>>2]|0;
    $510 = ($$idx62$val$i351>>>0)>($503>>>0);
    if ($510) {
     $$idx61$val$i354 = HEAP32[$$idx47$i322>>2]|0;
     $511 = (($$idx61$val$i354) + ($503<<2)|0);
     HEAP32[$511>>2] = -1;
     $obji$0$i356 = $503;
     break;
    } else {
     __ZN4core9panicking18panic_bounds_check17hd14a5808e41829e9E(12236,104,1358,$503,$$idx62$val$i351);
     // unreachable;
    }
   }
  } else {
   $496 = ($$idx48$val$i324>>>0)>($492>>>0);
   if (!($496)) {
    __ZN4core9panicking18panic_bounds_check17hd14a5808e41829e9E(12236,104,1349,$492,$$idx48$val$i324);
    // unreachable;
   }
   $$idx49$val$i330 = HEAP32[$$idx47$i322>>2]|0;
   $497 = (($$idx49$val$i330) + ($492<<2)|0);
   $498 = HEAP32[$497>>2]|0;
   HEAP32[$491>>2] = $498;
   $$idx66$val$i331 = HEAP32[$$idx48$i323>>2]|0;
   $499 = ($$idx66$val$i331>>>0)>($492>>>0);
   if ($499) {
    $$idx65$val$i334 = HEAP32[$$idx47$i322>>2]|0;
    $500 = (($$idx65$val$i334) + ($492<<2)|0);
    HEAP32[$500>>2] = -1;
    $obji$0$i356 = $492;
    break;
   } else {
    __ZN4core9panicking18panic_bounds_check17hd14a5808e41829e9E(12236,104,1358,$492,$$idx66$val$i331);
    // unreachable;
   }
  }
 } while(0);
 $512 = ((($0)) + 116|0);
 $513 = HEAP32[$512>>2]|0;
 $514 = (($513) + -1)|0;
 HEAP32[$512>>2] = $514;
 $$idx$val$i$i358 = HEAP32[$$idx86$i311>>2]|0;
 $515 = HEAP32[$$idx85$i310>>2]|0;
 $516 = (($$idx$val$i$i358) + -1)|0;
 $517 = ($$idx$val$i$i358>>>0)>($obji$0$i356>>>0);
 if (!($517)) {
  __ZN4core9panicking18panic_bounds_check17hd14a5808e41829e9E(11401,99,433,$obji$0$i356,$$idx$val$i$i358);
  // unreachable;
 }
 $518 = ($$idx$val$i$i358|0)==(0);
 if ($518) {
  __ZN4core9panicking18panic_bounds_check17hd14a5808e41829e9E(11401,99,434,$516,0);
  // unreachable;
 }
 $519 = (($515) + (($obji$0$i356*24)|0)|0);
 $520 = (($515) + (($516*24)|0)|0);
 ;HEAP32[$tmp$i$i$i$i$i300>>2]=HEAP32[$519>>2]|0;HEAP32[$tmp$i$i$i$i$i300+4>>2]=HEAP32[$519+4>>2]|0;HEAP32[$tmp$i$i$i$i$i300+8>>2]=HEAP32[$519+8>>2]|0;HEAP32[$tmp$i$i$i$i$i300+12>>2]=HEAP32[$519+12>>2]|0;HEAP32[$tmp$i$i$i$i$i300+16>>2]=HEAP32[$519+16>>2]|0;HEAP32[$tmp$i$i$i$i$i300+20>>2]=HEAP32[$519+20>>2]|0;
 _memmove(($519|0),($520|0),24)|0;
 ;HEAP32[$520>>2]=HEAP32[$tmp$i$i$i$i$i300>>2]|0;HEAP32[$520+4>>2]=HEAP32[$tmp$i$i$i$i$i300+4>>2]|0;HEAP32[$520+8>>2]=HEAP32[$tmp$i$i$i$i$i300+8>>2]|0;HEAP32[$520+12>>2]=HEAP32[$tmp$i$i$i$i$i300+12>>2]|0;HEAP32[$520+16>>2]=HEAP32[$tmp$i$i$i$i$i300+16>>2]|0;HEAP32[$520+20>>2]=HEAP32[$tmp$i$i$i$i$i300+20>>2]|0;
 $521 = HEAP32[$$idx86$i311>>2]|0;
 $522 = ($521|0)==(0);
 if ($522) {
  __ZN4core9panicking5panic17ha7507e8e32961bfeE(6500);
  // unreachable;
 }
 $523 = (($521) + -1)|0;
 HEAP32[$$idx86$i311>>2] = $523;
 $524 = HEAP32[$$idx85$i310>>2]|0;
 $_14$sroa$4$0$$sroa_idx10$i$i366 = (((($524) + (($523*24)|0)|0)) + 16|0);
 $_14$sroa$4$0$copyload$i$i367 = HEAP32[$_14$sroa$4$0$$sroa_idx10$i$i366>>2]|0;
 $_14$sroa$6$0$$sroa_idx12$i$i368 = (((($524) + (($523*24)|0)|0)) + 20|0);
 $_14$sroa$6$0$copyload$i$i370 = HEAP32[$_14$sroa$6$0$$sroa_idx12$i$i368>>2]|0;
 $switch3tmp$i$i$i372 = ($_14$sroa$4$0$copyload$i$i367|0)==(0|0);
 if ($switch3tmp$i$i$i372) {
  __ZN4core9panicking5panic17ha7507e8e32961bfeE(6500);
  // unreachable;
 }
 $526 = HEAP32[$512>>2]|0;
 $527 = ($obji$0$i356|0)==($526|0);
 L357: do {
  if (!($527)) {
   $528 = ($523>>>0)>($obji$0$i356>>>0);
   L359: do {
    if ($528) {
     $$idx71$i379 = (((($524) + (($obji$0$i356*24)|0)|0)) + 8|0);
     $$idx71$val$i380 = HEAP32[$$idx71$i379>>2]|0;
     $$idx72$i381 = (((($524) + (($obji$0$i356*24)|0)|0)) + 12|0);
     $$idx72$val$i382 = HEAP32[$$idx72$i381>>2]|0;
     $530 = $$idx71$val$i380 & 65535;
     $531 = $$idx72$val$i382 << 16;
     $532 = $531 | $530;
     $533 = $532 << 15;
     $534 = $533 ^ -1;
     $535 = (($532) + ($534))|0;
     $536 = $535 >>> 10;
     $537 = $536 ^ $535;
     $538 = ($537*9)|0;
     $539 = $538 >>> 6;
     $540 = $539 ^ $538;
     $541 = $540 << 11;
     $542 = $541 ^ -1;
     $543 = (($540) + ($542))|0;
     $544 = $543 >>> 16;
     $545 = $544 ^ $543;
     $546 = HEAP32[$487>>2]|0;
     $547 = $545 & $546;
     $$idx40$val$i383 = HEAP32[$$idx52$i305>>2]|0;
     $548 = ($$idx40$val$i383>>>0)>($547>>>0);
     if (!($548)) {
      __THREW__ = 0;
      invoke_viiiii(214,(12236|0),104,1349,($547|0),($$idx40$val$i383|0));
      $549 = __THREW__; __THREW__ = 0;
      break;
     }
     $$idx39$val$i387 = HEAP32[$$idx51$i304>>2]|0;
     $550 = (($$idx39$val$i387) + ($547<<2)|0);
     $551 = HEAP32[$550>>2]|0;
     $552 = ($551|0)==($526|0);
     do {
      if ($552) {
       HEAP32[$550>>2] = $obji$0$i356;
      } else {
       $$idx36$val$i389 = HEAP32[$$idx48$i323>>2]|0;
       $$idx35$val$i390 = HEAP32[$$idx47$i322>>2]|0;
       $no$0$i393 = $551;
       while(1) {
        $553 = ($$idx36$val$i389>>>0)>($no$0$i393>>>0);
        if (!($553)) {
         label = 234;
         break;
        }
        $555 = (($$idx35$val$i390) + ($no$0$i393<<2)|0);
        $556 = HEAP32[$555>>2]|0;
        $557 = ($556|0)==($526|0);
        if ($557) {
         label = 236;
         break;
        } else {
         $no$0$i393 = $556;
        }
       }
       if ((label|0) == 234) {
        __THREW__ = 0;
        invoke_viiiii(214,(12236|0),104,1349,($no$0$i393|0),($$idx36$val$i389|0));
        $554 = __THREW__; __THREW__ = 0;
        break L359;
       }
       else if ((label|0) == 236) {
        HEAP32[$555>>2] = $obji$0$i356;
        break;
       }
      }
     } while(0);
     $558 = HEAP32[$512>>2]|0;
     $$idx31$val$i399 = HEAP32[$$idx47$i322>>2]|0;
     $$idx32$val$i400 = HEAP32[$$idx48$i323>>2]|0;
     $559 = ($$idx32$val$i400>>>0)>($558>>>0);
     if (!($559)) {
      __THREW__ = 0;
      invoke_viiiii(214,(12236|0),104,1349,($558|0),($$idx32$val$i400|0));
      $560 = __THREW__; __THREW__ = 0;
      break;
     }
     $561 = ($$idx32$val$i400>>>0)>($obji$0$i356>>>0);
     if (!($561)) {
      __THREW__ = 0;
      invoke_viiiii(214,(12236|0),104,1358,($obji$0$i356|0),($$idx32$val$i400|0));
      $562 = __THREW__; __THREW__ = 0;
      break;
     }
     $563 = (($$idx31$val$i399) + ($558<<2)|0);
     $564 = HEAP32[$563>>2]|0;
     $565 = (($$idx31$val$i399) + ($obji$0$i356<<2)|0);
     HEAP32[$565>>2] = $564;
     $566 = HEAP32[$512>>2]|0;
     $$idx54$val$i407 = HEAP32[$$idx48$i323>>2]|0;
     $567 = ($$idx54$val$i407>>>0)>($566>>>0);
     if ($567) {
      $$idx53$val$i411 = HEAP32[$$idx47$i322>>2]|0;
      $575 = (($$idx53$val$i411) + ($566<<2)|0);
      HEAP32[$575>>2] = -1;
      break L357;
     } else {
      __THREW__ = 0;
      invoke_viiiii(214,(12236|0),104,1358,($566|0),($$idx54$val$i407|0));
      $568 = __THREW__; __THREW__ = 0;
      break;
     }
    } else {
     __THREW__ = 0;
     invoke_viiiii(214,(12236|0),104,1349,($obji$0$i356|0),($523|0));
     $529 = __THREW__; __THREW__ = 0;
    }
   } while(0);
   $525 = ___cxa_find_matching_catch_2()|0;
   $569 = tempRet0;
   $570 = $_14$sroa$6$0$copyload$i$i370;
   $$idx1$val$val$i$i$i419 = HEAP32[$570>>2]|0;
   FUNCTION_TABLE_vi[$$idx1$val$val$i$i$i419 & 511]($_14$sroa$4$0$copyload$i$i367);
   $571 = $_14$sroa$6$0$copyload$i$i370;
   $572 = ((($571)) + 4|0);
   $573 = HEAP32[$572>>2]|0;
   $574 = ($573|0)==(0);
   if ($574) {
    ___resumeException($525|0);
    // unreachable;
   }
   _free($_14$sroa$4$0$copyload$i$i367);
   ___resumeException($525|0);
   // unreachable;
  }
 } while(0);
 $576 = $_14$sroa$6$0$copyload$i$i370;
 $577 = ((($576)) + 16|0);
 $578 = HEAP32[$577>>2]|0;
 __THREW__ = 0;
 $579 = (invoke_ii($578|0,($_14$sroa$4$0$copyload$i$i367|0))|0);
 $580 = __THREW__; __THREW__ = 0;
 $581 = $580&1;
 L390: do {
  if ($581) {
   $612 = ___cxa_find_matching_catch_2()|0;
   $613 = tempRet0;
   $lpad$phi665$index = $612;$lpad$phi665$index2 = $613;
  } else {
   $582 = ($579<<24>>24)==(2);
   L393: do {
    if (!($582)) {
     $583 = HEAP32[$2>>2]|0;
     $584 = ((($2)) + 8|0);
     $585 = HEAP32[$584>>2]|0;
     $586 = (($583) + (($585*20)|0)|0);
     $587 = ($585|0)==(0);
     if (!($587)) {
      $iter$sroa$0$0$in18$i423 = $583;
      while(1) {
       $588 = ((($iter$sroa$0$0$in18$i423)) + 20|0);
       $589 = ((($iter$sroa$0$0$in18$i423)) + 12|0);
       $590 = HEAP32[$589>>2]|0;
       $591 = ((($iter$sroa$0$0$in18$i423)) + 16|0);
       $592 = HEAP32[$591>>2]|0;
       $593 = ((($592)) + 12|0);
       $594 = HEAP32[$593>>2]|0;
       __THREW__ = 0;
       invoke_viiiii($594|0,($590|0),($9|0),($13|0),($579|0),2);
       $595 = __THREW__; __THREW__ = 0;
       $596 = $595&1;
       if ($596) {
        break;
       }
       $597 = ($588|0)==($586|0);
       if ($597) {
        break L393;
       } else {
        $iter$sroa$0$0$in18$i423 = $588;
       }
      }
      $610 = ___cxa_find_matching_catch_2()|0;
      $611 = tempRet0;
      $lpad$phi665$index = $610;$lpad$phi665$index2 = $611;
      break L390;
     }
    }
   } while(0);
   $$idx1$val$val$i$i467 = HEAP32[$576>>2]|0;
   __THREW__ = 0;
   invoke_vi($$idx1$val$val$i$i467|0,($_14$sroa$4$0$copyload$i$i367|0));
   $604 = __THREW__; __THREW__ = 0;
   $605 = $604&1;
   if ($605) {
    $618 = ___cxa_find_matching_catch_2()|0;
    $619 = tempRet0;
    $personalityslot$sroa$0$0 = $618;$personalityslot$sroa$8$0 = $619;
    ___resumeException($personalityslot$sroa$0$0|0);
    // unreachable;
   }
   $606 = $_14$sroa$6$0$copyload$i$i370;
   $607 = ((($606)) + 4|0);
   $608 = HEAP32[$607>>2]|0;
   $609 = ($608|0)==(0);
   if ($609) {
    STACKTOP = sp;return;
   }
   _free($_14$sroa$4$0$copyload$i$i367);
   STACKTOP = sp;return;
  }
 } while(0);
 $$idx1$val$val$i$i487 = HEAP32[$576>>2]|0;
 FUNCTION_TABLE_vi[$$idx1$val$val$i$i487 & 511]($_14$sroa$4$0$copyload$i$i367);
 $614 = $_14$sroa$6$0$copyload$i$i370;
 $615 = ((($614)) + 4|0);
 $616 = HEAP32[$615>>2]|0;
 $617 = ($616|0)==(0);
 if ($617) {
  $personalityslot$sroa$0$0 = $lpad$phi665$index;$personalityslot$sroa$8$0 = $lpad$phi665$index2;
  ___resumeException($personalityslot$sroa$0$0|0);
  // unreachable;
 }
 _free($_14$sroa$4$0$copyload$i$i367);
 $personalityslot$sroa$0$0 = $lpad$phi665$index;$personalityslot$sroa$8$0 = $lpad$phi665$index2;
 ___resumeException($personalityslot$sroa$0$0|0);
 // unreachable;
}
function __ZN197__LT_ncollide_pipeline__narrow_phase__default_narrow_phase__DefaultNarrowPhase_LT_P_C__u20_M_GT__u20_as_u20_ncollide_pipeline__narrow_phase__narrow_phase__NarrowPhase_LT_P_C__u20_M_C__u20_T_GT__GT_6update17h5a79a291d46213aaE($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$idx$i = 0, $$idx$i$i$i73 = 0, $$idx$i$i$i87 = 0, $$idx$i69 = 0, $$idx$val = 0, $$idx$val$i = 0, $$idx$val$i$i$i74 = 0, $$idx$val$i$i$i88 = 0, $$idx$val$i70 = 0, $$idx$val$idx = 0, $$idx$val$idx$val = 0, $$idx$val$idx68 = 0, $$idx$val$idx68$val = 0, $$idx1$i = 0, $$idx1$i71 = 0, $$idx1$val$i = 0, $$idx1$val$i$i$i76 = 0, $$idx1$val$i$i$i90 = 0, $$idx1$val$i72 = 0, $$idx62$val = 0;
 var $$idx62$val$idx = 0, $$idx62$val$idx$val = 0, $$idx62$val$idx67 = 0, $$idx62$val$idx67$val = 0, $$idx63$val = 0, $$idx63$val$idx = 0, $$idx63$val$idx$val = 0, $$idx63$val$idx66 = 0, $$idx63$val$idx66$val = 0, $$idx64$val = 0, $$idx64$val$idx = 0, $$idx64$val$idx$val = 0, $$idx64$val$idx65 = 0, $$idx64$val$idx65$val = 0, $$unpack = 0, $$unpack56 = 0, $$unpack59 = 0, $$unpack60 = 0, $10 = 0, $100 = 0;
 var $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0.0, $116 = 0, $117 = 0.0, $118 = 0.0, $119 = 0;
 var $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0;
 var $138 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0;
 var $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0.0, $47 = 0, $48 = 0.0, $49 = 0.0, $5 = 0, $50 = 0, $51 = 0;
 var $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0;
 var $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0;
 var $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $iter$sroa$0$0$in18$i = 0, $iter$sroa$0$0$in18$i107 = 0, $iter$sroa$0$0$in18$i85 = 0, $or$cond$i = 0, $or$cond$i103 = 0, $or$cond$i79 = 0, $or$cond$i93 = 0, $switch2tmp$i$i = 0;
 var $switch2tmp$i$i102 = 0, $switch2tmp$i$i78 = 0, $switch2tmp$i$i92 = 0, $switch8tmp = 0, $switchtmp = 0, $switchtmp$i$i$i = 0, $switchtmp$i$i$i101 = 0, $switchtmp$i$i$i77 = 0, $switchtmp$i$i$i91 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $$idx$i = ((($0)) + 12|0);
 $$idx$val$i = HEAP32[$$idx$i>>2]|0;
 $$idx1$i = ((($0)) + 20|0);
 $$idx1$val$i = HEAP32[$$idx1$i>>2]|0;
 $5 = (($$idx$val$i) + (($$idx1$val$i*24)|0)|0);
 $6 = ($$idx1$val$i|0)==(0);
 L1: do {
  if (!($6)) {
   $$idx$i$i$i87 = ((($1)) + 8|0);
   $7 = ((($0)) + 4|0);
   $8 = ((($2)) + 8|0);
   $10 = $$idx$val$i;
   while(1) {
    $9 = ((($10)) + 24|0);
    $switchtmp = ($10|0)==(0|0);
    if ($switchtmp) {
     break L1;
    }
    $$unpack = HEAP32[$10>>2]|0;
    $$idx$val$i$i$i88 = HEAP32[$$idx$i$i$i87>>2]|0;
    $16 = ($$idx$val$i$i$i88>>>0)>($$unpack>>>0);
    if (!($16)) {
     label = 8;
     break;
    }
    $$idx1$val$i$i$i90 = HEAP32[$1>>2]|0;
    $17 = (($$idx1$val$i$i$i90) + ($$unpack<<6)|0);
    $18 = (((($$idx1$val$i$i$i90) + ($$unpack<<6)|0)) + 28|0);
    $19 = HEAP32[$18>>2]|0;
    $switchtmp$i$i$i91 = ($19|0)==(0|0);
    $switch2tmp$i$i92 = ($17|0)==(0|0);
    $or$cond$i93 = $switchtmp$i$i$i91 | $switch2tmp$i$i92;
    if ($or$cond$i93) {
     label = 8;
     break;
    }
    $20 = ((($10)) + 4|0);
    $$unpack56 = HEAP32[$20>>2]|0;
    $21 = ($$idx$val$i$i$i88>>>0)>($$unpack56>>>0);
    if (!($21)) {
     label = 11;
     break;
    }
    $22 = (($$idx1$val$i$i$i90) + ($$unpack56<<6)|0);
    $23 = (((($$idx1$val$i$i$i90) + ($$unpack56<<6)|0)) + 28|0);
    $24 = HEAP32[$23>>2]|0;
    $switchtmp$i$i$i101 = ($24|0)==(0|0);
    $switch2tmp$i$i102 = ($22|0)==(0|0);
    $or$cond$i103 = $switch2tmp$i$i102 | $switchtmp$i$i$i101;
    if ($or$cond$i103) {
     label = 11;
     break;
    }
    $25 = (((($$idx1$val$i$i$i90) + ($$unpack<<6)|0)) + 60|0);
    $26 = HEAP32[$25>>2]|0;
    $27 = ($26|0)==($4|0);
    if ($27) {
     label = 14;
    } else {
     $28 = (((($$idx1$val$i$i$i90) + ($$unpack56<<6)|0)) + 60|0);
     $29 = HEAP32[$28>>2]|0;
     $30 = ($29|0)==($4|0);
     if ($30) {
      label = 14;
     }
    }
    do {
     if ((label|0) == 14) {
      label = 0;
      $31 = ((($10)) + 16|0);
      $32 = HEAP32[$31>>2]|0;
      $33 = ((($10)) + 20|0);
      $34 = HEAP32[$33>>2]|0;
      $35 = ((($34)) + 16|0);
      $36 = HEAP32[$35>>2]|0;
      $37 = (FUNCTION_TABLE_ii[$36 & 511]($32)|0);
      $38 = ($37|0)!=(0);
      $39 = HEAP32[$31>>2]|0;
      $40 = HEAP32[$33>>2]|0;
      $41 = HEAP32[$0>>2]|0;
      $42 = HEAP32[$7>>2]|0;
      $43 = (((($$idx1$val$i$i$i90) + ($$unpack<<6)|0)) + 4|0);
      $$idx64$val = HEAP32[$18>>2]|0;
      $$idx64$val$idx = ((($$idx64$val)) + 8|0);
      $$idx64$val$idx$val = HEAP32[$$idx64$val$idx>>2]|0;
      $$idx64$val$idx65 = ((($$idx64$val)) + 12|0);
      $$idx64$val$idx65$val = HEAP32[$$idx64$val$idx65>>2]|0;
      $44 = (((($$idx1$val$i$i$i90) + ($$unpack56<<6)|0)) + 4|0);
      $$idx63$val = HEAP32[$23>>2]|0;
      $$idx63$val$idx = ((($$idx63$val)) + 8|0);
      $$idx63$val$idx$val = HEAP32[$$idx63$val$idx>>2]|0;
      $$idx63$val$idx66 = ((($$idx63$val)) + 12|0);
      $$idx63$val$idx66$val = HEAP32[$$idx63$val$idx66>>2]|0;
      $45 = (((($$idx1$val$i$i$i90) + ($$unpack<<6)|0)) + 48|0);
      $46 = +HEAPF32[$45>>2];
      $47 = (((($$idx1$val$i$i$i90) + ($$unpack56<<6)|0)) + 48|0);
      $48 = +HEAPF32[$47>>2];
      $49 = $46 + $48;
      $50 = ((($40)) + 12|0);
      $51 = HEAP32[$50>>2]|0;
      (FUNCTION_TABLE_iiiiiiiiiid[$51 & 127]($39,$41,$42,$43,$$idx64$val$idx$val,$$idx64$val$idx65$val,$44,$$idx63$val$idx$val,$$idx63$val$idx66$val,$49)|0);
      $52 = HEAP32[$31>>2]|0;
      $53 = HEAP32[$33>>2]|0;
      $54 = ((($53)) + 16|0);
      $55 = HEAP32[$54>>2]|0;
      $56 = (FUNCTION_TABLE_ii[$55 & 511]($52)|0);
      $57 = ($56|0)==(0);
      if ($57) {
       if (!($38)) {
        break;
       }
       $59 = HEAP32[$2>>2]|0;
       $60 = HEAP32[$8>>2]|0;
       $61 = (($59) + (($60*20)|0)|0);
       $62 = ($60|0)==(0);
       if ($62) {
        break;
       } else {
        $iter$sroa$0$0$in18$i107 = $59;
       }
       while(1) {
        $63 = ((($iter$sroa$0$0$in18$i107)) + 20|0);
        $64 = ((($iter$sroa$0$0$in18$i107)) + 12|0);
        $65 = HEAP32[$64>>2]|0;
        $66 = ((($iter$sroa$0$0$in18$i107)) + 16|0);
        $67 = HEAP32[$66>>2]|0;
        $68 = ((($67)) + 16|0);
        $69 = HEAP32[$68>>2]|0;
        FUNCTION_TABLE_viii[$69 & 511]($65,$17,$22);
        $70 = ($63|0)==($61|0);
        if ($70) {
         break;
        } else {
         $iter$sroa$0$0$in18$i107 = $63;
        }
       }
      } else {
       if ($38) {
        break;
       }
       $71 = HEAP32[$2>>2]|0;
       $72 = HEAP32[$8>>2]|0;
       $73 = (($71) + (($72*20)|0)|0);
       $74 = ($72|0)==(0);
       if ($74) {
        break;
       } else {
        $iter$sroa$0$0$in18$i85 = $71;
       }
       while(1) {
        $75 = ((($iter$sroa$0$0$in18$i85)) + 20|0);
        $76 = ((($iter$sroa$0$0$in18$i85)) + 12|0);
        $77 = HEAP32[$76>>2]|0;
        $78 = ((($iter$sroa$0$0$in18$i85)) + 16|0);
        $79 = HEAP32[$78>>2]|0;
        $80 = ((($79)) + 12|0);
        $81 = HEAP32[$80>>2]|0;
        FUNCTION_TABLE_viiii[$81 & 511]($77,$17,$22,$31);
        $82 = ($75|0)==($73|0);
        if ($82) {
         break;
        } else {
         $iter$sroa$0$0$in18$i85 = $75;
        }
       }
      }
     }
    } while(0);
    $58 = ($9|0)==($5|0);
    if ($58) {
     break L1;
    } else {
     $10 = $9;
    }
   }
   if ((label|0) == 8) {
    __ZN4core6option13expect_failed17hc1eeb48c0c4a1725E(10432,15);
    // unreachable;
   }
   else if ((label|0) == 11) {
    __ZN4core6option13expect_failed17hc1eeb48c0c4a1725E(10432,15);
    // unreachable;
   }
  }
 } while(0);
 $$idx$i69 = ((($0)) + 76|0);
 $$idx$val$i70 = HEAP32[$$idx$i69>>2]|0;
 $$idx1$i71 = ((($0)) + 84|0);
 $$idx1$val$i72 = HEAP32[$$idx1$i71>>2]|0;
 $11 = (($$idx$val$i70) + (($$idx1$val$i72*24)|0)|0);
 $12 = ($$idx1$val$i72|0)==(0);
 if ($12) {
  return;
 }
 $$idx$i$i$i73 = ((($1)) + 8|0);
 $13 = ((($0)) + 64|0);
 $14 = ((($0)) + 68|0);
 $15 = ((($3)) + 8|0);
 $84 = $$idx$val$i70;
 while(1) {
  $83 = ((($84)) + 24|0);
  $switch8tmp = ($84|0)==(0|0);
  if ($switch8tmp) {
   label = 23;
   break;
  }
  $$unpack59 = HEAP32[$84>>2]|0;
  $$idx$val$i$i$i74 = HEAP32[$$idx$i$i$i73>>2]|0;
  $85 = ($$idx$val$i$i$i74>>>0)>($$unpack59>>>0);
  if (!($85)) {
   label = 26;
   break;
  }
  $$idx1$val$i$i$i76 = HEAP32[$1>>2]|0;
  $86 = (($$idx1$val$i$i$i76) + ($$unpack59<<6)|0);
  $87 = (((($$idx1$val$i$i$i76) + ($$unpack59<<6)|0)) + 28|0);
  $88 = HEAP32[$87>>2]|0;
  $switchtmp$i$i$i77 = ($88|0)==(0|0);
  $switch2tmp$i$i78 = ($86|0)==(0|0);
  $or$cond$i79 = $switchtmp$i$i$i77 | $switch2tmp$i$i78;
  if ($or$cond$i79) {
   label = 26;
   break;
  }
  $89 = ((($84)) + 4|0);
  $$unpack60 = HEAP32[$89>>2]|0;
  $90 = ($$idx$val$i$i$i74>>>0)>($$unpack60>>>0);
  if (!($90)) {
   label = 29;
   break;
  }
  $91 = (($$idx1$val$i$i$i76) + ($$unpack60<<6)|0);
  $92 = (((($$idx1$val$i$i$i76) + ($$unpack60<<6)|0)) + 28|0);
  $93 = HEAP32[$92>>2]|0;
  $switchtmp$i$i$i = ($93|0)==(0|0);
  $switch2tmp$i$i = ($91|0)==(0|0);
  $or$cond$i = $switch2tmp$i$i | $switchtmp$i$i$i;
  if ($or$cond$i) {
   label = 29;
   break;
  }
  $94 = (((($$idx1$val$i$i$i76) + ($$unpack59<<6)|0)) + 60|0);
  $95 = HEAP32[$94>>2]|0;
  $96 = ($95|0)==($4|0);
  if ($96) {
   label = 33;
  } else {
   $97 = (((($$idx1$val$i$i$i76) + ($$unpack60<<6)|0)) + 60|0);
   $98 = HEAP32[$97>>2]|0;
   $99 = ($98|0)==($4|0);
   if ($99) {
    label = 33;
   }
  }
  if ((label|0) == 33) {
   label = 0;
   $101 = ((($84)) + 16|0);
   $102 = HEAP32[$101>>2]|0;
   $103 = ((($84)) + 20|0);
   $104 = HEAP32[$103>>2]|0;
   $105 = ((($104)) + 16|0);
   $106 = HEAP32[$105>>2]|0;
   $107 = (FUNCTION_TABLE_ii[$106 & 511]($102)|0);
   $108 = HEAP32[$101>>2]|0;
   $109 = HEAP32[$103>>2]|0;
   $110 = HEAP32[$13>>2]|0;
   $111 = HEAP32[$14>>2]|0;
   $112 = (((($$idx1$val$i$i$i76) + ($$unpack59<<6)|0)) + 4|0);
   $$idx62$val = HEAP32[$87>>2]|0;
   $$idx62$val$idx = ((($$idx62$val)) + 8|0);
   $$idx62$val$idx$val = HEAP32[$$idx62$val$idx>>2]|0;
   $$idx62$val$idx67 = ((($$idx62$val)) + 12|0);
   $$idx62$val$idx67$val = HEAP32[$$idx62$val$idx67>>2]|0;
   $113 = (((($$idx1$val$i$i$i76) + ($$unpack60<<6)|0)) + 4|0);
   $$idx$val = HEAP32[$92>>2]|0;
   $$idx$val$idx = ((($$idx$val)) + 8|0);
   $$idx$val$idx$val = HEAP32[$$idx$val$idx>>2]|0;
   $$idx$val$idx68 = ((($$idx$val)) + 12|0);
   $$idx$val$idx68$val = HEAP32[$$idx$val$idx68>>2]|0;
   $114 = (((($$idx1$val$i$i$i76) + ($$unpack59<<6)|0)) + 48|0);
   $115 = +HEAPF32[$114>>2];
   $116 = (((($$idx1$val$i$i$i76) + ($$unpack60<<6)|0)) + 48|0);
   $117 = +HEAPF32[$116>>2];
   $118 = $115 + $117;
   $119 = ((($109)) + 12|0);
   $120 = HEAP32[$119>>2]|0;
   (FUNCTION_TABLE_iiiiiiiiiid[$120 & 127]($108,$110,$111,$112,$$idx62$val$idx$val,$$idx62$val$idx67$val,$113,$$idx$val$idx$val,$$idx$val$idx68$val,$118)|0);
   $121 = HEAP32[$101>>2]|0;
   $122 = HEAP32[$103>>2]|0;
   $123 = ((($122)) + 16|0);
   $124 = HEAP32[$123>>2]|0;
   $125 = (FUNCTION_TABLE_ii[$124 & 511]($121)|0);
   $126 = ($125<<24>>24)==($107<<24>>24);
   if (!($126)) {
    $127 = HEAP32[$3>>2]|0;
    $128 = HEAP32[$15>>2]|0;
    $129 = (($127) + (($128*20)|0)|0);
    $130 = ($128|0)==(0);
    if (!($130)) {
     $iter$sroa$0$0$in18$i = $127;
     while(1) {
      $131 = ((($iter$sroa$0$0$in18$i)) + 20|0);
      $132 = ((($iter$sroa$0$0$in18$i)) + 12|0);
      $133 = HEAP32[$132>>2]|0;
      $134 = ((($iter$sroa$0$0$in18$i)) + 16|0);
      $135 = HEAP32[$134>>2]|0;
      $136 = ((($135)) + 12|0);
      $137 = HEAP32[$136>>2]|0;
      FUNCTION_TABLE_viiiii[$137 & 511]($133,$86,$91,$107,$125);
      $138 = ($131|0)==($129|0);
      if ($138) {
       break;
      } else {
       $iter$sroa$0$0$in18$i = $131;
      }
     }
    }
   }
  }
  $100 = ($83|0)==($11|0);
  if ($100) {
   label = 23;
   break;
  } else {
   $84 = $83;
  }
 }
 if ((label|0) == 23) {
  return;
 }
 else if ((label|0) == 26) {
  __ZN4core6option13expect_failed17hc1eeb48c0c4a1725E(10432,15);
  // unreachable;
 }
 else if ((label|0) == 29) {
  __ZN4core6option13expect_failed17hc1eeb48c0c4a1725E(10432,15);
  // unreachable;
 }
}
function __ZN227__LT_nphysics2d__resolution__constraint__accumulated_impulse_solver__AccumulatedImpulseSolver_LT_N_GT__u20_as_u20_nphysics2d__resolution__solver__Solver_LT_N_C__u20_nphysics2d__detection__constraint__Constraint_LT_N_GT__GT__GT_5solve14set_body_index17h661cff27b1086e5cE($$0$0$0$0$val,$0,$1) {
 $$0$0$0$0$val = $$0$0$0$0$val|0;
 $0 = $0|0;
 $1 = $1|0;
 var $$arith = 0, $$idx$i20 = 0, $$idx$val$i21 = 0, $$idx1$i$i$i$i$i$i$i = 0, $$idx1$val$i$i$i$i$i$i$i = 0, $$idx1$val$val$i$i$i$i$i$i$i = 0, $$idx13 = 0, $$idx13$val = 0, $$idx17 = 0, $$idx17$val = 0, $$overflow = 0, $$pre$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0;
 var $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0;
 var $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $cond$i$i$i = 0, $eh$lpad$body8$index4Z2D = 0, $eh$lpad$body8$indexZ2D = 0, $switch$i = 0, $switchtmp$i$i$i$i$i$i = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($$0$0$0$0$val)) + 8|0);
 $3 = HEAP32[$2>>2]|0;
 $cond$i$i$i = ($3|0)==(0);
 if (!($cond$i$i$i)) {
  __ZN4core6result13unwrap_failed17he96585155b596c01E();
  // unreachable;
 }
 HEAP32[$2>>2] = -1;
 $$idx17 = ((($$0$0$0$0$val)) + 124|0);
 $$idx17$val = HEAP32[$$idx17>>2]|0;
 $4 = ($$idx17$val|0)==(-2);
 if (!($4)) {
  HEAP32[$2>>2] = 0;
  return;
 }
 $$idx13 = ((($$0$0$0$0$val)) + 12|0);
 $$idx13$val = HEAP8[$$idx13>>0]|0;
 $switch$i = ($$idx13$val<<24>>24)==(1);
 if (!($switch$i)) {
  HEAP32[$$idx17>>2] = -1;
  HEAP32[$2>>2] = 0;
  return;
 }
 $5 = HEAP32[$1>>2]|0;
 HEAP32[$$idx17>>2] = $5;
 $6 = HEAP32[$$0$0$0$0$val>>2]|0;
 $$arith = (($6) + 1)|0;
 $$overflow = ($6>>>0)>(4294967294);
 if ($$overflow) {
  _llvm_trap();
  // unreachable;
 }
 $7 = $$0$0$0$0$val;
 HEAP32[$$0$0$0$0$val>>2] = $$arith;
 $8 = ((($0)) + 8|0);
 $9 = HEAP32[$8>>2]|0;
 $$idx$i20 = ((($0)) + 4|0);
 $$idx$val$i21 = HEAP32[$$idx$i20>>2]|0;
 $10 = ($9|0)==($$idx$val$i21|0);
 do {
  if ($10) {
   __THREW__ = 0;
   invoke_vi(242,($0|0));
   $34 = __THREW__; __THREW__ = 0;
   $35 = $34&1;
   if (!($35)) {
    $$pre$i = HEAP32[$8>>2]|0;
    $38 = $$pre$i;
    break;
   }
   $11 = ___cxa_find_matching_catch_2()|0;
   $12 = tempRet0;
   $13 = HEAP32[$$0$0$0$0$val>>2]|0;
   $14 = (($13) + -1)|0;
   HEAP32[$$0$0$0$0$val>>2] = $14;
   $15 = ($14|0)==(0);
   if (!($15)) {
    $eh$lpad$body8$index4Z2D = $12;$eh$lpad$body8$indexZ2D = $11;
    HEAP32[$2>>2] = 0;
    ___resumeException($eh$lpad$body8$indexZ2D|0);
    // unreachable;
   }
   $16 = ((($$0$0$0$0$val)) + 16|0);
   $17 = HEAP32[$16>>2]|0;
   $18 = HEAP32[$17>>2]|0;HEAP32[$17>>2] = (($18-1)|0);
   $19 = ($18|0)==(1);
   if ($19) {
    /* fence */;
    __THREW__ = 0;
    invoke_vi(241,($16|0));
    $20 = __THREW__; __THREW__ = 0;
    $21 = $20&1;
    if (!($21)) {
     label = 11;
    }
   } else {
    label = 11;
   }
   do {
    if ((label|0) == 11) {
     $22 = ((($$0$0$0$0$val)) + 172|0);
     $23 = HEAP32[$22>>2]|0;
     $switchtmp$i$i$i$i$i$i = ($23|0)==(0|0);
     if (!($switchtmp$i$i$i$i$i$i)) {
      $$idx1$i$i$i$i$i$i$i = ((($$0$0$0$0$val)) + 176|0);
      $$idx1$val$i$i$i$i$i$i$i = HEAP32[$$idx1$i$i$i$i$i$i$i>>2]|0;
      $$idx1$val$val$i$i$i$i$i$i$i = HEAP32[$$idx1$val$i$i$i$i$i$i$i>>2]|0;
      __THREW__ = 0;
      invoke_vi($$idx1$val$val$i$i$i$i$i$i$i|0,($23|0));
      $24 = __THREW__; __THREW__ = 0;
      $25 = $24&1;
      if ($25) {
       break;
      }
      $26 = HEAP32[$$idx1$i$i$i$i$i$i$i>>2]|0;
      $27 = ((($26)) + 4|0);
      $28 = HEAP32[$27>>2]|0;
      $29 = ($28|0)==(0);
      if (!($29)) {
       _free($23);
      }
     }
     $30 = ((($$0$0$0$0$val)) + 4|0);
     $31 = HEAP32[$30>>2]|0;
     $32 = (($31) + -1)|0;
     HEAP32[$30>>2] = $32;
     $33 = ($32|0)==(0);
     if (!($33)) {
      $eh$lpad$body8$index4Z2D = $12;$eh$lpad$body8$indexZ2D = $11;
      HEAP32[$2>>2] = 0;
      ___resumeException($eh$lpad$body8$indexZ2D|0);
      // unreachable;
     }
     _free($$0$0$0$0$val);
     $eh$lpad$body8$index4Z2D = $12;$eh$lpad$body8$indexZ2D = $11;
     HEAP32[$2>>2] = 0;
     ___resumeException($eh$lpad$body8$indexZ2D|0);
     // unreachable;
    }
   } while(0);
   $43 = ___cxa_find_matching_catch_2()|0;
   $44 = tempRet0;
   $eh$lpad$body8$index4Z2D = $44;$eh$lpad$body8$indexZ2D = $43;
   HEAP32[$2>>2] = 0;
   ___resumeException($eh$lpad$body8$indexZ2D|0);
   // unreachable;
  } else {
   $38 = $9;
  }
 } while(0);
 $36 = HEAP32[$0>>2]|0;
 $37 = (($36) + ($38<<2)|0);
 HEAP32[$37>>2] = $7;
 $39 = HEAP32[$8>>2]|0;
 $40 = (($39) + 1)|0;
 HEAP32[$8>>2] = $40;
 $41 = HEAP32[$1>>2]|0;
 $42 = (($41) + 1)|0;
 HEAP32[$1>>2] = $42;
 HEAP32[$2>>2] = 0;
 return;
}
function __ZN228__LT_ncollide_geometry__shape__ball__Ball_LT__LT__LT_P_u20_as_u20_ncollide_math__Point_GT___Vect_u20_as_u20_ncollide_math__Vector_GT___Scalar_GT__u20_as_u20_ncollide_geometry__shape__support_map__SupportMap_LT_P_C__u20_M_GT__GT_13support_point17h5b11da2fdfab270cE($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$idx$val = 0.0, $$idx8$val = 0.0, $$idx9 = 0, $$idx9$val = 0.0, $10 = 0.0, $11 = 0.0, $12 = 0.0, $13 = 0.0, $14 = 0.0, $15 = 0.0, $16 = 0.0, $17 = 0.0, $18 = 0.0, $19 = 0.0, $20 = 0, $4 = 0, $5 = 0, $6 = 0.0, $7 = 0.0, $8 = 0.0;
 var $9 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = ((($2)) + 16|0);
 $5 = ((($2)) + 20|0);
 $6 = +HEAPF32[$4>>2];
 $7 = +HEAPF32[$5>>2];
 $8 = $6 + 0.0;
 $9 = $7 + 0.0;
 $$idx8$val = +HEAPF32[$3>>2];
 $$idx9 = ((($3)) + 4|0);
 $$idx9$val = +HEAPF32[$$idx9>>2];
 $10 = $$idx8$val * $$idx8$val;
 $11 = $$idx9$val * $$idx9$val;
 $12 = $10 + $11;
 $13 = (+Math_sqrt((+$12)));
 $14 = $$idx8$val / $13;
 $15 = $$idx9$val / $13;
 $$idx$val = +HEAPF32[$1>>2];
 $16 = $$idx$val * $14;
 $17 = $$idx$val * $15;
 $18 = $8 + $16;
 $19 = $9 + $17;
 HEAPF32[$0>>2] = $18;
 $20 = ((($0)) + 4|0);
 HEAPF32[$20>>2] = $19;
 return;
}
function __ZN249__LT_ncollide_pipeline__narrow_phase__contact_generator__ball_ball_contact_generator__BallBallContactGenerator_LT_P_C__u20_M_GT__u20_as_u20_ncollide_pipeline__narrow_phase__contact_generator__contact_generator__ContactGenerator_LT_P_C__u20_M_GT__GT_12num_contacts17h5f45e15636d4b4ccE($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[$0>>2]|0;
 return ($1|0);
}
function __ZN249__LT_ncollide_pipeline__narrow_phase__contact_generator__ball_ball_contact_generator__BallBallContactGenerator_LT_P_C__u20_M_GT__u20_as_u20_ncollide_pipeline__narrow_phase__contact_generator__contact_generator__ContactGenerator_LT_P_C__u20_M_GT__GT_6update17ha44d595fb23e7f9eE($0,$1,$2,$3,$4,$5,$6,$7,$8,$9) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 $7 = $7|0;
 $8 = $8|0;
 $9 = +$9;
 var $$$i = 0, $$$i14 = 0, $$idx$val = 0.0, $$idx12$val = 0.0, $$sink$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0.0, $27 = 0.0, $28 = 0.0, $29 = 0.0, $30 = 0, $31 = 0, $32 = 0.0, $33 = 0.0, $34 = 0.0, $35 = 0.0, $36 = 0.0, $37 = 0.0, $38 = 0.0, $39 = 0.0, $40 = 0.0, $41 = 0.0, $42 = 0.0, $43 = 0.0, $44 = 0;
 var $45 = 0.0, $46 = 0.0, $47 = 0.0, $48 = 0, $49 = 0, $50 = 0, $51 = 0.0, $52 = 0.0, $53 = 0.0, $54 = 0.0, $55 = 0.0, $56 = 0.0, $57 = 0.0, $58 = 0.0, $59 = 0.0, $60 = 0.0, $61 = 0.0, $_0$0$off0 = 0, $_21$sroa$10$0 = 0.0, $_21$sroa$10$0$$sroa_idx40 = 0;
 var $_21$sroa$4$0 = 0.0, $_21$sroa$4$0$$sroa_idx24 = 0, $_21$sroa$5$0 = 0.0, $_21$sroa$5$0$$sroa_idx27 = 0, $_21$sroa$6$0 = 0.0, $_21$sroa$6$0$$sroa_idx30 = 0, $_21$sroa$7$0 = 0.0, $_21$sroa$7$0$$sroa_idx33 = 0, $_21$sroa$8$0 = 0, $_21$sroa$8$0$$sroa_idx36 = 0, $_21$sroa$9$0 = 0, $_21$sroa$9$0$$sroa_idx38 = 0, $normal$sroa$0$0$i = 0, $normal$sroa$7$0$i = 0, $or$cond = 0, $switch1tmp = 0, $switchtmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $10 = ((($5)) + 48|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = (FUNCTION_TABLE_ii[$11 & 511]($4)|0);
 $13 = tempRet0;
 $14 = ($12|0)==(391555669);
 $15 = ($13|0)==(162210410);
 $16 = $14 & $15;
 $$$i = $16 ? $4 : 0;
 $17 = ((($8)) + 48|0);
 $18 = HEAP32[$17>>2]|0;
 $19 = (FUNCTION_TABLE_ii[$18 & 511]($7)|0);
 $20 = tempRet0;
 $21 = ($19|0)==(391555669);
 $22 = ($20|0)==(162210410);
 $23 = $21 & $22;
 $$$i14 = $23 ? $7 : 0;
 $switch1tmp = ($$$i|0)==(0|0);
 $switchtmp = ($$$i14|0)==(0|0);
 $or$cond = $switch1tmp | $switchtmp;
 if ($or$cond) {
  $_0$0$off0 = 0;
  return ($_0$0$off0|0);
 }
 $24 = ((($3)) + 16|0);
 $25 = ((($3)) + 20|0);
 $26 = +HEAPF32[$24>>2];
 $27 = +HEAPF32[$25>>2];
 $28 = $26 + 0.0;
 $29 = $27 + 0.0;
 $30 = ((($6)) + 16|0);
 $31 = ((($6)) + 20|0);
 $32 = +HEAPF32[$30>>2];
 $33 = +HEAPF32[$31>>2];
 $34 = $32 + 0.0;
 $35 = $33 + 0.0;
 $$idx$val = +HEAPF32[$$$i>>2];
 $$idx12$val = +HEAPF32[$$$i14>>2];
 $36 = $34 - $28;
 $37 = $35 - $29;
 $38 = $36 * $36;
 $39 = $37 * $37;
 $40 = $38 + $39;
 $41 = $$idx$val + $$idx12$val;
 $42 = $41 + $9;
 $43 = $42 * $42;
 $44 = $40 < $43;
 if ($44) {
  $45 = (+Math_sqrt((+$40)));
  $46 = $36 / $45;
  $47 = $37 / $45;
  $48 = (HEAPF32[tempDoublePtr>>2]=$46,HEAP32[tempDoublePtr>>2]|0);
  $49 = (HEAPF32[tempDoublePtr>>2]=$47,HEAP32[tempDoublePtr>>2]|0);
  $50 = $40 == 0.0;
  $normal$sroa$0$0$i = $50 ? 1065353216 : $48;
  $normal$sroa$7$0$i = $50 ? 0 : $49;
  $51 = (HEAP32[tempDoublePtr>>2]=$normal$sroa$0$0$i,+HEAPF32[tempDoublePtr>>2]);
  $52 = (HEAP32[tempDoublePtr>>2]=$normal$sroa$7$0$i,+HEAPF32[tempDoublePtr>>2]);
  $53 = $$idx$val * $51;
  $54 = $$idx$val * $52;
  $55 = $28 + $53;
  $56 = $29 + $54;
  $57 = $$idx12$val * $51;
  $58 = $$idx12$val * $52;
  $59 = $34 - $57;
  $60 = $35 - $58;
  $61 = $41 - $45;
  $$sink$i = 1;$_21$sroa$10$0 = $61;$_21$sroa$4$0 = $55;$_21$sroa$5$0 = $56;$_21$sroa$6$0 = $59;$_21$sroa$7$0 = $60;$_21$sroa$8$0 = $normal$sroa$0$0$i;$_21$sroa$9$0 = $normal$sroa$7$0$i;
 } else {
  $$sink$i = 0;$_21$sroa$10$0 = 0.0;$_21$sroa$4$0 = 0.0;$_21$sroa$5$0 = 0.0;$_21$sroa$6$0 = 0.0;$_21$sroa$7$0 = 0.0;$_21$sroa$8$0 = 0;$_21$sroa$9$0 = 0;
 }
 HEAP32[$0>>2] = $$sink$i;
 $_21$sroa$4$0$$sroa_idx24 = ((($0)) + 4|0);
 HEAPF32[$_21$sroa$4$0$$sroa_idx24>>2] = $_21$sroa$4$0;
 $_21$sroa$5$0$$sroa_idx27 = ((($0)) + 8|0);
 HEAPF32[$_21$sroa$5$0$$sroa_idx27>>2] = $_21$sroa$5$0;
 $_21$sroa$6$0$$sroa_idx30 = ((($0)) + 12|0);
 HEAPF32[$_21$sroa$6$0$$sroa_idx30>>2] = $_21$sroa$6$0;
 $_21$sroa$7$0$$sroa_idx33 = ((($0)) + 16|0);
 HEAPF32[$_21$sroa$7$0$$sroa_idx33>>2] = $_21$sroa$7$0;
 $_21$sroa$8$0$$sroa_idx36 = ((($0)) + 20|0);
 HEAP32[$_21$sroa$8$0$$sroa_idx36>>2] = $_21$sroa$8$0;
 $_21$sroa$9$0$$sroa_idx38 = ((($0)) + 24|0);
 HEAP32[$_21$sroa$9$0$$sroa_idx38>>2] = $_21$sroa$9$0;
 $_21$sroa$10$0$$sroa_idx40 = ((($0)) + 28|0);
 HEAPF32[$_21$sroa$10$0$$sroa_idx40>>2] = $_21$sroa$10$0;
 $_0$0$off0 = 1;
 return ($_0$0$off0|0);
}
function __ZN249__LT_ncollide_pipeline__narrow_phase__contact_generator__ball_ball_contact_generator__BallBallContactGenerator_LT_P_C__u20_M_GT__u20_as_u20_ncollide_pipeline__narrow_phase__contact_generator__contact_generator__ContactGenerator_LT_P_C__u20_M_GT__GT_8contacts17h3a62f1546347cf14E($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$idx$i = 0, $$idx$val$i = 0, $$idx$val12$i = 0, $$idx3$i = 0, $$idx3$val13$i = 0, $$pre$i = 0, $$val14$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = SIMD_Int32x4(0,0,0,0), $7 = 0, $8 = 0, $9 = 0;
 var $switch = 0, $value$i$sroa$7$0$$sroa_idx36 = 0, $value$i$sroa$8$0$$sroa_idx39 = 0, $value$i$sroa$9$0$$sroa_idx42 = 0, label = 0, sp = 0, temp_Int32x4_ptr = 0;
 sp = STACKTOP;
 $2 = HEAP32[$0>>2]|0;
 $switch = ($2|0)==(1);
 if (!($switch)) {
  return;
 }
 $3 = ((($0)) + 20|0);
 $4 = ((($0)) + 28|0);
 $5 = ((($0)) + 4|0);
 $6 = SIMD_Int32x4_load(HEAPU8, $5);
 $$idx$val12$i = HEAP32[$3>>2]|0;
 $$idx3$i = ((($0)) + 24|0);
 $$idx3$val13$i = HEAP32[$$idx3$i>>2]|0;
 $$val14$i = HEAP32[$4>>2]|0;
 $7 = ((($1)) + 8|0);
 $8 = HEAP32[$7>>2]|0;
 $$idx$i = ((($1)) + 4|0);
 $$idx$val$i = HEAP32[$$idx$i>>2]|0;
 $9 = ($8|0)==($$idx$val$i|0);
 if ($9) {
  __ZN40__LT_alloc__raw_vec__RawVec_LT_T_GT__GT_6double17ha4899d9ca8626977E($1);
  $$pre$i = HEAP32[$7>>2]|0;
  $12 = $$pre$i;
 } else {
  $12 = $8;
 }
 $10 = HEAP32[$1>>2]|0;
 $11 = (($10) + (($12*28)|0)|0);
 temp_Int32x4_ptr = $11;SIMD_Int32x4_store(HEAPU8, temp_Int32x4_ptr, $6);
 $value$i$sroa$7$0$$sroa_idx36 = (((($10) + (($12*28)|0)|0)) + 16|0);
 HEAP32[$value$i$sroa$7$0$$sroa_idx36>>2] = $$idx$val12$i;
 $value$i$sroa$8$0$$sroa_idx39 = (((($10) + (($12*28)|0)|0)) + 20|0);
 HEAP32[$value$i$sroa$8$0$$sroa_idx39>>2] = $$idx3$val13$i;
 $value$i$sroa$9$0$$sroa_idx42 = (((($10) + (($12*28)|0)|0)) + 24|0);
 HEAP32[$value$i$sroa$9$0$$sroa_idx42>>2] = $$val14$i;
 $13 = HEAP32[$7>>2]|0;
 $14 = (($13) + 1)|0;
 HEAP32[$7>>2] = $14;
 return;
}
function __ZN249__LT_ncollide_pipeline__narrow_phase__contact_generator__default_contact_dispatcher__DefaultContactDispatcher_LT_P_C__u20_M_GT__u20_as_u20_ncollide_pipeline__narrow_phase__contact_generator__contact_generator__ContactDispatcher_LT_P_C__u20_M_GT__GT_21get_contact_algorithm17haed361e0e2dcbc93E($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0;
 var $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0;
 var $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $8 = 0, $9 = 0, $_75 = 0, $_80$sroa$0 = 0, $not$brmerge = 0, $or$cond$demorgan = 0, $simplex = 0, $wo_manifold$sroa$5 = 0, $wo_manifold1$sroa$5 = 0, $wo_manifold3$sroa$0 = 0, $wo_manifold3$sroa$6 = 0, $x$i$sroa$0 = 0;
 var $x$i$sroa$4$0$$sroa_idx = 0, $x$i$sroa$5 = 0, $x$i$sroa$5$0$$sroa_raw_idx = 0, $x$i76 = 0, $x$sroa$0$i = 0, $x$sroa$0$i31$sroa$4 = 0, $x$sroa$0$i31$sroa$4$0$$sroa_raw_idx = 0, $x$sroa$0$i37$sroa$4 = 0, $x$sroa$0$i37$sroa$4$0$$sroa_raw_idx = 0, $x$sroa$0$i42$sroa$10 = 0, $x$sroa$0$i42$sroa$10$0$$sroa_raw_idx = 0, $x$sroa$0$i42$sroa$7$0$$sroa_idx = 0, $x$sroa$0$i42$sroa$8$0$$sroa_idx = 0, $x$sroa$0$i42$sroa$9$0$$sroa_idx = 0, $x$sroa$0$i58$sroa$4 = 0, $x$sroa$0$i58$sroa$4$0$$sroa_raw_idx = 0, $x$sroa$0$i63$sroa$10 = 0, $x$sroa$0$i63$sroa$10$0$$sroa_raw_idx = 0, $x$sroa$0$i63$sroa$7$0$$sroa_idx = 0, $x$sroa$0$i63$sroa$8$0$$sroa_idx = 0;
 var $x$sroa$0$i63$sroa$9$0$$sroa_idx = 0, $x$sroa$0$i71$sroa$10$0$$sroa_idx = 0, $x$sroa$0$i71$sroa$11 = 0, $x$sroa$0$i71$sroa$11$0$$sroa_raw_idx = 0, $x$sroa$0$i71$sroa$7$0$$sroa_idx = 0, $x$sroa$0$i71$sroa$8$0$$sroa_idx = 0, $x$sroa$0$i71$sroa$9 = 0, $x$sroa$0$i71$sroa$9$0$$sroa_raw_idx = 0, dest = 0, label = 0, sp = 0, src = 0, stop = 0, temp_Int32x4_ptr = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 768|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(768|0);
 $x$i76 = sp + 400|0;
 $x$sroa$0$i71$sroa$9 = sp + 360|0;
 $x$sroa$0$i71$sroa$11 = sp + 732|0;
 $x$i$sroa$0 = sp + 320|0;
 $x$i$sroa$5 = sp + 704|0;
 $x$sroa$0$i63$sroa$10 = sp + 676|0;
 $x$sroa$0$i58$sroa$4 = sp + 648|0;
 $x$sroa$0$i42$sroa$10 = sp + 620|0;
 $x$sroa$0$i37$sroa$4 = sp + 592|0;
 $x$sroa$0$i31$sroa$4 = sp + 564|0;
 $x$sroa$0$i = sp + 240|0;
 $wo_manifold$sroa$5 = sp + 536|0;
 $wo_manifold1$sroa$5 = sp + 508|0;
 $simplex = sp + 200|0;
 $wo_manifold3$sroa$0 = sp + 160|0;
 $wo_manifold3$sroa$6 = sp + 480|0;
 $_75 = sp + 80|0;
 $_80$sroa$0 = sp;
 $6 = ((($3)) + 48|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = (FUNCTION_TABLE_ii[$7 & 511]($2)|0);
 $9 = tempRet0;
 $10 = ($8|0)==(391555669);
 $11 = ($9|0)==(162210410);
 $12 = $10 & $11;
 $13 = ((($5)) + 48|0);
 $14 = HEAP32[$13>>2]|0;
 $15 = (FUNCTION_TABLE_ii[$14 & 511]($4)|0);
 $16 = tempRet0;
 $17 = ($15|0)==(391555669);
 $18 = ($16|0)==(162210410);
 $19 = $17 & $18;
 $not$brmerge = $12 & $19;
 if ($not$brmerge) {
  $20 = (_malloc(32)|0);
  $21 = ($20|0)==(0|0);
  if ($21) {
   __ZN5alloc3oom3oom17hb253cf665793f59eE();
   // unreachable;
  }
  HEAP32[$20>>2] = 0;
  $x$sroa$0$i31$sroa$4$0$$sroa_raw_idx = ((($20)) + 4|0);
  ;HEAP32[$x$sroa$0$i31$sroa$4$0$$sroa_raw_idx>>2]=HEAP32[$x$sroa$0$i31$sroa$4>>2]|0;HEAP32[$x$sroa$0$i31$sroa$4$0$$sroa_raw_idx+4>>2]=HEAP32[$x$sroa$0$i31$sroa$4+4>>2]|0;HEAP32[$x$sroa$0$i31$sroa$4$0$$sroa_raw_idx+8>>2]=HEAP32[$x$sroa$0$i31$sroa$4+8>>2]|0;HEAP32[$x$sroa$0$i31$sroa$4$0$$sroa_raw_idx+12>>2]=HEAP32[$x$sroa$0$i31$sroa$4+12>>2]|0;HEAP32[$x$sroa$0$i31$sroa$4$0$$sroa_raw_idx+16>>2]=HEAP32[$x$sroa$0$i31$sroa$4+16>>2]|0;HEAP32[$x$sroa$0$i31$sroa$4$0$$sroa_raw_idx+20>>2]=HEAP32[$x$sroa$0$i31$sroa$4+20>>2]|0;HEAP32[$x$sroa$0$i31$sroa$4$0$$sroa_raw_idx+24>>2]=HEAP32[$x$sroa$0$i31$sroa$4+24>>2]|0;
  HEAP32[$0>>2] = $20;
  $28 = ((($0)) + 4|0);
  HEAP32[$28>>2] = 520;
  STACKTOP = sp;return;
 }
 $22 = HEAP32[$6>>2]|0;
 $23 = (FUNCTION_TABLE_ii[$22 & 511]($2)|0);
 $24 = tempRet0;
 $25 = ($23|0)==(-255454720);
 $26 = ($24|0)==(-1918276056);
 $27 = $25 & $26;
 if ($27) {
  $36 = ((($5)) + 36|0);
  $37 = HEAP32[$36>>2]|0;
  $38 = (FUNCTION_TABLE_ii[$37 & 511]($4)|0);
  if ($38) {
   do {
    if ($19) {
     ;HEAP32[$x$sroa$0$i37$sroa$4>>2]=HEAP32[$wo_manifold$sroa$5>>2]|0;HEAP32[$x$sroa$0$i37$sroa$4+4>>2]=HEAP32[$wo_manifold$sroa$5+4>>2]|0;HEAP32[$x$sroa$0$i37$sroa$4+8>>2]=HEAP32[$wo_manifold$sroa$5+8>>2]|0;HEAP32[$x$sroa$0$i37$sroa$4+12>>2]=HEAP32[$wo_manifold$sroa$5+12>>2]|0;HEAP32[$x$sroa$0$i37$sroa$4+16>>2]=HEAP32[$wo_manifold$sroa$5+16>>2]|0;HEAP32[$x$sroa$0$i37$sroa$4+20>>2]=HEAP32[$wo_manifold$sroa$5+20>>2]|0;HEAP32[$x$sroa$0$i37$sroa$4+24>>2]=HEAP32[$wo_manifold$sroa$5+24>>2]|0;
     $39 = (_malloc(32)|0);
     $40 = ($39|0)==(0|0);
     if ($40) {
      __ZN5alloc3oom3oom17hb253cf665793f59eE();
      // unreachable;
     } else {
      HEAP32[$39>>2] = 0;
      $x$sroa$0$i37$sroa$4$0$$sroa_raw_idx = ((($39)) + 4|0);
      ;HEAP32[$x$sroa$0$i37$sroa$4$0$$sroa_raw_idx>>2]=HEAP32[$x$sroa$0$i37$sroa$4>>2]|0;HEAP32[$x$sroa$0$i37$sroa$4$0$$sroa_raw_idx+4>>2]=HEAP32[$x$sroa$0$i37$sroa$4+4>>2]|0;HEAP32[$x$sroa$0$i37$sroa$4$0$$sroa_raw_idx+8>>2]=HEAP32[$x$sroa$0$i37$sroa$4+8>>2]|0;HEAP32[$x$sroa$0$i37$sroa$4$0$$sroa_raw_idx+12>>2]=HEAP32[$x$sroa$0$i37$sroa$4+12>>2]|0;HEAP32[$x$sroa$0$i37$sroa$4$0$$sroa_raw_idx+16>>2]=HEAP32[$x$sroa$0$i37$sroa$4+16>>2]|0;HEAP32[$x$sroa$0$i37$sroa$4$0$$sroa_raw_idx+20>>2]=HEAP32[$x$sroa$0$i37$sroa$4+20>>2]|0;HEAP32[$x$sroa$0$i37$sroa$4$0$$sroa_raw_idx+24>>2]=HEAP32[$x$sroa$0$i37$sroa$4+24>>2]|0;
      HEAP32[$0>>2] = $39;
      $44 = ((($0)) + 4|0);
      HEAP32[$44>>2] = 472;
      break;
     }
    } else {
     ;HEAP32[$x$sroa$0$i42$sroa$10>>2]=HEAP32[$wo_manifold$sroa$5>>2]|0;HEAP32[$x$sroa$0$i42$sroa$10+4>>2]=HEAP32[$wo_manifold$sroa$5+4>>2]|0;HEAP32[$x$sroa$0$i42$sroa$10+8>>2]=HEAP32[$wo_manifold$sroa$5+8>>2]|0;HEAP32[$x$sroa$0$i42$sroa$10+12>>2]=HEAP32[$wo_manifold$sroa$5+12>>2]|0;HEAP32[$x$sroa$0$i42$sroa$10+16>>2]=HEAP32[$wo_manifold$sroa$5+16>>2]|0;HEAP32[$x$sroa$0$i42$sroa$10+20>>2]=HEAP32[$wo_manifold$sroa$5+20>>2]|0;HEAP32[$x$sroa$0$i42$sroa$10+24>>2]=HEAP32[$wo_manifold$sroa$5+24>>2]|0;
     $41 = (_malloc(56)|0);
     $42 = ($41|0)==(0|0);
     if ($42) {
      __ZN5alloc3oom3oom17hb253cf665793f59eE();
      // unreachable;
     } else {
      temp_Int32x4_ptr = $41;SIMD_Int32x4_store(HEAPU8, temp_Int32x4_ptr, SIMD_Int32x4(1,0,0,1));
      $x$sroa$0$i42$sroa$7$0$$sroa_idx = ((($41)) + 16|0);
      HEAP32[$x$sroa$0$i42$sroa$7$0$$sroa_idx>>2] = 0;
      $x$sroa$0$i42$sroa$8$0$$sroa_idx = ((($41)) + 20|0);
      HEAP32[$x$sroa$0$i42$sroa$8$0$$sroa_idx>>2] = 0;
      $x$sroa$0$i42$sroa$9$0$$sroa_idx = ((($41)) + 24|0);
      HEAP32[$x$sroa$0$i42$sroa$9$0$$sroa_idx>>2] = 0;
      $x$sroa$0$i42$sroa$10$0$$sroa_raw_idx = ((($41)) + 28|0);
      ;HEAP32[$x$sroa$0$i42$sroa$10$0$$sroa_raw_idx>>2]=HEAP32[$x$sroa$0$i42$sroa$10>>2]|0;HEAP32[$x$sroa$0$i42$sroa$10$0$$sroa_raw_idx+4>>2]=HEAP32[$x$sroa$0$i42$sroa$10+4>>2]|0;HEAP32[$x$sroa$0$i42$sroa$10$0$$sroa_raw_idx+8>>2]=HEAP32[$x$sroa$0$i42$sroa$10+8>>2]|0;HEAP32[$x$sroa$0$i42$sroa$10$0$$sroa_raw_idx+12>>2]=HEAP32[$x$sroa$0$i42$sroa$10+12>>2]|0;HEAP32[$x$sroa$0$i42$sroa$10$0$$sroa_raw_idx+16>>2]=HEAP32[$x$sroa$0$i42$sroa$10+16>>2]|0;HEAP32[$x$sroa$0$i42$sroa$10$0$$sroa_raw_idx+20>>2]=HEAP32[$x$sroa$0$i42$sroa$10+20>>2]|0;HEAP32[$x$sroa$0$i42$sroa$10$0$$sroa_raw_idx+24>>2]=HEAP32[$x$sroa$0$i42$sroa$10+24>>2]|0;
      HEAP32[$0>>2] = $41;
      $43 = ((($0)) + 4|0);
      HEAP32[$43>>2] = 496;
      break;
     }
    }
   } while(0);
   STACKTOP = sp;return;
  }
 }
 $29 = HEAP32[$13>>2]|0;
 $30 = (FUNCTION_TABLE_ii[$29 & 511]($4)|0);
 $31 = tempRet0;
 $32 = ($30|0)==(-255454720);
 $33 = ($31|0)==(-1918276056);
 $34 = $32 & $33;
 $35 = ((($3)) + 36|0);
 if ($34) {
  $47 = HEAP32[$35>>2]|0;
  $48 = (FUNCTION_TABLE_ii[$47 & 511]($2)|0);
  if ($48) {
   do {
    if ($12) {
     ;HEAP32[$x$sroa$0$i58$sroa$4>>2]=HEAP32[$wo_manifold1$sroa$5>>2]|0;HEAP32[$x$sroa$0$i58$sroa$4+4>>2]=HEAP32[$wo_manifold1$sroa$5+4>>2]|0;HEAP32[$x$sroa$0$i58$sroa$4+8>>2]=HEAP32[$wo_manifold1$sroa$5+8>>2]|0;HEAP32[$x$sroa$0$i58$sroa$4+12>>2]=HEAP32[$wo_manifold1$sroa$5+12>>2]|0;HEAP32[$x$sroa$0$i58$sroa$4+16>>2]=HEAP32[$wo_manifold1$sroa$5+16>>2]|0;HEAP32[$x$sroa$0$i58$sroa$4+20>>2]=HEAP32[$wo_manifold1$sroa$5+20>>2]|0;HEAP32[$x$sroa$0$i58$sroa$4+24>>2]=HEAP32[$wo_manifold1$sroa$5+24>>2]|0;
     $49 = (_malloc(32)|0);
     $50 = ($49|0)==(0|0);
     if ($50) {
      __ZN5alloc3oom3oom17hb253cf665793f59eE();
      // unreachable;
     } else {
      HEAP32[$49>>2] = 0;
      $x$sroa$0$i58$sroa$4$0$$sroa_raw_idx = ((($49)) + 4|0);
      ;HEAP32[$x$sroa$0$i58$sroa$4$0$$sroa_raw_idx>>2]=HEAP32[$x$sroa$0$i58$sroa$4>>2]|0;HEAP32[$x$sroa$0$i58$sroa$4$0$$sroa_raw_idx+4>>2]=HEAP32[$x$sroa$0$i58$sroa$4+4>>2]|0;HEAP32[$x$sroa$0$i58$sroa$4$0$$sroa_raw_idx+8>>2]=HEAP32[$x$sroa$0$i58$sroa$4+8>>2]|0;HEAP32[$x$sroa$0$i58$sroa$4$0$$sroa_raw_idx+12>>2]=HEAP32[$x$sroa$0$i58$sroa$4+12>>2]|0;HEAP32[$x$sroa$0$i58$sroa$4$0$$sroa_raw_idx+16>>2]=HEAP32[$x$sroa$0$i58$sroa$4+16>>2]|0;HEAP32[$x$sroa$0$i58$sroa$4$0$$sroa_raw_idx+20>>2]=HEAP32[$x$sroa$0$i58$sroa$4+20>>2]|0;HEAP32[$x$sroa$0$i58$sroa$4$0$$sroa_raw_idx+24>>2]=HEAP32[$x$sroa$0$i58$sroa$4+24>>2]|0;
      HEAP32[$0>>2] = $49;
      $54 = ((($0)) + 4|0);
      HEAP32[$54>>2] = 424;
      break;
     }
    } else {
     ;HEAP32[$x$sroa$0$i63$sroa$10>>2]=HEAP32[$wo_manifold1$sroa$5>>2]|0;HEAP32[$x$sroa$0$i63$sroa$10+4>>2]=HEAP32[$wo_manifold1$sroa$5+4>>2]|0;HEAP32[$x$sroa$0$i63$sroa$10+8>>2]=HEAP32[$wo_manifold1$sroa$5+8>>2]|0;HEAP32[$x$sroa$0$i63$sroa$10+12>>2]=HEAP32[$wo_manifold1$sroa$5+12>>2]|0;HEAP32[$x$sroa$0$i63$sroa$10+16>>2]=HEAP32[$wo_manifold1$sroa$5+16>>2]|0;HEAP32[$x$sroa$0$i63$sroa$10+20>>2]=HEAP32[$wo_manifold1$sroa$5+20>>2]|0;HEAP32[$x$sroa$0$i63$sroa$10+24>>2]=HEAP32[$wo_manifold1$sroa$5+24>>2]|0;
     $51 = (_malloc(56)|0);
     $52 = ($51|0)==(0|0);
     if ($52) {
      __ZN5alloc3oom3oom17hb253cf665793f59eE();
      // unreachable;
     } else {
      temp_Int32x4_ptr = $51;SIMD_Int32x4_store(HEAPU8, temp_Int32x4_ptr, SIMD_Int32x4(1,0,0,1));
      $x$sroa$0$i63$sroa$7$0$$sroa_idx = ((($51)) + 16|0);
      HEAP32[$x$sroa$0$i63$sroa$7$0$$sroa_idx>>2] = 0;
      $x$sroa$0$i63$sroa$8$0$$sroa_idx = ((($51)) + 20|0);
      HEAP32[$x$sroa$0$i63$sroa$8$0$$sroa_idx>>2] = 0;
      $x$sroa$0$i63$sroa$9$0$$sroa_idx = ((($51)) + 24|0);
      HEAP32[$x$sroa$0$i63$sroa$9$0$$sroa_idx>>2] = 0;
      $x$sroa$0$i63$sroa$10$0$$sroa_raw_idx = ((($51)) + 28|0);
      ;HEAP32[$x$sroa$0$i63$sroa$10$0$$sroa_raw_idx>>2]=HEAP32[$x$sroa$0$i63$sroa$10>>2]|0;HEAP32[$x$sroa$0$i63$sroa$10$0$$sroa_raw_idx+4>>2]=HEAP32[$x$sroa$0$i63$sroa$10+4>>2]|0;HEAP32[$x$sroa$0$i63$sroa$10$0$$sroa_raw_idx+8>>2]=HEAP32[$x$sroa$0$i63$sroa$10+8>>2]|0;HEAP32[$x$sroa$0$i63$sroa$10$0$$sroa_raw_idx+12>>2]=HEAP32[$x$sroa$0$i63$sroa$10+12>>2]|0;HEAP32[$x$sroa$0$i63$sroa$10$0$$sroa_raw_idx+16>>2]=HEAP32[$x$sroa$0$i63$sroa$10+16>>2]|0;HEAP32[$x$sroa$0$i63$sroa$10$0$$sroa_raw_idx+20>>2]=HEAP32[$x$sroa$0$i63$sroa$10+20>>2]|0;HEAP32[$x$sroa$0$i63$sroa$10$0$$sroa_raw_idx+24>>2]=HEAP32[$x$sroa$0$i63$sroa$10+24>>2]|0;
      HEAP32[$0>>2] = $51;
      $53 = ((($0)) + 4|0);
      HEAP32[$53>>2] = 448;
      break;
     }
    }
   } while(0);
   STACKTOP = sp;return;
  }
 }
 $45 = HEAP32[$35>>2]|0;
 $46 = (FUNCTION_TABLE_ii[$45 & 511]($2)|0);
 if ($46) {
  $58 = ((($5)) + 36|0);
  $59 = HEAP32[$58>>2]|0;
  $60 = (FUNCTION_TABLE_ii[$59 & 511]($4)|0);
  if ($60) {
   __ZN87__LT_ncollide_geometry__query__algorithms__johnson_simplex__JohnsonSimplex_LT_P_GT__GT_9new_w_tls17ha5345257e29c92b1E($simplex);
   dest=$wo_manifold3$sroa$0; src=$simplex; stop=dest+40|0; do { HEAP32[dest>>2]=HEAP32[src>>2]|0; dest=dest+4|0; src=src+4|0; } while ((dest|0) < (stop|0));
   $or$cond$demorgan = $12 | $19;
   do {
    if ($or$cond$demorgan) {
     dest=$x$i$sroa$0; src=$wo_manifold3$sroa$0; stop=dest+40|0; do { HEAP32[dest>>2]=HEAP32[src>>2]|0; dest=dest+4|0; src=src+4|0; } while ((dest|0) < (stop|0));
     ;HEAP32[$x$i$sroa$5>>2]=HEAP32[$wo_manifold3$sroa$6>>2]|0;HEAP32[$x$i$sroa$5+4>>2]=HEAP32[$wo_manifold3$sroa$6+4>>2]|0;HEAP32[$x$i$sroa$5+8>>2]=HEAP32[$wo_manifold3$sroa$6+8>>2]|0;HEAP32[$x$i$sroa$5+12>>2]=HEAP32[$wo_manifold3$sroa$6+12>>2]|0;HEAP32[$x$i$sroa$5+16>>2]=HEAP32[$wo_manifold3$sroa$6+16>>2]|0;HEAP32[$x$i$sroa$5+20>>2]=HEAP32[$wo_manifold3$sroa$6+20>>2]|0;HEAP32[$x$i$sroa$5+24>>2]=HEAP32[$wo_manifold3$sroa$6+24>>2]|0;
     $61 = (_malloc(72)|0);
     $62 = ($61|0)==(0|0);
     if ($62) {
      __ZN5alloc3oom3oom17hb253cf665793f59eE();
      // unreachable;
     } else {
      dest=$61; src=$x$i$sroa$0; stop=dest+40|0; do { HEAP32[dest>>2]=HEAP32[src>>2]|0; dest=dest+4|0; src=src+4|0; } while ((dest|0) < (stop|0));
      $x$i$sroa$4$0$$sroa_idx = ((($61)) + 40|0);
      HEAP32[$x$i$sroa$4$0$$sroa_idx>>2] = 0;
      $x$i$sroa$5$0$$sroa_raw_idx = ((($61)) + 44|0);
      ;HEAP32[$x$i$sroa$5$0$$sroa_raw_idx>>2]=HEAP32[$x$i$sroa$5>>2]|0;HEAP32[$x$i$sroa$5$0$$sroa_raw_idx+4>>2]=HEAP32[$x$i$sroa$5+4>>2]|0;HEAP32[$x$i$sroa$5$0$$sroa_raw_idx+8>>2]=HEAP32[$x$i$sroa$5+8>>2]|0;HEAP32[$x$i$sroa$5$0$$sroa_raw_idx+12>>2]=HEAP32[$x$i$sroa$5+12>>2]|0;HEAP32[$x$i$sroa$5$0$$sroa_raw_idx+16>>2]=HEAP32[$x$i$sroa$5+16>>2]|0;HEAP32[$x$i$sroa$5$0$$sroa_raw_idx+20>>2]=HEAP32[$x$i$sroa$5+20>>2]|0;HEAP32[$x$i$sroa$5$0$$sroa_raw_idx+24>>2]=HEAP32[$x$i$sroa$5+24>>2]|0;
      HEAP32[$0>>2] = $61;
      $66 = ((($0)) + 4|0);
      HEAP32[$66>>2] = 376;
      break;
     }
    } else {
     dest=$x$sroa$0$i71$sroa$9; src=$wo_manifold3$sroa$0; stop=dest+40|0; do { HEAP32[dest>>2]=HEAP32[src>>2]|0; dest=dest+4|0; src=src+4|0; } while ((dest|0) < (stop|0));
     ;HEAP32[$x$sroa$0$i71$sroa$11>>2]=HEAP32[$wo_manifold3$sroa$6>>2]|0;HEAP32[$x$sroa$0$i71$sroa$11+4>>2]=HEAP32[$wo_manifold3$sroa$6+4>>2]|0;HEAP32[$x$sroa$0$i71$sroa$11+8>>2]=HEAP32[$wo_manifold3$sroa$6+8>>2]|0;HEAP32[$x$sroa$0$i71$sroa$11+12>>2]=HEAP32[$wo_manifold3$sroa$6+12>>2]|0;HEAP32[$x$sroa$0$i71$sroa$11+16>>2]=HEAP32[$wo_manifold3$sroa$6+16>>2]|0;HEAP32[$x$sroa$0$i71$sroa$11+20>>2]=HEAP32[$wo_manifold3$sroa$6+20>>2]|0;HEAP32[$x$sroa$0$i71$sroa$11+24>>2]=HEAP32[$wo_manifold3$sroa$6+24>>2]|0;
     $63 = (_malloc(96)|0);
     $64 = ($63|0)==(0|0);
     if ($64) {
      __ZN5alloc3oom3oom17hb253cf665793f59eE();
      // unreachable;
     } else {
      temp_Int32x4_ptr = $63;SIMD_Int32x4_store(HEAPU8, temp_Int32x4_ptr, SIMD_Int32x4(1,0,0,1));
      $x$sroa$0$i71$sroa$7$0$$sroa_idx = ((($63)) + 16|0);
      HEAP32[$x$sroa$0$i71$sroa$7$0$$sroa_idx>>2] = 0;
      $x$sroa$0$i71$sroa$8$0$$sroa_idx = ((($63)) + 20|0);
      HEAP32[$x$sroa$0$i71$sroa$8$0$$sroa_idx>>2] = 0;
      $x$sroa$0$i71$sroa$9$0$$sroa_raw_idx = ((($63)) + 24|0);
      dest=$x$sroa$0$i71$sroa$9$0$$sroa_raw_idx; src=$x$sroa$0$i71$sroa$9; stop=dest+40|0; do { HEAP32[dest>>2]=HEAP32[src>>2]|0; dest=dest+4|0; src=src+4|0; } while ((dest|0) < (stop|0));
      $x$sroa$0$i71$sroa$10$0$$sroa_idx = ((($63)) + 64|0);
      HEAP32[$x$sroa$0$i71$sroa$10$0$$sroa_idx>>2] = 0;
      $x$sroa$0$i71$sroa$11$0$$sroa_raw_idx = ((($63)) + 68|0);
      ;HEAP32[$x$sroa$0$i71$sroa$11$0$$sroa_raw_idx>>2]=HEAP32[$x$sroa$0$i71$sroa$11>>2]|0;HEAP32[$x$sroa$0$i71$sroa$11$0$$sroa_raw_idx+4>>2]=HEAP32[$x$sroa$0$i71$sroa$11+4>>2]|0;HEAP32[$x$sroa$0$i71$sroa$11$0$$sroa_raw_idx+8>>2]=HEAP32[$x$sroa$0$i71$sroa$11+8>>2]|0;HEAP32[$x$sroa$0$i71$sroa$11$0$$sroa_raw_idx+12>>2]=HEAP32[$x$sroa$0$i71$sroa$11+12>>2]|0;HEAP32[$x$sroa$0$i71$sroa$11$0$$sroa_raw_idx+16>>2]=HEAP32[$x$sroa$0$i71$sroa$11+16>>2]|0;HEAP32[$x$sroa$0$i71$sroa$11$0$$sroa_raw_idx+20>>2]=HEAP32[$x$sroa$0$i71$sroa$11+20>>2]|0;HEAP32[$x$sroa$0$i71$sroa$11$0$$sroa_raw_idx+24>>2]=HEAP32[$x$sroa$0$i71$sroa$11+24>>2]|0;
      HEAP32[$0>>2] = $63;
      $65 = ((($0)) + 4|0);
      HEAP32[$65>>2] = 400;
      break;
     }
    }
   } while(0);
   STACKTOP = sp;return;
  }
 }
 $55 = ((($3)) + 40|0);
 $56 = HEAP32[$55>>2]|0;
 $57 = (FUNCTION_TABLE_ii[$56 & 511]($2)|0);
 if ($57) {
  __ZN155__LT_ncollide_pipeline__narrow_phase__contact_generator__composite_shape_shape_contact_generator__CompositeShapeShapeContactGenerator_LT_P_C__u20_M_GT__GT_3new17h5f460a75bd32dbc8E($_75);
  dest=$x$i76; src=$_75; stop=dest+80|0; do { HEAP32[dest>>2]=HEAP32[src>>2]|0; dest=dest+4|0; src=src+4|0; } while ((dest|0) < (stop|0));
  $67 = (_malloc(80)|0);
  $68 = ($67|0)==(0|0);
  if ($68) {
   __ZN5alloc3oom3oom17hb253cf665793f59eE();
   // unreachable;
  }
  dest=$67; src=$x$i76; stop=dest+80|0; do { HEAP32[dest>>2]=HEAP32[src>>2]|0; dest=dest+4|0; src=src+4|0; } while ((dest|0) < (stop|0));
  HEAP32[$0>>2] = $67;
  $72 = ((($0)) + 4|0);
  HEAP32[$72>>2] = 352;
  STACKTOP = sp;return;
 }
 $69 = ((($5)) + 40|0);
 $70 = HEAP32[$69>>2]|0;
 $71 = (FUNCTION_TABLE_ii[$70 & 511]($4)|0);
 if (!($71)) {
  HEAP32[$0>>2] = 0;
  STACKTOP = sp;return;
 }
 __ZN155__LT_ncollide_pipeline__narrow_phase__contact_generator__composite_shape_shape_contact_generator__CompositeShapeShapeContactGenerator_LT_P_C__u20_M_GT__GT_3new17h5f460a75bd32dbc8E($_80$sroa$0);
 dest=$x$sroa$0$i; src=$_80$sroa$0; stop=dest+80|0; do { HEAP32[dest>>2]=HEAP32[src>>2]|0; dest=dest+4|0; src=src+4|0; } while ((dest|0) < (stop|0));
 $73 = (_malloc(80)|0);
 $74 = ($73|0)==(0|0);
 if ($74) {
  __ZN5alloc3oom3oom17hb253cf665793f59eE();
  // unreachable;
 }
 dest=$73; src=$x$sroa$0$i; stop=dest+80|0; do { HEAP32[dest>>2]=HEAP32[src>>2]|0; dest=dest+4|0; src=src+4|0; } while ((dest|0) < (stop|0));
 HEAP32[$0>>2] = $73;
 $75 = ((($0)) + 4|0);
 HEAP32[$75>>2] = 328;
 STACKTOP = sp;return;
}
function __ZN255__LT_ncollide_pipeline__narrow_phase__proximity_detector__ball_ball_proximity_detector__BallBallProximityDetector_LT_P_C__u20_M_GT__u20_as_u20_ncollide_pipeline__narrow_phase__proximity_detector__proximity_detector__ProximityDetector_LT_P_C__u20_M_GT__GT_6update17hb08aa96e951d235aE($0,$1,$2,$3,$4,$5,$6,$7,$8,$9) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 $7 = $7|0;
 $8 = $8|0;
 $9 = +$9;
 var $$$i = 0, $$$i8 = 0, $$$i9 = 0, $$idx$val$i = 0.0, $$idx2$val$i = 0.0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0.0, $27 = 0.0, $28 = 0, $29 = 0.0, $30 = 0.0, $31 = 0, $32 = 0.0, $33 = 0.0, $34 = 0, $35 = 0.0, $36 = 0.0, $37 = 0.0, $38 = 0.0, $39 = 0.0, $40 = 0.0, $41 = 0.0, $42 = 0.0, $43 = 0.0, $44 = 0.0;
 var $45 = 0, $46 = 0.0, $_0$0$i = 0, $_0$0$off0 = 0, $not$$i = 0, $or$cond = 0, $switch1tmp = 0, $switchtmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $10 = ((($5)) + 48|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = (FUNCTION_TABLE_ii[$11 & 511]($4)|0);
 $13 = tempRet0;
 $14 = ($12|0)==(391555669);
 $15 = ($13|0)==(162210410);
 $16 = $14 & $15;
 $$$i = $16 ? $4 : 0;
 $17 = ((($8)) + 48|0);
 $18 = HEAP32[$17>>2]|0;
 $19 = (FUNCTION_TABLE_ii[$18 & 511]($7)|0);
 $20 = tempRet0;
 $21 = ($19|0)==(391555669);
 $22 = ($20|0)==(162210410);
 $23 = $21 & $22;
 $$$i8 = $23 ? $7 : 0;
 $switch1tmp = ($$$i|0)==(0|0);
 $switchtmp = ($$$i8|0)==(0|0);
 $or$cond = $switch1tmp | $switchtmp;
 if ($or$cond) {
  $_0$0$off0 = 0;
  return ($_0$0$off0|0);
 }
 $24 = !($9 >= 0.0);
 if ($24) {
  __ZN3std9panicking11begin_panic17h9936a195de5ffc4dE(10586,46,5580);
  // unreachable;
 }
 $25 = ((($6)) + 20|0);
 $26 = +HEAPF32[$25>>2];
 $27 = $26 + 0.0;
 $28 = ((($6)) + 16|0);
 $29 = +HEAPF32[$28>>2];
 $30 = $29 + 0.0;
 $31 = ((($3)) + 20|0);
 $32 = +HEAPF32[$31>>2];
 $33 = $32 + 0.0;
 $34 = ((($3)) + 16|0);
 $35 = +HEAPF32[$34>>2];
 $36 = $35 + 0.0;
 $$idx2$val$i = +HEAPF32[$$$i>>2];
 $$idx$val$i = +HEAPF32[$$$i8>>2];
 $37 = $30 - $36;
 $38 = $27 - $33;
 $39 = $37 * $37;
 $40 = $38 * $38;
 $41 = $40 + $39;
 $42 = $$idx2$val$i + $$idx$val$i;
 $43 = $42 + $9;
 $44 = $43 * $43;
 $45 = !($41 <= $44);
 $46 = $42 * $42;
 $not$$i = !($41 <= $46);
 $$$i9 = $not$$i&1;
 $_0$0$i = $45 ? 2 : $$$i9;
 HEAP8[$0>>0] = $_0$0$i;
 $_0$0$off0 = 1;
 return ($_0$0$off0|0);
}
function __ZN255__LT_ncollide_pipeline__narrow_phase__proximity_detector__ball_ball_proximity_detector__BallBallProximityDetector_LT_P_C__u20_M_GT__u20_as_u20_ncollide_pipeline__narrow_phase__proximity_detector__proximity_detector__ProximityDetector_LT_P_C__u20_M_GT__GT_9proximity17hc2babea59de41fb0E($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP8[$0>>0]|0;
 return ($1|0);
}
function __ZN258__LT_ncollide_pipeline__narrow_phase__proximity_detector__default_proximity_dispatcher__DefaultProximityDispatcher_LT_P_C__u20_M_GT__u20_as_u20_ncollide_pipeline__narrow_phase__proximity_detector__proximity_detector__ProximityDispatcher_LT_P_C__u20_M_GT__GT_23get_proximity_algorithm17hbc389194cd5c4d08E($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0;
 var $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $7 = 0, $8 = 0;
 var $9 = 0, $_48 = 0, $_53$sroa$0 = 0, $brmerge$demorgan = 0, $simplex = 0, $x$i$sroa$0 = 0, $x$i$sroa$4$0$$sroa_raw_idx = 0, $x$i$sroa$5 = 0, $x$i$sroa$5$0$$sroa_raw_idx = 0, $x$i$sroa$6$0$$sroa_idx = 0, $x$i$sroa$7$0$$sroa_idx = 0, $x$i18 = 0, $x$sroa$0$i = 0, dest = 0, label = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 448|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(448|0);
 $x$i18 = sp + 344|0;
 $x$i$sroa$0 = sp + 304|0;
 $x$i$sroa$5 = sp + 432|0;
 $x$sroa$0$i = sp + 216|0;
 $simplex = sp + 176|0;
 $_48 = sp + 88|0;
 $_53$sroa$0 = sp;
 $6 = ((($3)) + 48|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = (FUNCTION_TABLE_ii[$7 & 511]($2)|0);
 $9 = tempRet0;
 $10 = ($8|0)==(391555669);
 $11 = ($9|0)==(162210410);
 $12 = $10 & $11;
 $13 = ((($5)) + 48|0);
 $14 = HEAP32[$13>>2]|0;
 $15 = (FUNCTION_TABLE_ii[$14 & 511]($4)|0);
 $16 = tempRet0;
 $17 = ($15|0)==(391555669);
 $18 = ($16|0)==(162210410);
 $19 = $17 & $18;
 $brmerge$demorgan = $12 & $19;
 if ($brmerge$demorgan) {
  $20 = (_malloc(1)|0);
  $21 = ($20|0)==(0|0);
  if ($21) {
   __ZN5alloc3oom3oom17hb253cf665793f59eE();
   // unreachable;
  }
  HEAP8[$20>>0] = 2;
  HEAP32[$0>>2] = $20;
  $22 = ((($0)) + 4|0);
  HEAP32[$22>>2] = 664;
  STACKTOP = sp;return;
 }
 $23 = HEAP32[$6>>2]|0;
 $24 = (FUNCTION_TABLE_ii[$23 & 511]($2)|0);
 $25 = tempRet0;
 $26 = ($24|0)==(-255454720);
 $27 = ($25|0)==(-1918276056);
 $28 = $26 & $27;
 if ($28) {
  $36 = ((($5)) + 36|0);
  $37 = HEAP32[$36>>2]|0;
  $38 = (FUNCTION_TABLE_ii[$37 & 511]($4)|0);
  if ($38) {
   $39 = (_malloc(1)|0);
   $40 = ($39|0)==(0|0);
   if ($40) {
    __ZN5alloc3oom3oom17hb253cf665793f59eE();
    // unreachable;
   }
   HEAP8[$39>>0] = 2;
   HEAP32[$0>>2] = $39;
   $41 = ((($0)) + 4|0);
   HEAP32[$41>>2] = 640;
   STACKTOP = sp;return;
  }
 }
 $29 = HEAP32[$13>>2]|0;
 $30 = (FUNCTION_TABLE_ii[$29 & 511]($4)|0);
 $31 = tempRet0;
 $32 = ($30|0)==(-255454720);
 $33 = ($31|0)==(-1918276056);
 $34 = $32 & $33;
 $35 = ((($3)) + 36|0);
 if ($34) {
  $44 = HEAP32[$35>>2]|0;
  $45 = (FUNCTION_TABLE_ii[$44 & 511]($2)|0);
  if ($45) {
   $46 = (_malloc(1)|0);
   $47 = ($46|0)==(0|0);
   if ($47) {
    __ZN5alloc3oom3oom17hb253cf665793f59eE();
    // unreachable;
   }
   HEAP8[$46>>0] = 2;
   HEAP32[$0>>2] = $46;
   $48 = ((($0)) + 4|0);
   HEAP32[$48>>2] = 616;
   STACKTOP = sp;return;
  }
 }
 $42 = HEAP32[$35>>2]|0;
 $43 = (FUNCTION_TABLE_ii[$42 & 511]($2)|0);
 if ($43) {
  $52 = ((($5)) + 36|0);
  $53 = HEAP32[$52>>2]|0;
  $54 = (FUNCTION_TABLE_ii[$53 & 511]($4)|0);
  if ($54) {
   __ZN87__LT_ncollide_geometry__query__algorithms__johnson_simplex__JohnsonSimplex_LT_P_GT__GT_9new_w_tls17ha5345257e29c92b1E($simplex);
   dest=$x$i$sroa$0; src=$simplex; stop=dest+40|0; do { HEAP32[dest>>2]=HEAP32[src>>2]|0; dest=dest+4|0; src=src+4|0; } while ((dest|0) < (stop|0));
   $55 = (_malloc(52)|0);
   $56 = ($55|0)==(0|0);
   if ($56) {
    __ZN5alloc3oom3oom17hb253cf665793f59eE();
    // unreachable;
   }
   dest=$55; src=$x$i$sroa$0; stop=dest+40|0; do { HEAP32[dest>>2]=HEAP32[src>>2]|0; dest=dest+4|0; src=src+4|0; } while ((dest|0) < (stop|0));
   $x$i$sroa$4$0$$sroa_raw_idx = ((($55)) + 40|0);
   HEAP8[$x$i$sroa$4$0$$sroa_raw_idx>>0] = 2;
   $x$i$sroa$5$0$$sroa_raw_idx = ((($55)) + 41|0);
   ;HEAP8[$x$i$sroa$5$0$$sroa_raw_idx>>0]=HEAP8[$x$i$sroa$5>>0]|0;HEAP8[$x$i$sroa$5$0$$sroa_raw_idx+1>>0]=HEAP8[$x$i$sroa$5+1>>0]|0;HEAP8[$x$i$sroa$5$0$$sroa_raw_idx+2>>0]=HEAP8[$x$i$sroa$5+2>>0]|0;
   $x$i$sroa$6$0$$sroa_idx = ((($55)) + 44|0);
   HEAP32[$x$i$sroa$6$0$$sroa_idx>>2] = 0;
   $x$i$sroa$7$0$$sroa_idx = ((($55)) + 48|0);
   HEAP32[$x$i$sroa$7$0$$sroa_idx>>2] = 0;
   HEAP32[$0>>2] = $55;
   $57 = ((($0)) + 4|0);
   HEAP32[$57>>2] = 592;
   STACKTOP = sp;return;
  }
 }
 $49 = ((($3)) + 40|0);
 $50 = HEAP32[$49>>2]|0;
 $51 = (FUNCTION_TABLE_ii[$50 & 511]($2)|0);
 if ($51) {
  __ZN158__LT_ncollide_pipeline__narrow_phase__proximity_detector__composite_shape_shape_proximity_detector__CompositeShapeShapeProximityDetector_LT_P_C__u20_M_GT__GT_3new17h7f611a8acd52177aE($_48);
  dest=$x$i18; src=$_48; stop=dest+88|0; do { HEAP32[dest>>2]=HEAP32[src>>2]|0; dest=dest+4|0; src=src+4|0; } while ((dest|0) < (stop|0));
  $58 = (_malloc(88)|0);
  $59 = ($58|0)==(0|0);
  if ($59) {
   __ZN5alloc3oom3oom17hb253cf665793f59eE();
   // unreachable;
  }
  dest=$58; src=$x$i18; stop=dest+88|0; do { HEAP32[dest>>2]=HEAP32[src>>2]|0; dest=dest+4|0; src=src+4|0; } while ((dest|0) < (stop|0));
  HEAP32[$0>>2] = $58;
  $60 = ((($0)) + 4|0);
  HEAP32[$60>>2] = 568;
  STACKTOP = sp;return;
 }
 $61 = ((($5)) + 40|0);
 $62 = HEAP32[$61>>2]|0;
 $63 = (FUNCTION_TABLE_ii[$62 & 511]($4)|0);
 if (!($63)) {
  HEAP32[$0>>2] = 0;
  STACKTOP = sp;return;
 }
 __ZN158__LT_ncollide_pipeline__narrow_phase__proximity_detector__composite_shape_shape_proximity_detector__CompositeShapeShapeProximityDetector_LT_P_C__u20_M_GT__GT_3new17h7f611a8acd52177aE($_53$sroa$0);
 dest=$x$sroa$0$i; src=$_53$sroa$0; stop=dest+88|0; do { HEAP32[dest>>2]=HEAP32[src>>2]|0; dest=dest+4|0; src=src+4|0; } while ((dest|0) < (stop|0));
 $64 = (_malloc(88)|0);
 $65 = ($64|0)==(0|0);
 if ($65) {
  __ZN5alloc3oom3oom17hb253cf665793f59eE();
  // unreachable;
 }
 dest=$64; src=$x$sroa$0$i; stop=dest+88|0; do { HEAP32[dest>>2]=HEAP32[src>>2]|0; dest=dest+4|0; src=src+4|0; } while ((dest|0) < (stop|0));
 HEAP32[$0>>2] = $64;
 $66 = ((($0)) + 4|0);
 HEAP32[$66>>2] = 544;
 STACKTOP = sp;return;
}
function __ZN264__LT_ncollide_pipeline__narrow_phase__contact_generator__plane_support_map_contact_generator__PlaneSupportMapContactGenerator_LT_P_C__u20_M_GT__u20_as_u20_ncollide_pipeline__narrow_phase__contact_generator__contact_generator__ContactGenerator_LT_P_C__u20_M_GT__GT_12num_contacts17h68af39e0c4e527d9E($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[$0>>2]|0;
 return ($1|0);
}
function __ZN264__LT_ncollide_pipeline__narrow_phase__contact_generator__plane_support_map_contact_generator__PlaneSupportMapContactGenerator_LT_P_C__u20_M_GT__u20_as_u20_ncollide_pipeline__narrow_phase__contact_generator__contact_generator__ContactGenerator_LT_P_C__u20_M_GT__GT_6update17hbdf7ac476cf5634eE($0,$1,$2,$3,$4,$5,$6,$7,$8,$9) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 $7 = $7|0;
 $8 = $8|0;
 $9 = +$9;
 var $$$i = 0, $$idx$val$i = 0.0, $$idx17$i = 0, $$idx17$val$i = 0.0, $$sink$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0.0, $20 = 0.0, $21 = 0.0, $22 = 0.0, $23 = 0.0, $24 = 0.0;
 var $25 = 0, $26 = 0, $27 = 0.0, $28 = 0.0, $29 = 0.0, $30 = 0.0, $31 = 0.0, $32 = 0.0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0.0, $40 = 0.0, $41 = 0.0, $42 = 0.0, $43 = 0.0, $44 = 0.0;
 var $45 = 0.0, $46 = 0.0, $47 = 0, $48 = 0.0, $49 = 0.0, $50 = 0.0, $51 = 0.0, $_0$0$off0 = 0, $_14$sroa$5$4$copyload = 0, $_14$sroa$8$4$$sroa_idx12 = 0, $_14$sroa$8$4$copyload = 0, $_17 = 0, $_21$sroa$10$0$$sroa_idx30 = 0, $_21$sroa$4$0 = 0.0, $_21$sroa$4$0$$sroa_idx14 = 0, $_21$sroa$5$0 = 0.0, $_21$sroa$5$0$$sroa_idx17 = 0, $_21$sroa$6$0$$sroa_idx20 = 0, $_21$sroa$7$0$$sroa_idx22 = 0, $_21$sroa$8$0$$sroa_idx24 = 0;
 var $_21$sroa$9$0$$sroa_idx27 = 0, $_26$i = 0, $_5$sroa$0$0$copyload$i$i$i = 0.0, $_5$sroa$4$0$$sroa_idx2$i$i$i = 0, $_5$sroa$4$0$copyload$i$i$i = 0.0, $_5$sroa$5$0$$sroa_idx4$i$i$i = 0, $_5$sroa$5$0$copyload$i$i$i = 0.0, $_5$sroa$6$0$$sroa_idx6$i$i$i = 0, $_5$sroa$6$0$copyload$i$i$i = 0.0, $or$cond = 0, $switch1tmp = 0, $switchtmp = 0, $tmp_ret1$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $_26$i = sp + 16|0;
 $tmp_ret1$i = sp + 8|0;
 $_17 = sp;
 $10 = ((($5)) + 48|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = (FUNCTION_TABLE_ii[$11 & 511]($4)|0);
 $13 = tempRet0;
 $14 = ($12|0)==(-255454720);
 $15 = ($13|0)==(-1918276056);
 $16 = $14 & $15;
 $$$i = $16 ? $4 : 0;
 $17 = ((($8)) + 28|0);
 $18 = HEAP32[$17>>2]|0;
 FUNCTION_TABLE_vii[$18 & 511]($_17,$7);
 $_14$sroa$5$4$copyload = HEAP32[$_17>>2]|0;
 $switch1tmp = ($$$i|0)==(0|0);
 $switchtmp = ($_14$sroa$5$4$copyload|0)==(0|0);
 $or$cond = $switch1tmp | $switchtmp;
 if ($or$cond) {
  $_0$0$off0 = 0;
  STACKTOP = sp;return ($_0$0$off0|0);
 }
 $_14$sroa$8$4$$sroa_idx12 = ((($_17)) + 4|0);
 $_14$sroa$8$4$copyload = HEAP32[$_14$sroa$8$4$$sroa_idx12>>2]|0;
 $$idx$val$i = +HEAPF32[$$$i>>2];
 $$idx17$i = ((($$$i)) + 4|0);
 $$idx17$val$i = +HEAPF32[$$idx17$i>>2];
 $_5$sroa$0$0$copyload$i$i$i = +HEAPF32[$3>>2];
 $_5$sroa$4$0$$sroa_idx2$i$i$i = ((($3)) + 4|0);
 $_5$sroa$4$0$copyload$i$i$i = +HEAPF32[$_5$sroa$4$0$$sroa_idx2$i$i$i>>2];
 $_5$sroa$5$0$$sroa_idx4$i$i$i = ((($3)) + 8|0);
 $_5$sroa$5$0$copyload$i$i$i = +HEAPF32[$_5$sroa$5$0$$sroa_idx4$i$i$i>>2];
 $_5$sroa$6$0$$sroa_idx6$i$i$i = ((($3)) + 12|0);
 $_5$sroa$6$0$copyload$i$i$i = +HEAPF32[$_5$sroa$6$0$$sroa_idx6$i$i$i>>2];
 $19 = $$idx$val$i * $_5$sroa$0$0$copyload$i$i$i;
 $20 = $$idx17$val$i * $_5$sroa$5$0$copyload$i$i$i;
 $21 = $19 + $20;
 $22 = $$idx$val$i * $_5$sroa$4$0$copyload$i$i$i;
 $23 = $$idx17$val$i * $_5$sroa$6$0$copyload$i$i$i;
 $24 = $22 + $23;
 $25 = ((($3)) + 16|0);
 $26 = ((($3)) + 20|0);
 $27 = +HEAPF32[$25>>2];
 $28 = +HEAPF32[$26>>2];
 $29 = $27 + 0.0;
 $30 = $28 + 0.0;
 $31 = -$21;
 $32 = -$24;
 HEAPF32[$_26$i>>2] = $31;
 $33 = ((($_26$i)) + 4|0);
 HEAPF32[$33>>2] = $32;
 $34 = ((($_14$sroa$8$4$copyload)) + 12|0);
 $35 = HEAP32[$34>>2]|0;
 FUNCTION_TABLE_viiii[$35 & 511]($tmp_ret1$i,$_14$sroa$5$4$copyload,$6,$_26$i);
 $36 = ((($tmp_ret1$i)) + 4|0);
 $37 = HEAP32[$tmp_ret1$i>>2]|0;
 $38 = HEAP32[$36>>2]|0;
 $39 = (HEAP32[tempDoublePtr>>2]=$37,+HEAPF32[tempDoublePtr>>2]);
 $40 = (HEAP32[tempDoublePtr>>2]=$38,+HEAPF32[tempDoublePtr>>2]);
 $41 = $29 - $39;
 $42 = $30 - $40;
 $43 = $21 * $41;
 $44 = $24 * $42;
 $45 = $43 + $44;
 $46 = -$9;
 $47 = $45 > $46;
 if ($47) {
  $48 = $21 * $45;
  $49 = $24 * $45;
  $50 = $39 + $48;
  $51 = $40 + $49;
  $$sink$i = 1;$_21$sroa$4$0 = $50;$_21$sroa$5$0 = $51;
 } else {
  $$sink$i = 0;$_21$sroa$4$0 = 0.0;$_21$sroa$5$0 = 0.0;
 }
 HEAP32[$0>>2] = $$sink$i;
 $_21$sroa$4$0$$sroa_idx14 = ((($0)) + 4|0);
 HEAPF32[$_21$sroa$4$0$$sroa_idx14>>2] = $_21$sroa$4$0;
 $_21$sroa$5$0$$sroa_idx17 = ((($0)) + 8|0);
 HEAPF32[$_21$sroa$5$0$$sroa_idx17>>2] = $_21$sroa$5$0;
 $_21$sroa$6$0$$sroa_idx20 = ((($0)) + 12|0);
 HEAP32[$_21$sroa$6$0$$sroa_idx20>>2] = $37;
 $_21$sroa$7$0$$sroa_idx22 = ((($0)) + 16|0);
 HEAP32[$_21$sroa$7$0$$sroa_idx22>>2] = $38;
 $_21$sroa$8$0$$sroa_idx24 = ((($0)) + 20|0);
 HEAPF32[$_21$sroa$8$0$$sroa_idx24>>2] = $21;
 $_21$sroa$9$0$$sroa_idx27 = ((($0)) + 24|0);
 HEAPF32[$_21$sroa$9$0$$sroa_idx27>>2] = $24;
 $_21$sroa$10$0$$sroa_idx30 = ((($0)) + 28|0);
 HEAPF32[$_21$sroa$10$0$$sroa_idx30>>2] = $45;
 $_0$0$off0 = 1;
 STACKTOP = sp;return ($_0$0$off0|0);
}
function __ZN264__LT_ncollide_pipeline__narrow_phase__contact_generator__plane_support_map_contact_generator__PlaneSupportMapContactGenerator_LT_P_C__u20_M_GT__u20_as_u20_ncollide_pipeline__narrow_phase__contact_generator__contact_generator__ContactGenerator_LT_P_C__u20_M_GT__GT_8contacts17h36061961838bd74aE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$idx$i = 0, $$idx$val$i = 0, $$idx$val12$i = 0, $$idx3$i = 0, $$idx3$val13$i = 0, $$pre$i = 0, $$val14$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = SIMD_Int32x4(0,0,0,0), $7 = 0, $8 = 0, $9 = 0;
 var $switch = 0, $value$i$sroa$7$0$$sroa_idx36 = 0, $value$i$sroa$8$0$$sroa_idx39 = 0, $value$i$sroa$9$0$$sroa_idx42 = 0, label = 0, sp = 0, temp_Int32x4_ptr = 0;
 sp = STACKTOP;
 $2 = HEAP32[$0>>2]|0;
 $switch = ($2|0)==(1);
 if (!($switch)) {
  return;
 }
 $3 = ((($0)) + 20|0);
 $4 = ((($0)) + 28|0);
 $5 = ((($0)) + 4|0);
 $6 = SIMD_Int32x4_load(HEAPU8, $5);
 $$idx$val12$i = HEAP32[$3>>2]|0;
 $$idx3$i = ((($0)) + 24|0);
 $$idx3$val13$i = HEAP32[$$idx3$i>>2]|0;
 $$val14$i = HEAP32[$4>>2]|0;
 $7 = ((($1)) + 8|0);
 $8 = HEAP32[$7>>2]|0;
 $$idx$i = ((($1)) + 4|0);
 $$idx$val$i = HEAP32[$$idx$i>>2]|0;
 $9 = ($8|0)==($$idx$val$i|0);
 if ($9) {
  __ZN40__LT_alloc__raw_vec__RawVec_LT_T_GT__GT_6double17ha4899d9ca8626977E($1);
  $$pre$i = HEAP32[$7>>2]|0;
  $12 = $$pre$i;
 } else {
  $12 = $8;
 }
 $10 = HEAP32[$1>>2]|0;
 $11 = (($10) + (($12*28)|0)|0);
 temp_Int32x4_ptr = $11;SIMD_Int32x4_store(HEAPU8, temp_Int32x4_ptr, $6);
 $value$i$sroa$7$0$$sroa_idx36 = (((($10) + (($12*28)|0)|0)) + 16|0);
 HEAP32[$value$i$sroa$7$0$$sroa_idx36>>2] = $$idx$val12$i;
 $value$i$sroa$8$0$$sroa_idx39 = (((($10) + (($12*28)|0)|0)) + 20|0);
 HEAP32[$value$i$sroa$8$0$$sroa_idx39>>2] = $$idx3$val13$i;
 $value$i$sroa$9$0$$sroa_idx42 = (((($10) + (($12*28)|0)|0)) + 24|0);
 HEAP32[$value$i$sroa$9$0$$sroa_idx42>>2] = $$val14$i;
 $13 = HEAP32[$7>>2]|0;
 $14 = (($13) + 1)|0;
 HEAP32[$7>>2] = $14;
 return;
}
function __ZN264__LT_ncollide_pipeline__narrow_phase__contact_generator__plane_support_map_contact_generator__SupportMapPlaneContactGenerator_LT_P_C__u20_M_GT__u20_as_u20_ncollide_pipeline__narrow_phase__contact_generator__contact_generator__ContactGenerator_LT_P_C__u20_M_GT__GT_12num_contacts17hf3f7900007ba9c4fE($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[$0>>2]|0;
 return ($1|0);
}
function __ZN264__LT_ncollide_pipeline__narrow_phase__contact_generator__plane_support_map_contact_generator__SupportMapPlaneContactGenerator_LT_P_C__u20_M_GT__u20_as_u20_ncollide_pipeline__narrow_phase__contact_generator__contact_generator__ContactGenerator_LT_P_C__u20_M_GT__GT_6update17hd558fda1d6aca0b3E($0,$1,$2,$3,$4,$5,$6,$7,$8,$9) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 $7 = $7|0;
 $8 = $8|0;
 $9 = +$9;
 var $$$i = 0, $$idx13$val = 0.0, $$idx14 = 0, $$idx14$val = 0.0, $$sink$i5$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0.0, $20 = 0.0, $21 = 0.0, $22 = 0.0, $23 = 0.0, $24 = 0.0;
 var $25 = 0, $26 = 0, $27 = 0.0, $28 = 0.0, $29 = 0.0, $30 = 0.0, $31 = 0.0, $32 = 0.0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0.0, $40 = 0.0, $41 = 0.0, $42 = 0.0, $43 = 0.0, $44 = 0.0;
 var $45 = 0.0, $46 = 0.0, $47 = 0, $48 = 0.0, $49 = 0.0, $50 = 0.0, $51 = 0.0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $_0$0$off0 = 0, $_14$sroa$0$0$copyload = 0, $_14$sroa$5$0$$sroa_idx10 = 0, $_14$sroa$5$0$copyload = 0, $_15 = 0, $_21$sroa$4$0$$sroa_idx16 = 0, $_21$sroa$5$0 = 0.0;
 var $_21$sroa$5$0$$sroa_idx19 = 0, $_21$sroa$6$0 = 0.0, $_21$sroa$6$0$$sroa_idx22 = 0, $_21$sroa$7$0$$sroa_idx25 = 0, $_21$sroa$8$0$$sroa_idx28 = 0, $_21$sroa$9$0$$sroa_idx31 = 0, $_26$i$i = 0, $_5$sroa$0$0$copyload$i$i$i$i = 0.0, $_5$sroa$4$0$$sroa_idx2$i$i$i$i = 0, $_5$sroa$4$0$copyload$i$i$i$i = 0.0, $_5$sroa$5$0$$sroa_idx4$i$i$i$i = 0, $_5$sroa$5$0$copyload$i$i$i$i = 0.0, $_5$sroa$6$0$$sroa_idx6$i$i$i$i = 0, $_5$sroa$6$0$copyload$i$i$i$i = 0.0, $or$cond = 0, $switch1tmp = 0, $switchtmp = 0, $tmp_ret1$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $_26$i$i = sp + 16|0;
 $tmp_ret1$i$i = sp + 8|0;
 $_15 = sp;
 $10 = ((($5)) + 28|0);
 $11 = HEAP32[$10>>2]|0;
 FUNCTION_TABLE_vii[$11 & 511]($_15,$4);
 $12 = ((($8)) + 48|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = (FUNCTION_TABLE_ii[$13 & 511]($7)|0);
 $15 = tempRet0;
 $16 = ($14|0)==(-255454720);
 $17 = ($15|0)==(-1918276056);
 $18 = $16 & $17;
 $$$i = $18 ? $7 : 0;
 $_14$sroa$0$0$copyload = HEAP32[$_15>>2]|0;
 $switch1tmp = ($_14$sroa$0$0$copyload|0)==(0|0);
 $switchtmp = ($$$i|0)==(0|0);
 $or$cond = $switch1tmp | $switchtmp;
 if ($or$cond) {
  $_0$0$off0 = 0;
  STACKTOP = sp;return ($_0$0$off0|0);
 }
 $_14$sroa$5$0$$sroa_idx10 = ((($_15)) + 4|0);
 $_14$sroa$5$0$copyload = HEAP32[$_14$sroa$5$0$$sroa_idx10>>2]|0;
 $$idx13$val = +HEAPF32[$$$i>>2];
 $$idx14 = ((($$$i)) + 4|0);
 $$idx14$val = +HEAPF32[$$idx14>>2];
 $_5$sroa$0$0$copyload$i$i$i$i = +HEAPF32[$6>>2];
 $_5$sroa$4$0$$sroa_idx2$i$i$i$i = ((($6)) + 4|0);
 $_5$sroa$4$0$copyload$i$i$i$i = +HEAPF32[$_5$sroa$4$0$$sroa_idx2$i$i$i$i>>2];
 $_5$sroa$5$0$$sroa_idx4$i$i$i$i = ((($6)) + 8|0);
 $_5$sroa$5$0$copyload$i$i$i$i = +HEAPF32[$_5$sroa$5$0$$sroa_idx4$i$i$i$i>>2];
 $_5$sroa$6$0$$sroa_idx6$i$i$i$i = ((($6)) + 12|0);
 $_5$sroa$6$0$copyload$i$i$i$i = +HEAPF32[$_5$sroa$6$0$$sroa_idx6$i$i$i$i>>2];
 $19 = $$idx13$val * $_5$sroa$0$0$copyload$i$i$i$i;
 $20 = $$idx14$val * $_5$sroa$5$0$copyload$i$i$i$i;
 $21 = $19 + $20;
 $22 = $$idx13$val * $_5$sroa$4$0$copyload$i$i$i$i;
 $23 = $$idx14$val * $_5$sroa$6$0$copyload$i$i$i$i;
 $24 = $22 + $23;
 $25 = ((($6)) + 16|0);
 $26 = ((($6)) + 20|0);
 $27 = +HEAPF32[$25>>2];
 $28 = +HEAPF32[$26>>2];
 $29 = $27 + 0.0;
 $30 = $28 + 0.0;
 $31 = -$21;
 $32 = -$24;
 HEAPF32[$_26$i$i>>2] = $31;
 $33 = ((($_26$i$i)) + 4|0);
 HEAPF32[$33>>2] = $32;
 $34 = ((($_14$sroa$5$0$copyload)) + 12|0);
 $35 = HEAP32[$34>>2]|0;
 FUNCTION_TABLE_viiii[$35 & 511]($tmp_ret1$i$i,$_14$sroa$0$0$copyload,$3,$_26$i$i);
 $36 = ((($tmp_ret1$i$i)) + 4|0);
 $37 = HEAP32[$tmp_ret1$i$i>>2]|0;
 $38 = HEAP32[$36>>2]|0;
 $39 = (HEAP32[tempDoublePtr>>2]=$37,+HEAPF32[tempDoublePtr>>2]);
 $40 = (HEAP32[tempDoublePtr>>2]=$38,+HEAPF32[tempDoublePtr>>2]);
 $41 = $29 - $39;
 $42 = $30 - $40;
 $43 = $21 * $41;
 $44 = $24 * $42;
 $45 = $43 + $44;
 $46 = -$9;
 $47 = $45 > $46;
 if ($47) {
  $48 = $21 * $45;
  $49 = $24 * $45;
  $50 = $39 + $48;
  $51 = $40 + $49;
  $$sink$i5$i = 1;$54 = $37;$57 = $38;$_21$sroa$5$0 = $50;$_21$sroa$6$0 = $51;
 } else {
  $$sink$i5$i = 0;$54 = 0;$57 = 0;$_21$sroa$5$0 = 0.0;$_21$sroa$6$0 = 0.0;
 }
 HEAP32[$0>>2] = $$sink$i5$i;
 $_21$sroa$4$0$$sroa_idx16 = ((($0)) + 4|0);
 $52 = $_21$sroa$4$0$$sroa_idx16;
 $53 = $52;
 HEAP32[$53>>2] = $54;
 $55 = (($52) + 4)|0;
 $56 = $55;
 HEAP32[$56>>2] = $57;
 $_21$sroa$5$0$$sroa_idx19 = ((($0)) + 12|0);
 HEAPF32[$_21$sroa$5$0$$sroa_idx19>>2] = $_21$sroa$5$0;
 $_21$sroa$6$0$$sroa_idx22 = ((($0)) + 16|0);
 HEAPF32[$_21$sroa$6$0$$sroa_idx22>>2] = $_21$sroa$6$0;
 $_21$sroa$7$0$$sroa_idx25 = ((($0)) + 20|0);
 HEAPF32[$_21$sroa$7$0$$sroa_idx25>>2] = $31;
 $_21$sroa$8$0$$sroa_idx28 = ((($0)) + 24|0);
 HEAPF32[$_21$sroa$8$0$$sroa_idx28>>2] = $32;
 $_21$sroa$9$0$$sroa_idx31 = ((($0)) + 28|0);
 HEAPF32[$_21$sroa$9$0$$sroa_idx31>>2] = $45;
 $_0$0$off0 = 1;
 STACKTOP = sp;return ($_0$0$off0|0);
}
function __ZN264__LT_ncollide_pipeline__narrow_phase__contact_generator__plane_support_map_contact_generator__SupportMapPlaneContactGenerator_LT_P_C__u20_M_GT__u20_as_u20_ncollide_pipeline__narrow_phase__contact_generator__contact_generator__ContactGenerator_LT_P_C__u20_M_GT__GT_8contacts17h8a0af12493b582daE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$idx$i = 0, $$idx$val$i = 0, $$idx$val12$i = 0, $$idx3$i = 0, $$idx3$val13$i = 0, $$pre$i = 0, $$val14$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = SIMD_Int32x4(0,0,0,0), $7 = 0, $8 = 0, $9 = 0;
 var $switch = 0, $value$i$sroa$7$0$$sroa_idx36 = 0, $value$i$sroa$8$0$$sroa_idx39 = 0, $value$i$sroa$9$0$$sroa_idx42 = 0, label = 0, sp = 0, temp_Int32x4_ptr = 0;
 sp = STACKTOP;
 $2 = HEAP32[$0>>2]|0;
 $switch = ($2|0)==(1);
 if (!($switch)) {
  return;
 }
 $3 = ((($0)) + 20|0);
 $4 = ((($0)) + 28|0);
 $5 = ((($0)) + 4|0);
 $6 = SIMD_Int32x4_load(HEAPU8, $5);
 $$idx$val12$i = HEAP32[$3>>2]|0;
 $$idx3$i = ((($0)) + 24|0);
 $$idx3$val13$i = HEAP32[$$idx3$i>>2]|0;
 $$val14$i = HEAP32[$4>>2]|0;
 $7 = ((($1)) + 8|0);
 $8 = HEAP32[$7>>2]|0;
 $$idx$i = ((($1)) + 4|0);
 $$idx$val$i = HEAP32[$$idx$i>>2]|0;
 $9 = ($8|0)==($$idx$val$i|0);
 if ($9) {
  __ZN40__LT_alloc__raw_vec__RawVec_LT_T_GT__GT_6double17ha4899d9ca8626977E($1);
  $$pre$i = HEAP32[$7>>2]|0;
  $12 = $$pre$i;
 } else {
  $12 = $8;
 }
 $10 = HEAP32[$1>>2]|0;
 $11 = (($10) + (($12*28)|0)|0);
 temp_Int32x4_ptr = $11;SIMD_Int32x4_store(HEAPU8, temp_Int32x4_ptr, $6);
 $value$i$sroa$7$0$$sroa_idx36 = (((($10) + (($12*28)|0)|0)) + 16|0);
 HEAP32[$value$i$sroa$7$0$$sroa_idx36>>2] = $$idx$val12$i;
 $value$i$sroa$8$0$$sroa_idx39 = (((($10) + (($12*28)|0)|0)) + 20|0);
 HEAP32[$value$i$sroa$8$0$$sroa_idx39>>2] = $$idx3$val13$i;
 $value$i$sroa$9$0$$sroa_idx42 = (((($10) + (($12*28)|0)|0)) + 24|0);
 HEAP32[$value$i$sroa$9$0$$sroa_idx42>>2] = $$val14$i;
 $13 = HEAP32[$7>>2]|0;
 $14 = (($13) + 1)|0;
 HEAP32[$7>>2] = $14;
 return;
}
function __ZN270__LT_ncollide_pipeline__narrow_phase__proximity_detector__plane_support_map_proximity_detector__PlaneSupportMapProximityDetector_LT_P_C__u20_M_GT__u20_as_u20_ncollide_pipeline__narrow_phase__proximity_detector__proximity_detector__ProximityDetector_LT_P_C__u20_M_GT__GT_6update17hf5868b13b688a7caE($0,$1,$2,$3,$4,$5,$6,$7,$8,$9) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 $7 = $7|0;
 $8 = $8|0;
 $9 = +$9;
 var $$$i = 0, $$$i9 = 0, $$idx$val$i = 0.0, $$idx8$i = 0, $$idx8$val$i = 0.0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0.0, $21 = 0.0, $22 = 0.0, $23 = 0.0, $24 = 0.0;
 var $25 = 0.0, $26 = 0, $27 = 0, $28 = 0.0, $29 = 0.0, $30 = 0.0, $31 = 0.0, $32 = 0.0, $33 = 0.0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0.0, $39 = 0.0, $40 = 0.0, $41 = 0.0, $42 = 0.0, $43 = 0.0, $44 = 0.0;
 var $45 = 0.0, $46 = 0, $_0$0$i = 0, $_0$0$off0 = 0, $_14$sroa$5$4$copyload = 0, $_14$sroa$8$4$$sroa_idx8 = 0, $_14$sroa$8$4$copyload = 0, $_17 = 0, $_35$i = 0, $_5$sroa$0$0$copyload$i$i$i = 0.0, $_5$sroa$4$0$$sroa_idx2$i$i$i = 0, $_5$sroa$4$0$copyload$i$i$i = 0.0, $_5$sroa$5$0$$sroa_idx4$i$i$i = 0, $_5$sroa$5$0$copyload$i$i$i = 0.0, $_5$sroa$6$0$$sroa_idx6$i$i$i = 0, $_5$sroa$6$0$copyload$i$i$i = 0.0, $not$$i = 0, $or$cond = 0, $switch1tmp = 0, $switchtmp = 0;
 var $tmp_ret1$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $_35$i = sp + 16|0;
 $tmp_ret1$i = sp + 8|0;
 $_17 = sp;
 $10 = ((($5)) + 48|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = (FUNCTION_TABLE_ii[$11 & 511]($4)|0);
 $13 = tempRet0;
 $14 = ($12|0)==(-255454720);
 $15 = ($13|0)==(-1918276056);
 $16 = $14 & $15;
 $$$i = $16 ? $4 : 0;
 $17 = ((($8)) + 28|0);
 $18 = HEAP32[$17>>2]|0;
 FUNCTION_TABLE_vii[$18 & 511]($_17,$7);
 $_14$sroa$5$4$copyload = HEAP32[$_17>>2]|0;
 $_14$sroa$8$4$$sroa_idx8 = ((($_17)) + 4|0);
 $_14$sroa$8$4$copyload = HEAP32[$_14$sroa$8$4$$sroa_idx8>>2]|0;
 $switch1tmp = ($$$i|0)==(0|0);
 $switchtmp = ($_14$sroa$5$4$copyload|0)==(0|0);
 $or$cond = $switch1tmp | $switchtmp;
 if ($or$cond) {
  $_0$0$off0 = 0;
  STACKTOP = sp;return ($_0$0$off0|0);
 }
 $19 = !($9 >= 0.0);
 if ($19) {
  __ZN3std9panicking11begin_panic17h9936a195de5ffc4dE(10586,46,5604);
  // unreachable;
 }
 $$idx$val$i = +HEAPF32[$$$i>>2];
 $$idx8$i = ((($$$i)) + 4|0);
 $$idx8$val$i = +HEAPF32[$$idx8$i>>2];
 $_5$sroa$0$0$copyload$i$i$i = +HEAPF32[$3>>2];
 $_5$sroa$4$0$$sroa_idx2$i$i$i = ((($3)) + 4|0);
 $_5$sroa$4$0$copyload$i$i$i = +HEAPF32[$_5$sroa$4$0$$sroa_idx2$i$i$i>>2];
 $_5$sroa$5$0$$sroa_idx4$i$i$i = ((($3)) + 8|0);
 $_5$sroa$5$0$copyload$i$i$i = +HEAPF32[$_5$sroa$5$0$$sroa_idx4$i$i$i>>2];
 $_5$sroa$6$0$$sroa_idx6$i$i$i = ((($3)) + 12|0);
 $_5$sroa$6$0$copyload$i$i$i = +HEAPF32[$_5$sroa$6$0$$sroa_idx6$i$i$i>>2];
 $20 = $$idx$val$i * $_5$sroa$0$0$copyload$i$i$i;
 $21 = $$idx8$val$i * $_5$sroa$5$0$copyload$i$i$i;
 $22 = $20 + $21;
 $23 = $$idx$val$i * $_5$sroa$4$0$copyload$i$i$i;
 $24 = $$idx8$val$i * $_5$sroa$6$0$copyload$i$i$i;
 $25 = $23 + $24;
 $26 = ((($3)) + 16|0);
 $27 = ((($3)) + 20|0);
 $28 = +HEAPF32[$26>>2];
 $29 = +HEAPF32[$27>>2];
 $30 = $28 + 0.0;
 $31 = $29 + 0.0;
 $32 = -$22;
 $33 = -$25;
 HEAPF32[$_35$i>>2] = $32;
 $34 = ((($_35$i)) + 4|0);
 HEAPF32[$34>>2] = $33;
 $35 = ((($_14$sroa$8$4$copyload)) + 12|0);
 $36 = HEAP32[$35>>2]|0;
 FUNCTION_TABLE_viiii[$36 & 511]($tmp_ret1$i,$_14$sroa$5$4$copyload,$6,$_35$i);
 $37 = ((($tmp_ret1$i)) + 4|0);
 $38 = +HEAPF32[$tmp_ret1$i>>2];
 $39 = +HEAPF32[$37>>2];
 $40 = $30 - $38;
 $41 = $31 - $39;
 $42 = $22 * $40;
 $43 = $25 * $41;
 $44 = $42 + $43;
 $45 = -$9;
 $46 = $44 >= $45;
 $not$$i = !($44 >= 0.0);
 $$$i9 = $not$$i&1;
 $_0$0$i = $46 ? $$$i9 : 2;
 HEAP8[$0>>0] = $_0$0$i;
 $_0$0$off0 = 1;
 STACKTOP = sp;return ($_0$0$off0|0);
}
function __ZN270__LT_ncollide_pipeline__narrow_phase__proximity_detector__plane_support_map_proximity_detector__PlaneSupportMapProximityDetector_LT_P_C__u20_M_GT__u20_as_u20_ncollide_pipeline__narrow_phase__proximity_detector__proximity_detector__ProximityDetector_LT_P_C__u20_M_GT__GT_9proximity17hd78ff259c560b888E($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP8[$0>>0]|0;
 return ($1|0);
}
function __ZN270__LT_ncollide_pipeline__narrow_phase__proximity_detector__plane_support_map_proximity_detector__SupportMapPlaneProximityDetector_LT_P_C__u20_M_GT__u20_as_u20_ncollide_pipeline__narrow_phase__proximity_detector__proximity_detector__ProximityDetector_LT_P_C__u20_M_GT__GT_6update17h269c69513dd1ac9eE($0,$1,$2,$3,$4,$5,$6,$7,$8,$9) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 $7 = $7|0;
 $8 = $8|0;
 $9 = +$9;
 var $$$i$i = 0, $$$i9$i = 0, $$idx$val$i$i = 0.0, $$idx8$i$i = 0, $$idx8$val$i$i = 0.0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0.0, $21 = 0.0, $22 = 0.0, $23 = 0.0, $24 = 0.0;
 var $25 = 0.0, $26 = 0, $27 = 0, $28 = 0.0, $29 = 0.0, $30 = 0.0, $31 = 0.0, $32 = 0.0, $33 = 0.0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0.0, $39 = 0.0, $40 = 0.0, $41 = 0.0, $42 = 0.0, $43 = 0.0, $44 = 0.0;
 var $45 = 0.0, $46 = 0, $_0$0$i$i = 0, $_0$0$off0$i = 0, $_14$sroa$5$4$copyload$i = 0, $_14$sroa$8$4$$sroa_idx8$i = 0, $_14$sroa$8$4$copyload$i = 0, $_17$i = 0, $_35$i$i = 0, $_5$sroa$0$0$copyload$i$i$i$i = 0.0, $_5$sroa$4$0$$sroa_idx2$i$i$i$i = 0, $_5$sroa$4$0$copyload$i$i$i$i = 0.0, $_5$sroa$5$0$$sroa_idx4$i$i$i$i = 0, $_5$sroa$5$0$copyload$i$i$i$i = 0.0, $_5$sroa$6$0$$sroa_idx6$i$i$i$i = 0, $_5$sroa$6$0$copyload$i$i$i$i = 0.0, $not$$i$i = 0, $or$cond$i = 0, $switch1tmp$i = 0, $switchtmp$i = 0;
 var $tmp_ret1$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $_35$i$i = sp + 16|0;
 $tmp_ret1$i$i = sp + 8|0;
 $_17$i = sp;
 $10 = ((($8)) + 48|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = (FUNCTION_TABLE_ii[$11 & 511]($7)|0);
 $13 = tempRet0;
 $14 = ($12|0)==(-255454720);
 $15 = ($13|0)==(-1918276056);
 $16 = $14 & $15;
 $$$i$i = $16 ? $7 : 0;
 $17 = ((($5)) + 28|0);
 $18 = HEAP32[$17>>2]|0;
 FUNCTION_TABLE_vii[$18 & 511]($_17$i,$4);
 $_14$sroa$5$4$copyload$i = HEAP32[$_17$i>>2]|0;
 $_14$sroa$8$4$$sroa_idx8$i = ((($_17$i)) + 4|0);
 $_14$sroa$8$4$copyload$i = HEAP32[$_14$sroa$8$4$$sroa_idx8$i>>2]|0;
 $switch1tmp$i = ($$$i$i|0)==(0|0);
 $switchtmp$i = ($_14$sroa$5$4$copyload$i|0)==(0|0);
 $or$cond$i = $switch1tmp$i | $switchtmp$i;
 if ($or$cond$i) {
  $_0$0$off0$i = 0;
  STACKTOP = sp;return ($_0$0$off0$i|0);
 }
 $19 = !($9 >= 0.0);
 if ($19) {
  __ZN3std9panicking11begin_panic17h9936a195de5ffc4dE(10586,46,5604);
  // unreachable;
 }
 $$idx$val$i$i = +HEAPF32[$$$i$i>>2];
 $$idx8$i$i = ((($$$i$i)) + 4|0);
 $$idx8$val$i$i = +HEAPF32[$$idx8$i$i>>2];
 $_5$sroa$0$0$copyload$i$i$i$i = +HEAPF32[$6>>2];
 $_5$sroa$4$0$$sroa_idx2$i$i$i$i = ((($6)) + 4|0);
 $_5$sroa$4$0$copyload$i$i$i$i = +HEAPF32[$_5$sroa$4$0$$sroa_idx2$i$i$i$i>>2];
 $_5$sroa$5$0$$sroa_idx4$i$i$i$i = ((($6)) + 8|0);
 $_5$sroa$5$0$copyload$i$i$i$i = +HEAPF32[$_5$sroa$5$0$$sroa_idx4$i$i$i$i>>2];
 $_5$sroa$6$0$$sroa_idx6$i$i$i$i = ((($6)) + 12|0);
 $_5$sroa$6$0$copyload$i$i$i$i = +HEAPF32[$_5$sroa$6$0$$sroa_idx6$i$i$i$i>>2];
 $20 = $$idx$val$i$i * $_5$sroa$0$0$copyload$i$i$i$i;
 $21 = $$idx8$val$i$i * $_5$sroa$5$0$copyload$i$i$i$i;
 $22 = $20 + $21;
 $23 = $$idx$val$i$i * $_5$sroa$4$0$copyload$i$i$i$i;
 $24 = $$idx8$val$i$i * $_5$sroa$6$0$copyload$i$i$i$i;
 $25 = $23 + $24;
 $26 = ((($6)) + 16|0);
 $27 = ((($6)) + 20|0);
 $28 = +HEAPF32[$26>>2];
 $29 = +HEAPF32[$27>>2];
 $30 = $28 + 0.0;
 $31 = $29 + 0.0;
 $32 = -$22;
 $33 = -$25;
 HEAPF32[$_35$i$i>>2] = $32;
 $34 = ((($_35$i$i)) + 4|0);
 HEAPF32[$34>>2] = $33;
 $35 = ((($_14$sroa$8$4$copyload$i)) + 12|0);
 $36 = HEAP32[$35>>2]|0;
 FUNCTION_TABLE_viiii[$36 & 511]($tmp_ret1$i$i,$_14$sroa$5$4$copyload$i,$3,$_35$i$i);
 $37 = ((($tmp_ret1$i$i)) + 4|0);
 $38 = +HEAPF32[$tmp_ret1$i$i>>2];
 $39 = +HEAPF32[$37>>2];
 $40 = $30 - $38;
 $41 = $31 - $39;
 $42 = $22 * $40;
 $43 = $25 * $41;
 $44 = $42 + $43;
 $45 = -$9;
 $46 = $44 >= $45;
 $not$$i$i = !($44 >= 0.0);
 $$$i9$i = $not$$i$i&1;
 $_0$0$i$i = $46 ? $$$i9$i : 2;
 HEAP8[$0>>0] = $_0$0$i$i;
 $_0$0$off0$i = 1;
 STACKTOP = sp;return ($_0$0$off0$i|0);
}
function __ZN270__LT_ncollide_pipeline__narrow_phase__proximity_detector__plane_support_map_proximity_detector__SupportMapPlaneProximityDetector_LT_P_C__u20_M_GT__u20_as_u20_ncollide_pipeline__narrow_phase__proximity_detector__proximity_detector__ProximityDetector_LT_P_C__u20_M_GT__GT_9proximity17hf54513e1edd9e62fE($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP8[$0>>0]|0;
 return ($1|0);
}
function __ZN272__LT_ncollide_pipeline__narrow_phase__contact_generator__composite_shape_shape_contact_generator__CompositeShapeShapeContactGenerator_LT_P_C__u20_M_GT__u20_as_u20_ncollide_pipeline__narrow_phase__contact_generator__contact_generator__ContactGenerator_LT_P_C__u20_M_GT__GT_12num_contacts17hf27a5be103109ff9E($0) {
 $0 = $0|0;
 var $$idx$i = 0, $$idx$val$i = 0, $$idx1$i = 0, $$idx1$val$i = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $iter$sroa$0$0$in22 = 0, $or$cond21 = 0, $res$0$lcssa = 0, $res$023 = 0;
 var $switchtmp20 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $$idx$i = ((($0)) + 4|0);
 $$idx$val$i = HEAP32[$$idx$i>>2]|0;
 $$idx1$i = ((($0)) + 12|0);
 $$idx1$val$i = HEAP32[$$idx1$i>>2]|0;
 $1 = (($$idx$val$i) + (($$idx1$val$i*12)|0)|0);
 $2 = ($$idx1$val$i|0)==(0);
 $switchtmp20 = ($$idx$val$i|0)==(0|0);
 $or$cond21 = $2 | $switchtmp20;
 if ($or$cond21) {
  $res$0$lcssa = 0;
  return ($res$0$lcssa|0);
 } else {
  $iter$sroa$0$0$in22 = $$idx$val$i;$res$023 = 0;
 }
 while(1) {
  $3 = ((($iter$sroa$0$0$in22)) + 12|0);
  $4 = ((($iter$sroa$0$0$in22)) + 4|0);
  $5 = HEAP32[$4>>2]|0;
  $6 = ((($iter$sroa$0$0$in22)) + 8|0);
  $7 = HEAP32[$6>>2]|0;
  $8 = ((($7)) + 16|0);
  $9 = HEAP32[$8>>2]|0;
  $10 = (FUNCTION_TABLE_ii[$9 & 511]($5)|0);
  $11 = (($10) + ($res$023))|0;
  $12 = ($3|0)==($1|0);
  if ($12) {
   $res$0$lcssa = $11;
   break;
  } else {
   $iter$sroa$0$0$in22 = $3;$res$023 = $11;
  }
 }
 return ($res$0$lcssa|0);
}
function __ZN272__LT_ncollide_pipeline__narrow_phase__contact_generator__composite_shape_shape_contact_generator__CompositeShapeShapeContactGenerator_LT_P_C__u20_M_GT__u20_as_u20_ncollide_pipeline__narrow_phase__contact_generator__contact_generator__ContactGenerator_LT_P_C__u20_M_GT__GT_6update17ha403ed4f314eefb2E($0,$1,$2,$3,$4,$5,$6,$7,$8,$9) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 $7 = $7|0;
 $8 = $8|0;
 $9 = +$9;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $_0$0$off0 = 0, $_15 = 0, $switchtmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $_15 = sp;
 $10 = ((($5)) + 32|0);
 $11 = HEAP32[$10>>2]|0;
 FUNCTION_TABLE_vii[$11 & 511]($_15,$4);
 $12 = HEAP32[$_15>>2]|0;
 $switchtmp = ($12|0)==(0|0);
 if ($switchtmp) {
  $_0$0$off0 = 0;
  STACKTOP = sp;return ($_0$0$off0|0);
 }
 $13 = ((($_15)) + 4|0);
 $14 = HEAP32[$13>>2]|0;
 __ZN155__LT_ncollide_pipeline__narrow_phase__contact_generator__composite_shape_shape_contact_generator__CompositeShapeShapeContactGenerator_LT_P_C__u20_M_GT__GT_9do_update17h121b4dfd04ed8217E($0,$1,$2,$3,$12,$14,$6,$7,$8,$9,0);
 $_0$0$off0 = 1;
 STACKTOP = sp;return ($_0$0$off0|0);
}
function __ZN272__LT_ncollide_pipeline__narrow_phase__contact_generator__composite_shape_shape_contact_generator__CompositeShapeShapeContactGenerator_LT_P_C__u20_M_GT__u20_as_u20_ncollide_pipeline__narrow_phase__contact_generator__contact_generator__ContactGenerator_LT_P_C__u20_M_GT__GT_8contacts17hdba1dd5ebcce8e95E($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$idx$i = 0, $$idx$val$i = 0, $$idx1$i = 0, $$idx1$val$i = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $iter$sroa$0$0$in20 = 0, $or$cond19 = 0, $switchtmp18 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $$idx$i = ((($0)) + 4|0);
 $$idx$val$i = HEAP32[$$idx$i>>2]|0;
 $$idx1$i = ((($0)) + 12|0);
 $$idx1$val$i = HEAP32[$$idx1$i>>2]|0;
 $2 = (($$idx$val$i) + (($$idx1$val$i*12)|0)|0);
 $3 = ($$idx1$val$i|0)==(0);
 $switchtmp18 = ($$idx$val$i|0)==(0|0);
 $or$cond19 = $3 | $switchtmp18;
 if ($or$cond19) {
  return;
 } else {
  $iter$sroa$0$0$in20 = $$idx$val$i;
 }
 while(1) {
  $4 = ((($iter$sroa$0$0$in20)) + 12|0);
  $5 = ((($iter$sroa$0$0$in20)) + 4|0);
  $6 = HEAP32[$5>>2]|0;
  $7 = ((($iter$sroa$0$0$in20)) + 8|0);
  $8 = HEAP32[$7>>2]|0;
  $9 = ((($8)) + 20|0);
  $10 = HEAP32[$9>>2]|0;
  FUNCTION_TABLE_vii[$10 & 511]($6,$1);
  $11 = ($4|0)==($2|0);
  if ($11) {
   break;
  } else {
   $iter$sroa$0$0$in20 = $4;
  }
 }
 return;
}
function __ZN272__LT_ncollide_pipeline__narrow_phase__contact_generator__composite_shape_shape_contact_generator__ShapeCompositeShapeContactGenerator_LT_P_C__u20_M_GT__u20_as_u20_ncollide_pipeline__narrow_phase__contact_generator__contact_generator__ContactGenerator_LT_P_C__u20_M_GT__GT_12num_contacts17h85886daf96040c6fE($0) {
 $0 = $0|0;
 var $$idx$i$i = 0, $$idx$val$i$i = 0, $$idx1$i$i = 0, $$idx1$val$i$i = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $iter$sroa$0$0$in22$i = 0, $or$cond21$i = 0, $res$0$lcssa$i = 0, $res$023$i = 0;
 var $switchtmp20$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $$idx$i$i = ((($0)) + 4|0);
 $$idx$val$i$i = HEAP32[$$idx$i$i>>2]|0;
 $$idx1$i$i = ((($0)) + 12|0);
 $$idx1$val$i$i = HEAP32[$$idx1$i$i>>2]|0;
 $1 = (($$idx$val$i$i) + (($$idx1$val$i$i*12)|0)|0);
 $2 = ($$idx1$val$i$i|0)==(0);
 $switchtmp20$i = ($$idx$val$i$i|0)==(0|0);
 $or$cond21$i = $switchtmp20$i | $2;
 if ($or$cond21$i) {
  $res$0$lcssa$i = 0;
  return ($res$0$lcssa$i|0);
 } else {
  $iter$sroa$0$0$in22$i = $$idx$val$i$i;$res$023$i = 0;
 }
 while(1) {
  $3 = ((($iter$sroa$0$0$in22$i)) + 12|0);
  $4 = ((($iter$sroa$0$0$in22$i)) + 4|0);
  $5 = HEAP32[$4>>2]|0;
  $6 = ((($iter$sroa$0$0$in22$i)) + 8|0);
  $7 = HEAP32[$6>>2]|0;
  $8 = ((($7)) + 16|0);
  $9 = HEAP32[$8>>2]|0;
  $10 = (FUNCTION_TABLE_ii[$9 & 511]($5)|0);
  $11 = (($10) + ($res$023$i))|0;
  $12 = ($3|0)==($1|0);
  if ($12) {
   $res$0$lcssa$i = $11;
   break;
  } else {
   $iter$sroa$0$0$in22$i = $3;$res$023$i = $11;
  }
 }
 return ($res$0$lcssa$i|0);
}
function __ZN272__LT_ncollide_pipeline__narrow_phase__contact_generator__composite_shape_shape_contact_generator__ShapeCompositeShapeContactGenerator_LT_P_C__u20_M_GT__u20_as_u20_ncollide_pipeline__narrow_phase__contact_generator__contact_generator__ContactGenerator_LT_P_C__u20_M_GT__GT_6update17hde81fcb61a2aabaeE($0,$1,$2,$3,$4,$5,$6,$7,$8,$9) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 $7 = $7|0;
 $8 = $8|0;
 $9 = +$9;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $_0$0$off0 = 0, $_15 = 0, $switchtmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $_15 = sp;
 $10 = ((($8)) + 32|0);
 $11 = HEAP32[$10>>2]|0;
 FUNCTION_TABLE_vii[$11 & 511]($_15,$7);
 $12 = HEAP32[$_15>>2]|0;
 $switchtmp = ($12|0)==(0|0);
 if ($switchtmp) {
  $_0$0$off0 = 0;
  STACKTOP = sp;return ($_0$0$off0|0);
 }
 $13 = ((($_15)) + 4|0);
 $14 = HEAP32[$13>>2]|0;
 __ZN155__LT_ncollide_pipeline__narrow_phase__contact_generator__composite_shape_shape_contact_generator__CompositeShapeShapeContactGenerator_LT_P_C__u20_M_GT__GT_9do_update17h121b4dfd04ed8217E($0,$1,$2,$6,$12,$14,$3,$4,$5,$9,1);
 $_0$0$off0 = 1;
 STACKTOP = sp;return ($_0$0$off0|0);
}
function __ZN272__LT_ncollide_pipeline__narrow_phase__contact_generator__composite_shape_shape_contact_generator__ShapeCompositeShapeContactGenerator_LT_P_C__u20_M_GT__u20_as_u20_ncollide_pipeline__narrow_phase__contact_generator__contact_generator__ContactGenerator_LT_P_C__u20_M_GT__GT_8contacts17h8932e11ded7f3603E($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$idx$i$i = 0, $$idx$val$i$i = 0, $$idx1$i$i = 0, $$idx1$val$i$i = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $iter$sroa$0$0$in20$i = 0, $or$cond19$i = 0, $switchtmp18$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $$idx$i$i = ((($0)) + 4|0);
 $$idx$val$i$i = HEAP32[$$idx$i$i>>2]|0;
 $$idx1$i$i = ((($0)) + 12|0);
 $$idx1$val$i$i = HEAP32[$$idx1$i$i>>2]|0;
 $2 = (($$idx$val$i$i) + (($$idx1$val$i$i*12)|0)|0);
 $3 = ($$idx1$val$i$i|0)==(0);
 $switchtmp18$i = ($$idx$val$i$i|0)==(0|0);
 $or$cond19$i = $switchtmp18$i | $3;
 if ($or$cond19$i) {
  return;
 } else {
  $iter$sroa$0$0$in20$i = $$idx$val$i$i;
 }
 while(1) {
  $4 = ((($iter$sroa$0$0$in20$i)) + 12|0);
  $5 = ((($iter$sroa$0$0$in20$i)) + 4|0);
  $6 = HEAP32[$5>>2]|0;
  $7 = ((($iter$sroa$0$0$in20$i)) + 8|0);
  $8 = HEAP32[$7>>2]|0;
  $9 = ((($8)) + 20|0);
  $10 = HEAP32[$9>>2]|0;
  FUNCTION_TABLE_vii[$10 & 511]($6,$1);
  $11 = ($4|0)==($2|0);
  if ($11) {
   break;
  } else {
   $iter$sroa$0$0$in20$i = $4;
  }
 }
 return;
}
function __ZN274__LT_ncollide_pipeline__narrow_phase__contact_generator__one_shot_contact_manifold_generator__OneShotContactManifoldGenerator_LT_P_C__u20_M_C__u20_CD_GT__u20_as_u20_ncollide_pipeline__narrow_phase__contact_generator__contact_generator__ContactGenerator_LT_P_C__u20_M_GT__GT_12num_contacts17hb4fb3768a115fab2E($0) {
 $0 = $0|0;
 var $$idx$i = 0, $$idx$val$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $$idx$i = ((($0)) + 8|0);
 $$idx$val$i = HEAP32[$$idx$i>>2]|0;
 return ($$idx$val$i|0);
}
function __ZN274__LT_ncollide_pipeline__narrow_phase__contact_generator__one_shot_contact_manifold_generator__OneShotContactManifoldGenerator_LT_P_C__u20_M_C__u20_CD_GT__u20_as_u20_ncollide_pipeline__narrow_phase__contact_generator__contact_generator__ContactGenerator_LT_P_C__u20_M_GT__GT_12num_contacts17hea3c6781d6b08032E($0) {
 $0 = $0|0;
 var $$idx$i = 0, $$idx$val$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $$idx$i = ((($0)) + 8|0);
 $$idx$val$i = HEAP32[$$idx$i>>2]|0;
 return ($$idx$val$i|0);
}
function __ZN274__LT_ncollide_pipeline__narrow_phase__contact_generator__one_shot_contact_manifold_generator__OneShotContactManifoldGenerator_LT_P_C__u20_M_C__u20_CD_GT__u20_as_u20_ncollide_pipeline__narrow_phase__contact_generator__contact_generator__ContactGenerator_LT_P_C__u20_M_GT__GT_12num_contacts17hf68d3f062aff4effE($0) {
 $0 = $0|0;
 var $$idx$i = 0, $$idx$val$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $$idx$i = ((($0)) + 8|0);
 $$idx$val$i = HEAP32[$$idx$i>>2]|0;
 return ($$idx$val$i|0);
}
function __ZN274__LT_ncollide_pipeline__narrow_phase__contact_generator__one_shot_contact_manifold_generator__OneShotContactManifoldGenerator_LT_P_C__u20_M_C__u20_CD_GT__u20_as_u20_ncollide_pipeline__narrow_phase__contact_generator__contact_generator__ContactGenerator_LT_P_C__u20_M_GT__GT_6update17h9ce435c62686205dE($0,$1,$2,$3,$4,$5,$6,$7,$8,$9) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 $7 = $7|0;
 $8 = $8|0;
 $9 = +$9;
 var $$$i$i$i = 0, $$idx$i = 0, $$idx$i$i$i = 0, $$idx$val$i = 0, $$idx$val$i$i$i = 0, $$idx$val12$i$i129 = 0.0, $$idx13$val$i$i = 0.0, $$idx14$i$i = 0, $$idx14$val$i$i = 0.0, $$idx21$val$i = 0, $$idx3$i$i = 0, $$idx3$val13$i$i130 = 0.0, $$idx6$val8$i$i127 = 0.0, $$idx7$i$i = 0, $$idx7$val9$i$i128 = 0.0, $$pre$i$i$i = 0, $$sink$i5$i$i$i = 0, $10 = 0, $100 = 0.0, $101 = 0.0;
 var $102 = 0.0, $103 = 0.0, $104 = 0.0, $105 = 0.0, $106 = 0.0, $107 = 0.0, $108 = 0.0, $109 = 0.0, $11 = 0, $110 = 0.0, $111 = 0.0, $112 = 0.0, $113 = 0.0, $114 = 0.0, $115 = 0.0, $116 = 0.0, $117 = 0.0, $118 = 0.0, $119 = 0.0, $12 = 0;
 var $120 = 0.0, $121 = 0.0, $122 = 0.0, $123 = 0.0, $124 = 0.0, $125 = 0.0, $126 = 0.0, $127 = 0.0, $128 = 0.0, $129 = 0.0, $13 = 0, $130 = 0.0, $131 = 0.0, $132 = 0.0, $133 = 0.0, $134 = 0.0, $14 = 0, $15 = 0, $16 = 0, $17 = 0;
 var $18 = 0, $19 = 0, $20 = 0.0, $21 = 0.0, $22 = 0.0, $23 = 0.0, $24 = 0.0, $25 = 0.0, $26 = 0, $27 = 0, $28 = 0.0, $29 = 0.0, $30 = 0.0, $31 = 0.0, $32 = 0.0, $33 = 0.0, $34 = 0, $35 = 0, $36 = 0, $37 = 0;
 var $38 = 0, $39 = 0, $40 = 0.0, $41 = 0.0, $42 = 0.0, $43 = 0.0, $44 = 0.0, $45 = 0.0, $46 = 0.0, $47 = 0.0, $48 = 0, $49 = 0.0, $50 = 0.0, $51 = 0.0, $52 = 0.0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0;
 var $58 = 0, $59 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0.0, $75 = 0.0, $76 = 0.0, $77 = 0.0;
 var $78 = 0, $79 = 0, $80 = 0.0, $81 = 0.0, $82 = 0.0, $83 = 0.0, $84 = 0.0, $85 = 0.0, $86 = 0.0, $87 = 0.0, $88 = 0.0, $89 = 0.0, $90 = 0.0, $91 = 0.0, $92 = 0.0, $93 = 0.0, $94 = 0.0, $95 = 0.0, $96 = 0.0, $97 = 0.0;
 var $98 = 0.0, $99 = 0.0, $_0$0$off0 = 0, $_14$sroa$0$0$copyload$i$i = 0, $_14$sroa$5$0$$sroa_idx10$i$i = 0, $_14$sroa$5$0$copyload$i$i = 0, $_15$i$i = 0, $_20$sroa$4$0$$sroa_idx25$i$i$i$i$i = 0, $_20$sroa$4$0$$sroa_idx25$i$i16$i$i$i = 0, $_20$sroa$5$0$$sroa_idx27$i$i$i$i$i = 0, $_20$sroa$5$0$$sroa_idx27$i$i17$i$i$i = 0, $_20$sroa$6$0$$sroa_idx29$i$i$i$i$i = 0, $_20$sroa$6$0$$sroa_idx29$i$i18$i$i$i = 0, $_20$sroa$7$0$$sroa_idx31$i$i$i$i$i = 0, $_20$sroa$7$0$$sroa_idx31$i$i19$i$i$i = 0, $_20$sroa$8$0$$sroa_idx33$i$i$i$i$i = 0, $_20$sroa$8$0$$sroa_idx33$i$i20$i$i$i = 0, $_21$sroa$0$0$$sroa_idx$i$i = 0, $_21$sroa$4$0$$sroa_idx16$i$i = 0, $_21$sroa$5$0$$sroa_idx19$i$i = 0;
 var $_21$sroa$5$0$i$i = 0.0, $_21$sroa$6$0$$sroa_idx22$i$i = 0, $_21$sroa$6$0$i$i = 0.0, $_21$sroa$7$0$$sroa_idx25$i$i = 0, $_21$sroa$8$0$$sroa_idx28$i$i = 0, $_21$sroa$9$0$$sroa_idx31$i$i = 0, $_26$i$i$i$i = 0, $_5$sroa$0$0$copyload$i$i$i$i$i$i = 0.0, $_5$sroa$4$0$$sroa_idx2$i$i$i$i$i$i = 0, $_5$sroa$4$0$copyload$i$i$i$i$i$i = 0.0, $_5$sroa$5$0$$sroa_idx4$i$i$i$i$i$i = 0, $_5$sroa$5$0$copyload$i$i$i$i$i$i = 0.0, $_5$sroa$6$0$$sroa_idx6$i$i$i$i$i$i = 0, $_5$sroa$6$0$copyload$i$i$i$i$i$i = 0.0, $or$cond$i$i = 0, $res$sroa$0$0$copyload5$i$i$i$i$i = 0.0, $res$sroa$0$0$copyload5$i$i8$i$i$i = 0.0, $res$sroa$10$0$_8$sroa$0$0$$sroa_cast5$i$sroa_idx16$i$i13$i$i$i = 0, $res$sroa$10$0$copyload17$i$i$i$i$i = 0.0, $res$sroa$10$0$copyload17$i$i14$i$i$i = 0.0;
 var $res$sroa$6$0$_8$sroa$0$0$$sroa_cast5$i$sroa_idx8$i$i9$i$i$i = 0, $res$sroa$6$0$copyload9$i$i$i$i$i = 0.0, $res$sroa$6$0$copyload9$i$i10$i$i$i = 0.0, $res$sroa$8$0$_8$sroa$0$0$$sroa_cast5$i$sroa_idx12$i$i11$i$i$i = 0, $res$sroa$8$0$copyload13$i$i$i$i$i = 0.0, $res$sroa$8$0$copyload13$i$i12$i$i$i = 0.0, $rot_mat$i$i$i = 0, $rot_mat1$i$i$i = 0, $switch$i$i = 0, $switch1tmp$i$i = 0, $switchtmp$i$i = 0, $tmp_ret1$i$i$i$i = 0, $value$i$sroa$4$0$$sroa_idx27$i$i = 0, $value$i$sroa$6$0$$sroa_idx33$i$i = 0, $value$i$sroa$8$0$$sroa_idx39$i$i = 0, $value$i$sroa$9$0$$sroa_idx42$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(80|0);
 $rot_mat$i$i$i = sp + 48|0;
 $rot_mat1$i$i$i = sp + 24|0;
 $_26$i$i$i$i = sp + 16|0;
 $tmp_ret1$i$i$i$i = sp + 8|0;
 $_15$i$i = sp;
 $$idx$i = ((($0)) + 8|0);
 $$idx$val$i = HEAP32[$$idx$i>>2]|0;
 $10 = ($$idx$val$i|0)==(0);
 if (!($10)) {
  __ZN164__LT_ncollide_pipeline__narrow_phase__contact_generator__incremental_contact_manifold_generator__IncrementalContactManifoldGenerator_LT_P_C__u20_M_C__u20_CD_GT__GT_15update_contacts17h02f933627238d8c3E($0,$3,$6,$9);
  $72 = (__ZN164__LT_ncollide_pipeline__narrow_phase__contact_generator__incremental_contact_manifold_generator__IncrementalContactManifoldGenerator_LT_P_C__u20_M_C__u20_CD_GT__GT_16add_new_contacts17h15f900b83120ee33E($0,$3,$4,$5,$6,$7,$8,$9)|0);
  $_0$0$off0 = $72;
  STACKTOP = sp;return ($_0$0$off0|0);
 }
 $11 = ((($5)) + 28|0);
 $12 = HEAP32[$11>>2]|0;
 FUNCTION_TABLE_vii[$12 & 511]($_15$i$i,$4);
 $13 = ((($8)) + 48|0);
 $14 = HEAP32[$13>>2]|0;
 $15 = (FUNCTION_TABLE_ii[$14 & 511]($7)|0);
 $16 = tempRet0;
 $17 = ($15|0)==(-255454720);
 $18 = ($16|0)==(-1918276056);
 $19 = $17 & $18;
 $$$i$i$i = $19 ? $7 : 0;
 $_14$sroa$0$0$copyload$i$i = HEAP32[$_15$i$i>>2]|0;
 $switch1tmp$i$i = ($_14$sroa$0$0$copyload$i$i|0)==(0|0);
 $switchtmp$i$i = ($$$i$i$i|0)==(0|0);
 $or$cond$i$i = $switch1tmp$i$i | $switchtmp$i$i;
 if ($or$cond$i$i) {
  $_0$0$off0 = 0;
  STACKTOP = sp;return ($_0$0$off0|0);
 }
 $_14$sroa$5$0$$sroa_idx10$i$i = ((($_15$i$i)) + 4|0);
 $_14$sroa$5$0$copyload$i$i = HEAP32[$_14$sroa$5$0$$sroa_idx10$i$i>>2]|0;
 $$idx13$val$i$i = +HEAPF32[$$$i$i$i>>2];
 $$idx14$i$i = ((($$$i$i$i)) + 4|0);
 $$idx14$val$i$i = +HEAPF32[$$idx14$i$i>>2];
 $_5$sroa$0$0$copyload$i$i$i$i$i$i = +HEAPF32[$6>>2];
 $_5$sroa$4$0$$sroa_idx2$i$i$i$i$i$i = ((($6)) + 4|0);
 $_5$sroa$4$0$copyload$i$i$i$i$i$i = +HEAPF32[$_5$sroa$4$0$$sroa_idx2$i$i$i$i$i$i>>2];
 $_5$sroa$5$0$$sroa_idx4$i$i$i$i$i$i = ((($6)) + 8|0);
 $_5$sroa$5$0$copyload$i$i$i$i$i$i = +HEAPF32[$_5$sroa$5$0$$sroa_idx4$i$i$i$i$i$i>>2];
 $_5$sroa$6$0$$sroa_idx6$i$i$i$i$i$i = ((($6)) + 12|0);
 $_5$sroa$6$0$copyload$i$i$i$i$i$i = +HEAPF32[$_5$sroa$6$0$$sroa_idx6$i$i$i$i$i$i>>2];
 $20 = $$idx13$val$i$i * $_5$sroa$0$0$copyload$i$i$i$i$i$i;
 $21 = $$idx14$val$i$i * $_5$sroa$5$0$copyload$i$i$i$i$i$i;
 $22 = $20 + $21;
 $23 = $$idx13$val$i$i * $_5$sroa$4$0$copyload$i$i$i$i$i$i;
 $24 = $$idx14$val$i$i * $_5$sroa$6$0$copyload$i$i$i$i$i$i;
 $25 = $23 + $24;
 $26 = ((($6)) + 16|0);
 $27 = ((($6)) + 20|0);
 $28 = +HEAPF32[$26>>2];
 $29 = +HEAPF32[$27>>2];
 $30 = $28 + 0.0;
 $31 = $29 + 0.0;
 $32 = -$22;
 $33 = -$25;
 HEAPF32[$_26$i$i$i$i>>2] = $32;
 $34 = ((($_26$i$i$i$i)) + 4|0);
 HEAPF32[$34>>2] = $33;
 $35 = ((($_14$sroa$5$0$copyload$i$i)) + 12|0);
 $36 = HEAP32[$35>>2]|0;
 FUNCTION_TABLE_viiii[$36 & 511]($tmp_ret1$i$i$i$i,$_14$sroa$0$0$copyload$i$i,$3,$_26$i$i$i$i);
 $37 = ((($tmp_ret1$i$i$i$i)) + 4|0);
 $38 = HEAP32[$tmp_ret1$i$i$i$i>>2]|0;
 $39 = HEAP32[$37>>2]|0;
 $40 = (HEAP32[tempDoublePtr>>2]=$38,+HEAPF32[tempDoublePtr>>2]);
 $41 = (HEAP32[tempDoublePtr>>2]=$39,+HEAPF32[tempDoublePtr>>2]);
 $42 = $30 - $40;
 $43 = $31 - $41;
 $44 = $22 * $42;
 $45 = $25 * $43;
 $46 = $44 + $45;
 $47 = -$9;
 $48 = $46 > $47;
 if ($48) {
  $49 = $22 * $46;
  $50 = $25 * $46;
  $51 = $40 + $49;
  $52 = $41 + $50;
  $$sink$i5$i$i$i = 1;$55 = $38;$58 = $39;$_21$sroa$5$0$i$i = $51;$_21$sroa$6$0$i$i = $52;
 } else {
  $$sink$i5$i$i$i = 0;$55 = 0;$58 = 0;$_21$sroa$5$0$i$i = 0.0;$_21$sroa$6$0$i$i = 0.0;
 }
 $_21$sroa$0$0$$sroa_idx$i$i = ((($0)) + 24|0);
 HEAP32[$_21$sroa$0$0$$sroa_idx$i$i>>2] = $$sink$i5$i$i$i;
 $_21$sroa$4$0$$sroa_idx16$i$i = ((($0)) + 28|0);
 $53 = $_21$sroa$4$0$$sroa_idx16$i$i;
 $54 = $53;
 HEAP32[$54>>2] = $55;
 $56 = (($53) + 4)|0;
 $57 = $56;
 HEAP32[$57>>2] = $58;
 $_21$sroa$5$0$$sroa_idx19$i$i = ((($0)) + 36|0);
 HEAPF32[$_21$sroa$5$0$$sroa_idx19$i$i>>2] = $_21$sroa$5$0$i$i;
 $_21$sroa$6$0$$sroa_idx22$i$i = ((($0)) + 40|0);
 HEAPF32[$_21$sroa$6$0$$sroa_idx22$i$i>>2] = $_21$sroa$6$0$i$i;
 $_21$sroa$7$0$$sroa_idx25$i$i = ((($0)) + 44|0);
 HEAPF32[$_21$sroa$7$0$$sroa_idx25$i$i>>2] = $32;
 $_21$sroa$8$0$$sroa_idx28$i$i = ((($0)) + 48|0);
 HEAPF32[$_21$sroa$8$0$$sroa_idx28$i$i>>2] = $33;
 $_21$sroa$9$0$$sroa_idx31$i$i = ((($0)) + 52|0);
 HEAPF32[$_21$sroa$9$0$$sroa_idx31$i$i>>2] = $46;
 $59 = ((($0)) + 12|0);
 $switch$i$i = ($$sink$i5$i$i$i|0)==(1);
 $60 = ((($0)) + 20|0);
 $61 = HEAP32[$60>>2]|0;
 if ($switch$i$i) {
  $$idx$i$i$i = ((($0)) + 16|0);
  $$idx$val$i$i$i = HEAP32[$$idx$i$i$i>>2]|0;
  $62 = ($61|0)==($$idx$val$i$i$i|0);
  if ($62) {
   __ZN40__LT_alloc__raw_vec__RawVec_LT_T_GT__GT_6double17ha4899d9ca8626977E($59);
   $$pre$i$i$i = HEAP32[$60>>2]|0;
   $65 = $$pre$i$i$i;
  } else {
   $65 = $61;
  }
  $63 = HEAP32[$59>>2]|0;
  $64 = (($63) + (($65*28)|0)|0);
  HEAP32[$64>>2] = $55;
  $value$i$sroa$4$0$$sroa_idx27$i$i = (((($63) + (($65*28)|0)|0)) + 4|0);
  HEAP32[$value$i$sroa$4$0$$sroa_idx27$i$i>>2] = $58;
  $66 = (((($63) + (($65*28)|0)|0)) + 8|0);
  HEAPF32[$66>>2] = $_21$sroa$5$0$i$i;
  $value$i$sroa$6$0$$sroa_idx33$i$i = (((($63) + (($65*28)|0)|0)) + 12|0);
  HEAPF32[$value$i$sroa$6$0$$sroa_idx33$i$i>>2] = $_21$sroa$6$0$i$i;
  $67 = (((($63) + (($65*28)|0)|0)) + 16|0);
  HEAPF32[$67>>2] = $32;
  $value$i$sroa$8$0$$sroa_idx39$i$i = (((($63) + (($65*28)|0)|0)) + 20|0);
  HEAPF32[$value$i$sroa$8$0$$sroa_idx39$i$i>>2] = $33;
  $value$i$sroa$9$0$$sroa_idx42$i$i = (((($63) + (($65*28)|0)|0)) + 24|0);
  HEAPF32[$value$i$sroa$9$0$$sroa_idx42$i$i>>2] = $46;
  $68 = HEAP32[$60>>2]|0;
  $69 = (($68) + 1)|0;
  HEAP32[$60>>2] = $69;
  $70 = $69;
 } else {
  $70 = $61;
 }
 $71 = ($70|0)==(0);
 if ($71) {
  $_0$0$off0 = 1;
  STACKTOP = sp;return ($_0$0$off0|0);
 }
 $$idx21$val$i = HEAP32[$59>>2]|0;
 $$idx6$val8$i$i127 = +HEAPF32[$$idx21$val$i>>2];
 $$idx7$i$i = ((($$idx21$val$i)) + 4|0);
 $$idx7$val9$i$i128 = +HEAPF32[$$idx7$i$i>>2];
 $73 = ((($$idx21$val$i)) + 16|0);
 $$idx$val12$i$i129 = +HEAPF32[$73>>2];
 $$idx3$i$i = ((($$idx21$val$i)) + 20|0);
 $$idx3$val13$i$i130 = +HEAPF32[$$idx3$i$i>>2];
 HEAP32[$60>>2] = 0;
 $74 = $$idx$val12$i$i129 * $$idx$val12$i$i129;
 $75 = $$idx3$val13$i$i130 * $$idx3$val13$i$i130;
 $76 = $74 + $75;
 $77 = $76 * 0.0099999997764825821;
 $78 = ((($3)) + 16|0);
 $79 = ((($3)) + 20|0);
 $80 = +HEAPF32[$78>>2];
 $81 = +HEAPF32[$79>>2];
 $82 = $80 - $$idx6$val8$i$i127;
 $83 = $81 - $$idx7$val9$i$i128;
 $res$sroa$0$0$copyload5$i$i8$i$i$i = +HEAPF32[$3>>2];
 $res$sroa$6$0$_8$sroa$0$0$$sroa_cast5$i$sroa_idx8$i$i9$i$i$i = ((($3)) + 4|0);
 $res$sroa$6$0$copyload9$i$i10$i$i$i = +HEAPF32[$res$sroa$6$0$_8$sroa$0$0$$sroa_cast5$i$sroa_idx8$i$i9$i$i$i>>2];
 $res$sroa$8$0$_8$sroa$0$0$$sroa_cast5$i$sroa_idx12$i$i11$i$i$i = ((($3)) + 8|0);
 $res$sroa$8$0$copyload13$i$i12$i$i$i = +HEAPF32[$res$sroa$8$0$_8$sroa$0$0$$sroa_cast5$i$sroa_idx12$i$i11$i$i$i>>2];
 $res$sroa$10$0$_8$sroa$0$0$$sroa_cast5$i$sroa_idx16$i$i13$i$i$i = ((($3)) + 12|0);
 $res$sroa$10$0$copyload17$i$i14$i$i$i = +HEAPF32[$res$sroa$10$0$_8$sroa$0$0$$sroa_cast5$i$sroa_idx16$i$i13$i$i$i>>2];
 $84 = (+Math_sin((+$77)));
 $85 = (+Math_cos((+$77)));
 $86 = -$84;
 $87 = $res$sroa$0$0$copyload5$i$i8$i$i$i * $85;
 $88 = $res$sroa$6$0$copyload9$i$i10$i$i$i * $86;
 $89 = $88 + $87;
 $90 = $res$sroa$8$0$copyload13$i$i12$i$i$i * $85;
 $91 = $res$sroa$10$0$copyload17$i$i14$i$i$i * $86;
 $92 = $91 + $90;
 $93 = $res$sroa$0$0$copyload5$i$i8$i$i$i * $84;
 $94 = $res$sroa$6$0$copyload9$i$i10$i$i$i * $85;
 $95 = $93 + $94;
 $96 = $res$sroa$8$0$copyload13$i$i12$i$i$i * $84;
 $97 = $res$sroa$10$0$copyload17$i$i14$i$i$i * $85;
 $98 = $96 + $97;
 $99 = $82 * $85;
 $100 = $83 * $86;
 $101 = $100 + $99;
 $102 = $82 * $84;
 $103 = $83 * $85;
 $104 = $102 + $103;
 $105 = $$idx6$val8$i$i127 + $101;
 $106 = $$idx7$val9$i$i128 + $104;
 HEAPF32[$rot_mat$i$i$i>>2] = $89;
 $_20$sroa$4$0$$sroa_idx25$i$i16$i$i$i = ((($rot_mat$i$i$i)) + 4|0);
 HEAPF32[$_20$sroa$4$0$$sroa_idx25$i$i16$i$i$i>>2] = $95;
 $_20$sroa$5$0$$sroa_idx27$i$i17$i$i$i = ((($rot_mat$i$i$i)) + 8|0);
 HEAPF32[$_20$sroa$5$0$$sroa_idx27$i$i17$i$i$i>>2] = $92;
 $_20$sroa$6$0$$sroa_idx29$i$i18$i$i$i = ((($rot_mat$i$i$i)) + 12|0);
 HEAPF32[$_20$sroa$6$0$$sroa_idx29$i$i18$i$i$i>>2] = $98;
 $_20$sroa$7$0$$sroa_idx31$i$i19$i$i$i = ((($rot_mat$i$i$i)) + 16|0);
 HEAPF32[$_20$sroa$7$0$$sroa_idx31$i$i19$i$i$i>>2] = $105;
 $_20$sroa$8$0$$sroa_idx33$i$i20$i$i$i = ((($rot_mat$i$i$i)) + 20|0);
 HEAPF32[$_20$sroa$8$0$$sroa_idx33$i$i20$i$i$i>>2] = $106;
 (__ZN164__LT_ncollide_pipeline__narrow_phase__contact_generator__incremental_contact_manifold_generator__IncrementalContactManifoldGenerator_LT_P_C__u20_M_C__u20_CD_GT__GT_16add_new_contacts17h15f900b83120ee33E($0,$rot_mat$i$i$i,$4,$5,$6,$7,$8,$9)|0);
 $107 = -$77;
 $108 = +HEAPF32[$78>>2];
 $109 = +HEAPF32[$79>>2];
 $110 = $108 - $$idx6$val8$i$i127;
 $111 = $109 - $$idx7$val9$i$i128;
 $res$sroa$0$0$copyload5$i$i$i$i$i = +HEAPF32[$3>>2];
 $res$sroa$6$0$copyload9$i$i$i$i$i = +HEAPF32[$res$sroa$6$0$_8$sroa$0$0$$sroa_cast5$i$sroa_idx8$i$i9$i$i$i>>2];
 $res$sroa$8$0$copyload13$i$i$i$i$i = +HEAPF32[$res$sroa$8$0$_8$sroa$0$0$$sroa_cast5$i$sroa_idx12$i$i11$i$i$i>>2];
 $res$sroa$10$0$copyload17$i$i$i$i$i = +HEAPF32[$res$sroa$10$0$_8$sroa$0$0$$sroa_cast5$i$sroa_idx16$i$i13$i$i$i>>2];
 $112 = (+Math_sin((+$107)));
 $113 = (+Math_cos((+$107)));
 $114 = -$112;
 $115 = $res$sroa$0$0$copyload5$i$i$i$i$i * $113;
 $116 = $res$sroa$6$0$copyload9$i$i$i$i$i * $114;
 $117 = $116 + $115;
 $118 = $res$sroa$8$0$copyload13$i$i$i$i$i * $113;
 $119 = $res$sroa$10$0$copyload17$i$i$i$i$i * $114;
 $120 = $119 + $118;
 $121 = $res$sroa$0$0$copyload5$i$i$i$i$i * $112;
 $122 = $res$sroa$6$0$copyload9$i$i$i$i$i * $113;
 $123 = $121 + $122;
 $124 = $res$sroa$8$0$copyload13$i$i$i$i$i * $112;
 $125 = $res$sroa$10$0$copyload17$i$i$i$i$i * $113;
 $126 = $124 + $125;
 $127 = $110 * $113;
 $128 = $111 * $114;
 $129 = $128 + $127;
 $130 = $110 * $112;
 $131 = $111 * $113;
 $132 = $130 + $131;
 $133 = $$idx6$val8$i$i127 + $129;
 $134 = $$idx7$val9$i$i128 + $132;
 HEAPF32[$rot_mat1$i$i$i>>2] = $117;
 $_20$sroa$4$0$$sroa_idx25$i$i$i$i$i = ((($rot_mat1$i$i$i)) + 4|0);
 HEAPF32[$_20$sroa$4$0$$sroa_idx25$i$i$i$i$i>>2] = $123;
 $_20$sroa$5$0$$sroa_idx27$i$i$i$i$i = ((($rot_mat1$i$i$i)) + 8|0);
 HEAPF32[$_20$sroa$5$0$$sroa_idx27$i$i$i$i$i>>2] = $120;
 $_20$sroa$6$0$$sroa_idx29$i$i$i$i$i = ((($rot_mat1$i$i$i)) + 12|0);
 HEAPF32[$_20$sroa$6$0$$sroa_idx29$i$i$i$i$i>>2] = $126;
 $_20$sroa$7$0$$sroa_idx31$i$i$i$i$i = ((($rot_mat1$i$i$i)) + 16|0);
 HEAPF32[$_20$sroa$7$0$$sroa_idx31$i$i$i$i$i>>2] = $133;
 $_20$sroa$8$0$$sroa_idx33$i$i$i$i$i = ((($rot_mat1$i$i$i)) + 20|0);
 HEAPF32[$_20$sroa$8$0$$sroa_idx33$i$i$i$i$i>>2] = $134;
 (__ZN164__LT_ncollide_pipeline__narrow_phase__contact_generator__incremental_contact_manifold_generator__IncrementalContactManifoldGenerator_LT_P_C__u20_M_C__u20_CD_GT__GT_16add_new_contacts17h15f900b83120ee33E($0,$rot_mat1$i$i$i,$4,$5,$6,$7,$8,$9)|0);
 __ZN164__LT_ncollide_pipeline__narrow_phase__contact_generator__incremental_contact_manifold_generator__IncrementalContactManifoldGenerator_LT_P_C__u20_M_C__u20_CD_GT__GT_15update_contacts17h02f933627238d8c3E($0,$3,$6,$9);
 $_0$0$off0 = 1;
 STACKTOP = sp;return ($_0$0$off0|0);
}
function __ZN274__LT_ncollide_pipeline__narrow_phase__contact_generator__one_shot_contact_manifold_generator__OneShotContactManifoldGenerator_LT_P_C__u20_M_C__u20_CD_GT__u20_as_u20_ncollide_pipeline__narrow_phase__contact_generator__contact_generator__ContactGenerator_LT_P_C__u20_M_GT__GT_6update17he2475110ad5d2e81E($0,$1,$2,$3,$4,$5,$6,$7,$8,$9) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 $7 = $7|0;
 $8 = $8|0;
 $9 = +$9;
 var $$$i$i$i = 0, $$idx$i = 0, $$idx$i$i23$i = 0, $$idx$val$i = 0, $$idx$val$i$i$i = 0.0, $$idx$val$i$i24$i = 0, $$idx$val12$i$i129 = 0.0, $$idx17$i$i$i = 0, $$idx17$val$i$i$i = 0.0, $$idx21$val$i = 0, $$idx3$i$i = 0, $$idx3$val13$i$i130 = 0.0, $$idx6$val8$i$i127 = 0.0, $$idx7$i$i = 0, $$idx7$val9$i$i128 = 0.0, $$pre$i$i$i = 0, $$sink$i$i$i = 0, $10 = 0, $100 = 0.0, $101 = 0.0;
 var $102 = 0.0, $103 = 0.0, $104 = 0.0, $105 = 0.0, $106 = 0.0, $107 = 0.0, $108 = 0.0, $109 = 0.0, $11 = 0, $110 = 0.0, $111 = 0.0, $112 = 0.0, $113 = 0.0, $114 = 0.0, $115 = 0.0, $116 = 0.0, $117 = 0.0, $118 = 0.0, $119 = 0.0, $12 = 0;
 var $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0.0, $21 = 0.0, $22 = 0.0, $23 = 0.0, $24 = 0.0, $25 = 0.0, $26 = 0, $27 = 0, $28 = 0.0, $29 = 0.0, $30 = 0.0, $31 = 0.0, $32 = 0.0;
 var $33 = 0.0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0.0, $41 = 0.0, $42 = 0.0, $43 = 0.0, $44 = 0.0, $45 = 0.0, $46 = 0.0, $47 = 0.0, $48 = 0, $49 = 0.0, $50 = 0.0, $51 = 0.0, $52 = 0.0;
 var $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0.0, $68 = 0.0, $69 = 0.0, $70 = 0.0, $71 = 0.0, $72 = 0.0;
 var $73 = 0.0, $74 = 0.0, $75 = 0.0, $76 = 0.0, $77 = 0.0, $78 = 0.0, $79 = 0.0, $80 = 0.0, $81 = 0.0, $82 = 0.0, $83 = 0.0, $84 = 0.0, $85 = 0.0, $86 = 0.0, $87 = 0.0, $88 = 0.0, $89 = 0.0, $90 = 0.0, $91 = 0.0, $92 = 0.0;
 var $93 = 0.0, $94 = 0.0, $95 = 0.0, $96 = 0.0, $97 = 0.0, $98 = 0.0, $99 = 0.0, $_0$0$off0 = 0, $_14$sroa$5$4$copyload$i$i = 0, $_14$sroa$8$4$$sroa_idx12$i$i = 0, $_14$sroa$8$4$copyload$i$i = 0, $_17$i$i = 0, $_20$sroa$4$0$$sroa_idx25$i$i$i$i$i = 0, $_20$sroa$4$0$$sroa_idx25$i$i16$i$i$i = 0, $_20$sroa$5$0$$sroa_idx27$i$i$i$i$i = 0, $_20$sroa$5$0$$sroa_idx27$i$i17$i$i$i = 0, $_20$sroa$6$0$$sroa_idx29$i$i$i$i$i = 0, $_20$sroa$6$0$$sroa_idx29$i$i18$i$i$i = 0, $_20$sroa$7$0$$sroa_idx31$i$i$i$i$i = 0, $_20$sroa$7$0$$sroa_idx31$i$i19$i$i$i = 0;
 var $_20$sroa$8$0$$sroa_idx33$i$i$i$i$i = 0, $_20$sroa$8$0$$sroa_idx33$i$i20$i$i$i = 0, $_21$sroa$0$0$$sroa_idx$i$i = 0, $_21$sroa$10$0$$sroa_idx30$i$i = 0, $_21$sroa$4$0$$sroa_idx14$i$i = 0, $_21$sroa$4$0$i$i = 0.0, $_21$sroa$5$0$$sroa_idx17$i$i = 0, $_21$sroa$5$0$i$i = 0.0, $_21$sroa$6$0$$sroa_idx20$i$i = 0, $_21$sroa$7$0$$sroa_idx22$i$i = 0, $_21$sroa$8$0$$sroa_idx24$i$i = 0, $_21$sroa$9$0$$sroa_idx27$i$i = 0, $_26$i$i$i = 0, $_5$sroa$0$0$copyload$i$i$i$i$i = 0.0, $_5$sroa$4$0$$sroa_idx2$i$i$i$i$i = 0, $_5$sroa$4$0$copyload$i$i$i$i$i = 0.0, $_5$sroa$5$0$$sroa_idx4$i$i$i$i$i = 0, $_5$sroa$5$0$copyload$i$i$i$i$i = 0.0, $_5$sroa$6$0$$sroa_idx6$i$i$i$i$i = 0, $_5$sroa$6$0$copyload$i$i$i$i$i = 0.0;
 var $or$cond$i$i = 0, $rot_mat$i$i$i = 0, $rot_mat1$i$i$i = 0, $switch$i$i = 0, $switch1tmp$i$i = 0, $switchtmp$i$i = 0, $tmp_ret1$i$i$i = 0, $value$i$sroa$4$0$$sroa_idx27$i$i = 0, $value$i$sroa$5$0$$sroa_idx30$i$i = 0, $value$i$sroa$6$0$$sroa_idx33$i$i = 0, $value$i$sroa$8$0$$sroa_idx39$i$i = 0, $value$i$sroa$9$0$$sroa_idx42$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(80|0);
 $rot_mat$i$i$i = sp + 48|0;
 $rot_mat1$i$i$i = sp + 24|0;
 $_26$i$i$i = sp + 16|0;
 $tmp_ret1$i$i$i = sp + 8|0;
 $_17$i$i = sp;
 $$idx$i = ((($0)) + 8|0);
 $$idx$val$i = HEAP32[$$idx$i>>2]|0;
 $10 = ($$idx$val$i|0)==(0);
 if (!($10)) {
  __ZN164__LT_ncollide_pipeline__narrow_phase__contact_generator__incremental_contact_manifold_generator__IncrementalContactManifoldGenerator_LT_P_C__u20_M_C__u20_CD_GT__GT_15update_contacts17h83223752ba9f5b78E($0,$3,$6,$9);
  $65 = (__ZN164__LT_ncollide_pipeline__narrow_phase__contact_generator__incremental_contact_manifold_generator__IncrementalContactManifoldGenerator_LT_P_C__u20_M_C__u20_CD_GT__GT_16add_new_contacts17ha149d6427b72e0c8E($0,$3,$4,$5,$6,$7,$8,$9)|0);
  $_0$0$off0 = $65;
  STACKTOP = sp;return ($_0$0$off0|0);
 }
 $11 = ((($5)) + 48|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = (FUNCTION_TABLE_ii[$12 & 511]($4)|0);
 $14 = tempRet0;
 $15 = ($13|0)==(-255454720);
 $16 = ($14|0)==(-1918276056);
 $17 = $15 & $16;
 $$$i$i$i = $17 ? $4 : 0;
 $18 = ((($8)) + 28|0);
 $19 = HEAP32[$18>>2]|0;
 FUNCTION_TABLE_vii[$19 & 511]($_17$i$i,$7);
 $_14$sroa$5$4$copyload$i$i = HEAP32[$_17$i$i>>2]|0;
 $switch1tmp$i$i = ($$$i$i$i|0)==(0|0);
 $switchtmp$i$i = ($_14$sroa$5$4$copyload$i$i|0)==(0|0);
 $or$cond$i$i = $switch1tmp$i$i | $switchtmp$i$i;
 if ($or$cond$i$i) {
  $_0$0$off0 = 0;
  STACKTOP = sp;return ($_0$0$off0|0);
 }
 $_14$sroa$8$4$$sroa_idx12$i$i = ((($_17$i$i)) + 4|0);
 $_14$sroa$8$4$copyload$i$i = HEAP32[$_14$sroa$8$4$$sroa_idx12$i$i>>2]|0;
 $$idx$val$i$i$i = +HEAPF32[$$$i$i$i>>2];
 $$idx17$i$i$i = ((($$$i$i$i)) + 4|0);
 $$idx17$val$i$i$i = +HEAPF32[$$idx17$i$i$i>>2];
 $_5$sroa$0$0$copyload$i$i$i$i$i = +HEAPF32[$3>>2];
 $_5$sroa$4$0$$sroa_idx2$i$i$i$i$i = ((($3)) + 4|0);
 $_5$sroa$4$0$copyload$i$i$i$i$i = +HEAPF32[$_5$sroa$4$0$$sroa_idx2$i$i$i$i$i>>2];
 $_5$sroa$5$0$$sroa_idx4$i$i$i$i$i = ((($3)) + 8|0);
 $_5$sroa$5$0$copyload$i$i$i$i$i = +HEAPF32[$_5$sroa$5$0$$sroa_idx4$i$i$i$i$i>>2];
 $_5$sroa$6$0$$sroa_idx6$i$i$i$i$i = ((($3)) + 12|0);
 $_5$sroa$6$0$copyload$i$i$i$i$i = +HEAPF32[$_5$sroa$6$0$$sroa_idx6$i$i$i$i$i>>2];
 $20 = $$idx$val$i$i$i * $_5$sroa$0$0$copyload$i$i$i$i$i;
 $21 = $$idx17$val$i$i$i * $_5$sroa$5$0$copyload$i$i$i$i$i;
 $22 = $20 + $21;
 $23 = $$idx$val$i$i$i * $_5$sroa$4$0$copyload$i$i$i$i$i;
 $24 = $$idx17$val$i$i$i * $_5$sroa$6$0$copyload$i$i$i$i$i;
 $25 = $23 + $24;
 $26 = ((($3)) + 16|0);
 $27 = ((($3)) + 20|0);
 $28 = +HEAPF32[$26>>2];
 $29 = +HEAPF32[$27>>2];
 $30 = $28 + 0.0;
 $31 = $29 + 0.0;
 $32 = -$22;
 $33 = -$25;
 HEAPF32[$_26$i$i$i>>2] = $32;
 $34 = ((($_26$i$i$i)) + 4|0);
 HEAPF32[$34>>2] = $33;
 $35 = ((($_14$sroa$8$4$copyload$i$i)) + 12|0);
 $36 = HEAP32[$35>>2]|0;
 FUNCTION_TABLE_viiii[$36 & 511]($tmp_ret1$i$i$i,$_14$sroa$5$4$copyload$i$i,$6,$_26$i$i$i);
 $37 = ((($tmp_ret1$i$i$i)) + 4|0);
 $38 = HEAP32[$tmp_ret1$i$i$i>>2]|0;
 $39 = HEAP32[$37>>2]|0;
 $40 = (HEAP32[tempDoublePtr>>2]=$38,+HEAPF32[tempDoublePtr>>2]);
 $41 = (HEAP32[tempDoublePtr>>2]=$39,+HEAPF32[tempDoublePtr>>2]);
 $42 = $30 - $40;
 $43 = $31 - $41;
 $44 = $22 * $42;
 $45 = $25 * $43;
 $46 = $44 + $45;
 $47 = -$9;
 $48 = $46 > $47;
 if ($48) {
  $49 = $22 * $46;
  $50 = $25 * $46;
  $51 = $40 + $49;
  $52 = $41 + $50;
  $$sink$i$i$i = 1;$_21$sroa$4$0$i$i = $51;$_21$sroa$5$0$i$i = $52;
 } else {
  $$sink$i$i$i = 0;$_21$sroa$4$0$i$i = 0.0;$_21$sroa$5$0$i$i = 0.0;
 }
 $_21$sroa$0$0$$sroa_idx$i$i = ((($0)) + 24|0);
 HEAP32[$_21$sroa$0$0$$sroa_idx$i$i>>2] = $$sink$i$i$i;
 $_21$sroa$4$0$$sroa_idx14$i$i = ((($0)) + 28|0);
 HEAPF32[$_21$sroa$4$0$$sroa_idx14$i$i>>2] = $_21$sroa$4$0$i$i;
 $_21$sroa$5$0$$sroa_idx17$i$i = ((($0)) + 32|0);
 HEAPF32[$_21$sroa$5$0$$sroa_idx17$i$i>>2] = $_21$sroa$5$0$i$i;
 $_21$sroa$6$0$$sroa_idx20$i$i = ((($0)) + 36|0);
 HEAP32[$_21$sroa$6$0$$sroa_idx20$i$i>>2] = $38;
 $_21$sroa$7$0$$sroa_idx22$i$i = ((($0)) + 40|0);
 HEAP32[$_21$sroa$7$0$$sroa_idx22$i$i>>2] = $39;
 $_21$sroa$8$0$$sroa_idx24$i$i = ((($0)) + 44|0);
 HEAPF32[$_21$sroa$8$0$$sroa_idx24$i$i>>2] = $22;
 $_21$sroa$9$0$$sroa_idx27$i$i = ((($0)) + 48|0);
 HEAPF32[$_21$sroa$9$0$$sroa_idx27$i$i>>2] = $25;
 $_21$sroa$10$0$$sroa_idx30$i$i = ((($0)) + 52|0);
 HEAPF32[$_21$sroa$10$0$$sroa_idx30$i$i>>2] = $46;
 $53 = ((($0)) + 12|0);
 $switch$i$i = ($$sink$i$i$i|0)==(1);
 $54 = ((($0)) + 20|0);
 $55 = HEAP32[$54>>2]|0;
 if ($switch$i$i) {
  $$idx$i$i23$i = ((($0)) + 16|0);
  $$idx$val$i$i24$i = HEAP32[$$idx$i$i23$i>>2]|0;
  $56 = ($55|0)==($$idx$val$i$i24$i|0);
  if ($56) {
   __ZN40__LT_alloc__raw_vec__RawVec_LT_T_GT__GT_6double17ha4899d9ca8626977E($53);
   $$pre$i$i$i = HEAP32[$54>>2]|0;
   $59 = $$pre$i$i$i;
  } else {
   $59 = $55;
  }
  $57 = HEAP32[$53>>2]|0;
  $58 = (($57) + (($59*28)|0)|0);
  HEAPF32[$58>>2] = $_21$sroa$4$0$i$i;
  $value$i$sroa$4$0$$sroa_idx27$i$i = (((($57) + (($59*28)|0)|0)) + 4|0);
  HEAPF32[$value$i$sroa$4$0$$sroa_idx27$i$i>>2] = $_21$sroa$5$0$i$i;
  $value$i$sroa$5$0$$sroa_idx30$i$i = (((($57) + (($59*28)|0)|0)) + 8|0);
  HEAP32[$value$i$sroa$5$0$$sroa_idx30$i$i>>2] = $38;
  $value$i$sroa$6$0$$sroa_idx33$i$i = (((($57) + (($59*28)|0)|0)) + 12|0);
  HEAP32[$value$i$sroa$6$0$$sroa_idx33$i$i>>2] = $39;
  $60 = (((($57) + (($59*28)|0)|0)) + 16|0);
  HEAPF32[$60>>2] = $22;
  $value$i$sroa$8$0$$sroa_idx39$i$i = (((($57) + (($59*28)|0)|0)) + 20|0);
  HEAPF32[$value$i$sroa$8$0$$sroa_idx39$i$i>>2] = $25;
  $value$i$sroa$9$0$$sroa_idx42$i$i = (((($57) + (($59*28)|0)|0)) + 24|0);
  HEAPF32[$value$i$sroa$9$0$$sroa_idx42$i$i>>2] = $46;
  $61 = HEAP32[$54>>2]|0;
  $62 = (($61) + 1)|0;
  HEAP32[$54>>2] = $62;
  $63 = $62;
 } else {
  $63 = $55;
 }
 $64 = ($63|0)==(0);
 if ($64) {
  $_0$0$off0 = 1;
  STACKTOP = sp;return ($_0$0$off0|0);
 }
 $$idx21$val$i = HEAP32[$53>>2]|0;
 $$idx6$val8$i$i127 = +HEAPF32[$$idx21$val$i>>2];
 $$idx7$i$i = ((($$idx21$val$i)) + 4|0);
 $$idx7$val9$i$i128 = +HEAPF32[$$idx7$i$i>>2];
 $66 = ((($$idx21$val$i)) + 16|0);
 $$idx$val12$i$i129 = +HEAPF32[$66>>2];
 $$idx3$i$i = ((($$idx21$val$i)) + 20|0);
 $$idx3$val13$i$i130 = +HEAPF32[$$idx3$i$i>>2];
 HEAP32[$54>>2] = 0;
 $67 = $$idx$val12$i$i129 * $$idx$val12$i$i129;
 $68 = $$idx3$val13$i$i130 * $$idx3$val13$i$i130;
 $69 = $67 + $68;
 $70 = $69 * 0.0099999997764825821;
 $71 = $28 - $$idx6$val8$i$i127;
 $72 = $29 - $$idx7$val9$i$i128;
 $73 = (+Math_sin((+$70)));
 $74 = (+Math_cos((+$70)));
 $75 = -$73;
 $76 = $_5$sroa$0$0$copyload$i$i$i$i$i * $74;
 $77 = $_5$sroa$4$0$copyload$i$i$i$i$i * $75;
 $78 = $77 + $76;
 $79 = $_5$sroa$5$0$copyload$i$i$i$i$i * $74;
 $80 = $_5$sroa$6$0$copyload$i$i$i$i$i * $75;
 $81 = $80 + $79;
 $82 = $_5$sroa$0$0$copyload$i$i$i$i$i * $73;
 $83 = $_5$sroa$4$0$copyload$i$i$i$i$i * $74;
 $84 = $82 + $83;
 $85 = $_5$sroa$5$0$copyload$i$i$i$i$i * $73;
 $86 = $_5$sroa$6$0$copyload$i$i$i$i$i * $74;
 $87 = $85 + $86;
 $88 = $71 * $74;
 $89 = $72 * $75;
 $90 = $89 + $88;
 $91 = $71 * $73;
 $92 = $72 * $74;
 $93 = $91 + $92;
 $94 = $$idx6$val8$i$i127 + $90;
 $95 = $$idx7$val9$i$i128 + $93;
 HEAPF32[$rot_mat$i$i$i>>2] = $78;
 $_20$sroa$4$0$$sroa_idx25$i$i16$i$i$i = ((($rot_mat$i$i$i)) + 4|0);
 HEAPF32[$_20$sroa$4$0$$sroa_idx25$i$i16$i$i$i>>2] = $84;
 $_20$sroa$5$0$$sroa_idx27$i$i17$i$i$i = ((($rot_mat$i$i$i)) + 8|0);
 HEAPF32[$_20$sroa$5$0$$sroa_idx27$i$i17$i$i$i>>2] = $81;
 $_20$sroa$6$0$$sroa_idx29$i$i18$i$i$i = ((($rot_mat$i$i$i)) + 12|0);
 HEAPF32[$_20$sroa$6$0$$sroa_idx29$i$i18$i$i$i>>2] = $87;
 $_20$sroa$7$0$$sroa_idx31$i$i19$i$i$i = ((($rot_mat$i$i$i)) + 16|0);
 HEAPF32[$_20$sroa$7$0$$sroa_idx31$i$i19$i$i$i>>2] = $94;
 $_20$sroa$8$0$$sroa_idx33$i$i20$i$i$i = ((($rot_mat$i$i$i)) + 20|0);
 HEAPF32[$_20$sroa$8$0$$sroa_idx33$i$i20$i$i$i>>2] = $95;
 (__ZN164__LT_ncollide_pipeline__narrow_phase__contact_generator__incremental_contact_manifold_generator__IncrementalContactManifoldGenerator_LT_P_C__u20_M_C__u20_CD_GT__GT_16add_new_contacts17ha149d6427b72e0c8E($0,$rot_mat$i$i$i,$4,$5,$6,$7,$8,$9)|0);
 $96 = -$70;
 $97 = (+Math_sin((+$96)));
 $98 = (+Math_cos((+$96)));
 $99 = -$97;
 $100 = $_5$sroa$0$0$copyload$i$i$i$i$i * $98;
 $101 = $_5$sroa$4$0$copyload$i$i$i$i$i * $99;
 $102 = $101 + $100;
 $103 = $_5$sroa$5$0$copyload$i$i$i$i$i * $98;
 $104 = $_5$sroa$6$0$copyload$i$i$i$i$i * $99;
 $105 = $104 + $103;
 $106 = $_5$sroa$0$0$copyload$i$i$i$i$i * $97;
 $107 = $_5$sroa$4$0$copyload$i$i$i$i$i * $98;
 $108 = $106 + $107;
 $109 = $_5$sroa$5$0$copyload$i$i$i$i$i * $97;
 $110 = $_5$sroa$6$0$copyload$i$i$i$i$i * $98;
 $111 = $109 + $110;
 $112 = $71 * $98;
 $113 = $72 * $99;
 $114 = $113 + $112;
 $115 = $71 * $97;
 $116 = $72 * $98;
 $117 = $115 + $116;
 $118 = $$idx6$val8$i$i127 + $114;
 $119 = $$idx7$val9$i$i128 + $117;
 HEAPF32[$rot_mat1$i$i$i>>2] = $102;
 $_20$sroa$4$0$$sroa_idx25$i$i$i$i$i = ((($rot_mat1$i$i$i)) + 4|0);
 HEAPF32[$_20$sroa$4$0$$sroa_idx25$i$i$i$i$i>>2] = $108;
 $_20$sroa$5$0$$sroa_idx27$i$i$i$i$i = ((($rot_mat1$i$i$i)) + 8|0);
 HEAPF32[$_20$sroa$5$0$$sroa_idx27$i$i$i$i$i>>2] = $105;
 $_20$sroa$6$0$$sroa_idx29$i$i$i$i$i = ((($rot_mat1$i$i$i)) + 12|0);
 HEAPF32[$_20$sroa$6$0$$sroa_idx29$i$i$i$i$i>>2] = $111;
 $_20$sroa$7$0$$sroa_idx31$i$i$i$i$i = ((($rot_mat1$i$i$i)) + 16|0);
 HEAPF32[$_20$sroa$7$0$$sroa_idx31$i$i$i$i$i>>2] = $118;
 $_20$sroa$8$0$$sroa_idx33$i$i$i$i$i = ((($rot_mat1$i$i$i)) + 20|0);
 HEAPF32[$_20$sroa$8$0$$sroa_idx33$i$i$i$i$i>>2] = $119;
 (__ZN164__LT_ncollide_pipeline__narrow_phase__contact_generator__incremental_contact_manifold_generator__IncrementalContactManifoldGenerator_LT_P_C__u20_M_C__u20_CD_GT__GT_16add_new_contacts17ha149d6427b72e0c8E($0,$rot_mat1$i$i$i,$4,$5,$6,$7,$8,$9)|0);
 __ZN164__LT_ncollide_pipeline__narrow_phase__contact_generator__incremental_contact_manifold_generator__IncrementalContactManifoldGenerator_LT_P_C__u20_M_C__u20_CD_GT__GT_15update_contacts17h83223752ba9f5b78E($0,$3,$6,$9);
 $_0$0$off0 = 1;
 STACKTOP = sp;return ($_0$0$off0|0);
}
function __ZN274__LT_ncollide_pipeline__narrow_phase__contact_generator__one_shot_contact_manifold_generator__OneShotContactManifoldGenerator_LT_P_C__u20_M_C__u20_CD_GT__u20_as_u20_ncollide_pipeline__narrow_phase__contact_generator__contact_generator__ContactGenerator_LT_P_C__u20_M_GT__GT_6update17hef30af49238162f4E($0,$1,$2,$3,$4,$5,$6,$7,$8,$9) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 $7 = $7|0;
 $8 = $8|0;
 $9 = +$9;
 var $$idx$i = 0, $$idx$i$i$i = 0, $$idx$phi$trans$insert$i = 0, $$idx$pre$phi$iZZ2D = 0, $$idx$val$i = 0, $$idx$val$i$i$i = 0, $$idx$val$pre$i = 0, $$idx$val12$i$i$i = 0, $$idx$val12$i$i134 = 0.0, $$idx21$val$i = 0, $$idx3$i$i = 0, $$idx3$i$i$i = 0, $$idx3$val13$i$i$i = 0, $$idx3$val13$i$i135 = 0.0, $$idx6$val8$i$i132 = 0.0, $$idx7$i$i = 0, $$idx7$val9$i$i133 = 0.0, $$pre$i$i$i = 0, $$val14$i$i$i = 0, $10 = 0;
 var $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = SIMD_Int32x4(0,0,0,0), $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0;
 var $31 = 0, $32 = 0.0, $33 = 0.0, $34 = 0.0, $35 = 0.0, $36 = 0, $37 = 0, $38 = 0.0, $39 = 0.0, $40 = 0.0, $41 = 0.0, $42 = 0.0, $43 = 0.0, $44 = 0.0, $45 = 0.0, $46 = 0.0, $47 = 0.0, $48 = 0.0, $49 = 0.0, $50 = 0.0;
 var $51 = 0.0, $52 = 0.0, $53 = 0.0, $54 = 0.0, $55 = 0.0, $56 = 0.0, $57 = 0.0, $58 = 0.0, $59 = 0.0, $60 = 0.0, $61 = 0.0, $62 = 0.0, $63 = 0.0, $64 = 0.0, $65 = 0.0, $66 = 0.0, $67 = 0.0, $68 = 0.0, $69 = 0.0, $70 = 0.0;
 var $71 = 0.0, $72 = 0.0, $73 = 0.0, $74 = 0.0, $75 = 0.0, $76 = 0.0, $77 = 0.0, $78 = 0.0, $79 = 0.0, $80 = 0.0, $81 = 0.0, $82 = 0.0, $83 = 0.0, $84 = 0.0, $85 = 0.0, $86 = 0.0, $87 = 0.0, $88 = 0.0, $89 = 0.0, $90 = 0.0;
 var $91 = 0.0, $92 = 0.0, $_0$0$off0 = 0, $_20$sroa$4$0$$sroa_idx25$i$i$i$i$i = 0, $_20$sroa$4$0$$sroa_idx25$i$i16$i$i$i = 0, $_20$sroa$5$0$$sroa_idx27$i$i$i$i$i = 0, $_20$sroa$5$0$$sroa_idx27$i$i17$i$i$i = 0, $_20$sroa$6$0$$sroa_idx29$i$i$i$i$i = 0, $_20$sroa$6$0$$sroa_idx29$i$i18$i$i$i = 0, $_20$sroa$7$0$$sroa_idx31$i$i$i$i$i = 0, $_20$sroa$7$0$$sroa_idx31$i$i19$i$i$i = 0, $_20$sroa$8$0$$sroa_idx33$i$i$i$i$i = 0, $_20$sroa$8$0$$sroa_idx33$i$i20$i$i$i = 0, $cond$i$i = 0, $res$sroa$0$0$copyload5$i$i$i$i$i = 0.0, $res$sroa$0$0$copyload5$i$i8$i$i$i = 0.0, $res$sroa$10$0$_8$sroa$0$0$$sroa_cast5$i$sroa_idx16$i$i13$i$i$i = 0, $res$sroa$10$0$copyload17$i$i$i$i$i = 0.0, $res$sroa$10$0$copyload17$i$i14$i$i$i = 0.0, $res$sroa$6$0$_8$sroa$0$0$$sroa_cast5$i$sroa_idx8$i$i9$i$i$i = 0;
 var $res$sroa$6$0$copyload9$i$i$i$i$i = 0.0, $res$sroa$6$0$copyload9$i$i10$i$i$i = 0.0, $res$sroa$8$0$_8$sroa$0$0$$sroa_cast5$i$sroa_idx12$i$i11$i$i$i = 0, $res$sroa$8$0$copyload13$i$i$i$i$i = 0.0, $res$sroa$8$0$copyload13$i$i12$i$i$i = 0.0, $rot_mat$i$i$i = 0, $rot_mat1$i$i$i = 0, $value$i$sroa$7$0$$sroa_idx36$i$i = 0, $value$i$sroa$8$0$$sroa_idx39$i$i = 0, $value$i$sroa$9$0$$sroa_idx42$i$i = 0, label = 0, sp = 0, temp_Int32x4_ptr = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $rot_mat$i$i$i = sp + 24|0;
 $rot_mat1$i$i$i = sp;
 $$idx$i = ((($0)) + 8|0);
 $$idx$val$i = HEAP32[$$idx$i>>2]|0;
 $10 = ($$idx$val$i|0)==(0);
 if (!($10)) {
  __ZN164__LT_ncollide_pipeline__narrow_phase__contact_generator__incremental_contact_manifold_generator__IncrementalContactManifoldGenerator_LT_P_C__u20_M_C__u20_CD_GT__GT_15update_contacts17h73a8d23b9606021bE($0,$3,$6,$9);
  $30 = (__ZN164__LT_ncollide_pipeline__narrow_phase__contact_generator__incremental_contact_manifold_generator__IncrementalContactManifoldGenerator_LT_P_C__u20_M_C__u20_CD_GT__GT_16add_new_contacts17h1231fb23ef14a2e2E($0,$1,$2,$3,$4,$5,$6,$7,$8,$9)|0);
  $_0$0$off0 = $30;
  STACKTOP = sp;return ($_0$0$off0|0);
 }
 $11 = ((($0)) + 24|0);
 $12 = (__ZN284__LT_ncollide_pipeline__narrow_phase__contact_generator__support_map_support_map_contact_generator__SupportMapSupportMapContactGenerator_LT_P_C__u20_M_C__u20_S_GT__u20_as_u20_ncollide_pipeline__narrow_phase__contact_generator__contact_generator__ContactGenerator_LT_P_C__u20_M_GT__GT_6update17h56901798cdd2742bE($11,$1,$2,$3,$4,$5,$6,$7,$8,$9)|0);
 if (!($12)) {
  $_0$0$off0 = 0;
  STACKTOP = sp;return ($_0$0$off0|0);
 }
 $13 = ((($0)) + 12|0);
 $14 = ((($0)) + 64|0);
 $15 = HEAP32[$14>>2]|0;
 $cond$i$i = ($15|0)==(1);
 if ($cond$i$i) {
  $16 = ((($0)) + 84|0);
  $17 = ((($0)) + 92|0);
  $18 = ((($0)) + 68|0);
  $19 = SIMD_Int32x4_load(HEAPU8, $18);
  $$idx$val12$i$i$i = HEAP32[$16>>2]|0;
  $$idx3$i$i$i = ((($0)) + 88|0);
  $$idx3$val13$i$i$i = HEAP32[$$idx3$i$i$i>>2]|0;
  $$val14$i$i$i = HEAP32[$17>>2]|0;
  $20 = ((($0)) + 20|0);
  $21 = HEAP32[$20>>2]|0;
  $$idx$i$i$i = ((($0)) + 16|0);
  $$idx$val$i$i$i = HEAP32[$$idx$i$i$i>>2]|0;
  $22 = ($21|0)==($$idx$val$i$i$i|0);
  if ($22) {
   __ZN40__LT_alloc__raw_vec__RawVec_LT_T_GT__GT_6double17ha4899d9ca8626977E($13);
   $$pre$i$i$i = HEAP32[$20>>2]|0;
   $25 = $$pre$i$i$i;
  } else {
   $25 = $21;
  }
  $23 = HEAP32[$13>>2]|0;
  $24 = (($23) + (($25*28)|0)|0);
  temp_Int32x4_ptr = $24;SIMD_Int32x4_store(HEAPU8, temp_Int32x4_ptr, $19);
  $value$i$sroa$7$0$$sroa_idx36$i$i = (((($23) + (($25*28)|0)|0)) + 16|0);
  HEAP32[$value$i$sroa$7$0$$sroa_idx36$i$i>>2] = $$idx$val12$i$i$i;
  $value$i$sroa$8$0$$sroa_idx39$i$i = (((($23) + (($25*28)|0)|0)) + 20|0);
  HEAP32[$value$i$sroa$8$0$$sroa_idx39$i$i>>2] = $$idx3$val13$i$i$i;
  $value$i$sroa$9$0$$sroa_idx42$i$i = (((($23) + (($25*28)|0)|0)) + 24|0);
  HEAP32[$value$i$sroa$9$0$$sroa_idx42$i$i>>2] = $$val14$i$i$i;
  $26 = HEAP32[$20>>2]|0;
  $27 = (($26) + 1)|0;
  HEAP32[$20>>2] = $27;
  $$idx$pre$phi$iZZ2D = $20;$28 = $27;
 } else {
  $$idx$phi$trans$insert$i = ((($0)) + 20|0);
  $$idx$val$pre$i = HEAP32[$$idx$phi$trans$insert$i>>2]|0;
  $$idx$pre$phi$iZZ2D = $$idx$phi$trans$insert$i;$28 = $$idx$val$pre$i;
 }
 $29 = ($28|0)==(0);
 if ($29) {
  $_0$0$off0 = 1;
  STACKTOP = sp;return ($_0$0$off0|0);
 }
 $$idx21$val$i = HEAP32[$13>>2]|0;
 $$idx6$val8$i$i132 = +HEAPF32[$$idx21$val$i>>2];
 $$idx7$i$i = ((($$idx21$val$i)) + 4|0);
 $$idx7$val9$i$i133 = +HEAPF32[$$idx7$i$i>>2];
 $31 = ((($$idx21$val$i)) + 16|0);
 $$idx$val12$i$i134 = +HEAPF32[$31>>2];
 $$idx3$i$i = ((($$idx21$val$i)) + 20|0);
 $$idx3$val13$i$i135 = +HEAPF32[$$idx3$i$i>>2];
 HEAP32[$$idx$pre$phi$iZZ2D>>2] = 0;
 $32 = $$idx$val12$i$i134 * $$idx$val12$i$i134;
 $33 = $$idx3$val13$i$i135 * $$idx3$val13$i$i135;
 $34 = $32 + $33;
 $35 = $34 * 0.0099999997764825821;
 $36 = ((($3)) + 16|0);
 $37 = ((($3)) + 20|0);
 $38 = +HEAPF32[$36>>2];
 $39 = +HEAPF32[$37>>2];
 $40 = $38 - $$idx6$val8$i$i132;
 $41 = $39 - $$idx7$val9$i$i133;
 $res$sroa$0$0$copyload5$i$i8$i$i$i = +HEAPF32[$3>>2];
 $res$sroa$6$0$_8$sroa$0$0$$sroa_cast5$i$sroa_idx8$i$i9$i$i$i = ((($3)) + 4|0);
 $res$sroa$6$0$copyload9$i$i10$i$i$i = +HEAPF32[$res$sroa$6$0$_8$sroa$0$0$$sroa_cast5$i$sroa_idx8$i$i9$i$i$i>>2];
 $res$sroa$8$0$_8$sroa$0$0$$sroa_cast5$i$sroa_idx12$i$i11$i$i$i = ((($3)) + 8|0);
 $res$sroa$8$0$copyload13$i$i12$i$i$i = +HEAPF32[$res$sroa$8$0$_8$sroa$0$0$$sroa_cast5$i$sroa_idx12$i$i11$i$i$i>>2];
 $res$sroa$10$0$_8$sroa$0$0$$sroa_cast5$i$sroa_idx16$i$i13$i$i$i = ((($3)) + 12|0);
 $res$sroa$10$0$copyload17$i$i14$i$i$i = +HEAPF32[$res$sroa$10$0$_8$sroa$0$0$$sroa_cast5$i$sroa_idx16$i$i13$i$i$i>>2];
 $42 = (+Math_sin((+$35)));
 $43 = (+Math_cos((+$35)));
 $44 = -$42;
 $45 = $res$sroa$0$0$copyload5$i$i8$i$i$i * $43;
 $46 = $res$sroa$6$0$copyload9$i$i10$i$i$i * $44;
 $47 = $46 + $45;
 $48 = $res$sroa$8$0$copyload13$i$i12$i$i$i * $43;
 $49 = $res$sroa$10$0$copyload17$i$i14$i$i$i * $44;
 $50 = $49 + $48;
 $51 = $res$sroa$0$0$copyload5$i$i8$i$i$i * $42;
 $52 = $res$sroa$6$0$copyload9$i$i10$i$i$i * $43;
 $53 = $51 + $52;
 $54 = $res$sroa$8$0$copyload13$i$i12$i$i$i * $42;
 $55 = $res$sroa$10$0$copyload17$i$i14$i$i$i * $43;
 $56 = $54 + $55;
 $57 = $40 * $43;
 $58 = $41 * $44;
 $59 = $58 + $57;
 $60 = $40 * $42;
 $61 = $41 * $43;
 $62 = $60 + $61;
 $63 = $$idx6$val8$i$i132 + $59;
 $64 = $$idx7$val9$i$i133 + $62;
 HEAPF32[$rot_mat$i$i$i>>2] = $47;
 $_20$sroa$4$0$$sroa_idx25$i$i16$i$i$i = ((($rot_mat$i$i$i)) + 4|0);
 HEAPF32[$_20$sroa$4$0$$sroa_idx25$i$i16$i$i$i>>2] = $53;
 $_20$sroa$5$0$$sroa_idx27$i$i17$i$i$i = ((($rot_mat$i$i$i)) + 8|0);
 HEAPF32[$_20$sroa$5$0$$sroa_idx27$i$i17$i$i$i>>2] = $50;
 $_20$sroa$6$0$$sroa_idx29$i$i18$i$i$i = ((($rot_mat$i$i$i)) + 12|0);
 HEAPF32[$_20$sroa$6$0$$sroa_idx29$i$i18$i$i$i>>2] = $56;
 $_20$sroa$7$0$$sroa_idx31$i$i19$i$i$i = ((($rot_mat$i$i$i)) + 16|0);
 HEAPF32[$_20$sroa$7$0$$sroa_idx31$i$i19$i$i$i>>2] = $63;
 $_20$sroa$8$0$$sroa_idx33$i$i20$i$i$i = ((($rot_mat$i$i$i)) + 20|0);
 HEAPF32[$_20$sroa$8$0$$sroa_idx33$i$i20$i$i$i>>2] = $64;
 (__ZN164__LT_ncollide_pipeline__narrow_phase__contact_generator__incremental_contact_manifold_generator__IncrementalContactManifoldGenerator_LT_P_C__u20_M_C__u20_CD_GT__GT_16add_new_contacts17h1231fb23ef14a2e2E($0,$1,$2,$rot_mat$i$i$i,$4,$5,$6,$7,$8,$9)|0);
 $65 = -$35;
 $66 = +HEAPF32[$36>>2];
 $67 = +HEAPF32[$37>>2];
 $68 = $66 - $$idx6$val8$i$i132;
 $69 = $67 - $$idx7$val9$i$i133;
 $res$sroa$0$0$copyload5$i$i$i$i$i = +HEAPF32[$3>>2];
 $res$sroa$6$0$copyload9$i$i$i$i$i = +HEAPF32[$res$sroa$6$0$_8$sroa$0$0$$sroa_cast5$i$sroa_idx8$i$i9$i$i$i>>2];
 $res$sroa$8$0$copyload13$i$i$i$i$i = +HEAPF32[$res$sroa$8$0$_8$sroa$0$0$$sroa_cast5$i$sroa_idx12$i$i11$i$i$i>>2];
 $res$sroa$10$0$copyload17$i$i$i$i$i = +HEAPF32[$res$sroa$10$0$_8$sroa$0$0$$sroa_cast5$i$sroa_idx16$i$i13$i$i$i>>2];
 $70 = (+Math_sin((+$65)));
 $71 = (+Math_cos((+$65)));
 $72 = -$70;
 $73 = $res$sroa$0$0$copyload5$i$i$i$i$i * $71;
 $74 = $res$sroa$6$0$copyload9$i$i$i$i$i * $72;
 $75 = $74 + $73;
 $76 = $res$sroa$8$0$copyload13$i$i$i$i$i * $71;
 $77 = $res$sroa$10$0$copyload17$i$i$i$i$i * $72;
 $78 = $77 + $76;
 $79 = $res$sroa$0$0$copyload5$i$i$i$i$i * $70;
 $80 = $res$sroa$6$0$copyload9$i$i$i$i$i * $71;
 $81 = $79 + $80;
 $82 = $res$sroa$8$0$copyload13$i$i$i$i$i * $70;
 $83 = $res$sroa$10$0$copyload17$i$i$i$i$i * $71;
 $84 = $82 + $83;
 $85 = $68 * $71;
 $86 = $69 * $72;
 $87 = $86 + $85;
 $88 = $68 * $70;
 $89 = $69 * $71;
 $90 = $88 + $89;
 $91 = $$idx6$val8$i$i132 + $87;
 $92 = $$idx7$val9$i$i133 + $90;
 HEAPF32[$rot_mat1$i$i$i>>2] = $75;
 $_20$sroa$4$0$$sroa_idx25$i$i$i$i$i = ((($rot_mat1$i$i$i)) + 4|0);
 HEAPF32[$_20$sroa$4$0$$sroa_idx25$i$i$i$i$i>>2] = $81;
 $_20$sroa$5$0$$sroa_idx27$i$i$i$i$i = ((($rot_mat1$i$i$i)) + 8|0);
 HEAPF32[$_20$sroa$5$0$$sroa_idx27$i$i$i$i$i>>2] = $78;
 $_20$sroa$6$0$$sroa_idx29$i$i$i$i$i = ((($rot_mat1$i$i$i)) + 12|0);
 HEAPF32[$_20$sroa$6$0$$sroa_idx29$i$i$i$i$i>>2] = $84;
 $_20$sroa$7$0$$sroa_idx31$i$i$i$i$i = ((($rot_mat1$i$i$i)) + 16|0);
 HEAPF32[$_20$sroa$7$0$$sroa_idx31$i$i$i$i$i>>2] = $91;
 $_20$sroa$8$0$$sroa_idx33$i$i$i$i$i = ((($rot_mat1$i$i$i)) + 20|0);
 HEAPF32[$_20$sroa$8$0$$sroa_idx33$i$i$i$i$i>>2] = $92;
 (__ZN164__LT_ncollide_pipeline__narrow_phase__contact_generator__incremental_contact_manifold_generator__IncrementalContactManifoldGenerator_LT_P_C__u20_M_C__u20_CD_GT__GT_16add_new_contacts17h1231fb23ef14a2e2E($0,$1,$2,$rot_mat1$i$i$i,$4,$5,$6,$7,$8,$9)|0);
 __ZN164__LT_ncollide_pipeline__narrow_phase__contact_generator__incremental_contact_manifold_generator__IncrementalContactManifoldGenerator_LT_P_C__u20_M_C__u20_CD_GT__GT_15update_contacts17h73a8d23b9606021bE($0,$3,$6,$9);
 $_0$0$off0 = 1;
 STACKTOP = sp;return ($_0$0$off0|0);
}
function __ZN274__LT_ncollide_pipeline__narrow_phase__contact_generator__one_shot_contact_manifold_generator__OneShotContactManifoldGenerator_LT_P_C__u20_M_C__u20_CD_GT__u20_as_u20_ncollide_pipeline__narrow_phase__contact_generator__contact_generator__ContactGenerator_LT_P_C__u20_M_GT__GT_8contacts17h0c99c2fda420fd2eE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$idx$i$i = 0, $$idx$val$i$i = 0, $$idx$val12$i$i = 0, $$idx3$i$i = 0, $$idx3$val13$i$i = 0, $$pre$i = 0, $$pre$i$i = 0, $$val14$i$i = 0, $10 = 0, $11 = 0, $12 = SIMD_Int32x4(0,0,0,0), $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $iter$sroa$0$0$in62$i = 0, $value$i$sroa$7$0$$sroa_idx52$i = 0, $value$i$sroa$8$0$$sroa_idx55$i = 0, $value$i$sroa$9$0$$sroa_idx58$i = 0, label = 0, sp = 0, temp_Int32x4_ptr = 0;
 sp = STACKTOP;
 $2 = HEAP32[$0>>2]|0;
 $3 = ((($0)) + 8|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (($2) + (($4*52)|0)|0);
 $6 = ($4|0)==(0);
 if ($6) {
  return;
 }
 $7 = ((($1)) + 8|0);
 $$idx$i$i = ((($1)) + 4|0);
 $$pre$i = HEAP32[$7>>2]|0;
 $13 = $$pre$i;$iter$sroa$0$0$in62$i = $2;
 while(1) {
  $8 = ((($iter$sroa$0$0$in62$i)) + 52|0);
  $9 = ((($iter$sroa$0$0$in62$i)) + 24|0);
  $10 = ((($iter$sroa$0$0$in62$i)) + 40|0);
  $11 = ((($iter$sroa$0$0$in62$i)) + 48|0);
  $12 = SIMD_Int32x4_load(HEAPU8, $9);
  $$idx$val12$i$i = HEAP32[$10>>2]|0;
  $$idx3$i$i = ((($iter$sroa$0$0$in62$i)) + 44|0);
  $$idx3$val13$i$i = HEAP32[$$idx3$i$i>>2]|0;
  $$val14$i$i = HEAP32[$11>>2]|0;
  $$idx$val$i$i = HEAP32[$$idx$i$i>>2]|0;
  $14 = ($13|0)==($$idx$val$i$i|0);
  if ($14) {
   __ZN40__LT_alloc__raw_vec__RawVec_LT_T_GT__GT_6double17ha4899d9ca8626977E($1);
   $$pre$i$i = HEAP32[$7>>2]|0;
   $17 = $$pre$i$i;
  } else {
   $17 = $13;
  }
  $15 = HEAP32[$1>>2]|0;
  $16 = (($15) + (($17*28)|0)|0);
  temp_Int32x4_ptr = $16;SIMD_Int32x4_store(HEAPU8, temp_Int32x4_ptr, $12);
  $value$i$sroa$7$0$$sroa_idx52$i = (((($15) + (($17*28)|0)|0)) + 16|0);
  HEAP32[$value$i$sroa$7$0$$sroa_idx52$i>>2] = $$idx$val12$i$i;
  $value$i$sroa$8$0$$sroa_idx55$i = (((($15) + (($17*28)|0)|0)) + 20|0);
  HEAP32[$value$i$sroa$8$0$$sroa_idx55$i>>2] = $$idx3$val13$i$i;
  $value$i$sroa$9$0$$sroa_idx58$i = (((($15) + (($17*28)|0)|0)) + 24|0);
  HEAP32[$value$i$sroa$9$0$$sroa_idx58$i>>2] = $$val14$i$i;
  $18 = HEAP32[$7>>2]|0;
  $19 = (($18) + 1)|0;
  HEAP32[$7>>2] = $19;
  $20 = ($8|0)==($5|0);
  if ($20) {
   break;
  } else {
   $13 = $19;$iter$sroa$0$0$in62$i = $8;
  }
 }
 return;
}
function __ZN274__LT_ncollide_pipeline__narrow_phase__contact_generator__one_shot_contact_manifold_generator__OneShotContactManifoldGenerator_LT_P_C__u20_M_C__u20_CD_GT__u20_as_u20_ncollide_pipeline__narrow_phase__contact_generator__contact_generator__ContactGenerator_LT_P_C__u20_M_GT__GT_8contacts17h689fd92b674ce26bE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$idx$i$i = 0, $$idx$val$i$i = 0, $$idx$val12$i$i = 0, $$idx3$i$i = 0, $$idx3$val13$i$i = 0, $$pre$i = 0, $$pre$i$i = 0, $$val14$i$i = 0, $10 = 0, $11 = 0, $12 = SIMD_Int32x4(0,0,0,0), $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $iter$sroa$0$0$in62$i = 0, $value$i$sroa$7$0$$sroa_idx52$i = 0, $value$i$sroa$8$0$$sroa_idx55$i = 0, $value$i$sroa$9$0$$sroa_idx58$i = 0, label = 0, sp = 0, temp_Int32x4_ptr = 0;
 sp = STACKTOP;
 $2 = HEAP32[$0>>2]|0;
 $3 = ((($0)) + 8|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (($2) + (($4*52)|0)|0);
 $6 = ($4|0)==(0);
 if ($6) {
  return;
 }
 $7 = ((($1)) + 8|0);
 $$idx$i$i = ((($1)) + 4|0);
 $$pre$i = HEAP32[$7>>2]|0;
 $13 = $$pre$i;$iter$sroa$0$0$in62$i = $2;
 while(1) {
  $8 = ((($iter$sroa$0$0$in62$i)) + 52|0);
  $9 = ((($iter$sroa$0$0$in62$i)) + 24|0);
  $10 = ((($iter$sroa$0$0$in62$i)) + 40|0);
  $11 = ((($iter$sroa$0$0$in62$i)) + 48|0);
  $12 = SIMD_Int32x4_load(HEAPU8, $9);
  $$idx$val12$i$i = HEAP32[$10>>2]|0;
  $$idx3$i$i = ((($iter$sroa$0$0$in62$i)) + 44|0);
  $$idx3$val13$i$i = HEAP32[$$idx3$i$i>>2]|0;
  $$val14$i$i = HEAP32[$11>>2]|0;
  $$idx$val$i$i = HEAP32[$$idx$i$i>>2]|0;
  $14 = ($13|0)==($$idx$val$i$i|0);
  if ($14) {
   __ZN40__LT_alloc__raw_vec__RawVec_LT_T_GT__GT_6double17ha4899d9ca8626977E($1);
   $$pre$i$i = HEAP32[$7>>2]|0;
   $17 = $$pre$i$i;
  } else {
   $17 = $13;
  }
  $15 = HEAP32[$1>>2]|0;
  $16 = (($15) + (($17*28)|0)|0);
  temp_Int32x4_ptr = $16;SIMD_Int32x4_store(HEAPU8, temp_Int32x4_ptr, $12);
  $value$i$sroa$7$0$$sroa_idx52$i = (((($15) + (($17*28)|0)|0)) + 16|0);
  HEAP32[$value$i$sroa$7$0$$sroa_idx52$i>>2] = $$idx$val12$i$i;
  $value$i$sroa$8$0$$sroa_idx55$i = (((($15) + (($17*28)|0)|0)) + 20|0);
  HEAP32[$value$i$sroa$8$0$$sroa_idx55$i>>2] = $$idx3$val13$i$i;
  $value$i$sroa$9$0$$sroa_idx58$i = (((($15) + (($17*28)|0)|0)) + 24|0);
  HEAP32[$value$i$sroa$9$0$$sroa_idx58$i>>2] = $$val14$i$i;
  $18 = HEAP32[$7>>2]|0;
  $19 = (($18) + 1)|0;
  HEAP32[$7>>2] = $19;
  $20 = ($8|0)==($5|0);
  if ($20) {
   break;
  } else {
   $13 = $19;$iter$sroa$0$0$in62$i = $8;
  }
 }
 return;
}
function __ZN274__LT_ncollide_pipeline__narrow_phase__contact_generator__one_shot_contact_manifold_generator__OneShotContactManifoldGenerator_LT_P_C__u20_M_C__u20_CD_GT__u20_as_u20_ncollide_pipeline__narrow_phase__contact_generator__contact_generator__ContactGenerator_LT_P_C__u20_M_GT__GT_8contacts17hb68f28ff0584afa2E($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$idx$i$i = 0, $$idx$val$i$i = 0, $$idx$val12$i$i = 0, $$idx3$i$i = 0, $$idx3$val13$i$i = 0, $$pre$i = 0, $$pre$i$i = 0, $$val14$i$i = 0, $10 = 0, $11 = 0, $12 = SIMD_Int32x4(0,0,0,0), $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $iter$sroa$0$0$in62$i = 0, $value$i$sroa$7$0$$sroa_idx52$i = 0, $value$i$sroa$8$0$$sroa_idx55$i = 0, $value$i$sroa$9$0$$sroa_idx58$i = 0, label = 0, sp = 0, temp_Int32x4_ptr = 0;
 sp = STACKTOP;
 $2 = HEAP32[$0>>2]|0;
 $3 = ((($0)) + 8|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (($2) + (($4*52)|0)|0);
 $6 = ($4|0)==(0);
 if ($6) {
  return;
 }
 $7 = ((($1)) + 8|0);
 $$idx$i$i = ((($1)) + 4|0);
 $$pre$i = HEAP32[$7>>2]|0;
 $13 = $$pre$i;$iter$sroa$0$0$in62$i = $2;
 while(1) {
  $8 = ((($iter$sroa$0$0$in62$i)) + 52|0);
  $9 = ((($iter$sroa$0$0$in62$i)) + 24|0);
  $10 = ((($iter$sroa$0$0$in62$i)) + 40|0);
  $11 = ((($iter$sroa$0$0$in62$i)) + 48|0);
  $12 = SIMD_Int32x4_load(HEAPU8, $9);
  $$idx$val12$i$i = HEAP32[$10>>2]|0;
  $$idx3$i$i = ((($iter$sroa$0$0$in62$i)) + 44|0);
  $$idx3$val13$i$i = HEAP32[$$idx3$i$i>>2]|0;
  $$val14$i$i = HEAP32[$11>>2]|0;
  $$idx$val$i$i = HEAP32[$$idx$i$i>>2]|0;
  $14 = ($13|0)==($$idx$val$i$i|0);
  if ($14) {
   __ZN40__LT_alloc__raw_vec__RawVec_LT_T_GT__GT_6double17ha4899d9ca8626977E($1);
   $$pre$i$i = HEAP32[$7>>2]|0;
   $17 = $$pre$i$i;
  } else {
   $17 = $13;
  }
  $15 = HEAP32[$1>>2]|0;
  $16 = (($15) + (($17*28)|0)|0);
  temp_Int32x4_ptr = $16;SIMD_Int32x4_store(HEAPU8, temp_Int32x4_ptr, $12);
  $value$i$sroa$7$0$$sroa_idx52$i = (((($15) + (($17*28)|0)|0)) + 16|0);
  HEAP32[$value$i$sroa$7$0$$sroa_idx52$i>>2] = $$idx$val12$i$i;
  $value$i$sroa$8$0$$sroa_idx55$i = (((($15) + (($17*28)|0)|0)) + 20|0);
  HEAP32[$value$i$sroa$8$0$$sroa_idx55$i>>2] = $$idx3$val13$i$i;
  $value$i$sroa$9$0$$sroa_idx58$i = (((($15) + (($17*28)|0)|0)) + 24|0);
  HEAP32[$value$i$sroa$9$0$$sroa_idx58$i>>2] = $$val14$i$i;
  $18 = HEAP32[$7>>2]|0;
  $19 = (($18) + 1)|0;
  HEAP32[$7>>2] = $19;
  $20 = ($8|0)==($5|0);
  if ($20) {
   break;
  } else {
   $13 = $19;$iter$sroa$0$0$in62$i = $8;
  }
 }
 return;
}
function __ZN278__LT_ncollide_pipeline__narrow_phase__proximity_detector__composite_shape_shape_proximity_detector__CompositeShapeShapeProximityDetector_LT_P_C__u20_M_GT__u20_as_u20_ncollide_pipeline__narrow_phase__proximity_detector__proximity_detector__ProximityDetector_LT_P_C__u20_M_GT__GT_6update17ha1e009ebb5c246f9E($0,$1,$2,$3,$4,$5,$6,$7,$8,$9) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 $7 = $7|0;
 $8 = $8|0;
 $9 = +$9;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $_0$0$off0 = 0, $_15 = 0, $switchtmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $_15 = sp;
 $10 = ((($5)) + 32|0);
 $11 = HEAP32[$10>>2]|0;
 FUNCTION_TABLE_vii[$11 & 511]($_15,$4);
 $12 = HEAP32[$_15>>2]|0;
 $switchtmp = ($12|0)==(0|0);
 if ($switchtmp) {
  $_0$0$off0 = 0;
  STACKTOP = sp;return ($_0$0$off0|0);
 }
 $13 = ((($_15)) + 4|0);
 $14 = HEAP32[$13>>2]|0;
 __ZN158__LT_ncollide_pipeline__narrow_phase__proximity_detector__composite_shape_shape_proximity_detector__CompositeShapeShapeProximityDetector_LT_P_C__u20_M_GT__GT_9do_update17heca235c9d95b8b41E($0,$1,$2,$3,$12,$14,$6,$7,$8,$9);
 $_0$0$off0 = 1;
 STACKTOP = sp;return ($_0$0$off0|0);
}
function __ZN278__LT_ncollide_pipeline__narrow_phase__proximity_detector__composite_shape_shape_proximity_detector__CompositeShapeShapeProximityDetector_LT_P_C__u20_M_GT__u20_as_u20_ncollide_pipeline__narrow_phase__proximity_detector__proximity_detector__ProximityDetector_LT_P_C__u20_M_GT__GT_9proximity17h05eda5c8a130f01fE($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP8[$0>>0]|0;
 return ($1|0);
}
function __ZN278__LT_ncollide_pipeline__narrow_phase__proximity_detector__composite_shape_shape_proximity_detector__ShapeCompositeShapeProximityDetector_LT_P_C__u20_M_GT__u20_as_u20_ncollide_pipeline__narrow_phase__proximity_detector__proximity_detector__ProximityDetector_LT_P_C__u20_M_GT__GT_6update17h8ad1b4058e08c886E($0,$1,$2,$3,$4,$5,$6,$7,$8,$9) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 $7 = $7|0;
 $8 = $8|0;
 $9 = +$9;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $_0$0$off0 = 0, $_15 = 0, $switchtmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $_15 = sp;
 $10 = ((($8)) + 32|0);
 $11 = HEAP32[$10>>2]|0;
 FUNCTION_TABLE_vii[$11 & 511]($_15,$7);
 $12 = HEAP32[$_15>>2]|0;
 $switchtmp = ($12|0)==(0|0);
 if ($switchtmp) {
  $_0$0$off0 = 0;
  STACKTOP = sp;return ($_0$0$off0|0);
 }
 $13 = ((($_15)) + 4|0);
 $14 = HEAP32[$13>>2]|0;
 __ZN158__LT_ncollide_pipeline__narrow_phase__proximity_detector__composite_shape_shape_proximity_detector__CompositeShapeShapeProximityDetector_LT_P_C__u20_M_GT__GT_9do_update17heca235c9d95b8b41E($0,$1,$2,$6,$12,$14,$3,$4,$5,$9);
 $_0$0$off0 = 1;
 STACKTOP = sp;return ($_0$0$off0|0);
}
function __ZN278__LT_ncollide_pipeline__narrow_phase__proximity_detector__composite_shape_shape_proximity_detector__ShapeCompositeShapeProximityDetector_LT_P_C__u20_M_GT__u20_as_u20_ncollide_pipeline__narrow_phase__proximity_detector__proximity_detector__ProximityDetector_LT_P_C__u20_M_GT__GT_9proximity17hec59105d43236641E($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP8[$0>>0]|0;
 return ($1|0);
}
function __ZN284__LT_ncollide_pipeline__narrow_phase__contact_generator__support_map_support_map_contact_generator__SupportMapSupportMapContactGenerator_LT_P_C__u20_M_C__u20_S_GT__u20_as_u20_ncollide_pipeline__narrow_phase__contact_generator__contact_generator__ContactGenerator_LT_P_C__u20_M_GT__GT_12num_contacts17haf6ba2e8c2be061eE($0) {
 $0 = $0|0;
 var $$ = 0, $1 = 0, $2 = 0, $cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 40|0);
 $2 = HEAP32[$1>>2]|0;
 $cond = ($2|0)==(1);
 $$ = $cond&1;
 return ($$|0);
}
function __ZN284__LT_ncollide_pipeline__narrow_phase__contact_generator__support_map_support_map_contact_generator__SupportMapSupportMapContactGenerator_LT_P_C__u20_M_C__u20_S_GT__u20_as_u20_ncollide_pipeline__narrow_phase__contact_generator__contact_generator__ContactGenerator_LT_P_C__u20_M_GT__GT_6update17h56901798cdd2742bE($0,$1,$2,$3,$4,$5,$6,$7,$8,$9) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 $7 = $7|0;
 $8 = $8|0;
 $9 = +$9;
 var $$dir$sroa$0$0$i = 0, $$idx$i$i$i = 0, $$idx$val$i$i$i = 0, $$idx$val$i$i$i$i = 0.0, $$idx$val$i$i$i$i$i$i = 0, $$idx$val$i11$i$i$i$i = 0, $$idx$val$i1172$i$i$i$i = 0, $$idx1$val$i$i$i$i = 0.0, $$idx22 = 0, $$idx24 = 0, $$idx3$i$i$i$i$i = 0, $$idx3$val$i$i$i$i$i = 0.0, $$idx4$i$i$i$i$i = 0, $$idx4$val$i$i$i$i$i = 0.0, $$idx5$val$i$i$i$i = 0.0, $$idx6$val$i$i$i$i = 0.0, $$idx7$i$i$i$i = 0, $$idx7$i$i$i$i$i = 0, $$idx7$val$i$i$i$i = 0.0, $$idx7$val$i$i$i$i$i = 0.0;
 var $$idx8$i$i$i$i$i = 0, $$idx8$val$i$i$i$i = 0.0, $$idx8$val$i$i$i$i$i = 0.0, $$pre$i$i$i = 0, $$pre$i$i$i$i$i$i = 0, $10 = 0, $100 = 0.0, $101 = 0.0, $102 = 0, $103 = 0.0, $104 = 0.0, $105 = 0.0, $106 = 0.0, $107 = 0.0, $108 = 0.0, $109 = 0, $11 = 0, $110 = 0.0, $111 = 0.0, $112 = 0.0;
 var $113 = 0.0, $114 = 0.0, $115 = 0.0, $116 = 0.0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0.0, $122 = 0.0, $123 = 0.0, $124 = 0.0, $125 = 0.0, $126 = 0, $127 = 0, $128 = 0.0, $129 = 0.0, $13 = 0, $130 = 0.0;
 var $131 = 0.0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0.0, $141 = 0.0, $142 = 0.0, $143 = 0.0, $144 = 0, $145 = 0, $146 = 0.0, $147 = 0.0, $148 = 0.0, $149 = 0;
 var $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0.0, $156 = 0.0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0.0, $161 = 0.0, $162 = 0.0, $163 = 0.0, $164 = 0, $165 = 0.0, $166 = 0.0, $167 = 0.0;
 var $168 = 0.0, $169 = 0.0, $17 = 0, $170 = 0.0, $171 = 0.0, $172 = 0.0, $173 = 0.0, $174 = 0.0, $175 = 0.0, $176 = 0.0, $177 = 0.0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0;
 var $186 = 0, $187 = 0.0, $188 = 0.0, $189 = 0.0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0.0, $194 = 0.0, $195 = 0.0, $196 = 0.0, $197 = 0.0, $198 = 0.0, $199 = 0.0, $20 = 0.0, $200 = 0.0, $201 = 0.0, $202 = 0.0, $203 = 0.0;
 var $204 = 0.0, $205 = 0, $206 = 0.0, $207 = 0.0, $208 = 0.0, $209 = 0.0, $21 = 0.0, $210 = 0.0, $211 = 0.0, $212 = 0.0, $213 = 0.0, $214 = 0.0, $215 = 0.0, $216 = 0.0, $217 = 0.0, $218 = 0.0, $219 = 0.0, $22 = 0, $220 = 0.0, $221 = 0.0;
 var $222 = 0.0, $223 = 0.0, $224 = 0.0, $225 = 0.0, $226 = 0.0, $227 = 0.0, $228 = 0, $229 = 0, $23 = 0, $24 = 0.0, $25 = 0.0, $26 = 0.0, $27 = 0.0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0;
 var $35 = 0, $36 = 0, $37 = 0.0, $38 = 0.0, $39 = 0.0, $40 = 0.0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0.0, $46 = 0.0, $47 = 0.0, $48 = 0.0, $49 = 0.0, $50 = 0.0, $51 = 0.0, $52 = 0.0, $53 = 0, $54 = 0;
 var $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $70 = 0.0, $71 = 0.0, $72 = 0.0, $73 = 0.0, $74 = 0.0;
 var $75 = 0.0, $76 = 0.0, $77 = 0.0, $78 = 0.0, $79 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0.0, $85 = 0.0, $86 = 0.0, $87 = 0.0, $88 = 0, $89 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0;
 var $95 = 0, $96 = 0, $97 = 0, $98 = 0.0, $99 = 0.0, $_0$0$off0 = 0, $_14$i$i$i$i = 0, $_14$i$i$i$i$i$i = 0, $_14$i$i$i$i$i$i$i = 0, $_14$sroa$0$0$copyload = 0, $_14$sroa$5$0$$sroa_idx17 = 0, $_14$sroa$5$0$copyload = 0, $_14$sroa$6$8$copyload = 0, $_14$sroa$9$8$$sroa_idx21 = 0, $_14$sroa$9$8$copyload = 0, $_15 = 0, $_17 = 0, $_19$sroa$10$0$i$i$i = 0.0, $_19$sroa$10$4$copyload$i$i$i = 0.0, $_19$sroa$11$0$i$i$i = 0.0;
 var $_19$sroa$11$4$copyload$i$i$i = 0.0, $_19$sroa$6$0$i$i$i = 0, $_19$sroa$6$4$copyload$i$i$i = 0, $_19$sroa$9$0$i$i$i = 0, $_19$sroa$9$4$copyload$i$i$i = 0, $_21$i$i = 0, $_31$sroa$0$0 = 0, $_31$sroa$11$0 = 0, $_31$sroa$11$0$$sroa_idx35 = 0, $_31$sroa$15$0 = 0.0, $_31$sroa$15$0$$sroa_idx37 = 0, $_31$sroa$17$0 = 0.0, $_31$sroa$17$0$$sroa_idx40 = 0, $_31$sroa$19$0 = 0.0, $_31$sroa$19$0$$sroa_idx43 = 0, $_31$sroa$21$0 = 0.0, $_31$sroa$21$0$$sroa_idx46 = 0, $_31$sroa$23$0 = 0.0, $_31$sroa$23$0$$sroa_idx49 = 0, $_31$sroa$7$0 = 0;
 var $_31$sroa$7$0$$sroa_idx33 = 0, $_37$i$i$i$i = 0, $best_dir$sroa$0$0$i$i = 0, $best_dir$sroa$0$1$i$i = 0, $best_dir$sroa$6$0$i$i = 0, $best_dir$sroa$6$1$i$i = 0, $cso$i$i = 0, $dir$i$i = 0, $initial_direction$sroa$6$0$ph = 0.0, $initial_direction$sroa$6$0$ph$in = 0, $initial_direction$sroa$6$0$ph$sink = 0.0, $initial_direction$sroa$8$0$ph = 0.0, $initial_direction$sroa$8$0$ph$in$in = 0, $initial_direction$sroa$8$0$ph$sink = 0.0, $iter$sroa$0$0$in15$i$i$i = 0, $iter$sroa$0$031$i$i$i$i = 0, $max_bound$sroa$0$0$in74$i$i$i$i = 0.0, $min_dist$0$i$i = 0.0, $min_dist$1$i$i = 0.0, $old_proj$i$sroa$0$0$copyload$i$i$i = 0;
 var $old_proj$i$sroa$5$0$$sroa_idx28$i$i$i = 0, $old_proj$i$sroa$5$0$copyload$i$i$i = 0, $old_proj$i$sroa$6$0$$sroa_idx31$i$i$i = 0, $old_proj$i$sroa$6$0$copyload$i$i$i = 0.0, $old_proj$i$sroa$7$0$$sroa_idx34$i$i$i = 0, $old_proj$i$sroa$7$0$copyload$i$i$i = 0.0, $or$cond = 0, $or$cond$i$i = 0, $or$cond$i$i$i$i = 0, $or$cond73$i$i$i$i = 0, $p$sroa$0$0$copyload33$i$i = 0, $p$sroa$4$0$$sroa_idx21$i$i = 0, $p$sroa$4$0$copyload34$i$i = 0, $p$sroa$5$0$$sroa_idx24$i$i = 0, $p$sroa$5$0$copyload35$i$i = 0.0, $p$sroa$6$0$$sroa_idx26$i$i = 0, $p$sroa$6$0$copyload36$i$i = 0.0, $proj$i$i$i$i = 0, $reflect2$i$i = 0, $sample$i$i$i$i$i = 0;
 var $sample$idx$val$i$i$i$i$i = 0.0, $sample$idx1$val$i$i$i$i$i = 0.0, $switch2tmp = 0, $switchtmp = 0, $tm2$i$i = 0, $tmp_ret$i$i$i = 0, $tmp_ret$i$i$i$i = 0, $tmp_ret$i$i$i$i$i = 0, $tmp_ret$i$i$i$i$i$i = 0, $tmp_ret$i$i$i$i$i$i$i = 0, $tmp_ret$i$i$i$i40$i$i = 0, $trunc = 0, $trunc$clear = 0, $trunc$i$i = 0, $trunc$i$i$clear = 0, $value$i$i$sroa$4$0$$sroa_idx62$i$i$i$i = 0, $value$i$i$sroa$4$0$$sroa_idx87$i = 0, $value$i$i$sroa$5$0$$sroa_idx64$i$i$i$i = 0, $value$i$i$sroa$5$0$$sroa_idx89$i = 0, $value$i$i$sroa$6$0$$sroa_idx66$i$i$i$i = 0;
 var $value$i$i$sroa$6$0$$sroa_idx91$i = 0, $value$i$i$sroa$7$0$$sroa_idx68$i$i$i$i = 0, $value$i$i$sroa$7$0$$sroa_idx93$i = 0, $value$i$i$sroa$8$0$$sroa_idx70$i$i$i$i = 0, $value$i$i$sroa$8$0$$sroa_idx95$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(224|0);
 $reflect2$i$i = sp + 216|0;
 $cso$i$i = sp + 192|0;
 $_21$i$i = sp + 160|0;
 $_14$i$i$i$i = sp + 152|0;
 $tmp_ret$i$i$i$i = sp + 144|0;
 $tmp_ret$i$i$i = sp + 136|0;
 $dir$i$i = sp + 128|0;
 $_14$i$i$i$i$i$i$i = sp + 120|0;
 $tmp_ret$i$i$i$i$i$i$i = sp + 112|0;
 $tmp_ret$i$i$i$i40$i$i = sp + 104|0;
 $sample$i$i$i$i$i = sp + 96|0;
 $_14$i$i$i$i$i$i = sp + 88|0;
 $tmp_ret$i$i$i$i$i$i = sp + 80|0;
 $tmp_ret$i$i$i$i$i = sp + 72|0;
 $proj$i$i$i$i = sp + 48|0;
 $_37$i$i$i$i = sp + 40|0;
 $tm2$i$i = sp + 16|0;
 $_15 = sp + 8|0;
 $_17 = sp;
 $10 = ((($5)) + 28|0);
 $11 = HEAP32[$10>>2]|0;
 FUNCTION_TABLE_vii[$11 & 511]($_15,$4);
 $12 = ((($8)) + 28|0);
 $13 = HEAP32[$12>>2]|0;
 FUNCTION_TABLE_vii[$13 & 511]($_17,$7);
 $_14$sroa$0$0$copyload = HEAP32[$_15>>2]|0;
 $_14$sroa$5$0$$sroa_idx17 = ((($_15)) + 4|0);
 $_14$sroa$5$0$copyload = HEAP32[$_14$sroa$5$0$$sroa_idx17>>2]|0;
 $_14$sroa$6$8$copyload = HEAP32[$_17>>2]|0;
 $_14$sroa$9$8$$sroa_idx21 = ((($_17)) + 4|0);
 $_14$sroa$9$8$copyload = HEAP32[$_14$sroa$9$8$$sroa_idx21>>2]|0;
 $switch2tmp = ($_14$sroa$0$0$copyload|0)==(0|0);
 $switchtmp = ($_14$sroa$6$8$copyload|0)==(0|0);
 $or$cond = $switch2tmp | $switchtmp;
 if ($or$cond) {
  $_0$0$off0 = 0;
  STACKTOP = sp;return ($_0$0$off0|0);
 }
 $14 = ((($0)) + 40|0);
 $15 = HEAP32[$14>>2]|0;
 $trunc = $15&255;
 $trunc$clear = $trunc & 3;
 switch ($trunc$clear<<24>>24) {
 case 0:  {
  $18 = ((($3)) + 16|0);
  $19 = ((($3)) + 20|0);
  $20 = +HEAPF32[$18>>2];
  $21 = +HEAPF32[$19>>2];
  $22 = ((($6)) + 16|0);
  $23 = ((($6)) + 20|0);
  $24 = +HEAPF32[$22>>2];
  $25 = +HEAPF32[$23>>2];
  $26 = $20 - $24;
  $27 = $21 - $25;
  $initial_direction$sroa$6$0$ph$sink = $26;$initial_direction$sroa$8$0$ph$sink = $27;
  break;
 }
 case 1:  {
  $16 = ((($0)) + 60|0);
  $$idx22 = ((($0)) + 64|0);
  $initial_direction$sroa$6$0$ph$in = $16;$initial_direction$sroa$8$0$ph$in$in = $$idx22;
  label = 7;
  break;
 }
 case 2:  {
  __ZN3std9panicking11begin_panic17h9936a195de5ffc4dE(10157,40,5304);
  // unreachable;
  break;
 }
 case 3:  {
  $17 = ((($0)) + 44|0);
  $$idx24 = ((($0)) + 48|0);
  $initial_direction$sroa$6$0$ph$in = $17;$initial_direction$sroa$8$0$ph$in$in = $$idx24;
  label = 7;
  break;
 }
 default: {
  // unreachable;
 }
 }
 if ((label|0) == 7) {
  $initial_direction$sroa$8$0$ph = +HEAPF32[$initial_direction$sroa$8$0$ph$in$in>>2];
  $initial_direction$sroa$6$0$ph = +HEAPF32[$initial_direction$sroa$6$0$ph$in>>2];
  $initial_direction$sroa$6$0$ph$sink = $initial_direction$sroa$6$0$ph;$initial_direction$sroa$8$0$ph$sink = $initial_direction$sroa$8$0$ph;
 }
 $28 = (HEAPF32[tempDoublePtr>>2]=$initial_direction$sroa$6$0$ph$sink,HEAP32[tempDoublePtr>>2]|0);
 $29 = $initial_direction$sroa$6$0$ph$sink == 0.0;
 $30 = $initial_direction$sroa$8$0$ph$sink == 0.0;
 $or$cond$i$i = $29 & $30;
 $$dir$sroa$0$0$i = $or$cond$i$i ? 1065353216 : $28;
 HEAP32[$dir$i$i>>2] = $$dir$sroa$0$0$i;
 $31 = ((($dir$i$i)) + 4|0);
 HEAPF32[$31>>2] = $initial_direction$sroa$8$0$ph$sink;
 $32 = ((($_14$sroa$5$0$copyload)) + 12|0);
 $33 = HEAP32[$32>>2]|0;
 FUNCTION_TABLE_viiii[$33 & 511]($tmp_ret$i$i$i,$_14$sroa$0$0$copyload,$3,$dir$i$i);
 $34 = ((($tmp_ret$i$i$i)) + 4|0);
 $35 = HEAP32[$tmp_ret$i$i$i>>2]|0;
 $36 = HEAP32[$34>>2]|0;
 $37 = +HEAPF32[$dir$i$i>>2];
 $38 = +HEAPF32[$31>>2];
 $39 = -$37;
 $40 = -$38;
 HEAPF32[$_14$i$i$i$i>>2] = $39;
 $41 = ((($_14$i$i$i$i)) + 4|0);
 HEAPF32[$41>>2] = $40;
 $42 = ((($_14$sroa$9$8$copyload)) + 12|0);
 $43 = HEAP32[$42>>2]|0;
 FUNCTION_TABLE_viiii[$43 & 511]($tmp_ret$i$i$i$i,$_14$sroa$6$8$copyload,$6,$_14$i$i$i$i);
 $44 = ((($tmp_ret$i$i$i$i)) + 4|0);
 $45 = +HEAPF32[$tmp_ret$i$i$i$i>>2];
 $46 = +HEAPF32[$44>>2];
 $47 = -$45;
 $48 = -$46;
 $49 = (HEAP32[tempDoublePtr>>2]=$35,+HEAPF32[tempDoublePtr>>2]);
 $50 = (HEAP32[tempDoublePtr>>2]=$36,+HEAPF32[tempDoublePtr>>2]);
 $51 = $49 - $45;
 $52 = $50 - $46;
 $53 = ((($0)) + 4|0);
 $54 = ((($0)) + 12|0);
 $55 = HEAP32[$54>>2]|0;
 $56 = ($55|0)==(0);
 if (!($56)) {
  HEAP32[$54>>2] = 0;
 }
 $$idx$i$i$i = ((($0)) + 8|0);
 $$idx$val$i$i$i = HEAP32[$$idx$i$i$i>>2]|0;
 $57 = ($$idx$val$i$i$i|0)==(0);
 if ($57) {
  __ZN40__LT_alloc__raw_vec__RawVec_LT_T_GT__GT_6double17hac6a54ac5941c853E($53);
  $$pre$i$i$i = HEAP32[$54>>2]|0;
  $60 = $$pre$i$i$i;
 } else {
  $60 = 0;
 }
 $58 = HEAP32[$53>>2]|0;
 $59 = (($58) + (($60*24)|0)|0);
 HEAP32[$59>>2] = $35;
 $value$i$i$sroa$4$0$$sroa_idx87$i = (((($58) + (($60*24)|0)|0)) + 4|0);
 HEAP32[$value$i$i$sroa$4$0$$sroa_idx87$i>>2] = $36;
 $value$i$i$sroa$5$0$$sroa_idx89$i = (((($58) + (($60*24)|0)|0)) + 8|0);
 HEAPF32[$value$i$i$sroa$5$0$$sroa_idx89$i>>2] = $47;
 $value$i$i$sroa$6$0$$sroa_idx91$i = (((($58) + (($60*24)|0)|0)) + 12|0);
 HEAPF32[$value$i$i$sroa$6$0$$sroa_idx91$i>>2] = $48;
 $value$i$i$sroa$7$0$$sroa_idx93$i = (((($58) + (($60*24)|0)|0)) + 16|0);
 HEAPF32[$value$i$i$sroa$7$0$$sroa_idx93$i>>2] = $51;
 $value$i$i$sroa$8$0$$sroa_idx95$i = (((($58) + (($60*24)|0)|0)) + 20|0);
 HEAPF32[$value$i$i$sroa$8$0$$sroa_idx95$i>>2] = $52;
 $61 = HEAP32[$54>>2]|0;
 $62 = (($61) + 1)|0;
 HEAP32[$54>>2] = $62;
 HEAP32[$reflect2$i$i>>2] = $_14$sroa$6$8$copyload;
 $63 = ((($reflect2$i$i)) + 4|0);
 HEAP32[$63>>2] = $_14$sroa$9$8$copyload;
 HEAP32[$cso$i$i>>2] = $3;
 $64 = ((($cso$i$i)) + 4|0);
 HEAP32[$64>>2] = $_14$sroa$0$0$copyload;
 $65 = ((($cso$i$i)) + 8|0);
 HEAP32[$65>>2] = $_14$sroa$5$0$copyload;
 $66 = ((($cso$i$i)) + 12|0);
 HEAP32[$66>>2] = $6;
 $67 = ((($cso$i$i)) + 16|0);
 HEAP32[$67>>2] = $reflect2$i$i;
 __ZN17ncollide_geometry5query10algorithms3gjk28project_origin_with_max_dist17h20c0944449d69aadE($_21$i$i,$cso$i$i,$9,1,$0);
 $68 = HEAP32[$_21$i$i>>2]|0;
 $trunc$i$i = $68&255;
 $trunc$i$i$clear = $trunc$i$i & 3;
 switch ($trunc$i$i$clear<<24>>24) {
 case 0:  {
  label = 20;
  break;
 }
 case 1:  {
  $69 = ((($_21$i$i)) + 4|0);
  $p$sroa$0$0$copyload33$i$i = HEAP32[$69>>2]|0;
  $p$sroa$4$0$$sroa_idx21$i$i = ((($_21$i$i)) + 8|0);
  $p$sroa$4$0$copyload34$i$i = HEAP32[$p$sroa$4$0$$sroa_idx21$i$i>>2]|0;
  $p$sroa$5$0$$sroa_idx24$i$i = ((($_21$i$i)) + 12|0);
  $p$sroa$5$0$copyload35$i$i = +HEAPF32[$p$sroa$5$0$$sroa_idx24$i$i>>2];
  $p$sroa$6$0$$sroa_idx26$i$i = ((($_21$i$i)) + 16|0);
  $p$sroa$6$0$copyload36$i$i = +HEAPF32[$p$sroa$6$0$$sroa_idx26$i$i>>2];
  $70 = -$p$sroa$5$0$copyload35$i$i;
  $71 = -$p$sroa$6$0$copyload36$i$i;
  $72 = (HEAP32[tempDoublePtr>>2]=$p$sroa$0$0$copyload33$i$i,+HEAPF32[tempDoublePtr>>2]);
  $73 = (HEAP32[tempDoublePtr>>2]=$p$sroa$4$0$copyload34$i$i,+HEAPF32[tempDoublePtr>>2]);
  $74 = $70 - $72;
  $75 = $71 - $73;
  $76 = $74 * $74;
  $77 = $75 * $75;
  $78 = $76 + $77;
  $79 = $78 == 0.0;
  if ($79) {
   label = 20;
  } else {
   $84 = (+Math_sqrt((+$78)));
   $85 = $74 / $84;
   $86 = $75 / $84;
   $87 = -$84;
   $_31$sroa$0$0 = 1;$_31$sroa$11$0 = $p$sroa$4$0$copyload34$i$i;$_31$sroa$15$0 = $70;$_31$sroa$17$0 = $71;$_31$sroa$19$0 = $85;$_31$sroa$21$0 = $86;$_31$sroa$23$0 = $87;$_31$sroa$7$0 = $p$sroa$0$0$copyload33$i$i;
  }
  break;
 }
 case 2:  {
  __ZN3std9panicking11begin_panic17h9936a195de5ffc4dE(10157,40,5556);
  // unreachable;
  break;
 }
 case 3:  {
  $80 = ((($_21$i$i)) + 8|0);
  $81 = ((($_21$i$i)) + 4|0);
  $82 = HEAP32[$81>>2]|0;
  $83 = HEAP32[$80>>2]|0;
  $_31$sroa$0$0 = 3;$_31$sroa$11$0 = $83;$_31$sroa$15$0 = 0.0;$_31$sroa$17$0 = 0.0;$_31$sroa$19$0 = 0.0;$_31$sroa$21$0 = 0.0;$_31$sroa$23$0 = 0.0;$_31$sroa$7$0 = $82;
  break;
 }
 default: {
  // unreachable;
 }
 }
 L26: do {
  if ((label|0) == 20) {
   $88 = ((($sample$i$i$i$i$i)) + 4|0);
   $89 = ((($tmp_ret$i$i$i$i40$i$i)) + 4|0);
   $90 = ((($_14$i$i$i$i$i$i$i)) + 4|0);
   $91 = ((($tmp_ret$i$i$i$i$i$i$i)) + 4|0);
   $93 = 1184;$best_dir$sroa$0$0$i$i = 0;$best_dir$sroa$6$0$i$i = 0;$iter$sroa$0$031$i$i$i$i = (1184);$min_dist$0$i$i = 3.4028234663852886E+38;
   while(1) {
    $92 = ((($93)) + 16|0);
    $94 = $92;
    $95 = $iter$sroa$0$031$i$i$i$i;
    $96 = $iter$sroa$0$031$i$i$i$i;
    $97 = ((($95)) + 8|0);
    $98 = +HEAPF64[$96>>3];
    $99 = +HEAPF64[$97>>3];
    $100 = $98;
    $101 = $99;
    HEAPF32[$sample$i$i$i$i$i>>2] = $100;
    HEAPF32[$88>>2] = $101;
    $102 = HEAP32[$32>>2]|0;
    FUNCTION_TABLE_viiii[$102 & 511]($tmp_ret$i$i$i$i40$i$i,$_14$sroa$0$0$copyload,$3,$sample$i$i$i$i$i);
    $103 = +HEAPF32[$tmp_ret$i$i$i$i40$i$i>>2];
    $104 = +HEAPF32[$89>>2];
    $105 = +HEAPF32[$sample$i$i$i$i$i>>2];
    $106 = +HEAPF32[$88>>2];
    $107 = -$105;
    $108 = -$106;
    HEAPF32[$_14$i$i$i$i$i$i$i>>2] = $107;
    HEAPF32[$90>>2] = $108;
    $109 = HEAP32[$42>>2]|0;
    FUNCTION_TABLE_viiii[$109 & 511]($tmp_ret$i$i$i$i$i$i$i,$_14$sroa$6$8$copyload,$6,$_14$i$i$i$i$i$i$i);
    $110 = +HEAPF32[$tmp_ret$i$i$i$i$i$i$i>>2];
    $111 = +HEAPF32[$91>>2];
    $112 = $103 - $110;
    $113 = $104 - $111;
    $sample$idx$val$i$i$i$i$i = +HEAPF32[$sample$i$i$i$i$i>>2];
    $sample$idx1$val$i$i$i$i$i = +HEAPF32[$88>>2];
    $114 = $112 * $sample$idx$val$i$i$i$i$i;
    $115 = $113 * $sample$idx1$val$i$i$i$i$i;
    $116 = $114 + $115;
    $117 = $116 < $min_dist$0$i$i;
    $118 = (HEAPF32[tempDoublePtr>>2]=$sample$idx$val$i$i$i$i$i,HEAP32[tempDoublePtr>>2]|0);
    $119 = (HEAPF32[tempDoublePtr>>2]=$sample$idx1$val$i$i$i$i$i,HEAP32[tempDoublePtr>>2]|0);
    $min_dist$1$i$i = $117 ? $116 : $min_dist$0$i$i;
    $best_dir$sroa$6$1$i$i = $117 ? $119 : $best_dir$sroa$6$0$i$i;
    $best_dir$sroa$0$1$i$i = $117 ? $118 : $best_dir$sroa$0$0$i$i;
    $120 = ($92|0)==((1520)|0);
    if ($120) {
     break;
    } else {
     $93 = $92;$best_dir$sroa$0$0$i$i = $best_dir$sroa$0$1$i$i;$best_dir$sroa$6$0$i$i = $best_dir$sroa$6$1$i$i;$iter$sroa$0$031$i$i$i$i = $94;$min_dist$0$i$i = $min_dist$1$i$i;
    }
   }
   $121 = $min_dist$1$i$i + 0.0099999997764825821;
   $122 = (HEAP32[tempDoublePtr>>2]=$best_dir$sroa$0$1$i$i,+HEAPF32[tempDoublePtr>>2]);
   $123 = (HEAP32[tempDoublePtr>>2]=$best_dir$sroa$6$1$i$i,+HEAPF32[tempDoublePtr>>2]);
   $124 = $122 * $121;
   $125 = $123 * $121;
   $126 = ((($6)) + 16|0);
   $127 = ((($6)) + 20|0);
   $128 = +HEAPF32[$126>>2];
   $129 = +HEAPF32[$127>>2];
   $130 = $124 + $128;
   $131 = $125 + $129;
   ;HEAP32[$tm2$i$i>>2]=HEAP32[$6>>2]|0;HEAP32[$tm2$i$i+4>>2]=HEAP32[$6+4>>2]|0;HEAP32[$tm2$i$i+8>>2]=HEAP32[$6+8>>2]|0;HEAP32[$tm2$i$i+12>>2]=HEAP32[$6+12>>2]|0;
   $132 = ((($tm2$i$i)) + 16|0);
   HEAPF32[$132>>2] = $130;
   $133 = ((($tm2$i$i)) + 20|0);
   HEAPF32[$133>>2] = $131;
   $134 = ((($0)) + 4|0);
   $135 = HEAP32[$134>>2]|0;
   $136 = HEAP32[$54>>2]|0;
   $137 = (($135) + (($136*24)|0)|0);
   $138 = ($136|0)==(0);
   if (!($138)) {
    $iter$sroa$0$0$in15$i$i$i = $135;
    while(1) {
     $139 = ((($iter$sroa$0$0$in15$i$i$i)) + 24|0);
     $$idx7$i$i$i$i$i = ((($iter$sroa$0$0$in15$i$i$i)) + 8|0);
     $$idx7$val$i$i$i$i$i = +HEAPF32[$$idx7$i$i$i$i$i>>2];
     $$idx8$i$i$i$i$i = ((($iter$sroa$0$0$in15$i$i$i)) + 12|0);
     $$idx8$val$i$i$i$i$i = +HEAPF32[$$idx8$i$i$i$i$i>>2];
     $140 = $$idx7$val$i$i$i$i$i - $124;
     $141 = $$idx8$val$i$i$i$i$i - $125;
     HEAPF32[$$idx7$i$i$i$i$i>>2] = $140;
     HEAPF32[$$idx8$i$i$i$i$i>>2] = $141;
     $$idx3$i$i$i$i$i = ((($iter$sroa$0$0$in15$i$i$i)) + 16|0);
     $$idx3$val$i$i$i$i$i = +HEAPF32[$$idx3$i$i$i$i$i>>2];
     $$idx4$i$i$i$i$i = ((($iter$sroa$0$0$in15$i$i$i)) + 20|0);
     $$idx4$val$i$i$i$i$i = +HEAPF32[$$idx4$i$i$i$i$i>>2];
     $142 = $$idx3$val$i$i$i$i$i - $124;
     $143 = $$idx4$val$i$i$i$i$i - $125;
     HEAPF32[$$idx3$i$i$i$i$i>>2] = $142;
     HEAPF32[$$idx4$i$i$i$i$i>>2] = $143;
     $144 = ($139|0)==($137|0);
     if ($144) {
      break;
     } else {
      $iter$sroa$0$0$in15$i$i$i = $139;
     }
    }
   }
   __ZN162__LT_ncollide_geometry__query__algorithms__johnson_simplex__JohnsonSimplex_LT_P_GT__u20_as_u20_ncollide_geometry__query__algorithms__simplex__Simplex_LT_P_GT__GT_25project_origin_and_reduce17hfe5256e2c63ddccbE($proj$i$i$i$i,$0);
   $$idx7$i$i$i$i = ((($proj$i$i$i$i)) + 16|0);
   $$idx7$val$i$i$i$i = +HEAPF32[$$idx7$i$i$i$i>>2];
   $145 = ((($proj$i$i$i$i)) + 20|0);
   $$idx8$val$i$i$i$i = +HEAPF32[$145>>2];
   $146 = $$idx7$val$i$i$i$i * $$idx7$val$i$i$i$i;
   $147 = $$idx8$val$i$i$i$i * $$idx8$val$i$i$i$i;
   $148 = $146 + $147;
   $$idx$val$i1172$i$i$i$i = HEAP32[$54>>2]|0;
   $149 = ($$idx$val$i1172$i$i$i$i|0)!=(3);
   $150 = !($148 <= 1.1920928955078125E-5);
   $or$cond73$i$i$i$i = $150 & $149;
   L35: do {
    if ($or$cond73$i$i$i$i) {
     $151 = ((($_37$i$i$i$i)) + 4|0);
     $152 = ((($tmp_ret$i$i$i$i$i)) + 4|0);
     $153 = ((($_14$i$i$i$i$i$i)) + 4|0);
     $154 = ((($tmp_ret$i$i$i$i$i$i)) + 4|0);
     $old_proj$i$sroa$5$0$$sroa_idx28$i$i$i = ((($proj$i$i$i$i)) + 4|0);
     $old_proj$i$sroa$6$0$$sroa_idx31$i$i$i = ((($proj$i$i$i$i)) + 8|0);
     $old_proj$i$sroa$7$0$$sroa_idx34$i$i$i = ((($proj$i$i$i$i)) + 12|0);
     $$idx$val$i$i$i$i = $$idx7$val$i$i$i$i;$$idx1$val$i$i$i$i = $$idx8$val$i$i$i$i;$max_bound$sroa$0$0$in74$i$i$i$i = $148;
     while(1) {
      $155 = -$$idx$val$i$i$i$i;
      $156 = -$$idx1$val$i$i$i$i;
      HEAPF32[$_37$i$i$i$i>>2] = $155;
      HEAPF32[$151>>2] = $156;
      $157 = HEAP32[$32>>2]|0;
      FUNCTION_TABLE_viiii[$157 & 511]($tmp_ret$i$i$i$i$i,$_14$sroa$0$0$copyload,$3,$_37$i$i$i$i);
      $158 = HEAP32[$tmp_ret$i$i$i$i$i>>2]|0;
      $159 = HEAP32[$152>>2]|0;
      $160 = +HEAPF32[$_37$i$i$i$i>>2];
      $161 = +HEAPF32[$151>>2];
      $162 = -$160;
      $163 = -$161;
      HEAPF32[$_14$i$i$i$i$i$i>>2] = $162;
      HEAPF32[$153>>2] = $163;
      $164 = HEAP32[$42>>2]|0;
      FUNCTION_TABLE_viiii[$164 & 511]($tmp_ret$i$i$i$i$i$i,$_14$sroa$6$8$copyload,$tm2$i$i,$_14$i$i$i$i$i$i);
      $165 = +HEAPF32[$tmp_ret$i$i$i$i$i$i>>2];
      $166 = +HEAPF32[$154>>2];
      $167 = -$165;
      $168 = -$166;
      $169 = (HEAP32[tempDoublePtr>>2]=$158,+HEAPF32[tempDoublePtr>>2]);
      $170 = (HEAP32[tempDoublePtr>>2]=$159,+HEAPF32[tempDoublePtr>>2]);
      $171 = $169 - $165;
      $172 = $170 - $166;
      $173 = $$idx$val$i$i$i$i * $171;
      $174 = $$idx1$val$i$i$i$i * $172;
      $175 = $173 + $174;
      $176 = $max_bound$sroa$0$0$in74$i$i$i$i - $175;
      $177 = $max_bound$sroa$0$0$in74$i$i$i$i * 3.4526697709225118E-4;
      $178 = !($176 <= $177);
      if (!($178)) {
       label = 27;
       break;
      }
      $179 = HEAP32[$54>>2]|0;
      $$idx$val$i$i$i$i$i$i = HEAP32[$$idx$i$i$i>>2]|0;
      $180 = ($179|0)==($$idx$val$i$i$i$i$i$i|0);
      if ($180) {
       __ZN40__LT_alloc__raw_vec__RawVec_LT_T_GT__GT_6double17hac6a54ac5941c853E($53);
       $$pre$i$i$i$i$i$i = HEAP32[$54>>2]|0;
       $183 = $$pre$i$i$i$i$i$i;
      } else {
       $183 = $179;
      }
      $181 = HEAP32[$53>>2]|0;
      $182 = (($181) + (($183*24)|0)|0);
      HEAP32[$182>>2] = $158;
      $value$i$i$sroa$4$0$$sroa_idx62$i$i$i$i = (((($181) + (($183*24)|0)|0)) + 4|0);
      HEAP32[$value$i$i$sroa$4$0$$sroa_idx62$i$i$i$i>>2] = $159;
      $value$i$i$sroa$5$0$$sroa_idx64$i$i$i$i = (((($181) + (($183*24)|0)|0)) + 8|0);
      HEAPF32[$value$i$i$sroa$5$0$$sroa_idx64$i$i$i$i>>2] = $167;
      $value$i$i$sroa$6$0$$sroa_idx66$i$i$i$i = (((($181) + (($183*24)|0)|0)) + 12|0);
      HEAPF32[$value$i$i$sroa$6$0$$sroa_idx66$i$i$i$i>>2] = $168;
      $value$i$i$sroa$7$0$$sroa_idx68$i$i$i$i = (((($181) + (($183*24)|0)|0)) + 16|0);
      HEAPF32[$value$i$i$sroa$7$0$$sroa_idx68$i$i$i$i>>2] = $171;
      $value$i$i$sroa$8$0$$sroa_idx70$i$i$i$i = (((($181) + (($183*24)|0)|0)) + 20|0);
      HEAPF32[$value$i$i$sroa$8$0$$sroa_idx70$i$i$i$i>>2] = $172;
      $184 = HEAP32[$54>>2]|0;
      $185 = (($184) + 1)|0;
      HEAP32[$54>>2] = $185;
      $186 = ($185>>>0)>(3);
      if ($186) {
       label = 31;
       break;
      }
      $old_proj$i$sroa$0$0$copyload$i$i$i = HEAP32[$proj$i$i$i$i>>2]|0;
      $old_proj$i$sroa$5$0$copyload$i$i$i = HEAP32[$old_proj$i$sroa$5$0$$sroa_idx28$i$i$i>>2]|0;
      $old_proj$i$sroa$6$0$copyload$i$i$i = +HEAPF32[$old_proj$i$sroa$6$0$$sroa_idx31$i$i$i>>2];
      $old_proj$i$sroa$7$0$copyload$i$i$i = +HEAPF32[$old_proj$i$sroa$7$0$$sroa_idx34$i$i$i>>2];
      __ZN162__LT_ncollide_geometry__query__algorithms__johnson_simplex__JohnsonSimplex_LT_P_GT__u20_as_u20_ncollide_geometry__query__algorithms__simplex__Simplex_LT_P_GT__GT_25project_origin_and_reduce17hfe5256e2c63ddccbE($proj$i$i$i$i,$0);
      $$idx5$val$i$i$i$i = +HEAPF32[$$idx7$i$i$i$i>>2];
      $$idx6$val$i$i$i$i = +HEAPF32[$145>>2];
      $187 = $$idx5$val$i$i$i$i * $$idx5$val$i$i$i$i;
      $188 = $$idx6$val$i$i$i$i * $$idx6$val$i$i$i$i;
      $189 = $187 + $188;
      $190 = !($189 >= $max_bound$sroa$0$0$in74$i$i$i$i);
      if (!($190)) {
       $_19$sroa$10$0$i$i$i = $old_proj$i$sroa$6$0$copyload$i$i$i;$_19$sroa$11$0$i$i$i = $old_proj$i$sroa$7$0$copyload$i$i$i;$_19$sroa$6$0$i$i$i = $old_proj$i$sroa$0$0$copyload$i$i$i;$_19$sroa$9$0$i$i$i = $old_proj$i$sroa$5$0$copyload$i$i$i;
       break;
      }
      $$idx$val$i11$i$i$i$i = HEAP32[$54>>2]|0;
      $191 = ($$idx$val$i11$i$i$i$i|0)!=(3);
      $192 = !($189 <= 1.1920928955078125E-5);
      $or$cond$i$i$i$i = $192 & $191;
      if ($or$cond$i$i$i$i) {
       $$idx$val$i$i$i$i = $$idx5$val$i$i$i$i;$$idx1$val$i$i$i$i = $$idx6$val$i$i$i$i;$max_bound$sroa$0$0$in74$i$i$i$i = $189;
      } else {
       label = 34;
       break L35;
      }
     }
     if ((label|0) == 27) {
      $_19$sroa$6$4$copyload$i$i$i = HEAP32[$proj$i$i$i$i>>2]|0;
      $_19$sroa$9$4$copyload$i$i$i = HEAP32[$old_proj$i$sroa$5$0$$sroa_idx28$i$i$i>>2]|0;
      $_19$sroa$10$4$copyload$i$i$i = +HEAPF32[$old_proj$i$sroa$6$0$$sroa_idx31$i$i$i>>2];
      $_19$sroa$11$4$copyload$i$i$i = +HEAPF32[$old_proj$i$sroa$7$0$$sroa_idx34$i$i$i>>2];
      $_19$sroa$10$0$i$i$i = $_19$sroa$10$4$copyload$i$i$i;$_19$sroa$11$0$i$i$i = $_19$sroa$11$4$copyload$i$i$i;$_19$sroa$6$0$i$i$i = $_19$sroa$6$4$copyload$i$i$i;$_19$sroa$9$0$i$i$i = $_19$sroa$9$4$copyload$i$i$i;
     }
     else if ((label|0) == 31) {
      __ZN3std9panicking11begin_panic17h9936a195de5ffc4dE(10523,63,5544);
      // unreachable;
     }
     $193 = -$_19$sroa$10$0$i$i$i;
     $194 = -$_19$sroa$11$0$i$i$i;
     $195 = (HEAP32[tempDoublePtr>>2]=$_19$sroa$6$0$i$i$i,+HEAPF32[tempDoublePtr>>2]);
     $196 = (HEAP32[tempDoublePtr>>2]=$_19$sroa$9$0$i$i$i,+HEAPF32[tempDoublePtr>>2]);
     $197 = $193 - $195;
     $198 = $194 - $196;
     $199 = $197 * $197;
     $200 = $198 * $198;
     $201 = $200 + $199;
     $202 = (+Math_sqrt((+$201)));
     $203 = $197 / $202;
     $204 = $198 / $202;
     $205 = $202 == 0.0;
     if (!($205)) {
      $206 = -$124;
      $207 = -$125;
      $208 = $206 - $_19$sroa$10$0$i$i$i;
      $209 = $207 - $_19$sroa$11$0$i$i$i;
      $210 = $208 + $195;
      $211 = $209 + $196;
      $212 = $210 * 0.5;
      $213 = $211 * 0.5;
      $214 = $122 * $203;
      $215 = $123 * $204;
      $216 = $214 + $215;
      $217 = $121 * $216;
      $218 = $217 - $202;
      $219 = $203 * $218;
      $220 = $204 * $218;
      $221 = $212 - $219;
      $222 = $213 - $220;
      $223 = $212 - $221;
      $224 = $213 - $222;
      $225 = $203 * $223;
      $226 = $204 * $224;
      $227 = $225 + $226;
      $228 = (HEAPF32[tempDoublePtr>>2]=$212,HEAP32[tempDoublePtr>>2]|0);
      $229 = (HEAPF32[tempDoublePtr>>2]=$213,HEAP32[tempDoublePtr>>2]|0);
      $_31$sroa$0$0 = 1;$_31$sroa$11$0 = $229;$_31$sroa$15$0 = $221;$_31$sroa$17$0 = $222;$_31$sroa$19$0 = $203;$_31$sroa$21$0 = $204;$_31$sroa$23$0 = $227;$_31$sroa$7$0 = $228;
      break L26;
     }
    } else {
     label = 34;
    }
   } while(0);
   if ((label|0) == 34) {
   }
   $_31$sroa$0$0 = 3;$_31$sroa$11$0 = 0;$_31$sroa$15$0 = 0.0;$_31$sroa$17$0 = 0.0;$_31$sroa$19$0 = 0.0;$_31$sroa$21$0 = 0.0;$_31$sroa$23$0 = 0.0;$_31$sroa$7$0 = 0;
  }
 } while(0);
 HEAP32[$14>>2] = $_31$sroa$0$0;
 $_31$sroa$7$0$$sroa_idx33 = ((($0)) + 44|0);
 HEAP32[$_31$sroa$7$0$$sroa_idx33>>2] = $_31$sroa$7$0;
 $_31$sroa$11$0$$sroa_idx35 = ((($0)) + 48|0);
 HEAP32[$_31$sroa$11$0$$sroa_idx35>>2] = $_31$sroa$11$0;
 $_31$sroa$15$0$$sroa_idx37 = ((($0)) + 52|0);
 HEAPF32[$_31$sroa$15$0$$sroa_idx37>>2] = $_31$sroa$15$0;
 $_31$sroa$17$0$$sroa_idx40 = ((($0)) + 56|0);
 HEAPF32[$_31$sroa$17$0$$sroa_idx40>>2] = $_31$sroa$17$0;
 $_31$sroa$19$0$$sroa_idx43 = ((($0)) + 60|0);
 HEAPF32[$_31$sroa$19$0$$sroa_idx43>>2] = $_31$sroa$19$0;
 $_31$sroa$21$0$$sroa_idx46 = ((($0)) + 64|0);
 HEAPF32[$_31$sroa$21$0$$sroa_idx46>>2] = $_31$sroa$21$0;
 $_31$sroa$23$0$$sroa_idx49 = ((($0)) + 68|0);
 HEAPF32[$_31$sroa$23$0$$sroa_idx49>>2] = $_31$sroa$23$0;
 $_0$0$off0 = 1;
 STACKTOP = sp;return ($_0$0$off0|0);
}
function __ZN284__LT_ncollide_pipeline__narrow_phase__contact_generator__support_map_support_map_contact_generator__SupportMapSupportMapContactGenerator_LT_P_C__u20_M_C__u20_S_GT__u20_as_u20_ncollide_pipeline__narrow_phase__contact_generator__contact_generator__ContactGenerator_LT_P_C__u20_M_GT__GT_8contacts17hcdfb7797ed951d1dE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$idx$i = 0, $$idx$val$i = 0, $$idx$val12$i = 0, $$idx3$i = 0, $$idx3$val13$i = 0, $$pre$i = 0, $$val14$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = SIMD_Int32x4(0,0,0,0), $8 = 0;
 var $9 = 0, $cond = 0, $value$i$sroa$7$0$$sroa_idx36 = 0, $value$i$sroa$8$0$$sroa_idx39 = 0, $value$i$sroa$9$0$$sroa_idx42 = 0, label = 0, sp = 0, temp_Int32x4_ptr = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 40|0);
 $3 = HEAP32[$2>>2]|0;
 $cond = ($3|0)==(1);
 if (!($cond)) {
  return;
 }
 $4 = ((($0)) + 60|0);
 $5 = ((($0)) + 68|0);
 $6 = ((($0)) + 44|0);
 $7 = SIMD_Int32x4_load(HEAPU8, $6);
 $$idx$val12$i = HEAP32[$4>>2]|0;
 $$idx3$i = ((($0)) + 64|0);
 $$idx3$val13$i = HEAP32[$$idx3$i>>2]|0;
 $$val14$i = HEAP32[$5>>2]|0;
 $8 = ((($1)) + 8|0);
 $9 = HEAP32[$8>>2]|0;
 $$idx$i = ((($1)) + 4|0);
 $$idx$val$i = HEAP32[$$idx$i>>2]|0;
 $10 = ($9|0)==($$idx$val$i|0);
 if ($10) {
  __ZN40__LT_alloc__raw_vec__RawVec_LT_T_GT__GT_6double17ha4899d9ca8626977E($1);
  $$pre$i = HEAP32[$8>>2]|0;
  $13 = $$pre$i;
 } else {
  $13 = $9;
 }
 $11 = HEAP32[$1>>2]|0;
 $12 = (($11) + (($13*28)|0)|0);
 temp_Int32x4_ptr = $12;SIMD_Int32x4_store(HEAPU8, temp_Int32x4_ptr, $7);
 $value$i$sroa$7$0$$sroa_idx36 = (((($11) + (($13*28)|0)|0)) + 16|0);
 HEAP32[$value$i$sroa$7$0$$sroa_idx36>>2] = $$idx$val12$i;
 $value$i$sroa$8$0$$sroa_idx39 = (((($11) + (($13*28)|0)|0)) + 20|0);
 HEAP32[$value$i$sroa$8$0$$sroa_idx39>>2] = $$idx3$val13$i;
 $value$i$sroa$9$0$$sroa_idx42 = (((($11) + (($13*28)|0)|0)) + 24|0);
 HEAP32[$value$i$sroa$9$0$$sroa_idx42>>2] = $$val14$i;
 $14 = HEAP32[$8>>2]|0;
 $15 = (($14) + 1)|0;
 HEAP32[$8>>2] = $15;
 return;
}
function __ZN290__LT_ncollide_pipeline__narrow_phase__proximity_detector__support_map_support_map_proximity_detector__SupportMapSupportMapProximityDetector_LT_P_C__u20_M_C__u20_S_GT__u20_as_u20_ncollide_pipeline__narrow_phase__proximity_detector__proximity_detector__ProximityDetector_LT_P_C__u20_M_GT__GT_6update17hac07161974822df2E($0,$1,$2,$3,$4,$5,$6,$7,$8,$9) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 $7 = $7|0;
 $8 = $8|0;
 $9 = +$9;
 var $$dir$sroa$0$0$i = 0, $$idx$i$i$i = 0, $$idx$val$i$i$i = 0, $$pre$i$i$i = 0, $$val = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0.0, $24 = 0.0;
 var $25 = 0, $26 = 0, $27 = 0.0, $28 = 0.0, $29 = 0.0, $30 = 0.0, $31 = 0, $32 = 0, $33 = 0.0, $34 = 0.0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0.0, $44 = 0.0;
 var $45 = 0.0, $46 = 0.0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0.0, $52 = 0.0, $53 = 0.0, $54 = 0.0, $55 = 0.0, $56 = 0.0, $57 = 0.0, $58 = 0.0, $59 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $_0$0$off0 = 0;
 var $_14$i$i$i$i = 0, $_14$sroa$0$0$copyload = 0, $_14$sroa$5$0$$sroa_idx12 = 0, $_14$sroa$5$0$copyload = 0, $_14$sroa$6$8$copyload = 0, $_14$sroa$9$8$$sroa_idx16 = 0, $_14$sroa$9$8$copyload = 0, $_15 = 0, $_17 = 0, $_21$i$i = 0, $cso$i$i = 0, $dir$i$i = 0, $dir$sroa$0$0$i = 0, $dir$sroa$7$0$i = 0, $or$cond = 0, $or$cond$i$i = 0, $reflect2$i$i = 0, $res$sroa$0$0 = 0, $res$sroa$10$0 = 0, $res$sroa$623$0 = 0;
 var $switch1tmp = 0, $switchtmp = 0, $tmp_ret$i$i$i = 0, $tmp_ret$i$i$i$i = 0, $trunc$i$i = 0, $trunc$i$i$clear = 0, $value$i$i$sroa$4$0$$sroa_idx28$i = 0, $value$i$i$sroa$5$0$$sroa_idx30$i = 0, $value$i$i$sroa$6$0$$sroa_idx32$i = 0, $value$i$i$sroa$7$0$$sroa_idx34$i = 0, $value$i$i$sroa$8$0$$sroa_idx36$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(112|0);
 $_14$i$i$i$i = sp + 104|0;
 $tmp_ret$i$i$i$i = sp + 96|0;
 $tmp_ret$i$i$i = sp + 88|0;
 $dir$i$i = sp + 80|0;
 $reflect2$i$i = sp + 72|0;
 $cso$i$i = sp + 48|0;
 $_21$i$i = sp + 16|0;
 $_15 = sp + 8|0;
 $_17 = sp;
 $10 = ((($5)) + 28|0);
 $11 = HEAP32[$10>>2]|0;
 FUNCTION_TABLE_vii[$11 & 511]($_15,$4);
 $12 = ((($8)) + 28|0);
 $13 = HEAP32[$12>>2]|0;
 FUNCTION_TABLE_vii[$13 & 511]($_17,$7);
 $_14$sroa$0$0$copyload = HEAP32[$_15>>2]|0;
 $_14$sroa$5$0$$sroa_idx12 = ((($_15)) + 4|0);
 $_14$sroa$5$0$copyload = HEAP32[$_14$sroa$5$0$$sroa_idx12>>2]|0;
 $_14$sroa$6$8$copyload = HEAP32[$_17>>2]|0;
 $_14$sroa$9$8$$sroa_idx16 = ((($_17)) + 4|0);
 $_14$sroa$9$8$copyload = HEAP32[$_14$sroa$9$8$$sroa_idx16>>2]|0;
 $switch1tmp = ($_14$sroa$0$0$copyload|0)==(0|0);
 $switchtmp = ($_14$sroa$6$8$copyload|0)==(0|0);
 $or$cond = $switch1tmp | $switchtmp;
 if ($or$cond) {
  $_0$0$off0 = 0;
  STACKTOP = sp;return ($_0$0$off0|0);
 }
 $14 = ((($0)) + 40|0);
 $15 = !($9 >= 0.0);
 if ($15) {
  __ZN3std9panicking11begin_panic17h9936a195de5ffc4dE(10586,46,5592);
  // unreachable;
 }
 $16 = ((($0)) + 48|0);
 $17 = HEAP32[$16>>2]|0;
 $18 = ((($0)) + 44|0);
 $19 = HEAP32[$18>>2]|0;
 $$val = HEAP8[$14>>0]|0;
 $20 = ($$val<<24>>24)==(2);
 if ($20) {
  $21 = ((($3)) + 16|0);
  $22 = ((($3)) + 20|0);
  $23 = +HEAPF32[$21>>2];
  $24 = +HEAPF32[$22>>2];
  $25 = ((($6)) + 16|0);
  $26 = ((($6)) + 20|0);
  $27 = +HEAPF32[$25>>2];
  $28 = +HEAPF32[$26>>2];
  $29 = $23 - $27;
  $30 = $24 - $28;
  $31 = (HEAPF32[tempDoublePtr>>2]=$29,HEAP32[tempDoublePtr>>2]|0);
  $32 = (HEAPF32[tempDoublePtr>>2]=$30,HEAP32[tempDoublePtr>>2]|0);
  $dir$sroa$0$0$i = $31;$dir$sroa$7$0$i = $32;
 } else {
  $dir$sroa$0$0$i = $19;$dir$sroa$7$0$i = $17;
 }
 $33 = (HEAP32[tempDoublePtr>>2]=$dir$sroa$0$0$i,+HEAPF32[tempDoublePtr>>2]);
 $34 = (HEAP32[tempDoublePtr>>2]=$dir$sroa$7$0$i,+HEAPF32[tempDoublePtr>>2]);
 $35 = $33 == 0.0;
 $36 = $34 == 0.0;
 $or$cond$i$i = $35 & $36;
 $$dir$sroa$0$0$i = $or$cond$i$i ? 1065353216 : $dir$sroa$0$0$i;
 HEAP32[$dir$i$i>>2] = $$dir$sroa$0$0$i;
 $37 = ((($dir$i$i)) + 4|0);
 HEAP32[$37>>2] = $dir$sroa$7$0$i;
 $38 = ((($_14$sroa$5$0$copyload)) + 12|0);
 $39 = HEAP32[$38>>2]|0;
 FUNCTION_TABLE_viiii[$39 & 511]($tmp_ret$i$i$i,$_14$sroa$0$0$copyload,$3,$dir$i$i);
 $40 = ((($tmp_ret$i$i$i)) + 4|0);
 $41 = HEAP32[$tmp_ret$i$i$i>>2]|0;
 $42 = HEAP32[$40>>2]|0;
 $43 = +HEAPF32[$dir$i$i>>2];
 $44 = +HEAPF32[$37>>2];
 $45 = -$43;
 $46 = -$44;
 HEAPF32[$_14$i$i$i$i>>2] = $45;
 $47 = ((($_14$i$i$i$i)) + 4|0);
 HEAPF32[$47>>2] = $46;
 $48 = ((($_14$sroa$9$8$copyload)) + 12|0);
 $49 = HEAP32[$48>>2]|0;
 FUNCTION_TABLE_viiii[$49 & 511]($tmp_ret$i$i$i$i,$_14$sroa$6$8$copyload,$6,$_14$i$i$i$i);
 $50 = ((($tmp_ret$i$i$i$i)) + 4|0);
 $51 = +HEAPF32[$tmp_ret$i$i$i$i>>2];
 $52 = +HEAPF32[$50>>2];
 $53 = -$51;
 $54 = -$52;
 $55 = (HEAP32[tempDoublePtr>>2]=$41,+HEAPF32[tempDoublePtr>>2]);
 $56 = (HEAP32[tempDoublePtr>>2]=$42,+HEAPF32[tempDoublePtr>>2]);
 $57 = $55 - $51;
 $58 = $56 - $52;
 $59 = ((($0)) + 4|0);
 $60 = ((($0)) + 12|0);
 $61 = HEAP32[$60>>2]|0;
 $62 = ($61|0)==(0);
 if (!($62)) {
  HEAP32[$60>>2] = 0;
 }
 $$idx$i$i$i = ((($0)) + 8|0);
 $$idx$val$i$i$i = HEAP32[$$idx$i$i$i>>2]|0;
 $63 = ($$idx$val$i$i$i|0)==(0);
 if ($63) {
  __ZN40__LT_alloc__raw_vec__RawVec_LT_T_GT__GT_6double17hac6a54ac5941c853E($59);
  $$pre$i$i$i = HEAP32[$60>>2]|0;
  $66 = $$pre$i$i$i;
 } else {
  $66 = 0;
 }
 $64 = HEAP32[$59>>2]|0;
 $65 = (($64) + (($66*24)|0)|0);
 HEAP32[$65>>2] = $41;
 $value$i$i$sroa$4$0$$sroa_idx28$i = (((($64) + (($66*24)|0)|0)) + 4|0);
 HEAP32[$value$i$i$sroa$4$0$$sroa_idx28$i>>2] = $42;
 $value$i$i$sroa$5$0$$sroa_idx30$i = (((($64) + (($66*24)|0)|0)) + 8|0);
 HEAPF32[$value$i$i$sroa$5$0$$sroa_idx30$i>>2] = $53;
 $value$i$i$sroa$6$0$$sroa_idx32$i = (((($64) + (($66*24)|0)|0)) + 12|0);
 HEAPF32[$value$i$i$sroa$6$0$$sroa_idx32$i>>2] = $54;
 $value$i$i$sroa$7$0$$sroa_idx34$i = (((($64) + (($66*24)|0)|0)) + 16|0);
 HEAPF32[$value$i$i$sroa$7$0$$sroa_idx34$i>>2] = $57;
 $value$i$i$sroa$8$0$$sroa_idx36$i = (((($64) + (($66*24)|0)|0)) + 20|0);
 HEAPF32[$value$i$i$sroa$8$0$$sroa_idx36$i>>2] = $58;
 $67 = HEAP32[$60>>2]|0;
 $68 = (($67) + 1)|0;
 HEAP32[$60>>2] = $68;
 HEAP32[$reflect2$i$i>>2] = $_14$sroa$6$8$copyload;
 $69 = ((($reflect2$i$i)) + 4|0);
 HEAP32[$69>>2] = $_14$sroa$9$8$copyload;
 HEAP32[$cso$i$i>>2] = $3;
 $70 = ((($cso$i$i)) + 4|0);
 HEAP32[$70>>2] = $_14$sroa$0$0$copyload;
 $71 = ((($cso$i$i)) + 8|0);
 HEAP32[$71>>2] = $_14$sroa$5$0$copyload;
 $72 = ((($cso$i$i)) + 12|0);
 HEAP32[$72>>2] = $6;
 $73 = ((($cso$i$i)) + 16|0);
 HEAP32[$73>>2] = $reflect2$i$i;
 __ZN17ncollide_geometry5query10algorithms3gjk28project_origin_with_max_dist17h20c0944449d69aadE($_21$i$i,$cso$i$i,$9,0,$0);
 $74 = HEAP32[$_21$i$i>>2]|0;
 $trunc$i$i = $74&255;
 $trunc$i$i$clear = $trunc$i$i & 3;
 switch ($trunc$i$i$clear<<24>>24) {
 case 0:  {
  $res$sroa$0$0 = 0;$res$sroa$10$0 = 0;$res$sroa$623$0 = 0;
  break;
 }
 case 1:  {
  __ZN3std9panicking11begin_panic17h9936a195de5ffc4dE(10157,40,5568);
  // unreachable;
  break;
 }
 case 2:  {
  $75 = ((($_21$i$i)) + 8|0);
  $76 = ((($_21$i$i)) + 4|0);
  $77 = HEAP32[$76>>2]|0;
  $78 = HEAP32[$75>>2]|0;
  $res$sroa$0$0 = 1;$res$sroa$10$0 = $78;$res$sroa$623$0 = $77;
  break;
 }
 case 3:  {
  $79 = ((($_21$i$i)) + 8|0);
  $80 = ((($_21$i$i)) + 4|0);
  $81 = HEAP32[$80>>2]|0;
  $82 = HEAP32[$79>>2]|0;
  $res$sroa$0$0 = 2;$res$sroa$10$0 = $82;$res$sroa$623$0 = $81;
  break;
 }
 default: {
  // unreachable;
 }
 }
 HEAP8[$14>>0] = $res$sroa$0$0;
 $83 = ((($0)) + 44|0);
 HEAP32[$83>>2] = $res$sroa$623$0;
 HEAP32[$16>>2] = $res$sroa$10$0;
 $_0$0$off0 = 1;
 STACKTOP = sp;return ($_0$0$off0|0);
}
function __ZN290__LT_ncollide_pipeline__narrow_phase__proximity_detector__support_map_support_map_proximity_detector__SupportMapSupportMapProximityDetector_LT_P_C__u20_M_C__u20_S_GT__u20_as_u20_ncollide_pipeline__narrow_phase__proximity_detector__proximity_detector__ProximityDetector_LT_P_C__u20_M_GT__GT_9proximity17hc6647beaedcfb3e8E($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 40|0);
 $2 = HEAP8[$1>>0]|0;
 return ($2|0);
}
function __ZN317__LT_nphysics2d__world__world__ObjectActivationOnContactHandler_LT_N_GT__u20_as_u20_ncollide_pipeline__narrow_phase__contact_signal__ContactHandler_LT_nalgebra__structs__point__Point2_LT_N_GT__C__u20_nalgebra__structs__isometry__Isometry2_LT_N_GT__C__u20_nphysics2d__object__world_object__WorldObject_LT_N_GT__GT__GT_22handle_contact_started17h8a33f8c3ce45c501E($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZN317__LT_nphysics2d__world__world__ObjectActivationOnContactHandler_LT_N_GT__u20_as_u20_ncollide_pipeline__narrow_phase__contact_signal__ContactHandler_LT_nalgebra__structs__point__Point2_LT_N_GT__C__u20_nalgebra__structs__isometry__Isometry2_LT_N_GT__C__u20_nphysics2d__object__world_object__WorldObject_LT_N_GT__GT__GT_22handle_contact_stopped17h24f0f91feadf4741E($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$idx$val = 0, $$idx20$val = 0, $$idx21$val = 0, $$idx22$val = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, $cond$i$i$i = 0, $cond$i$i$i27 = 0, $personalityslot$sroa$0$0 = 0, $personalityslot$sroa$6$0 = 0, $switch = 0, $switch3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($1)) + 52|0);
 $4 = HEAP32[$3>>2]|0;
 $switch3 = ($4|0)==(1);
 if ($switch3) {
  return;
 }
 $5 = ((($2)) + 52|0);
 $6 = HEAP32[$5>>2]|0;
 $switch = ($6|0)==(1);
 if ($switch) {
  return;
 }
 $7 = ((($2)) + 56|0);
 $$idx20$val = HEAP32[$0>>2]|0;
 $8 = ((($$idx20$val)) + 8|0);
 $9 = HEAP32[$8>>2]|0;
 $cond$i$i$i = ($9|0)==(0);
 if (!($cond$i$i$i)) {
  __ZN4core6result13unwrap_failed17he96585155b596c01E();
  // unreachable;
 }
 HEAP32[$8>>2] = -1;
 $10 = ((($$idx20$val)) + 12|0);
 $11 = ((($1)) + 56|0);
 $$idx22$val = HEAP32[$11>>2]|0;
 __THREW__ = 0;
 invoke_vii(243,($10|0),($$idx22$val|0));
 $12 = __THREW__; __THREW__ = 0;
 $13 = $12&1;
 if ($13) {
  $19 = ___cxa_find_matching_catch_2()|0;
  $20 = tempRet0;
  HEAP32[$8>>2] = 0;
  $personalityslot$sroa$0$0 = $19;$personalityslot$sroa$6$0 = $20;
  ___resumeException($personalityslot$sroa$0$0|0);
  // unreachable;
 }
 HEAP32[$8>>2] = 0;
 $$idx$val = HEAP32[$0>>2]|0;
 $14 = ((($$idx$val)) + 8|0);
 $15 = HEAP32[$14>>2]|0;
 $cond$i$i$i27 = ($15|0)==(0);
 if (!($cond$i$i$i27)) {
  __ZN4core6result13unwrap_failed17he96585155b596c01E();
  // unreachable;
 }
 HEAP32[$14>>2] = -1;
 $16 = ((($$idx$val)) + 12|0);
 $$idx21$val = HEAP32[$7>>2]|0;
 __THREW__ = 0;
 invoke_vii(243,($16|0),($$idx21$val|0));
 $17 = __THREW__; __THREW__ = 0;
 $18 = $17&1;
 if ($18) {
  $21 = ___cxa_find_matching_catch_2()|0;
  $22 = tempRet0;
  HEAP32[$14>>2] = 0;
  $personalityslot$sroa$0$0 = $21;$personalityslot$sroa$6$0 = $22;
  ___resumeException($personalityslot$sroa$0$0|0);
  // unreachable;
 } else {
  HEAP32[$14>>2] = 0;
  return;
 }
}
function __ZN330__LT_nphysics2d__world__world__SensorsNotCollidingTheirParentPairFilter_u20_as_u20_ncollide_pipeline__broad_phase__broad_phase_pair_filter__BroadPhasePairFilter_LT_nalgebra__structs__point__Point2_LT_N_GT__C__u20_nalgebra__structs__isometry__Isometry2_LT_N_GT__C__u20_nphysics2d__object__world_object__WorldObject_LT_N_GT__GT__GT_13is_pair_valid17h19bee2f2630587dcE($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$idx27 = 0, $$idx27$val = 0, $$pn = 0, $$pn25 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $_0$0$off0 = 0, $_0$1 = 0, $cond$i$i$i = 0, $rb$0$idx$val = 0, $rb$0$in = 0;
 var $s$0$idx$val = 0, $s$0$in = 0, $switch = 0, $switch4 = 0, $switchtmp$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($1)) + 52|0);
 $4 = HEAP32[$3>>2]|0;
 $switch4 = ($4|0)==(1);
 $5 = ((($2)) + 52|0);
 $6 = HEAP32[$5>>2]|0;
 $switch = ($6|0)!=(1);
 if ($switch4) {
  if ($switch) {
   $$pn = $2;$$pn25 = $1;
  } else {
   $_0$0$off0 = 1;
   return ($_0$0$off0|0);
  }
 } else {
  if ($switch) {
   $_0$0$off0 = 1;
   return ($_0$0$off0|0);
  } else {
   $$pn = $1;$$pn25 = $2;
  }
 }
 $s$0$in = ((($$pn25)) + 56|0);
 $rb$0$in = ((($$pn)) + 56|0);
 $s$0$idx$val = HEAP32[$s$0$in>>2]|0;
 $7 = ((($s$0$idx$val)) + 8|0);
 $8 = HEAP32[$7>>2]|0;
 $cond$i$i$i = ($8|0)==(-1);
 if ($cond$i$i$i) {
  __ZN4core6result13unwrap_failed17h0dc63b200336bf84E();
  // unreachable;
 }
 $9 = (($8) + 1)|0;
 HEAP32[$7>>2] = $9;
 $10 = ((($s$0$idx$val)) + 12|0);
 $11 = HEAP32[$10>>2]|0;
 $switchtmp$i$i = ($11|0)==(0|0);
 if ($switchtmp$i$i) {
  $_0$1 = 1;
 } else {
  $rb$0$idx$val = HEAP32[$rb$0$in>>2]|0;
  $12 = ($rb$0$idx$val|0)==($11|0);
  if ($12) {
   $$idx27 = ((($s$0$idx$val)) + 60|0);
   $$idx27$val = HEAP8[$$idx27>>0]|0;
   $13 = ($$idx27$val<<24>>24)!=(0);
   $_0$1 = $13;
  } else {
   $_0$1 = 1;
  }
 }
 HEAP32[$7>>2] = $8;
 $_0$0$off0 = $_0$1;
 return ($_0$0$off0|0);
}
function __ZN33__LT_alloc__arc__Arc_LT_T_GT__GT_9drop_slow17h639b296ab3838c06E($0) {
 $0 = $0|0;
 var $$idx$val$i = 0, $$idx5$i = 0, $$idx5$val$i = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $not$$i$i$i$i = 0, $not$$i$i$i$i$i$i$i$i = 0, $not$$i$i$i$i1$i$i$i$i = 0, $not$$i$i$i$i4$i$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($1)) + 8|0);
 $$idx$val$i = HEAP32[$2>>2]|0;
 $$idx5$i = ((($1)) + 16|0);
 $$idx5$val$i = HEAP32[$$idx5$i>>2]|0;
 $3 = (($$idx$val$i) + (($$idx5$val$i*44)|0)|0);
 $4 = ($$idx5$val$i|0)==(0);
 if (!($4)) {
  $6 = $$idx$val$i;
  while(1) {
   $5 = ((($6)) + 4|0);
   $7 = HEAP32[$5>>2]|0;
   $not$$i$i$i$i$i$i$i$i = ($7|0)==(0);
   if (!($not$$i$i$i$i$i$i$i$i)) {
    $8 = HEAP32[$6>>2]|0;
    _free($8);
   }
   $9 = ((($6)) + 16|0);
   $10 = HEAP32[$9>>2]|0;
   $not$$i$i$i$i1$i$i$i$i = ($10|0)==(0);
   if (!($not$$i$i$i$i1$i$i$i$i)) {
    $11 = ((($6)) + 12|0);
    $12 = HEAP32[$11>>2]|0;
    _free($12);
   }
   $13 = ((($6)) + 28|0);
   $14 = HEAP32[$13>>2]|0;
   $not$$i$i$i$i4$i$i$i$i = ($14|0)==(0);
   if (!($not$$i$i$i$i4$i$i$i$i)) {
    $15 = ((($6)) + 24|0);
    $16 = HEAP32[$15>>2]|0;
    _free($16);
   }
   $17 = ((($6)) + 44|0);
   $18 = ($17|0)==($3|0);
   if ($18) {
    break;
   } else {
    $6 = $17;
   }
  }
 }
 $19 = ((($1)) + 12|0);
 $20 = HEAP32[$19>>2]|0;
 $not$$i$i$i$i = ($20|0)==(0);
 if (!($not$$i$i$i$i)) {
  $21 = HEAP32[$2>>2]|0;
  _free($21);
 }
 $22 = HEAP32[$0>>2]|0;
 $23 = ((($22)) + 4|0);
 $24 = HEAP32[$23>>2]|0;HEAP32[$23>>2] = (($24-1)|0);
 $25 = ($24|0)==(1);
 if (!($25)) {
  return;
 }
 /* fence */;
 _free($1);
 return;
}
function __ZN33__LT_alloc__arc__Arc_LT_T_GT__GT_9drop_slow17hb3767c2311d7d383E($0) {
 $0 = $0|0;
 var $$idx1$i = 0, $$idx1$val$i = 0, $$idx1$val$val$i = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($1)) + 8|0);
 $3 = HEAP32[$2>>2]|0;
 $$idx1$i = ((($1)) + 12|0);
 $$idx1$val$i = HEAP32[$$idx1$i>>2]|0;
 $$idx1$val$val$i = HEAP32[$$idx1$val$i>>2]|0;
 FUNCTION_TABLE_vi[$$idx1$val$val$i & 511]($3);
 $4 = HEAP32[$$idx1$i>>2]|0;
 $5 = ((($4)) + 4|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ($6|0)==(0);
 if (!($7)) {
  _free($3);
 }
 $8 = HEAP32[$0>>2]|0;
 $9 = ((($8)) + 4|0);
 $10 = HEAP32[$9>>2]|0;HEAP32[$9>>2] = (($10-1)|0);
 $11 = ($10|0)==(1);
 if (!($11)) {
  return;
 }
 /* fence */;
 _free($1);
 return;
}
function __ZN36__LT_T_u20_as_u20_core__any__Any_GT_11get_type_id17h1e7f45ebb48b193fE($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 tempRet0 = (-642518804);
 return -580754197;
}
function __ZN36__LT_T_u20_as_u20_core__any__Any_GT_11get_type_id17hab3c7eaaa4008573E($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 tempRet0 = (-1918276056);
 return -255454720;
}
function __ZN36__LT_T_u20_as_u20_core__any__Any_GT_11get_type_id17hce87e6ca1108ecbdE($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 tempRet0 = (162210410);
 return 391555669;
}
function __ZN36__LT_T_u20_as_u20_core__any__Any_GT_11get_type_id17hd662cb2ea6aefd75E($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 tempRet0 = (703347955);
 return 1133457186;
}
function __ZN39__LT_F_u20_as_u20_lifeguard__Supply_GT_3get17hde2ca2719c6fc1caE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$0>>2] = 1;
 $2 = ((($0)) + 4|0);
 HEAP32[$2>>2] = 0;
 $3 = ((($0)) + 8|0);
 HEAP32[$3>>2] = 0;
 return;
}
function __ZN39__LT_collections__vec__Vec_LT_T_GT__GT_7reserve17h36095f9d9422ab2dE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$arith = 0, $$idx$i = 0, $$idx$val$i = 0, $$overflow = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $_0$0$sroa$speculated$i$i$i = 0, $ptr$0$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 8|0);
 $3 = HEAP32[$2>>2]|0;
 $$idx$i = ((($0)) + 4|0);
 $$idx$val$i = HEAP32[$$idx$i>>2]|0;
 $4 = (($$idx$val$i) - ($3))|0;
 $5 = ($4>>>0)<($1>>>0);
 if (!($5)) {
  return;
 }
 $$arith = (($3) + ($1))|0;
 $$overflow = ($$arith>>>0)<($3>>>0);
 if ($$overflow) {
  __ZN4core6option13expect_failed17hc1eeb48c0c4a1725E(11172,17);
  // unreachable;
 }
 $6 = $$idx$val$i << 1;
 $7 = ($$arith>>>0)>=($6>>>0);
 $_0$0$sroa$speculated$i$i$i = $7 ? $$arith : $6;
 $8 = ($_0$0$sroa$speculated$i$i$i|0)<(0);
 if ($8) {
  __ZN4core9panicking5panic17ha7507e8e32961bfeE(6432);
  // unreachable;
 }
 $9 = ($$idx$val$i|0)==(0);
 if ($9) {
  $10 = (_malloc($_0$0$sroa$speculated$i$i$i)|0);
  $ptr$0$i = $10;
 } else {
  $11 = HEAP32[$0>>2]|0;
  $12 = (_realloc($11,$_0$0$sroa$speculated$i$i$i)|0);
  $ptr$0$i = $12;
 }
 $13 = ($ptr$0$i|0)==(0|0);
 if ($13) {
  __ZN5alloc3oom3oom17hb253cf665793f59eE();
  // unreachable;
 }
 HEAP32[$0>>2] = $ptr$0$i;
 HEAP32[$$idx$i>>2] = $_0$0$sroa$speculated$i$i$i;
 return;
}
function __ZN3std2io5impls69__LT_impl_u20_std__io__Write_u20_for_u20__RF__u27_a_u20_mut_u20_W_GT_9write_fmt17h302a2c53740e0b37E($0,$$val,$1) {
 $0 = $0|0;
 $$val = $$val|0;
 $1 = $1|0;
 var $$idx$val$i = 0, $$idx1$i$i$i$i$i$i$i = 0, $$idx1$i$i$i$i$i$i24$i = 0, $$idx1$val$i$i$i$i$i$i$i = 0, $$idx1$val$i$i$i$i$i$i25$i = 0, $$idx1$val$val$i$i$i$i$i$i$i = 0, $$idx1$val$val$i$i$i$i$i$i26$i = 0, $$sroa_idx = 0, $$sroa_idx7 = 0, $$val$i$i$i$i = 0, $$val$i$i$i23$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0;
 var $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0;
 var $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $_14$i = 0, $_8$sroa$0$0$$sroa_idx$i = 0, $cond$i$i = 0, $cond$i$i$i$i = 0, $cond$i$i$i21$i = 0, $cond$i20$i = 0, $output$i = 0;
 var $personalityslot$sroa$0$0$i = 0, $personalityslot$sroa$5$0$i = 0, $switch$i = 0, $x$i$sroa$4$0$$sroa_raw_idx$i = 0, $x$i$sroa$4$i = 0, $x$i$sroa$5$0$$sroa_idx$i = 0, $x$i$sroa$6$0$$sroa_idx$i = 0, $x$sroa$0$i$i$i$sroa$4$0$$sroa_idx = 0, $x$sroa$0$i$i$i$sroa$5$0$$sroa_idx = 0, dest = 0, label = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $x$i$sroa$4$i = sp + 40|0;
 $output$i = sp + 24|0;
 $_14$i = sp;
 HEAP32[$output$i>>2] = $$val;
 $_8$sroa$0$0$$sroa_idx$i = ((($output$i)) + 4|0);
 HEAP32[$_8$sroa$0$0$$sroa_idx$i>>2] = 0;
 ;HEAP32[$_14$i>>2]=HEAP32[$1>>2]|0;HEAP32[$_14$i+4>>2]=HEAP32[$1+4>>2]|0;HEAP32[$_14$i+8>>2]=HEAP32[$1+8>>2]|0;HEAP32[$_14$i+12>>2]=HEAP32[$1+12>>2]|0;HEAP32[$_14$i+16>>2]=HEAP32[$1+16>>2]|0;HEAP32[$_14$i+20>>2]=HEAP32[$1+20>>2]|0;
 __THREW__ = 0;
 $2 = (invoke_iiii(244,($output$i|0),(704|0),($_14$i|0))|0);
 $3 = __THREW__; __THREW__ = 0;
 $4 = $3&1;
 L1: do {
  if (!($4)) {
   $switch$i = ($2<<24>>24)==(0);
   do {
    if ($switch$i) {
     HEAP32[$0>>2] = 0;
    } else {
     $5 = ((($output$i)) + 4|0);
     $$idx$val$i = HEAP32[$5>>2]|0;
     $6 = ($$idx$val$i|0)==(1);
     if ($6) {
      ;HEAP32[$0>>2]=HEAP32[$5>>2]|0;HEAP32[$0+4>>2]=HEAP32[$5+4>>2]|0;HEAP32[$0+8>>2]=HEAP32[$5+8>>2]|0;
      STACKTOP = sp;return;
     }
     $7 = (_malloc(15)|0);
     $8 = ($7|0)==(0|0);
     if ($8) {
      __THREW__ = 0;
      invoke_v(210);
      $9 = __THREW__; __THREW__ = 0;
      break L1;
     }
     dest=$7; src=18628; stop=dest+15|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
     $10 = (_malloc(12)|0);
     $11 = ($10|0)==(0|0);
     if ($11) {
      __THREW__ = 0;
      invoke_v(210);
      $12 = __THREW__; __THREW__ = 0;
      break L1;
     }
     $13 = $7;
     HEAP32[$10>>2] = $13;
     $x$sroa$0$i$i$i$sroa$4$0$$sroa_idx = ((($10)) + 4|0);
     HEAP32[$x$sroa$0$i$i$i$sroa$4$0$$sroa_idx>>2] = 15;
     $x$sroa$0$i$i$i$sroa$5$0$$sroa_idx = ((($10)) + 8|0);
     HEAP32[$x$sroa$0$i$i$i$sroa$5$0$$sroa_idx>>2] = 15;
     $14 = (_malloc(12)|0);
     $15 = ($14|0)==(0|0);
     if ($15) {
      __THREW__ = 0;
      invoke_v(210);
      $16 = __THREW__; __THREW__ = 0;
      break L1;
     } else {
      HEAP8[$14>>0] = 16;
      $x$i$sroa$4$0$$sroa_raw_idx$i = ((($14)) + 1|0);
      ;HEAP8[$x$i$sroa$4$0$$sroa_raw_idx$i>>0]=HEAP8[$x$i$sroa$4$i>>0]|0;HEAP8[$x$i$sroa$4$0$$sroa_raw_idx$i+1>>0]=HEAP8[$x$i$sroa$4$i+1>>0]|0;HEAP8[$x$i$sroa$4$0$$sroa_raw_idx$i+2>>0]=HEAP8[$x$i$sroa$4$i+2>>0]|0;
      $x$i$sroa$5$0$$sroa_idx$i = ((($14)) + 4|0);
      HEAP32[$x$i$sroa$5$0$$sroa_idx$i>>2] = $10;
      $x$i$sroa$6$0$$sroa_idx$i = ((($14)) + 8|0);
      HEAP32[$x$i$sroa$6$0$$sroa_idx$i>>2] = 1632;
      $17 = $14;
      HEAP32[$0>>2] = 1;
      $$sroa_idx = ((($0)) + 4|0);
      HEAP32[$$sroa_idx>>2] = 1;
      $$sroa_idx7 = ((($0)) + 8|0);
      HEAP32[$$sroa_idx7>>2] = $17;
      break;
     }
    }
   } while(0);
   $18 = HEAP32[$_8$sroa$0$0$$sroa_idx$i>>2]|0;
   $cond$i20$i = ($18|0)==(1);
   if (!($cond$i20$i)) {
    STACKTOP = sp;return;
   }
   $19 = ((($output$i)) + 8|0);
   $20 = HEAP32[$19>>2]|0;
   $cond$i$i$i21$i = ($20|0)==(1);
   if (!($cond$i$i$i21$i)) {
    STACKTOP = sp;return;
   }
   $21 = ((($output$i)) + 12|0);
   $$val$i$i$i23$i = HEAP32[$21>>2]|0;
   $22 = ((($$val$i$i$i23$i)) + 4|0);
   $23 = HEAP32[$22>>2]|0;
   $$idx1$i$i$i$i$i$i24$i = ((($$val$i$i$i23$i)) + 8|0);
   $$idx1$val$i$i$i$i$i$i25$i = HEAP32[$$idx1$i$i$i$i$i$i24$i>>2]|0;
   $$idx1$val$val$i$i$i$i$i$i26$i = HEAP32[$$idx1$val$i$i$i$i$i$i25$i>>2]|0;
   __THREW__ = 0;
   invoke_vi($$idx1$val$val$i$i$i$i$i$i26$i|0,($23|0));
   $24 = __THREW__; __THREW__ = 0;
   $25 = $24&1;
   if ($25) {
    $42 = ___cxa_find_matching_catch_2()|0;
    $43 = tempRet0;
    $personalityslot$sroa$0$0$i = $42;$personalityslot$sroa$5$0$i = $43;
    ___resumeException($personalityslot$sroa$0$0$i|0);
    // unreachable;
   }
   $26 = HEAP32[$$idx1$i$i$i$i$i$i24$i>>2]|0;
   $27 = ((($26)) + 4|0);
   $28 = HEAP32[$27>>2]|0;
   $29 = ($28|0)==(0);
   if (!($29)) {
    _free($23);
   }
   _free($$val$i$i$i23$i);
   STACKTOP = sp;return;
  }
 } while(0);
 $30 = ___cxa_find_matching_catch_2()|0;
 $31 = tempRet0;
 $32 = HEAP32[$_8$sroa$0$0$$sroa_idx$i>>2]|0;
 $cond$i$i = ($32|0)==(1);
 if (!($cond$i$i)) {
  $personalityslot$sroa$0$0$i = $30;$personalityslot$sroa$5$0$i = $31;
  ___resumeException($personalityslot$sroa$0$0$i|0);
  // unreachable;
 }
 $33 = ((($output$i)) + 8|0);
 $34 = HEAP32[$33>>2]|0;
 $cond$i$i$i$i = ($34|0)==(1);
 if (!($cond$i$i$i$i)) {
  $personalityslot$sroa$0$0$i = $30;$personalityslot$sroa$5$0$i = $31;
  ___resumeException($personalityslot$sroa$0$0$i|0);
  // unreachable;
 }
 $35 = ((($output$i)) + 12|0);
 $$val$i$i$i$i = HEAP32[$35>>2]|0;
 $36 = ((($$val$i$i$i$i)) + 4|0);
 $37 = HEAP32[$36>>2]|0;
 $$idx1$i$i$i$i$i$i$i = ((($$val$i$i$i$i)) + 8|0);
 $$idx1$val$i$i$i$i$i$i$i = HEAP32[$$idx1$i$i$i$i$i$i$i>>2]|0;
 $$idx1$val$val$i$i$i$i$i$i$i = HEAP32[$$idx1$val$i$i$i$i$i$i$i>>2]|0;
 FUNCTION_TABLE_vi[$$idx1$val$val$i$i$i$i$i$i$i & 511]($37);
 $38 = HEAP32[$$idx1$i$i$i$i$i$i$i>>2]|0;
 $39 = ((($38)) + 4|0);
 $40 = HEAP32[$39>>2]|0;
 $41 = ($40|0)==(0);
 if (!($41)) {
  _free($37);
 }
 _free($$val$i$i$i$i);
 $personalityslot$sroa$0$0$i = $30;$personalityslot$sroa$5$0$i = $31;
 ___resumeException($personalityslot$sroa$0$0$i|0);
 // unreachable;
}
function __ZN3std9panicking11begin_panic17h9936a195de5ffc4dE($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = (_malloc(8)|0);
 $4 = ($3|0)==(0|0);
 if ($4) {
  __ZN5alloc3oom3oom17hb253cf665793f59eE();
  // unreachable;
 } else {
  HEAP32[$3>>2] = $0;
  $5 = ((($3)) + 4|0);
  HEAP32[$5>>2] = $1;
  __ZN3std9panicking20rust_panic_with_hook17hff46710531bc908bE($3,728,$2);
  // unreachable;
 }
}
function __ZN3std9panicking11begin_panic17hbc936d221268e19aE($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $x$sroa$0$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $x$sroa$0$i = sp;
 ;HEAP32[$x$sroa$0$i>>2]=HEAP32[$0>>2]|0;HEAP32[$x$sroa$0$i+4>>2]=HEAP32[$0+4>>2]|0;HEAP32[$x$sroa$0$i+8>>2]=HEAP32[$0+8>>2]|0;
 $1 = (_malloc(12)|0);
 $2 = ($1|0)==(0|0);
 if ($2) {
  __ZN5alloc3oom3oom17hb253cf665793f59eE();
  // unreachable;
 } else {
  ;HEAP32[$1>>2]=HEAP32[$x$sroa$0$i>>2]|0;HEAP32[$1+4>>2]=HEAP32[$x$sroa$0$i+4>>2]|0;HEAP32[$1+8>>2]=HEAP32[$x$sroa$0$i+8>>2]|0;
  __ZN3std9panicking20rust_panic_with_hook17hff46710531bc908bE($1,744,5660);
  // unreachable;
 }
}
function __ZN40__LT_alloc__raw_vec__RawVec_LT_T_GT__GT_6double17h05aca6644cf4ad69E($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $_14$sroa$0$0 = 0, $_14$sroa$5$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 4|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)==(0);
 do {
  if ($3) {
   $9 = (_malloc(16)|0);
   $_14$sroa$0$0 = 4;$_14$sroa$5$0 = $9;
  } else {
   $4 = $2 << 3;
   $5 = ($4|0)<(0);
   if ($5) {
    __ZN4core9panicking5panic17ha7507e8e32961bfeE(6432);
    // unreachable;
   } else {
    $6 = $2 << 1;
    $7 = HEAP32[$0>>2]|0;
    $8 = (_realloc($7,$4)|0);
    $_14$sroa$0$0 = $6;$_14$sroa$5$0 = $8;
    break;
   }
  }
 } while(0);
 $10 = ($_14$sroa$5$0|0)==(0|0);
 if ($10) {
  __ZN5alloc3oom3oom17hb253cf665793f59eE();
  // unreachable;
 } else {
  HEAP32[$0>>2] = $_14$sroa$5$0;
  HEAP32[$1>>2] = $_14$sroa$0$0;
  return;
 }
}
function __ZN40__LT_alloc__raw_vec__RawVec_LT_T_GT__GT_6double17h0efc11ba6ed9d002E($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $_14$sroa$0$0 = 0, $_14$sroa$5$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 4|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)==(0);
 do {
  if ($3) {
   $9 = (_malloc(32)|0);
   $_14$sroa$0$0 = 4;$_14$sroa$5$0 = $9;
  } else {
   $4 = $2 << 4;
   $5 = ($4|0)<(0);
   if ($5) {
    __ZN4core9panicking5panic17ha7507e8e32961bfeE(6432);
    // unreachable;
   } else {
    $6 = $2 << 1;
    $7 = HEAP32[$0>>2]|0;
    $8 = (_realloc($7,$4)|0);
    $_14$sroa$0$0 = $6;$_14$sroa$5$0 = $8;
    break;
   }
  }
 } while(0);
 $10 = ($_14$sroa$5$0|0)==(0|0);
 if ($10) {
  __ZN5alloc3oom3oom17hb253cf665793f59eE();
  // unreachable;
 } else {
  HEAP32[$0>>2] = $_14$sroa$5$0;
  HEAP32[$1>>2] = $_14$sroa$0$0;
  return;
 }
}
function __ZN40__LT_alloc__raw_vec__RawVec_LT_T_GT__GT_6double17h12ab3e9c07b47f79E($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $_14$sroa$0$0 = 0, $_14$sroa$5$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 4|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)==(0);
 do {
  if ($3) {
   $9 = (_malloc(16)|0);
   $_14$sroa$0$0 = 4;$_14$sroa$5$0 = $9;
  } else {
   $4 = $2 << 3;
   $5 = ($4|0)<(0);
   if ($5) {
    __ZN4core9panicking5panic17ha7507e8e32961bfeE(6432);
    // unreachable;
   } else {
    $6 = $2 << 1;
    $7 = HEAP32[$0>>2]|0;
    $8 = (_realloc($7,$4)|0);
    $_14$sroa$0$0 = $6;$_14$sroa$5$0 = $8;
    break;
   }
  }
 } while(0);
 $10 = ($_14$sroa$5$0|0)==(0|0);
 if ($10) {
  __ZN5alloc3oom3oom17hb253cf665793f59eE();
  // unreachable;
 } else {
  HEAP32[$0>>2] = $_14$sroa$5$0;
  HEAP32[$1>>2] = $_14$sroa$0$0;
  return;
 }
}
function __ZN40__LT_alloc__raw_vec__RawVec_LT_T_GT__GT_6double17h144989e1108dc05fE($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $_14$sroa$0$0 = 0, $_14$sroa$5$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 4|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)==(0);
 do {
  if ($3) {
   $9 = (_malloc(160)|0);
   $_14$sroa$0$0 = 4;$_14$sroa$5$0 = $9;
  } else {
   $4 = ($2*80)|0;
   $5 = ($4|0)<(0);
   if ($5) {
    __ZN4core9panicking5panic17ha7507e8e32961bfeE(6432);
    // unreachable;
   } else {
    $6 = $2 << 1;
    $7 = HEAP32[$0>>2]|0;
    $8 = (_realloc($7,$4)|0);
    $_14$sroa$0$0 = $6;$_14$sroa$5$0 = $8;
    break;
   }
  }
 } while(0);
 $10 = ($_14$sroa$5$0|0)==(0|0);
 if ($10) {
  __ZN5alloc3oom3oom17hb253cf665793f59eE();
  // unreachable;
 } else {
  HEAP32[$0>>2] = $_14$sroa$5$0;
  HEAP32[$1>>2] = $_14$sroa$0$0;
  return;
 }
}
function __ZN40__LT_alloc__raw_vec__RawVec_LT_T_GT__GT_6double17h1ae997f2dc657edcE($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $_14$sroa$0$0 = 0, $_14$sroa$5$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 4|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)==(0);
 do {
  if ($3) {
   $9 = (_malloc(16)|0);
   $_14$sroa$0$0 = 4;$_14$sroa$5$0 = $9;
  } else {
   $4 = $2 << 3;
   $5 = ($4|0)<(0);
   if ($5) {
    __ZN4core9panicking5panic17ha7507e8e32961bfeE(6432);
    // unreachable;
   } else {
    $6 = $2 << 1;
    $7 = HEAP32[$0>>2]|0;
    $8 = (_realloc($7,$4)|0);
    $_14$sroa$0$0 = $6;$_14$sroa$5$0 = $8;
    break;
   }
  }
 } while(0);
 $10 = ($_14$sroa$5$0|0)==(0|0);
 if ($10) {
  __ZN5alloc3oom3oom17hb253cf665793f59eE();
  // unreachable;
 } else {
  HEAP32[$0>>2] = $_14$sroa$5$0;
  HEAP32[$1>>2] = $_14$sroa$0$0;
  return;
 }
}
function __ZN40__LT_alloc__raw_vec__RawVec_LT_T_GT__GT_6double17h1afd6f4199b0bac0E($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $_14$sroa$0$0 = 0, $_14$sroa$5$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 4|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)==(0);
 do {
  if ($3) {
   $9 = (_malloc(48)|0);
   $_14$sroa$0$0 = 4;$_14$sroa$5$0 = $9;
  } else {
   $4 = ($2*24)|0;
   $5 = ($4|0)<(0);
   if ($5) {
    __ZN4core9panicking5panic17ha7507e8e32961bfeE(6432);
    // unreachable;
   } else {
    $6 = $2 << 1;
    $7 = HEAP32[$0>>2]|0;
    $8 = (_realloc($7,$4)|0);
    $_14$sroa$0$0 = $6;$_14$sroa$5$0 = $8;
    break;
   }
  }
 } while(0);
 $10 = ($_14$sroa$5$0|0)==(0|0);
 if ($10) {
  __ZN5alloc3oom3oom17hb253cf665793f59eE();
  // unreachable;
 } else {
  HEAP32[$0>>2] = $_14$sroa$5$0;
  HEAP32[$1>>2] = $_14$sroa$0$0;
  return;
 }
}
function __ZN40__LT_alloc__raw_vec__RawVec_LT_T_GT__GT_6double17h3b635aeacc3e1107E($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $_14$sroa$0$0 = 0, $_14$sroa$5$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 4|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)==(0);
 do {
  if ($3) {
   $9 = (_malloc(112)|0);
   $_14$sroa$0$0 = 4;$_14$sroa$5$0 = $9;
  } else {
   $4 = ($2*56)|0;
   $5 = ($4|0)<(0);
   if ($5) {
    __ZN4core9panicking5panic17ha7507e8e32961bfeE(6432);
    // unreachable;
   } else {
    $6 = $2 << 1;
    $7 = HEAP32[$0>>2]|0;
    $8 = (_realloc($7,$4)|0);
    $_14$sroa$0$0 = $6;$_14$sroa$5$0 = $8;
    break;
   }
  }
 } while(0);
 $10 = ($_14$sroa$5$0|0)==(0|0);
 if ($10) {
  __ZN5alloc3oom3oom17hb253cf665793f59eE();
  // unreachable;
 } else {
  HEAP32[$0>>2] = $_14$sroa$5$0;
  HEAP32[$1>>2] = $_14$sroa$0$0;
  return;
 }
}
function __ZN40__LT_alloc__raw_vec__RawVec_LT_T_GT__GT_6double17h3d9f6f346395e52bE($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $_14$sroa$0$0 = 0, $_14$sroa$5$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 4|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)==(0);
 do {
  if ($3) {
   $9 = (_malloc(16)|0);
   $_14$sroa$0$0 = 4;$_14$sroa$5$0 = $9;
  } else {
   $4 = $2 << 3;
   $5 = ($4|0)<(0);
   if ($5) {
    __ZN4core9panicking5panic17ha7507e8e32961bfeE(6432);
    // unreachable;
   } else {
    $6 = $2 << 1;
    $7 = HEAP32[$0>>2]|0;
    $8 = (_realloc($7,$4)|0);
    $_14$sroa$0$0 = $6;$_14$sroa$5$0 = $8;
    break;
   }
  }
 } while(0);
 $10 = ($_14$sroa$5$0|0)==(0|0);
 if ($10) {
  __ZN5alloc3oom3oom17hb253cf665793f59eE();
  // unreachable;
 } else {
  HEAP32[$0>>2] = $_14$sroa$5$0;
  HEAP32[$1>>2] = $_14$sroa$0$0;
  return;
 }
}
function __ZN40__LT_alloc__raw_vec__RawVec_LT_T_GT__GT_6double17h41a8210a826843baE($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $_14$sroa$0$0 = 0, $_14$sroa$5$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 4|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)==(0);
 do {
  if ($3) {
   $9 = (_malloc(48)|0);
   $_14$sroa$0$0 = 4;$_14$sroa$5$0 = $9;
  } else {
   $4 = ($2*24)|0;
   $5 = ($4|0)<(0);
   if ($5) {
    __ZN4core9panicking5panic17ha7507e8e32961bfeE(6432);
    // unreachable;
   } else {
    $6 = $2 << 1;
    $7 = HEAP32[$0>>2]|0;
    $8 = (_realloc($7,$4)|0);
    $_14$sroa$0$0 = $6;$_14$sroa$5$0 = $8;
    break;
   }
  }
 } while(0);
 $10 = ($_14$sroa$5$0|0)==(0|0);
 if ($10) {
  __ZN5alloc3oom3oom17hb253cf665793f59eE();
  // unreachable;
 } else {
  HEAP32[$0>>2] = $_14$sroa$5$0;
  HEAP32[$1>>2] = $_14$sroa$0$0;
  return;
 }
}
function __ZN40__LT_alloc__raw_vec__RawVec_LT_T_GT__GT_6double17h445e638d2d3df6a4E($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $_14$sroa$0$0 = 0, $_14$sroa$5$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 4|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)==(0);
 do {
  if ($3) {
   $9 = (_malloc(96)|0);
   $_14$sroa$0$0 = 4;$_14$sroa$5$0 = $9;
  } else {
   $4 = ($2*48)|0;
   $5 = ($4|0)<(0);
   if ($5) {
    __ZN4core9panicking5panic17ha7507e8e32961bfeE(6432);
    // unreachable;
   } else {
    $6 = $2 << 1;
    $7 = HEAP32[$0>>2]|0;
    $8 = (_realloc($7,$4)|0);
    $_14$sroa$0$0 = $6;$_14$sroa$5$0 = $8;
    break;
   }
  }
 } while(0);
 $10 = ($_14$sroa$5$0|0)==(0|0);
 if ($10) {
  __ZN5alloc3oom3oom17hb253cf665793f59eE();
  // unreachable;
 } else {
  HEAP32[$0>>2] = $_14$sroa$5$0;
  HEAP32[$1>>2] = $_14$sroa$0$0;
  return;
 }
}
function __ZN40__LT_alloc__raw_vec__RawVec_LT_T_GT__GT_6double17h50562ed0cc5aced6E($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $_14$sroa$0$0 = 0, $_14$sroa$5$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 4|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)==(0);
 do {
  if ($3) {
   $9 = (_malloc(256)|0);
   $_14$sroa$0$0 = 4;$_14$sroa$5$0 = $9;
  } else {
   $4 = $2 << 7;
   $5 = ($4|0)<(0);
   if ($5) {
    __ZN4core9panicking5panic17ha7507e8e32961bfeE(6432);
    // unreachable;
   } else {
    $6 = $2 << 1;
    $7 = HEAP32[$0>>2]|0;
    $8 = (_realloc($7,$4)|0);
    $_14$sroa$0$0 = $6;$_14$sroa$5$0 = $8;
    break;
   }
  }
 } while(0);
 $10 = ($_14$sroa$5$0|0)==(0|0);
 if ($10) {
  __ZN5alloc3oom3oom17hb253cf665793f59eE();
  // unreachable;
 } else {
  HEAP32[$0>>2] = $_14$sroa$5$0;
  HEAP32[$1>>2] = $_14$sroa$0$0;
  return;
 }
}
function __ZN40__LT_alloc__raw_vec__RawVec_LT_T_GT__GT_6double17h528ed6a617ab907eE($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $_14$sroa$0$0 = 0, $_14$sroa$5$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 4|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)==(0);
 do {
  if ($3) {
   $9 = (_malloc(48)|0);
   $_14$sroa$0$0 = 4;$_14$sroa$5$0 = $9;
  } else {
   $4 = ($2*24)|0;
   $5 = ($4|0)<(0);
   if ($5) {
    __ZN4core9panicking5panic17ha7507e8e32961bfeE(6432);
    // unreachable;
   } else {
    $6 = $2 << 1;
    $7 = HEAP32[$0>>2]|0;
    $8 = (_realloc($7,$4)|0);
    $_14$sroa$0$0 = $6;$_14$sroa$5$0 = $8;
    break;
   }
  }
 } while(0);
 $10 = ($_14$sroa$5$0|0)==(0|0);
 if ($10) {
  __ZN5alloc3oom3oom17hb253cf665793f59eE();
  // unreachable;
 } else {
  HEAP32[$0>>2] = $_14$sroa$5$0;
  HEAP32[$1>>2] = $_14$sroa$0$0;
  return;
 }
}
function __ZN40__LT_alloc__raw_vec__RawVec_LT_T_GT__GT_6double17h592c9c93ffb654b3E($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $_14$sroa$0$0 = 0, $_14$sroa$5$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 4|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)==(0);
 do {
  if ($3) {
   $9 = (_malloc(208)|0);
   $_14$sroa$0$0 = 4;$_14$sroa$5$0 = $9;
  } else {
   $4 = ($2*104)|0;
   $5 = ($4|0)<(0);
   if ($5) {
    __ZN4core9panicking5panic17ha7507e8e32961bfeE(6432);
    // unreachable;
   } else {
    $6 = $2 << 1;
    $7 = HEAP32[$0>>2]|0;
    $8 = (_realloc($7,$4)|0);
    $_14$sroa$0$0 = $6;$_14$sroa$5$0 = $8;
    break;
   }
  }
 } while(0);
 $10 = ($_14$sroa$5$0|0)==(0|0);
 if ($10) {
  __ZN5alloc3oom3oom17hb253cf665793f59eE();
  // unreachable;
 } else {
  HEAP32[$0>>2] = $_14$sroa$5$0;
  HEAP32[$1>>2] = $_14$sroa$0$0;
  return;
 }
}
function __ZN40__LT_alloc__raw_vec__RawVec_LT_T_GT__GT_6double17h5ffc3924c407ac6aE($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $_14$sroa$0$0 = 0, $_14$sroa$5$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 4|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)==(0);
 do {
  if ($3) {
   $9 = (_malloc(80)|0);
   $_14$sroa$0$0 = 4;$_14$sroa$5$0 = $9;
  } else {
   $4 = ($2*40)|0;
   $5 = ($4|0)<(0);
   if ($5) {
    __ZN4core9panicking5panic17ha7507e8e32961bfeE(6432);
    // unreachable;
   } else {
    $6 = $2 << 1;
    $7 = HEAP32[$0>>2]|0;
    $8 = (_realloc($7,$4)|0);
    $_14$sroa$0$0 = $6;$_14$sroa$5$0 = $8;
    break;
   }
  }
 } while(0);
 $10 = ($_14$sroa$5$0|0)==(0|0);
 if ($10) {
  __ZN5alloc3oom3oom17hb253cf665793f59eE();
  // unreachable;
 } else {
  HEAP32[$0>>2] = $_14$sroa$5$0;
  HEAP32[$1>>2] = $_14$sroa$0$0;
  return;
 }
}
function __ZN40__LT_alloc__raw_vec__RawVec_LT_T_GT__GT_6double17h65a47dbc2051be6eE($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $_14$sroa$0$0 = 0, $_14$sroa$5$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 4|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)==(0);
 do {
  if ($3) {
   $9 = (_malloc(32)|0);
   $_14$sroa$0$0 = 4;$_14$sroa$5$0 = $9;
  } else {
   $4 = $2 << 4;
   $5 = ($4|0)<(0);
   if ($5) {
    __ZN4core9panicking5panic17ha7507e8e32961bfeE(6432);
    // unreachable;
   } else {
    $6 = $2 << 1;
    $7 = HEAP32[$0>>2]|0;
    $8 = (_realloc($7,$4)|0);
    $_14$sroa$0$0 = $6;$_14$sroa$5$0 = $8;
    break;
   }
  }
 } while(0);
 $10 = ($_14$sroa$5$0|0)==(0|0);
 if ($10) {
  __ZN5alloc3oom3oom17hb253cf665793f59eE();
  // unreachable;
 } else {
  HEAP32[$0>>2] = $_14$sroa$5$0;
  HEAP32[$1>>2] = $_14$sroa$0$0;
  return;
 }
}
function __ZN40__LT_alloc__raw_vec__RawVec_LT_T_GT__GT_6double17h7f0870b65cc12174E($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $_14$sroa$0$0 = 0, $_14$sroa$5$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 4|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)==(0);
 do {
  if ($3) {
   $9 = (_malloc(80)|0);
   $_14$sroa$0$0 = 4;$_14$sroa$5$0 = $9;
  } else {
   $4 = ($2*40)|0;
   $5 = ($4|0)<(0);
   if ($5) {
    __ZN4core9panicking5panic17ha7507e8e32961bfeE(6432);
    // unreachable;
   } else {
    $6 = $2 << 1;
    $7 = HEAP32[$0>>2]|0;
    $8 = (_realloc($7,$4)|0);
    $_14$sroa$0$0 = $6;$_14$sroa$5$0 = $8;
    break;
   }
  }
 } while(0);
 $10 = ($_14$sroa$5$0|0)==(0|0);
 if ($10) {
  __ZN5alloc3oom3oom17hb253cf665793f59eE();
  // unreachable;
 } else {
  HEAP32[$0>>2] = $_14$sroa$5$0;
  HEAP32[$1>>2] = $_14$sroa$0$0;
  return;
 }
}
function __ZN40__LT_alloc__raw_vec__RawVec_LT_T_GT__GT_6double17h82c63187bd3a6fdbE($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $_14$sroa$0$0 = 0, $_14$sroa$5$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 4|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)==(0);
 do {
  if ($3) {
   $9 = (_malloc(32)|0);
   $_14$sroa$0$0 = 4;$_14$sroa$5$0 = $9;
  } else {
   $4 = $2 << 4;
   $5 = ($4|0)<(0);
   if ($5) {
    __ZN4core9panicking5panic17ha7507e8e32961bfeE(6432);
    // unreachable;
   } else {
    $6 = $2 << 1;
    $7 = HEAP32[$0>>2]|0;
    $8 = (_realloc($7,$4)|0);
    $_14$sroa$0$0 = $6;$_14$sroa$5$0 = $8;
    break;
   }
  }
 } while(0);
 $10 = ($_14$sroa$5$0|0)==(0|0);
 if ($10) {
  __ZN5alloc3oom3oom17hb253cf665793f59eE();
  // unreachable;
 } else {
  HEAP32[$0>>2] = $_14$sroa$5$0;
  HEAP32[$1>>2] = $_14$sroa$0$0;
  return;
 }
}
function __ZN40__LT_alloc__raw_vec__RawVec_LT_T_GT__GT_6double17ha4899d9ca8626977E($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $_14$sroa$0$0 = 0, $_14$sroa$5$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 4|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)==(0);
 do {
  if ($3) {
   $9 = (_malloc(112)|0);
   $_14$sroa$0$0 = 4;$_14$sroa$5$0 = $9;
  } else {
   $4 = ($2*56)|0;
   $5 = ($4|0)<(0);
   if ($5) {
    __ZN4core9panicking5panic17ha7507e8e32961bfeE(6432);
    // unreachable;
   } else {
    $6 = $2 << 1;
    $7 = HEAP32[$0>>2]|0;
    $8 = (_realloc($7,$4)|0);
    $_14$sroa$0$0 = $6;$_14$sroa$5$0 = $8;
    break;
   }
  }
 } while(0);
 $10 = ($_14$sroa$5$0|0)==(0|0);
 if ($10) {
  __ZN5alloc3oom3oom17hb253cf665793f59eE();
  // unreachable;
 } else {
  HEAP32[$0>>2] = $_14$sroa$5$0;
  HEAP32[$1>>2] = $_14$sroa$0$0;
  return;
 }
}
function __ZN40__LT_alloc__raw_vec__RawVec_LT_T_GT__GT_6double17hac6a54ac5941c853E($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $_14$sroa$0$0 = 0, $_14$sroa$5$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 4|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)==(0);
 do {
  if ($3) {
   $9 = (_malloc(96)|0);
   $_14$sroa$0$0 = 4;$_14$sroa$5$0 = $9;
  } else {
   $4 = ($2*48)|0;
   $5 = ($4|0)<(0);
   if ($5) {
    __ZN4core9panicking5panic17ha7507e8e32961bfeE(6432);
    // unreachable;
   } else {
    $6 = $2 << 1;
    $7 = HEAP32[$0>>2]|0;
    $8 = (_realloc($7,$4)|0);
    $_14$sroa$0$0 = $6;$_14$sroa$5$0 = $8;
    break;
   }
  }
 } while(0);
 $10 = ($_14$sroa$5$0|0)==(0|0);
 if ($10) {
  __ZN5alloc3oom3oom17hb253cf665793f59eE();
  // unreachable;
 } else {
  HEAP32[$0>>2] = $_14$sroa$5$0;
  HEAP32[$1>>2] = $_14$sroa$0$0;
  return;
 }
}
function __ZN40__LT_alloc__raw_vec__RawVec_LT_T_GT__GT_6double17hba0be17a8d0947b2E($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $_14$sroa$0$0 = 0, $_14$sroa$5$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 4|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)==(0);
 do {
  if ($3) {
   $9 = (_malloc(16)|0);
   $_14$sroa$0$0 = 4;$_14$sroa$5$0 = $9;
  } else {
   $4 = $2 << 3;
   $5 = ($4|0)<(0);
   if ($5) {
    __ZN4core9panicking5panic17ha7507e8e32961bfeE(6432);
    // unreachable;
   } else {
    $6 = $2 << 1;
    $7 = HEAP32[$0>>2]|0;
    $8 = (_realloc($7,$4)|0);
    $_14$sroa$0$0 = $6;$_14$sroa$5$0 = $8;
    break;
   }
  }
 } while(0);
 $10 = ($_14$sroa$5$0|0)==(0|0);
 if ($10) {
  __ZN5alloc3oom3oom17hb253cf665793f59eE();
  // unreachable;
 } else {
  HEAP32[$0>>2] = $_14$sroa$5$0;
  HEAP32[$1>>2] = $_14$sroa$0$0;
  return;
 }
}
function __ZN40__LT_alloc__raw_vec__RawVec_LT_T_GT__GT_6double17hbb3a08f9749d2fc0E($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $_14$sroa$0$0 = 0, $_14$sroa$5$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 4|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)==(0);
 do {
  if ($3) {
   $9 = (_malloc(80)|0);
   $_14$sroa$0$0 = 4;$_14$sroa$5$0 = $9;
  } else {
   $4 = ($2*40)|0;
   $5 = ($4|0)<(0);
   if ($5) {
    __ZN4core9panicking5panic17ha7507e8e32961bfeE(6432);
    // unreachable;
   } else {
    $6 = $2 << 1;
    $7 = HEAP32[$0>>2]|0;
    $8 = (_realloc($7,$4)|0);
    $_14$sroa$0$0 = $6;$_14$sroa$5$0 = $8;
    break;
   }
  }
 } while(0);
 $10 = ($_14$sroa$5$0|0)==(0|0);
 if ($10) {
  __ZN5alloc3oom3oom17hb253cf665793f59eE();
  // unreachable;
 } else {
  HEAP32[$0>>2] = $_14$sroa$5$0;
  HEAP32[$1>>2] = $_14$sroa$0$0;
  return;
 }
}
function __ZN40__LT_alloc__raw_vec__RawVec_LT_T_GT__GT_6double17hc4800ad2c4f0e489E($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $_14$sroa$0$0 = 0, $_14$sroa$5$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 4|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)==(0);
 do {
  if ($3) {
   $9 = (_malloc(96)|0);
   $_14$sroa$0$0 = 4;$_14$sroa$5$0 = $9;
  } else {
   $4 = ($2*48)|0;
   $5 = ($4|0)<(0);
   if ($5) {
    __ZN4core9panicking5panic17ha7507e8e32961bfeE(6432);
    // unreachable;
   } else {
    $6 = $2 << 1;
    $7 = HEAP32[$0>>2]|0;
    $8 = (_realloc($7,$4)|0);
    $_14$sroa$0$0 = $6;$_14$sroa$5$0 = $8;
    break;
   }
  }
 } while(0);
 $10 = ($_14$sroa$5$0|0)==(0|0);
 if ($10) {
  __ZN5alloc3oom3oom17hb253cf665793f59eE();
  // unreachable;
 } else {
  HEAP32[$0>>2] = $_14$sroa$5$0;
  HEAP32[$1>>2] = $_14$sroa$0$0;
  return;
 }
}
function __ZN40__LT_alloc__raw_vec__RawVec_LT_T_GT__GT_6double17hcce751f0a8e5e0c9E($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $_14$sroa$0$0 = 0, $_14$sroa$5$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 4|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)==(0);
 do {
  if ($3) {
   $9 = (_malloc(32)|0);
   $_14$sroa$0$0 = 4;$_14$sroa$5$0 = $9;
  } else {
   $4 = $2 << 4;
   $5 = ($4|0)<(0);
   if ($5) {
    __ZN4core9panicking5panic17ha7507e8e32961bfeE(6432);
    // unreachable;
   } else {
    $6 = $2 << 1;
    $7 = HEAP32[$0>>2]|0;
    $8 = (_realloc($7,$4)|0);
    $_14$sroa$0$0 = $6;$_14$sroa$5$0 = $8;
    break;
   }
  }
 } while(0);
 $10 = ($_14$sroa$5$0|0)==(0|0);
 if ($10) {
  __ZN5alloc3oom3oom17hb253cf665793f59eE();
  // unreachable;
 } else {
  HEAP32[$0>>2] = $_14$sroa$5$0;
  HEAP32[$1>>2] = $_14$sroa$0$0;
  return;
 }
}
function __ZN40__LT_alloc__raw_vec__RawVec_LT_T_GT__GT_6double17hd1bf40171c89f967E($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $_14$sroa$0$0 = 0, $_14$sroa$5$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 4|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)==(0);
 do {
  if ($3) {
   $9 = (_malloc(32)|0);
   $_14$sroa$0$0 = 4;$_14$sroa$5$0 = $9;
  } else {
   $4 = $2 << 4;
   $5 = ($4|0)<(0);
   if ($5) {
    __ZN4core9panicking5panic17ha7507e8e32961bfeE(6432);
    // unreachable;
   } else {
    $6 = $2 << 1;
    $7 = HEAP32[$0>>2]|0;
    $8 = (_realloc($7,$4)|0);
    $_14$sroa$0$0 = $6;$_14$sroa$5$0 = $8;
    break;
   }
  }
 } while(0);
 $10 = ($_14$sroa$5$0|0)==(0|0);
 if ($10) {
  __ZN5alloc3oom3oom17hb253cf665793f59eE();
  // unreachable;
 } else {
  HEAP32[$0>>2] = $_14$sroa$5$0;
  HEAP32[$1>>2] = $_14$sroa$0$0;
  return;
 }
}
function __ZN40__LT_alloc__raw_vec__RawVec_LT_T_GT__GT_6double17he78dc10a992efc57E($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $_14$sroa$0$0 = 0, $_14$sroa$5$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 4|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)==(0);
 do {
  if ($3) {
   $9 = (_malloc(16)|0);
   $_14$sroa$0$0 = 4;$_14$sroa$5$0 = $9;
  } else {
   $4 = $2 << 3;
   $5 = ($4|0)<(0);
   if ($5) {
    __ZN4core9panicking5panic17ha7507e8e32961bfeE(6432);
    // unreachable;
   } else {
    $6 = $2 << 1;
    $7 = HEAP32[$0>>2]|0;
    $8 = (_realloc($7,$4)|0);
    $_14$sroa$0$0 = $6;$_14$sroa$5$0 = $8;
    break;
   }
  }
 } while(0);
 $10 = ($_14$sroa$5$0|0)==(0|0);
 if ($10) {
  __ZN5alloc3oom3oom17hb253cf665793f59eE();
  // unreachable;
 } else {
  HEAP32[$0>>2] = $_14$sroa$5$0;
  HEAP32[$1>>2] = $_14$sroa$0$0;
  return;
 }
}
function __ZN40__LT_alloc__raw_vec__RawVec_LT_T_GT__GT_6double17he7ddb4f4d4d2d5aaE($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $_14$sroa$0$0 = 0, $_14$sroa$5$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 4|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)==(0);
 do {
  if ($3) {
   $9 = (_malloc(64)|0);
   $_14$sroa$0$0 = 4;$_14$sroa$5$0 = $9;
  } else {
   $4 = $2 << 5;
   $5 = ($4|0)<(0);
   if ($5) {
    __ZN4core9panicking5panic17ha7507e8e32961bfeE(6432);
    // unreachable;
   } else {
    $6 = $2 << 1;
    $7 = HEAP32[$0>>2]|0;
    $8 = (_realloc($7,$4)|0);
    $_14$sroa$0$0 = $6;$_14$sroa$5$0 = $8;
    break;
   }
  }
 } while(0);
 $10 = ($_14$sroa$5$0|0)==(0|0);
 if ($10) {
  __ZN5alloc3oom3oom17hb253cf665793f59eE();
  // unreachable;
 } else {
  HEAP32[$0>>2] = $_14$sroa$5$0;
  HEAP32[$1>>2] = $_14$sroa$0$0;
  return;
 }
}
function __ZN40__LT_alloc__raw_vec__RawVec_LT_T_GT__GT_6double17hf3cc6bb6adb0ef45E($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $_14$sroa$0$0 = 0, $_14$sroa$5$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 4|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)==(0);
 do {
  if ($3) {
   $9 = (_malloc(96)|0);
   $_14$sroa$0$0 = 4;$_14$sroa$5$0 = $9;
  } else {
   $4 = ($2*48)|0;
   $5 = ($4|0)<(0);
   if ($5) {
    __ZN4core9panicking5panic17ha7507e8e32961bfeE(6432);
    // unreachable;
   } else {
    $6 = $2 << 1;
    $7 = HEAP32[$0>>2]|0;
    $8 = (_realloc($7,$4)|0);
    $_14$sroa$0$0 = $6;$_14$sroa$5$0 = $8;
    break;
   }
  }
 } while(0);
 $10 = ($_14$sroa$5$0|0)==(0|0);
 if ($10) {
  __ZN5alloc3oom3oom17hb253cf665793f59eE();
  // unreachable;
 } else {
  HEAP32[$0>>2] = $_14$sroa$5$0;
  HEAP32[$1>>2] = $_14$sroa$0$0;
  return;
 }
}
function __ZN40__LT_alloc__raw_vec__RawVec_LT_T_GT__GT_6double17hf3f26c768d114100E($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $_14$sroa$0$0 = 0, $_14$sroa$5$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 4|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)==(0);
 do {
  if ($3) {
   $9 = (_malloc(64)|0);
   $_14$sroa$0$0 = 4;$_14$sroa$5$0 = $9;
  } else {
   $4 = $2 << 5;
   $5 = ($4|0)<(0);
   if ($5) {
    __ZN4core9panicking5panic17ha7507e8e32961bfeE(6432);
    // unreachable;
   } else {
    $6 = $2 << 1;
    $7 = HEAP32[$0>>2]|0;
    $8 = (_realloc($7,$4)|0);
    $_14$sroa$0$0 = $6;$_14$sroa$5$0 = $8;
    break;
   }
  }
 } while(0);
 $10 = ($_14$sroa$5$0|0)==(0|0);
 if ($10) {
  __ZN5alloc3oom3oom17hb253cf665793f59eE();
  // unreachable;
 } else {
  HEAP32[$0>>2] = $_14$sroa$5$0;
  HEAP32[$1>>2] = $_14$sroa$0$0;
  return;
 }
}
function __ZN49__LT_nphysics2d__world__world__World_LT_N_GT__GT_14add_rigid_body17hc27c29f3d7203e5dE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$arith = 0, $$fca$0$extract2493$i$i$i = 0, $$fca$0$extract70$i$i = 0, $$fca$1$extract2695$i$i$i = 0, $$fca$1$extract71$i$i = 0, $$idx = 0, $$idx$i$i = 0, $$idx$i$i$i = 0, $$idx$i$i$i$i$i = 0, $$idx$i$i$i$i$i$i = 0, $$idx$i$i$i$i$i$i$i = 0, $$idx$i29$i$i = 0, $$idx$val$i$i = 0, $$idx$val$i$i$i = 0, $$idx$val$i$i$i$i$i = 0, $$idx$val$i$i$i$i$i$i = 0, $$idx$val$i$i$i$i$i$i$i = 0, $$idx$val$i$i55 = 0, $$idx$val$i$i73 = 0, $$idx$val$i30$i$i = 0;
 var $$idx1$i$i$i$i$i$i$i = 0, $$idx1$i$i$i$i$i$i$i$i = 0, $$idx1$i$i$i$i$i$i$i$i$i = 0, $$idx1$i$i$i$i$i$i$i$i$i$i = 0, $$idx1$i$i$i$i$i$i$i$i$i80 = 0, $$idx1$i$i$i$i$i$i$i286 = 0, $$idx1$i$i$i$i$i$i$i45$i$i = 0, $$idx1$val$i$i$i$i$i = 0, $$idx1$val$i$i$i$i$i$i$i = 0, $$idx1$val$i$i$i$i$i$i$i$i = 0, $$idx1$val$i$i$i$i$i$i$i$i$i = 0, $$idx1$val$i$i$i$i$i$i$i$i$i$i = 0, $$idx1$val$i$i$i$i$i$i$i$i$i81 = 0, $$idx1$val$i$i$i$i$i$i$i287 = 0, $$idx1$val$i$i$i$i$i$i$i46$i$i = 0, $$idx1$val$val$i$i$i$i$i$i$i = 0, $$idx1$val$val$i$i$i$i$i$i$i$i = 0, $$idx1$val$val$i$i$i$i$i$i$i$i$i = 0, $$idx1$val$val$i$i$i$i$i$i$i$i$i$i = 0, $$idx1$val$val$i$i$i$i$i$i$i$i$i82 = 0;
 var $$idx1$val$val$i$i$i$i$i$i$i288 = 0, $$idx1$val$val$i$i$i$i$i$i$i47$i$i = 0, $$idx10$val$i$i = 0, $$idx10$val$pre$i$i = 0, $$idx11$i$i$i = 0, $$idx11$val$i$i$i = 0, $$idx12$i$i$i = 0, $$idx12$val$i$i = 0, $$idx12$val$i$i$i = 0, $$idx13$i$i$i = 0, $$idx13$val$i$i = 0, $$idx13$val$i$i$i = 0, $$idx14$i$i = 0, $$idx14$i$i$i = 0, $$idx14$val$i$i = 0, $$idx14$val$i$i$i = 0, $$idx15$i$i = 0, $$idx15$val$i$i = 0, $$idx17$i$i$i = 0, $$idx17$val$i$i$i = 0;
 var $$idx18$i$i$i = 0, $$idx18$val$i$i$i = 0, $$idx2$val$i$i = 0, $$idx3$val$i$i = 0, $$idx3$val$i$i$i$i = 0, $$idx325 = 0, $$idx49$i$i$i = 0, $$idx49$val$i$i$i = 0, $$in$i$i$i$i$i = 0, $$overflow = 0, $$pre$i$i = 0, $$pre$i$i$i = 0, $$pre$i$i72 = 0, $$sink237250$i$i$i$i$i$i$i = 0, $$val$i$i$i = 0, $$val$i$i$i$i$i$i$i = 0, $$val19$i$i$i = 0, $$val21$i$i$i70 = 0, $10 = 0, $100 = 0;
 var $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0;
 var $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0;
 var $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0;
 var $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0.0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0.0, $170 = 0, $171 = 0, $172 = 0, $173 = 0;
 var $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0.0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0;
 var $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0;
 var $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0;
 var $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0;
 var $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0;
 var $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0;
 var $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0;
 var $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0;
 var $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0;
 var $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0;
 var $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0;
 var $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0;
 var $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0;
 var $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0;
 var $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0;
 var $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0;
 var $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0;
 var $87 = 0, $88 = 0, $89 = 0.0, $9 = 0, $90 = 0.0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $_35$sroa$5$0$$sroa_idx69$i = 0, $_35$sroa$6$0$$sroa_idx$i = 0, $_35$sroa$7$0$$sroa_cast$i$sroa_idx = 0, $_35$sroa$7$0$$sroa_cast$i$sroa_idx99 = 0, $_35$sroa$8$0$$sroa_idx75$i = 0, $_35$sroa$9$0$$sroa_idx77$i = 0;
 var $_42 = 0, $_5$sroa$5$1$i$i$i = 0, $_52$3$ph = 0, $collision_groups$i = 0, $dist$0$i$i$i$i$i$i$i$i$i = 0, $eh$lpad$body$index10Z2D = 0, $eh$lpad$body$indexZ2D = 0, $extract$t47173 = 0, $groups = 0, $iter$sroa$0$0109$i$i$i = 0, $iter$sroa$0$0109$i$i$i$phi = 0, $newhash$i$i$i = 0, $newhash$idx$val$i$i$i = 0, $newhash$idx48$i$i$i = 0, $newhash$idx48$val$i$i$i = 0, $newnext$i$i$i = 0, $newnext$idx$val$i$i$i = 0, $newnext$idx55$i$i$i = 0, $newnext$idx55$val$i$i$i = 0, $not$$i$i$i$i$i$i$i = 0;
 var $not$$i$i$i$i56$i$i$i = 0, $not$$i$i$i$i59$i$i$i = 0, $not$$i$i$i$i62$i$i$i = 0, $not$switchtmp$i$i$i$i$i = 0, $personalityslot$sroa$0$2167184 = 0, $personalityslot$sroa$0$2167185 = 0, $personalityslot$sroa$0$2168 = 0, $personalityslot$sroa$7$2170182 = 0, $personalityslot$sroa$7$2170183 = 0, $personalityslot$sroa$7$2171 = 0, $phitmp$i$i = 0, $phitmp2$i$i = 0, $pos$0$i$i$i = 0, $pos$1$i$i$i = 0, $position$i$sroa$0$0$_35$sroa$4$0$$sroa_cast$i$sroa_idx = 0, $position$i$sroa$7$0$_35$sroa$4$0$$sroa_cast$i$sroa_idx151 = 0, $position$i$sroa$8$0$_35$sroa$4$0$$sroa_cast$i$sroa_idx153 = 0, $probe$sroa$8$0252$i$i$i$i$i$i$i = 0, $rb$sroa$0$0$copyload = 0, $rb$sroa$10 = 0;
 var $rb$sroa$10$0$$sroa_idx = 0, $rb$sroa$4$0$$sroa_idx = 0, $rb$sroa$4$0$copyload = 0, $rb$sroa$5$0$$sroa_idx = 0, $rb$sroa$5$0$copyload = SIMD_Int32x4(0,0,0,0), $rb$sroa$6$0$$sroa_idx = 0, $rb$sroa$6$0$copyload = 0, $rb$sroa$7$0$$sroa_idx = 0, $rb$sroa$7$0$copyload = 0, $rb$sroa$8 = 0, $rb$sroa$8$0$$sroa_idx = 0, $rb$sroa$8346$0$$sroa_idx = 0, $rb$sroa$8346$0$copyload = 0.0, $rb$sroa$9 = 0, $rb$sroa$9$0$$sroa_idx = 0, $shape = 0, $shape$i = 0, $switchtmp$i$i$i$i = 0, $switchtmp$i$i$i$i$i$i = 0, $switchtmp$i$i$i$i$i$i$i = 0;
 var $switchtmp$i$i$i$i$i$i$i$i = 0, $switchtmp$i$i$i$i$i$i$i$i$i = 0, $switchtmp$i$i$i$i$i$i$i$i78 = 0, $switchtmp$i$i$i$i$i$i284 = 0, $switchtmp$i$i$i$i$i$i43$i$i = 0, $t$i$i$i$i = 0, $t$i69$i$i$i = 0, $value$i$i = 0, $value$i$sroa$0$0$$sroa_idx = 0, $value$i$sroa$4$sroa$0$0$value$i$sroa$4$0$$sroa_raw_idx$sroa_idx = 0, $value$i$sroa$4$sroa$10 = 0, $value$i$sroa$4$sroa$10$0$value$i$sroa$4$0$$sroa_raw_idx$sroa_raw_idx = 0, $value$i$sroa$4$sroa$11 = 0, $value$i$sroa$4$sroa$11$0$value$i$sroa$4$0$$sroa_raw_idx$sroa_raw_idx = 0, $value$i$sroa$4$sroa$4$0$value$i$sroa$4$0$$sroa_raw_idx$sroa_idx = 0, $value$i$sroa$4$sroa$5$0$value$i$sroa$4$0$$sroa_raw_idx$sroa_idx = 0, $value$i$sroa$4$sroa$6$0$value$i$sroa$4$0$$sroa_raw_idx$sroa_idx = 0, $value$i$sroa$4$sroa$7$0$value$i$sroa$4$0$$sroa_raw_idx$sroa_idx = 0, $value$i$sroa$4$sroa$8 = 0, $value$i$sroa$4$sroa$8$0$value$i$sroa$4$0$$sroa_raw_idx$sroa_raw_idx = 0;
 var $value$i$sroa$4$sroa$9$0$value$i$sroa$4$0$$sroa_raw_idx$sroa_idx = 0, dest = 0, label = 0, sp = 0, src = 0, stop = 0, temp_Int32x4_ptr = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 464|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(464|0);
 $t$i69$i$i$i = sp + 448|0;
 $t$i$i$i$i = sp + 432|0;
 $newhash$i$i$i = sp + 416|0;
 $newnext$i$i$i = sp + 400|0;
 $value$i$sroa$4$sroa$8 = sp + 288|0;
 $value$i$sroa$4$sroa$10 = sp + 272|0;
 $value$i$sroa$4$sroa$11 = sp + 264|0;
 $value$i$i = sp + 200|0;
 $shape$i = sp + 192|0;
 $collision_groups$i = sp + 176|0;
 $rb$sroa$8 = sp + 64|0;
 $rb$sroa$9 = sp + 48|0;
 $rb$sroa$10 = sp + 40|0;
 $shape = sp + 32|0;
 $groups = sp + 16|0;
 $_42 = sp;
 $rb$sroa$0$0$copyload = HEAP32[$1>>2]|0;
 $rb$sroa$4$0$$sroa_idx = ((($1)) + 4|0);
 $rb$sroa$4$0$copyload = HEAP32[$rb$sroa$4$0$$sroa_idx>>2]|0;
 $rb$sroa$5$0$$sroa_idx = ((($1)) + 8|0);
 $rb$sroa$5$0$copyload = SIMD_Int32x4_load(HEAPU8, $rb$sroa$5$0$$sroa_idx);
 $rb$sroa$6$0$$sroa_idx = ((($1)) + 24|0);
 $rb$sroa$6$0$copyload = HEAP32[$rb$sroa$6$0$$sroa_idx>>2]|0;
 $rb$sroa$7$0$$sroa_idx = ((($1)) + 28|0);
 $rb$sroa$7$0$copyload = HEAP32[$rb$sroa$7$0$$sroa_idx>>2]|0;
 $rb$sroa$8$0$$sroa_idx = ((($1)) + 32|0);
 dest=$rb$sroa$8; src=$rb$sroa$8$0$$sroa_idx; stop=dest+112|0; do { HEAP32[dest>>2]=HEAP32[src>>2]|0; dest=dest+4|0; src=src+4|0; } while ((dest|0) < (stop|0));
 $rb$sroa$8346$0$$sroa_idx = ((($1)) + 144|0);
 $rb$sroa$8346$0$copyload = +HEAPF32[$rb$sroa$8346$0$$sroa_idx>>2];
 $rb$sroa$9$0$$sroa_idx = ((($1)) + 148|0);
 ;HEAP32[$rb$sroa$9>>2]=HEAP32[$rb$sroa$9$0$$sroa_idx>>2]|0;HEAP32[$rb$sroa$9+4>>2]=HEAP32[$rb$sroa$9$0$$sroa_idx+4>>2]|0;HEAP32[$rb$sroa$9+8>>2]=HEAP32[$rb$sroa$9$0$$sroa_idx+8>>2]|0;
 $rb$sroa$10$0$$sroa_idx = ((($1)) + 160|0);
 $2 = $rb$sroa$10$0$$sroa_idx;
 $3 = $2;
 $4 = HEAP32[$3>>2]|0;
 $5 = (($2) + 4)|0;
 $6 = $5;
 $7 = HEAP32[$6>>2]|0;
 $8 = $rb$sroa$10;
 $9 = $8;
 HEAP32[$9>>2] = $4;
 $10 = (($8) + 4)|0;
 $11 = $10;
 HEAP32[$11>>2] = $7;
 $12 = HEAP32[$rb$sroa$4$0$copyload>>2]|0;HEAP32[$rb$sroa$4$0$copyload>>2] = (($12+1)|0);
 $13 = ($12|0)<(0);
 if ($13) {
  _llvm_trap();
  // unreachable;
 }
 $14 = $rb$sroa$4$0$copyload;
 HEAP32[$shape>>2] = $14;
 ;HEAP32[$groups>>2]=HEAP32[$rb$sroa$9>>2]|0;HEAP32[$groups+4>>2]=HEAP32[$rb$sroa$9+4>>2]|0;HEAP32[$groups+8>>2]=HEAP32[$rb$sroa$9+8>>2]|0;
 $15 = ((($0)) + 592|0);
 $16 = +HEAPF32[$15>>2];
 $17 = $16 * 0.5;
 $18 = $rb$sroa$8346$0$copyload + $17;
 dest=$value$i$sroa$4$sroa$8; src=$rb$sroa$8; stop=dest+112|0; do { HEAP32[dest>>2]=HEAP32[src>>2]|0; dest=dest+4|0; src=src+4|0; } while ((dest|0) < (stop|0));
 ;HEAP32[$value$i$sroa$4$sroa$10>>2]=HEAP32[$rb$sroa$9>>2]|0;HEAP32[$value$i$sroa$4$sroa$10+4>>2]=HEAP32[$rb$sroa$9+4>>2]|0;HEAP32[$value$i$sroa$4$sroa$10+8>>2]=HEAP32[$rb$sroa$9+8>>2]|0;
 $19 = $rb$sroa$10;
 $20 = $19;
 $21 = HEAP32[$20>>2]|0;
 $22 = (($19) + 4)|0;
 $23 = $22;
 $24 = HEAP32[$23>>2]|0;
 $25 = $value$i$sroa$4$sroa$11;
 $26 = $25;
 HEAP32[$26>>2] = $21;
 $27 = (($25) + 4)|0;
 $28 = $27;
 HEAP32[$28>>2] = $24;
 $29 = (_malloc(180)|0);
 $30 = ($29|0)==(0|0);
 do {
  if ($30) {
   __THREW__ = 0;
   invoke_v(210);
   $31 = __THREW__; __THREW__ = 0;
   $32 = ___cxa_find_matching_catch_2()|0;
   $33 = tempRet0;
   $personalityslot$sroa$0$2167185 = $32;$personalityslot$sroa$7$2170183 = $33;
  } else {
   $34 = ((($29)) + 4|0);
   HEAP32[$34>>2] = 1;
   $value$i$sroa$0$0$$sroa_idx = ((($29)) + 8|0);
   HEAP32[$value$i$sroa$0$0$$sroa_idx>>2] = 0;
   $value$i$sroa$4$sroa$0$0$value$i$sroa$4$0$$sroa_raw_idx$sroa_idx = ((($29)) + 12|0);
   HEAP32[$value$i$sroa$4$sroa$0$0$value$i$sroa$4$0$$sroa_raw_idx$sroa_idx>>2] = $rb$sroa$0$0$copyload;
   $value$i$sroa$4$sroa$4$0$value$i$sroa$4$0$$sroa_raw_idx$sroa_idx = ((($29)) + 16|0);
   HEAP32[$value$i$sroa$4$sroa$4$0$value$i$sroa$4$0$$sroa_raw_idx$sroa_idx>>2] = $rb$sroa$4$0$copyload;
   $value$i$sroa$4$sroa$5$0$value$i$sroa$4$0$$sroa_raw_idx$sroa_idx = ((($29)) + 20|0);
   temp_Int32x4_ptr = $value$i$sroa$4$sroa$5$0$value$i$sroa$4$0$$sroa_raw_idx$sroa_idx;SIMD_Int32x4_store(HEAPU8, temp_Int32x4_ptr, $rb$sroa$5$0$copyload);
   $value$i$sroa$4$sroa$6$0$value$i$sroa$4$0$$sroa_raw_idx$sroa_idx = ((($29)) + 36|0);
   HEAP32[$value$i$sroa$4$sroa$6$0$value$i$sroa$4$0$$sroa_raw_idx$sroa_idx>>2] = $rb$sroa$6$0$copyload;
   $value$i$sroa$4$sroa$7$0$value$i$sroa$4$0$$sroa_raw_idx$sroa_idx = ((($29)) + 40|0);
   HEAP32[$value$i$sroa$4$sroa$7$0$value$i$sroa$4$0$$sroa_raw_idx$sroa_idx>>2] = $rb$sroa$7$0$copyload;
   $value$i$sroa$4$sroa$8$0$value$i$sroa$4$0$$sroa_raw_idx$sroa_raw_idx = ((($29)) + 44|0);
   dest=$value$i$sroa$4$sroa$8$0$value$i$sroa$4$0$$sroa_raw_idx$sroa_raw_idx; src=$value$i$sroa$4$sroa$8; stop=dest+112|0; do { HEAP32[dest>>2]=HEAP32[src>>2]|0; dest=dest+4|0; src=src+4|0; } while ((dest|0) < (stop|0));
   $value$i$sroa$4$sroa$9$0$value$i$sroa$4$0$$sroa_raw_idx$sroa_idx = ((($29)) + 156|0);
   HEAPF32[$value$i$sroa$4$sroa$9$0$value$i$sroa$4$0$$sroa_raw_idx$sroa_idx>>2] = $rb$sroa$8346$0$copyload;
   $value$i$sroa$4$sroa$10$0$value$i$sroa$4$0$$sroa_raw_idx$sroa_raw_idx = ((($29)) + 160|0);
   ;HEAP32[$value$i$sroa$4$sroa$10$0$value$i$sroa$4$0$$sroa_raw_idx$sroa_raw_idx>>2]=HEAP32[$value$i$sroa$4$sroa$10>>2]|0;HEAP32[$value$i$sroa$4$sroa$10$0$value$i$sroa$4$0$$sroa_raw_idx$sroa_raw_idx+4>>2]=HEAP32[$value$i$sroa$4$sroa$10+4>>2]|0;HEAP32[$value$i$sroa$4$sroa$10$0$value$i$sroa$4$0$$sroa_raw_idx$sroa_raw_idx+8>>2]=HEAP32[$value$i$sroa$4$sroa$10+8>>2]|0;
   $value$i$sroa$4$sroa$11$0$value$i$sroa$4$0$$sroa_raw_idx$sroa_raw_idx = ((($29)) + 172|0);
   $35 = $value$i$sroa$4$sroa$11;
   $36 = $35;
   $37 = HEAP32[$36>>2]|0;
   $38 = (($35) + 4)|0;
   $39 = $38;
   $40 = HEAP32[$39>>2]|0;
   $41 = $value$i$sroa$4$sroa$11$0$value$i$sroa$4$0$$sroa_raw_idx$sroa_raw_idx;
   $42 = $41;
   HEAP32[$42>>2] = $37;
   $43 = (($41) + 4)|0;
   $44 = $43;
   HEAP32[$44>>2] = $40;
   $45 = $29;
   $46 = $value$i$sroa$0$0$$sroa_idx;
   HEAP32[$29>>2] = 2;
   $47 = $46 << 15;
   $48 = $47 ^ -1;
   $49 = (($46) + ($48))|0;
   $50 = $49 >>> 10;
   $51 = $50 ^ $49;
   $52 = ($51*9)|0;
   $53 = $52 >>> 6;
   $54 = $53 ^ $52;
   $55 = $54 << 11;
   $56 = $55 ^ -1;
   $57 = (($54) + ($56))|0;
   $58 = $57 >>> 16;
   $59 = $58 ^ $57;
   $60 = ((($0)) + 176|0);
   $61 = HEAP32[$60>>2]|0;
   $62 = $61 & $59;
   $$idx14$i$i$i = ((($0)) + 188|0);
   $$idx14$val$i$i$i = HEAP32[$$idx14$i$i$i>>2]|0;
   $63 = ($$idx14$val$i$i$i>>>0)>($62>>>0);
   L7: do {
    if ($63) {
     $$idx13$i$i$i = ((($0)) + 180|0);
     $$idx13$val$i$i$i = HEAP32[$$idx13$i$i$i>>2]|0;
     $65 = (($$idx13$val$i$i$i) + ($62<<2)|0);
     $66 = HEAP32[$65>>2]|0;
     $67 = ($66|0)==(-1);
     L9: do {
      if ($67) {
       label = 19;
      } else {
       $$idx18$i$i$i = ((($0)) + 172|0);
       $$idx18$val$i$i$i = HEAP32[$$idx18$i$i$i>>2]|0;
       $68 = ($$idx18$val$i$i$i>>>0)>($66>>>0);
       if (!($68)) {
        __THREW__ = 0;
        invoke_viiiii(214,(12236|0),104,1349,($66|0),($$idx18$val$i$i$i|0));
        $69 = __THREW__; __THREW__ = 0;
        label = 82;
        break L7;
       }
       $$idx17$i$i$i = ((($0)) + 164|0);
       $$idx17$val$i$i$i = HEAP32[$$idx17$i$i$i>>2]|0;
       $70 = (($$idx17$val$i$i$i) + ($66<<3)|0);
       $$val21$i$i$i70 = HEAP32[$70>>2]|0;
       $71 = ($$val21$i$i$i70|0)==($46|0);
       L14: do {
        if ($71) {
         $pos$1$i$i$i = $66;
        } else {
         $$idx11$i$i$i = ((($0)) + 192|0);
         $$idx12$i$i$i = ((($0)) + 200|0);
         $$idx12$val$i$i$i = HEAP32[$$idx12$i$i$i>>2]|0;
         $$idx11$val$i$i$i = HEAP32[$$idx11$i$i$i>>2]|0;
         $pos$0$i$i$i = $66;
         while(1) {
          $72 = ($$idx12$val$i$i$i>>>0)>($pos$0$i$i$i>>>0);
          if (!($72)) {
           label = 14;
           break;
          }
          $74 = (($$idx11$val$i$i$i) + ($pos$0$i$i$i<<2)|0);
          $75 = HEAP32[$74>>2]|0;
          $76 = ($75|0)==(-1);
          if ($76) {
           label = 19;
           break L9;
          }
          $77 = ($$idx18$val$i$i$i>>>0)>($75>>>0);
          if (!($77)) {
           label = 17;
           break;
          }
          $79 = (($$idx17$val$i$i$i) + ($75<<3)|0);
          $$val19$i$i$i = HEAP32[$79>>2]|0;
          $80 = ($$val19$i$i$i|0)==($46|0);
          if ($80) {
           $pos$1$i$i$i = $75;
           break L14;
          } else {
           $pos$0$i$i$i = $75;
          }
         }
         if ((label|0) == 14) {
          __THREW__ = 0;
          invoke_viiiii(214,(12236|0),104,1349,($pos$0$i$i$i|0),($$idx12$val$i$i$i|0));
          $73 = __THREW__; __THREW__ = 0;
          label = 82;
          break L7;
         }
         else if ((label|0) == 17) {
          __THREW__ = 0;
          invoke_viiiii(214,(12236|0),104,1349,($75|0),($$idx18$val$i$i$i|0));
          $78 = __THREW__; __THREW__ = 0;
          label = 82;
          break L7;
         }
        }
       } while(0);
       $195 = ($$idx18$val$i$i$i>>>0)>($pos$1$i$i$i>>>0);
       if (!($195)) {
        __THREW__ = 0;
        invoke_viiiii(214,(12236|0),104,1358,($pos$1$i$i$i|0),($$idx18$val$i$i$i|0));
        $196 = __THREW__; __THREW__ = 0;
        $197 = ___cxa_find_matching_catch_2()|0;
        $198 = tempRet0;
        $199 = HEAP32[$29>>2]|0;
        $200 = (($199) + -1)|0;
        HEAP32[$29>>2] = $200;
        $201 = ($200|0)==(0);
        if (!($201)) {
         $extract$t47173 = 1;$personalityslot$sroa$0$2168 = $197;$personalityslot$sroa$7$2171 = $198;
         break L7;
        }
        $250 = HEAP32[$value$i$sroa$4$sroa$4$0$value$i$sroa$4$0$$sroa_raw_idx$sroa_idx>>2]|0;
        $251 = HEAP32[$250>>2]|0;HEAP32[$250>>2] = (($251-1)|0);
        $252 = ($251|0)==(1);
        if ($252) {
         /* fence */;
         __THREW__ = 0;
         invoke_vi(241,($value$i$sroa$4$sroa$4$0$value$i$sroa$4$0$$sroa_raw_idx$sroa_idx|0));
         $253 = __THREW__; __THREW__ = 0;
         $254 = $253&1;
         if ($254) {
          $_52$3$ph = 1;
          label = 150;
          break L7;
         }
        }
        $255 = HEAP32[$value$i$sroa$4$sroa$11$0$value$i$sroa$4$0$$sroa_raw_idx$sroa_raw_idx>>2]|0;
        $switchtmp$i$i$i$i$i$i43$i$i = ($255|0)==(0|0);
        if (!($switchtmp$i$i$i$i$i$i43$i$i)) {
         $$idx1$i$i$i$i$i$i$i45$i$i = ((($29)) + 176|0);
         $$idx1$val$i$i$i$i$i$i$i46$i$i = HEAP32[$$idx1$i$i$i$i$i$i$i45$i$i>>2]|0;
         $$idx1$val$val$i$i$i$i$i$i$i47$i$i = HEAP32[$$idx1$val$i$i$i$i$i$i$i46$i$i>>2]|0;
         __THREW__ = 0;
         invoke_vi($$idx1$val$val$i$i$i$i$i$i$i47$i$i|0,($255|0));
         $256 = __THREW__; __THREW__ = 0;
         $257 = $256&1;
         if ($257) {
          $_52$3$ph = 1;
          label = 150;
          break L7;
         }
         $258 = HEAP32[$$idx1$i$i$i$i$i$i$i45$i$i>>2]|0;
         $259 = ((($258)) + 4|0);
         $260 = HEAP32[$259>>2]|0;
         $261 = ($260|0)==(0);
         if (!($261)) {
          _free($255);
         }
        }
        $262 = HEAP32[$34>>2]|0;
        $263 = (($262) + -1)|0;
        HEAP32[$34>>2] = $263;
        $264 = ($263|0)==(0);
        if (!($264)) {
         $extract$t47173 = 1;$personalityslot$sroa$0$2168 = $197;$personalityslot$sroa$7$2171 = $198;
         break L7;
        }
        _free($29);
        $extract$t47173 = 1;$personalityslot$sroa$0$2168 = $197;$personalityslot$sroa$7$2171 = $198;
        break L7;
       }
       $202 = (((($$idx17$val$i$i$i) + ($pos$1$i$i$i<<3)|0)) + 4|0);
       $203 = HEAP32[$202>>2]|0;
       $204 = HEAP32[$203>>2]|0;
       $205 = (($204) + -1)|0;
       HEAP32[$203>>2] = $205;
       $$idx$val$i$i = HEAP32[$202>>2]|0;
       $206 = HEAP32[$$idx$val$i$i>>2]|0;
       $207 = ($206|0)==(0);
       L38: do {
        if ($207) {
         $208 = ((($203)) + 16|0);
         $209 = HEAP32[$208>>2]|0;
         $210 = HEAP32[$209>>2]|0;HEAP32[$209>>2] = (($210-1)|0);
         $211 = ($210|0)==(1);
         if ($211) {
          /* fence */;
          __THREW__ = 0;
          invoke_vi(241,($208|0));
          $212 = __THREW__; __THREW__ = 0;
          $213 = $212&1;
          if (!($213)) {
           label = 66;
          }
         } else {
          label = 66;
         }
         do {
          if ((label|0) == 66) {
           $214 = ((($203)) + 172|0);
           $215 = HEAP32[$214>>2]|0;
           $switchtmp$i$i$i$i$i$i284 = ($215|0)==(0|0);
           if (!($switchtmp$i$i$i$i$i$i284)) {
            $$idx1$i$i$i$i$i$i$i286 = ((($203)) + 176|0);
            $$idx1$val$i$i$i$i$i$i$i287 = HEAP32[$$idx1$i$i$i$i$i$i$i286>>2]|0;
            $$idx1$val$val$i$i$i$i$i$i$i288 = HEAP32[$$idx1$val$i$i$i$i$i$i$i287>>2]|0;
            __THREW__ = 0;
            invoke_vi($$idx1$val$val$i$i$i$i$i$i$i288|0,($215|0));
            $216 = __THREW__; __THREW__ = 0;
            $217 = $216&1;
            if ($217) {
             break;
            }
            $218 = HEAP32[$$idx1$i$i$i$i$i$i$i286>>2]|0;
            $219 = ((($218)) + 4|0);
            $220 = HEAP32[$219>>2]|0;
            $221 = ($220|0)==(0);
            if (!($221)) {
             _free($215);
            }
           }
           $$idx3$val$i$i = HEAP32[$202>>2]|0;
           $222 = ((($$idx3$val$i$i)) + 4|0);
           $223 = HEAP32[$222>>2]|0;
           $224 = (($223) + -1)|0;
           HEAP32[$222>>2] = $224;
           $$idx2$val$i$i = HEAP32[$202>>2]|0;
           $225 = ((($$idx2$val$i$i)) + 4|0);
           $226 = HEAP32[$225>>2]|0;
           $227 = ($226|0)==(0);
           if (!($227)) {
            break L38;
           }
           _free($203);
           break L38;
          }
         } while(0);
         $265 = ___cxa_find_matching_catch_2()|0;
         $266 = tempRet0;
         HEAP32[$202>>2] = $45;
         $extract$t47173 = 1;$personalityslot$sroa$0$2168 = $265;$personalityslot$sroa$7$2171 = $266;
         break L7;
        }
       } while(0);
       HEAP32[$202>>2] = $45;
      }
     } while(0);
     if ((label|0) == 19) {
      $81 = ((($0)) + 204|0);
      $82 = HEAP32[$81>>2]|0;
      $83 = ((($0)) + 212|0);
      $84 = HEAP32[$83>>2]|0;
      $85 = ($82>>>0)<($84>>>0);
      L54: do {
       if ($85) {
        $$idx10$val$i$i = $$idx14$val$i$i$i;$148 = $61;
       } else {
        $86 = ((($0)) + 208|0);
        $87 = HEAP32[$86>>2]|0;
        $88 = $87 << 1;
        HEAP32[$86>>2] = $88;
        $89 = (+($88>>>0));
        $90 = $89 * 0.69999998807907104;
        $91 = (~~(($90))>>>0);
        HEAP32[$83>>2] = $91;
        $92 = (($88) + -1)|0;
        HEAP32[$60>>2] = $92;
        __THREW__ = 0;
        invoke_vii(211,($newhash$i$i$i|0),($88|0));
        $93 = __THREW__; __THREW__ = 0;
        $94 = $93&1;
        if ($94) {
         $139 = ___cxa_find_matching_catch_2()|0;
         $140 = tempRet0;
         $$fca$0$extract70$i$i = $139;$$fca$1$extract71$i$i = $140;
         label = 72;
         break L7;
        }
        $95 = HEAP32[$86>>2]|0;
        __THREW__ = 0;
        invoke_vii(211,($newnext$i$i$i|0),($95|0));
        $96 = __THREW__; __THREW__ = 0;
        $97 = $96&1;
        L59: do {
         if ($97) {
          $145 = ___cxa_find_matching_catch_2()|0;
          $146 = tempRet0;
          $$fca$0$extract2493$i$i$i = $145;$$fca$1$extract2695$i$i$i = $146;
         } else {
          $98 = HEAP32[$81>>2]|0;
          $99 = ($98|0)==(0);
          L62: do {
           if (!($99)) {
            $$idx49$i$i$i = ((($0)) + 172|0);
            $$idx$i$i$i = ((($0)) + 164|0);
            $newhash$idx48$i$i$i = ((($newhash$i$i$i)) + 8|0);
            $newhash$idx48$val$i$i$i = HEAP32[$newhash$idx48$i$i$i>>2]|0;
            $newnext$idx55$i$i$i = ((($newnext$i$i$i)) + 8|0);
            $newnext$idx55$val$i$i$i = HEAP32[$newnext$idx55$i$i$i>>2]|0;
            $newnext$idx$val$i$i$i = HEAP32[$newnext$i$i$i>>2]|0;
            $newhash$idx$val$i$i$i = HEAP32[$newhash$i$i$i>>2]|0;
            $125 = 1;$iter$sroa$0$0109$i$i$i = 0;
            while(1) {
             $$idx49$val$i$i$i = HEAP32[$$idx49$i$i$i>>2]|0;
             $100 = ($$idx49$val$i$i$i>>>0)>($iter$sroa$0$0109$i$i$i>>>0);
             if (!($100)) {
              label = 25;
              break;
             }
             $$idx$val$i$i$i = HEAP32[$$idx$i$i$i>>2]|0;
             $102 = (($$idx$val$i$i$i) + ($iter$sroa$0$0109$i$i$i<<3)|0);
             $$val$i$i$i = HEAP32[$102>>2]|0;
             $103 = $$val$i$i$i << 15;
             $104 = $103 ^ -1;
             $105 = (($$val$i$i$i) + ($104))|0;
             $106 = $105 >>> 10;
             $107 = $106 ^ $105;
             $108 = ($107*9)|0;
             $109 = $108 >>> 6;
             $110 = $109 ^ $108;
             $111 = $110 << 11;
             $112 = $111 ^ -1;
             $113 = (($110) + ($112))|0;
             $114 = $113 >>> 16;
             $115 = $114 ^ $113;
             $116 = HEAP32[$60>>2]|0;
             $117 = $115 & $116;
             $118 = ($newhash$idx48$val$i$i$i>>>0)>($117>>>0);
             if (!($118)) {
              label = 27;
              break;
             }
             $120 = ($newnext$idx55$val$i$i$i>>>0)>($iter$sroa$0$0109$i$i$i>>>0);
             if (!($120)) {
              label = 29;
              break;
             }
             $122 = (($newhash$idx$val$i$i$i) + ($117<<2)|0);
             $123 = HEAP32[$122>>2]|0;
             $124 = (($newnext$idx$val$i$i$i) + ($iter$sroa$0$0109$i$i$i<<2)|0);
             HEAP32[$124>>2] = $123;
             HEAP32[$122>>2] = $iter$sroa$0$0109$i$i$i;
             $126 = ($125>>>0)<($98>>>0);
             $127 = (($125) + 1)|0;
             if ($126) {
              $iter$sroa$0$0109$i$i$i$phi = $125;$125 = $127;$iter$sroa$0$0109$i$i$i = $iter$sroa$0$0109$i$i$i$phi;
             } else {
              break L62;
             }
            }
            if ((label|0) == 25) {
             __THREW__ = 0;
             invoke_viiiii(214,(12236|0),104,1349,($iter$sroa$0$0109$i$i$i|0),($$idx49$val$i$i$i|0));
             $101 = __THREW__; __THREW__ = 0;
            }
            else if ((label|0) == 27) {
             __THREW__ = 0;
             invoke_viiiii(214,(12236|0),104,1349,($117|0),($newhash$idx48$val$i$i$i|0));
             $119 = __THREW__; __THREW__ = 0;
            }
            else if ((label|0) == 29) {
             __THREW__ = 0;
             invoke_viiiii(214,(12236|0),104,1358,($iter$sroa$0$0109$i$i$i|0),($newnext$idx55$val$i$i$i|0));
             $121 = __THREW__; __THREW__ = 0;
            }
            $141 = ___cxa_find_matching_catch_2()|0;
            $142 = tempRet0;
            $143 = ((($newnext$i$i$i)) + 4|0);
            $144 = HEAP32[$143>>2]|0;
            $not$$i$i$i$i$i$i$i = ($144|0)==(0);
            if ($not$$i$i$i$i$i$i$i) {
             $$fca$0$extract2493$i$i$i = $141;$$fca$1$extract2695$i$i$i = $142;
             break L59;
            }
            _free($newnext$idx$val$i$i$i);
            $$fca$0$extract2493$i$i$i = $141;$$fca$1$extract2695$i$i$i = $142;
            break L59;
           }
          } while(0);
          $128 = ((($0)) + 180|0);
          ;HEAP32[$t$i69$i$i$i>>2]=HEAP32[$newhash$i$i$i>>2]|0;HEAP32[$t$i69$i$i$i+4>>2]=HEAP32[$newhash$i$i$i+4>>2]|0;HEAP32[$t$i69$i$i$i+8>>2]=HEAP32[$newhash$i$i$i+8>>2]|0;
          ;HEAP32[$newhash$i$i$i>>2]=HEAP32[$128>>2]|0;HEAP32[$newhash$i$i$i+4>>2]=HEAP32[$128+4>>2]|0;HEAP32[$newhash$i$i$i+8>>2]=HEAP32[$128+8>>2]|0;
          ;HEAP32[$128>>2]=HEAP32[$t$i69$i$i$i>>2]|0;HEAP32[$128+4>>2]=HEAP32[$t$i69$i$i$i+4>>2]|0;HEAP32[$128+8>>2]=HEAP32[$t$i69$i$i$i+8>>2]|0;
          $129 = ((($0)) + 192|0);
          ;HEAP32[$t$i$i$i$i>>2]=HEAP32[$newnext$i$i$i>>2]|0;HEAP32[$t$i$i$i$i+4>>2]=HEAP32[$newnext$i$i$i+4>>2]|0;HEAP32[$t$i$i$i$i+8>>2]=HEAP32[$newnext$i$i$i+8>>2]|0;
          ;HEAP32[$newnext$i$i$i>>2]=HEAP32[$129>>2]|0;HEAP32[$newnext$i$i$i+4>>2]=HEAP32[$129+4>>2]|0;HEAP32[$newnext$i$i$i+8>>2]=HEAP32[$129+8>>2]|0;
          ;HEAP32[$129>>2]=HEAP32[$t$i$i$i$i>>2]|0;HEAP32[$129+4>>2]=HEAP32[$t$i$i$i$i+4>>2]|0;HEAP32[$129+8>>2]=HEAP32[$t$i$i$i$i+8>>2]|0;
          $130 = ((($newnext$i$i$i)) + 4|0);
          $131 = HEAP32[$130>>2]|0;
          $not$$i$i$i$i62$i$i$i = ($131|0)==(0);
          if (!($not$$i$i$i$i62$i$i$i)) {
           $132 = HEAP32[$newnext$i$i$i>>2]|0;
           _free($132);
          }
          $133 = ((($newhash$i$i$i)) + 4|0);
          $134 = HEAP32[$133>>2]|0;
          $not$$i$i$i$i59$i$i$i = ($134|0)==(0);
          if (!($not$$i$i$i$i59$i$i$i)) {
           $135 = HEAP32[$newhash$i$i$i>>2]|0;
           _free($135);
          }
          $$pre$i$i72 = HEAP32[$60>>2]|0;
          $$idx10$val$pre$i$i = HEAP32[$$idx14$i$i$i>>2]|0;
          $$idx10$val$i$i = $$idx10$val$pre$i$i;$148 = $$pre$i$i72;
          break L54;
         }
        } while(0);
        $136 = ((($newhash$i$i$i)) + 4|0);
        $137 = HEAP32[$136>>2]|0;
        $not$$i$i$i$i56$i$i$i = ($137|0)==(0);
        if ($not$$i$i$i$i56$i$i$i) {
         $$fca$0$extract70$i$i = $$fca$0$extract2493$i$i$i;$$fca$1$extract71$i$i = $$fca$1$extract2695$i$i$i;
         label = 72;
         break L7;
        }
        $138 = HEAP32[$newhash$i$i$i>>2]|0;
        _free($138);
        $$fca$0$extract70$i$i = $$fca$0$extract2493$i$i$i;$$fca$1$extract71$i$i = $$fca$1$extract2695$i$i$i;
        label = 72;
        break L7;
       }
      } while(0);
      $147 = $148 & $59;
      $149 = ($$idx10$val$i$i>>>0)>($147>>>0);
      if (!($149)) {
       __THREW__ = 0;
       invoke_viiiii(214,(12236|0),104,1349,($147|0),($$idx10$val$i$i|0));
       $150 = __THREW__; __THREW__ = 0;
       label = 82;
       break;
      }
      $151 = HEAP32[$81>>2]|0;
      $$idx15$i$i = ((($0)) + 200|0);
      $$idx15$val$i$i = HEAP32[$$idx15$i$i>>2]|0;
      $152 = ($$idx15$val$i$i>>>0)>($151>>>0);
      if (!($152)) {
       __THREW__ = 0;
       invoke_viiiii(214,(12236|0),104,1358,($151|0),($$idx15$val$i$i|0));
       $153 = __THREW__; __THREW__ = 0;
       label = 82;
       break;
      }
      $$idx14$i$i = ((($0)) + 192|0);
      $$idx14$val$i$i = HEAP32[$$idx14$i$i>>2]|0;
      $$idx$val$i$i73 = HEAP32[$$idx13$i$i$i>>2]|0;
      $154 = (($$idx$val$i$i73) + ($147<<2)|0);
      $155 = HEAP32[$154>>2]|0;
      $156 = (($$idx14$val$i$i) + ($151<<2)|0);
      HEAP32[$156>>2] = $155;
      $$idx13$val$i$i = HEAP32[$$idx14$i$i$i>>2]|0;
      $157 = ($$idx13$val$i$i>>>0)>($147>>>0);
      if (!($157)) {
       __THREW__ = 0;
       invoke_viiiii(214,(12236|0),104,1358,($147|0),($$idx13$val$i$i|0));
       $158 = __THREW__; __THREW__ = 0;
       label = 82;
       break;
      }
      $$idx12$val$i$i = HEAP32[$$idx13$i$i$i>>2]|0;
      $159 = HEAP32[$81>>2]|0;
      $160 = (($$idx12$val$i$i) + ($147<<2)|0);
      HEAP32[$160>>2] = $159;
      $161 = ((($0)) + 164|0);
      $162 = ((($0)) + 172|0);
      $163 = HEAP32[$162>>2]|0;
      $$idx$i29$i$i = ((($0)) + 168|0);
      $$idx$val$i30$i$i = HEAP32[$$idx$i29$i$i>>2]|0;
      $164 = ($163|0)==($$idx$val$i30$i$i|0);
      do {
       if ($164) {
        __THREW__ = 0;
        invoke_vi(245,($161|0));
        $165 = __THREW__; __THREW__ = 0;
        $166 = $165&1;
        if (!($166)) {
         $$pre$i$i$i = HEAP32[$162>>2]|0;
         $189 = $$pre$i$i$i;
         break;
        }
        $167 = ___cxa_find_matching_catch_2()|0;
        $168 = tempRet0;
        $169 = HEAP32[$29>>2]|0;
        $170 = (($169) + -1)|0;
        HEAP32[$29>>2] = $170;
        $171 = ($170|0)==(0);
        L99: do {
         if ($171) {
          $172 = HEAP32[$value$i$sroa$4$sroa$4$0$value$i$sroa$4$0$$sroa_raw_idx$sroa_idx>>2]|0;
          $173 = HEAP32[$172>>2]|0;HEAP32[$172>>2] = (($173-1)|0);
          $174 = ($173|0)==(1);
          if ($174) {
           /* fence */;
           __THREW__ = 0;
           invoke_vi(241,($value$i$sroa$4$sroa$4$0$value$i$sroa$4$0$$sroa_raw_idx$sroa_idx|0));
           $175 = __THREW__; __THREW__ = 0;
           $176 = $175&1;
           if (!($176)) {
            label = 54;
           }
          } else {
           label = 54;
          }
          L103: do {
           if ((label|0) == 54) {
            $177 = HEAP32[$value$i$sroa$4$sroa$11$0$value$i$sroa$4$0$$sroa_raw_idx$sroa_raw_idx>>2]|0;
            $switchtmp$i$i$i$i$i$i$i$i$i = ($177|0)==(0|0);
            do {
             if (!($switchtmp$i$i$i$i$i$i$i$i$i)) {
              $$idx1$i$i$i$i$i$i$i$i$i$i = ((($29)) + 176|0);
              $$idx1$val$i$i$i$i$i$i$i$i$i$i = HEAP32[$$idx1$i$i$i$i$i$i$i$i$i$i>>2]|0;
              $$idx1$val$val$i$i$i$i$i$i$i$i$i$i = HEAP32[$$idx1$val$i$i$i$i$i$i$i$i$i$i>>2]|0;
              __THREW__ = 0;
              invoke_vi($$idx1$val$val$i$i$i$i$i$i$i$i$i$i|0,($177|0));
              $178 = __THREW__; __THREW__ = 0;
              $179 = $178&1;
              if ($179) {
               break L103;
              }
              $180 = HEAP32[$$idx1$i$i$i$i$i$i$i$i$i$i>>2]|0;
              $181 = ((($180)) + 4|0);
              $182 = HEAP32[$181>>2]|0;
              $183 = ($182|0)==(0);
              if ($183) {
               break;
              }
              _free($177);
             }
            } while(0);
            $184 = HEAP32[$34>>2]|0;
            $185 = (($184) + -1)|0;
            HEAP32[$34>>2] = $185;
            $186 = ($185|0)==(0);
            if (!($186)) {
             break L99;
            }
            _free($29);
            break L99;
           }
          } while(0);
          $248 = ___cxa_find_matching_catch_2()|0;
          $249 = tempRet0;
          $extract$t47173 = 1;$personalityslot$sroa$0$2168 = $248;$personalityslot$sroa$7$2171 = $249;
          break L7;
         }
        } while(0);
        $extract$t47173 = 1;$personalityslot$sroa$0$2168 = $167;$personalityslot$sroa$7$2171 = $168;
        break L7;
       } else {
        $189 = $163;
       }
      } while(0);
      $187 = HEAP32[$161>>2]|0;
      $188 = (($187) + ($189<<3)|0);
      HEAP32[$188>>2] = $46;
      $190 = (((($187) + ($189<<3)|0)) + 4|0);
      HEAP32[$190>>2] = $45;
      $191 = HEAP32[$162>>2]|0;
      $192 = (($191) + 1)|0;
      HEAP32[$162>>2] = $192;
      $193 = HEAP32[$81>>2]|0;
      $194 = (($193) + 1)|0;
      HEAP32[$81>>2] = $194;
     }
     ;HEAP32[$_42>>2]=HEAP32[$groups>>2]|0;HEAP32[$_42+4>>2]=HEAP32[$groups+4>>2]|0;HEAP32[$_42+8>>2]=HEAP32[$groups+8>>2]|0;
     $267 = HEAP32[$29>>2]|0;
     $$arith = (($267) + 1)|0;
     $$overflow = ($267>>>0)>(4294967294);
     if ($$overflow) {
      _llvm_trap();
      // unreachable;
     }
     HEAP32[$29>>2] = $$arith;
     HEAP32[$shape$i>>2] = $rb$sroa$4$0$copyload;
     ;HEAP32[$collision_groups$i>>2]=HEAP32[$_42>>2]|0;HEAP32[$collision_groups$i+4>>2]=HEAP32[$_42+4>>2]|0;HEAP32[$collision_groups$i+8>>2]=HEAP32[$_42+8>>2]|0;
     $268 = ((($0)) + 40|0);
     $269 = HEAP32[$268>>2]|0;
     $switchtmp$i$i$i$i = ($269|0)==(0|0);
     L118: do {
      if ($switchtmp$i$i$i$i) {
       $_5$sroa$5$1$i$i$i = $46;
       label = 105;
      } else {
       $$idx = ((($0)) + 16|0);
       $270 = $$idx;
       $271 = $270;
       $272 = HEAP32[$271>>2]|0;
       $273 = (($270) + 4)|0;
       $274 = $273;
       $275 = HEAP32[$274>>2]|0;
       $$idx325 = ((($0)) + 24|0);
       $276 = $$idx325;
       $277 = $276;
       $278 = HEAP32[$277>>2]|0;
       $279 = (($276) + 4)|0;
       $280 = $279;
       $281 = HEAP32[$280>>2]|0;
       $282 = (__ZN72__LT_std__collections__hash__map__HashMap_LT_K_C__u20_V_C__u20_S_GT__GT_9make_hash17he80a4aab712026bfE($272,$275,$278,$281,$46)|0);
       $283 = tempRet0;
       $$idx$i$i$i$i$i$i$i = ((($0)) + 32|0);
       $$idx$val$i$i$i$i$i$i$i = HEAP32[$$idx$i$i$i$i$i$i$i>>2]|0;
       $284 = ($$idx$val$i$i$i$i$i$i$i|0)==(0);
       if ($284) {
        label = 108;
       } else {
        $285 = (($$idx$val$i$i$i$i$i$i$i) + -1)|0;
        $286 = $285 & $282;
        $287 = (($269) + ($286<<3)|0);
        $288 = $287;
        $289 = $288;
        $290 = HEAP32[$289>>2]|0;
        $291 = (($288) + 4)|0;
        $292 = $291;
        $293 = HEAP32[$292>>2]|0;
        $294 = ($290|0)==(0);
        $295 = ($293|0)==(0);
        $296 = $294 & $295;
        if ($296) {
         label = 108;
        } else {
         $297 = (($269) + ($$idx$val$i$i$i$i$i$i$i<<3)|0);
         $298 = (($297) + ($286<<3)|0);
         $299 = (1 - ($$idx$val$i$i$i$i$i$i$i))|0;
         $$in$i$i$i$i$i = $298;$$sink237250$i$i$i$i$i$i$i = $287;$301 = $290;$306 = $293;$probe$sroa$8$0252$i$i$i$i$i$i$i = $286;
         while(1) {
          $300 = (($probe$sroa$8$0252$i$i$i$i$i$i$i) - ($301))|0;
          $302 = $300 & $285;
          $303 = (($probe$sroa$8$0252$i$i$i$i$i$i$i) - ($302))|0;
          $304 = ($286|0)<($303|0);
          if ($304) {
           label = 108;
           break L118;
          }
          $305 = ($301|0)==($282|0);
          $307 = ($306|0)==($283|0);
          $308 = $305 & $307;
          if ($308) {
           $$val$i$i$i$i$i$i$i = HEAP32[$$in$i$i$i$i$i>>2]|0;
           $309 = ($$val$i$i$i$i$i$i$i|0)==($46|0);
           if ($309) {
            break;
           }
          }
          $310 = (($probe$sroa$8$0252$i$i$i$i$i$i$i) + 1)|0;
          $311 = $310 & $285;
          $312 = ($311|0)==(0);
          $dist$0$i$i$i$i$i$i$i$i$i = $312 ? $299 : 1;
          $313 = (($$sink237250$i$i$i$i$i$i$i) + ($dist$0$i$i$i$i$i$i$i$i$i<<3)|0);
          $314 = (($$in$i$i$i$i$i) + ($dist$0$i$i$i$i$i$i$i$i$i<<3)|0);
          $315 = $313;
          $316 = $315;
          $317 = HEAP32[$316>>2]|0;
          $318 = (($315) + 4)|0;
          $319 = $318;
          $320 = HEAP32[$319>>2]|0;
          $321 = ($317|0)==(0);
          $322 = ($320|0)==(0);
          $323 = $321 & $322;
          if ($323) {
           label = 108;
           break L118;
          } else {
           $$in$i$i$i$i$i = $314;$$sink237250$i$i$i$i$i$i$i = $313;$301 = $317;$306 = $320;$probe$sroa$8$0252$i$i$i$i$i$i$i = $310;
          }
         }
         $$idx$i$i$i$i$i$i = ((($$in$i$i$i$i$i)) + 4|0);
         $$idx$val$i$i$i$i$i$i = HEAP32[$$idx$i$i$i$i$i$i>>2]|0;
         $_5$sroa$5$1$i$i$i = $$idx$val$i$i$i$i$i$i;
         label = 105;
        }
       }
      }
     } while(0);
     do {
      if ((label|0) == 105) {
       $$idx$i$i$i$i$i = ((($0)) + 8|0);
       $$idx$val$i$i$i$i$i = HEAP32[$$idx$i$i$i$i$i>>2]|0;
       $324 = ($$idx$val$i$i$i$i$i>>>0)>($_5$sroa$5$1$i$i$i>>>0);
       if ($324) {
        $$idx1$val$i$i$i$i$i = HEAP32[$0>>2]|0;
        $325 = (($$idx1$val$i$i$i$i$i) + ($_5$sroa$5$1$i$i$i<<6)|0);
        $326 = (((($$idx1$val$i$i$i$i$i) + ($_5$sroa$5$1$i$i$i<<6)|0)) + 28|0);
        $327 = HEAP32[$326>>2]|0;
        $phitmp2$i$i = ($325|0)!=(0|0);
        $not$switchtmp$i$i$i$i$i = ($327|0)!=(0|0);
        $phitmp$i$i = $phitmp2$i$i & $not$switchtmp$i$i$i$i$i;
        if ($phitmp$i$i) {
         __THREW__ = 0;
         invoke_viii(225,(12578|0),57,(5364|0));
         $328 = __THREW__; __THREW__ = 0;
         $329 = ___cxa_find_matching_catch_2()|0;
         $330 = tempRet0;
         $331 = HEAP32[$29>>2]|0;
         $332 = (($331) + -1)|0;
         HEAP32[$29>>2] = $332;
         $333 = ($332|0)==(0);
         if ($333) {
          $390 = HEAP32[$value$i$sroa$4$sroa$4$0$value$i$sroa$4$0$$sroa_raw_idx$sroa_idx>>2]|0;
          $391 = HEAP32[$390>>2]|0;HEAP32[$390>>2] = (($391-1)|0);
          $392 = ($391|0)==(1);
          if ($392) {
           /* fence */;
           __THREW__ = 0;
           invoke_vi(241,($value$i$sroa$4$sroa$4$0$value$i$sroa$4$0$$sroa_raw_idx$sroa_idx|0));
           $393 = __THREW__; __THREW__ = 0;
           $394 = $393&1;
           if ($394) {
            label = 151;
            break;
           }
          }
          $395 = HEAP32[$value$i$sroa$4$sroa$11$0$value$i$sroa$4$0$$sroa_raw_idx$sroa_raw_idx>>2]|0;
          $switchtmp$i$i$i$i$i$i$i = ($395|0)==(0|0);
          if (!($switchtmp$i$i$i$i$i$i$i)) {
           $$idx1$i$i$i$i$i$i$i$i = ((($29)) + 176|0);
           $$idx1$val$i$i$i$i$i$i$i$i = HEAP32[$$idx1$i$i$i$i$i$i$i$i>>2]|0;
           $$idx1$val$val$i$i$i$i$i$i$i$i = HEAP32[$$idx1$val$i$i$i$i$i$i$i$i>>2]|0;
           __THREW__ = 0;
           invoke_vi($$idx1$val$val$i$i$i$i$i$i$i$i|0,($395|0));
           $396 = __THREW__; __THREW__ = 0;
           $397 = $396&1;
           if ($397) {
            label = 151;
            break;
           }
           $398 = HEAP32[$$idx1$i$i$i$i$i$i$i$i>>2]|0;
           $399 = ((($398)) + 4|0);
           $400 = HEAP32[$399>>2]|0;
           $401 = ($400|0)==(0);
           if (!($401)) {
            _free($395);
           }
          }
          $402 = HEAP32[$34>>2]|0;
          $403 = (($402) + -1)|0;
          HEAP32[$34>>2] = $403;
          $404 = ($403|0)==(0);
          if ($404) {
           _free($29);
          }
         }
         $405 = HEAP32[$shape$i>>2]|0;
         $406 = HEAP32[$405>>2]|0;HEAP32[$405>>2] = (($406-1)|0);
         $407 = ($406|0)==(1);
         if ($407) {
          /* fence */;
          __THREW__ = 0;
          invoke_vi(241,($shape$i|0));
          $408 = __THREW__; __THREW__ = 0;
          $409 = $408&1;
          if ($409) {
           label = 151;
          } else {
           $eh$lpad$body$index10Z2D = $330;$eh$lpad$body$indexZ2D = $329;
          }
         } else {
          $eh$lpad$body$index10Z2D = $330;$eh$lpad$body$indexZ2D = $329;
         }
        } else {
         label = 108;
        }
       } else {
        label = 108;
       }
      }
     } while(0);
     L146: do {
      if ((label|0) == 108) {
       $334 = ((($0)) + 152|0);
       $335 = HEAP32[$334>>2]|0;
       $336 = ((($0)) + 140|0);
       HEAP32[$value$i$i>>2] = $46;
       $position$i$sroa$0$0$_35$sroa$4$0$$sroa_cast$i$sroa_idx = ((($value$i$i)) + 4|0);
       temp_Int32x4_ptr = $position$i$sroa$0$0$_35$sroa$4$0$$sroa_cast$i$sroa_idx;SIMD_Int32x4_store(HEAPU8, temp_Int32x4_ptr, $rb$sroa$5$0$copyload);
       $position$i$sroa$7$0$_35$sroa$4$0$$sroa_cast$i$sroa_idx151 = ((($value$i$i)) + 20|0);
       HEAP32[$position$i$sroa$7$0$_35$sroa$4$0$$sroa_cast$i$sroa_idx151>>2] = $rb$sroa$6$0$copyload;
       $position$i$sroa$8$0$_35$sroa$4$0$$sroa_cast$i$sroa_idx153 = ((($value$i$i)) + 24|0);
       HEAP32[$position$i$sroa$8$0$_35$sroa$4$0$$sroa_cast$i$sroa_idx153>>2] = $rb$sroa$7$0$copyload;
       $_35$sroa$5$0$$sroa_idx69$i = ((($value$i$i)) + 28|0);
       HEAP32[$_35$sroa$5$0$$sroa_idx69$i>>2] = $14;
       $_35$sroa$6$0$$sroa_idx$i = ((($value$i$i)) + 32|0);
       ;HEAP32[$_35$sroa$6$0$$sroa_idx$i>>2]=HEAP32[$collision_groups$i>>2]|0;HEAP32[$_35$sroa$6$0$$sroa_idx$i+4>>2]=HEAP32[$collision_groups$i+4>>2]|0;HEAP32[$_35$sroa$6$0$$sroa_idx$i+8>>2]=HEAP32[$collision_groups$i+8>>2]|0;
       $_35$sroa$7$0$$sroa_cast$i$sroa_idx = ((($value$i$i)) + 44|0);
       HEAP32[$_35$sroa$7$0$$sroa_cast$i$sroa_idx>>2] = 0;
       $_35$sroa$7$0$$sroa_cast$i$sroa_idx99 = ((($value$i$i)) + 48|0);
       HEAPF32[$_35$sroa$7$0$$sroa_cast$i$sroa_idx99>>2] = $18;
       $_35$sroa$8$0$$sroa_idx75$i = ((($value$i$i)) + 52|0);
       $337 = $_35$sroa$8$0$$sroa_idx75$i;
       $338 = $337;
       HEAP32[$338>>2] = 0;
       $339 = (($337) + 4)|0;
       $340 = $339;
       HEAP32[$340>>2] = $45;
       $_35$sroa$9$0$$sroa_idx77$i = ((($value$i$i)) + 60|0);
       HEAP32[$_35$sroa$9$0$$sroa_idx77$i>>2] = $335;
       $341 = ((($0)) + 148|0);
       $342 = HEAP32[$341>>2]|0;
       $$idx$i$i = ((($0)) + 144|0);
       $$idx$val$i$i55 = HEAP32[$$idx$i$i>>2]|0;
       $343 = ($342|0)==($$idx$val$i$i55|0);
       do {
        if ($343) {
         __THREW__ = 0;
         invoke_vi(246,($336|0));
         $344 = __THREW__; __THREW__ = 0;
         $345 = $344&1;
         if (!($345)) {
          $$pre$i$i = HEAP32[$341>>2]|0;
          $412 = $$pre$i$i;
          break;
         }
         $346 = ___cxa_find_matching_catch_2()|0;
         $347 = tempRet0;
         $348 = HEAP32[$rb$sroa$4$0$copyload>>2]|0;HEAP32[$rb$sroa$4$0$copyload>>2] = (($348-1)|0);
         $349 = ($348|0)==(1);
         if ($349) {
          $350 = ((($value$i$i)) + 28|0);
          /* fence */;
          __THREW__ = 0;
          invoke_vi(241,($350|0));
          $351 = __THREW__; __THREW__ = 0;
          $352 = $351&1;
          if ($352) {
           label = 151;
           break L146;
          }
         }
         $353 = ((($value$i$i)) + 52|0);
         $354 = HEAP32[$353>>2]|0;
         switch ($354|0) {
         case 0:  {
          break;
         }
         case 1:  {
          $378 = ((($value$i$i)) + 56|0);
          $379 = HEAP32[$378>>2]|0;
          $380 = HEAP32[$379>>2]|0;
          $381 = (($380) + -1)|0;
          HEAP32[$379>>2] = $381;
          $382 = ($381|0)==(0);
          if (!($382)) {
           $eh$lpad$body$index10Z2D = $347;$eh$lpad$body$indexZ2D = $346;
           break L146;
          }
          $383 = ((($379)) + 12|0);
          __THREW__ = 0;
          invoke_vi(247,($383|0));
          $384 = __THREW__; __THREW__ = 0;
          $385 = $384&1;
          if ($385) {
           label = 151;
           break L146;
          }
          $386 = ((($379)) + 4|0);
          $387 = HEAP32[$386>>2]|0;
          $388 = (($387) + -1)|0;
          HEAP32[$386>>2] = $388;
          $389 = ($388|0)==(0);
          if (!($389)) {
           $eh$lpad$body$index10Z2D = $347;$eh$lpad$body$indexZ2D = $346;
           break L146;
          }
          _free($379);
          $eh$lpad$body$index10Z2D = $347;$eh$lpad$body$indexZ2D = $346;
          break L146;
          break;
         }
         default: {
          $eh$lpad$body$index10Z2D = $347;$eh$lpad$body$indexZ2D = $346;
          break L146;
         }
         }
         $355 = ((($value$i$i)) + 56|0);
         $356 = HEAP32[$355>>2]|0;
         $357 = HEAP32[$356>>2]|0;
         $358 = (($357) + -1)|0;
         HEAP32[$356>>2] = $358;
         $359 = ($358|0)==(0);
         if (!($359)) {
          $eh$lpad$body$index10Z2D = $347;$eh$lpad$body$indexZ2D = $346;
          break L146;
         }
         $360 = ((($356)) + 16|0);
         $361 = HEAP32[$360>>2]|0;
         $362 = HEAP32[$361>>2]|0;HEAP32[$361>>2] = (($362-1)|0);
         $363 = ($362|0)==(1);
         if ($363) {
          /* fence */;
          __THREW__ = 0;
          invoke_vi(241,($360|0));
          $364 = __THREW__; __THREW__ = 0;
          $365 = $364&1;
          if ($365) {
           label = 151;
           break L146;
          }
         }
         $366 = ((($356)) + 172|0);
         $367 = HEAP32[$366>>2]|0;
         $switchtmp$i$i$i$i$i$i$i$i = ($367|0)==(0|0);
         if (!($switchtmp$i$i$i$i$i$i$i$i)) {
          $$idx1$i$i$i$i$i$i$i$i$i = ((($356)) + 176|0);
          $$idx1$val$i$i$i$i$i$i$i$i$i = HEAP32[$$idx1$i$i$i$i$i$i$i$i$i>>2]|0;
          $$idx1$val$val$i$i$i$i$i$i$i$i$i = HEAP32[$$idx1$val$i$i$i$i$i$i$i$i$i>>2]|0;
          __THREW__ = 0;
          invoke_vi($$idx1$val$val$i$i$i$i$i$i$i$i$i|0,($367|0));
          $368 = __THREW__; __THREW__ = 0;
          $369 = $368&1;
          if ($369) {
           label = 151;
           break L146;
          }
          $370 = HEAP32[$$idx1$i$i$i$i$i$i$i$i$i>>2]|0;
          $371 = ((($370)) + 4|0);
          $372 = HEAP32[$371>>2]|0;
          $373 = ($372|0)==(0);
          if (!($373)) {
           _free($367);
          }
         }
         $$idx3$val$i$i$i$i = HEAP32[$355>>2]|0;
         $374 = ((($$idx3$val$i$i$i$i)) + 4|0);
         $375 = HEAP32[$374>>2]|0;
         $376 = (($375) + -1)|0;
         HEAP32[$374>>2] = $376;
         $377 = ($376|0)==(0);
         if (!($377)) {
          $eh$lpad$body$index10Z2D = $347;$eh$lpad$body$indexZ2D = $346;
          break L146;
         }
         _free($356);
         $eh$lpad$body$index10Z2D = $347;$eh$lpad$body$indexZ2D = $346;
         break L146;
        } else {
         $412 = $342;
        }
       } while(0);
       $410 = HEAP32[$336>>2]|0;
       $411 = (($410) + ($412<<6)|0);
       dest=$411; src=$value$i$i; stop=dest+64|0; do { HEAP32[dest>>2]=HEAP32[src>>2]|0; dest=dest+4|0; src=src+4|0; } while ((dest|0) < (stop|0));
       $413 = HEAP32[$341>>2]|0;
       $414 = (($413) + 1)|0;
       HEAP32[$341>>2] = $414;
       __THREW__ = 0;
       invoke_vi(248,($0|0));
       $415 = __THREW__; __THREW__ = 0;
       $416 = $415&1;
       if ($416) {
        $_52$3$ph = 0;
        label = 150;
        break L7;
       }
       STACKTOP = sp;return ($45|0);
      }
     } while(0);
     if ((label|0) == 151) {
      $436 = ___cxa_find_matching_catch_2()|0;
      $437 = tempRet0;
      $eh$lpad$body$index10Z2D = $437;$eh$lpad$body$indexZ2D = $436;
     }
     $extract$t47173 = 0;$personalityslot$sroa$0$2168 = $eh$lpad$body$indexZ2D;$personalityslot$sroa$7$2171 = $eh$lpad$body$index10Z2D;
    } else {
     __THREW__ = 0;
     invoke_viiiii(214,(12236|0),104,1349,($62|0),($$idx14$val$i$i$i|0));
     $64 = __THREW__; __THREW__ = 0;
     label = 82;
    }
   } while(0);
   if ((label|0) == 82) {
    $246 = ___cxa_find_matching_catch_2()|0;
    $247 = tempRet0;
    $$fca$0$extract70$i$i = $246;$$fca$1$extract71$i$i = $247;
    label = 72;
   }
   do {
    if ((label|0) == 72) {
     $228 = HEAP32[$29>>2]|0;
     $229 = (($228) + -1)|0;
     HEAP32[$29>>2] = $229;
     $230 = ($229|0)==(0);
     if ($230) {
      $231 = HEAP32[$value$i$sroa$4$sroa$4$0$value$i$sroa$4$0$$sroa_raw_idx$sroa_idx>>2]|0;
      $232 = HEAP32[$231>>2]|0;HEAP32[$231>>2] = (($232-1)|0);
      $233 = ($232|0)==(1);
      if ($233) {
       /* fence */;
       __THREW__ = 0;
       invoke_vi(241,($value$i$sroa$4$sroa$4$0$value$i$sroa$4$0$$sroa_raw_idx$sroa_idx|0));
       $234 = __THREW__; __THREW__ = 0;
       $235 = $234&1;
       if ($235) {
        $_52$3$ph = 1;
        label = 150;
        break;
       }
      }
      $236 = HEAP32[$value$i$sroa$4$sroa$11$0$value$i$sroa$4$0$$sroa_raw_idx$sroa_raw_idx>>2]|0;
      $switchtmp$i$i$i$i$i$i$i$i78 = ($236|0)==(0|0);
      if (!($switchtmp$i$i$i$i$i$i$i$i78)) {
       $$idx1$i$i$i$i$i$i$i$i$i80 = ((($29)) + 176|0);
       $$idx1$val$i$i$i$i$i$i$i$i$i81 = HEAP32[$$idx1$i$i$i$i$i$i$i$i$i80>>2]|0;
       $$idx1$val$val$i$i$i$i$i$i$i$i$i82 = HEAP32[$$idx1$val$i$i$i$i$i$i$i$i$i81>>2]|0;
       __THREW__ = 0;
       invoke_vi($$idx1$val$val$i$i$i$i$i$i$i$i$i82|0,($236|0));
       $237 = __THREW__; __THREW__ = 0;
       $238 = $237&1;
       if ($238) {
        $_52$3$ph = 1;
        label = 150;
        break;
       }
       $239 = HEAP32[$$idx1$i$i$i$i$i$i$i$i$i80>>2]|0;
       $240 = ((($239)) + 4|0);
       $241 = HEAP32[$240>>2]|0;
       $242 = ($241|0)==(0);
       if (!($242)) {
        _free($236);
       }
      }
      $243 = HEAP32[$34>>2]|0;
      $244 = (($243) + -1)|0;
      HEAP32[$34>>2] = $244;
      $245 = ($244|0)==(0);
      if ($245) {
       _free($29);
       $extract$t47173 = 1;$personalityslot$sroa$0$2168 = $$fca$0$extract70$i$i;$personalityslot$sroa$7$2171 = $$fca$1$extract71$i$i;
      } else {
       $extract$t47173 = 1;$personalityslot$sroa$0$2168 = $$fca$0$extract70$i$i;$personalityslot$sroa$7$2171 = $$fca$1$extract71$i$i;
      }
     } else {
      $extract$t47173 = 1;$personalityslot$sroa$0$2168 = $$fca$0$extract70$i$i;$personalityslot$sroa$7$2171 = $$fca$1$extract71$i$i;
     }
    }
   } while(0);
   if ((label|0) == 150) {
    $434 = ___cxa_find_matching_catch_2()|0;
    $435 = tempRet0;
    $extract$t47173 = $_52$3$ph;$personalityslot$sroa$0$2168 = $434;$personalityslot$sroa$7$2171 = $435;
   }
   $420 = HEAP32[$29>>2]|0;
   $421 = (($420) + -1)|0;
   HEAP32[$29>>2] = $421;
   $422 = ($421|0)==(0);
   if ($422) {
    $423 = HEAP32[$value$i$sroa$4$sroa$4$0$value$i$sroa$4$0$$sroa_raw_idx$sroa_idx>>2]|0;
    $424 = HEAP32[$423>>2]|0;HEAP32[$423>>2] = (($424-1)|0);
    $425 = ($424|0)==(1);
    if ($425) {
     /* fence */;
     __ZN33__LT_alloc__arc__Arc_LT_T_GT__GT_9drop_slow17hb3767c2311d7d383E($value$i$sroa$4$sroa$4$0$value$i$sroa$4$0$$sroa_raw_idx$sroa_idx);
    }
    $426 = HEAP32[$value$i$sroa$4$sroa$11$0$value$i$sroa$4$0$$sroa_raw_idx$sroa_raw_idx>>2]|0;
    $switchtmp$i$i$i$i$i$i = ($426|0)==(0|0);
    if (!($switchtmp$i$i$i$i$i$i)) {
     $$idx1$i$i$i$i$i$i$i = ((($29)) + 176|0);
     $$idx1$val$i$i$i$i$i$i$i = HEAP32[$$idx1$i$i$i$i$i$i$i>>2]|0;
     $$idx1$val$val$i$i$i$i$i$i$i = HEAP32[$$idx1$val$i$i$i$i$i$i$i>>2]|0;
     FUNCTION_TABLE_vi[$$idx1$val$val$i$i$i$i$i$i$i & 511]($426);
     $427 = HEAP32[$$idx1$i$i$i$i$i$i$i>>2]|0;
     $428 = ((($427)) + 4|0);
     $429 = HEAP32[$428>>2]|0;
     $430 = ($429|0)==(0);
     if (!($430)) {
      _free($426);
     }
    }
    $431 = HEAP32[$34>>2]|0;
    $432 = (($431) + -1)|0;
    HEAP32[$34>>2] = $432;
    $433 = ($432|0)==(0);
    if ($433) {
     _free($29);
     if ($extract$t47173) {
      $personalityslot$sroa$0$2167185 = $personalityslot$sroa$0$2168;$personalityslot$sroa$7$2170183 = $personalityslot$sroa$7$2171;
      break;
     } else {
      $personalityslot$sroa$0$2167184 = $personalityslot$sroa$0$2168;$personalityslot$sroa$7$2170182 = $personalityslot$sroa$7$2171;
     }
     ___resumeException($personalityslot$sroa$0$2167184|0);
     // unreachable;
    }
   }
   if ($extract$t47173) {
    $personalityslot$sroa$0$2167185 = $personalityslot$sroa$0$2168;$personalityslot$sroa$7$2170183 = $personalityslot$sroa$7$2171;
   } else {
    $personalityslot$sroa$0$2167184 = $personalityslot$sroa$0$2168;$personalityslot$sroa$7$2170182 = $personalityslot$sroa$7$2171;
    ___resumeException($personalityslot$sroa$0$2167184|0);
    // unreachable;
   }
  }
 } while(0);
 $417 = HEAP32[$shape>>2]|0;
 $418 = HEAP32[$417>>2]|0;HEAP32[$417>>2] = (($418-1)|0);
 $419 = ($418|0)==(1);
 if (!($419)) {
  $personalityslot$sroa$0$2167184 = $personalityslot$sroa$0$2167185;$personalityslot$sroa$7$2170182 = $personalityslot$sroa$7$2170183;
  ___resumeException($personalityslot$sroa$0$2167184|0);
  // unreachable;
 }
 /* fence */;
 __ZN33__LT_alloc__arc__Arc_LT_T_GT__GT_9drop_slow17hb3767c2311d7d383E($shape);
 $personalityslot$sroa$0$2167184 = $personalityslot$sroa$0$2167185;$personalityslot$sroa$7$2170182 = $personalityslot$sroa$7$2170183;
 ___resumeException($personalityslot$sroa$0$2167184|0);
 // unreachable;
 return (0)|0;
}
function __ZN49__LT_nphysics2d__world__world__World_LT_N_GT__GT_4step17h00dda251ba14dfb6E($0) {
 $0 = $0|0;
 var $$$i$i = 0.0, $$$i$i$i$i$i = 0, $$$i$i$i$i$i$i$i = 0, $$$i$i$i$i303$i = 0, $$arith = 0, $$arith116 = 0, $$arith120 = 0, $$arith124 = 0, $$arith128 = 0, $$arith132 = 0, $$arith136 = 0, $$arith140 = 0, $$arith144 = 0, $$arith148 = 0, $$arith152 = 0, $$arith156 = 0, $$arith160 = 0, $$arith164 = 0, $$arith168 = 0, $$arith172 = 0;
 var $$cast$i$i$i$i$i$i$i = 0, $$cast$i$i$i$i$i$i168$i = 0, $$cast$i$i$i$i$i138$i = 0, $$cast$i$i$i$i223$i$i = 0, $$cast$i$i$i$i286$i$i = 0, $$fca$0$extract3534$i$i$i$i = 0, $$fca$0$extract3534$i$i517$i$i = 0, $$fca$0$extract37277284$i = 0, $$fca$1$extract3736$i$i$i$i = 0, $$fca$1$extract3736$i$i516$i$i = 0, $$fca$1$extract39278283$i = 0, $$idx = 0, $$idx$i = 0, $$idx$i$i = 0, $$idx$i$i$i = 0, $$idx$i$i$i$i = 0, $$idx$i$i$i$i$i = 0, $$idx$i$i$i$i$i$i$i = 0, $$idx$i$i$i$i$i229 = 0, $$idx$i$i$i$i$i87 = 0;
 var $$idx$i$i$i$i232 = 0, $$idx$i$i$i11$i$i = 0, $$idx$i$i$i162$i = 0, $$idx$i$i$i20$i$i = 0, $$idx$i$i$i63$i = 0, $$idx$i$i102$i = 0, $$idx$i$i118$i$i$i$i = 0, $$idx$i$i118$i$i495$i$i = 0, $$idx$i$i178 = 0, $$idx$i$i263$i$i = 0, $$idx$i$i407$i$i = 0, $$idx$i$i73$i$i$i$i$i = 0, $$idx$i$i84 = 0, $$idx$i1$i$i = 0, $$idx$i1$i$i$i = 0, $$idx$i104$i = 0, $$idx$i11$i$i$i = 0, $$idx$i164$i = 0, $$idx$i18$i$i$i$i = 0, $$idx$i265 = 0;
 var $$idx$i3$i = 0, $$idx$i307$i$i = 0, $$idx$i328$i = 0, $$idx$i346$i$i = 0, $$idx$i35 = 0, $$idx$i375$i$i = 0, $$idx$i39$pre$phiZZZ2D = 0, $$idx$i4$i$i = 0, $$idx$i65$i$i$i$i$i = 0, $$idx$i65$i$i$i493$i$i = 0, $$idx$i67$i$i$i$i$i = 0, $$idx$i67$i$i$i484$i$i = 0, $$idx$i69$i$i$i$i$i = 0, $$idx$i69$i$i$i482$i$i = 0, $$idx$i70$i$i$i$i$i$i$i = 0, $$idx$i72 = 0, $$idx$i72$i$i$i$i$i$i$i = 0, $$idx$val = 0.0, $$idx$val$i = 0, $$idx$val$i$i = 0;
 var $$idx$val$i$i$i = 0.0, $$idx$val$i$i$i$i = 0.0, $$idx$val$i$i$i$i$i = 0, $$idx$val$i$i$i$i$i$i = 0, $$idx$val$i$i$i$i$i$i$i = 0, $$idx$val$i$i$i$i$i$i$i$i = 0, $$idx$val$i$i$i$i$i$i169$i = 0, $$idx$val$i$i$i$i$i230 = 0, $$idx$val$i$i$i$i$i96 = 0, $$idx$val$i$i$i$i318 = 0, $$idx$val$i$i$i12$i$i = 0, $$idx$val$i$i$i163$i = 0, $$idx$val$i$i$i21$i$i = 0, $$idx$val$i$i$i221 = 0, $$idx$val$i$i$i393 = 0, $$idx$val$i$i$i64$i = 0, $$idx$val$i$i10$i$i$i = 0, $$idx$val$i$i103$i = 0.0, $$idx$val$i$i116$i = 0, $$idx$val$i$i119$i$i$i$i = 0.0;
 var $$idx$val$i$i119$i$i496$i$i = 0.0, $$idx$val$i$i179 = 0, $$idx$val$i$i209$i$i = 0, $$idx$val$i$i211 = 0, $$idx$val$i$i264$i$i = 0, $$idx$val$i$i384 = 0, $$idx$val$i$i408$i$i = 0.0, $$idx$val$i$i4185 = 0, $$idx$val$i$i4203 = 0, $$idx$val$i$i74$i$i$i$i$i = 0.0, $$idx$val$i$i75 = 0.0, $$idx$val$i$i85 = 0, $$idx$val$i10$i = 0, $$idx$val$i105$i = 0, $$idx$val$i117$i = 0, $$idx$val$i12$i$i$i = 0.0, $$idx$val$i121$i = 0, $$idx$val$i141$i = 0, $$idx$val$i150$i = 0, $$idx$val$i16$i$i = 0;
 var $$idx$val$i165$i = 0, $$idx$val$i176$i = 0.0, $$idx$val$i19$i$i$i$i = 0, $$idx$val$i206$i = 0, $$idx$val$i230$i = 0, $$idx$val$i241$i = 0, $$idx$val$i245$i = 0, $$idx$val$i266 = 0, $$idx$val$i280$i = 0, $$idx$val$i308$i$i = 0.0, $$idx$val$i311 = 0, $$idx$val$i311$pre = 0, $$idx$val$i329$i = 0, $$idx$val$i347$i$i = 0, $$idx$val$i36 = 0, $$idx$val$i365 = 0, $$idx$val$i368 = 0, $$idx$val$i372 = 0, $$idx$val$i376$i$i = 0, $$idx$val$i39$i$i = 0;
 var $$idx$val$i4$i = 0.0, $$idx$val$i40 = 0, $$idx$val$i43$i$i = 0, $$idx$val$i46$i$i = 0, $$idx$val$i5$i$i = 0.0, $$idx$val$i65 = 0, $$idx$val$i66$i$i$i$i$i = 0.0, $$idx$val$i66$i$i$i494$i$i = 0.0, $$idx$val$i68$i$i$i$i$i = 0.0, $$idx$val$i68$i$i$i485$i$i = 0.0, $$idx$val$i70$i$i$i$i$i = 0.0, $$idx$val$i70$i$i$i483$i$i = 0.0, $$idx$val$i71$i$i$i$i$i$i$i = 0.0, $$idx$val$i73 = 0, $$idx$val$i73$i$i$i$i$i$i$i = 0.0, $$idx$val$i91 = 0, $$idx$val$pre$i$i$i$i = 0, $$idx$val12$i$i$i = 0, $$idx$val17$i = 0, $$idx$val17$i$i = 0;
 var $$idx$val17$i$i$i = 0, $$idx$val17$i$i$i$i = 0, $$idx$val17$i$i$i$i$i = 0, $$idx$val17$i$i161 = 0, $$idx$val17$i$i9$i$i$i = 0, $$idx$val17$i$pre = 0, $$idx$val2$i = 0, $$idx$val2$i10$i$i = 0.0, $$idx$val2$i11$i$i$i$i$i = 0.0, $$idx$val2$i11$i$i$i490$i$i = 0.0, $$idx$val2$i32$i = 0.0, $$idx$val2$i719$i$i$i$i$i = 0.0, $$idx$val2$i719$i$i$i479$i$i = 0.0, $$idx$val2$i837$i$i = 0.0, $$idx$val20$i$i$i = 0, $$idx$val3$i$i$i = 0, $$idx$val3$i$i$i$i = 0, $$idx$val47$i$i$i = 0, $$idx1$i = 0, $$idx1$i$i = 0;
 var $$idx1$i$i$i = 0, $$idx1$i$i$i$i = 0, $$idx1$i$i$i$i$i$i = 0, $$idx1$i$i$i$i$i$i$i = 0, $$idx1$i$i$i$i$i$i$i$i$i = 0, $$idx1$i$i$i$i$i$i$i4190 = 0, $$idx1$i$i$i$i$i$i$i4208 = 0, $$idx1$i$i$i$i$i$i$i61 = 0, $$idx1$i$i$i$i491$i$i = 0, $$idx1$i$i$i125 = 0, $$idx1$i$i$i220 = 0, $$idx1$i$i$i78 = 0, $$idx1$i$i180 = 0, $$idx1$i$i86 = 0, $$idx1$i37 = 0, $$idx1$i71 = 0, $$idx1$i72$i$i$i$i$i = 0, $$idx1$i72$i$i$i480$i$i = 0, $$idx1$i76 = 0, $$idx1$val$i = 0;
 var $$idx1$val$i$i = 0, $$idx1$val$i$i$i = 0.0, $$idx1$val$i$i$i$i = 0.0, $$idx1$val$i$i$i$i$i = 0, $$idx1$val$i$i$i$i$i$i$i = 0, $$idx1$val$i$i$i$i$i$i$i$i$i = 0, $$idx1$val$i$i$i$i$i$i$i4191 = 0, $$idx1$val$i$i$i$i$i$i$i4209 = 0, $$idx1$val$i$i$i$i$i$i$i62 = 0.0, $$idx1$val$i$i$i$i319 = 0, $$idx1$val$i$i$i126 = 0.0, $$idx1$val$i$i$i23$i$i = 0, $$idx1$val$i$i$i66$i = 0, $$idx1$val$i$i181 = 0, $$idx1$val$i$i213 = 0, $$idx1$val$i$i386 = 0, $$idx1$val$i208$i = 0, $$idx1$val$i232$i = 0, $$idx1$val$i282$i = 0, $$idx1$val$i38 = 0;
 var $$idx1$val$i77 = 0.0, $$idx1$val$val$i$i$i$i$i$i$i = 0, $$idx1$val$val$i$i$i$i$i$i$i$i$i = 0, $$idx1$val$val$i$i$i$i$i$i$i4192 = 0, $$idx1$val$val$i$i$i$i$i$i$i4210 = 0, $$idx1$val3$i = 0, $$idx1$val3$i11$i$i = 0.0, $$idx1$val3$i12$i$i$i$i$i = 0.0, $$idx1$val3$i12$i$i$i492$i$i = 0.0, $$idx1$val3$i33$i = 0.0, $$idx1$val3$i7310$i$i$i$i$i = 0.0, $$idx1$val3$i7310$i$i$i481$i$i = 0.0, $$idx1$val3$i838$i$i = 0.0, $$idx10$i$i$i$i = 0, $$idx10$i13$i$i$i = 0, $$idx10$val = 0, $$idx10$val$i$i$i$i = 0.0, $$idx10$val$i14$i$i$i = 0.0, $$idx10$val16$i$i$i$i$i = 0, $$idx10$val16$i$i$i413$i$i = 0;
 var $$idx10$val16$i159$i$i$i$i = 0, $$idx10$val16$i159$i$i422$i$i = 0, $$idx10$val49$i$i$i = 0, $$idx103$val$i = 0, $$idx104$val$i = 0, $$idx11$i$i$i$i$i = 0, $$idx11$i$i$i414$i$i = 0, $$idx11$i160$i$i$i$i = 0, $$idx11$i160$i$i423$i$i = 0, $$idx11$val = 0, $$idx11$val$i$i$i = 0.0, $$idx11$val17$i$i$i$i$i = 0, $$idx11$val17$i$i$i415$i$i = 0, $$idx11$val17$i161$i$i$i$i = 0, $$idx11$val17$i161$i$i424$i$i = 0, $$idx12$val = 0, $$idx12$val16$i$i$i$i = 0, $$idx12$val16$i4$i$i$i = 0, $$idx13$i$i$i$i = 0, $$idx13$i5$i$i$i = 0;
 var $$idx13$val17$i$i$i$i = 0, $$idx13$val17$i6$i$i$i = 0, $$idx132$i = 0, $$idx132$val$i = 0, $$idx133$val$i = 0, $$idx134$i = 0, $$idx134$val$i = 0, $$idx138$i = 0, $$idx138$val$i = 0, $$idx139$i = 0, $$idx139$val$i = 0, $$idx14 = 0, $$idx14$val = 0, $$idx14$val$i$i$i$i$i = 0, $$idx14$val$i$i$i$i$i$i$i$i = 0, $$idx14$val$i$i$i460$i$i = 0, $$idx14$val$i179$i$i$i$i = 0, $$idx14$val$i179$i$i442$i$i = 0, $$idx14$val$i30$i$i$i$i$i$i$i = 0, $$idx141$val$i = 0;
 var $$idx142$val$i = 0, $$idx142$val$pre$i = 0, $$idx143$val$i = 0, $$idx144$val$i = 0, $$idx144$val$pre$i = 0, $$idx145$val$i = 0, $$idx146$val$i = 0, $$idx147$val$i = 0, $$idx147$val$i$i = 0, $$idx148$val$i = 0, $$idx148$val$i$i = 0, $$idx149$val$i = 0, $$idx149$val$i$i = 0, $$idx15$i$i$i$i = 0, $$idx15$i$i$i$i$i = 0, $$idx15$i$i$i$i$i$i$i$i = 0, $$idx15$i$i$i429$i$i = 0, $$idx15$i182$i$i$i$i = 0, $$idx15$i182$i$i431$i$i = 0, $$idx15$i33$i$i$i$i$i$i$i = 0;
 var $$idx15$val = 0, $$idx15$val$i$i$i$i = 0, $$idx15$val$i$i$i$i$i = 0, $$idx15$val$i$i$i$i$i$i$i$i = 0, $$idx15$val$i$i$i463$i$i = 0, $$idx15$val$i183$i$i$i$i = 0, $$idx15$val$i183$i$i445$i$i = 0, $$idx15$val$i34$i$i$i$i$i$i$i = 0, $$idx150$val$i = 0, $$idx151$val$i = 0, $$idx152$i$i = 0, $$idx152$val$i = 0, $$idx152$val$i$i = 0.0, $$idx153$i$i = 0, $$idx153$val$i$i = 0.0, $$idx154$val$i$i = 0, $$idx155$val$i$i = 0, $$idx156$val$i$i = 0, $$idx157$val$i$i = 0, $$idx158$val$i$i = 0;
 var $$idx159$val$i$i = 0, $$idx16$val = 0, $$idx160$val$i$i = 0, $$idx161$i$i = 0, $$idx161$val$i = 0, $$idx161$val$i$i = 0, $$idx162$val$i = 0, $$idx162$val$i$i = 0, $$idx163$val$i = 0, $$idx163$val$i$i = 0, $$idx164$val$i = 0, $$idx164$val$i$i = 0, $$idx165$i = 0, $$idx165$val$i = 0, $$idx165$val$i$i = 0, $$idx166$i = 0, $$idx166$val$i = 0, $$idx167$i = 0, $$idx167$val521$i = 0.0, $$idx168$i = 0;
 var $$idx168$val$i = 0.0, $$idx17 = 0, $$idx17$val = 0, $$idx171$i = 0, $$idx171$val$i = 0, $$idx172$val$i$i = 0, $$idx172$val$pre$i = 0, $$idx173$val$i = 0, $$idx173$val$i$i = 0, $$idx174$i$i = 0, $$idx174$val$i$i = 0, $$idx175$i = 0, $$idx175$i$i = 0, $$idx175$val$i = 0, $$idx175$val$i$i = 0, $$idx176$val$le$i$i = 0, $$idx176$val$le1167$i$i = 0, $$idx177$val$i$i = 0, $$idx178$val$i = 0, $$idx178$val$i$i = 0;
 var $$idx179$val$i = 0, $$idx179$val$i$i = 0, $$idx18 = 0, $$idx18$val = 0, $$idx180$i$i = 0, $$idx180$val$i = 0, $$idx180$val$i$i = 0, $$idx181$val$i = 0, $$idx181$val$i$i = 0, $$idx182$val$i = 0, $$idx182$val$i$i = 0, $$idx183$val$i = 0, $$idx184$val$i = 0, $$idx184$val$i$i = 0, $$idx185$val$i = 0, $$idx185$val$i$i = 0, $$idx186$val$i = 0, $$idx187$val$i = 0, $$idx187$val$pre$i = 0, $$idx189$val$i$i = 0;
 var $$idx19 = 0, $$idx19$val = 0, $$idx190$val$i$i = 0, $$idx191$val$i$i = 0, $$idx192$val$i$i = 0, $$idx193$val$i$i = 0, $$idx194$val$i$i = 0, $$idx195$val$i$i = 0, $$idx196$val$i$i = 0, $$idx197$val$i$i = 0, $$idx2$i = 0, $$idx2$i$i = 0, $$idx2$i$i$i = 0, $$idx2$i$i$i$i$i$i$i = 0, $$idx2$val$i = 0.0, $$idx2$val$i$i = 0, $$idx2$val$i$i$i = 0.0, $$idx2$val$i$i$i$i$i$i = 0, $$idx2$val$i$i$i$i$i$i$i = 0.0, $$idx2$val$i$i4196 = 0;
 var $$idx2$val$i$i4214 = 0, $$idx2$val$i$i92 = 0.0, $$idx20 = 0, $$idx20$val = 0, $$idx21 = 0, $$idx21$val = 0, $$idx22 = 0, $$idx22$val = 0, $$idx26$val = 0, $$idx26$val$i = 0, $$idx27$val$i = 0, $$idx3$i$i$i = 0, $$idx3$i$i$i$i$i$i$i = 0, $$idx3$i$i219 = 0, $$idx3$i$i323 = 0, $$idx3$i348$i$i = 0, $$idx3$i54$i = 0, $$idx3$val$i$i = 0, $$idx3$val$i$i$i = 0.0, $$idx3$val$i$i$i$i$i$i = 0;
 var $$idx3$val$i$i$i$i$i$i$i = 0.0, $$idx3$val$i$i4195 = 0, $$idx3$val$i$i4213 = 0, $$idx3$val$i$i93 = 0.0, $$idx3$val$i349$i$i = 0, $$idx3$val13$i$i$i = 0, $$idx3$val9$i$i = 0.0, $$idx30$i = 0, $$idx30$val$i = 0, $$idx34$i = 0, $$idx34$val$i = 0, $$idx37$val$i = 0, $$idx39$val$i = 0, $$idx4$i$i = 0, $$idx4$i$i$i = 0, $$idx4$val$i$i = 0.0, $$idx4$val48$i$i$i = 0, $$idx40$i$i$i$i$i = 0, $$idx40$i$i$i$i$i$i$i$i = 0, $$idx40$i$i$i506$i$i = 0;
 var $$idx40$val$i$i$i$i$i = 0.0, $$idx40$val$i$i$i$i$i$i$i$i = 0.0, $$idx40$val$i$i$i507$i$i = 0.0, $$idx41$i$i$i$i$i = 0, $$idx41$i$i$i$i$i$i$i$i = 0, $$idx41$i$i$i500$i$i = 0, $$idx41$val$i = 0, $$idx41$val$i$i$i$i$i = 0.0, $$idx41$val$i$i$i$i$i$i$i$i = 0.0, $$idx41$val$i$i$i501$i$i = 0.0, $$idx42$i$i$i$i$i = 0, $$idx42$i$i$i$i$i$i$i$i = 0, $$idx42$i$i$i508$i$i = 0, $$idx42$val$i$i$i$i$i = 0.0, $$idx42$val$i$i$i$i$i$i$i$i = 0.0, $$idx42$val$i$i$i509$i$i = 0.0, $$idx44$i$i$i$i$i = 0, $$idx44$i$i$i$i$i$i$i$i = 0, $$idx44$i$i$i502$i$i = 0, $$idx44$val$i$i$i$i$i = 0.0;
 var $$idx44$val$i$i$i$i$i$i$i$i = 0.0, $$idx44$val$i$i$i503$i$i = 0.0, $$idx5$i$i = 0, $$idx5$i$i$i = 0, $$idx5$i$i$i$i = 0, $$idx5$i$i$i$i$i = 0, $$idx5$i$i10$i$i$i = 0, $$idx5$i$i322 = 0, $$idx5$i177$i = 0, $$idx5$i51$i = 0, $$idx5$i79$phi$trans$insert = 0, $$idx5$val$i = 0, $$idx5$val$i$i = 0, $$idx5$val$i$i94 = 0.0, $$idx5$val$i123$pr$i = 0, $$idx5$val18$i = 0, $$idx5$val18$i$i = 0, $$idx5$val18$i$i$i = 0, $$idx5$val18$i$i$i$i = 0, $$idx5$val18$i$i$i$i$i = 0;
 var $$idx5$val18$i$i11$i$i$i = 0, $$idx5$val18$i$i162 = 0, $$idx5$val18$i$pre = 0, $$idx6$i$i = 0, $$idx6$i$i$i = 0, $$idx6$val$i$i = 0.0, $$idx6$val$i$i$i = 0.0, $$idx7$i$i = 0, $$idx7$i$i$i = 0, $$idx7$i178$i = 0, $$idx7$i355$i$i = 0, $$idx7$i48$i = 0, $$idx7$val$i$i$i = 0, $$idx7$val$i179$i = 0.0, $$idx7$val$i356$i$i = 0.0, $$idx72$i = 0, $$idx72$val$i = 0, $$idx73$val$i = 0, $$idx73$val$idx$i = 0, $$idx73$val$idx$val$i = 0;
 var $$idx73$val$idx80$i = 0, $$idx73$val$idx80$val$i = 0, $$idx74$val$i = 0, $$idx74$val$idx$i = 0, $$idx74$val$idx$val$i = 0, $$idx74$val$idx79$i = 0, $$idx74$val$idx79$val$i = 0, $$idx75$val$i = 0, $$idx75$val$idx$i = 0, $$idx75$val$idx$val$i = 0, $$idx75$val$idx78$i = 0, $$idx75$val$idx78$val$i = 0, $$idx76$i = 0, $$idx76$val$i = 0, $$idx76$val$idx$i = 0, $$idx76$val$idx$val$i = 0, $$idx76$val$idx77$i = 0, $$idx76$val$idx77$val$i = 0, $$idx8 = 0, $$idx8$i$i = 0;
 var $$idx8$i180$i = 0, $$idx8$i358$i$i = 0, $$idx8$val = 0.0, $$idx8$val$i$i = 0, $$idx8$val$i$i$i = 0, $$idx8$val$i181$i = 0.0, $$idx8$val$i359$i$i = 0.0, $$idx87$val$i = 0, $$idx9$i$i = 0, $$idx9$i$i$i = 0, $$idx9$val = 0, $$idx9$val$i$i = 0, $$idx9$val$i$i$i = 0.0, $$idx92$val$i = 0, $$idx93$val$i = 0, $$idx95$val$i = 0, $$idx96$val$i = 0, $$idx97$val$i = 0, $$idx98$val$i = 0, $$in$i$i$i = 0;
 var $$in$i$i$i$i = 0, $$in$i$i$i$i$i$i = 0, $$overflow = 0, $$overflow117 = 0, $$overflow121 = 0, $$overflow125 = 0, $$overflow129 = 0, $$overflow133 = 0, $$overflow137 = 0, $$overflow141 = 0, $$overflow145 = 0, $$overflow149 = 0, $$overflow153 = 0, $$overflow157 = 0, $$overflow161 = 0, $$overflow165 = 0, $$overflow169 = 0, $$overflow173 = 0, $$phi$trans$insert = 0, $$phi$trans$insert1763 = 0;
 var $$phi$trans$insert1766 = 0, $$phi$trans$insert1769 = 0, $$phi$trans$insert1772 = 0, $$pre = 0, $$pre$i = 0, $$pre$i$i = 0, $$pre$i$i$i$i = 0, $$pre$i$i$i$i$i$i$i = 0, $$pre$i$i120 = 0, $$pre$i$i401 = 0, $$pre$i131 = 0, $$pre$i227 = 0, $$pre$i246$i = 0, $$pre$i376 = 0, $$pre1778 = 0, $$pre1779 = 0, $$pre1784$pre$phiZZ2D = 0, $$pre1804$pre$phiZZ2D = 0, $$pre350$i$i$i$i$i = 0, $$pre513$i = 0;
 var $$pre605$i = 0, $$pre606$i = 0, $$pre607$i = 0, $$sink$i$i$i$i = 0, $$sink239252$i$i$i$i$i = 0, $$sink239252$i$i$i21$i$i = 0, $$sink253$i$i$i$i$i = 0, $$sink8689$i$i$i$i$i$i = 0, $$sink90$i$i$i$i$i$i = 0, $$unpack$i = 0, $$unpack$i$i = 0.0, $$unpack$i$i239 = 0, $$unpack$i$i98 = 0, $$unpack141$i$i = 0.0, $$unpack19$i$i = 0, $$unpack36$i = 0, $$val$i = 0.0, $$val$i$i = 0.0, $$val$i$i$i = 0.0, $$val$i$i$i$i = 0.0;
 var $$val$i$i$i$i$i = 0.0, $$val$i$i238$us$i$i = 0.0, $$val$i$i238$us1146$i$i = 0.0, $$val$i$i238$us1156$i$i = 0.0, $$val$i2$i$i$i = 0.0, $$val$i357$i$i = 0.0, $$val1$i$i$i = 0, $$val1$i$i$i$i = 0.0, $$val1$i$i$i$i$i$i = 0.0, $$val1$i$i$i$i$i$i105 = 0, $$val1$i$i$i$i$i156$i = 0, $$val1$i4$i$i$i = 0.0, $$val14$i$i$i = 0, $$val1520$i$i$i = 0, $$val1520$i$i$i$i$i$i$i = 0, $$val1520$i$i$i$pre = 0, $$val1619$i$i$i = 0, $$val1619$i$i$i$i$i$i$i = 0, $$val1619$i$i$i$i6$i$i$i = 0, $$val1619$i$i$i$pre = 0;
 var $$val1718$i$i$i = 0, $$val1718$i$i$i$i$i$i$i = 0, $$val1718$i$i$i$i5$i$i$i = 0, $$val1718$i$i$i$pre = 0, $$val21$i$i$i = 0, $$val21$i$i$i$i$i$i$i = 0, $$val21$i$i$i$pre = 0, $$val3$i$i$i = 0.0, $$val3$i$i221520$i = 0.0, $$val3$i$i322518$i = 0.0, $$val3$i$i612$i = 0.0, $$val3$i$i8$i$i = 0.0, $1 = 0, $10 = 0, $100 = 0, $1000 = 0, $1001 = 0, $1002 = 0, $1003 = 0, $1004 = 0;
 var $1005 = 0, $1006 = 0, $1007 = 0, $1008 = 0, $1009 = 0, $101 = 0, $1010 = 0, $1011 = 0, $1012 = 0, $1013 = 0, $1014 = 0, $1015 = 0, $1016 = 0, $1017 = 0, $1018 = 0, $1019 = 0, $102 = 0, $1020 = 0, $1021 = 0, $1022 = 0;
 var $1023 = 0, $1024 = 0, $1025 = 0, $1026 = 0, $1027 = 0, $1028 = 0, $1029 = 0, $103 = 0, $1030 = 0, $1031 = 0, $1032 = 0, $1033 = 0, $1034 = 0, $1035 = 0, $1036 = 0, $1037 = 0, $1038 = 0, $1039 = 0, $104 = 0, $1040 = 0;
 var $1041 = 0, $1042 = 0, $1043 = 0, $1044 = 0, $1045 = 0, $1046 = 0, $1047 = 0, $1048 = 0, $1049 = 0, $105 = 0, $1050 = 0, $1051 = 0, $1052 = 0, $1053 = 0, $1054 = 0, $1055 = 0, $1056 = 0, $1057 = 0, $1058 = 0, $1059 = 0;
 var $106 = 0, $1060 = 0, $1061 = 0, $1062 = 0, $1063 = 0, $1064 = 0, $1065 = 0, $1066 = 0, $1067 = 0, $1068 = 0, $1069 = 0, $107 = 0, $1070 = 0, $1071 = 0, $1072 = 0, $1073 = 0, $1074 = 0, $1075 = 0, $1076 = 0, $1077 = 0;
 var $1078 = 0, $1079 = 0, $108 = 0, $1080 = 0, $1081 = 0, $1082 = 0, $1083 = 0, $1084 = 0, $1085 = 0, $1086 = 0, $1087 = 0, $1088 = 0, $1089 = 0, $109 = 0, $1090 = 0, $1091 = 0, $1092 = 0, $1093 = 0, $1094 = 0, $1095 = 0;
 var $1096 = 0, $1097 = 0, $1098 = 0, $1099 = 0, $11 = 0, $110 = 0, $1100 = 0, $1101 = 0, $1102 = 0, $1103 = 0, $1104 = 0, $1105 = 0, $1106 = 0, $1107 = 0, $1108 = 0, $1109 = 0, $111 = 0, $1110 = 0, $1111 = 0, $1112 = 0;
 var $1113 = 0, $1114 = 0, $1115 = 0, $1116 = 0, $1117 = 0, $1118 = 0, $1119 = 0, $112 = 0, $1120 = 0, $1121 = 0, $1122 = 0, $1123 = 0, $1124 = 0, $1125 = 0, $1126 = 0, $1127 = 0, $1128 = 0, $1129 = 0, $113 = 0, $1130 = 0;
 var $1131 = 0, $1132 = 0, $1133 = 0, $1134 = 0, $1135 = 0, $1136 = 0, $1137 = 0, $1138 = 0, $1139 = 0, $114 = 0, $1140 = 0, $1141 = 0, $1142 = 0, $1143 = 0, $1144 = 0, $1145 = 0, $1146 = 0, $1147 = 0, $1148 = 0, $1149 = 0;
 var $115 = 0, $1150 = 0, $1151 = 0, $1152 = 0, $1153 = 0, $1154 = 0, $1155 = 0, $1156 = 0, $1157 = 0, $1158 = 0, $1159 = 0, $116 = 0, $1160 = 0, $1161 = 0, $1162 = 0, $1163 = 0, $1164 = 0, $1165 = 0, $1166 = 0, $1167 = 0;
 var $1168 = 0, $1169 = 0, $117 = 0, $1170 = 0, $1171 = 0, $1172 = 0, $1173 = 0, $1174 = 0, $1175 = 0, $1176 = 0, $1177 = 0, $1178 = 0, $1179 = 0, $118 = 0, $1180 = 0, $1181 = 0, $1182 = 0, $1183 = 0, $1184 = 0, $1185 = 0;
 var $1186 = 0, $1187 = 0, $1188 = 0, $1189 = 0, $119 = 0, $1190 = 0, $1191 = 0, $1192 = 0, $1193 = 0, $1194 = 0, $1195 = 0, $1196 = 0, $1197 = 0, $1198 = 0, $1199 = 0, $12 = 0, $120 = 0, $1200 = 0, $1201 = 0, $1202 = 0;
 var $1203 = 0, $1204 = 0, $1205 = 0, $1206 = 0, $1207 = 0, $1208 = 0, $1209 = 0, $121 = 0, $1210 = 0, $1211 = 0, $1212 = 0, $1213 = 0, $1214 = 0, $1215 = 0, $1216 = 0, $1217 = 0, $1218 = 0, $1219 = 0, $122 = 0, $1220 = 0;
 var $1221 = 0, $1222 = 0, $1223 = 0, $1224 = 0, $1225 = 0, $1226 = 0, $1227 = 0, $1228 = 0, $1229 = 0, $123 = 0, $1230 = 0, $1231 = 0, $1232 = 0, $1233 = 0, $1234 = 0, $1235 = 0, $1236 = 0, $1237 = 0, $1238 = 0, $1239 = 0;
 var $124 = 0, $1240 = 0, $1241 = 0, $1242 = 0, $1243 = 0, $1244 = 0, $1245 = 0, $1246 = 0, $1247 = 0, $1248 = 0, $1249 = 0, $125 = 0, $1250 = 0, $1251 = 0, $1252 = 0, $1253 = 0, $1254 = 0, $1255 = 0, $1256 = 0, $1257 = 0;
 var $1258 = 0, $1259 = 0, $126 = 0, $1260 = 0, $1261 = 0, $1262 = 0, $1263 = 0, $1264 = 0, $1265 = 0, $1266 = 0, $1267 = 0, $1268 = 0, $1269 = 0, $127 = 0, $1270 = 0, $1271 = 0, $1272 = 0, $1273 = 0, $1274 = 0, $1275 = 0;
 var $1276 = 0, $1277 = 0, $1278 = 0, $1279 = 0, $128 = 0, $1280 = 0, $1281 = 0, $1282 = 0, $1283 = 0, $1284 = 0, $1285 = 0, $1286 = 0, $1287 = 0, $1288 = 0, $1289 = 0, $129 = 0, $1290 = 0, $1291 = 0, $1292 = 0, $1293 = 0;
 var $1294 = 0, $1295 = 0, $1296 = 0, $1297 = 0, $1298 = 0, $1299 = 0, $13 = 0, $130 = 0, $1300 = 0, $1301 = 0, $1302 = 0, $1303 = 0, $1304 = 0, $1305 = 0, $1306 = 0, $1307 = 0, $1308 = 0, $1309 = 0, $131 = 0, $1310 = 0;
 var $1311 = 0, $1312 = 0, $1313 = 0, $1314 = 0, $1315 = 0, $1316 = 0, $1317 = 0, $1318 = 0, $1319 = 0, $132 = 0, $1320 = 0, $1321 = 0, $1322 = 0, $1323 = 0, $1324 = 0, $1325 = 0, $1326 = 0, $1327 = 0, $1328 = 0, $1329 = 0;
 var $133 = 0, $1330 = 0, $1331 = 0, $1332 = 0, $1333 = 0, $1334 = 0, $1335 = 0, $1336 = 0, $1337 = 0, $1338 = 0, $1339 = 0, $134 = 0, $1340 = 0, $1341 = 0, $1342 = 0, $1343 = 0, $1344 = 0, $1345 = 0, $1346 = 0, $1347 = 0;
 var $1348 = 0, $1349 = 0, $135 = 0, $1350 = 0, $1351 = 0, $1352 = 0, $1353 = 0, $1354 = 0, $1355 = 0, $1356 = 0, $1357 = 0, $1358 = 0, $1359 = 0, $136 = 0, $1360 = 0, $1361 = 0, $1362 = 0, $1363 = 0, $1364 = 0, $1365 = 0;
 var $1366 = 0, $1367 = 0, $1368 = 0, $1369 = 0, $137 = 0, $1370 = 0, $1371 = 0, $1372 = 0, $1373 = 0, $1374 = 0, $1375 = 0, $1376 = 0, $1377 = 0, $1378 = 0, $1379 = 0, $138 = 0, $1380 = 0, $1381 = 0, $1382 = 0, $1383 = 0;
 var $1384 = 0, $1385 = 0, $1386 = 0, $1387 = 0, $1388 = 0, $1389 = 0, $139 = 0, $1390 = 0, $1391 = 0, $1392 = 0, $1393 = 0, $1394 = 0, $1395 = 0, $1396 = 0, $1397 = 0, $1398 = 0, $1399 = 0, $14 = 0, $140 = 0, $1400 = 0;
 var $1401 = 0, $1402 = 0, $1403 = 0, $1404 = 0, $1405 = 0, $1406 = 0, $1407 = 0, $1408 = 0, $1409 = 0, $141 = 0, $1410 = 0, $1411 = 0, $1412 = 0, $1413 = 0, $1414 = 0, $1415 = 0, $1416 = 0, $1417 = 0, $1418 = 0, $1419 = 0;
 var $142 = 0, $1420 = 0, $1421 = 0, $1422 = 0, $1423 = 0, $1424 = 0, $1425 = 0, $1426 = 0, $1427 = 0, $1428 = 0, $1429 = 0, $143 = 0, $1430 = 0, $1431 = 0, $1432 = 0, $1433 = 0, $1434 = 0, $1435 = 0, $1436 = 0, $1437 = 0;
 var $1438 = 0, $1439 = 0, $144 = 0, $1440 = 0, $1441 = 0, $1442 = 0, $1443 = 0, $1444 = 0, $1445 = 0, $1446 = 0, $1447 = 0, $1448 = 0, $1449 = 0, $145 = 0, $1450 = 0, $1451 = 0, $1452 = 0, $1453 = 0, $1454 = 0, $1455 = 0;
 var $1456 = 0, $1457 = 0, $1458 = 0, $1459 = 0, $146 = 0, $1460 = 0, $1461 = 0, $1462 = 0, $1463 = 0, $1464 = 0, $1465 = 0, $1466 = 0, $1467 = 0, $1468 = 0, $1469 = 0, $147 = 0, $1470 = 0, $1471 = 0, $1472 = 0, $1473 = 0;
 var $1474 = 0, $1475 = 0, $1476 = 0, $1477 = 0, $1478 = 0, $1479 = 0, $148 = 0, $1480 = 0, $1481 = 0, $1482 = 0, $1483 = 0, $1484 = 0, $1485 = 0, $1486 = 0, $1487 = 0, $1488 = 0, $1489 = 0, $149 = 0, $1490 = 0, $1491 = 0;
 var $1492 = 0, $1493 = 0, $1494 = 0, $1495 = 0, $1496 = 0, $1497 = 0, $1498 = 0, $1499 = 0, $15 = 0, $150 = 0, $1500 = 0, $1501 = 0, $1502 = 0, $1503 = 0, $1504 = 0, $1505 = 0, $1506 = 0, $1507 = 0, $1508 = 0, $1509 = 0;
 var $151 = 0, $1510 = 0, $1511 = 0, $1512 = 0, $1513 = 0, $1514 = 0, $1515 = 0, $1516 = 0, $1517 = 0, $1518 = 0, $1519 = 0, $152 = 0.0, $1520 = 0, $1521 = 0, $1522 = 0, $1523 = 0, $1524 = 0, $1525 = 0, $1526 = 0, $1527 = 0;
 var $1528 = 0, $1529 = 0, $153 = 0.0, $1530 = 0.0, $1531 = 0.0, $1532 = 0, $1533 = 0, $1534 = 0.0, $1535 = 0.0, $1536 = 0.0, $1537 = 0.0, $1538 = 0.0, $1539 = 0.0, $154 = 0, $1540 = 0, $1541 = 0, $1542 = 0, $1543 = 0.0, $1544 = 0.0, $1545 = 0.0;
 var $1546 = 0, $1547 = 0, $1548 = 0, $1549 = 0, $155 = 0, $1550 = 0, $1551 = 0, $1552 = 0, $1553 = 0, $1554 = 0, $1555 = 0, $1556 = 0, $1557 = 0, $1558 = 0, $1559 = 0, $156 = 0.0, $1560 = 0, $1561 = 0, $1562 = 0, $1563 = 0;
 var $1564 = 0, $1565 = 0, $1566 = 0, $1567 = 0, $1568 = 0, $1569 = 0, $157 = 0.0, $1570 = 0, $1571 = 0, $1572 = 0, $1573 = 0, $1574 = 0, $1575 = 0, $1576 = 0, $1577 = 0, $1578 = 0, $1579 = 0, $158 = 0.0, $1580 = 0, $1581 = 0;
 var $1582 = 0, $1583 = 0, $1584 = 0, $1585 = 0, $1586 = 0, $1587 = 0, $1588 = 0, $1589 = 0, $159 = 0.0, $1590 = 0, $1591 = 0, $1592 = 0, $1593 = 0, $1594 = 0, $1595 = 0, $1596 = 0, $1597 = 0, $1598 = 0, $1599 = 0, $16 = 0;
 var $160 = 0.0, $1600 = 0, $1601 = 0, $1602 = 0, $1603 = 0, $1604 = 0, $1605 = 0, $1606 = 0, $1607 = 0, $1608 = 0, $1609 = 0, $161 = 0.0, $1610 = 0, $1611 = 0, $1612 = 0, $1613 = 0.0, $1614 = 0.0, $1615 = 0.0, $1616 = 0.0, $1617 = 0.0;
 var $1618 = 0.0, $1619 = 0, $162 = 0.0, $1620 = 0, $1621 = 0.0, $1622 = 0.0, $1623 = 0.0, $1624 = 0.0, $1625 = 0, $1626 = 0, $1627 = 0, $1628 = 0, $1629 = 0, $163 = 0, $1630 = 0, $1631 = 0, $1632 = 0, $1633 = 0.0, $1634 = 0.0, $1635 = 0.0;
 var $1636 = 0.0, $1637 = 0.0, $1638 = 0.0, $1639 = 0, $164 = 0, $1640 = 0, $1641 = 0.0, $1642 = 0.0, $1643 = 0.0, $1644 = 0.0, $1645 = 0, $1646 = 0, $1647 = 0.0, $1648 = 0.0, $1649 = 0.0, $165 = 0, $1650 = 0.0, $1651 = 0.0, $1652 = 0.0, $1653 = 0.0;
 var $1654 = 0.0, $1655 = 0, $1656 = 0, $1657 = 0, $1658 = 0, $1659 = 0.0, $166 = 0, $1660 = 0.0, $1661 = 0.0, $1662 = 0.0, $1663 = 0, $1664 = 0, $1665 = 0, $1666 = 0, $1667 = 0.0, $1668 = 0.0, $1669 = 0.0, $167 = 0, $1670 = 0.0, $1671 = 0.0;
 var $1672 = 0.0, $1673 = 0, $1674 = 0, $1675 = 0, $1676 = 0, $1677 = 0, $1678 = 0, $1679 = 0, $168 = 0, $1680 = 0, $1681 = 0, $1682 = 0, $1683 = 0, $1684 = 0, $1685 = 0, $1686 = 0, $1687 = 0, $1688 = 0, $1689 = 0, $169 = 0.0;
 var $1690 = 0, $1691 = 0, $1692 = 0, $1693 = 0, $1694 = 0, $1695 = 0, $1696 = 0, $1697 = 0, $1698 = 0, $1699 = 0, $17 = 0, $170 = 0.0, $1700 = 0, $1701 = 0, $1702 = 0, $1703 = 0, $1704 = 0, $1705 = 0, $1706 = 0, $1707 = 0;
 var $1708 = 0, $1709 = 0, $171 = 0, $1710 = 0, $1711 = 0, $1712 = 0.0, $1713 = 0.0, $1714 = 0.0, $1715 = 0.0, $1716 = 0.0, $1717 = 0.0, $1718 = 0.0, $1719 = 0.0, $172 = 0, $1720 = 0.0, $1721 = 0.0, $1722 = 0.0, $1723 = 0.0, $1724 = 0.0, $1725 = 0.0;
 var $1726 = 0.0, $1727 = 0, $1728 = 0, $1729 = 0, $173 = 0, $1730 = 0, $1731 = 0.0, $1732 = 0.0, $1733 = 0.0, $1734 = 0.0, $1735 = 0.0, $1736 = 0.0, $1737 = 0.0, $1738 = 0.0, $1739 = 0.0, $174 = 0, $1740 = 0.0, $1741 = 0.0, $1742 = 0.0, $1743 = 0.0;
 var $1744 = 0.0, $1745 = 0, $1746 = 0, $1747 = 0, $1748 = 0.0, $1749 = 0.0, $175 = 0, $1750 = 0, $1751 = 0, $1752 = 0, $1753 = 0.0, $1754 = 0.0, $1755 = 0, $1756 = 0.0, $1757 = 0.0, $1758 = 0.0, $1759 = 0.0, $176 = 0, $1760 = 0.0, $1761 = 0.0;
 var $1762 = 0.0, $1763 = 0.0, $1764 = 0, $1765 = 0, $1766 = 0, $1767 = 0.0, $1768 = 0.0, $1769 = 0, $177 = 0, $1770 = 0.0, $1771 = 0.0, $1772 = 0.0, $1773 = 0.0, $1774 = 0.0, $1775 = 0.0, $1776 = 0.0, $1777 = 0.0, $1778 = 0.0, $1779 = 0, $178 = 0;
 var $1780 = 0, $1781 = 0.0, $1782 = 0, $1783 = 0.0, $1784 = 0.0, $1785 = 0.0, $1786 = 0, $1787 = 0, $1788 = 0, $1789 = 0, $179 = 0.0, $1790 = 0, $1791 = 0, $1792 = 0, $1793 = 0, $1794 = 0, $1795 = 0, $1796 = 0, $1797 = 0, $1798 = 0;
 var $1799 = 0, $18 = 0, $180 = 0.0, $1800 = 0, $1801 = 0, $1802 = 0, $1803 = 0, $1804 = 0, $1805 = 0, $1806 = 0, $1807 = 0, $1808 = 0, $1809 = 0, $181 = 0.0, $1810 = 0, $1811 = 0, $1812 = 0, $1813 = 0, $1814 = 0, $1815 = 0;
 var $1816 = 0, $1817 = 0, $1818 = 0, $1819 = 0, $182 = 0.0, $1820 = 0, $1821 = 0, $1822 = 0, $1823 = 0, $1824 = 0.0, $1825 = 0.0, $1826 = 0.0, $1827 = 0.0, $1828 = 0.0, $1829 = 0.0, $183 = 0, $1830 = 0.0, $1831 = 0.0, $1832 = 0.0, $1833 = 0.0;
 var $1834 = 0.0, $1835 = 0.0, $1836 = 0.0, $1837 = 0.0, $1838 = 0.0, $1839 = 0.0, $184 = 0, $1840 = 0.0, $1841 = 0.0, $1842 = 0.0, $1843 = 0.0, $1844 = 0, $1845 = 0, $1846 = 0, $1847 = 0, $1848 = 0, $1849 = 0, $185 = 0, $1850 = 0, $1851 = 0;
 var $1852 = 0, $1853 = 0, $1854 = 0, $1855 = 0, $1856 = 0, $1857 = 0, $1858 = 0.0, $1859 = 0.0, $186 = 0, $1860 = 0.0, $1861 = 0.0, $1862 = 0.0, $1863 = 0.0, $1864 = 0.0, $1865 = 0.0, $1866 = 0.0, $1867 = 0.0, $1868 = 0.0, $1869 = 0.0, $187 = 0;
 var $1870 = 0.0, $1871 = 0.0, $1872 = 0, $1873 = 0, $1874 = 0, $1875 = 0, $1876 = 0.0, $1877 = 0.0, $1878 = 0.0, $1879 = 0.0, $188 = 0, $1880 = 0.0, $1881 = 0.0, $1882 = 0.0, $1883 = 0.0, $1884 = 0.0, $1885 = 0.0, $1886 = 0.0, $1887 = 0.0, $1888 = 0;
 var $1889 = 0, $189 = 0, $1890 = 0, $1891 = 0, $1892 = 0.0, $1893 = 0.0, $1894 = 0.0, $1895 = 0.0, $1896 = 0, $1897 = 0, $1898 = 0, $1899 = 0, $19 = 0, $190 = 0, $1900 = 0.0, $1901 = 0.0, $1902 = 0.0, $1903 = 0.0, $1904 = 0.0, $1905 = 0.0;
 var $1906 = 0, $1907 = 0, $1908 = 0, $1909 = 0, $191 = 0, $1910 = 0, $1911 = 0, $1912 = 0, $1913 = 0, $1914 = 0, $1915 = 0, $1916 = 0, $1917 = 0, $1918 = 0, $1919 = 0, $192 = 0, $1920 = 0, $1921 = 0, $1922 = 0, $1923 = 0;
 var $1924 = 0, $1925 = 0, $1926 = 0, $1927 = 0, $1928 = 0, $1929 = 0, $193 = 0, $1930 = 0, $1931 = 0, $1932 = 0, $1933 = 0, $1934 = 0, $1935 = 0, $1936 = 0, $1937 = 0, $1938 = 0, $1939 = 0, $194 = 0, $1940 = 0, $1941 = 0;
 var $1942 = 0, $1943 = 0, $1944 = 0, $1945 = 0.0, $1946 = 0.0, $1947 = 0.0, $1948 = 0.0, $1949 = 0.0, $195 = 0, $1950 = 0.0, $1951 = 0.0, $1952 = 0.0, $1953 = 0.0, $1954 = 0.0, $1955 = 0.0, $1956 = 0.0, $1957 = 0.0, $1958 = 0.0, $1959 = 0.0, $196 = 0;
 var $1960 = 0, $1961 = 0, $1962 = 0, $1963 = 0, $1964 = 0.0, $1965 = 0.0, $1966 = 0.0, $1967 = 0.0, $1968 = 0.0, $1969 = 0.0, $197 = 0, $1970 = 0.0, $1971 = 0.0, $1972 = 0.0, $1973 = 0.0, $1974 = 0.0, $1975 = 0.0, $1976 = 0.0, $1977 = 0.0, $1978 = 0;
 var $1979 = 0, $198 = 0, $1980 = 0, $1981 = 0.0, $1982 = 0.0, $1983 = 0, $1984 = 0, $1985 = 0, $1986 = 0.0, $1987 = 0.0, $1988 = 0, $1989 = 0.0, $199 = 0, $1990 = 0.0, $1991 = 0.0, $1992 = 0.0, $1993 = 0.0, $1994 = 0.0, $1995 = 0.0, $1996 = 0.0;
 var $1997 = 0, $1998 = 0, $1999 = 0, $2 = 0, $20 = 0, $200 = 0, $2000 = 0.0, $2001 = 0.0, $2002 = 0, $2003 = 0.0, $2004 = 0.0, $2005 = 0.0, $2006 = 0.0, $2007 = 0.0, $2008 = 0.0, $2009 = 0.0, $201 = 0, $2010 = 0.0, $2011 = 0.0, $2012 = 0;
 var $2013 = 0, $2014 = 0.0, $2015 = 0, $2016 = 0.0, $2017 = 0.0, $2018 = 0.0, $2019 = 0, $202 = 0, $2020 = 0, $2021 = 0, $2022 = 0, $2023 = 0, $2024 = 0, $2025 = 0, $2026 = 0, $2027 = 0, $2028 = 0, $2029 = 0, $203 = 0, $2030 = 0;
 var $2031 = 0, $2032 = 0, $2033 = 0, $2034 = 0, $2035 = 0, $2036 = 0, $2037 = 0, $2038 = 0, $2039 = 0, $204 = 0, $2040 = 0.0, $2041 = 0.0, $2042 = 0.0, $2043 = 0.0, $2044 = 0.0, $2045 = 0.0, $2046 = 0.0, $2047 = 0.0, $2048 = 0.0, $2049 = 0.0;
 var $205 = 0, $2050 = 0.0, $2051 = 0.0, $2052 = 0.0, $2053 = 0.0, $2054 = 0, $2055 = 0, $2056 = 0, $2057 = 0, $2058 = 0, $2059 = 0, $206 = 0, $2060 = 0, $2061 = 0, $2062 = 0, $2063 = 0, $2064 = 0, $2065 = 0, $2066 = 0, $2067 = 0;
 var $2068 = 0, $2069 = 0, $207 = 0, $2070 = 0, $2071 = 0, $2072 = 0, $2073 = 0, $2074 = 0, $2075 = 0, $2076 = 0, $2077 = 0, $2078 = 0, $2079 = 0.0, $208 = 0, $2080 = 0, $2081 = 0, $2082 = 0, $2083 = 0.0, $2084 = 0, $2085 = 0.0;
 var $2086 = 0.0, $2087 = 0.0, $2088 = 0.0, $2089 = 0.0, $209 = 0, $2090 = 0, $2091 = 0, $2092 = 0, $2093 = 0.0, $2094 = 0, $2095 = 0.0, $2096 = 0.0, $2097 = 0.0, $2098 = 0.0, $2099 = 0.0, $21 = 0.0, $210 = 0, $2100 = 0.0, $2101 = 0.0, $2102 = 0;
 var $2103 = 0, $2104 = 0.0, $2105 = 0.0, $2106 = 0.0, $2107 = 0.0, $2108 = 0.0, $2109 = 0, $211 = 0, $2110 = 0, $2111 = 0, $2112 = 0, $2113 = 0, $2114 = 0, $2115 = 0, $2116 = 0, $2117 = 0, $2118 = 0, $2119 = 0, $212 = 0, $2120 = 0;
 var $2121 = 0, $2122 = 0, $2123 = 0, $2124 = 0, $2125 = 0, $2126 = 0, $2127 = 0, $2128 = 0, $2129 = 0, $213 = 0, $2130 = 0, $2131 = 0, $2132 = 0, $2133 = 0, $2134 = 0, $2135 = 0, $2136 = 0, $2137 = 0, $2138 = 0, $2139 = 0;
 var $214 = 0, $2140 = 0, $2141 = 0, $2142 = 0, $2143 = 0, $2144 = 0, $2145 = 0, $2146 = 0, $2147 = 0, $2148 = 0, $2149 = 0, $215 = 0, $2150 = 0, $2151 = 0, $2152 = 0, $2153 = 0, $2154 = 0, $2155 = 0, $2156 = 0, $2157 = 0;
 var $2158 = 0, $2159 = 0, $216 = 0, $2160 = 0, $2161 = 0, $2162 = 0, $2163 = 0, $2164 = 0, $2165 = 0.0, $2166 = 0.0, $2167 = 0.0, $2168 = 0.0, $2169 = 0, $217 = 0, $2170 = 0, $2171 = 0, $2172 = 0.0, $2173 = 0, $2174 = 0, $2175 = 0;
 var $2176 = 0, $2177 = 0, $2178 = 0, $2179 = 0, $218 = 0, $2180 = 0, $2181 = 0, $2182 = 0, $2183 = 0, $2184 = 0, $2185 = 0, $2186 = 0, $2187 = 0, $2188 = 0, $2189 = 0, $219 = 0, $2190 = 0, $2191 = 0, $2192 = 0, $2193 = 0;
 var $2194 = 0, $2195 = 0, $2196 = 0, $2197 = 0, $2198 = 0, $2199 = 0.0, $22 = 0.0, $220 = 0, $2200 = 0.0, $2201 = 0, $2202 = 0, $2203 = 0, $2204 = 0, $2205 = 0, $2206 = 0.0, $2207 = 0.0, $2208 = 0, $2209 = 0, $221 = 0, $2210 = 0;
 var $2211 = 0, $2212 = 0, $2213 = 0, $2214 = 0, $2215 = 0, $2216 = 0, $2217 = 0, $2218 = 0, $2219 = 0, $222 = 0, $2220 = 0, $2221 = 0, $2222 = 0, $2223 = 0, $2224 = 0, $2225 = 0, $2226 = 0, $2227 = 0, $2228 = 0, $2229 = 0;
 var $223 = 0, $2230 = 0, $2231 = 0, $2232 = 0, $2233 = 0, $2234 = 0, $2235 = 0, $2236 = 0, $2237 = 0, $2238 = 0, $2239 = 0, $224 = 0, $2240 = 0, $2241 = 0, $2242 = 0, $2243 = 0, $2244 = 0, $2245 = 0, $2246 = 0, $2247 = 0;
 var $2248 = 0, $2249 = 0, $225 = 0, $2250 = 0, $2251 = 0, $2252 = 0, $2253 = 0, $2254 = 0, $2255 = 0, $2256 = 0, $2257 = 0, $2258 = 0, $2259 = 0, $226 = 0, $2260 = 0, $2261 = 0, $2262 = 0, $2263 = 0, $2264 = 0, $2265 = 0;
 var $2266 = 0, $2267 = 0, $2268 = 0, $2269 = 0, $227 = 0, $2270 = 0, $2271 = 0, $2272 = 0, $2273 = 0, $2274 = 0, $2275 = 0, $2276 = 0, $2277 = 0, $2278 = 0, $2279 = 0, $228 = 0, $2280 = 0, $2281 = 0, $2282 = 0, $2283 = 0;
 var $2284 = 0, $2285 = 0, $2286 = 0, $2287 = 0, $2288 = 0, $2289 = 0, $229 = 0, $2290 = 0, $2291 = 0, $2292 = 0, $2293 = 0, $2294 = 0, $2295 = 0, $2296 = 0, $2297 = 0, $2298 = 0, $2299 = 0, $23 = 0, $230 = 0, $2300 = 0;
 var $2301 = 0, $2302 = 0, $2303 = 0.0, $2304 = 0.0, $2305 = 0.0, $2306 = 0, $2307 = 0, $2308 = 0, $2309 = 0, $231 = 0, $2310 = 0, $2311 = 0, $2312 = 0, $2313 = 0, $2314 = 0, $2315 = 0, $2316 = 0, $2317 = 0, $2318 = 0, $2319 = 0;
 var $232 = 0, $2320 = 0, $2321 = 0, $2322 = 0, $2323 = 0, $2324 = 0, $2325 = 0, $2326 = 0, $2327 = 0, $2328 = 0.0, $2329 = 0.0, $233 = 0, $2330 = 0.0, $2331 = 0.0, $2332 = 0, $2333 = 0.0, $2334 = 0.0, $2335 = 0.0, $2336 = 0.0, $2337 = 0.0;
 var $2338 = 0.0, $2339 = 0.0, $234 = SIMD_Int32x4(0,0,0,0), $2340 = 0.0, $2341 = 0.0, $2342 = 0.0, $2343 = 0.0, $2344 = 0.0, $2345 = 0.0, $2346 = 0.0, $2347 = 0.0, $2348 = 0.0, $2349 = 0.0, $235 = 0, $2350 = 0.0, $2351 = 0.0, $2352 = 0.0, $2353 = 0.0, $2354 = 0.0, $2355 = 0.0;
 var $2356 = 0.0, $2357 = 0.0, $2358 = 0.0, $2359 = 0.0, $236 = 0, $2360 = 0.0, $2361 = 0.0, $2362 = 0.0, $2363 = 0.0, $2364 = 0.0, $2365 = 0.0, $2366 = 0.0, $2367 = 0.0, $2368 = 0.0, $2369 = 0.0, $237 = 0, $2370 = 0.0, $2371 = 0.0, $2372 = 0.0, $2373 = 0.0;
 var $2374 = 0.0, $2375 = 0.0, $2376 = 0.0, $2377 = 0.0, $2378 = 0.0, $2379 = 0.0, $238 = 0, $2380 = 0.0, $2381 = 0.0, $2382 = 0, $2383 = 0, $2384 = 0, $2385 = 0, $2386 = 0, $2387 = 0, $2388 = 0, $2389 = 0, $239 = SIMD_Int32x4(0,0,0,0), $2390 = 0, $2391 = 0;
 var $2392 = 0, $2393 = 0, $2394 = 0, $2395 = 0, $2396 = 0, $2397 = 0, $2398 = 0, $2399 = 0, $24 = 0.0, $240 = 0, $2400 = 0, $2401 = 0, $2402 = 0, $2403 = 0, $2404 = 0, $2405 = 0, $2406 = 0, $2407 = 0, $2408 = 0, $2409 = 0;
 var $241 = 0, $2410 = 0, $2411 = 0, $2412 = 0, $2413 = 0, $2414 = 0, $2415 = 0, $2416 = 0, $2417 = 0, $2418 = 0, $2419 = 0, $242 = 0, $2420 = 0, $2421 = 0, $2422 = 0, $2423 = 0, $2424 = 0, $2425 = 0, $2426 = 0, $2427 = 0;
 var $2428 = 0, $2429 = 0, $243 = 0.0, $2430 = 0, $2431 = 0, $2432 = 0, $2433 = 0, $2434 = 0, $2435 = 0, $2436 = 0, $2437 = 0, $2438 = 0, $2439 = 0, $244 = 0.0, $2440 = 0, $2441 = 0, $2442 = 0, $2443 = 0, $2444 = 0, $2445 = 0;
 var $2446 = 0, $2447 = 0, $2448 = 0, $2449 = 0, $245 = 0.0, $2450 = 0, $2451 = 0, $2452 = 0, $2453 = 0, $2454 = 0, $2455 = 0, $2456 = 0, $2457 = 0, $2458 = 0, $2459 = 0, $246 = 0.0, $2460 = 0, $2461 = 0, $2462 = 0, $2463 = 0;
 var $2464 = 0, $2465 = 0, $2466 = 0, $2467 = 0, $2468 = 0, $2469 = 0, $247 = 0.0, $2470 = 0, $2471 = 0, $2472 = 0, $2473 = 0, $2474 = 0, $2475 = 0, $2476 = 0, $2477 = 0, $2478 = 0, $2479 = 0, $248 = 0.0, $2480 = 0, $2481 = 0;
 var $2482 = 0, $2483 = 0, $2484 = 0, $2485 = 0, $2486 = 0, $2487 = 0, $2488 = 0, $2489 = 0, $249 = 0.0, $2490 = 0, $2491 = 0, $2492 = 0, $2493 = 0, $2494 = 0, $2495 = 0, $2496 = 0, $2497 = 0, $2498 = 0, $2499 = 0, $25 = 0.0;
 var $250 = 0.0, $2500 = 0, $2501 = 0, $2502 = 0, $2503 = 0, $2504 = 0, $2505 = 0, $2506 = 0, $2507 = 0, $2508 = 0, $2509 = 0, $251 = 0.0, $2510 = 0, $2511 = 0, $2512 = 0, $2513 = 0, $2514 = 0, $2515 = 0, $2516 = 0, $2517 = 0;
 var $2518 = 0, $2519 = 0, $252 = 0.0, $2520 = 0, $2521 = 0, $2522 = 0, $2523 = 0, $2524 = 0, $2525 = 0, $2526 = 0, $2527 = 0, $2528 = 0, $2529 = 0, $253 = 0.0, $2530 = 0, $2531 = 0, $2532 = 0, $2533 = 0, $2534 = 0, $2535 = 0;
 var $2536 = 0, $2537 = 0, $2538 = 0, $2539 = 0, $254 = 0.0, $2540 = 0, $2541 = 0, $2542 = 0, $2543 = 0, $2544 = 0, $2545 = 0, $2546 = 0, $2547 = 0, $2548 = 0, $2549 = 0, $255 = 0.0, $2550 = 0, $2551 = 0, $2552 = 0, $2553 = 0;
 var $2554 = 0, $2555 = 0, $2556 = 0, $2557 = 0, $2558 = 0, $2559 = 0, $256 = 0.0, $2560 = 0, $2561 = 0, $2562 = 0, $2563 = 0, $2564 = 0, $2565 = 0, $2566 = 0, $2567 = 0, $2568 = 0, $2569 = 0, $257 = 0.0, $2570 = 0, $2571 = 0;
 var $2572 = 0, $2573 = 0, $2574 = 0, $2575 = 0, $2576 = 0, $2577 = 0, $2578 = 0, $2579 = 0, $258 = 0.0, $2580 = 0, $2581 = 0, $2582 = 0, $2583 = 0, $2584 = 0, $2585 = 0, $2586 = 0, $2587 = 0, $2588 = 0, $2589 = 0, $259 = 0.0;
 var $2590 = 0, $2591 = 0, $2592 = 0, $2593 = 0, $2594 = 0, $2595 = 0, $2596 = 0, $2597 = SIMD_Int32x4(0,0,0,0), $2598 = 0, $2599 = 0, $26 = 0.0, $260 = 0.0, $2600 = 0, $2601 = 0, $2602 = 0, $2603 = 0, $261 = 0.0, $262 = 0.0, $263 = 0, $264 = 0;
 var $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0.0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0.0, $280 = 0, $281 = 0, $282 = 0;
 var $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0.0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0.0;
 var $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0;
 var $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0.0, $329 = 0.0, $33 = 0.0, $330 = 0, $331 = 0, $332 = 0, $333 = 0.0, $334 = 0.0, $335 = 0.0, $336 = 0.0;
 var $337 = 0.0, $338 = 0.0, $339 = 0.0, $34 = 0.0, $340 = 0.0, $341 = 0.0, $342 = 0.0, $343 = 0.0, $344 = 0.0, $345 = 0.0, $346 = 0.0, $347 = 0.0, $348 = 0.0, $349 = 0.0, $35 = 0.0, $350 = 0.0, $351 = 0, $352 = 0, $353 = 0, $354 = SIMD_Int32x4(0,0,0,0);
 var $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0.0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0;
 var $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0;
 var $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0.0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0;
 var $409 = 0, $41 = 0.0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0.0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = SIMD_Int32x4(0,0,0,0), $426 = 0;
 var $427 = 0, $428 = 0, $429 = 0.0, $43 = 0.0, $430 = 0.0, $431 = 0.0, $432 = 0.0, $433 = 0.0, $434 = 0.0, $435 = 0.0, $436 = 0.0, $437 = 0.0, $438 = 0.0, $439 = 0.0, $44 = 0.0, $440 = 0.0, $441 = 0.0, $442 = 0.0, $443 = 0.0, $444 = 0.0;
 var $445 = 0.0, $446 = 0.0, $447 = 0.0, $448 = 0.0, $449 = 0, $45 = 0.0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0.0, $460 = 0, $461 = 0, $462 = 0;
 var $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0.0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0.0, $480 = 0;
 var $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0.0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0;
 var $5 = 0, $50 = 0.0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0.0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0;
 var $517 = 0, $518 = 0, $519 = 0, $52 = 0.0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0.0, $530 = 0, $531 = 0.0, $532 = 0.0, $533 = 0, $534 = 0.0;
 var $535 = 0.0, $536 = 0.0, $537 = 0.0, $538 = 0.0, $539 = 0.0, $54 = 0.0, $540 = 0.0, $541 = 0.0, $542 = 0.0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0.0, $550 = 0, $551 = 0, $552 = 0;
 var $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0.0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0.0, $570 = 0;
 var $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0.0, $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0;
 var $59 = 0.0, $590 = 0, $591 = 0.0, $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $6 = 0, $60 = 0.0, $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0;
 var $607 = 0, $608 = 0, $609 = 0, $61 = 0.0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0.0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0;
 var $625 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0, $63 = 0.0, $630 = 0, $631 = 0, $632 = 0, $633 = 0, $634 = 0, $635 = 0, $636 = 0, $637 = 0, $638 = 0, $639 = 0, $64 = 0.0, $640 = 0, $641 = 0, $642 = 0;
 var $643 = 0, $644 = 0, $645 = 0, $646 = 0, $647 = 0, $648 = 0, $649 = 0, $65 = 0.0, $650 = 0, $651 = 0, $652 = 0, $653 = 0, $654 = 0, $655 = 0, $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0.0, $660 = 0;
 var $661 = 0, $662 = 0, $663 = 0, $664 = 0, $665 = 0, $666 = 0, $667 = 0, $668 = 0, $669 = 0, $67 = 0.0, $670 = 0, $671 = 0, $672 = 0, $673 = 0, $674 = 0, $675 = 0, $676 = 0, $677 = 0, $678 = 0, $679 = 0;
 var $68 = 0.0, $680 = 0, $681 = 0, $682 = 0, $683 = 0, $684 = 0, $685 = 0, $686 = 0, $687 = 0, $688 = 0, $689 = 0, $69 = 0.0, $690 = 0, $691 = 0, $692 = 0, $693 = 0, $694 = 0, $695 = 0, $696 = 0, $697 = 0;
 var $698 = 0, $699 = 0, $7 = 0, $70 = 0.0, $700 = 0, $701 = 0, $702 = 0, $703 = 0, $704 = 0, $705 = 0, $706 = 0, $707 = 0, $708 = 0, $709 = 0, $71 = 0.0, $710 = 0, $711 = 0, $712 = 0, $713 = 0, $714 = 0;
 var $715 = 0, $716 = 0, $717 = 0, $718 = 0, $719 = 0, $72 = 0.0, $720 = 0, $721 = 0, $722 = 0, $723 = 0, $724 = 0, $725 = 0, $726 = 0, $727 = 0, $728 = 0, $729 = 0, $73 = 0.0, $730 = 0, $731 = 0, $732 = 0;
 var $733 = 0, $734 = 0, $735 = 0, $736 = 0, $737 = 0, $738 = 0, $739 = 0, $74 = 0.0, $740 = 0, $741 = 0, $742 = 0, $743 = 0, $744 = 0, $745 = 0, $746 = 0, $747 = 0, $748 = 0, $749 = 0, $75 = 0.0, $750 = 0;
 var $751 = 0, $752 = 0, $753 = 0, $754 = 0, $755 = 0, $756 = 0, $757 = 0, $758 = 0, $759 = 0, $76 = 0.0, $760 = 0, $761 = 0, $762 = 0, $763 = 0, $764 = 0, $765 = 0, $766 = 0, $767 = 0, $768 = 0, $769 = 0;
 var $77 = 0.0, $770 = 0, $771 = 0, $772 = 0, $773 = 0, $774 = 0, $775 = 0, $776 = 0, $777 = 0, $778 = 0, $779 = 0, $78 = 0.0, $780 = 0, $781 = 0, $782 = 0, $783 = 0, $784 = 0, $785 = 0, $786 = 0, $787 = 0;
 var $788 = 0, $789 = 0, $79 = 0.0, $790 = 0, $791 = 0, $792 = 0, $793 = 0, $794 = 0, $795 = 0.0, $796 = 0, $797 = 0, $798 = 0, $799 = 0, $8 = 0, $80 = 0.0, $800 = 0, $801 = 0, $802 = 0, $803 = 0, $804 = 0;
 var $805 = 0, $806 = 0, $807 = 0, $808 = 0, $809 = 0, $81 = 0.0, $810 = 0, $811 = 0, $812 = 0, $813 = 0, $814 = 0, $815 = 0, $816 = 0, $817 = 0, $818 = 0, $819 = 0, $82 = 0.0, $820 = 0, $821 = 0, $822 = 0;
 var $823 = 0, $824 = 0, $825 = 0, $826 = 0, $827 = 0, $828 = 0, $829 = 0, $83 = 0.0, $830 = 0, $831 = 0, $832 = 0, $833 = 0, $834 = 0, $835 = 0, $836 = 0, $837 = 0, $838 = 0, $839 = 0, $84 = 0.0, $840 = 0;
 var $841 = 0, $842 = 0, $843 = 0, $844 = 0, $845 = 0, $846 = 0, $847 = 0, $848 = 0, $849 = 0, $85 = 0.0, $850 = 0, $851 = 0, $852 = 0, $853 = 0, $854 = 0, $855 = 0, $856 = 0, $857 = 0, $858 = 0, $859 = 0;
 var $86 = 0.0, $860 = 0, $861 = 0, $862 = 0, $863 = 0, $864 = 0, $865 = 0, $866 = 0, $867 = 0, $868 = 0, $869 = 0, $87 = 0.0, $870 = 0, $871 = 0, $872 = 0, $873 = 0, $874 = 0, $875 = 0, $876 = 0, $877 = 0;
 var $878 = 0, $879 = 0, $88 = 0.0, $880 = 0, $881 = 0, $882 = 0, $883 = 0, $884 = 0, $885 = 0, $886 = 0, $887 = 0, $888 = 0, $889 = 0, $89 = 0.0, $890 = 0, $891 = 0, $892 = 0, $893 = 0, $894 = 0, $895 = 0;
 var $896 = 0, $897 = 0, $898 = 0, $899 = 0, $9 = 0, $90 = 0.0, $900 = 0, $901 = 0, $902 = 0, $903 = 0, $904 = 0.0, $905 = 0.0, $906 = 0, $907 = 0, $908 = 0, $909 = 0, $91 = 0.0, $910 = 0, $911 = 0, $912 = 0;
 var $913 = 0, $914 = 0, $915 = 0, $916 = 0, $917 = 0, $918 = 0, $919 = 0, $92 = 0.0, $920 = 0, $921 = 0, $922 = 0, $923 = 0, $924 = 0, $925 = 0, $926 = 0, $927 = 0, $928 = 0, $929 = 0, $93 = 0.0, $930 = 0;
 var $931 = 0, $932 = 0, $933 = 0, $934 = 0, $935 = 0, $936 = 0, $937 = 0, $938 = 0, $939 = 0, $94 = 0.0, $940 = 0, $941 = 0, $942 = 0, $943 = SIMD_Int32x4(0,0,0,0), $944 = SIMD_Int32x4(0,0,0,0), $945 = 0, $946 = 0, $947 = 0, $948 = 0, $949 = 0;
 var $95 = 0.0, $950 = 0, $951 = 0, $952 = 0, $953 = 0, $954 = 0, $955 = 0, $956 = 0, $957 = 0, $958 = 0, $959 = 0, $96 = 0.0, $960 = 0, $961 = 0, $962 = 0, $963 = 0, $964 = 0, $965 = 0, $966 = 0, $967 = 0;
 var $968 = 0, $969 = 0, $97 = 0, $970 = 0, $971 = 0, $972 = 0, $973 = 0, $974 = 0, $975 = 0, $976 = 0, $977 = 0, $978 = 0, $979 = 0, $98 = 0, $980 = 0, $981 = 0, $982 = 0.0, $983 = 0.0, $984 = 0, $985 = 0.0;
 var $986 = 0.0, $987 = 0.0, $988 = 0.0, $989 = 0.0, $99 = 0, $990 = 0.0, $991 = 0, $992 = 0.0, $993 = 0.0, $994 = 0.0, $995 = 0.0, $996 = 0, $997 = 0, $998 = 0, $999 = 0, $_0$0$i$i$i$i = 0.0, $_0$0$i$i259 = 0, $_0$0$i241$i$i = 0.0, $_0$0$i241$in$in$i$i = 0, $_0$0$i247$i = 0;
 var $_0$0$i255$i = 0, $_0$0$i266$i = 0, $_0$0$i6$i$i$i = 0.0, $_0$0$sroa$speculated$i$i$i$i$i$i = 0, $_0$0$sroa$speculated$i$i$i$i$i$i$i$i = 0, $_0$0$sroa$speculated$i$i$i$i$i$i$i$i$i$i = 0, $_0$0$sroa$speculated$i$i$i$i$i$i$i307$i = 0, $_0$sroa$0$0$i$i$i$i$i = 0.0, $_0$sroa$0$0$i$i$i474$i$i = 0.0, $_1$sroa$4$0$$sroa_idx3$i$i = 0, $_1$sroa$4$0$$sroa_idx3$i$i4174 = 0, $_1$sroa$5$0$$sroa_idx5$i$i = 0, $_1$sroa$5$0$$sroa_idx5$i$i4175 = 0, $_10$i$i = 0, $_10$i$i4171 = 0, $_10$sroa$18$0$ph$i$i$i$i = 0, $_10$sroa$18$0$ph$in$ph$i$i$i$i = 0, $_10$sroa$21$0$ph$ph$i$i$i$i = 0, $_10$sroa$4$0$$sroa_idx6$i$i = 0, $_10$sroa$4$0$$sroa_idx6$i$i$i = 0;
 var $_10$sroa$4$0$$sroa_idx6$i331$i = 0, $_107$i$i$i$i$i = 0, $_11$i$i$i = 0, $_11$i232$i$i = 0, $_11$i317$i$i = 0, $_112$i$i$i$i$i = 0, $_126$i = 0, $_13$sroa$0$0$i$i$i = 0, $_13$sroa$5$0$i$i$i = 0, $_130$i = 0, $_130$sroa$0$0$iter4$sroa$6$0562$i = 0, $_134$sroa$10$0$$sroa_idx549 = 0, $_134$sroa$4$0$$sroa_idx535 = 0, $_134$sroa$5$0$$sroa_idx537 = 0, $_134$sroa$6$0$$sroa_idx539 = 0, $_134$sroa$7$0$$sroa_idx542 = 0, $_134$sroa$8$0$$sroa_idx545 = 0, $_134$sroa$9$0$$sroa_idx547 = 0, $_138$sroa$0$0 = 0, $_138$sroa$13$1 = 0;
 var $_138$sroa$16$1 = 0, $_138$sroa$16$1$in$in = 0, $_138$sroa$19$1 = 0, $_138$sroa$19$1$in$in = 0, $_138$sroa$22$1 = 0, $_138$sroa$22$1$in$in = 0, $_138$sroa$25$1 = 0, $_138$sroa$25$1$in$in = 0, $_138$sroa$28$1 = 0, $_138$sroa$28$1$in$in = 0, $_138$sroa$31$1 = 0, $_138$sroa$31$1$in$in = 0, $_138$sroa$34$1$in$in = 0, $_138$sroa$34$1611 = 0.0, $_14$i = 0, $_14$i$i$i$i$i = 0, $_14$sroa$0$0$$sroa_idx$i = 0, $_14$sroa$0$0$$sroa_idx$i$i$i = 0, $_14$sroa$0$0$$sroa_idx$i$i$i$i = 0, $_14$sroa$0$0$$sroa_idx$i35$i$i$i = 0;
 var $_14$sroa$0$0$copyload$i = 0.0, $_14$sroa$0$0$copyload$i$i$i = 0.0, $_14$sroa$0$0$copyload$i$i$i$i = 0.0, $_14$sroa$0$0$copyload$i36$i$i$i = 0.0, $_14$sroa$4$0$$sroa_idx13$i = 0, $_14$sroa$4$0$$sroa_idx13$i$i$i = 0, $_14$sroa$4$0$$sroa_idx13$i$i$i$i = 0, $_14$sroa$4$0$$sroa_idx13$i37$i$i$i = 0, $_14$sroa$4$0$copyload$i = 0.0, $_14$sroa$4$0$copyload$i$i$i = 0.0, $_14$sroa$4$0$copyload$i$i$i$i = 0.0, $_14$sroa$4$0$copyload$i38$i$i$i = 0.0, $_14$sroa$5$0$$sroa_idx15$i = 0, $_14$sroa$5$0$$sroa_idx15$i$i$i = 0, $_14$sroa$5$0$$sroa_idx15$i$i$i$i = 0, $_14$sroa$5$0$copyload$i = 0.0, $_14$sroa$5$0$copyload$i$i$i = 0.0, $_14$sroa$5$0$copyload$i$i$i$i = 0.0, $_14$sroa$6$0$$sroa_idx17$i = 0, $_14$sroa$6$0$$sroa_idx17$i$i$i = 0;
 var $_14$sroa$6$0$$sroa_idx17$i$i$i$i = 0, $_14$sroa$6$0$copyload$i = 0.0, $_14$sroa$6$0$copyload$i$i$i = 0.0, $_14$sroa$6$0$copyload$i$i$i$i = 0.0, $_14$sroa$7$0$$sroa_idx19$i = 0, $_14$sroa$7$0$$sroa_idx19$i$i$i = 0, $_14$sroa$7$0$$sroa_idx19$i$i$i$i = 0, $_14$sroa$7$0$$sroa_idx19$i43$i$i$i = 0, $_14$sroa$7$0$copyload$i = 0.0, $_14$sroa$7$0$copyload$i$i$i = 0.0, $_14$sroa$7$0$copyload$i$i$i$i = 0.0, $_14$sroa$7$0$copyload$i44$i$i$i = 0.0, $_14$sroa$8$0$$sroa_idx21$i = 0, $_14$sroa$8$0$$sroa_idx21$i$i$i = 0, $_14$sroa$8$0$$sroa_idx21$i$i$i$i = 0, $_14$sroa$8$0$$sroa_idx21$i45$i$i$i = 0, $_14$sroa$8$0$copyload$i = 0.0, $_14$sroa$8$0$copyload$i$i$i = 0.0, $_14$sroa$8$0$copyload$i$i$i$i = 0.0, $_14$sroa$8$0$copyload$i46$i$i$i = 0.0;
 var $_149$sroa$0$0$i = 0, $_149$sroa$0$0$iter4$sroa$6$0$i = 0, $_149$sroa$0$0$ph$i = 0, $_149$sroa$0$0$ph404$i = 0, $_155$sroa$0$0$copyload$i = 0, $_155$sroa$4$0$$sroa_idx391$i = 0, $_155$sroa$4$0$copyload$i = 0, $_155$sroa$5$0$$sroa_idx393$i = 0, $_155$sroa$5$0$copyload$i = 0, $_156$i = 0, $_16$sroa$0$0$$sroa_cast3$i$i$i$i$i$i = 0, $_16$sroa$0$0$copyload$i$i$i = 0, $_16$sroa$0$i$i$i$sroa$0$0$src$i$sroa$0$0$$sroa_cast26$i$i$i$sroa_cast$i$i$i$i = 0, $_16$sroa$0$i$i$i$sroa$4$0$copyload$i$i$i$i = 0, $_16$sroa$0$i$i$i$sroa$4$0$src$i$sroa$0$0$$sroa_cast26$i$i$i$sroa_idx$i$i$i$i = 0, $_16$sroa$0$i$i$i$sroa$5$0$copyload$i$i$i$i = 0, $_16$sroa$0$i$i$i$sroa$5$0$src$i$sroa$0$0$$sroa_cast26$i$i$i$sroa_idx$i$i$i$i = 0, $_16$sroa$4$0$$sroa_idx2$i$i$i = 0, $_16$sroa$4$0$$sroa_idx7$i$i$i$i$i$i = 0, $_16$sroa$4$0$$sroa_idx7$i$i$i$i$i$i$i = 0;
 var $_16$sroa$4$0$$sroa_idx9$i$i$i$i$i$i$i = 0, $_16$sroa$4$0$copyload$i$i$i = 0, $_16$sroa$5$0$$sroa_idx11$i$i$i$i$i$i$i = 0, $_16$sroa$5$0$$sroa_idx4$i$i$i = 0, $_16$sroa$5$0$$sroa_idx9$i$i$i$i$i$i = 0, $_16$sroa$5$0$$sroa_idx9$i$i$i$i$i$i$i = 0, $_16$sroa$5$0$copyload$i$i$i = 0.0, $_16$sroa$6$0$$sroa_idx6$i$i$i = 0, $_16$sroa$6$0$copyload$i$i$i = 0.0, $_17$i$i$i = 0, $_17$i233$i$i = 0, $_17$i318$i$i = 0, $_17$sroa$0$0$i$i$i = 0, $_17$sroa$5$0$i$i$i = 0, $_179$i = 0, $_18$sroa$0$0$copyload$i$i = 0, $_18$sroa$0$0$i = 0, $_18$sroa$10$0$$sroa_idx19$i = 0, $_18$sroa$14$0$$sroa_idx27$i = 0, $_18$sroa$14$049$i = 0;
 var $_18$sroa$14$1$i = 0, $_18$sroa$15$0$$sroa_idx29$i = 0, $_18$sroa$15$048$i = 0, $_18$sroa$15$1$i = 0, $_18$sroa$16$0$$sroa_idx31$i = 0, $_18$sroa$16$047$i = 0, $_18$sroa$16$1$i = 0, $_18$sroa$4$0$copyload$i$i = 0, $_18$sroa$5$0$copyload$i$i = 0, $_18$sroa$6$0$$sroa_idx15$i = 0, $_18$sroa$6$0$i = 0, $_18$sroa$9$0$$sroa_idx17$i = 0, $_18$sroa$9$054$i = 0, $_18$sroa$9$1$i = 0, $_19$sroa$0$0$iter$sroa$6$0$i = 0, $_19$sroa$0$0$iter$sroa$6$0$i224 = 0, $_19$sroa$0$0$iter$sroa$6$0568$i = 0, $_19$sroa$0$0$iter$sroa$6$0824$i = 0, $_191$sroa$4$0$$sroa_idx410 = 0, $_191$sroa$5$0$$sroa_idx412 = 0;
 var $_191$sroa$6$sroa$0$0$_191$sroa$6$0$$sroa_cast415$sroa_idx = 0, $_191$sroa$6$sroa$4$0$_191$sroa$6$0$$sroa_cast415$sroa_idx447 = 0, $_191$sroa$6$sroa$5$0$_191$sroa$6$0$$sroa_cast415$sroa_idx449 = 0, $_191$sroa$6$sroa$6$0$_191$sroa$6$0$$sroa_cast415$sroa_idx451 = 0, $_191$sroa$6$sroa$7$0$_191$sroa$6$0$$sroa_cast415$sroa_idx453 = 0, $_191$sroa$6$sroa$8$0$_191$sroa$6$0$$sroa_cast415$sroa_idx455 = 0, $_191$sroa$6$sroa$9$0$_191$sroa$6$0$$sroa_cast415$sroa_idx457 = 0, $_20$i = 0, $_272$sroa$0$0$iter8$sroa$6$0$i$i = 0, $_272$sroa$0$0$iter8$sroa$6$01163$i$i = 0, $_28$i$i$i$i$i = 0, $_299$0$off0$i = 0, $_3$0$i$i = 0, $_3$i = 0, $_3$sroa$2$sroa$0$0$i$i$i = 0, $_31$sroa$4$0$$sroa_idx42$i$i$i$i$i$i = 0, $_31$sroa$5$0$$sroa_idx44$i$i$i$i$i$i = 0, $_4$sroa$0$0$$sroa_idx$i = 0, $_4$sroa$0$0$$sroa_idx$i$i$i = 0, $_4$sroa$0$0$$sroa_idx$i$i$i$i = 0;
 var $_4$sroa$0$0$$sroa_idx$i23$i$i$i = 0, $_4$sroa$0$0$copyload$i = 0.0, $_4$sroa$0$0$copyload$i$i$i = 0.0, $_4$sroa$0$0$copyload$i$i$i$i = 0.0, $_4$sroa$0$0$copyload$i24$i$i$i = 0.0, $_4$sroa$4$0$$sroa_idx26$i = 0, $_4$sroa$4$0$$sroa_idx26$i$i$i = 0, $_4$sroa$4$0$$sroa_idx26$i$i$i$i = 0, $_4$sroa$4$0$$sroa_idx26$i25$i$i$i = 0, $_4$sroa$4$0$copyload$i = 0.0, $_4$sroa$4$0$copyload$i$i$i = 0.0, $_4$sroa$4$0$copyload$i$i$i$i = 0.0, $_4$sroa$4$0$copyload$i26$i$i$i = 0.0, $_4$sroa$5$0$$sroa_idx28$i = 0, $_4$sroa$5$0$$sroa_idx28$i$i$i = 0, $_4$sroa$5$0$$sroa_idx28$i$i$i$i = 0, $_4$sroa$5$0$$sroa_idx28$i27$i$i$i = 0, $_4$sroa$5$0$copyload$i = 0.0, $_4$sroa$5$0$copyload$i$i$i = 0.0, $_4$sroa$5$0$copyload$i$i$i$i = 0.0;
 var $_4$sroa$5$0$copyload$i28$i$i$i = 0.0, $_4$sroa$6$0$$sroa_idx30$i = 0, $_4$sroa$6$0$$sroa_idx30$i$i$i = 0, $_4$sroa$6$0$$sroa_idx30$i$i$i$i = 0, $_4$sroa$6$0$$sroa_idx30$i29$i$i$i = 0, $_4$sroa$6$0$copyload$i = 0.0, $_4$sroa$6$0$copyload$i$i$i = 0.0, $_4$sroa$6$0$copyload$i$i$i$i = 0.0, $_4$sroa$6$0$copyload$i30$i$i$i = 0.0, $_4$sroa$7$0$$sroa_idx32$i = 0, $_4$sroa$7$0$$sroa_idx32$i$i$i = 0, $_4$sroa$7$0$$sroa_idx32$i$i$i$i = 0, $_4$sroa$7$0$$sroa_idx32$i31$i$i$i = 0, $_4$sroa$7$0$copyload$i = 0.0, $_4$sroa$7$0$copyload$i$i$i = 0.0, $_4$sroa$7$0$copyload$i$i$i$i = 0.0, $_4$sroa$7$0$copyload$i32$i$i$i = 0.0, $_4$sroa$8$0$$sroa_idx34$i = 0, $_4$sroa$8$0$$sroa_idx34$i$i$i = 0, $_4$sroa$8$0$$sroa_idx34$i$i$i$i = 0;
 var $_4$sroa$8$0$$sroa_idx34$i33$i$i$i = 0, $_4$sroa$8$0$copyload$i = 0.0, $_4$sroa$8$0$copyload$i$i$i = 0.0, $_4$sroa$8$0$copyload$i$i$i$i = 0.0, $_4$sroa$8$0$copyload$i34$i$i$i = 0.0, $_47 = 0, $_5$sroa$0$0$$sroa_idx$i$i = 0, $_5$sroa$0$0$$sroa_idx$i$i$i$i$i$i = 0, $_5$sroa$0$0$$sroa_idx$i$i$i$i$i$i$i = 0, $_5$sroa$0$0$$sroa_idx$i$i$i$i15$i$i$i = 0, $_5$sroa$0$0$copyload$i$i$i$i$i$i = 0.0, $_5$sroa$0$0$copyload$i$i$i$i$i$i$i = 0.0, $_5$sroa$0$0$copyload$i$i$i$i16$i$i$i = 0.0, $_5$sroa$4$0$$sroa_idx2$i$i$i$i$i$i = 0, $_5$sroa$4$0$$sroa_idx2$i$i$i$i$i$i$i = 0, $_5$sroa$4$0$$sroa_idx2$i$i$i$i17$i$i$i = 0, $_5$sroa$4$0$$sroa_idx45$i$i$i$i$i$i = 0, $_5$sroa$4$0$$sroa_idx8$i = 0, $_5$sroa$4$0$$sroa_idx8$i$i$i$i = 0, $_5$sroa$4$0$$sroa_idx8$i$i164 = 0;
 var $_5$sroa$4$0$copyload$i$i$i$i$i$i = 0, $_5$sroa$4$0$copyload$i$i$i$i$i$i$i = 0.0, $_5$sroa$4$0$copyload$i$i$i$i$i$i127 = 0.0, $_5$sroa$4$0$copyload$i$i$i$i18$i$i$i = 0.0, $_5$sroa$5$0$$sroa_idx11$i = 0, $_5$sroa$5$0$$sroa_idx11$i$i$i$i = 0, $_5$sroa$5$0$$sroa_idx11$i$i166 = 0, $_5$sroa$5$0$$sroa_idx4$i$i$i$i$i$i = 0, $_5$sroa$5$0$$sroa_idx4$i$i$i$i$i$i$i = 0, $_5$sroa$5$0$$sroa_idx4$i$i$i$i19$i$i$i = 0, $_5$sroa$5$0$$sroa_idx47$i$i$i$i$i$i = 0, $_5$sroa$5$0$copyload$i$i$i$i$i$i = 0, $_5$sroa$5$0$copyload$i$i$i$i$i$i$i = 0.0, $_5$sroa$5$0$copyload$i$i$i$i$i$i128 = 0.0, $_5$sroa$5$0$copyload$i$i$i$i20$i$i$i = 0.0, $_5$sroa$6$0$$sroa_idx14$i = 0, $_5$sroa$6$0$$sroa_idx14$i$i$i$i = 0, $_5$sroa$6$0$$sroa_idx14$i$i168 = 0, $_5$sroa$6$0$$sroa_idx6$i$i$i$i$i$i = 0, $_5$sroa$6$0$$sroa_idx6$i$i$i$i$i$i$i = 0;
 var $_5$sroa$6$0$$sroa_idx6$i$i$i$i21$i$i$i = 0, $_5$sroa$6$0$copyload$i$i$i$i$i$i = 0.0, $_5$sroa$6$0$copyload$i$i$i$i$i$i$i = 0.0, $_5$sroa$6$0$copyload$i$i$i$i22$i$i$i = 0.0, $_6$sroa$0$0$$sroa_idx$i$i$i$i$i$i = 0, $_7$sroa$0$0$$sroa_idx$i$i$i = 0, $_7$sroa$0$0$$sroa_idx$i$i$i$i = 0, $_7$sroa$0$0$copyload$i$i$i = 0.0, $_7$sroa$0$0$copyload$i$i$i$i = 0.0, $_7$sroa$4$0$$sroa_idx2$i$i$i = 0, $_7$sroa$4$0$$sroa_idx2$i$i$i$i = 0, $_7$sroa$4$0$copyload$i$i$i = 0.0, $_7$sroa$4$0$copyload$i$i$i$i = 0.0, $_7$sroa$5$0$$sroa_idx4$i$i$i = 0, $_7$sroa$5$0$$sroa_idx4$i$i$i$i = 0, $_7$sroa$5$0$copyload$i$i$i = 0.0, $_7$sroa$5$0$copyload$i$i$i$i = 0.0, $_7$sroa$6$0$$sroa_idx6$i$i$i = 0, $_7$sroa$6$0$$sroa_idx6$i$i$i$i = 0, $_7$sroa$6$0$copyload$i$i$i = 0.0;
 var $_7$sroa$6$0$copyload$i$i$i$i = 0.0, $_7$sroa$7$0$$sroa_idx8$i$i$i = 0, $_7$sroa$7$0$$sroa_idx8$i$i$i$i = 0, $_7$sroa$7$0$copyload$i$i$i = 0.0, $_7$sroa$7$0$copyload$i$i$i$i = 0.0, $_7$sroa$8$0$$sroa_idx10$i$i$i = 0, $_7$sroa$8$0$$sroa_idx10$i$i$i$i = 0, $_7$sroa$8$0$copyload$i$i$i = 0.0, $_7$sroa$8$0$copyload$i$i$i$i = 0.0, $_73$2101$i$i$i$i$i$i$i = 0, $_73$sroa$7$16$_5$sroa$0$0$$sroa_cast41$i$sroa_cast$i$i$i$i$i = 0, $_76$1106$i$i$i$i$i$i$i = 0, $_8$i$i = 0, $_8$i$i4170 = 0, $_8$i142$i$i$i$i = 0, $_8$i142$i$i397$i$i = 0, $_89 = 0, $_9$i143$i$i$i$i$sroa$3$0$$sroa_idx4283 = 0, $_9$i143$i$i$i$i$sroa$4$0$$sroa_idx4284 = 0, $_9$i143$i$i$i$i$sroa$54286$0$$sroa_idx4287 = 0;
 var $_9$i143$i$i$i$i$sroa$6$0$$sroa_idx4288 = 0, $_9$i143$i$i398$i$i$sroa$3$0$$sroa_idx4290 = 0, $_9$i143$i$i398$i$i$sroa$4$0$$sroa_idx4291 = 0, $_9$i143$i$i398$i$i$sroa$54293$0$$sroa_idx4294 = 0, $_9$i143$i$i398$i$i$sroa$6$0$$sroa_idx4295 = 0, $_95$i$i$i$i$i = 0, $ang_vel1$sroa$0$0103$i$i$i$i$i$i$i = 0.0, $ang_vel2$sroa$0$0108$i$i$i$i$i$i$i = 0.0, $arg$i$i$i = 0, $arg$i$i$i$i$i$i = 0, $begin_aabb$i = 0, $bodies$i = 0, $bodies$idx$val$i = 0, $bodies$idx109$val$i = 0, $bucket$sroa$0$0$i$i$i$i$i = 0, $bucket$sroa$0$1$i$i$i$i$i = 0, $bucket$sroa$12$0$i$i$i$i$i = 0, $bucket$sroa$12$1$i$i$i$i$i = 0, $bucket$sroa$22$0$i$i$i$i$i = 0, $bucket$sroa$22$1$i$i$i$i$i = 0;
 var $bucket1$sroa$0$sroa$0$0$i$i$i$i$i$i = 0, $bucket1$sroa$0$sroa$0$1$i$i$i$i$i$i = 0, $bucket1$sroa$0$sroa$6$0$i$i$i$i$i$i = 0, $bucket1$sroa$0$sroa$6$1$i$i$i$i$i$i = 0, $bucket1$sroa$9$0$i$i$i$i$i$i = 0, $bucket1$sroa$9$1$i$i$i$i$i$i = 0, $buckets$sroa$12$091$i$i$i$i$i$i = 0, $collector = 0, $collector$idx$val = 0, $collector$idx30$val = 0, $cond$i = 0, $cond$i$i = 0, $cond$i$i$i = 0, $cond$i$i$i$i = 0, $cond$i$i$i$i$i = 0, $cond$i$i$i$i$i$i$i$i = 0, $cond$i$i$i$i$i$i$i$i$i$i$i = 0, $cond$i$i$i$i$i$i$i68 = 0, $cond$i$i$i$i$i$i111 = 0, $cond$i$i$i$i$i$i410$i$i = 0;
 var $cond$i$i$i$i$i107 = 0, $cond$i$i$i$i$i404$i$i = 0, $cond$i$i$i$i156$i$i$i$i = 0, $cond$i$i$i$i156$i$i419$i$i = 0, $cond$i$i$i$i167$i$i$i$i = 0, $cond$i$i$i$i167$i$i456$i$i = 0, $cond$i$i$i$i171 = 0, $cond$i$i$i$i175$i$i$i$i = 0, $cond$i$i$i$i175$i$i438$i$i = 0, $cond$i$i$i$i191 = 0, $cond$i$i$i$i20$i$i$i = 0, $cond$i$i$i$i26$i$i$i$i$i$i$i = 0, $cond$i$i$i$i267 = 0, $cond$i$i$i$i8$i$i$i = 0, $cond$i$i$i$i90 = 0, $cond$i$i$i142 = 0, $cond$i$i$i149 = 0, $cond$i$i$i175 = 0, $cond$i$i$i190$i = 0, $cond$i$i$i197$i = 0;
 var $cond$i$i$i201$i = 0, $cond$i$i$i206 = 0, $cond$i$i$i210$i = 0, $cond$i$i$i217$i = 0, $cond$i$i$i221$i = 0, $cond$i$i$i225$i = 0, $cond$i$i$i230$i = 0, $cond$i$i$i242$i = 0, $cond$i$i$i251$i = 0, $cond$i$i$i256$i = 0, $cond$i$i$i258$i = 0, $cond$i$i$i260$i = 0, $cond$i$i$i269$i = 0, $cond$i$i$i273$i = 0, $cond$i$i$i309$i$i = 0, $cond$i$i$i316$i = 0, $cond$i$i$i319$i$i = 0, $cond$i$i$i333 = 0, $cond$i$i$i337$i$i = 0, $cond$i$i$i341 = 0;
 var $cond$i$i$i349 = 0, $cond$i$i$i356 = 0, $cond$i$i$i385$i$i = 0, $cond$i$i$i388$i$i = 0, $cond$i$i$i44$i = 0, $cond$i$i$us$i$i = 0, $cond$i$i$us1140$i$i = 0, $cond$i$i$us1150$i$i = 0, $cond$i$i272 = 0, $cond$i153 = 0, $cond$i338 = 0, $cond$i346 = 0, $cond43$i$i = 0, $dir$i = 0, $dist$0$i$i$i$i$i$i = 0, $dist$0$i$i$i$i$i$i$i = 0, $dist$0$i$i$i$i$i$i$i$i = 0, $dist$0$i$i$i$i$i28$i$i = 0, $dist$0$i$i$i$i12$i$i$i = 0, $dist$0$i62$i$i$i$i$i = 0;
 var $dvel$0$i$i$i$i$i = 0.0, $dvel$0$i$i$i487$i$i = 0.0, $dvel$1$i$i$i$i$i = 0.0, $dvel$1$i$i$i498$i$i = 0.0, $eh$lpad$body$i$i$index37Z2D = 0, $eh$lpad$body$i$i$indexZ2D = 0, $eh$lpad$body$index23Z2D = 0, $eh$lpad$body$indexZ2D = 0, $eh$lpad$body$ph$i$index13Z2D = 0, $eh$lpad$body$ph$i$indexZ2D = 0, $eh$lpad$body144$i$index59Z2D = 0, $eh$lpad$body144$i$indexZ2D = 0, $eh$lpad$body174$i$index3Z2D = 0, $eh$lpad$body174$i$indexZ2D = 0, $eh$lpad$body182$i$index49Z2D = 0, $eh$lpad$body182$i$indexZ2D = 0, $eh$lpad$body203$index78Z2D = 0, $eh$lpad$body203$indexZ2D = 0, $eh$lpad$body288$index88Z2D = 0, $eh$lpad$body288$indexZ2D = 0;
 var $eh$lpad$body379$index73Z2D = 0, $eh$lpad$body379$indexZ2D = 0, $eh$lpad$body4183$index30Z2D = 0, $eh$lpad$body4183$indexZ2D = 0, $eh$lpad$body539$i$i$index43Z2D = 0, $eh$lpad$body539$i$i$indexZ2D = 0, $eh$lpad$body70$index102Z2D = 0, $eh$lpad$body70$indexZ2D = 0, $end_aabb$i = 0, $error$i$i$i$i = 0, $error$i$i400$i$i = 0, $exitcond$i$i$i = 0, $filts$i = 0, $fks$i$i = 0, $i$i141$i$i$i$i = 0, $i$i141$i$i396$i$i = 0, $ib$0$i$i$i$i$i$i = 0, $id$i = 0, $id$i$i = 0, $iter$sroa$0$0$$i = 0;
 var $iter$sroa$0$0$$i225 = 0, $iter$sroa$0$0$569$i = 0, $iter$sroa$0$0$825$i = 0, $iter$sroa$0$0$i$i = 0, $iter$sroa$0$0$in1198 = 0, $iter$sroa$0$0$in413$i = 0, $iter$sroa$0$0$in46$i = 0, $iter$sroa$0$0$ph$i$i = 0, $iter$sroa$0$042$i$i$i$i = 0, $iter$sroa$0$042$i$i$i$i$phi = 0, $iter$sroa$0$042$i$i434$i$i = 0, $iter$sroa$0$042$i$i434$i$i$phi = 0, $iter$sroa$0$0567$i = 0, $iter$sroa$0$0567$i$phi = 0, $iter$sroa$0$0823$i = 0, $iter$sroa$0$0823$i$phi = 0, $iter$sroa$6$0$$i = 0, $iter$sroa$6$0$$i226 = 0, $iter$sroa$6$0$570$i = 0, $iter$sroa$6$0$826$i = 0;
 var $iter12$sroa$0$0$i$i = 0, $iter12$sroa$0$0556$i = 0, $iter12$sroa$0$0556$i$phi = 0, $iter12$sroa$0$1$i$i = 0, $iter12$sroa$10$0$i$i = 0, $iter12$sroa$5$0$i$i = 0, $iter12$sroa$5$1$i$i = 0, $iter14$sroa$0$0$i$i = 0, $iter14$sroa$0$1$i$i = 0, $iter14$sroa$10$0$i$i = 0, $iter14$sroa$5$0$i$i = 0, $iter14$sroa$5$1$i$i = 0, $iter15$sroa$0$0554$i = 0, $iter15$sroa$0$0554$i$phi = 0, $iter16$sroa$0$01138$i$i = 0, $iter2$sroa$0$0$i$i = 0, $iter2$sroa$0$0$in1197 = 0, $iter2$sroa$0$0$in563$i = 0, $iter2$sroa$0$0$ph412819$i = 0, $iter2$sroa$0$0$ph821$i = 0;
 var $iter2$sroa$0$0817$i = 0, $iter2$sroa$0$1$i$i = 0, $iter2$sroa$10$0$i$i = 0, $iter2$sroa$5$0$i$i = 0, $iter2$sroa$5$1$i$i = 0, $iter2$sroa$9$0$i = 0, $iter2$sroa$9$0$ph$i = 0, $iter2$sroa$9$0$ph$ph$i = 0, $iter4 = 0, $iter4$sroa$0$0$$i = 0, $iter4$sroa$0$0$i = 0, $iter4$sroa$0$0$i$i = 0, $iter4$sroa$0$0$ph$i = 0, $iter4$sroa$0$0$ph$i$i = 0, $iter4$sroa$0$0$ph403$i = 0, $iter4$sroa$0$0560$i = 0, $iter4$sroa$6$0$$i = 0, $iter4$sroa$6$0$$i238 = 0, $iter4$sroa$6$0$i = 0, $iter4$sroa$6$0$ph$i = 0;
 var $iter4$sroa$6$0$ph402$i = 0, $iter6$sroa$0$01166$i$i = 0, $iter8$sroa$0$0$$i$i = 0, $iter8$sroa$0$0$1164$i$i = 0, $iter8$sroa$0$01162$i$i = 0, $iter8$sroa$0$01162$i$i$phi = 0, $iter8$sroa$4$0558$i = 0, $iter8$sroa$6$0$$i$i = 0, $iter8$sroa$6$0$1165$i$i = 0, $iterator$sroa$45$19$i$i$i$i = 0, $iterator$sroa$45$19$in$i$i$i$i = 0, $joint_offset$0$ph$i$i = 0, $joints$i = 0, $joints$idx$val$i = 0, $joints$idx94$val$i = 0, $k$i$i$i = 0, $k$i$i$i$i$i = 0, $k$i$i$i$i$i$i = 0, $key$i$i$i$i$i$i$i = 0, $key$i$i$i$sroa$4$0$_16$sroa$0$0$$sroa_cast5$i$i$i$sroa_idx152$i$i$i$i = 0;
 var $key$i$i$i$sroa$5$0$_16$sroa$0$0$$sroa_cast5$i$i$i$sroa_idx154$i$i$i$i = 0, $key$i$i$sroa$6$0$i$i$i$i = 0, $key$i$i$sroa$7$0$i$i$i$i = 0, $key$i3$i$sroa$0$0$_16$sroa$0$0$$sroa_cast3$i$i$sroa_cast$i$i$i$i = 0, $key$i3$i$sroa$4$0$_16$sroa$0$0$$sroa_cast3$i$i$sroa_idx$i$i$i$i = 0, $key$i3$i$sroa$5$0$_16$sroa$0$0$$sroa_cast3$i$i$sroa_idx$i$i$i$i = 0, $last_transform$i = 0, $left_val$i$i$i$i$i = 0, $lin_axis$i$i$i$i = 0, $lin_axis$i$i401$i$i = 0, $lin_axis$idx$val$i$i$i$i = 0.0, $lin_axis$idx$val$i$i475$i$i = 0.0, $lin_axis$idx85$val$i$i$i$i = 0.0, $lin_axis$idx85$val$i$i476$i$i = 0.0, $lpad$phi627$index = 0, $lpad$phi627$index111 = 0, $lpad$phi648$index = 0, $lpad$phi648$index68 = 0, $min_toi$sroa$0$0$ph$ph$i = 0, $min_toi$sroa$0$1$ph$i = 0;
 var $min_toi$sroa$0$1256$i = 0, $nf$i = 0, $not$$i = 0, $not$$i$i$i = 0, $not$$i$i$i$i = 0, $not$$i$i$i$i$i = 0, $not$$i$i$i$i$i$i = 0, $not$$i$i$i$i$i$i4168 = 0, $not$$i$i$i$i$i$i4180 = 0, $not$$i$i$i$i$i159$i = 0, $not$$i$i$i$i$i172$i = 0, $not$$i$i$i$i$i329 = 0, $not$$i$i$i$i$i380 = 0, $not$$i$i$i$i118$i = 0, $not$$i$i$i$i126$i = 0, $not$$i$i$i$i134$i = 0, $not$$i$i$i$i222 = 0, $not$$i$i$i$i51 = 0, $not$$i$i$i6$i = 0, $not$$i$i$i6$i$i = 0;
 var $not$$i$i$i6$i129$i = 0, $not$$i$i330$i = 0, $num_joint_equations$0$ph$i$i = 0, $obj2$sroa$0$2$i = 0, $obj2$sroa$9$0$i = 0, $objs$i = 0, $old_size$i$i$i$i$i = 0, $old_table$i$sroa$0$0$copyload$i$i$i$i = 0, $old_table$i$sroa$11$0$$sroa_idx19$i$i$i$i = 0, $old_table$i$sroa$11$0$copyload$i$i$i$i = 0, $old_table$i$sroa$8$0$copyload$i$i$i$i = 0, $opt_rb1$i$sroa$0$0$i$i$i$i$i$i = 0, $opt_rb1$i$sroa$5$0$i$i$i = 0, $opt_rb1$i$sroa$5$0$i432$i$i = 0, $opt_rb1$i$sroa$5$1$i$i$i = 0, $opt_rb1$i$sroa$5$1$i453$i$i = 0, $opt_rb1$i$sroa$6$0$i$i$i$i$i$i = 0, $opt_rb2$i$sroa$5$0$i$i$i = 0, $opt_rb2$i$sroa$5$0$i$i$i$i$i$i = 0, $opt_rb2$i$sroa$5$0$i433$i$i = 0;
 var $opt_rb2$i$sroa$5$1$i$i$i = 0, $opt_rb2$i$sroa$5$1$i466$i$i = 0, $or$cond$i = 0, $or$cond$i$i = 0, $or$cond$i$i$i = 0, $or$cond$i$i$i$i$i$i$i = 0, $or$cond$i$i$i$i$i$i$i$i = 0, $or$cond$i$i$i$i$i$i25$i$i = 0, $or$cond$i$i$i242 = 0, $or$cond$i11$i$i = 0, $or$cond$i26$i$i = 0, $or$cond$i69$i = 0, $or$cond110$i$i$i$i$i$i$i = 0, $or$cond131$i = 0, $or$cond341$i$i$i$i$i = 0, $or$cond647$i = 0, $output$i = 0, $output$i4172 = 0, $personalityslot$sroa$0$0 = 0, $personalityslot$sroa$0$0$i = 0;
 var $personalityslot$sroa$0$0$i$i = 0, $personalityslot$sroa$0$0$i$i$i$i$i = 0, $personalityslot$sroa$0$0$i186 = 0, $personalityslot$sroa$0$0$i215 = 0, $personalityslot$sroa$0$1 = 0, $personalityslot$sroa$0$1$i = 0, $personalityslot$sroa$0$1$i$i = 0, $personalityslot$sroa$0$1$i102 = 0, $personalityslot$sroa$0$1$i253 = 0, $personalityslot$sroa$0$128$i$i$i$i = 0, $personalityslot$sroa$0$128$i$i449$i$i = 0, $personalityslot$sroa$0$1336$i$i$i$i$i = 0, $personalityslot$sroa$0$195$i$i$i$i$i$i$i = 0, $personalityslot$sroa$0$2$i = 0, $personalityslot$sroa$0$2268$i = 0, $personalityslot$sroa$0$2269$i = 0, $personalityslot$sroa$0$4$i = 0, $personalityslot$sroa$0$6 = 0, $personalityslot$sroa$10$0$i$i = 0, $personalityslot$sroa$10$1$i = 0;
 var $personalityslot$sroa$10$1$i$i = 0, $personalityslot$sroa$10$2266$i = 0, $personalityslot$sroa$10$2267$i = 0, $personalityslot$sroa$12$0$i = 0, $personalityslot$sroa$12$1$i = 0, $personalityslot$sroa$12$2$i = 0, $personalityslot$sroa$16$0$i = 0, $personalityslot$sroa$16$1$i = 0, $personalityslot$sroa$16$4$i = 0, $personalityslot$sroa$19$0 = 0, $personalityslot$sroa$19$1 = 0, $personalityslot$sroa$19$6 = 0, $personalityslot$sroa$6$0$i = 0, $personalityslot$sroa$6$0$i$i$i$i$i = 0, $personalityslot$sroa$6$130$i$i$i$i = 0, $personalityslot$sroa$6$130$i$i448$i$i = 0, $personalityslot$sroa$6$1335$i$i$i$i$i = 0, $personalityslot$sroa$8$197$i$i$i$i$i$i$i = 0, $phitmp$i$i$i = 0, $phitmp$i10$i$i = 0;
 var $probe$sroa$8$0254$i$i$i$i$i = 0, $probe$sroa$8$0254$i$i$i20$i$i = 0, $prox$i = 0, $ptr$0$i$i$i$i$i$i = 0, $ptr$0$i$i$i$i$i$i$i$i = 0, $ptr$0$i$i$i$i$i312$i = 0, $ref1$sroa$0$0$i$i$i = 0, $ref1$sroa$11$0$i$i$i = 0, $ref1$sroa$14$0$i$i$i = 0, $ref1$sroa$17$0$i$i$i = 0, $ref1$sroa$5$0$i$i$i = 0, $ref1$sroa$8$0$i$i$i = 0, $ref2$sroa$0$0$i$i$i = 0, $ref2$sroa$12$0$i$i$i = 0, $ref2$sroa$15$0$i$i$i = 0, $ref2$sroa$5$0$i$i$i = 0, $right_val$i$i$i$i$i = 0, $self$sroa$0$0$copyload12$i$i = 0, $self$sroa$4$0$$sroa_idx$i$i = 0, $sig$i = 0;
 var $src$i$sroa$0$0$$sroa_cast26$i$i$i$i$i$i$i = 0, $src$i$sroa$4$0$$sroa_idx30$i$i$i$i$i$i$i = 0, $src$i$sroa$4$0$copyload$i$i$i$i$i$i$i = 0, $src$i$sroa$5$0$$sroa_idx32$i$i$i$i$i$i$i = 0, $src$i$sroa$5$0$copyload$i$i$i$i$i$i$i = 0, $storemerge$i$i$i = 0, $storemerge$in$i$i$i = 0, $swept_aabb$i = 0, $switch$i$i = 0, $switch$i$i$i = 0, $switch$i$i$i$i = 0, $switch$i$i$i$i$i$i = 0, $switch$i$i$i$i$i$i$i$i$i = 0, $switch$i$i$i$i461$i$i = 0, $switch$i$i114 = 0, $switch$i$i180$i$i$i$i = 0, $switch$i$i180$i$i443$i$i = 0, $switch$i$i220$i = 0, $switch$i$i273 = 0, $switch$i$i31$i$i$i$i$i$i$i = 0;
 var $switch$i$i321$i = 0, $switch$i$i74 = 0, $switch$i141$i = 0, $switch$i211$i = 0, $switch17$i = 0, $switch18tmp$i = 0, $switch20tmp$i = 0, $switch21tmp$i = 0, $switch21tmp$i$i$i$i$i$i$i = 0, $switch22tmp = 0, $switch22tmp$i = 0, $switch23tmp$i = 0, $switch24 = 0, $switch24tmp$i = 0, $switch24tmp$i$i$i$i$i = 0, $switch24tmp$i$i$i477$i$i = 0, $switch24tmp386$i = 0, $switch25 = 0, $switch25tmp$i = 0, $switch26tmp$i = 0;
 var $switch27tmp = 0, $switch27tmp$i = 0, $switch28tmp = 0, $switch28tmp$i = 0, $switch29$i = 0, $switch2tmp$i$i = 0, $switch2tmp$i$i$i = 0, $switch2tmp$i$i$i$i = 0, $switch2tmp$i$i$i$i101 = 0, $switch2tmp$i$i$i$i241 = 0, $switch2tmp$i$i25$i$i = 0, $switch2tmp$i$i250$i$i = 0, $switch2tmp$i$i274$i$i = 0, $switch2tmp$i$i68$i = 0, $switch2tmp$i42$i = 0, $switch33$i = 0, $switch34$i = 0, $switch35tmp$i = 0, $switch36tmp$i = 0, $switch37tmp$i = 0;
 var $switch38tmp$i = 0, $switch3tmp$i = 0, $switch41tmp$i = 0, $switch41tmp517$i = 0, $switch41tmp517565$i = 0, $switch41tmp566$i = 0, $switch46tmp$i = 0, $switch47tmp$i$i = 0, $switch47tmp839$i$i = 0, $switch4tmp$i = 0, $switch5tmp$i = 0, $switch6tmp$i = 0, $switch6tmp$i$i$i$i$i$i$i$i = 0, $switchtmp$i = 0, $switchtmp$i$i = 0, $switchtmp$i$i$i = 0, $switchtmp$i$i$i$i = 0, $switchtmp$i$i$i$i$i = 0, $switchtmp$i$i$i$i$i$i = 0, $switchtmp$i$i$i$i$i$i$i$i = 0;
 var $switchtmp$i$i$i$i$i$i$i$i116 = 0, $switchtmp$i$i$i$i$i$i4188 = 0, $switchtmp$i$i$i$i$i$i4206 = 0, $switchtmp$i$i$i$i$i100 = 0, $switchtmp$i$i$i$i$i240 = 0, $switchtmp$i$i$i$i106 = 0, $switchtmp$i$i$i$i320 = 0, $switchtmp$i$i$i157$i = 0, $switchtmp$i$i$i24$i$i = 0, $switchtmp$i$i$i527$i$i = 0, $switchtmp$i$i$i67$i = 0, $switchtmp$i$i146 = 0, $switchtmp$i$i258 = 0, $switchtmp$i$i402$i$i = 0, $switchtmp$i116$i$i$i$i = 0, $switchtmp$i116$i$i488$i$i = 0, $switchtmp$i156 = 0, $switchtmp$i189 = 0, $switchtmp$i24$i$i$i$i$i$i$i = 0, $switchtmp$i246$i = 0;
 var $switchtmp$i254$i = 0, $switchtmp$i265$i = 0, $switchtmp$i3$i$i$i = 0, $switchtmp$i387 = 0, $switchtmp$i4$i$i$i = 0, $switchtmp$i74$i$i$i$i$i$i$i = 0, $switchtmp$i90$i$i$i$i = 0, $switchtmp$i90$i$i518$i$i = 0, $switchtmp385$i = 0, $t$i$i$i = 0, $t$sroa$0$i$i$i = 0, $tmp_ret5$sroa$0$0$i$i$i$i = 0, $tmp_ret5$sroa$0$0$i$i417$i$i = 0, $tmp_ret5$sroa$3$0$i$i$i$i = 0, $tmp_ret5$sroa$3$0$i$i418$i$i = 0, $tmp_ret8$sroa$0$0$i$i$i$i = 0, $tmp_ret8$sroa$0$0$i$i426$i$i = 0, $tmp_ret8$sroa$3$0$i$i$i$i = 0, $tmp_ret8$sroa$3$0$i$i427$i$i = 0, $toi$i = 0;
 var $toi_found$0$off0$ph$ph$i = 0, $toi_found$1$off0258$i = 0, $trunc$i = 0, $trunc$i$clear = 0, $trunc$i$i = 0, $trunc$i$i$clear = 0, $trunc$i$i$i$i = 0, $trunc$i$i$i$i$clear = 0, $trunc$i$i$i$i$clear176 = 0, $trunc$i$i$i$i$i = 0, $trunc$i$i$i$i$i$clear = 0, $trunc$i$i264 = 0, $trunc$i$i264$clear = 0, $trunc$i$i390 = 0, $trunc$i$i390$clear = 0, $trunc$i183 = 0, $trunc$i183$clear = 0, $trunc$i250 = 0, $trunc$i250$clear = 0, $trunc136$i$i = 0;
 var $trunc136$i$i$clear = 0, $trunc86$i = 0, $trunc86$i$clear = 0, $update_collision_world$0$off0$lcssa$i = 0, $update_collision_world$0$off0414$i = 0, $update_collision_world$1$off0$i = 0, $update_collision_world$2$off0$i = 0, $val$sroa$0$0$i$i$i$i$i$i = 0, $val$sroa$6$0$i$i$i$i$i$i = 0, $value$i = 0, $value$i$i = 0, dest = 0, label = 0, sp = 0, src = 0, stop = 0, temp_Int32x4_ptr = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1328|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(1328|0);
 $_8$i$i4170 = sp + 1272|0;
 $_10$i$i4171 = sp + 1248|0;
 $output$i4172 = sp + 1232|0;
 $_8$i$i = sp + 1224|0;
 $_10$i$i = sp + 1200|0;
 $output$i = sp + 1184|0;
 $value$i$i = sp + 1144|0;
 $value$i = sp + 1104|0;
 $_3$i = sp + 1088|0;
 $_156$i = sp + 1072|0;
 $fks$i$i = sp + 1056|0;
 $last_transform$i = sp + 1032|0;
 $begin_aabb$i = sp + 1016|0;
 $end_aabb$i = sp + 1000|0;
 $swept_aabb$i = sp + 984|0;
 $dir$i = sp + 976|0;
 $toi$i = sp + 968|0;
 $_126$i = sp + 64|0;
 $_130$i = sp + 960|0;
 $_179$i = sp + 32|0;
 $nf$i = sp + 1320|0;
 $sig$i = sp + 1316|0;
 $prox$i = sp + 1312|0;
 $filts$i = sp + 1308|0;
 $objs$i = sp + 1304|0;
 $_14$i = sp + 952|0;
 $_20$i = sp + 936|0;
 $key$i$i$i$i$i$i$i = sp + 920|0;
 $k$i$i$i$i$i$i = sp + 904|0;
 $_28$i$i$i$i$i = sp + 888|0;
 $old_size$i$i$i$i$i = sp + 1300|0;
 $k$i$i$i$i$i = sp + 872|0;
 $_95$i$i$i$i$i = sp + 1296|0;
 $left_val$i$i$i$i$i = sp + 1292|0;
 $right_val$i$i$i$i$i = sp + 1288|0;
 $_107$i$i$i$i$i = sp + 848|0;
 $_112$i$i$i$i$i = sp + 832|0;
 $k$i$i$i = sp + 816|0;
 $id$i$i = sp + 800|0;
 $i$i141$i$i396$i$i = sp + 1284|0;
 $_8$i142$i$i397$i$i = sp + 784|0;
 $error$i$i400$i$i = sp + 776|0;
 $lin_axis$i$i401$i$i = sp + 768|0;
 $arg$i$i$i$i$i$i = sp + 760|0;
 $arg$i$i$i = sp + 752|0;
 $i$i141$i$i$i$i = sp + 1280|0;
 $_8$i142$i$i$i$i = sp + 736|0;
 $_14$i$i$i$i$i = sp + 728|0;
 $error$i$i$i$i = sp + 720|0;
 $lin_axis$i$i$i$i = sp + 712|0;
 $_11$i317$i$i = sp + 632|0;
 $_17$i318$i$i = sp + 552|0;
 $_11$i232$i$i = sp + 472|0;
 $_17$i233$i$i = sp + 392|0;
 $_11$i$i$i = sp + 312|0;
 $_17$i$i$i = sp + 232|0;
 $t$i$i$i = sp + 216|0;
 $t$sroa$0$i$i$i = sp + 200|0;
 $bodies$i = sp + 184|0;
 $id$i = sp + 1276|0;
 $joints$i = sp + 168|0;
 $_47 = sp + 144|0;
 $_89 = sp;
 $collector = sp + 128|0;
 $iter4 = sp + 88|0;
 $$idx$i = ((($0)) + 164|0);
 $$idx$val$i = HEAP32[$$idx$i>>2]|0;
 $$idx1$i = ((($0)) + 172|0);
 $$idx1$val$i = HEAP32[$$idx1$i>>2]|0;
 $1 = (($$idx$val$i) + ($$idx1$val$i<<3)|0);
 $2 = ($$idx1$val$i|0)==(0);
 L1: do {
  if ($2) {
   $$pre1804$pre$phiZZ2D = $0;
  } else {
   $3 = ((($0)) + 272|0);
   $$idx1$i71 = ((($0)) + 276|0);
   $_5$sroa$4$0$$sroa_idx8$i = ((($_47)) + 4|0);
   $_5$sroa$5$0$$sroa_idx11$i = ((($_47)) + 8|0);
   $_5$sroa$6$0$$sroa_idx14$i = ((($_47)) + 12|0);
   $4 = ((($_47)) + 16|0);
   $5 = ((($_47)) + 20|0);
   $iter$sroa$0$0$in1198 = $$idx$val$i;
   while(1) {
    $6 = ((($iter$sroa$0$0$in1198)) + 8|0);
    $switch27tmp = ($iter$sroa$0$0$in1198|0)==(0|0);
    if ($switch27tmp) {
     $$pre1804$pre$phiZZ2D = $0;
     break L1;
    }
    $$idx14 = ((($iter$sroa$0$0$in1198)) + 4|0);
    $$idx14$val = HEAP32[$$idx14>>2]|0;
    $12 = ((($$idx14$val)) + 8|0);
    $13 = HEAP32[$12>>2]|0;
    $cond$i$i$i = ($13|0)==(0);
    if (!($cond$i$i$i)) {
     label = 9;
     break;
    }
    HEAP32[$12>>2] = -1;
    $$idx21 = ((($$idx14$val)) + 128|0);
    $$idx21$val = HEAP32[$$idx21>>2]|0;
    $cond$i = ($$idx21$val|0)==(0);
    if ($cond$i) {
     $$idx$val2$i = HEAP32[$3>>2]|0;
     $$idx1$val3$i = HEAP32[$$idx1$i71>>2]|0;
     $17 = ((($$idx14$val)) + 96|0);
     HEAP32[$17>>2] = $$idx$val2$i;
     $18 = ((($$idx14$val)) + 100|0);
     HEAP32[$18>>2] = $$idx1$val3$i;
     $19 = ((($$idx14$val)) + 104|0);
     $20 = ((($$idx14$val)) + 108|0);
     $21 = +HEAPF32[$19>>2];
     $22 = +HEAPF32[$20>>2];
     $23 = ((($$idx14$val)) + 56|0);
     $24 = +HEAPF32[$23>>2];
     $25 = $21 * $24;
     $26 = $22 * $24;
     $27 = (HEAP32[tempDoublePtr>>2]=$$idx$val2$i,+HEAPF32[tempDoublePtr>>2]);
     $28 = (HEAP32[tempDoublePtr>>2]=$$idx1$val3$i,+HEAPF32[tempDoublePtr>>2]);
     $29 = $27 + $25;
     $30 = $28 + $26;
     $31 = ((($$idx14$val)) + 144|0);
     $32 = ((($$idx14$val)) + 148|0);
     $33 = +HEAPF32[$31>>2];
     $34 = +HEAPF32[$32>>2];
     $35 = $33 * $29;
     $36 = $30 * $34;
     $37 = ((($$idx14$val)) + 84|0);
     HEAPF32[$37>>2] = $35;
     $38 = ((($$idx14$val)) + 88|0);
     HEAPF32[$38>>2] = $36;
     $$idx$i72 = ((($$idx14$val)) + 12|0);
     $$idx$val$i73 = HEAP8[$$idx$i72>>0]|0;
     $switch$i$i74 = ($$idx$val$i73<<24>>24)==(1);
     if ($switch$i$i74) {
      $39 = ((($$idx14$val)) + 44|0);
      $$idx$val2$i32$i = +HEAPF32[$39>>2];
      $$idx1$i$i = ((($$idx14$val)) + 48|0);
      $$idx1$val3$i33$i = +HEAPF32[$$idx1$i$i>>2];
      $$idx$i3$i = ((($$idx14$val)) + 52|0);
      $$idx$val$i4$i = +HEAPF32[$$idx$i3$i>>2];
      $$idx$i$i = ((($$idx14$val)) + 92|0);
      $$idx$val$i$i75 = +HEAPF32[$$idx$i$i>>2];
      $$idx1$i76 = ((($$idx14$val)) + 76|0);
      $$idx1$val$i77 = +HEAPF32[$$idx1$i76>>2];
      $$idx2$i = ((($$idx14$val)) + 80|0);
      $$idx2$val$i = +HEAPF32[$$idx2$i>>2];
      $40 = $35 * 0.033333335071802139;
      $41 = $36 * 0.033333335071802139;
      $42 = $$idx$val2$i32$i + $40;
      $43 = $41 + $$idx1$val3$i33$i;
      $44 = $$idx$val$i$i75 * 0.033333335071802139;
      $45 = $$idx$val$i4$i + $44;
      $46 = $45 * 0.033333335071802139;
      $47 = 0.0 - $$idx1$val$i77;
      $48 = 0.0 - $$idx2$val$i;
      $49 = (+Math_sin((+$46)));
      $50 = (+Math_cos((+$46)));
      $51 = $49 * 0.0;
      $52 = $50 - $51;
      $53 = $50 * 0.0;
      $54 = $53 - $49;
      $55 = $49 + $53;
      $56 = $51 + $50;
      $57 = $47 * $50;
      $58 = $48 * $49;
      $59 = $57 - $58;
      $60 = $47 * $49;
      $61 = $48 * $50;
      $62 = $60 + $61;
      $63 = $$idx1$val$i77 + $59;
      $64 = $$idx2$val$i + $62;
      $65 = $42 * 0.033333335071802139;
      $66 = $43 * 0.033333335071802139;
      $67 = $65 + $63;
      $68 = $66 + $64;
      $_7$sroa$0$0$$sroa_idx$i$i$i = ((($$idx14$val)) + 20|0);
      $_7$sroa$0$0$copyload$i$i$i = +HEAPF32[$_7$sroa$0$0$$sroa_idx$i$i$i>>2];
      $_7$sroa$4$0$$sroa_idx2$i$i$i = ((($$idx14$val)) + 24|0);
      $_7$sroa$4$0$copyload$i$i$i = +HEAPF32[$_7$sroa$4$0$$sroa_idx2$i$i$i>>2];
      $_7$sroa$5$0$$sroa_idx4$i$i$i = ((($$idx14$val)) + 28|0);
      $_7$sroa$5$0$copyload$i$i$i = +HEAPF32[$_7$sroa$5$0$$sroa_idx4$i$i$i>>2];
      $_7$sroa$6$0$$sroa_idx6$i$i$i = ((($$idx14$val)) + 32|0);
      $_7$sroa$6$0$copyload$i$i$i = +HEAPF32[$_7$sroa$6$0$$sroa_idx6$i$i$i>>2];
      $_7$sroa$7$0$$sroa_idx8$i$i$i = ((($$idx14$val)) + 36|0);
      $_7$sroa$7$0$copyload$i$i$i = +HEAPF32[$_7$sroa$7$0$$sroa_idx8$i$i$i>>2];
      $_7$sroa$8$0$$sroa_idx10$i$i$i = ((($$idx14$val)) + 40|0);
      $_7$sroa$8$0$copyload$i$i$i = +HEAPF32[$_7$sroa$8$0$$sroa_idx10$i$i$i>>2];
      $69 = $52 * $_7$sroa$7$0$copyload$i$i$i;
      $70 = $54 * $_7$sroa$8$0$copyload$i$i$i;
      $71 = $69 + $70;
      $72 = $55 * $_7$sroa$7$0$copyload$i$i$i;
      $73 = $56 * $_7$sroa$8$0$copyload$i$i$i;
      $74 = $72 + $73;
      $75 = $67 + $71;
      $76 = $68 + $74;
      $77 = $52 * $_7$sroa$0$0$copyload$i$i$i;
      $78 = $54 * $_7$sroa$4$0$copyload$i$i$i;
      $79 = $77 + $78;
      $80 = $52 * $_7$sroa$5$0$copyload$i$i$i;
      $81 = $54 * $_7$sroa$6$0$copyload$i$i$i;
      $82 = $80 + $81;
      $83 = $_7$sroa$0$0$copyload$i$i$i * $55;
      $84 = $56 * $_7$sroa$4$0$copyload$i$i$i;
      $85 = $83 + $84;
      $86 = $55 * $_7$sroa$5$0$copyload$i$i$i;
      $87 = $56 * $_7$sroa$6$0$copyload$i$i$i;
      $88 = $86 + $87;
      HEAPF32[$_7$sroa$0$0$$sroa_idx$i$i$i>>2] = $79;
      HEAPF32[$_7$sroa$4$0$$sroa_idx2$i$i$i>>2] = $85;
      HEAPF32[$_7$sroa$5$0$$sroa_idx4$i$i$i>>2] = $82;
      HEAPF32[$_7$sroa$6$0$$sroa_idx6$i$i$i>>2] = $88;
      HEAPF32[$_7$sroa$7$0$$sroa_idx8$i$i$i>>2] = $75;
      HEAPF32[$_7$sroa$8$0$$sroa_idx10$i$i$i>>2] = $76;
      $$idx$i1$i$i = ((($$idx14$val)) + 68|0);
      $$idx$val$i$i$i = +HEAPF32[$$idx$i1$i$i>>2];
      $$idx1$i$i$i78 = ((($$idx14$val)) + 72|0);
      $$idx1$val$i$i$i = +HEAPF32[$$idx1$i$i$i78>>2];
      $89 = $79 * $$idx$val$i$i$i;
      $90 = $82 * $$idx1$val$i$i$i;
      $91 = $89 + $90;
      $92 = $85 * $$idx$val$i$i$i;
      $93 = $88 * $$idx1$val$i$i$i;
      $94 = $92 + $93;
      $95 = $75 + $91;
      $96 = $76 + $94;
      HEAPF32[$$idx1$i76>>2] = $95;
      HEAPF32[$$idx2$i>>2] = $96;
      $$idx$i$i$i = ((($$idx14$val)) + 60|0);
      $$idx$val3$i$i$i = HEAP32[$$idx$i$i$i>>2]|0;
      $97 = ((($$idx14$val)) + 64|0);
      HEAP32[$97>>2] = $$idx$val3$i$i$i;
      HEAPF32[$39>>2] = $42;
      HEAPF32[$$idx1$i$i>>2] = $43;
      HEAPF32[$$idx$i3$i>>2] = $45;
      $98 = (HEAPF32[tempDoublePtr>>2]=$79,HEAP32[tempDoublePtr>>2]|0);
      $99 = (HEAPF32[tempDoublePtr>>2]=$85,HEAP32[tempDoublePtr>>2]|0);
      $100 = (HEAPF32[tempDoublePtr>>2]=$82,HEAP32[tempDoublePtr>>2]|0);
      $101 = (HEAPF32[tempDoublePtr>>2]=$88,HEAP32[tempDoublePtr>>2]|0);
      $102 = (HEAPF32[tempDoublePtr>>2]=$75,HEAP32[tempDoublePtr>>2]|0);
      $103 = (HEAPF32[tempDoublePtr>>2]=$76,HEAP32[tempDoublePtr>>2]|0);
      $$idx$val17$i = $102;$$idx5$val18$i = $103;$$val1520$i$i$i = $100;$$val1619$i$i$i = $99;$$val1718$i$i$i = $98;$$val21$i$i$i = $101;
     } else {
      $$phi$trans$insert = ((($$idx14$val)) + 20|0);
      $$val1718$i$i$i$pre = HEAP32[$$phi$trans$insert>>2]|0;
      $$phi$trans$insert1763 = ((($$idx14$val)) + 24|0);
      $$val1619$i$i$i$pre = HEAP32[$$phi$trans$insert1763>>2]|0;
      $$phi$trans$insert1766 = ((($$idx14$val)) + 28|0);
      $$val1520$i$i$i$pre = HEAP32[$$phi$trans$insert1766>>2]|0;
      $$phi$trans$insert1769 = ((($$idx14$val)) + 32|0);
      $$val21$i$i$i$pre = HEAP32[$$phi$trans$insert1769>>2]|0;
      $$phi$trans$insert1772 = ((($$idx14$val)) + 36|0);
      $$idx$val17$i$pre = HEAP32[$$phi$trans$insert1772>>2]|0;
      $$idx5$i79$phi$trans$insert = ((($$idx14$val)) + 40|0);
      $$idx5$val18$i$pre = HEAP32[$$idx5$i79$phi$trans$insert>>2]|0;
      $$idx$val17$i = $$idx$val17$i$pre;$$idx5$val18$i = $$idx5$val18$i$pre;$$val1520$i$i$i = $$val1520$i$i$i$pre;$$val1619$i$i$i = $$val1619$i$i$i$pre;$$val1718$i$i$i = $$val1718$i$i$i$pre;$$val21$i$i$i = $$val21$i$i$i$pre;
     }
     $$idx15$val = HEAP32[$$idx14>>2]|0;
     $104 = ((($$idx15$val)) + 8|0);
     $105 = $104;
     HEAP32[$_47>>2] = $$val1718$i$i$i;
     HEAP32[$_5$sroa$4$0$$sroa_idx8$i>>2] = $$val1619$i$i$i;
     HEAP32[$_5$sroa$5$0$$sroa_idx11$i>>2] = $$val1520$i$i$i;
     HEAP32[$_5$sroa$6$0$$sroa_idx14$i>>2] = $$val21$i$i$i;
     HEAP32[$4>>2] = $$idx$val17$i;
     HEAP32[$5>>2] = $$idx5$val18$i;
     __THREW__ = 0;
     invoke_viii(249,($0|0),($105|0),($_47|0));
     $106 = __THREW__; __THREW__ = 0;
     $107 = $106&1;
     if ($107) {
      label = 889;
      break;
     }
    }
    HEAP32[$12>>2] = 0;
    $108 = ($6|0)==($1|0);
    if ($108) {
     $$pre1804$pre$phiZZ2D = $0;
     break L1;
    } else {
     $iter$sroa$0$0$in1198 = $6;
    }
   }
   if ((label|0) == 9) {
    __THREW__ = 0;
    invoke_v(212);
    $14 = __THREW__; __THREW__ = 0;
    $15 = ___cxa_find_matching_catch_2()|0;
    $16 = tempRet0;
    $personalityslot$sroa$0$0 = $15;$personalityslot$sroa$19$0 = $16;
    ___resumeException($personalityslot$sroa$0$0|0);
    // unreachable;
   }
   else if ((label|0) == 889) {
    $2551 = ___cxa_find_matching_catch_2()|0;
    $2552 = tempRet0;
    HEAP32[$12>>2] = 0;
    $personalityslot$sroa$0$0 = $2551;$personalityslot$sroa$19$0 = $2552;
    ___resumeException($personalityslot$sroa$0$0|0);
    // unreachable;
   }
  }
 } while(0);
 $$idx$i35 = ((($0)) + 220|0);
 $$idx$val$i36 = HEAP32[$$idx$i35>>2]|0;
 $$idx1$i37 = ((($0)) + 228|0);
 $$idx1$val$i38 = HEAP32[$$idx1$i37>>2]|0;
 $7 = (($$idx$val$i36) + ($$idx1$val$i38<<3)|0);
 $8 = ($$idx1$val$i38|0)==(0);
 L22: do {
  if (!($8)) {
   $_5$sroa$4$0$$sroa_idx8$i$i164 = ((($_89)) + 4|0);
   $_5$sroa$5$0$$sroa_idx11$i$i166 = ((($_89)) + 8|0);
   $_5$sroa$6$0$$sroa_idx14$i$i168 = ((($_89)) + 12|0);
   $9 = ((($_89)) + 16|0);
   $10 = ((($_89)) + 20|0);
   $11 = ((($_89)) + 16|0);
   $iter2$sroa$0$0$in1197 = $$idx$val$i36;
   while(1) {
    $109 = ((($iter2$sroa$0$0$in1197)) + 8|0);
    $switch28tmp = ($iter2$sroa$0$0$in1197|0)==(0|0);
    if ($switch28tmp) {
     break L22;
    }
    $$idx22 = ((($iter2$sroa$0$0$in1197)) + 4|0);
    $$idx22$val = HEAP32[$$idx22>>2]|0;
    $410 = ((($$idx22$val)) + 8|0);
    $411 = HEAP32[$410>>2]|0;
    $cond$i$i$i142 = ($411|0)==(0);
    if (!($cond$i$i$i142)) {
     label = 128;
     break;
    }
    HEAP32[$410>>2] = -1;
    $415 = ((($$idx22$val)) + 12|0);
    $416 = HEAP32[$415>>2]|0;
    $switchtmp$i$i146 = ($416|0)==(0|0);
    if (!($switchtmp$i$i146)) {
     $417 = ((($416)) + 8|0);
     $418 = HEAP32[$417>>2]|0;
     $cond$i$i$i149 = ($418|0)==(-1);
     if ($cond$i$i$i149) {
      label = 131;
      break;
     }
     $$idx20 = ((($416)) + 128|0);
     $$idx20$val = HEAP32[$$idx20>>2]|0;
     $cond$i153 = ($$idx20$val|0)==(0);
     if ($cond$i153) {
      $$idx26$val = HEAP32[$$idx22>>2]|0;
      $420 = ((($$idx26$val)) + 8|0);
      $421 = $420;
      $422 = HEAP32[$415>>2]|0;
      $switchtmp$i156 = ($422|0)==(0|0);
      if ($switchtmp$i156) {
       $423 = ((($$idx22$val)) + 16|0);
       $424 = ((($$idx22$val)) + 32|0);
       $425 = SIMD_Int32x4_load(HEAPU8, $423);
       $$idx$val17$i$i161 = HEAP32[$424>>2]|0;
       $$idx5$i$i = ((($$idx22$val)) + 36|0);
       $$idx5$val18$i$i162 = HEAP32[$$idx5$i$i>>2]|0;
       temp_Int32x4_ptr = $_89;SIMD_Int32x4_store(HEAPU8, temp_Int32x4_ptr, $425);
       HEAP32[$9>>2] = $$idx$val17$i$i161;
       HEAP32[$10>>2] = $$idx5$val18$i$i162;
      } else {
       $426 = ((($422)) + 8|0);
       $427 = HEAP32[$426>>2]|0;
       $cond$i$i$i$i171 = ($427|0)==(-1);
       if ($cond$i$i$i$i171) {
        label = 136;
        break;
       }
       $_4$sroa$0$0$$sroa_idx$i = ((($422)) + 20|0);
       $_4$sroa$0$0$copyload$i = +HEAPF32[$_4$sroa$0$0$$sroa_idx$i>>2];
       $_4$sroa$4$0$$sroa_idx26$i = ((($422)) + 24|0);
       $_4$sroa$4$0$copyload$i = +HEAPF32[$_4$sroa$4$0$$sroa_idx26$i>>2];
       $_4$sroa$5$0$$sroa_idx28$i = ((($422)) + 28|0);
       $_4$sroa$5$0$copyload$i = +HEAPF32[$_4$sroa$5$0$$sroa_idx28$i>>2];
       $_4$sroa$6$0$$sroa_idx30$i = ((($422)) + 32|0);
       $_4$sroa$6$0$copyload$i = +HEAPF32[$_4$sroa$6$0$$sroa_idx30$i>>2];
       $_4$sroa$7$0$$sroa_idx32$i = ((($422)) + 36|0);
       $_4$sroa$7$0$copyload$i = +HEAPF32[$_4$sroa$7$0$$sroa_idx32$i>>2];
       $_4$sroa$8$0$$sroa_idx34$i = ((($422)) + 40|0);
       $_4$sroa$8$0$copyload$i = +HEAPF32[$_4$sroa$8$0$$sroa_idx34$i>>2];
       $_14$sroa$0$0$$sroa_idx$i = ((($$idx22$val)) + 16|0);
       $_14$sroa$0$0$copyload$i = +HEAPF32[$_14$sroa$0$0$$sroa_idx$i>>2];
       $_14$sroa$4$0$$sroa_idx13$i = ((($$idx22$val)) + 20|0);
       $_14$sroa$4$0$copyload$i = +HEAPF32[$_14$sroa$4$0$$sroa_idx13$i>>2];
       $_14$sroa$5$0$$sroa_idx15$i = ((($$idx22$val)) + 24|0);
       $_14$sroa$5$0$copyload$i = +HEAPF32[$_14$sroa$5$0$$sroa_idx15$i>>2];
       $_14$sroa$6$0$$sroa_idx17$i = ((($$idx22$val)) + 28|0);
       $_14$sroa$6$0$copyload$i = +HEAPF32[$_14$sroa$6$0$$sroa_idx17$i>>2];
       $_14$sroa$7$0$$sroa_idx19$i = ((($$idx22$val)) + 32|0);
       $_14$sroa$7$0$copyload$i = +HEAPF32[$_14$sroa$7$0$$sroa_idx19$i>>2];
       $_14$sroa$8$0$$sroa_idx21$i = ((($$idx22$val)) + 36|0);
       $_14$sroa$8$0$copyload$i = +HEAPF32[$_14$sroa$8$0$$sroa_idx21$i>>2];
       $429 = $_4$sroa$0$0$copyload$i * $_14$sroa$7$0$copyload$i;
       $430 = $_4$sroa$5$0$copyload$i * $_14$sroa$8$0$copyload$i;
       $431 = $429 + $430;
       $432 = $_4$sroa$4$0$copyload$i * $_14$sroa$7$0$copyload$i;
       $433 = $_4$sroa$6$0$copyload$i * $_14$sroa$8$0$copyload$i;
       $434 = $432 + $433;
       $435 = $_4$sroa$7$0$copyload$i + $431;
       $436 = $_4$sroa$8$0$copyload$i + $434;
       $437 = $_4$sroa$0$0$copyload$i * $_14$sroa$0$0$copyload$i;
       $438 = $_4$sroa$5$0$copyload$i * $_14$sroa$4$0$copyload$i;
       $439 = $437 + $438;
       $440 = $_4$sroa$0$0$copyload$i * $_14$sroa$5$0$copyload$i;
       $441 = $_4$sroa$5$0$copyload$i * $_14$sroa$6$0$copyload$i;
       $442 = $440 + $441;
       $443 = $_4$sroa$4$0$copyload$i * $_14$sroa$0$0$copyload$i;
       $444 = $_4$sroa$6$0$copyload$i * $_14$sroa$4$0$copyload$i;
       $445 = $443 + $444;
       $446 = $_4$sroa$4$0$copyload$i * $_14$sroa$5$0$copyload$i;
       $447 = $_4$sroa$6$0$copyload$i * $_14$sroa$6$0$copyload$i;
       $448 = $446 + $447;
       HEAPF32[$_89>>2] = $439;
       HEAPF32[$_5$sroa$4$0$$sroa_idx8$i$i164>>2] = $445;
       HEAPF32[$_5$sroa$5$0$$sroa_idx11$i$i166>>2] = $442;
       HEAPF32[$_5$sroa$6$0$$sroa_idx14$i$i168>>2] = $448;
       HEAPF32[$11>>2] = $435;
       HEAPF32[$10>>2] = $436;
      }
      __THREW__ = 0;
      invoke_viii(249,($$pre1804$pre$phiZZ2D|0),($421|0),($_89|0));
      $449 = __THREW__; __THREW__ = 0;
      $450 = $449&1;
      if ($450) {
       label = 890;
       break;
      }
     }
    }
    HEAP32[$410>>2] = 0;
    $451 = ($109|0)==($7|0);
    if ($451) {
     break L22;
    } else {
     $iter2$sroa$0$0$in1197 = $109;
    }
   }
   if ((label|0) == 128) {
    __THREW__ = 0;
    invoke_v(212);
    $412 = __THREW__; __THREW__ = 0;
    $413 = ___cxa_find_matching_catch_2()|0;
    $414 = tempRet0;
    $personalityslot$sroa$0$0 = $413;$personalityslot$sroa$19$0 = $414;
    ___resumeException($personalityslot$sroa$0$0|0);
    // unreachable;
   }
   else if ((label|0) == 131) {
    __THREW__ = 0;
    invoke_v(221);
    $419 = __THREW__; __THREW__ = 0;
    label = 891;
   }
   else if ((label|0) == 136) {
    __THREW__ = 0;
    invoke_v(221);
    $428 = __THREW__; __THREW__ = 0;
    label = 891;
   }
   else if ((label|0) == 890) {
    $2553 = ___cxa_find_matching_catch_2()|0;
    $2554 = tempRet0;
    $lpad$phi648$index = $2553;$lpad$phi648$index68 = $2554;
   }
   if ((label|0) == 891) {
    $2555 = ___cxa_find_matching_catch_2()|0;
    $2556 = tempRet0;
    $lpad$phi648$index = $2555;$lpad$phi648$index68 = $2556;
   }
   HEAP32[$410>>2] = 0;
   $personalityslot$sroa$0$0 = $lpad$phi648$index;$personalityslot$sroa$19$0 = $lpad$phi648$index68;
   ___resumeException($personalityslot$sroa$0$0|0);
   // unreachable;
  }
 } while(0);
 __ZN93__LT_ncollide_pipeline__world__collision_world__CollisionWorld_LT_P_C__u20_M_C__u20_T_GT__GT_23perform_position_update17hd449c9be1a6fa5a2E($$pre1804$pre$phiZZ2D);
 $110 = ((($0)) + 72|0);
 HEAP32[$nf$i>>2] = $110;
 $111 = ((($0)) + 80|0);
 HEAP32[$sig$i>>2] = $111;
 $112 = ((($0)) + 92|0);
 HEAP32[$prox$i>>2] = $112;
 $113 = ((($0)) + 104|0);
 HEAP32[$filts$i>>2] = $113;
 HEAP32[$objs$i>>2] = $0;
 $114 = ((($0)) + 64|0);
 $115 = HEAP32[$114>>2]|0;
 $116 = ((($0)) + 68|0);
 $117 = HEAP32[$116>>2]|0;
 HEAP32[$_14$i>>2] = $filts$i;
 $118 = ((($_14$i)) + 4|0);
 HEAP32[$118>>2] = $objs$i;
 HEAP32[$_20$i>>2] = $nf$i;
 $119 = ((($_20$i)) + 4|0);
 HEAP32[$119>>2] = $sig$i;
 $120 = ((($_20$i)) + 8|0);
 HEAP32[$120>>2] = $prox$i;
 $121 = ((($_20$i)) + 12|0);
 HEAP32[$121>>2] = $objs$i;
 $122 = ((($117)) + 28|0);
 $123 = HEAP32[$122>>2]|0;
 FUNCTION_TABLE_viiiii[$123 & 511]($115,$_14$i,984,$_20$i,1008);
 $$idx$i$i84 = ((($0)) + 292|0);
 $$idx$val$i$i85 = HEAP32[$$idx$i$i84>>2]|0;
 $$idx1$i$i86 = ((($0)) + 300|0);
 $$idx1$val$i$i = HEAP32[$$idx1$i$i86>>2]|0;
 $124 = (($$idx$val$i$i85) + (($$idx1$val$i$i*24)|0)|0);
 $125 = ($$idx1$val$i$i|0)==(0);
 L50: do {
  if ($125) {
   label = 141;
  } else {
   $126 = ((($last_transform$i)) + 16|0);
   $127 = ((($last_transform$i)) + 20|0);
   $$idx2$i$i = ((($begin_aabb$i)) + 4|0);
   $$idx4$i$i = ((($end_aabb$i)) + 4|0);
   $$idx5$i177$i = ((($begin_aabb$i)) + 8|0);
   $$idx6$i$i = ((($begin_aabb$i)) + 12|0);
   $$idx7$i178$i = ((($end_aabb$i)) + 8|0);
   $$idx8$i180$i = ((($end_aabb$i)) + 12|0);
   $128 = ((($swept_aabb$i)) + 4|0);
   $129 = ((($swept_aabb$i)) + 8|0);
   $130 = ((($swept_aabb$i)) + 12|0);
   $131 = ((($dir$i)) + 4|0);
   $132 = ((($fks$i$i)) + 4|0);
   $133 = ((($fks$i$i)) + 8|0);
   $$idx$i$i$i$i$i87 = ((($0)) + 8|0);
   $_5$sroa$4$0$$sroa_idx8$i$i$i$i = ((($_126$i)) + 4|0);
   $_5$sroa$5$0$$sroa_idx11$i$i$i$i = ((($_126$i)) + 8|0);
   $_5$sroa$6$0$$sroa_idx14$i$i$i$i = ((($_126$i)) + 12|0);
   $134 = ((($_126$i)) + 16|0);
   $135 = ((($_126$i)) + 20|0);
   $136 = ((($_126$i)) + 16|0);
   $137 = ((($_130$i)) + 4|0);
   $138 = ((($toi$i)) + 4|0);
   $139 = ((($_179$i)) + 16|0);
   $140 = ((($_179$i)) + 20|0);
   $141 = ((($0)) + 352|0);
   $142 = ((($0)) + 344|0);
   $iter$sroa$0$0$in413$i = $$idx$val$i$i85;$update_collision_world$0$off0414$i = 0;
   L52: while(1) {
    $143 = ((($iter$sroa$0$0$in413$i)) + 24|0);
    $switch18tmp$i = ($iter$sroa$0$0$in413$i|0)==(0|0);
    if ($switch18tmp$i) {
     $update_collision_world$0$off0$lcssa$i = $update_collision_world$0$off0414$i;
     label = 21;
     break;
    }
    $$idx72$i = ((($iter$sroa$0$0$in413$i)) + 4|0);
    $$idx72$val$i = HEAP32[$$idx72$i>>2]|0;
    $144 = ((($$idx72$val$i)) + 8|0);
    $145 = HEAP32[$144>>2]|0;
    $cond$i$i$i$i90 = ($145|0)==(0);
    if (!($cond$i$i$i$i90)) {
     label = 24;
     break;
    }
    HEAP32[$144>>2] = -1;
    $149 = ((($$idx72$val$i)) + 20|0);
    $150 = ((($$idx72$val$i)) + 36|0);
    $151 = ((($$idx72$val$i)) + 40|0);
    $152 = +HEAPF32[$150>>2];
    $153 = +HEAPF32[$151>>2];
    $154 = ((($iter$sroa$0$0$in413$i)) + 12|0);
    $155 = ((($iter$sroa$0$0$in413$i)) + 16|0);
    $156 = +HEAPF32[$154>>2];
    $157 = +HEAPF32[$155>>2];
    $158 = $152 - $156;
    $159 = $153 - $157;
    $160 = $158 * $158;
    $161 = $159 * $159;
    $162 = $160 + $161;
    $163 = ((($iter$sroa$0$0$in413$i)) + 8|0);
    $$val$i = +HEAPF32[$163>>2];
    $164 = $162 > $$val$i;
    $165 = (HEAPF32[tempDoublePtr>>2]=$152,HEAP32[tempDoublePtr>>2]|0);
    $166 = (HEAPF32[tempDoublePtr>>2]=$153,HEAP32[tempDoublePtr>>2]|0);
    if ($164) {
     $$idx$val$i91 = HEAP32[$$idx72$i>>2]|0;
     $167 = ((($$idx$val$i91)) + 8|0);
     $168 = $167;
     $169 = $152 - $158;
     $170 = $153 - $159;
     ;HEAP32[$last_transform$i>>2]=HEAP32[$149>>2]|0;HEAP32[$last_transform$i+4>>2]=HEAP32[$149+4>>2]|0;HEAP32[$last_transform$i+8>>2]=HEAP32[$149+8>>2]|0;HEAP32[$last_transform$i+12>>2]=HEAP32[$149+12>>2]|0;
     HEAPF32[$126>>2] = $169;
     HEAPF32[$127>>2] = $170;
     $$idx76$i = ((($$idx72$val$i)) + 16|0);
     $$idx76$val$i = HEAP32[$$idx76$i>>2]|0;
     $$idx76$val$idx$i = ((($$idx76$val$i)) + 8|0);
     $$idx76$val$idx$val$i = HEAP32[$$idx76$val$idx$i>>2]|0;
     $$idx76$val$idx77$i = ((($$idx76$val$i)) + 12|0);
     $$idx76$val$idx77$val$i = HEAP32[$$idx76$val$idx77$i>>2]|0;
     $171 = ((($$idx76$val$idx77$val$i)) + 12|0);
     $172 = HEAP32[$171>>2]|0;
     __THREW__ = 0;
     invoke_viii($172|0,($begin_aabb$i|0),($$idx76$val$idx$val$i|0),($last_transform$i|0));
     $173 = __THREW__; __THREW__ = 0;
     $174 = $173&1;
     if ($174) {
      label = 120;
      break;
     }
     $$idx75$val$i = HEAP32[$$idx76$i>>2]|0;
     $$idx75$val$idx$i = ((($$idx75$val$i)) + 8|0);
     $$idx75$val$idx$val$i = HEAP32[$$idx75$val$idx$i>>2]|0;
     $$idx75$val$idx78$i = ((($$idx75$val$i)) + 12|0);
     $$idx75$val$idx78$val$i = HEAP32[$$idx75$val$idx78$i>>2]|0;
     $175 = ((($$idx75$val$idx78$val$i)) + 12|0);
     $176 = HEAP32[$175>>2]|0;
     __THREW__ = 0;
     invoke_viii($176|0,($end_aabb$i|0),($$idx75$val$idx$val$i|0),($149|0));
     $177 = __THREW__; __THREW__ = 0;
     $178 = $177&1;
     if ($178) {
      label = 121;
      break;
     }
     $$idx$val$i176$i = +HEAPF32[$begin_aabb$i>>2];
     $$idx2$val$i$i92 = +HEAPF32[$$idx2$i$i>>2];
     $$idx3$val$i$i93 = +HEAPF32[$end_aabb$i>>2];
     $$idx4$val$i$i = +HEAPF32[$$idx4$i$i>>2];
     $179 = (+_fminf($$idx$val$i176$i,$$idx3$val$i$i93));
     $180 = (+_fminf($$idx2$val$i$i92,$$idx4$val$i$i));
     $$idx5$val$i$i94 = +HEAPF32[$$idx5$i177$i>>2];
     $$idx6$val$i$i = +HEAPF32[$$idx6$i$i>>2];
     $$idx7$val$i179$i = +HEAPF32[$$idx7$i178$i>>2];
     $$idx8$val$i181$i = +HEAPF32[$$idx8$i180$i>>2];
     $181 = (+_fmaxf($$idx5$val$i$i94,$$idx7$val$i179$i));
     $182 = (+_fmaxf($$idx6$val$i$i,$$idx8$val$i181$i));
     HEAPF32[$swept_aabb$i>>2] = $179;
     HEAPF32[$128>>2] = $180;
     HEAPF32[$129>>2] = $181;
     HEAPF32[$130>>2] = $182;
     HEAPF32[$dir$i>>2] = $158;
     HEAPF32[$131>>2] = $159;
     HEAP32[$fks$i$i>>2] = 1;
     HEAP32[$132>>2] = 0;
     HEAP32[$133>>2] = 0;
     $183 = HEAP32[$114>>2]|0;
     $184 = HEAP32[$116>>2]|0;
     $185 = ((($184)) + 32|0);
     $186 = HEAP32[$185>>2]|0;
     __THREW__ = 0;
     invoke_viii($186|0,($183|0),($swept_aabb$i|0),($fks$i$i|0));
     $187 = __THREW__; __THREW__ = 0;
     $188 = $187&1;
     if ($188) {
      label = 29;
      break;
     }
     $_18$sroa$0$0$copyload$i$i = HEAP32[$fks$i$i>>2]|0;
     $_18$sroa$4$0$copyload$i$i = HEAP32[$132>>2]|0;
     $_18$sroa$5$0$copyload$i$i = HEAP32[$133>>2]|0;
     $193 = (($_18$sroa$0$0$copyload$i$i) + ($_18$sroa$5$0$copyload$i$i<<2)|0);
     $194 = ((($iter$sroa$0$0$in413$i)) + 20|0);
     $195 = ((($iter$sroa$0$0$in413$i)) + 21|0);
     $iter2$sroa$9$0$ph$ph$i = $_18$sroa$0$0$copyload$i$i;$min_toi$sroa$0$0$ph$ph$i = 1065353216;$toi_found$0$off0$ph$ph$i = 0;
     L61: while(1) {
      $iter2$sroa$9$0$ph$i = $iter2$sroa$9$0$ph$ph$i;
      while(1) {
       $$idx$val$i$i$i$i$i96 = HEAP32[$$idx$i$i$i$i$i87>>2]|0;
       $$idx1$val$i$i$i$i$i = HEAP32[$0>>2]|0;
       $iter2$sroa$9$0$i = $iter2$sroa$9$0$ph$i;
       while(1) {
        $196 = ($iter2$sroa$9$0$i|0)==($193|0);
        if ($196) {
         $216 = $193;
         break L61;
        } else {
         $198 = $iter2$sroa$9$0$i;
        }
        while(1) {
         $197 = ((($198)) + 4|0);
         $$val1$i$i$i = HEAP32[$198>>2]|0;
         $switchtmp$i$i = ($$val1$i$i$i|0)==(0|0);
         if ($switchtmp$i$i) {
          $216 = $197;
          break L61;
         }
         $$unpack$i$i98 = HEAP32[$$val1$i$i$i>>2]|0;
         $199 = ($$idx$val$i$i$i$i$i96>>>0)>($$unpack$i$i98>>>0);
         if (!($199)) {
          label = 38;
          break L52;
         }
         $200 = (($$idx1$val$i$i$i$i$i) + ($$unpack$i$i98<<6)|0);
         $201 = (((($$idx1$val$i$i$i$i$i) + ($$unpack$i$i98<<6)|0)) + 28|0);
         $202 = HEAP32[$201>>2]|0;
         $switchtmp$i$i$i$i$i100 = ($202|0)==(0|0);
         $switch2tmp$i$i$i$i101 = ($200|0)==(0|0);
         $or$cond$i11$i$i = $switch2tmp$i$i$i$i101 | $switchtmp$i$i$i$i$i100;
         if ($or$cond$i11$i$i) {
          label = 38;
          break L52;
         }
         $$idx9$i$i = (((($$idx1$val$i$i$i$i$i) + ($$unpack$i$i98<<6)|0)) + 40|0);
         $$idx9$val$i$i = HEAP32[$$idx9$i$i>>2]|0;
         $211 = $$idx9$val$i$i & 1073741823;
         $212 = ($211|0)==(0);
         if ($212) {
          $$idx8$i$i = (((($$idx1$val$i$i$i$i$i) + ($$unpack$i$i98<<6)|0)) + 36|0);
          $$idx8$val$i$i = HEAP32[$$idx8$i$i>>2]|0;
          $$idx$i164$i = (((($$idx1$val$i$i$i$i$i) + ($$unpack$i$i98<<6)|0)) + 32|0);
          $$idx$val$i165$i = HEAP32[$$idx$i164$i>>2]|0;
          $207 = $$idx$val$i165$i & 1073741823;
          $208 = ($207|0)==(0);
          $209 = $$idx8$val$i$i & 1073741823;
          $210 = ($209|0)==(0);
          $or$cond$i$i$i = $210 | $208;
          if (!($or$cond$i$i$i)) {
           break;
          }
         }
         $206 = ($197|0)==($193|0);
         if ($206) {
          $216 = $193;
          break L61;
         } else {
          $198 = $197;
         }
        }
        $219 = (((($$idx1$val$i$i$i$i$i) + ($$unpack$i$i98<<6)|0)) + 56|0);
        $$idx$val$i150$i = HEAP32[$219>>2]|0;
        $220 = ($$idx$val$i150$i|0)==($$idx$val$i91|0);
        if ($220) {
         $iter2$sroa$9$0$i = $197;
        } else {
         break;
        }
       }
       $221 = (((($$idx1$val$i$i$i$i$i) + ($$unpack$i$i98<<6)|0)) + 52|0);
       $222 = HEAP32[$221>>2]|0;
       $switch$i141$i = ($222|0)==(1);
       $223 = ((($$idx$val$i150$i)) + 8|0);
       $224 = HEAP32[$223>>2]|0;
       $cond$i$i$i$i$i107 = ($224|0)==(-1);
       if ($switch$i141$i) {
        if ($cond$i$i$i$i$i107) {
         label = 57;
         break L52;
        }
        $229 = (($224) + 1)|0;
        HEAP32[$223>>2] = $229;
        $230 = ((($$idx$val$i150$i)) + 12|0);
        $phitmp$i$i$i = $230;
        $obj2$sroa$0$2$i = 1;$obj2$sroa$9$0$i = $phitmp$i$i$i;
       } else {
        if ($cond$i$i$i$i$i107) {
         label = 54;
         break L52;
        }
        $226 = (($224) + 1)|0;
        HEAP32[$223>>2] = $226;
        $227 = ((($$idx$val$i150$i)) + 12|0);
        $phitmp$i10$i$i = $227;
        $obj2$sroa$0$2$i = 0;$obj2$sroa$9$0$i = $phitmp$i10$i$i;
       }
       $$idx74$val$i = HEAP32[$$idx76$i>>2]|0;
       $$idx74$val$idx$i = ((($$idx74$val$i)) + 8|0);
       $$idx74$val$idx$val$i = HEAP32[$$idx74$val$idx$i>>2]|0;
       $$idx74$val$idx79$i = ((($$idx74$val$i)) + 12|0);
       $$idx74$val$idx79$val$i = HEAP32[$$idx74$val$idx79$i>>2]|0;
       do {
        if ($obj2$sroa$0$2$i) {
         $235 = $obj2$sroa$9$0$i;
         $236 = HEAP32[$235>>2]|0;
         $switchtmp$i$i$i = ($236|0)==(0|0);
         if ($switchtmp$i$i$i) {
          $237 = ((($235)) + 4|0);
          $238 = ((($235)) + 20|0);
          $239 = SIMD_Int32x4_load(HEAPU8, $237);
          $$idx$val17$i$i$i$i = HEAP32[$238>>2]|0;
          $$idx5$i$i$i$i = ((($235)) + 24|0);
          $$idx5$val18$i$i$i$i = HEAP32[$$idx5$i$i$i$i>>2]|0;
          temp_Int32x4_ptr = $_126$i;SIMD_Int32x4_store(HEAPU8, temp_Int32x4_ptr, $239);
          HEAP32[$134>>2] = $$idx$val17$i$i$i$i;
          HEAP32[$135>>2] = $$idx5$val18$i$i$i$i;
          break;
         }
         $240 = ((($236)) + 8|0);
         $241 = HEAP32[$240>>2]|0;
         $cond$i$i$i$i$i$i111 = ($241|0)==(-1);
         if ($cond$i$i$i$i$i$i111) {
          label = 64;
          break L52;
         }
         $_4$sroa$0$0$$sroa_idx$i$i$i = ((($236)) + 20|0);
         $_4$sroa$0$0$copyload$i$i$i = +HEAPF32[$_4$sroa$0$0$$sroa_idx$i$i$i>>2];
         $_4$sroa$4$0$$sroa_idx26$i$i$i = ((($236)) + 24|0);
         $_4$sroa$4$0$copyload$i$i$i = +HEAPF32[$_4$sroa$4$0$$sroa_idx26$i$i$i>>2];
         $_4$sroa$5$0$$sroa_idx28$i$i$i = ((($236)) + 28|0);
         $_4$sroa$5$0$copyload$i$i$i = +HEAPF32[$_4$sroa$5$0$$sroa_idx28$i$i$i>>2];
         $_4$sroa$6$0$$sroa_idx30$i$i$i = ((($236)) + 32|0);
         $_4$sroa$6$0$copyload$i$i$i = +HEAPF32[$_4$sroa$6$0$$sroa_idx30$i$i$i>>2];
         $_4$sroa$7$0$$sroa_idx32$i$i$i = ((($236)) + 36|0);
         $_4$sroa$7$0$copyload$i$i$i = +HEAPF32[$_4$sroa$7$0$$sroa_idx32$i$i$i>>2];
         $_4$sroa$8$0$$sroa_idx34$i$i$i = ((($236)) + 40|0);
         $_4$sroa$8$0$copyload$i$i$i = +HEAPF32[$_4$sroa$8$0$$sroa_idx34$i$i$i>>2];
         $_14$sroa$0$0$$sroa_idx$i$i$i = ((($235)) + 4|0);
         $_14$sroa$0$0$copyload$i$i$i = +HEAPF32[$_14$sroa$0$0$$sroa_idx$i$i$i>>2];
         $_14$sroa$4$0$$sroa_idx13$i$i$i = ((($235)) + 8|0);
         $_14$sroa$4$0$copyload$i$i$i = +HEAPF32[$_14$sroa$4$0$$sroa_idx13$i$i$i>>2];
         $_14$sroa$5$0$$sroa_idx15$i$i$i = ((($235)) + 12|0);
         $_14$sroa$5$0$copyload$i$i$i = +HEAPF32[$_14$sroa$5$0$$sroa_idx15$i$i$i>>2];
         $_14$sroa$6$0$$sroa_idx17$i$i$i = ((($235)) + 16|0);
         $_14$sroa$6$0$copyload$i$i$i = +HEAPF32[$_14$sroa$6$0$$sroa_idx17$i$i$i>>2];
         $_14$sroa$7$0$$sroa_idx19$i$i$i = ((($235)) + 20|0);
         $_14$sroa$7$0$copyload$i$i$i = +HEAPF32[$_14$sroa$7$0$$sroa_idx19$i$i$i>>2];
         $_14$sroa$8$0$$sroa_idx21$i$i$i = ((($235)) + 24|0);
         $_14$sroa$8$0$copyload$i$i$i = +HEAPF32[$_14$sroa$8$0$$sroa_idx21$i$i$i>>2];
         $243 = $_4$sroa$0$0$copyload$i$i$i * $_14$sroa$7$0$copyload$i$i$i;
         $244 = $_4$sroa$5$0$copyload$i$i$i * $_14$sroa$8$0$copyload$i$i$i;
         $245 = $243 + $244;
         $246 = $_4$sroa$4$0$copyload$i$i$i * $_14$sroa$7$0$copyload$i$i$i;
         $247 = $_4$sroa$6$0$copyload$i$i$i * $_14$sroa$8$0$copyload$i$i$i;
         $248 = $246 + $247;
         $249 = $_4$sroa$7$0$copyload$i$i$i + $245;
         $250 = $_4$sroa$8$0$copyload$i$i$i + $248;
         $251 = $_4$sroa$0$0$copyload$i$i$i * $_14$sroa$0$0$copyload$i$i$i;
         $252 = $_4$sroa$5$0$copyload$i$i$i * $_14$sroa$4$0$copyload$i$i$i;
         $253 = $251 + $252;
         $254 = $_4$sroa$0$0$copyload$i$i$i * $_14$sroa$5$0$copyload$i$i$i;
         $255 = $_4$sroa$5$0$copyload$i$i$i * $_14$sroa$6$0$copyload$i$i$i;
         $256 = $254 + $255;
         $257 = $_4$sroa$4$0$copyload$i$i$i * $_14$sroa$0$0$copyload$i$i$i;
         $258 = $_4$sroa$6$0$copyload$i$i$i * $_14$sroa$4$0$copyload$i$i$i;
         $259 = $257 + $258;
         $260 = $_4$sroa$4$0$copyload$i$i$i * $_14$sroa$5$0$copyload$i$i$i;
         $261 = $_4$sroa$6$0$copyload$i$i$i * $_14$sroa$6$0$copyload$i$i$i;
         $262 = $260 + $261;
         HEAPF32[$_126$i>>2] = $253;
         HEAPF32[$_5$sroa$4$0$$sroa_idx8$i$i$i$i>>2] = $259;
         HEAPF32[$_5$sroa$5$0$$sroa_idx11$i$i$i$i>>2] = $256;
         HEAPF32[$_5$sroa$6$0$$sroa_idx14$i$i$i$i>>2] = $262;
         HEAPF32[$136>>2] = $249;
         HEAPF32[$135>>2] = $250;
        } else {
         $231 = $obj2$sroa$9$0$i;
         $232 = ((($231)) + 8|0);
         $233 = ((($231)) + 24|0);
         $234 = SIMD_Int32x4_load(HEAPU8, $232);
         $$idx$val17$i$i$i = HEAP32[$233>>2]|0;
         $$idx5$i$i$i = ((($231)) + 28|0);
         $$idx5$val18$i$i$i = HEAP32[$$idx5$i$i$i>>2]|0;
         temp_Int32x4_ptr = $_126$i;SIMD_Int32x4_store(HEAPU8, temp_Int32x4_ptr, $234);
         HEAP32[$134>>2] = $$idx$val17$i$i$i;
         HEAP32[$135>>2] = $$idx5$val18$i$i$i;
        }
       } while(0);
       HEAPF32[$_130$i>>2] = 0.0;
       HEAPF32[$137>>2] = 0.0;
       $263 = $obj2$sroa$9$0$i;
       $264 = ((($263)) + 4|0);
       $265 = ((($263)) + 28|0);
       $_3$0$i$i = $obj2$sroa$0$2$i ? $265 : $264;
       $$idx73$val$i = HEAP32[$_3$0$i$i>>2]|0;
       $$idx73$val$idx$i = ((($$idx73$val$i)) + 8|0);
       $$idx73$val$idx$val$i = HEAP32[$$idx73$val$idx$i>>2]|0;
       $$idx73$val$idx80$i = ((($$idx73$val$i)) + 12|0);
       $$idx73$val$idx80$val$i = HEAP32[$$idx73$val$idx80$i>>2]|0;
       __THREW__ = 0;
       invoke_viiiiiiiii(250,($toi$i|0),($last_transform$i|0),($dir$i|0),($$idx74$val$idx$val$i|0),($$idx74$val$idx79$val$i|0),($_126$i|0),($_130$i|0),($$idx73$val$idx$val$i|0),($$idx73$val$idx80$val$i|0));
       $266 = __THREW__; __THREW__ = 0;
       $267 = $266&1;
       if ($267) {
        label = 117;
        break L52;
       }
       $268 = HEAP32[$toi$i>>2]|0;
       $switch17$i = ($268|0)==(1);
       if ($switch17$i) {
        $273 = HEAP32[$138>>2]|0;
        if (!($obj2$sroa$0$2$i)) {
         label = 97;
         break;
        }
        $274 = HEAP8[$194>>0]|0;
        $275 = ($274<<24>>24)==(0);
        if (!($275)) {
         label = 75;
         break L52;
        }
       } else {
        if (!($obj2$sroa$0$2$i)) {
         $min_toi$sroa$0$1256$i = $min_toi$sroa$0$0$ph$ph$i;$toi_found$1$off0258$i = $toi_found$0$off0$ph$ph$i;
         break;
        }
       }
       $271 = HEAP32[$223>>2]|0;
       $272 = (($271) + -1)|0;
       HEAP32[$223>>2] = $272;
       $iter2$sroa$9$0$ph$i = $197;
      }
      do {
       if ((label|0) == 97) {
        label = 0;
        $328 = (HEAP32[tempDoublePtr>>2]=$273,+HEAPF32[tempDoublePtr>>2]);
        $329 = (HEAP32[tempDoublePtr>>2]=$min_toi$sroa$0$0$ph$ph$i,+HEAPF32[tempDoublePtr>>2]);
        $330 = !($328 <= $329);
        if ($330) {
         $min_toi$sroa$0$1256$i = $min_toi$sroa$0$0$ph$ph$i;$toi_found$1$off0258$i = $toi_found$0$off0$ph$ph$i;
         break;
        }
        $332 = $328 > 1.1920928955078125E-7;
        if ($332) {
         label = 101;
        } else {
         $331 = HEAP8[$195>>0]|0;
         $not$$i = ($331<<24>>24)==(0);
         if ($not$$i) {
          $min_toi$sroa$0$1$ph$i = $min_toi$sroa$0$0$ph$ph$i;
         } else {
          label = 101;
         }
        }
        if ((label|0) == 101) {
         label = 0;
         $min_toi$sroa$0$1$ph$i = $273;
        }
        $min_toi$sroa$0$1256$i = $min_toi$sroa$0$1$ph$i;$toi_found$1$off0258$i = 1;
       }
      } while(0);
      $269 = HEAP32[$223>>2]|0;
      $270 = (($269) + -1)|0;
      HEAP32[$223>>2] = $270;
      $iter2$sroa$9$0$ph$ph$i = $197;$min_toi$sroa$0$0$ph$ph$i = $min_toi$sroa$0$1256$i;$toi_found$0$off0$ph$ph$i = $toi_found$1$off0258$i;
     }
     while(1) {
      $217 = ($216|0)==($193|0);
      if ($217) {
       break;
      }
      $218 = ((($216)) + 4|0);
      $$val1$i$i$i$i$i$i105 = HEAP32[$216>>2]|0;
      $switchtmp$i$i$i$i106 = ($$val1$i$i$i$i$i$i105|0)==(0|0);
      if ($switchtmp$i$i$i$i106) {
       break;
      } else {
       $216 = $218;
      }
     }
     $not$$i$i$i$i$i$i = ($_18$sroa$4$0$copyload$i$i|0)==(0);
     if (!($not$$i$i$i$i$i$i)) {
      _free($_18$sroa$0$0$copyload$i$i);
     }
     if ($toi_found$0$off0$ph$ph$i) {
      $333 = +HEAPF32[$dir$i>>2];
      $334 = +HEAPF32[$131>>2];
      $335 = (HEAP32[tempDoublePtr>>2]=$min_toi$sroa$0$0$ph$ph$i,+HEAPF32[tempDoublePtr>>2]);
      $336 = 1.0 - $335;
      $337 = $336 * $333;
      $338 = $336 * $334;
      $339 = +HEAPF32[$150>>2];
      $340 = +HEAPF32[$151>>2];
      $341 = $339 - $337;
      $342 = $340 - $338;
      HEAPF32[$150>>2] = $341;
      HEAPF32[$151>>2] = $342;
      $$idx$i$i102$i = ((($$idx72$val$i)) + 68|0);
      $$idx$val$i$i103$i = +HEAPF32[$$idx$i$i102$i>>2];
      $$idx1$i$i$i125 = ((($$idx72$val$i)) + 72|0);
      $$idx1$val$i$i$i126 = +HEAPF32[$$idx1$i$i$i125>>2];
      $_5$sroa$0$0$$sroa_idx$i$i$i$i$i$i = ((($$idx72$val$i)) + 20|0);
      $_5$sroa$0$0$copyload$i$i$i$i$i$i = +HEAPF32[$_5$sroa$0$0$$sroa_idx$i$i$i$i$i$i>>2];
      $_5$sroa$4$0$$sroa_idx2$i$i$i$i$i$i = ((($$idx72$val$i)) + 24|0);
      $_5$sroa$4$0$copyload$i$i$i$i$i$i127 = +HEAPF32[$_5$sroa$4$0$$sroa_idx2$i$i$i$i$i$i>>2];
      $_5$sroa$5$0$$sroa_idx4$i$i$i$i$i$i = ((($$idx72$val$i)) + 28|0);
      $_5$sroa$5$0$copyload$i$i$i$i$i$i128 = +HEAPF32[$_5$sroa$5$0$$sroa_idx4$i$i$i$i$i$i>>2];
      $_5$sroa$6$0$$sroa_idx6$i$i$i$i$i$i = ((($$idx72$val$i)) + 32|0);
      $_5$sroa$6$0$copyload$i$i$i$i$i$i = +HEAPF32[$_5$sroa$6$0$$sroa_idx6$i$i$i$i$i$i>>2];
      $343 = $$idx$val$i$i103$i * $_5$sroa$0$0$copyload$i$i$i$i$i$i;
      $344 = $$idx1$val$i$i$i126 * $_5$sroa$5$0$copyload$i$i$i$i$i$i128;
      $345 = $343 + $344;
      $346 = $$idx$val$i$i103$i * $_5$sroa$4$0$copyload$i$i$i$i$i$i127;
      $347 = $$idx1$val$i$i$i126 * $_5$sroa$6$0$copyload$i$i$i$i$i$i;
      $348 = $346 + $347;
      $349 = $341 + $345;
      $350 = $342 + $348;
      $351 = ((($$idx72$val$i)) + 76|0);
      HEAPF32[$351>>2] = $349;
      $352 = ((($$idx72$val$i)) + 80|0);
      HEAPF32[$352>>2] = $350;
      HEAP8[$195>>0] = 0;
      $353 = ((($$idx72$val$i)) + 36|0);
      $354 = SIMD_Int32x4_load(HEAPU8, $149);
      $$idx$val17$i$i = HEAP32[$353>>2]|0;
      $$idx5$val18$i$i = HEAP32[$151>>2]|0;
      temp_Int32x4_ptr = $_179$i;SIMD_Int32x4_store(HEAPU8, temp_Int32x4_ptr, $354);
      HEAP32[$139>>2] = $$idx$val17$i$i;
      HEAP32[$140>>2] = $$idx5$val18$i$i;
      __THREW__ = 0;
      invoke_viii(249,($$pre1804$pre$phiZZ2D|0),($168|0),($_179$i|0));
      $355 = __THREW__; __THREW__ = 0;
      $356 = $355&1;
      if ($356) {
       label = 122;
       break;
      }
      $update_collision_world$1$off0$i = 1;
     } else {
      HEAP8[$195>>0] = 1;
      $update_collision_world$1$off0$i = $update_collision_world$0$off0414$i;
     }
     $$pre$i131 = HEAP32[$150>>2]|0;
     $$pre513$i = HEAP32[$151>>2]|0;
     $357 = $$pre$i131;$358 = $$pre513$i;$update_collision_world$2$off0$i = $update_collision_world$1$off0$i;
    } else {
     $357 = $165;$358 = $166;$update_collision_world$2$off0$i = $update_collision_world$0$off0414$i;
    }
    HEAP32[$154>>2] = $357;
    HEAP32[$155>>2] = $358;
    $359 = HEAP32[$141>>2]|0;
    $360 = ($359|0)==(0);
    if (!($360)) {
     $362 = $359;
     while(1) {
      $361 = (($362) + -1)|0;
      HEAP32[$141>>2] = $361;
      $363 = HEAP32[$142>>2]|0;
      $364 = (((($363) + ($361<<3)|0)) + 4|0);
      $365 = HEAP32[$364>>2]|0;
      $366 = HEAP32[$365>>2]|0;
      $367 = (($366) + -1)|0;
      HEAP32[$365>>2] = $367;
      $$idx$val$i$i$i$i$i$i = HEAP32[$364>>2]|0;
      $368 = HEAP32[$$idx$val$i$i$i$i$i$i>>2]|0;
      $369 = ($368|0)==(0);
      if ($369) {
       $372 = ((($365)) + 12|0);
       __THREW__ = 0;
       invoke_vi(247,($372|0));
       $373 = __THREW__; __THREW__ = 0;
       $374 = $373&1;
       if ($374) {
        label = 111;
        break L52;
       }
       $$idx3$val$i$i$i$i$i$i = HEAP32[$364>>2]|0;
       $377 = ((($$idx3$val$i$i$i$i$i$i)) + 4|0);
       $378 = HEAP32[$377>>2]|0;
       $379 = (($378) + -1)|0;
       HEAP32[$377>>2] = $379;
       $$idx2$val$i$i$i$i$i$i = HEAP32[$364>>2]|0;
       $380 = ((($$idx2$val$i$i$i$i$i$i)) + 4|0);
       $381 = HEAP32[$380>>2]|0;
       $382 = ($381|0)==(0);
       if ($382) {
        _free($365);
       }
      }
      $370 = HEAP32[$141>>2]|0;
      $371 = ($370|0)==(0);
      if ($371) {
       break;
      } else {
       $362 = $370;
      }
     }
    }
    HEAP32[$144>>2] = 0;
    $383 = ($143|0)==($124|0);
    if ($383) {
     $update_collision_world$0$off0$lcssa$i = $update_collision_world$2$off0$i;
     label = 21;
     break;
    } else {
     $iter$sroa$0$0$in413$i = $143;$update_collision_world$0$off0414$i = $update_collision_world$2$off0$i;
    }
   }
   L131:    switch (label|0) {
    case 21: {
     if (!($update_collision_world$0$off0$lcssa$i)) {
      label = 141;
      break L50;
     }
     __ZN93__LT_ncollide_pipeline__world__collision_world__CollisionWorld_LT_P_C__u20_M_C__u20_T_GT__GT_23perform_position_update17hd449c9be1a6fa5a2E($$pre1804$pre$phiZZ2D);
     __ZN93__LT_ncollide_pipeline__world__collision_world__CollisionWorld_LT_P_C__u20_M_C__u20_T_GT__GT_42perform_additions_removals_and_broad_phase17h262b713878bb08b9E($$pre1804$pre$phiZZ2D);
     $400 = ((($0)) + 72|0);
     $401 = HEAP32[$400>>2]|0;
     $402 = ((($0)) + 76|0);
     $403 = HEAP32[$402>>2]|0;
     $404 = ((($0)) + 152|0);
     $405 = HEAP32[$404>>2]|0;
     $406 = ((($403)) + 12|0);
     $407 = HEAP32[$406>>2]|0;
     FUNCTION_TABLE_viiiii[$407 & 511]($401,$0,$111,$112,$405);
     $408 = HEAP32[$404>>2]|0;
     $409 = (($408) + 1)|0;
     HEAP32[$404>>2] = $409;
     break L50;
     break;
    }
    case 24: {
     __THREW__ = 0;
     invoke_v(212);
     $146 = __THREW__; __THREW__ = 0;
     $147 = ___cxa_find_matching_catch_2()|0;
     $148 = tempRet0;
     $personalityslot$sroa$0$2268$i = $147;$personalityslot$sroa$10$2266$i = $148;
     ___resumeException($personalityslot$sroa$0$2268$i|0);
     // unreachable;
     break;
    }
    case 29: {
     $189 = ___cxa_find_matching_catch_2()|0;
     $190 = tempRet0;
     $191 = HEAP32[$132>>2]|0;
     $not$$i$i$i$i$i172$i = ($191|0)==(0);
     if ($not$$i$i$i$i$i172$i) {
      $eh$lpad$body174$i$index3Z2D = $190;$eh$lpad$body174$i$indexZ2D = $189;
      label = 123;
     } else {
      $192 = HEAP32[$fks$i$i>>2]|0;
      _free($192);
      $eh$lpad$body174$i$index3Z2D = $190;$eh$lpad$body174$i$indexZ2D = $189;
      label = 123;
     }
     break;
    }
    case 38: {
     __THREW__ = 0;
     invoke_vii(219,(10432|0),15);
     $203 = __THREW__; __THREW__ = 0;
     $204 = ___cxa_find_matching_catch_2()|0;
     $205 = tempRet0;
     $personalityslot$sroa$0$1$i102 = $204;$personalityslot$sroa$10$1$i = $205;
     label = 42;
     break;
    }
    case 54: {
     __THREW__ = 0;
     invoke_v(221);
     $225 = __THREW__; __THREW__ = 0;
     label = 125;
     break;
    }
    case 57: {
     __THREW__ = 0;
     invoke_v(221);
     $228 = __THREW__; __THREW__ = 0;
     label = 125;
     break;
    }
    case 64: {
     __THREW__ = 0;
     invoke_v(221);
     $242 = __THREW__; __THREW__ = 0;
     label = 116;
     break;
    }
    case 75: {
     $276 = ((($0)) + 344|0);
     $277 = HEAP32[$221>>2]|0;
     $switch$i$i114 = ($277|0)==(1);
     L142: do {
      if ($switch$i$i114) {
       $$idx$val$i16$i$i = HEAP32[$219>>2]|0;
       $279 = HEAP32[$$idx$val$i16$i$i>>2]|0;
       $$arith160 = (($279) + 1)|0;
       $$overflow161 = ($279>>>0)>(4294967294);
       if ($$overflow161) {
        _llvm_trap();
        // unreachable;
       }
       HEAP32[$$idx$val$i16$i$i>>2] = $$arith160;
       $304 = $$idx$val$i16$i$i;
       $305 = HEAP32[$141>>2]|0;
       $$idx$i104$i = ((($0)) + 348|0);
       $$idx$val$i105$i = HEAP32[$$idx$i104$i>>2]|0;
       $306 = ($305|0)==($$idx$val$i105$i|0);
       do {
        if ($306) {
         __THREW__ = 0;
         invoke_vi(251,($276|0));
         $307 = __THREW__; __THREW__ = 0;
         $308 = $307&1;
         if (!($308)) {
          $$pre$i$i120 = HEAP32[$141>>2]|0;
          $323 = $$pre$i$i120;
          break;
         }
         $309 = ___cxa_find_matching_catch_2()|0;
         $310 = tempRet0;
         $311 = HEAP32[$$idx$val$i16$i$i>>2]|0;
         $312 = (($311) + -1)|0;
         HEAP32[$$idx$val$i16$i$i>>2] = $312;
         $313 = ($312|0)==(0);
         if (!($313)) {
          $eh$lpad$body$ph$i$index13Z2D = $310;$eh$lpad$body$ph$i$indexZ2D = $309;
          break L142;
         }
         $314 = ((($$idx$val$i16$i$i)) + 12|0);
         __THREW__ = 0;
         invoke_vi(247,($314|0));
         $315 = __THREW__; __THREW__ = 0;
         $316 = $315&1;
         if ($316) {
          label = 116;
          break L131;
         }
         $317 = ((($$idx$val$i16$i$i)) + 4|0);
         $318 = HEAP32[$317>>2]|0;
         $319 = (($318) + -1)|0;
         HEAP32[$317>>2] = $319;
         $320 = ($319|0)==(0);
         if (!($320)) {
          $eh$lpad$body$ph$i$index13Z2D = $310;$eh$lpad$body$ph$i$indexZ2D = $309;
          break L142;
         }
         _free($$idx$val$i16$i$i);
         $eh$lpad$body$ph$i$index13Z2D = $310;$eh$lpad$body$ph$i$indexZ2D = $309;
         break L142;
        } else {
         $323 = $305;
        }
       } while(0);
       $321 = HEAP32[$276>>2]|0;
       $322 = (($321) + ($323<<3)|0);
       HEAP32[$322>>2] = $273;
       $324 = (((($321) + ($323<<3)|0)) + 4|0);
       HEAP32[$324>>2] = $304;
       $325 = HEAP32[$141>>2]|0;
       $326 = (($325) + 1)|0;
       HEAP32[$141>>2] = $326;
       __THREW__ = 0;
       invoke_viii(225,(9588|0),19,(5160|0));
       $327 = __THREW__; __THREW__ = 0;
       label = 116;
       break L131;
      } else {
       $$idx$val$i$i116$i = HEAP32[$219>>2]|0;
       $278 = HEAP32[$$idx$val$i$i116$i>>2]|0;
       $$arith164 = (($278) + 1)|0;
       $$overflow165 = ($278>>>0)>(4294967294);
       if ($$overflow165) {
        _llvm_trap();
        // unreachable;
       }
       HEAP32[$$idx$val$i$i116$i>>2] = $$arith164;
       __THREW__ = 0;
       invoke_viii(225,(11729|0),34,(5220|0));
       $280 = __THREW__; __THREW__ = 0;
       $281 = ___cxa_find_matching_catch_2()|0;
       $282 = tempRet0;
       $283 = HEAP32[$$idx$val$i$i116$i>>2]|0;
       $284 = (($283) + -1)|0;
       HEAP32[$$idx$val$i$i116$i>>2] = $284;
       $285 = ($284|0)==(0);
       if ($285) {
        $286 = ((($$idx$val$i$i116$i)) + 16|0);
        $287 = HEAP32[$286>>2]|0;
        $288 = HEAP32[$287>>2]|0;HEAP32[$287>>2] = (($288-1)|0);
        $289 = ($288|0)==(1);
        if ($289) {
         /* fence */;
         __THREW__ = 0;
         invoke_vi(241,($286|0));
         $290 = __THREW__; __THREW__ = 0;
         $291 = $290&1;
         if ($291) {
          label = 116;
          break L131;
         }
        }
        $292 = ((($$idx$val$i$i116$i)) + 172|0);
        $293 = HEAP32[$292>>2]|0;
        $switchtmp$i$i$i$i$i$i$i$i116 = ($293|0)==(0|0);
        if (!($switchtmp$i$i$i$i$i$i$i$i116)) {
         $$idx1$i$i$i$i$i$i$i$i$i = ((($$idx$val$i$i116$i)) + 176|0);
         $$idx1$val$i$i$i$i$i$i$i$i$i = HEAP32[$$idx1$i$i$i$i$i$i$i$i$i>>2]|0;
         $$idx1$val$val$i$i$i$i$i$i$i$i$i = HEAP32[$$idx1$val$i$i$i$i$i$i$i$i$i>>2]|0;
         __THREW__ = 0;
         invoke_vi($$idx1$val$val$i$i$i$i$i$i$i$i$i|0,($293|0));
         $294 = __THREW__; __THREW__ = 0;
         $295 = $294&1;
         if ($295) {
          label = 116;
          break L131;
         }
         $296 = HEAP32[$$idx1$i$i$i$i$i$i$i$i$i>>2]|0;
         $297 = ((($296)) + 4|0);
         $298 = HEAP32[$297>>2]|0;
         $299 = ($298|0)==(0);
         if (!($299)) {
          _free($293);
         }
        }
        $300 = ((($$idx$val$i$i116$i)) + 4|0);
        $301 = HEAP32[$300>>2]|0;
        $302 = (($301) + -1)|0;
        HEAP32[$300>>2] = $302;
        $303 = ($302|0)==(0);
        if ($303) {
         _free($$idx$val$i$i116$i);
         $eh$lpad$body$ph$i$index13Z2D = $282;$eh$lpad$body$ph$i$indexZ2D = $281;
        } else {
         $eh$lpad$body$ph$i$index13Z2D = $282;$eh$lpad$body$ph$i$indexZ2D = $281;
        }
       } else {
        $eh$lpad$body$ph$i$index13Z2D = $282;$eh$lpad$body$ph$i$indexZ2D = $281;
       }
      }
     } while(0);
     $$fca$0$extract37277284$i = $eh$lpad$body$ph$i$indexZ2D;$$fca$1$extract39278283$i = $eh$lpad$body$ph$i$index13Z2D;
     label = 119;
     break;
    }
    case 111: {
     $375 = ___cxa_find_matching_catch_2()|0;
     $376 = tempRet0;
     $personalityslot$sroa$0$2269$i = $375;$personalityslot$sroa$10$2267$i = $376;
     break;
    }
    case 117: {
     $386 = ___cxa_find_matching_catch_2()|0;
     $387 = tempRet0;
     if ($obj2$sroa$0$2$i) {
      $$fca$0$extract37277284$i = $386;$$fca$1$extract39278283$i = $387;
      label = 119;
     } else {
      $388 = HEAP32[$223>>2]|0;
      $389 = (($388) + -1)|0;
      HEAP32[$223>>2] = $389;
      $personalityslot$sroa$0$1$i102 = $386;$personalityslot$sroa$10$1$i = $387;
      label = 42;
     }
     break;
    }
    case 120: {
     $392 = ___cxa_find_matching_catch_2()|0;
     $393 = tempRet0;
     $personalityslot$sroa$0$2269$i = $392;$personalityslot$sroa$10$2267$i = $393;
     break;
    }
    case 121: {
     $394 = ___cxa_find_matching_catch_2()|0;
     $395 = tempRet0;
     $personalityslot$sroa$0$2269$i = $394;$personalityslot$sroa$10$2267$i = $395;
     break;
    }
    case 122: {
     $396 = ___cxa_find_matching_catch_2()|0;
     $397 = tempRet0;
     $eh$lpad$body174$i$index3Z2D = $397;$eh$lpad$body174$i$indexZ2D = $396;
     label = 123;
     break;
    }
   }
   if ((label|0) == 116) {
    $384 = ___cxa_find_matching_catch_2()|0;
    $385 = tempRet0;
    $$fca$0$extract37277284$i = $384;$$fca$1$extract39278283$i = $385;
    label = 119;
   }
   else if ((label|0) == 123) {
    $personalityslot$sroa$0$2269$i = $eh$lpad$body174$i$indexZ2D;$personalityslot$sroa$10$2267$i = $eh$lpad$body174$i$index3Z2D;
   }
   else if ((label|0) == 125) {
    $398 = ___cxa_find_matching_catch_2()|0;
    $399 = tempRet0;
    $personalityslot$sroa$0$1$i102 = $398;$personalityslot$sroa$10$1$i = $399;
    label = 42;
   }
   if ((label|0) == 119) {
    $390 = HEAP32[$223>>2]|0;
    $391 = (($390) + -1)|0;
    HEAP32[$223>>2] = $391;
    $personalityslot$sroa$0$1$i102 = $$fca$0$extract37277284$i;$personalityslot$sroa$10$1$i = $$fca$1$extract39278283$i;
    label = 42;
   }
   if ((label|0) == 42) {
    $213 = $197;
    while(1) {
     $214 = ($213|0)==($193|0);
     if ($214) {
      break;
     }
     $215 = ((($213)) + 4|0);
     $$val1$i$i$i$i$i156$i = HEAP32[$213>>2]|0;
     $switchtmp$i$i$i157$i = ($$val1$i$i$i$i$i156$i|0)==(0|0);
     if ($switchtmp$i$i$i157$i) {
      break;
     } else {
      $213 = $215;
     }
    }
    $not$$i$i$i$i$i159$i = ($_18$sroa$4$0$copyload$i$i|0)==(0);
    if ($not$$i$i$i$i$i159$i) {
     $personalityslot$sroa$0$2269$i = $personalityslot$sroa$0$1$i102;$personalityslot$sroa$10$2267$i = $personalityslot$sroa$10$1$i;
    } else {
     _free($_18$sroa$0$0$copyload$i$i);
     $personalityslot$sroa$0$2269$i = $personalityslot$sroa$0$1$i102;$personalityslot$sroa$10$2267$i = $personalityslot$sroa$10$1$i;
    }
   }
   HEAP32[$144>>2] = 0;
   $personalityslot$sroa$0$2268$i = $personalityslot$sroa$0$2269$i;$personalityslot$sroa$10$2266$i = $personalityslot$sroa$10$2267$i;
   ___resumeException($personalityslot$sroa$0$2268$i|0);
   // unreachable;
  }
 } while(0);
 if ((label|0) == 141) {
  $452 = ((($0)) + 72|0);
  $453 = HEAP32[$452>>2]|0;
  $454 = ((($0)) + 76|0);
  $455 = HEAP32[$454>>2]|0;
  $456 = ((($0)) + 152|0);
  $457 = HEAP32[$456>>2]|0;
  $458 = ((($455)) + 12|0);
  $459 = HEAP32[$458>>2]|0;
  FUNCTION_TABLE_viiiii[$459 & 511]($453,$0,$111,$112,$457);
  $460 = HEAP32[$456>>2]|0;
  $461 = (($460) + 1)|0;
  HEAP32[$456>>2] = $461;
 }
 $$idx17 = ((($0)) + 284|0);
 $$idx17$val = HEAP32[$$idx17>>2]|0;
 $462 = ((($$idx17$val)) + 8|0);
 $463 = HEAP32[$462>>2]|0;
 $cond$i$i$i175 = ($463|0)==(0);
 if (!($cond$i$i$i175)) {
  __ZN4core6result13unwrap_failed17he96585155b596c01E();
  // unreachable;
 }
 HEAP32[$462>>2] = -1;
 $464 = ((($$idx17$val)) + 12|0);
 $$idx$i$i178 = ((($0)) + 360|0);
 $$idx$val$i$i179 = HEAP32[$$idx$i$i178>>2]|0;
 $$idx1$i$i180 = ((($0)) + 368|0);
 $$idx1$val$i$i181 = HEAP32[$$idx1$i$i180>>2]|0;
 $465 = (($$idx$val$i$i179) + (($$idx1$val$i$i181*44)|0)|0);
 $466 = ($$idx1$val$i$i181|0)==(0);
 L199: do {
  if (!($466)) {
   $468 = $$idx$val$i$i179;
   L200: while(1) {
    $467 = ((($468)) + 44|0);
    $switch6tmp$i = ($468|0)==(0|0);
    if ($switch6tmp$i) {
     break L199;
    }
    $469 = ((($468)) + 4|0);
    $470 = HEAP32[$469>>2]|0;
    $trunc$i183 = $470&255;
    $trunc$i183$clear = $trunc$i183 & 3;
    switch ($trunc$i183$clear<<24>>24) {
    case 0:  {
     label = 147;
     break L200;
     break;
    }
    case 1:  {
     $474 = ((($468)) + 8|0);
     $$idx26$val$i = HEAP32[$474>>2]|0;
     $475 = ((($$idx26$val$i)) + 8|0);
     $476 = HEAP32[$475>>2]|0;
     $cond$i$i$i44$i = ($476|0)==(0);
     if (!($cond$i$i$i44$i)) {
      label = 149;
      break L200;
     }
     HEAP32[$475>>2] = -1;
     $$idx30$i = ((($$idx26$val$i)) + 12|0);
     $$idx30$val$i = HEAP8[$$idx30$i>>0]|0;
     $480 = ($$idx30$val$i<<24>>24)==(0);
     if ($480) {
      HEAP8[$$idx30$i>>0] = 1;
      $481 = ((($$idx26$val$i)) + 16|0);
      $482 = HEAP32[$481>>2]|0;
      $switchtmp$i189 = ($482|0)==(0|0);
      if (!($switchtmp$i189)) {
       __THREW__ = 0;
       invoke_vii(243,($464|0),($482|0));
       $483 = __THREW__; __THREW__ = 0;
       $484 = $483&1;
       if ($484) {
        label = 166;
        break L200;
       }
      }
      $485 = ((($$idx26$val$i)) + 28|0);
      $486 = HEAP32[$485>>2]|0;
      $switch3tmp$i = ($486|0)==(0|0);
      if (!($switch3tmp$i)) {
       __THREW__ = 0;
       invoke_vii(243,($464|0),($486|0));
       $487 = __THREW__; __THREW__ = 0;
       $488 = $487&1;
       if ($488) {
        label = 166;
        break L200;
       }
      }
     }
     HEAP32[$475>>2] = 0;
     break;
    }
    case 2:  {
     $490 = ((($468)) + 8|0);
     $$idx27$val$i = HEAP32[$490>>2]|0;
     $491 = ((($$idx27$val$i)) + 8|0);
     $492 = HEAP32[$491>>2]|0;
     $cond$i$i$i$i191 = ($492|0)==(0);
     if (!($cond$i$i$i$i191)) {
      label = 159;
      break L200;
     }
     HEAP32[$491>>2] = -1;
     $$idx34$i = ((($$idx27$val$i)) + 12|0);
     $$idx34$val$i = HEAP8[$$idx34$i>>0]|0;
     $496 = ($$idx34$val$i<<24>>24)==(0);
     if ($496) {
      HEAP8[$$idx34$i>>0] = 1;
      $497 = ((($$idx27$val$i)) + 16|0);
      $498 = HEAP32[$497>>2]|0;
      $switch4tmp$i = ($498|0)==(0|0);
      if (!($switch4tmp$i)) {
       __THREW__ = 0;
       invoke_vii(243,($464|0),($498|0));
       $499 = __THREW__; __THREW__ = 0;
       $500 = $499&1;
       if ($500) {
        label = 167;
        break L200;
       }
      }
      $501 = ((($$idx27$val$i)) + 44|0);
      $502 = HEAP32[$501>>2]|0;
      $switch5tmp$i = ($502|0)==(0|0);
      if (!($switch5tmp$i)) {
       __THREW__ = 0;
       invoke_vii(243,($464|0),($502|0));
       $503 = __THREW__; __THREW__ = 0;
       $504 = $503&1;
       if ($504) {
        label = 167;
        break L200;
       }
      }
     }
     HEAP32[$491>>2] = 0;
     break;
    }
    default: {
     label = 168;
     break L200;
    }
    }
    $489 = ($467|0)==($465|0);
    if ($489) {
     break L199;
    } else {
     $468 = $467;
    }
   }
   if ((label|0) == 147) {
    __THREW__ = 0;
    invoke_viii(225,(12006|0),51,(5172|0));
    $471 = __THREW__; __THREW__ = 0;
    $472 = ___cxa_find_matching_catch_2()|0;
    $473 = tempRet0;
    $eh$lpad$body203$index78Z2D = $473;$eh$lpad$body203$indexZ2D = $472;
   }
   else if ((label|0) == 149) {
    __THREW__ = 0;
    invoke_v(212);
    $477 = __THREW__; __THREW__ = 0;
    $478 = ___cxa_find_matching_catch_2()|0;
    $479 = tempRet0;
    $personalityslot$sroa$0$0$i186 = $478;$personalityslot$sroa$6$0$i = $479;
    label = 150;
   }
   else if ((label|0) == 159) {
    __THREW__ = 0;
    invoke_v(212);
    $493 = __THREW__; __THREW__ = 0;
    $494 = ___cxa_find_matching_catch_2()|0;
    $495 = tempRet0;
    $personalityslot$sroa$0$0$i186 = $494;$personalityslot$sroa$6$0$i = $495;
    label = 150;
   }
   else if ((label|0) == 166) {
    $505 = ___cxa_find_matching_catch_2()|0;
    $506 = tempRet0;
    HEAP32[$475>>2] = 0;
    $personalityslot$sroa$0$0$i186 = $505;$personalityslot$sroa$6$0$i = $506;
    label = 150;
   }
   else if ((label|0) == 167) {
    $507 = ___cxa_find_matching_catch_2()|0;
    $508 = tempRet0;
    HEAP32[$491>>2] = 0;
    $personalityslot$sroa$0$0$i186 = $507;$personalityslot$sroa$6$0$i = $508;
    label = 150;
   }
   else if ((label|0) == 168) {
    // unreachable;
   }
   if ((label|0) == 150) {
    $eh$lpad$body203$index78Z2D = $personalityslot$sroa$6$0$i;$eh$lpad$body203$indexZ2D = $personalityslot$sroa$0$0$i186;
   }
   HEAP32[$462>>2] = 0;
   $personalityslot$sroa$0$0 = $eh$lpad$body203$indexZ2D;$personalityslot$sroa$19$0 = $eh$lpad$body203$index78Z2D;
   ___resumeException($personalityslot$sroa$0$0|0);
   // unreachable;
  }
 } while(0);
 HEAP32[$462>>2] = 0;
 $$idx16$val = HEAP32[$$idx17>>2]|0;
 $509 = ((($$idx16$val)) + 8|0);
 $510 = HEAP32[$509>>2]|0;
 $cond$i$i$i206 = ($510|0)==(0);
 if (!($cond$i$i$i206)) {
  __ZN4core6result13unwrap_failed17he96585155b596c01E();
  // unreachable;
 }
 HEAP32[$509>>2] = -1;
 $$idx$val$i$i211 = HEAP32[$$idx$i>>2]|0;
 $$idx1$val$i$i213 = HEAP32[$$idx1$i>>2]|0;
 $511 = (($$idx$val$i$i211) + ($$idx1$val$i$i213<<3)|0);
 $512 = ($$idx1$val$i$i213|0)==(0);
 $switch41tmp517565$i = ($$idx$val$i$i211|0)==(0|0);
 $switch41tmp566$i = $switch41tmp517565$i | $512;
 L238: do {
  if ($switch41tmp566$i) {
   label = 173;
  } else {
   $513 = ((($$idx$val$i$i211)) + 8|0);
   $$idx168$i = ((($$idx16$val)) + 12|0);
   $_19$sroa$0$0$iter$sroa$6$0568$i = 0;$iter$sroa$0$0$569$i = $513;$iter$sroa$0$0567$i = $$idx$val$i$i211;$iter$sroa$6$0$570$i = 1;
   L240: while(1) {
    $$idx134$i = ((($iter$sroa$0$0567$i)) + 4|0);
    $$idx134$val$i = HEAP32[$$idx134$i>>2]|0;
    $520 = ((($$idx134$val$i)) + 8|0);
    $521 = HEAP32[$520>>2]|0;
    $cond$i$i$i260$i = ($521|0)==(0);
    if (!($cond$i$i$i260$i)) {
     label = 176;
     break;
    }
    HEAP32[$520>>2] = -1;
    $$idx165$i = ((($$idx134$val$i)) + 128|0);
    $$idx165$val$i = HEAP32[$$idx165$i>>2]|0;
    switch ($$idx165$val$i|0) {
    case 2:  {
     label = 178;
     break L240;
     break;
    }
    case 0:  {
     $$idx168$val$i = +HEAPF32[$$idx168$i>>2];
     $528 = ((($$idx134$val$i)) + 136|0);
     $529 = HEAP32[$528>>2]|0;
     $switch$i$i$i$i = ($529|0)==(1);
     if ($switch$i$i$i$i) {
      $530 = ((($$idx134$val$i)) + 140|0);
      $$val3$i$i8$i$i = +HEAPF32[$530>>2];
      $531 = 1.0 - $$idx168$val$i;
      $$idx3$i$i219 = ((($$idx134$val$i)) + 132|0);
      $$idx3$val9$i$i = +HEAPF32[$$idx3$i$i219>>2];
      $532 = $531 * $$idx3$val9$i$i;
      $533 = ((($$idx134$val$i)) + 44|0);
      $$idx$val2$i10$i$i = +HEAPF32[$533>>2];
      $$idx1$i$i$i220 = ((($$idx134$val$i)) + 48|0);
      $$idx1$val3$i11$i$i = +HEAPF32[$$idx1$i$i$i220>>2];
      $534 = $$idx$val2$i10$i$i * $$idx$val2$i10$i$i;
      $535 = $$idx1$val3$i11$i$i * $$idx1$val3$i11$i$i;
      $536 = $534 + $535;
      $$idx$i4$i$i = ((($$idx134$val$i)) + 52|0);
      $$idx$val$i5$i$i = +HEAPF32[$$idx$i4$i$i>>2];
      $537 = $$idx$val$i5$i$i * $$idx$val$i5$i$i;
      $538 = $536 + $537;
      $539 = $$idx168$val$i * $538;
      $540 = $532 + $539;
      $541 = $$val3$i$i8$i$i * 4.0;
      $542 = (+_fminf($540,$541));
      $$idx$val$i$i$i221 = HEAP32[$$idx165$i>>2]|0;
      $not$$i$i$i$i222 = ($$idx$val$i$i$i221|0)==(2);
      if (!($not$$i$i$i$i222)) {
       HEAP32[$$idx165$i>>2] = 0;
       $_10$sroa$4$0$$sroa_idx6$i$i$i = ((($$idx134$val$i)) + 132|0);
       HEAPF32[$_10$sroa$4$0$$sroa_idx6$i$i$i>>2] = $542;
      }
     }
     break;
    }
    default: {
    }
    }
    $543 = ((($$idx134$val$i)) + 124|0);
    HEAP32[$543>>2] = $_19$sroa$0$0$iter$sroa$6$0568$i;
    HEAP32[$520>>2] = 0;
    $544 = ($iter$sroa$0$0$569$i|0)==($511|0);
    $545 = ((($iter$sroa$0$0$569$i)) + 8|0);
    $_19$sroa$0$0$iter$sroa$6$0$i224 = $544 ? $_19$sroa$0$0$iter$sroa$6$0568$i : $iter$sroa$6$0$570$i;
    $iter$sroa$0$0$$i225 = $544 ? $iter$sroa$0$0$569$i : $545;
    $546 = $544&1;
    $547 = $546 ^ 1;
    $iter$sroa$6$0$$i226 = (($547) + ($iter$sroa$6$0$570$i))|0;
    $switch41tmp517$i = ($iter$sroa$0$0$569$i|0)==(0|0);
    $switch41tmp$i = $544 | $switch41tmp517$i;
    if ($switch41tmp$i) {
     label = 173;
     break L238;
    } else {
     $iter$sroa$0$0567$i$phi = $iter$sroa$0$0$569$i;$_19$sroa$0$0$iter$sroa$6$0568$i = $_19$sroa$0$0$iter$sroa$6$0$i224;$iter$sroa$0$0$569$i = $iter$sroa$0$0$$i225;$iter$sroa$6$0$570$i = $iter$sroa$6$0$$i226;$iter$sroa$0$0567$i = $iter$sroa$0$0567$i$phi;
    }
   }
   if ((label|0) == 176) {
    __THREW__ = 0;
    invoke_v(212);
    $522 = __THREW__; __THREW__ = 0;
    $523 = ___cxa_find_matching_catch_2()|0;
    $524 = tempRet0;
    $personalityslot$sroa$0$0$i215 = $523;$personalityslot$sroa$12$0$i = $524;
    label = 174;
    break;
   }
   else if ((label|0) == 178) {
    __THREW__ = 0;
    invoke_viii(225,(12057|0),67,(5184|0));
    $525 = __THREW__; __THREW__ = 0;
    $526 = ___cxa_find_matching_catch_2()|0;
    $527 = tempRet0;
    HEAP32[$520>>2] = 0;
    $personalityslot$sroa$0$0$i215 = $526;$personalityslot$sroa$12$0$i = $527;
    label = 174;
    break;
   }
  }
 } while(0);
 L251: do {
  if ((label|0) == 173) {
   $514 = ((($$idx16$val)) + 40|0);
   $515 = HEAP32[$514>>2]|0;
   $516 = ((($$idx16$val)) + 48|0);
   $517 = HEAP32[$516>>2]|0;
   $518 = (($515) + ($517<<2)|0);
   $519 = ($517|0)==(0);
   L253: do {
    if (!($519)) {
     $iter2$sroa$0$0$in563$i = $515;
     while(1) {
      $548 = ((($iter2$sroa$0$0$in563$i)) + 4|0);
      $$idx133$val$i = HEAP32[$iter2$sroa$0$0$in563$i>>2]|0;
      $549 = ((($$idx133$val$i)) + 8|0);
      $550 = HEAP32[$549>>2]|0;
      $cond$i$i$i316$i = ($550|0)==(0);
      if (!($cond$i$i$i316$i)) {
       label = 196;
       break;
      }
      HEAP32[$549>>2] = -1;
      $588 = ((($$idx133$val$i)) + 136|0);
      $589 = HEAP32[$588>>2]|0;
      $switch$i$i321$i = ($589|0)==(1);
      if ($switch$i$i321$i) {
       $$idx$i328$i = ((($$idx133$val$i)) + 128|0);
       $$idx$val$i329$i = HEAP32[$$idx$i328$i>>2]|0;
       $not$$i$i330$i = ($$idx$val$i329$i|0)==(2);
       if (!($not$$i$i330$i)) {
        $590 = ((($$idx133$val$i)) + 140|0);
        $$val3$i$i322518$i = +HEAPF32[$590>>2];
        $591 = $$val3$i$i322518$i * 2.0;
        HEAP32[$$idx$i328$i>>2] = 0;
        $_10$sroa$4$0$$sroa_idx6$i331$i = ((($$idx133$val$i)) + 132|0);
        HEAPF32[$_10$sroa$4$0$$sroa_idx6$i331$i>>2] = $591;
       }
      }
      HEAP32[$549>>2] = 0;
      $592 = ($548|0)==($518|0);
      if ($592) {
       break;
      } else {
       $iter2$sroa$0$0$in563$i = $548;
      }
     }
     if ((label|0) == 196) {
      __THREW__ = 0;
      invoke_v(212);
      $585 = __THREW__; __THREW__ = 0;
      $586 = ___cxa_find_matching_catch_2()|0;
      $587 = tempRet0;
      $personalityslot$sroa$0$0$i215 = $586;$personalityslot$sroa$12$0$i = $587;
      label = 174;
      break L251;
     }
     $$pre$i227 = HEAP32[$516>>2]|0;
     $551 = ($$pre$i227|0)==(0);
     if (!($551)) {
      $553 = $$pre$i227;
      while(1) {
       $552 = (($553) + -1)|0;
       HEAP32[$516>>2] = $552;
       $554 = HEAP32[$514>>2]|0;
       $555 = (($554) + ($552<<2)|0);
       $556 = HEAP32[$555>>2]|0;
       $557 = HEAP32[$556>>2]|0;
       $558 = (($557) + -1)|0;
       HEAP32[$556>>2] = $558;
       $$idx$val$i$i = HEAP32[$555>>2]|0;
       $559 = HEAP32[$$idx$val$i$i>>2]|0;
       $560 = ($559|0)==(0);
       if ($560) {
        $561 = ((($556)) + 16|0);
        $562 = HEAP32[$561>>2]|0;
        $563 = HEAP32[$562>>2]|0;HEAP32[$562>>2] = (($563-1)|0);
        $564 = ($563|0)==(1);
        if ($564) {
         /* fence */;
         __THREW__ = 0;
         invoke_vi(241,($561|0));
         $565 = __THREW__; __THREW__ = 0;
         $566 = $565&1;
         if ($566) {
          break;
         }
        }
        $567 = ((($556)) + 172|0);
        $568 = HEAP32[$567>>2]|0;
        $switchtmp$i$i$i$i$i$i = ($568|0)==(0|0);
        if (!($switchtmp$i$i$i$i$i$i)) {
         $$idx1$i$i$i$i$i$i$i = ((($556)) + 176|0);
         $$idx1$val$i$i$i$i$i$i$i = HEAP32[$$idx1$i$i$i$i$i$i$i>>2]|0;
         $$idx1$val$val$i$i$i$i$i$i$i = HEAP32[$$idx1$val$i$i$i$i$i$i$i>>2]|0;
         __THREW__ = 0;
         invoke_vi($$idx1$val$val$i$i$i$i$i$i$i|0,($568|0));
         $569 = __THREW__; __THREW__ = 0;
         $570 = $569&1;
         if ($570) {
          break;
         }
         $571 = HEAP32[$$idx1$i$i$i$i$i$i$i>>2]|0;
         $572 = ((($571)) + 4|0);
         $573 = HEAP32[$572>>2]|0;
         $574 = ($573|0)==(0);
         if (!($574)) {
          _free($568);
         }
        }
        $$idx3$val$i$i = HEAP32[$555>>2]|0;
        $575 = ((($$idx3$val$i$i)) + 4|0);
        $576 = HEAP32[$575>>2]|0;
        $577 = (($576) + -1)|0;
        HEAP32[$575>>2] = $577;
        $$idx2$val$i$i = HEAP32[$555>>2]|0;
        $578 = ((($$idx2$val$i$i)) + 4|0);
        $579 = HEAP32[$578>>2]|0;
        $580 = ($579|0)==(0);
        if ($580) {
         _free($556);
        }
       }
       $581 = HEAP32[$516>>2]|0;
       $582 = ($581|0)==(0);
       if ($582) {
        break L253;
       } else {
        $553 = $581;
       }
      }
      $2576 = ___cxa_find_matching_catch_2()|0;
      $2577 = tempRet0;
      $eh$lpad$body288$index88Z2D = $2577;$eh$lpad$body288$indexZ2D = $2576;
      break L251;
     }
    }
   } while(0);
   $$idx171$i = ((($0)) + 204|0);
   $$idx171$val$i = HEAP32[$$idx171$i>>2]|0;
   $583 = ((($$idx16$val)) + 16|0);
   $$idx175$i = ((($$idx16$val)) + 24|0);
   $$idx175$val$i = HEAP32[$$idx175$i>>2]|0;
   $584 = ($$idx171$val$i>>>0)>($$idx175$val$i>>>0);
   do {
    if ($584) {
     $593 = (($$idx171$val$i) - ($$idx175$val$i))|0;
     $594 = ($593|0)==(0);
     if ($594) {
      $641 = $$idx175$val$i;
      label = 237;
     } else {
      $$idx$i$i$i$i$i229 = ((($$idx16$val)) + 20|0);
      $$in$i$i$i$i = $593;$596 = $$idx175$val$i;
      while(1) {
       $595 = (($$in$i$i$i$i) + -1)|0;
       $$idx$val$i$i$i$i$i230 = HEAP32[$$idx$i$i$i$i$i229>>2]|0;
       $597 = ($596|0)==($$idx$val$i$i$i$i$i230|0);
       if ($597) {
        $$arith156 = (($595) + 1)|0;
        $$overflow157 = ($595>>>0)>(4294967294);
        $$$i$i$i$i303$i = $$overflow157 ? -1 : $$arith156;
        $598 = ($$$i$i$i$i303$i|0)==(0);
        if (!($598)) {
         $$arith152 = (($596) + ($$$i$i$i$i303$i))|0;
         $$overflow153 = ($$arith152>>>0)<($596>>>0);
         if ($$overflow153) {
          label = 206;
          break;
         }
         $600 = $596 << 1;
         $601 = ($$arith152>>>0)>=($600>>>0);
         $_0$0$sroa$speculated$i$i$i$i$i$i$i307$i = $601 ? $$arith152 : $600;
         $$arith172 = $_0$0$sroa$speculated$i$i$i$i$i$i$i307$i<<3;
         $$overflow173 = ($_0$0$sroa$speculated$i$i$i$i$i$i$i307$i>>>0)>(536870911);
         if ($$overflow173) {
          label = 208;
          break;
         }
         $603 = ($$arith172|0)<(0);
         if ($603) {
          label = 210;
          break;
         }
         $605 = ($596|0)==(0);
         if ($605) {
          $606 = (_malloc($$arith172)|0);
          $ptr$0$i$i$i$i$i312$i = $606;
         } else {
          $607 = HEAP32[$583>>2]|0;
          $608 = (_realloc($607,$$arith172)|0);
          $ptr$0$i$i$i$i$i312$i = $608;
         }
         $609 = ($ptr$0$i$i$i$i$i312$i|0)==(0|0);
         if ($609) {
          label = 215;
          break;
         }
         HEAP32[$583>>2] = $ptr$0$i$i$i$i$i312$i;
         HEAP32[$$idx$i$i$i$i$i229>>2] = $_0$0$sroa$speculated$i$i$i$i$i$i$i307$i;
        }
       }
       $611 = HEAP32[$583>>2]|0;
       $612 = (($611) + ($596<<3)|0);
       HEAP32[$612>>2] = 0;
       $613 = (((($611) + ($596<<3)|0)) + 4|0);
       HEAP32[$613>>2] = 0;
       $614 = (($596) + 1)|0;
       HEAP32[$$idx175$i>>2] = $614;
       $615 = ($595|0)==(0);
       if ($615) {
        label = 218;
        break;
       } else {
        $$in$i$i$i$i = $595;$596 = $614;
       }
      }
      if ((label|0) == 206) {
       __THREW__ = 0;
       invoke_vii(219,(11172|0),17);
       $599 = __THREW__; __THREW__ = 0;
       break;
      }
      else if ((label|0) == 208) {
       __THREW__ = 0;
       invoke_vii(219,(11172|0),17);
       $602 = __THREW__; __THREW__ = 0;
       break;
      }
      else if ((label|0) == 210) {
       __THREW__ = 0;
       invoke_vi(220,(6432|0));
       $604 = __THREW__; __THREW__ = 0;
       break;
      }
      else if ((label|0) == 215) {
       __THREW__ = 0;
       invoke_v(210);
       $610 = __THREW__; __THREW__ = 0;
       break;
      }
      else if ((label|0) == 218) {
       $$idx$i$i$i$i232 = ((($$idx16$val)) + 36|0);
       $$idx$i18$i$i$i$i = ((($$idx16$val)) + 32|0);
       $616 = ((($$idx16$val)) + 28|0);
       $$idx$val$pre$i$i$i$i = HEAP32[$$idx$i$i$i$i232>>2]|0;
       $617 = $$idx$val$pre$i$i$i$i;$iterator$sroa$45$19$in$i$i$i$i = $593;
       while(1) {
        $iterator$sroa$45$19$i$i$i$i = (($iterator$sroa$45$19$in$i$i$i$i) + -1)|0;
        $$idx$val$i19$i$i$i$i = HEAP32[$$idx$i18$i$i$i$i>>2]|0;
        $618 = ($617|0)==($$idx$val$i19$i$i$i$i|0);
        if ($618) {
         $$arith148 = (($iterator$sroa$45$19$i$i$i$i) + 1)|0;
         $$overflow149 = ($iterator$sroa$45$19$i$i$i$i>>>0)>(4294967294);
         $$$i$i$i$i$i = $$overflow149 ? -1 : $$arith148;
         $619 = ($$$i$i$i$i$i|0)==(0);
         if (!($619)) {
          $$arith144 = (($617) + ($$$i$i$i$i$i))|0;
          $$overflow145 = ($$arith144>>>0)<($617>>>0);
          if ($$overflow145) {
           label = 222;
           break;
          }
          $621 = $617 << 1;
          $622 = ($$arith144>>>0)>=($621>>>0);
          $_0$0$sroa$speculated$i$i$i$i$i$i$i$i = $622 ? $$arith144 : $621;
          $623 = ($_0$0$sroa$speculated$i$i$i$i$i$i$i$i|0)<(0);
          if ($623) {
           label = 224;
           break;
          }
          $625 = ($617|0)==(0);
          if ($625) {
           $626 = (_malloc($_0$0$sroa$speculated$i$i$i$i$i$i$i$i)|0);
           $ptr$0$i$i$i$i$i$i = $626;
          } else {
           $627 = HEAP32[$616>>2]|0;
           $628 = (_realloc($627,$_0$0$sroa$speculated$i$i$i$i$i$i$i$i)|0);
           $ptr$0$i$i$i$i$i$i = $628;
          }
          $629 = ($ptr$0$i$i$i$i$i$i|0)==(0|0);
          if ($629) {
           label = 229;
           break;
          }
          HEAP32[$616>>2] = $ptr$0$i$i$i$i$i$i;
          HEAP32[$$idx$i18$i$i$i$i>>2] = $_0$0$sroa$speculated$i$i$i$i$i$i$i$i;
         }
        }
        $631 = HEAP32[$616>>2]|0;
        $632 = (($631) + ($617)|0);
        HEAP8[$632>>0] = 0;
        $633 = (($617) + 1)|0;
        HEAP32[$$idx$i$i$i$i232>>2] = $633;
        $634 = ($iterator$sroa$45$19$i$i$i$i|0)==(0);
        if ($634) {
         label = 236;
         break;
        } else {
         $617 = $633;$iterator$sroa$45$19$in$i$i$i$i = $iterator$sroa$45$19$i$i$i$i;
        }
       }
       if ((label|0) == 222) {
        __THREW__ = 0;
        invoke_vii(219,(11172|0),17);
        $620 = __THREW__; __THREW__ = 0;
        break;
       }
       else if ((label|0) == 224) {
        __THREW__ = 0;
        invoke_vi(220,(6432|0));
        $624 = __THREW__; __THREW__ = 0;
        break;
       }
       else if ((label|0) == 229) {
        __THREW__ = 0;
        invoke_v(210);
        $630 = __THREW__; __THREW__ = 0;
        break;
       }
       else if ((label|0) == 236) {
        $$pre605$i = HEAP32[$$idx175$i>>2]|0;
        $641 = $$pre605$i;
        label = 237;
        break;
       }
      }
     }
    } else {
     $635 = ($$idx171$val$i>>>0)<($$idx175$val$i>>>0);
     if ($635) {
      HEAP32[$$idx175$i>>2] = $$idx171$val$i;
      $2592 = $$idx171$val$i;
     } else {
      $2592 = $$idx175$val$i;
     }
     $636 = ((($$idx16$val)) + 36|0);
     $637 = HEAP32[$636>>2]|0;
     $638 = ($637>>>0)>($$idx171$val$i>>>0);
     if ($638) {
      HEAP32[$636>>2] = $$idx171$val$i;
      $641 = $2592;
      label = 237;
     } else {
      $641 = $2592;
      label = 237;
     }
    }
   } while(0);
   L326: do {
    if ((label|0) == 237) {
     $639 = HEAP32[$583>>2]|0;
     $640 = (($639) + ($641<<3)|0);
     $642 = ($641|0)==(0);
     if (!($642)) {
      $_130$sroa$0$0$iter4$sroa$6$0562$i = 0;$iter4$sroa$0$0560$i = $639;
      while(1) {
       $iter4$sroa$6$0$$i238 = (($_130$sroa$0$0$iter4$sroa$6$0562$i) + 1)|0;
       $648 = ((($iter4$sroa$0$0560$i)) + 8|0);
       HEAP32[$iter4$sroa$0$0560$i>>2] = $_130$sroa$0$0$iter4$sroa$6$0562$i;
       $649 = ((($iter4$sroa$0$0560$i)) + 4|0);
       HEAP32[$649>>2] = 0;
       $650 = ($648|0)==($640|0);
       if ($650) {
        break;
       } else {
        $_130$sroa$0$0$iter4$sroa$6$0562$i = $iter4$sroa$6$0$$i238;$iter4$sroa$0$0560$i = $648;
       }
      }
     }
     $643 = ((($$idx16$val)) + 28|0);
     $644 = ((($$idx16$val)) + 36|0);
     $645 = HEAP32[$644>>2]|0;
     $646 = ($645|0)==(0);
     if (!($646)) {
      $647 = HEAP32[$643>>2]|0;
      _memset(($647|0),1,($645|0))|0;
     }
     $651 = ((($0)) + 72|0);
     $652 = HEAP32[$651>>2]|0;
     $653 = ((($0)) + 76|0);
     $654 = HEAP32[$653>>2]|0;
     $655 = ((($654)) + 20|0);
     $656 = HEAP32[$655>>2]|0;
     __THREW__ = 0;
     invoke_viii($656|0,($_156$i|0),($652|0),($0|0));
     $657 = __THREW__; __THREW__ = 0;
     $658 = $657&1;
     if (!($658)) {
      $_155$sroa$0$0$copyload$i = HEAP32[$_156$i>>2]|0;
      $_155$sroa$4$0$$sroa_idx391$i = ((($_156$i)) + 4|0);
      $_155$sroa$4$0$copyload$i = HEAP32[$_155$sroa$4$0$$sroa_idx391$i>>2]|0;
      $_155$sroa$5$0$$sroa_idx393$i = ((($_156$i)) + 8|0);
      $_155$sroa$5$0$copyload$i = HEAP32[$_155$sroa$5$0$$sroa_idx393$i>>2]|0;
      $659 = ($_155$sroa$4$0$copyload$i|0)==($_155$sroa$5$0$copyload$i|0);
      L336: do {
       if (!($659)) {
        $$idx$i$i$i20$i$i = ((($_155$sroa$0$0$copyload$i)) + 8|0);
        $iter8$sroa$4$0558$i = $_155$sroa$4$0$copyload$i;
        L338: while(1) {
         $660 = ((($iter8$sroa$4$0558$i)) + 24|0);
         $$unpack$i$i239 = HEAP32[$iter8$sroa$4$0558$i>>2]|0;
         $$idx$val$i$i$i21$i$i = HEAP32[$$idx$i$i$i20$i$i>>2]|0;
         $661 = ($$idx$val$i$i$i21$i$i>>>0)>($$unpack$i$i239>>>0);
         if (!($661)) {
          label = 246;
          break;
         }
         $$idx1$val$i$i$i23$i$i = HEAP32[$_155$sroa$0$0$copyload$i>>2]|0;
         $662 = (($$idx1$val$i$i$i23$i$i) + ($$unpack$i$i239<<6)|0);
         $663 = (((($$idx1$val$i$i$i23$i$i) + ($$unpack$i$i239<<6)|0)) + 28|0);
         $664 = HEAP32[$663>>2]|0;
         $switchtmp$i$i$i24$i$i = ($664|0)==(0|0);
         $switch2tmp$i$i25$i$i = ($662|0)==(0|0);
         $or$cond$i26$i$i = $switchtmp$i$i$i24$i$i | $switch2tmp$i$i25$i$i;
         if ($or$cond$i26$i$i) {
          label = 246;
          break;
         }
         $666 = ((($iter8$sroa$4$0558$i)) + 4|0);
         $$unpack19$i$i = HEAP32[$666>>2]|0;
         $667 = ($$idx$val$i$i$i21$i$i>>>0)>($$unpack19$i$i>>>0);
         if (!($667)) {
          label = 249;
          break;
         }
         $668 = (($$idx1$val$i$i$i23$i$i) + ($$unpack19$i$i<<6)|0);
         $669 = (((($$idx1$val$i$i$i23$i$i) + ($$unpack19$i$i<<6)|0)) + 28|0);
         $670 = HEAP32[$669>>2]|0;
         $switchtmp$i$i$i$i$i240 = ($670|0)==(0|0);
         $switch2tmp$i$i$i$i241 = ($668|0)==(0|0);
         $or$cond$i$i$i242 = $switch2tmp$i$i$i$i241 | $switchtmp$i$i$i$i$i240;
         if ($or$cond$i$i$i242) {
          label = 249;
          break;
         }
         $674 = (((($$idx1$val$i$i$i23$i$i) + ($$unpack$i$i239<<6)|0)) + 52|0);
         $675 = HEAP32[$674>>2]|0;
         $switch33$i = ($675|0)==(1);
         do {
          if (!($switch33$i)) {
           $676 = (((($$idx1$val$i$i$i23$i$i) + ($$unpack19$i$i<<6)|0)) + 52|0);
           $677 = HEAP32[$676>>2]|0;
           $switch34$i = ($677|0)==(1);
           if ($switch34$i) {
            break;
           }
           $678 = ((($iter8$sroa$4$0558$i)) + 16|0);
           $679 = HEAP32[$678>>2]|0;
           $680 = ((($iter8$sroa$4$0558$i)) + 20|0);
           $681 = HEAP32[$680>>2]|0;
           $682 = ((($681)) + 16|0);
           $683 = HEAP32[$682>>2]|0;
           __THREW__ = 0;
           $684 = (invoke_ii($683|0,($679|0))|0);
           $685 = __THREW__; __THREW__ = 0;
           $686 = $685&1;
           if ($686) {
            label = 906;
            break L338;
           }
           $687 = ($684|0)==(0);
           if ($687) {
            break;
           }
           $689 = (((($$idx1$val$i$i$i23$i$i) + ($$unpack19$i$i<<6)|0)) + 56|0);
           $690 = (((($$idx1$val$i$i$i23$i$i) + ($$unpack$i$i239<<6)|0)) + 56|0);
           $$idx151$val$i = HEAP32[$583>>2]|0;
           $$idx152$val$i = HEAP32[$$idx175$i>>2]|0;
           $$idx181$val$i = HEAP32[$690>>2]|0;
           __THREW__ = 0;
           invoke_viiii(252,($$idx181$val$i|0),($689|0),($$idx151$val$i|0),($$idx152$val$i|0));
           $691 = __THREW__; __THREW__ = 0;
           $692 = $691&1;
           if ($692) {
            label = 906;
            break L338;
           }
          }
         } while(0);
         $688 = ($660|0)==($_155$sroa$5$0$copyload$i|0);
         if ($688) {
          break L336;
         } else {
          $iter8$sroa$4$0558$i = $660;
         }
        }
        if ((label|0) == 246) {
         __THREW__ = 0;
         invoke_vii(219,(10432|0),15);
         $665 = __THREW__; __THREW__ = 0;
         break L326;
        }
        else if ((label|0) == 249) {
         __THREW__ = 0;
         invoke_vii(219,(10432|0),15);
         $671 = __THREW__; __THREW__ = 0;
         break L326;
        }
        else if ((label|0) == 906) {
         $2574 = ___cxa_find_matching_catch_2()|0;
         $2575 = tempRet0;
         $eh$lpad$body288$index88Z2D = $2575;$eh$lpad$body288$indexZ2D = $2574;
         break L251;
        }
       }
      } while(0);
      $$idx$val$i280$i = HEAP32[$$idx$i$i178>>2]|0;
      $$idx1$val$i282$i = HEAP32[$$idx1$i$i180>>2]|0;
      $672 = (($$idx$val$i280$i) + (($$idx1$val$i282$i*44)|0)|0);
      $673 = ($$idx1$val$i282$i|0)==(0);
      L355: do {
       if (!($673)) {
        $694 = $$idx$val$i280$i;
        L356: while(1) {
         $693 = ((($694)) + 44|0);
         $switch46tmp$i = ($694|0)==(0|0);
         if ($switch46tmp$i) {
          break L355;
         }
         $696 = ((($694)) + 4|0);
         $697 = HEAP32[$696>>2]|0;
         $trunc$i250 = $697&255;
         $trunc$i250$clear = $trunc$i250 & 3;
         switch ($trunc$i250$clear<<24>>24) {
         case 0:  {
          $698 = ((($694)) + 8|0);
          $699 = ((($694)) + 12|0);
          $$idx145$val$i = HEAP32[$583>>2]|0;
          $$idx146$val$i = HEAP32[$$idx175$i>>2]|0;
          $$idx178$val$i = HEAP32[$698>>2]|0;
          __THREW__ = 0;
          invoke_viiii(252,($$idx178$val$i|0),($699|0),($$idx145$val$i|0),($$idx146$val$i|0));
          $700 = __THREW__; __THREW__ = 0;
          $701 = $700&1;
          if ($701) {
           label = 905;
           break L356;
          }
          break;
         }
         case 1:  {
          $703 = ((($694)) + 8|0);
          $$idx162$val$i = HEAP32[$703>>2]|0;
          $704 = ((($$idx162$val$i)) + 8|0);
          $705 = HEAP32[$704>>2]|0;
          $cond$i$i$i273$i = ($705|0)==(-1);
          if ($cond$i$i$i273$i) {
           label = 264;
           break L356;
          }
          $713 = (($705) + 1)|0;
          HEAP32[$704>>2] = $713;
          $714 = ((($$idx162$val$i)) + 16|0);
          $715 = HEAP32[$714>>2]|0;
          $switchtmp$i265$i = ($715|0)==(0|0);
          $_0$0$i266$i = $switchtmp$i265$i ? 0 : $714;
          $$idx161$val$i = HEAP32[$703>>2]|0;
          $716 = ((($$idx161$val$i)) + 8|0);
          $717 = HEAP32[$716>>2]|0;
          $cond$i$i$i256$i = ($717|0)==(-1);
          if ($cond$i$i$i256$i) {
           label = 269;
           break L356;
          }
          $721 = (($717) + 1)|0;
          HEAP32[$716>>2] = $721;
          $722 = ((($$idx161$val$i)) + 28|0);
          $723 = HEAP32[$722>>2]|0;
          $switchtmp$i254$i = ($723|0)==(0|0);
          $_0$0$i255$i = $switchtmp$i254$i ? 0 : $722;
          $switch35tmp$i = ($_0$0$i266$i|0)==(0|0);
          $switch36tmp$i = ($_0$0$i255$i|0)==(0|0);
          $or$cond$i = $switch35tmp$i | $switch36tmp$i;
          if ($or$cond$i) {
           $727 = $721;
          } else {
           $$idx147$val$i = HEAP32[$583>>2]|0;
           $$idx148$val$i = HEAP32[$$idx175$i>>2]|0;
           $$idx179$val$i = HEAP32[$_0$0$i266$i>>2]|0;
           __THREW__ = 0;
           invoke_viiii(252,($$idx179$val$i|0),($_0$0$i255$i|0),($$idx147$val$i|0),($$idx148$val$i|0));
           $724 = __THREW__; __THREW__ = 0;
           $725 = $724&1;
           if ($725) {
            label = 315;
            break L356;
           }
           $$pre607$i = HEAP32[$716>>2]|0;
           $727 = $$pre607$i;
          }
          $726 = (($727) + -1)|0;
          HEAP32[$716>>2] = $726;
          $728 = HEAP32[$704>>2]|0;
          $729 = (($728) + -1)|0;
          HEAP32[$704>>2] = $729;
          break;
         }
         case 2:  {
          $707 = ((($694)) + 8|0);
          $$idx164$val$i = HEAP32[$707>>2]|0;
          $708 = ((($$idx164$val$i)) + 8|0);
          $709 = HEAP32[$708>>2]|0;
          $cond$i$i$i269$i = ($709|0)==(-1);
          if ($cond$i$i$i269$i) {
           label = 266;
           break L356;
          }
          $732 = (($709) + 1)|0;
          HEAP32[$708>>2] = $732;
          $733 = ((($$idx164$val$i)) + 16|0);
          $734 = HEAP32[$733>>2]|0;
          $switchtmp$i246$i = ($734|0)==(0|0);
          $_0$0$i247$i = $switchtmp$i246$i ? 0 : $733;
          $$idx163$val$i = HEAP32[$707>>2]|0;
          $735 = ((($$idx163$val$i)) + 8|0);
          $736 = HEAP32[$735>>2]|0;
          $cond$i$i$i242$i = ($736|0)==(-1);
          if ($cond$i$i$i242$i) {
           label = 276;
           break L356;
          }
          $740 = (($736) + 1)|0;
          HEAP32[$735>>2] = $740;
          $741 = ((($$idx163$val$i)) + 44|0);
          $742 = HEAP32[$741>>2]|0;
          $switchtmp$i$i258 = ($742|0)==(0|0);
          $_0$0$i$i259 = $switchtmp$i$i258 ? 0 : $741;
          $switch37tmp$i = ($_0$0$i247$i|0)==(0|0);
          $switch38tmp$i = ($_0$0$i$i259|0)==(0|0);
          $or$cond131$i = $switch37tmp$i | $switch38tmp$i;
          if ($or$cond131$i) {
           $746 = $740;
          } else {
           $$idx149$val$i = HEAP32[$583>>2]|0;
           $$idx150$val$i = HEAP32[$$idx175$i>>2]|0;
           $$idx180$val$i = HEAP32[$_0$0$i247$i>>2]|0;
           __THREW__ = 0;
           invoke_viiii(252,($$idx180$val$i|0),($_0$0$i$i259|0),($$idx149$val$i|0),($$idx150$val$i|0));
           $743 = __THREW__; __THREW__ = 0;
           $744 = $743&1;
           if ($744) {
            label = 314;
            break L356;
           }
           $$pre606$i = HEAP32[$735>>2]|0;
           $746 = $$pre606$i;
          }
          $745 = (($746) + -1)|0;
          HEAP32[$735>>2] = $745;
          $747 = HEAP32[$708>>2]|0;
          $748 = (($747) + -1)|0;
          HEAP32[$708>>2] = $748;
          break;
         }
         default: {
          label = 313;
          break L356;
         }
         }
         $702 = ($693|0)==($672|0);
         if ($702) {
          break L355;
         } else {
          $694 = $693;
         }
        }
        if ((label|0) == 264) {
         __THREW__ = 0;
         invoke_v(221);
         $706 = __THREW__; __THREW__ = 0;
         break L326;
        }
        else if ((label|0) == 266) {
         __THREW__ = 0;
         invoke_v(221);
         $710 = __THREW__; __THREW__ = 0;
         break L326;
        }
        else if ((label|0) == 269) {
         __THREW__ = 0;
         invoke_v(221);
         $718 = __THREW__; __THREW__ = 0;
         $719 = ___cxa_find_matching_catch_2()|0;
         $720 = tempRet0;
         $personalityslot$sroa$0$1$i253 = $719;$personalityslot$sroa$12$1$i = $720;
         label = 267;
        }
        else if ((label|0) == 276) {
         __THREW__ = 0;
         invoke_v(221);
         $737 = __THREW__; __THREW__ = 0;
         $738 = ___cxa_find_matching_catch_2()|0;
         $739 = tempRet0;
         $personalityslot$sroa$0$2$i = $738;$personalityslot$sroa$12$2$i = $739;
         label = 274;
        }
        else if ((label|0) == 313) {
         // unreachable;
        }
        else if ((label|0) == 314) {
         $803 = ___cxa_find_matching_catch_2()|0;
         $804 = tempRet0;
         $805 = HEAP32[$735>>2]|0;
         $806 = (($805) + -1)|0;
         HEAP32[$735>>2] = $806;
         $personalityslot$sroa$0$2$i = $803;$personalityslot$sroa$12$2$i = $804;
         label = 274;
        }
        else if ((label|0) == 315) {
         $807 = ___cxa_find_matching_catch_2()|0;
         $808 = tempRet0;
         $809 = HEAP32[$716>>2]|0;
         $810 = (($809) + -1)|0;
         HEAP32[$716>>2] = $810;
         $personalityslot$sroa$0$1$i253 = $807;$personalityslot$sroa$12$1$i = $808;
         label = 267;
        }
        else if ((label|0) == 905) {
         $2572 = ___cxa_find_matching_catch_2()|0;
         $2573 = tempRet0;
         $eh$lpad$body288$index88Z2D = $2573;$eh$lpad$body288$indexZ2D = $2572;
         break L251;
        }
        if ((label|0) == 267) {
         $711 = HEAP32[$704>>2]|0;
         $712 = (($711) + -1)|0;
         HEAP32[$704>>2] = $712;
         $personalityslot$sroa$0$0$i215 = $personalityslot$sroa$0$1$i253;$personalityslot$sroa$12$0$i = $personalityslot$sroa$12$1$i;
         label = 174;
         break L251;
        }
        else if ((label|0) == 274) {
         $730 = HEAP32[$708>>2]|0;
         $731 = (($730) + -1)|0;
         HEAP32[$708>>2] = $731;
         $personalityslot$sroa$0$0$i215 = $personalityslot$sroa$0$2$i;$personalityslot$sroa$12$0$i = $personalityslot$sroa$12$2$i;
         label = 174;
         break L251;
        }
       }
      } while(0);
      $$idx173$val$i = HEAP32[$$idx175$i>>2]|0;
      $695 = ($$idx173$val$i|0)==(0);
      L389: do {
       if (!($695)) {
        $$idx1$val$i232$i = HEAP32[$$idx1$i>>2]|0;
        $$idx$val$i230$i = HEAP32[$$idx$i>>2]|0;
        $$idx144$val$i = $$idx173$val$i;$772 = 1;$iter12$sroa$0$0556$i = 0;
        L391: while(1) {
         $$idx143$val$i = HEAP32[$583>>2]|0;
         __THREW__ = 0;
         $750 = (invoke_iiii(253,($iter12$sroa$0$0556$i|0),($$idx143$val$i|0),($$idx144$val$i|0))|0);
         $751 = __THREW__; __THREW__ = 0;
         $752 = $751&1;
         if ($752) {
          label = 904;
          break;
         }
         $753 = ($iter12$sroa$0$0556$i>>>0)<($$idx1$val$i232$i>>>0);
         if (!($753)) {
          label = 317;
          break;
         }
         $$idx132$i = (((($$idx$val$i230$i) + ($iter12$sroa$0$0556$i<<3)|0)) + 4|0);
         $$idx132$val$i = HEAP32[$$idx132$i>>2]|0;
         $754 = ((($$idx132$val$i)) + 8|0);
         $755 = HEAP32[$754>>2]|0;
         $cond$i$i$i225$i = ($755|0)==(-1);
         if ($cond$i$i$i225$i) {
          label = 286;
          break;
         }
         $757 = (($755) + 1)|0;
         HEAP32[$754>>2] = $757;
         $758 = ((($$idx132$val$i)) + 136|0);
         $759 = HEAP32[$758>>2]|0;
         $switch$i$i220$i = ($759|0)==(1);
         do {
          if ($switch$i$i220$i) {
           $760 = ((($$idx132$val$i)) + 140|0);
           $$val3$i$i221520$i = +HEAPF32[$760>>2];
           $$idx185$val$i = HEAP32[$644>>2]|0;
           $761 = ($$idx185$val$i>>>0)>($750>>>0);
           if (!($761)) {
            label = 290;
            break L391;
           }
           $$idx184$val$i = HEAP32[$643>>2]|0;
           $765 = (($$idx184$val$i) + ($750)|0);
           $766 = HEAP8[$765>>0]|0;
           $767 = ($766<<24>>24)==(0);
           if (!($767)) {
            $$idx166$i = ((($$idx132$val$i)) + 128|0);
            $$idx166$val$i = HEAP32[$$idx166$i>>2]|0;
            $$idx167$i = ((($$idx132$val$i)) + 132|0);
            $$idx167$val521$i = +HEAPF32[$$idx167$i>>2];
            $trunc$i$i264 = $$idx166$val$i&255;
            $trunc$i$i264$clear = $trunc$i$i264 & 3;
            $switch$i211$i = ($trunc$i$i264$clear<<24>>24)==(0);
            $$$i$i = $switch$i211$i ? $$idx167$val521$i : 0.0;
            $768 = $$$i$i < $$val3$i$i221520$i;
            if ($768) {
             $$idx187$val$i = $$idx185$val$i;$_299$0$off0$i = 1;
             break;
            }
           }
           $$idx187$val$i = $$idx185$val$i;$_299$0$off0$i = 0;
          } else {
           $$idx187$val$pre$i = HEAP32[$644>>2]|0;
           $$idx187$val$i = $$idx187$val$pre$i;$_299$0$off0$i = 0;
          }
         } while(0);
         $763 = ($$idx187$val$i>>>0)>($750>>>0);
         if (!($763)) {
          label = 292;
          break;
         }
         $$idx186$val$i = HEAP32[$643>>2]|0;
         $769 = (($$idx186$val$i) + ($750)|0);
         HEAP8[$769>>0] = $_299$0$off0$i;
         $770 = HEAP32[$754>>2]|0;
         $771 = (($770) + -1)|0;
         HEAP32[$754>>2] = $771;
         $773 = ($772>>>0)<($$idx173$val$i>>>0);
         if (!($773)) {
          label = 281;
          break;
         }
         $774 = (($772) + 1)|0;
         $$idx144$val$pre$i = HEAP32[$$idx175$i>>2]|0;
         $iter12$sroa$0$0556$i$phi = $772;$$idx144$val$i = $$idx144$val$pre$i;$772 = $774;$iter12$sroa$0$0556$i = $iter12$sroa$0$0556$i$phi;
        }
        if ((label|0) == 281) {
         $$idx172$val$pre$i = HEAP32[$$idx175$i>>2]|0;
         $749 = ($$idx172$val$pre$i|0)==(0);
         if ($749) {
          break;
         }
         $$idx1$val$i208$i = HEAP32[$$idx1$i>>2]|0;
         $$idx$val$i206$i = HEAP32[$$idx$i>>2]|0;
         $$idx142$val$i = $$idx172$val$pre$i;$796 = 1;$iter15$sroa$0$0554$i = 0;
         while(1) {
          $$idx141$val$i = HEAP32[$583>>2]|0;
          __THREW__ = 0;
          $775 = (invoke_iiii(253,($iter15$sroa$0$0554$i|0),($$idx141$val$i|0),($$idx142$val$i|0))|0);
          $776 = __THREW__; __THREW__ = 0;
          $777 = $776&1;
          if ($777) {
           label = 903;
           break;
          }
          $778 = ($iter15$sroa$0$0554$i>>>0)<($$idx1$val$i208$i>>>0);
          if (!($778)) {
           label = 319;
           break;
          }
          $$idx$i265 = (((($$idx$val$i206$i) + ($iter15$sroa$0$0554$i<<3)|0)) + 4|0);
          $$idx$val$i266 = HEAP32[$$idx$i265>>2]|0;
          $779 = ((($$idx$val$i266)) + 8|0);
          $780 = HEAP32[$779>>2]|0;
          $cond$i$i$i$i267 = ($780|0)==(0);
          if (!($cond$i$i$i$i267)) {
           label = 301;
           break;
          }
          HEAP32[$779>>2] = -1;
          $$idx183$val$i = HEAP32[$644>>2]|0;
          $782 = ($$idx183$val$i>>>0)>($775>>>0);
          if (!($782)) {
           label = 303;
           break;
          }
          $$idx182$val$i = HEAP32[$643>>2]|0;
          $786 = (($$idx182$val$i) + ($775)|0);
          $787 = HEAP8[$786>>0]|0;
          $788 = ($787<<24>>24)==(0);
          do {
           if ($788) {
            $$idx139$i = ((($$idx$val$i266)) + 128|0);
            $$idx139$val$i = HEAP32[$$idx139$i>>2]|0;
            $cond$i$i272 = ($$idx139$val$i|0)==(0);
            if ($cond$i$i272) {
             break;
            }
            $$idx138$i = ((($$idx$val$i266)) + 12|0);
            $$idx138$val$i = HEAP8[$$idx138$i>>0]|0;
            $switch$i$i273 = ($$idx138$val$i<<24>>24)==(1);
            if (!($switch$i$i273)) {
             break;
            }
            $792 = ((($$idx$val$i266)) + 136|0);
            $793 = HEAP32[$792>>2]|0;
            $switch$i$i$i = ($793|0)!=(1);
            $not$$i$i$i = ($$idx139$val$i|0)==(2);
            $or$cond647$i = $not$$i$i$i | $switch$i$i$i;
            if ($or$cond647$i) {
             break;
            }
            $794 = ((($$idx$val$i266)) + 140|0);
            $$val3$i$i612$i = +HEAPF32[$794>>2];
            $795 = $$val3$i$i612$i * 2.0;
            HEAP32[$$idx139$i>>2] = 0;
            $_10$sroa$4$0$$sroa_idx6$i$i = ((($$idx$val$i266)) + 132|0);
            HEAPF32[$_10$sroa$4$0$$sroa_idx6$i$i>>2] = $795;
           } else {
            $789 = ((($$idx$val$i266)) + 44|0);
            HEAP32[$789>>2] = 0;
            $790 = ((($$idx$val$i266)) + 48|0);
            HEAP32[$790>>2] = 0;
            $791 = ((($$idx$val$i266)) + 52|0);
            HEAPF32[$791>>2] = 0.0;
            $_5$sroa$0$0$$sroa_idx$i$i = ((($$idx$val$i266)) + 128|0);
            HEAP32[$_5$sroa$0$0$$sroa_idx$i$i>>2] = 1;
           }
          } while(0);
          HEAP32[$779>>2] = 0;
          $797 = ($796>>>0)<($$idx172$val$pre$i>>>0);
          if (!($797)) {
           break L389;
          }
          $798 = (($796) + 1)|0;
          $$idx142$val$pre$i = HEAP32[$$idx175$i>>2]|0;
          $iter15$sroa$0$0554$i$phi = $796;$$idx142$val$i = $$idx142$val$pre$i;$796 = $798;$iter15$sroa$0$0554$i = $iter15$sroa$0$0554$i$phi;
         }
         if ((label|0) == 301) {
          __THREW__ = 0;
          invoke_v(212);
          $781 = __THREW__; __THREW__ = 0;
         }
         else if ((label|0) == 303) {
          __THREW__ = 0;
          invoke_viiiii(214,(12236|0),104,1349,($775|0),($$idx183$val$i|0));
          $783 = __THREW__; __THREW__ = 0;
          $784 = ___cxa_find_matching_catch_2()|0;
          $785 = tempRet0;
          HEAP32[$779>>2] = 0;
          $personalityslot$sroa$0$0$i215 = $784;$personalityslot$sroa$12$0$i = $785;
          label = 174;
          break L251;
         }
         else if ((label|0) == 319) {
          __THREW__ = 0;
          invoke_viiiii(214,(12124|0),112,181,($iter15$sroa$0$0554$i|0),($$idx1$val$i208$i|0));
          $816 = __THREW__; __THREW__ = 0;
         }
         else if ((label|0) == 903) {
          $2568 = ___cxa_find_matching_catch_2()|0;
          $2569 = tempRet0;
          $eh$lpad$body288$index88Z2D = $2569;$eh$lpad$body288$indexZ2D = $2568;
          break L251;
         }
         $814 = ___cxa_find_matching_catch_2()|0;
         $815 = tempRet0;
         $personalityslot$sroa$0$0$i215 = $814;$personalityslot$sroa$12$0$i = $815;
         label = 174;
         break L251;
        }
        else if ((label|0) == 286) {
         __THREW__ = 0;
         invoke_v(221);
         $756 = __THREW__; __THREW__ = 0;
         label = 316;
        }
        else if ((label|0) == 290) {
         __THREW__ = 0;
         invoke_viiiii(214,(12236|0),104,1349,($750|0),($$idx185$val$i|0));
         $762 = __THREW__; __THREW__ = 0;
         label = 312;
        }
        else if ((label|0) == 292) {
         __THREW__ = 0;
         invoke_viiiii(214,(12236|0),104,1358,($750|0),($$idx187$val$i|0));
         $764 = __THREW__; __THREW__ = 0;
         label = 312;
        }
        else if ((label|0) == 317) {
         __THREW__ = 0;
         invoke_viiiii(214,(12124|0),112,167,($iter12$sroa$0$0556$i|0),($$idx1$val$i232$i|0));
         $813 = __THREW__; __THREW__ = 0;
         label = 316;
        }
        else if ((label|0) == 904) {
         $2570 = ___cxa_find_matching_catch_2()|0;
         $2571 = tempRet0;
         $eh$lpad$body288$index88Z2D = $2571;$eh$lpad$body288$indexZ2D = $2570;
         break L251;
        }
        if ((label|0) == 312) {
         $799 = ___cxa_find_matching_catch_2()|0;
         $800 = tempRet0;
         $801 = HEAP32[$754>>2]|0;
         $802 = (($801) + -1)|0;
         HEAP32[$754>>2] = $802;
         $personalityslot$sroa$0$0$i215 = $799;$personalityslot$sroa$12$0$i = $800;
         label = 174;
         break L251;
        }
        else if ((label|0) == 316) {
         $811 = ___cxa_find_matching_catch_2()|0;
         $812 = tempRet0;
         $personalityslot$sroa$0$0$i215 = $811;$personalityslot$sroa$12$0$i = $812;
         label = 174;
         break L251;
        }
       }
      } while(0);
      HEAP32[$509>>2] = 0;
      HEAP32[$collector>>2] = 1;
      $817 = ((($collector)) + 4|0);
      HEAP32[$817>>2] = 0;
      $818 = ((($collector)) + 8|0);
      HEAP32[$818>>2] = 0;
      $819 = HEAP32[$651>>2]|0;
      $820 = HEAP32[$653>>2]|0;
      $821 = ((($820)) + 20|0);
      $822 = HEAP32[$821>>2]|0;
      __THREW__ = 0;
      invoke_viii($822|0,($_3$i|0),($819|0),($0|0));
      $823 = __THREW__; __THREW__ = 0;
      $824 = $823&1;
      L438: do {
       if ($824) {
        label = 911;
       } else {
        $self$sroa$0$0$copyload12$i$i = HEAP32[$_3$i>>2]|0;
        $self$sroa$4$0$$sroa_idx$i$i = ((($_3$i)) + 4|0);
        $825 = $self$sroa$4$0$$sroa_idx$i$i;
        $826 = $825;
        $827 = HEAP32[$826>>2]|0;
        $828 = (($825) + 4)|0;
        $829 = $828;
        $830 = HEAP32[$829>>2]|0;
        HEAP32[$iter4>>2] = $self$sroa$0$0$copyload12$i$i;
        $_134$sroa$4$0$$sroa_idx535 = ((($iter4)) + 4|0);
        HEAP32[$_134$sroa$4$0$$sroa_idx535>>2] = 0;
        $_134$sroa$5$0$$sroa_idx537 = ((($iter4)) + 8|0);
        HEAP32[$_134$sroa$5$0$$sroa_idx537>>2] = 0;
        $_134$sroa$6$0$$sroa_idx539 = ((($iter4)) + 12|0);
        $831 = $_134$sroa$6$0$$sroa_idx539;
        $832 = $831;
        HEAP32[$832>>2] = $827;
        $833 = (($831) + 4)|0;
        $834 = $833;
        HEAP32[$834>>2] = $830;
        $_134$sroa$7$0$$sroa_idx542 = ((($iter4)) + 20|0);
        $_134$sroa$8$0$$sroa_idx545 = ((($iter4)) + 24|0);
        $_134$sroa$9$0$$sroa_idx547 = ((($iter4)) + 28|0);
        $_134$sroa$10$0$$sroa_idx549 = ((($iter4)) + 32|0);
        temp_Int32x4_ptr = $_134$sroa$7$0$$sroa_idx542;SIMD_Int32x4_store(HEAPU8, temp_Int32x4_ptr, SIMD_Int32x4(1,0,0,0));
        $_191$sroa$4$0$$sroa_idx410 = ((($value$i)) + 4|0);
        $_191$sroa$5$0$$sroa_idx412 = ((($value$i)) + 8|0);
        $_191$sroa$6$sroa$0$0$_191$sroa$6$0$$sroa_cast415$sroa_idx = ((($value$i)) + 12|0);
        $_191$sroa$6$sroa$4$0$_191$sroa$6$0$$sroa_cast415$sroa_idx447 = ((($value$i)) + 16|0);
        $_191$sroa$6$sroa$5$0$_191$sroa$6$0$$sroa_cast415$sroa_idx449 = ((($value$i)) + 20|0);
        $_191$sroa$6$sroa$6$0$_191$sroa$6$0$$sroa_cast415$sroa_idx451 = ((($value$i)) + 24|0);
        $_191$sroa$6$sroa$7$0$_191$sroa$6$0$$sroa_cast415$sroa_idx453 = ((($value$i)) + 28|0);
        $_191$sroa$6$sroa$8$0$_191$sroa$6$0$$sroa_cast415$sroa_idx455 = ((($value$i)) + 32|0);
        $_191$sroa$6$sroa$9$0$_191$sroa$6$0$$sroa_cast415$sroa_idx457 = ((($value$i)) + 36|0);
        $835 = ((($iter4)) + 12|0);
        $836 = ((($iter4)) + 16|0);
        $$idx$val$i311 = 0;$2593 = (1);$837 = 0;$909 = 0;
        L440: while(1) {
         $838 = ($837>>>0)<($$idx$val$i311>>>0);
         if ($838) {
          $839 = (($837) + 1)|0;
          HEAP32[$_134$sroa$10$0$$sroa_idx549>>2] = $839;
          $840 = HEAP32[$_134$sroa$4$0$$sroa_idx535>>2]|0;
          $switch2tmp$i$i = ($840|0)==(0|0);
          if ($switch2tmp$i$i) {
           label = 324;
           break;
          }
          $842 = HEAP32[$_134$sroa$5$0$$sroa_idx537>>2]|0;
          $switch2tmp$i42$i = ($842|0)==(0|0);
          if ($switch2tmp$i42$i) {
           label = 326;
           break;
          }
          $$idx37$val$i = HEAP32[$_134$sroa$7$0$$sroa_idx542>>2]|0;
          $844 = (($$idx37$val$i) + (($837*28)|0)|0);
          $845 = (((($$idx37$val$i) + (($837*28)|0)|0)) + 8|0);
          $846 = (((($$idx37$val$i) + (($837*28)|0)|0)) + 16|0);
          $847 = (((($$idx37$val$i) + (($837*28)|0)|0)) + 24|0);
          $$idx7$i48$i = (((($$idx37$val$i) + (($837*28)|0)|0)) + 4|0);
          $$idx5$i51$i = (((($$idx37$val$i) + (($837*28)|0)|0)) + 12|0);
          $$idx3$i54$i = (((($$idx37$val$i) + (($837*28)|0)|0)) + 20|0);
          $_138$sroa$0$0 = $840;$_138$sroa$13$1 = $842;$_138$sroa$16$1$in$in = $844;$_138$sroa$19$1$in$in = $$idx7$i48$i;$_138$sroa$22$1$in$in = $845;$_138$sroa$25$1$in$in = $$idx5$i51$i;$_138$sroa$28$1$in$in = $846;$_138$sroa$31$1$in$in = $$idx3$i54$i;$_138$sroa$34$1$in$in = $847;
         } else {
          $848 = ($$idx$val$i311|0)==(0);
          if (!($848)) {
           HEAP32[$_134$sroa$9$0$$sroa_idx547>>2] = 0;
          }
          while(1) {
           $849 = HEAP32[$835>>2]|0;
           $850 = HEAP32[$836>>2]|0;
           $851 = ($849|0)==($850|0);
           if ($851) {
            label = 366;
            break L440;
           }
           $852 = ((($849)) + 24|0);
           HEAP32[$835>>2] = $852;
           $853 = ((($849)) + 16|0);
           $854 = HEAP32[$853>>2]|0;
           $855 = ((($849)) + 20|0);
           $856 = HEAP32[$855>>2]|0;
           $857 = ((($856)) + 20|0);
           $858 = HEAP32[$857>>2]|0;
           __THREW__ = 0;
           invoke_vii($858|0,($854|0),($_134$sroa$7$0$$sroa_idx542|0));
           $859 = __THREW__; __THREW__ = 0;
           $860 = $859&1;
           if ($860) {
            label = 913;
            break L440;
           }
           $$idx41$val$i = HEAP32[$_134$sroa$9$0$$sroa_idx547>>2]|0;
           $861 = ($$idx41$val$i|0)==(0);
           if (!($861)) {
            break;
           }
          }
          $862 = HEAP32[$iter4>>2]|0;
          $$unpack$i = HEAP32[$849>>2]|0;
          $$idx$i$i$i63$i = ((($862)) + 8|0);
          $$idx$val$i$i$i64$i = HEAP32[$$idx$i$i$i63$i>>2]|0;
          $863 = ($$idx$val$i$i$i64$i>>>0)>($$unpack$i>>>0);
          if (!($863)) {
           label = 335;
           break;
          }
          $$idx1$val$i$i$i66$i = HEAP32[$862>>2]|0;
          $864 = (($$idx1$val$i$i$i66$i) + ($$unpack$i<<6)|0);
          $865 = (((($$idx1$val$i$i$i66$i) + ($$unpack$i<<6)|0)) + 28|0);
          $866 = HEAP32[$865>>2]|0;
          $switchtmp$i$i$i67$i = ($866|0)==(0|0);
          $switch2tmp$i$i68$i = ($864|0)==(0|0);
          $or$cond$i69$i = $switchtmp$i$i$i67$i | $switch2tmp$i$i68$i;
          if ($or$cond$i69$i) {
           label = 335;
           break;
          }
          HEAP32[$_134$sroa$4$0$$sroa_idx535>>2] = $864;
          $868 = ((($849)) + 4|0);
          $$unpack36$i = HEAP32[$868>>2]|0;
          $$idx$val$i$i$i$i318 = HEAP32[$$idx$i$i$i63$i>>2]|0;
          $869 = ($$idx$val$i$i$i$i318>>>0)>($$unpack36$i>>>0);
          if (!($869)) {
           label = 338;
           break;
          }
          $$idx1$val$i$i$i$i319 = HEAP32[$862>>2]|0;
          $870 = (($$idx1$val$i$i$i$i319) + ($$unpack36$i<<6)|0);
          $871 = (((($$idx1$val$i$i$i$i319) + ($$unpack36$i<<6)|0)) + 28|0);
          $872 = HEAP32[$871>>2]|0;
          $switchtmp$i$i$i$i320 = ($872|0)==(0|0);
          $switch2tmp$i$i$i = ($870|0)==(0|0);
          $or$cond$i$i = $switchtmp$i$i$i$i320 | $switch2tmp$i$i$i;
          if ($or$cond$i$i) {
           label = 338;
           break;
          }
          HEAP32[$_134$sroa$5$0$$sroa_idx537>>2] = $870;
          HEAP32[$_134$sroa$10$0$$sroa_idx549>>2] = 1;
          $$idx39$val$i = HEAP32[$_134$sroa$7$0$$sroa_idx542>>2]|0;
          $874 = ((($$idx39$val$i)) + 8|0);
          $875 = ((($$idx39$val$i)) + 16|0);
          $876 = ((($$idx39$val$i)) + 24|0);
          $$idx7$i$i = ((($$idx39$val$i)) + 4|0);
          $$idx5$i$i322 = ((($$idx39$val$i)) + 12|0);
          $$idx3$i$i323 = ((($$idx39$val$i)) + 20|0);
          $_138$sroa$0$0 = $864;$_138$sroa$13$1 = $870;$_138$sroa$16$1$in$in = $$idx39$val$i;$_138$sroa$19$1$in$in = $$idx7$i$i;$_138$sroa$22$1$in$in = $874;$_138$sroa$25$1$in$in = $$idx5$i$i322;$_138$sroa$28$1$in$in = $875;$_138$sroa$31$1$in$in = $$idx3$i$i323;$_138$sroa$34$1$in$in = $876;
         }
         $_138$sroa$34$1611 = +HEAPF32[$_138$sroa$34$1$in$in>>2];
         $_138$sroa$31$1 = HEAP32[$_138$sroa$31$1$in$in>>2]|0;
         $_138$sroa$28$1 = HEAP32[$_138$sroa$28$1$in$in>>2]|0;
         $_138$sroa$25$1 = HEAP32[$_138$sroa$25$1$in$in>>2]|0;
         $_138$sroa$22$1 = HEAP32[$_138$sroa$22$1$in$in>>2]|0;
         $_138$sroa$19$1 = HEAP32[$_138$sroa$19$1$in$in>>2]|0;
         $_138$sroa$16$1 = HEAP32[$_138$sroa$16$1$in$in>>2]|0;
         $switch22tmp = ($_138$sroa$0$0|0)==(0|0);
         if ($switch22tmp) {
          label = 366;
          break;
         }
         $879 = ((($_138$sroa$0$0)) + 52|0);
         $880 = HEAP32[$879>>2]|0;
         $switch24 = ($880|0)==(1);
         do {
          if ($switch24) {
           $2594 = $2593;$2595 = $909;
          } else {
           $881 = ((($_138$sroa$13$1)) + 52|0);
           $882 = HEAP32[$881>>2]|0;
           $switch25 = ($882|0)==(1);
           if ($switch25) {
            $2594 = $2593;$2595 = $909;
            break;
           }
           $883 = ((($_138$sroa$0$0)) + 56|0);
           $884 = ((($_138$sroa$13$1)) + 56|0);
           $$idx12$val = HEAP32[$883>>2]|0;
           $885 = ((($$idx12$val)) + 8|0);
           $886 = HEAP32[$885>>2]|0;
           $cond$i$i$i333 = ($886|0)==(-1);
           if ($cond$i$i$i333) {
            label = 346;
            break L440;
           }
           $888 = (($886) + 1)|0;
           HEAP32[$885>>2] = $888;
           $$idx19 = ((($$idx12$val)) + 128|0);
           $$idx19$val = HEAP32[$$idx19>>2]|0;
           $cond$i338 = ($$idx19$val|0)==(0);
           if ($cond$i338) {
            HEAP32[$885>>2] = $886;
           } else {
            $$idx11$val = HEAP32[$884>>2]|0;
            $889 = ((($$idx11$val)) + 8|0);
            $890 = HEAP32[$889>>2]|0;
            $cond$i$i$i341 = ($890|0)==(-1);
            if ($cond$i$i$i341) {
             label = 350;
             break L440;
            }
            $$idx18 = ((($$idx11$val)) + 128|0);
            $$idx18$val = HEAP32[$$idx18>>2]|0;
            $cond$i346 = ($$idx18$val|0)==(0);
            $896 = HEAP32[$885>>2]|0;
            $897 = (($896) + -1)|0;
            HEAP32[$885>>2] = $897;
            if (!($cond$i346)) {
             $2594 = $2593;$2595 = $909;
             break;
            }
           }
           $$idx10$val = HEAP32[$883>>2]|0;
           $898 = ((($$idx10$val)) + 8|0);
           $899 = HEAP32[$898>>2]|0;
           $cond$i$i$i349 = ($899|0)==(-1);
           if ($cond$i$i$i349) {
            label = 353;
            break L440;
           }
           $$idx9$val = HEAP32[$884>>2]|0;
           $901 = ((($$idx9$val)) + 8|0);
           $902 = HEAP32[$901>>2]|0;
           $cond$i$i$i356 = ($902|0)==(-1);
           if ($cond$i$i$i356) {
            label = 355;
            break L440;
           }
           $$idx8 = ((($$idx10$val)) + 156|0);
           $$idx8$val = +HEAPF32[$$idx8>>2];
           $$idx = ((($$idx9$val)) + 156|0);
           $$idx$val = +HEAPF32[$$idx>>2];
           $904 = $_138$sroa$34$1611 + $$idx8$val;
           $905 = $904 + $$idx$val;
           $$idx$val$i365 = HEAP32[$883>>2]|0;
           $906 = HEAP32[$$idx$val$i365>>2]|0;
           $$arith140 = (($906) + 1)|0;
           $$overflow141 = ($906>>>0)>(4294967294);
           if ($$overflow141) {
            label = 357;
            break L440;
           }
           HEAP32[$$idx$val$i365>>2] = $$arith140;
           $$idx$val$i368 = HEAP32[$884>>2]|0;
           $907 = HEAP32[$$idx$val$i368>>2]|0;
           $$arith136 = (($907) + 1)|0;
           $$overflow137 = ($907>>>0)>(4294967294);
           if ($$overflow137) {
            label = 359;
            break L440;
           }
           $908 = $$idx$val$i365;
           HEAP32[$$idx$val$i368>>2] = $$arith136;
           HEAP32[$value$i>>2] = 0;
           HEAP32[$_191$sroa$4$0$$sroa_idx410>>2] = $908;
           HEAP32[$_191$sroa$5$0$$sroa_idx412>>2] = $$idx$val$i368;
           HEAP32[$_191$sroa$6$sroa$0$0$_191$sroa$6$0$$sroa_cast415$sroa_idx>>2] = $_138$sroa$16$1;
           HEAP32[$_191$sroa$6$sroa$4$0$_191$sroa$6$0$$sroa_cast415$sroa_idx447>>2] = $_138$sroa$19$1;
           HEAP32[$_191$sroa$6$sroa$5$0$_191$sroa$6$0$$sroa_cast415$sroa_idx449>>2] = $_138$sroa$22$1;
           HEAP32[$_191$sroa$6$sroa$6$0$_191$sroa$6$0$$sroa_cast415$sroa_idx451>>2] = $_138$sroa$25$1;
           HEAP32[$_191$sroa$6$sroa$7$0$_191$sroa$6$0$$sroa_cast415$sroa_idx453>>2] = $_138$sroa$28$1;
           HEAP32[$_191$sroa$6$sroa$8$0$_191$sroa$6$0$$sroa_cast415$sroa_idx455>>2] = $_138$sroa$31$1;
           HEAPF32[$_191$sroa$6$sroa$9$0$_191$sroa$6$0$$sroa_cast415$sroa_idx457>>2] = $905;
           $$idx$val$i372 = HEAP32[$817>>2]|0;
           $910 = ($909|0)==($$idx$val$i372|0);
           if ($910) {
            __THREW__ = 0;
            invoke_vi(255,($collector|0));
            $915 = __THREW__; __THREW__ = 0;
            $916 = $915&1;
            if ($916) {
             label = 361;
             break L440;
            }
            $$pre$i376 = HEAP32[$818>>2]|0;
            $$pre1778 = HEAP32[$collector>>2]|0;
            $918 = $$pre1778;$919 = $$pre$i376;
           } else {
            $918 = $2593;$919 = $909;
           }
           $917 = (($918) + (($919*40)|0)|0);
           dest=$917; src=$value$i; stop=dest+40|0; do { HEAP32[dest>>2]=HEAP32[src>>2]|0; dest=dest+4|0; src=src+4|0; } while ((dest|0) < (stop|0));
           $920 = (($919) + 1)|0;
           HEAP32[$818>>2] = $920;
           $2594 = $918;$2595 = $920;
          }
         } while(0);
         $$pre = HEAP32[$_134$sroa$10$0$$sroa_idx549>>2]|0;
         $$idx$val$i311$pre = HEAP32[$_134$sroa$9$0$$sroa_idx547>>2]|0;
         $$idx$val$i311 = $$idx$val$i311$pre;$2593 = $2594;$837 = $$pre;$909 = $2595;
        }
        switch (label|0) {
         case 324: {
          __THREW__ = 0;
          invoke_vi(220,(6500|0));
          $841 = __THREW__; __THREW__ = 0;
          label = 914;
          break;
         }
         case 326: {
          __THREW__ = 0;
          invoke_vi(220,(6500|0));
          $843 = __THREW__; __THREW__ = 0;
          label = 914;
          break;
         }
         case 335: {
          __THREW__ = 0;
          invoke_vii(219,(10432|0),15);
          $867 = __THREW__; __THREW__ = 0;
          label = 914;
          break;
         }
         case 338: {
          __THREW__ = 0;
          invoke_vii(219,(10432|0),15);
          $873 = __THREW__; __THREW__ = 0;
          label = 914;
          break;
         }
         case 346: {
          __THREW__ = 0;
          invoke_v(221);
          $887 = __THREW__; __THREW__ = 0;
          label = 916;
          break;
         }
         case 350: {
          __THREW__ = 0;
          invoke_v(221);
          $891 = __THREW__; __THREW__ = 0;
          $892 = ___cxa_find_matching_catch_2()|0;
          $893 = tempRet0;
          $894 = HEAP32[$885>>2]|0;
          $895 = (($894) + -1)|0;
          HEAP32[$885>>2] = $895;
          $personalityslot$sroa$0$1 = $892;$personalityslot$sroa$19$1 = $893;
          break;
         }
         case 353: {
          __THREW__ = 0;
          invoke_v(221);
          $900 = __THREW__; __THREW__ = 0;
          label = 916;
          break;
         }
         case 355: {
          __THREW__ = 0;
          invoke_v(221);
          $903 = __THREW__; __THREW__ = 0;
          label = 916;
          break;
         }
         case 357: {
          _llvm_trap();
          // unreachable;
          break;
         }
         case 359: {
          _llvm_trap();
          // unreachable;
          break;
         }
         case 361: {
          $911 = ___cxa_find_matching_catch_2()|0;
          $912 = tempRet0;
          __THREW__ = 0;
          invoke_vi(254,($value$i|0));
          $913 = __THREW__; __THREW__ = 0;
          $914 = $913&1;
          if ($914) {
           $2590 = ___cxa_find_matching_catch_2()|0;
           $2591 = tempRet0;
           $eh$lpad$body379$index73Z2D = $2591;$eh$lpad$body379$indexZ2D = $2590;
          } else {
           $eh$lpad$body379$index73Z2D = $912;$eh$lpad$body379$indexZ2D = $911;
          }
          $personalityslot$sroa$0$1 = $eh$lpad$body379$indexZ2D;$personalityslot$sroa$19$1 = $eh$lpad$body379$index73Z2D;
          break;
         }
         case 366: {
          $921 = HEAP32[$_134$sroa$8$0$$sroa_idx545>>2]|0;
          $not$$i$i$i$i$i380 = ($921|0)==(0);
          if (!($not$$i$i$i$i$i380)) {
           $922 = HEAP32[$_134$sroa$7$0$$sroa_idx542>>2]|0;
           _free($922);
          }
          $$idx$val$i$i384 = HEAP32[$$idx$i$i178>>2]|0;
          $$idx1$val$i$i386 = HEAP32[$$idx1$i$i180>>2]|0;
          $923 = (($$idx$val$i$i384) + (($$idx1$val$i$i386*44)|0)|0);
          $924 = ($$idx1$val$i$i386|0)==(0);
          L483: do {
           if ($924) {
            $collector$idx$val = $2593;$collector$idx30$val = $909;
           } else {
            $_18$sroa$6$0$$sroa_idx15$i = ((($value$i$i)) + 4|0);
            $_18$sroa$9$0$$sroa_idx17$i = ((($value$i$i)) + 8|0);
            $_18$sroa$10$0$$sroa_idx19$i = ((($value$i$i)) + 12|0);
            $_18$sroa$14$0$$sroa_idx27$i = ((($value$i$i)) + 28|0);
            $_18$sroa$15$0$$sroa_idx29$i = ((($value$i$i)) + 32|0);
            $_18$sroa$16$0$$sroa_idx31$i = ((($value$i$i)) + 36|0);
            $2596 = $2593;$2597 = SIMD_Int32x4_splat(0);$945 = $909;$_18$sroa$14$049$i = 0;$_18$sroa$15$048$i = 0;$_18$sroa$16$047$i = 0;$_18$sroa$9$054$i = 0;$iter$sroa$0$0$in46$i = $$idx$val$i$i384;
            L485: while(1) {
             ;
             $925 = ((($iter$sroa$0$0$in46$i)) + 44|0);
             $switchtmp$i387 = ($iter$sroa$0$0$in46$i|0)==(0|0);
             if ($switchtmp$i387) {
              $collector$idx$val = $2596;$collector$idx30$val = $945;
              break L483;
             }
             $926 = ((($iter$sroa$0$0$in46$i)) + 4|0);
             $927 = HEAP32[$926>>2]|0;
             $trunc$i$i390 = $927&255;
             $trunc$i$i390$clear = $trunc$i$i390 & 3;
             switch ($trunc$i$i390$clear<<24>>24) {
             case 0:  {
              $928 = ((($iter$sroa$0$0$in46$i)) + 8|0);
              $$idx$val$i$i$i393 = HEAP32[$928>>2]|0;
              $929 = HEAP32[$$idx$val$i$i$i393>>2]|0;
              $$arith132 = (($929) + 1)|0;
              $$overflow133 = ($929>>>0)>(4294967294);
              if ($$overflow133) {
               label = 373;
               break L485;
              }
              $930 = ((($iter$sroa$0$0$in46$i)) + 12|0);
              HEAP32[$$idx$val$i$i$i393>>2] = $$arith132;
              $$idx$val$i39$i$i = HEAP32[$930>>2]|0;
              $931 = HEAP32[$$idx$val$i39$i$i>>2]|0;
              $$arith128 = (($931) + 1)|0;
              $$overflow129 = ($931>>>0)>(4294967294);
              if ($$overflow129) {
               label = 375;
               break L485;
              }
              $938 = $$idx$val$i$i$i393;
              $939 = $$idx$val$i39$i$i;
              HEAP32[$$idx$val$i39$i$i>>2] = $$arith128;
              $940 = ((($iter$sroa$0$0$in46$i)) + 16|0);
              $941 = ((($iter$sroa$0$0$in46$i)) + 32|0);
              $942 = ((($iter$sroa$0$0$in46$i)) + 40|0);
              $943 = SIMD_Int32x4_load(HEAPU8, $940);
              $$idx$val12$i$i$i = HEAP32[$941>>2]|0;
              $$idx3$i$i$i = ((($iter$sroa$0$0$in46$i)) + 36|0);
              $$idx3$val13$i$i$i = HEAP32[$$idx3$i$i$i>>2]|0;
              $$val14$i$i$i = HEAP32[$942>>2]|0;
              $944 = $943;$_18$sroa$0$0$i = 0;$_18$sroa$14$1$i = $$idx$val12$i$i$i;$_18$sroa$15$1$i = $$idx3$val13$i$i$i;$_18$sroa$16$1$i = $$val14$i$i$i;$_18$sroa$6$0$i = $938;$_18$sroa$9$1$i = $939;
              break;
             }
             case 1:  {
              $932 = ((($iter$sroa$0$0$in46$i)) + 8|0);
              $$idx$val$i43$i$i = HEAP32[$932>>2]|0;
              $933 = HEAP32[$$idx$val$i43$i$i>>2]|0;
              $$arith124 = (($933) + 1)|0;
              $$overflow125 = ($933>>>0)>(4294967294);
              if ($$overflow125) {
               label = 377;
               break L485;
              }
              HEAP32[$$idx$val$i43$i$i>>2] = $$arith124;
              $934 = $$idx$val$i43$i$i;
              $944 = $2597;$_18$sroa$0$0$i = 1;$_18$sroa$14$1$i = $_18$sroa$14$049$i;$_18$sroa$15$1$i = $_18$sroa$15$048$i;$_18$sroa$16$1$i = $_18$sroa$16$047$i;$_18$sroa$6$0$i = $934;$_18$sroa$9$1$i = $_18$sroa$9$054$i;
              break;
             }
             case 2:  {
              $935 = ((($iter$sroa$0$0$in46$i)) + 8|0);
              $$idx$val$i46$i$i = HEAP32[$935>>2]|0;
              $936 = HEAP32[$$idx$val$i46$i$i>>2]|0;
              $$arith120 = (($936) + 1)|0;
              $$overflow121 = ($936>>>0)>(4294967294);
              if ($$overflow121) {
               label = 380;
               break L485;
              }
              HEAP32[$$idx$val$i46$i$i>>2] = $$arith120;
              $937 = $$idx$val$i46$i$i;
              $944 = $2597;$_18$sroa$0$0$i = 2;$_18$sroa$14$1$i = $_18$sroa$14$049$i;$_18$sroa$15$1$i = $_18$sroa$15$048$i;$_18$sroa$16$1$i = $_18$sroa$16$047$i;$_18$sroa$6$0$i = $937;$_18$sroa$9$1$i = $_18$sroa$9$054$i;
              break;
             }
             default: {
              label = 383;
              break L485;
             }
             }
             ;
             HEAP32[$value$i$i>>2] = $_18$sroa$0$0$i;
             HEAP32[$_18$sroa$6$0$$sroa_idx15$i>>2] = $_18$sroa$6$0$i;
             HEAP32[$_18$sroa$9$0$$sroa_idx17$i>>2] = $_18$sroa$9$1$i;
             temp_Int32x4_ptr = $_18$sroa$10$0$$sroa_idx19$i;SIMD_Int32x4_store(HEAPU8, temp_Int32x4_ptr, $944);
             HEAP32[$_18$sroa$14$0$$sroa_idx27$i>>2] = $_18$sroa$14$1$i;
             HEAP32[$_18$sroa$15$0$$sroa_idx29$i>>2] = $_18$sroa$15$1$i;
             HEAP32[$_18$sroa$16$0$$sroa_idx31$i>>2] = $_18$sroa$16$1$i;
             $$idx$val$i10$i = HEAP32[$817>>2]|0;
             $946 = ($945|0)==($$idx$val$i10$i|0);
             if ($946) {
              __THREW__ = 0;
              invoke_vi(255,($collector|0));
              $951 = __THREW__; __THREW__ = 0;
              $952 = $951&1;
              if ($952) {
               label = 385;
               break;
              }
              $$pre$i$i401 = HEAP32[$818>>2]|0;
              $$pre1779 = HEAP32[$collector>>2]|0;
              $954 = $$pre1779;$955 = $$pre$i$i401;
             } else {
              $954 = $2596;$955 = $945;
             }
             $953 = (($954) + (($955*40)|0)|0);
             dest=$953; src=$value$i$i; stop=dest+40|0; do { HEAP32[dest>>2]=HEAP32[src>>2]|0; dest=dest+4|0; src=src+4|0; } while ((dest|0) < (stop|0));
             $956 = (($955) + 1)|0;
             HEAP32[$818>>2] = $956;
             $957 = ($925|0)==($923|0);
             if ($957) {
              $collector$idx$val = $954;$collector$idx30$val = $956;
              break L483;
             } else {
              $2596 = $954;$2597 = $944;$945 = $956;$_18$sroa$14$049$i = $_18$sroa$14$1$i;$_18$sroa$15$048$i = $_18$sroa$15$1$i;$_18$sroa$16$047$i = $_18$sroa$16$1$i;$_18$sroa$9$054$i = $_18$sroa$9$1$i;$iter$sroa$0$0$in46$i = $925;
             }
            }
            if ((label|0) == 373) {
             _llvm_trap();
             // unreachable;
            }
            else if ((label|0) == 375) {
             _llvm_trap();
             // unreachable;
            }
            else if ((label|0) == 377) {
             _llvm_trap();
             // unreachable;
            }
            else if ((label|0) == 380) {
             _llvm_trap();
             // unreachable;
            }
            else if ((label|0) == 383) {
             // unreachable;
            }
            else if ((label|0) == 385) {
             $947 = ___cxa_find_matching_catch_2()|0;
             $948 = tempRet0;
             __THREW__ = 0;
             invoke_vi(254,($value$i$i|0));
             $949 = __THREW__; __THREW__ = 0;
             $950 = $949&1;
             if ($950) {
              label = 911;
              break L438;
             } else {
              $$pre1784$pre$phiZZ2D = $collector;$eh$lpad$body70$index102Z2D = $948;$eh$lpad$body70$indexZ2D = $947;
              label = 912;
              break L438;
             }
            }
           }
          } while(0);
          $958 = ((($0)) + 468|0);
          HEAP32[$bodies$i>>2] = 1;
          $959 = ((($bodies$i)) + 4|0);
          HEAP32[$959>>2] = 0;
          $960 = ((($bodies$i)) + 8|0);
          HEAP32[$960>>2] = 0;
          $961 = ($collector$idx30$val|0)==(0);
          L509: do {
           if ($961) {
            $2470 = (1);
           } else {
            $962 = (($collector$idx$val) + (($collector$idx30$val*40)|0)|0);
            $963 = $collector$idx$val;
            $964 = ((($collector$idx$val)) + 40|0);
            $965 = ((($0)) + 540|0);
            $966 = ((($id$i$i)) + 4|0);
            $967 = ((($id$i$i)) + 8|0);
            $968 = ((($id$i$i)) + 12|0);
            $$idx$i$i$i11$i$i = ((($0)) + 492|0);
            $969 = ((($0)) + 516|0);
            $$idx$i$i$i162$i = ((($0)) + 516|0);
            $$idx$i$i$i$i$i = ((($0)) + 520|0);
            $970 = ((($0)) + 516|0);
            $old_table$i$sroa$11$0$$sroa_idx19$i$i$i$i = ((($0)) + 524|0);
            $971 = ((($0)) + 524|0);
            $_16$sroa$4$0$$sroa_idx2$i$i$i = ((($k$i$i$i)) + 4|0);
            $_16$sroa$5$0$$sroa_idx4$i$i$i = ((($k$i$i$i)) + 8|0);
            $_16$sroa$6$0$$sroa_idx6$i$i$i = ((($k$i$i$i)) + 12|0);
            $972 = ((($0)) + 500|0);
            $_19$sroa$0$0$iter$sroa$6$0824$i = 0;$iter$sroa$0$0$825$i = $964;$iter$sroa$0$0823$i = $collector$idx$val;$iter$sroa$6$0$826$i = 1;
            L511: while(1) {
             $973 = HEAP32[$iter$sroa$0$0823$i>>2]|0;
             $switch29$i = ($973|0)==(0);
             if ($switch29$i) {
              $974 = ((($iter$sroa$0$0823$i)) + 4|0);
              $975 = ((($iter$sroa$0$0823$i)) + 12|0);
              $$idx93$val$i = HEAP32[$974>>2]|0;
              $976 = ((($$idx93$val$i)) + 8|0);
              $977 = ((($iter$sroa$0$0823$i)) + 8|0);
              $978 = $976;
              $$idx92$val$i = HEAP32[$977>>2]|0;
              $979 = ((($$idx92$val$i)) + 8|0);
              $980 = ((($iter$sroa$0$0823$i)) + 20|0);
              $981 = ((($iter$sroa$0$0823$i)) + 16|0);
              $982 = +HEAPF32[$975>>2];
              $983 = +HEAPF32[$981>>2];
              $984 = ((($iter$sroa$0$0823$i)) + 24|0);
              $985 = +HEAPF32[$980>>2];
              $986 = +HEAPF32[$984>>2];
              $987 = $982 + $985;
              $988 = $983 + $986;
              $989 = $987 * 0.5;
              $990 = $988 * 0.5;
              $991 = $979;
              $$val$i$i = +HEAPF32[$965>>2];
              $992 = $989 / $$val$i$i;
              $993 = $990 / $$val$i$i;
              $994 = (+_llvm_trunc_f32((+$992)));
              $995 = (+_llvm_trunc_f32((+$993)));
              HEAP32[$id$i$i>>2] = $978;
              HEAP32[$966>>2] = $991;
              HEAPF32[$967>>2] = $994;
              HEAPF32[$968>>2] = $995;
              __THREW__ = 0;
              $996 = (invoke_ii(256,($id$i$i|0))|0);
              $997 = tempRet0;
              $998 = __THREW__; __THREW__ = 0;
              $999 = $998&1;
              if ($999) {
               label = 871;
               break;
              }
              $$idx$val$i$i$i12$i$i = HEAP32[$$idx$i$i$i11$i$i>>2]|0;
              $1000 = ($$idx$val$i$i$i12$i$i|0)==(0);
              L516: do {
               if ($1000) {
                $$sink$i$i$i$i = 0;
               } else {
                $1001 = (($$idx$val$i$i$i12$i$i) + -1)|0;
                $1002 = $1001 & $996;
                $1003 = HEAP32[$972>>2]|0;
                $1004 = (($1003) + ($1002<<3)|0);
                $1005 = $1004;
                $1006 = $1005;
                $1007 = HEAP32[$1006>>2]|0;
                $1008 = (($1005) + 4)|0;
                $1009 = $1008;
                $1010 = HEAP32[$1009>>2]|0;
                $1011 = ($1007|0)==(0);
                $1012 = ($1010|0)==(0);
                $1013 = $1011 & $1012;
                if ($1013) {
                 $$sink$i$i$i$i = 0;
                 break;
                }
                $1014 = $$idx$val$i$i$i12$i$i << 3;
                $1015 = (($1003) + ($1014)|0);
                $1016 = (($1015) + (($1002*24)|0)|0);
                $1017 = (1 - ($$idx$val$i$i$i12$i$i))|0;
                $$in$i$i$i = $1016;$$sink239252$i$i$i21$i$i = $1004;$1019 = $1007;$1024 = $1010;$probe$sroa$8$0254$i$i$i20$i$i = $1002;
                L519: while(1) {
                 $1018 = (($probe$sroa$8$0254$i$i$i20$i$i) - ($1019))|0;
                 $1020 = $1018 & $1001;
                 $1021 = (($probe$sroa$8$0254$i$i$i20$i$i) - ($1020))|0;
                 $1022 = ($1002|0)<($1021|0);
                 if ($1022) {
                  $$sink$i$i$i$i = 0;
                  break L516;
                 }
                 $1023 = ($1019|0)==($996|0);
                 $1025 = ($1024|0)==($997|0);
                 $1026 = $1023 & $1025;
                 do {
                  if ($1026) {
                   $1027 = HEAP32[$$in$i$i$i>>2]|0;
                   $1028 = ($1027|0)==($978|0);
                   if (!($1028)) {
                    break;
                   }
                   $1031 = ((($$in$i$i$i)) + 4|0);
                   $1032 = HEAP32[$1031>>2]|0;
                   $1033 = ($1032|0)==($991|0);
                   if (!($1033)) {
                    break;
                   }
                   $$idx2$i$i$i$i$i$i$i = ((($$in$i$i$i)) + 8|0);
                   $$idx2$val$i$i$i$i$i$i$i = +HEAPF32[$$idx2$i$i$i$i$i$i$i>>2];
                   $$idx3$i$i$i$i$i$i$i = ((($$in$i$i$i)) + 12|0);
                   $$idx3$val$i$i$i$i$i$i$i = +HEAPF32[$$idx3$i$i$i$i$i$i$i>>2];
                   $1029 = $994 == $$idx2$val$i$i$i$i$i$i$i;
                   $1030 = $995 == $$idx3$val$i$i$i$i$i$i$i;
                   $or$cond$i$i$i$i$i$i25$i$i = $1029 & $1030;
                   if ($or$cond$i$i$i$i$i$i25$i$i) {
                    break L519;
                   }
                  }
                 } while(0);
                 $1034 = (($probe$sroa$8$0254$i$i$i20$i$i) + 1)|0;
                 $1035 = $1034 & $1001;
                 $1036 = ($1035|0)==(0);
                 $dist$0$i$i$i$i$i28$i$i = $1036 ? $1017 : 1;
                 $1037 = (($$sink239252$i$i$i21$i$i) + ($dist$0$i$i$i$i$i28$i$i<<3)|0);
                 $1038 = (($$in$i$i$i) + (($dist$0$i$i$i$i$i28$i$i*24)|0)|0);
                 $1039 = $1037;
                 $1040 = $1039;
                 $1041 = HEAP32[$1040>>2]|0;
                 $1042 = (($1039) + 4)|0;
                 $1043 = $1042;
                 $1044 = HEAP32[$1043>>2]|0;
                 $1045 = ($1041|0)==(0);
                 $1046 = ($1044|0)==(0);
                 $1047 = $1045 & $1046;
                 if ($1047) {
                  $$sink$i$i$i$i = 0;
                  break L516;
                 } else {
                  $$in$i$i$i = $1038;$$sink239252$i$i$i21$i$i = $1037;$1019 = $1041;$1024 = $1044;$probe$sroa$8$0254$i$i$i20$i$i = $1034;
                 }
                }
                $$idx15$i$i$i$i = ((($$in$i$i$i)) + 20|0);
                $$idx15$val$i$i$i$i = HEAP32[$$idx15$i$i$i$i>>2]|0;
                $$sink$i$i$i$i = $$idx15$val$i$i$i$i;
               }
              } while(0);
              ;HEAP32[$k$i$i$i>>2]=HEAP32[$id$i$i>>2]|0;HEAP32[$k$i$i$i+4>>2]=HEAP32[$id$i$i+4>>2]|0;HEAP32[$k$i$i$i+8>>2]=HEAP32[$id$i$i+8>>2]|0;HEAP32[$k$i$i$i+12>>2]=HEAP32[$id$i$i+12>>2]|0;
              __THREW__ = 0;
              $1048 = (invoke_ii(256,($k$i$i$i|0))|0);
              $1049 = tempRet0;
              $1050 = __THREW__; __THREW__ = 0;
              $1051 = $1050&1;
              if ($1051) {
               label = 871;
               break;
              }
              $$idx$val$i$i$i163$i = HEAP32[$$idx$i$i$i162$i>>2]|0;
              $1052 = ($$idx$val$i$i$i163$i*10)|0;
              $1053 = (($1052) + 9)|0;
              $1054 = (($1053>>>0) / 11)&-1;
              $$idx$val$i$i$i$i$i = HEAP32[$$idx$i$i$i$i$i>>2]|0;
              $1055 = ($1054|0)==($$idx$val$i$i$i$i$i|0);
              do {
               if ($1055) {
                $1056 = (($1054) + 1)|0;
                $1057 = ($1056*11)|0;
                $1058 = (($1057>>>0) / 10)&-1;
                $1059 = ($1058>>>0)<($1056>>>0);
                if ($1059) {
                 label = 407;
                 break L511;
                }
                $1061 = (($1058) + -1)|0;
                $1062 = (Math_clz32(($1061|0))|0);
                $1063 = (0 - ($1062))|0;
                $1064 = $1063 & 31;
                $1065 = 1 << $1064;
                $1066 = ($1065>>>0)<($1058>>>0);
                if ($1066) {
                 label = 409;
                 break L511;
                }
                $1068 = ($1065>>>0)<(32);
                $_0$0$sroa$speculated$i$i$i$i$i$i = $1068 ? 32 : $1065;
                $1069 = ($1054>>>0)>($_0$0$sroa$speculated$i$i$i$i$i$i>>>0);
                if ($1069) {
                 label = 411;
                 break L511;
                }
                $1071 = (($_0$0$sroa$speculated$i$i$i$i$i$i) + -1)|0;
                $1072 = $1071 & $_0$0$sroa$speculated$i$i$i$i$i$i;
                $1073 = ($1072|0)==(0);
                if (!($1073)) {
                 label = 413;
                 break L511;
                }
                __THREW__ = 0;
                invoke_vii(257,($_28$i$i$i$i$i|0),($_0$0$sroa$speculated$i$i$i$i$i$i|0));
                $1075 = __THREW__; __THREW__ = 0;
                $1076 = $1075&1;
                if ($1076) {
                 label = 435;
                 break L511;
                }
                $old_table$i$sroa$0$0$copyload$i$i$i$i = HEAP32[$969>>2]|0;
                $old_table$i$sroa$8$0$copyload$i$i$i$i = HEAP32[$$idx$i$i$i$i$i>>2]|0;
                $old_table$i$sroa$11$0$copyload$i$i$i$i = HEAP32[$old_table$i$sroa$11$0$$sroa_idx19$i$i$i$i>>2]|0;
                ;HEAP32[$970>>2]=HEAP32[$_28$i$i$i$i$i>>2]|0;HEAP32[$970+4>>2]=HEAP32[$_28$i$i$i$i$i+4>>2]|0;HEAP32[$970+8>>2]=HEAP32[$_28$i$i$i$i$i+8>>2]|0;
                HEAP32[$old_size$i$i$i$i$i>>2] = $old_table$i$sroa$8$0$copyload$i$i$i$i;
                $1082 = ($old_table$i$sroa$0$0$copyload$i$i$i$i|0)==(0);
                $1083 = ($old_table$i$sroa$8$0$copyload$i$i$i$i|0)==(0);
                $or$cond341$i$i$i$i$i = $1082 | $1083;
                if ($or$cond341$i$i$i$i$i) {
                 if ($1082) {
                  break;
                 }
                 _free($old_table$i$sroa$11$0$copyload$i$i$i$i);
                 break;
                }
                $1077 = $old_table$i$sroa$0$0$copyload$i$i$i$i << 3;
                $$cast$i$i$i$i$i$i168$i = $old_table$i$sroa$11$0$copyload$i$i$i$i;
                $1078 = (($old_table$i$sroa$11$0$copyload$i$i$i$i) + ($1077)|0);
                $1079 = $1078;
                $1080 = (($old_table$i$sroa$0$0$copyload$i$i$i$i) + -1)|0;
                $1081 = (1 - ($old_table$i$sroa$0$0$copyload$i$i$i$i))|0;
                $bucket$sroa$0$0$i$i$i$i$i = $$cast$i$i$i$i$i$i168$i;$bucket$sroa$12$0$i$i$i$i$i = $1079;$bucket$sroa$22$0$i$i$i$i$i = 0;
                while(1) {
                 $1084 = $bucket$sroa$0$0$i$i$i$i$i;
                 $1085 = $1084;
                 $1086 = $1085;
                 $1087 = HEAP32[$1086>>2]|0;
                 $1088 = (($1085) + 4)|0;
                 $1089 = $1088;
                 $1090 = HEAP32[$1089>>2]|0;
                 $1091 = ($1087|0)==(0);
                 $1092 = ($1090|0)==(0);
                 $1093 = $1091 & $1092;
                 if (!($1093)) {
                  $1102 = (($bucket$sroa$22$0$i$i$i$i$i) - ($1087))|0;
                  $1103 = $1102 & $1080;
                  $1104 = ($1103|0)==(0);
                  if ($1104) {
                   $1106 = $1087;$1108 = $1090;$1125 = $old_table$i$sroa$8$0$copyload$i$i$i$i;$bucket$sroa$0$1$i$i$i$i$i = $bucket$sroa$0$0$i$i$i$i$i;$bucket$sroa$12$1$i$i$i$i$i = $bucket$sroa$12$0$i$i$i$i$i;$bucket$sroa$22$1$i$i$i$i$i = $bucket$sroa$22$0$i$i$i$i$i;
                   break;
                  }
                 }
                 $1094 = (($bucket$sroa$22$0$i$i$i$i$i) + 1)|0;
                 $1095 = $1094 & $1080;
                 $1096 = ($1095|0)==(0);
                 $dist$0$i62$i$i$i$i$i = $1096 ? $1081 : 1;
                 $1097 = $bucket$sroa$12$0$i$i$i$i$i;
                 $1098 = (($1084) + ($dist$0$i62$i$i$i$i$i<<3)|0);
                 $1099 = (($1097) + (($dist$0$i62$i$i$i$i$i*24)|0)|0);
                 $1100 = $1098;
                 $1101 = $1099;
                 $bucket$sroa$0$0$i$i$i$i$i = $1100;$bucket$sroa$12$0$i$i$i$i$i = $1101;$bucket$sroa$22$0$i$i$i$i$i = $1094;
                }
                while(1) {
                 $1105 = $bucket$sroa$0$1$i$i$i$i$i;
                 $1107 = ($1106|0)==(0);
                 $1109 = ($1108|0)==(0);
                 $1110 = $1107 & $1109;
                 $$pre350$i$i$i$i$i = $bucket$sroa$12$1$i$i$i$i$i;
                 if ($1110) {
                  $2598 = $1125;
                 } else {
                  $1124 = (($1125) + -1)|0;
                  $1126 = $1105;
                  $1127 = $1126;
                  HEAP32[$1127>>2] = 0;
                  $1128 = (($1126) + 4)|0;
                  $1129 = $1128;
                  HEAP32[$1129>>2] = 0;
                  $_5$sroa$4$0$$sroa_idx45$i$i$i$i$i$i = ((($$pre350$i$i$i$i$i)) + 16|0);
                  $_5$sroa$4$0$copyload$i$i$i$i$i$i = HEAP32[$_5$sroa$4$0$$sroa_idx45$i$i$i$i$i$i>>2]|0;
                  $_5$sroa$5$0$$sroa_idx47$i$i$i$i$i$i = ((($$pre350$i$i$i$i$i)) + 20|0);
                  $_5$sroa$5$0$copyload$i$i$i$i$i$i = HEAP32[$_5$sroa$5$0$$sroa_idx47$i$i$i$i$i$i>>2]|0;
                  $_73$sroa$7$16$_5$sroa$0$0$$sroa_cast41$i$sroa_cast$i$i$i$i$i = $bucket$sroa$12$1$i$i$i$i$i;
                  _memmove(($k$i$i$i$i$i|0),($_73$sroa$7$16$_5$sroa$0$0$$sroa_cast41$i$sroa_cast$i$i$i$i$i|0),16)|0;
                  ;HEAP32[$k$i$i$i$i$i$i>>2]=HEAP32[$k$i$i$i$i$i>>2]|0;HEAP32[$k$i$i$i$i$i$i+4>>2]=HEAP32[$k$i$i$i$i$i+4>>2]|0;HEAP32[$k$i$i$i$i$i$i+8>>2]=HEAP32[$k$i$i$i$i$i+8>>2]|0;HEAP32[$k$i$i$i$i$i$i+12>>2]=HEAP32[$k$i$i$i$i$i+12>>2]|0;
                  $$idx$val$i$i$i$i$i$i169$i = HEAP32[$$idx$i$i$i162$i>>2]|0;
                  $1130 = (($$idx$val$i$i$i$i$i$i169$i) + -1)|0;
                  $1131 = $1130 & $1106;
                  $1132 = HEAP32[$971>>2]|0;
                  $1133 = (($1131) + ($$idx$val$i$i$i$i$i$i169$i))|0;
                  $1134 = ($$idx$val$i$i$i$i$i$i169$i|0)==(0);
                  if ($1134) {
                   label = 427;
                   break L511;
                  }
                  $1135 = $$idx$val$i$i$i$i$i$i169$i << 3;
                  $1136 = (($1132) + ($1135)|0);
                  $1137 = (($1136) + (($1131*24)|0)|0);
                  $1138 = (($1132) + ($1131<<3)|0);
                  $1139 = (1 - ($$idx$val$i$i$i$i$i$i169$i))|0;
                  $$sink8689$i$i$i$i$i$i = $1138;$$sink90$i$i$i$i$i$i = $1137;$buckets$sroa$12$091$i$i$i$i$i$i = $1131;
                  while(1) {
                   $1143 = $$sink8689$i$i$i$i$i$i;
                   $1144 = $1143;
                   $1145 = HEAP32[$1144>>2]|0;
                   $1146 = (($1143) + 4)|0;
                   $1147 = $1146;
                   $1148 = HEAP32[$1147>>2]|0;
                   $1149 = ($1145|0)==(0);
                   $1150 = ($1148|0)==(0);
                   $1151 = $1149 & $1150;
                   if ($1151) {
                    break;
                   }
                   $1152 = (($buckets$sroa$12$091$i$i$i$i$i$i) + 1)|0;
                   $1153 = $1152 & $1130;
                   $1154 = ($1153|0)==(0);
                   $dist$0$i$i$i$i$i$i$i = $1154 ? $1139 : 1;
                   $1155 = (($$sink8689$i$i$i$i$i$i) + ($dist$0$i$i$i$i$i$i$i<<3)|0);
                   $1156 = (($$sink90$i$i$i$i$i$i) + (($dist$0$i$i$i$i$i$i$i*24)|0)|0);
                   $1157 = ($1152|0)==($1133|0);
                   if ($1157) {
                    label = 427;
                    break L511;
                   } else {
                    $$sink8689$i$i$i$i$i$i = $1155;$$sink90$i$i$i$i$i$i = $1156;$buckets$sroa$12$091$i$i$i$i$i$i = $1152;
                   }
                  }
                  ;HEAP32[$key$i$i$i$i$i$i$i>>2]=HEAP32[$k$i$i$i$i$i$i>>2]|0;HEAP32[$key$i$i$i$i$i$i$i+4>>2]=HEAP32[$k$i$i$i$i$i$i+4>>2]|0;HEAP32[$key$i$i$i$i$i$i$i+8>>2]=HEAP32[$k$i$i$i$i$i$i+8>>2]|0;HEAP32[$key$i$i$i$i$i$i$i+12>>2]=HEAP32[$k$i$i$i$i$i$i+12>>2]|0;
                  $1158 = $$sink8689$i$i$i$i$i$i;
                  $1159 = $1158;
                  HEAP32[$1159>>2] = $1106;
                  $1160 = (($1158) + 4)|0;
                  $1161 = $1160;
                  HEAP32[$1161>>2] = $1108;
                  _memmove(($$sink90$i$i$i$i$i$i|0),($key$i$i$i$i$i$i$i|0),16)|0;
                  $_16$sroa$4$0$$sroa_idx7$i$i$i$i$i$i$i = ((($$sink90$i$i$i$i$i$i)) + 16|0);
                  HEAP32[$_16$sroa$4$0$$sroa_idx7$i$i$i$i$i$i$i>>2] = $_5$sroa$4$0$copyload$i$i$i$i$i$i;
                  $_16$sroa$5$0$$sroa_idx9$i$i$i$i$i$i$i = ((($$sink90$i$i$i$i$i$i)) + 20|0);
                  HEAP32[$_16$sroa$5$0$$sroa_idx9$i$i$i$i$i$i$i>>2] = $_5$sroa$5$0$copyload$i$i$i$i$i$i;
                  $1162 = HEAP32[$$idx$i$i$i$i$i>>2]|0;
                  $1163 = (($1162) + 1)|0;
                  HEAP32[$$idx$i$i$i$i$i>>2] = $1163;
                  $1164 = ($1124|0)==(0);
                  if ($1164) {
                   break;
                  } else {
                   $2598 = $1124;
                  }
                 }
                 $1111 = (($bucket$sroa$22$1$i$i$i$i$i) + 1)|0;
                 $1112 = $1111 & $1080;
                 $1113 = ($1112|0)==(0);
                 $dist$0$i$i$i$i$i$i = $1113 ? $1081 : 1;
                 $1114 = (($1105) + ($dist$0$i$i$i$i$i$i<<3)|0);
                 $1115 = (($$pre350$i$i$i$i$i) + (($dist$0$i$i$i$i$i$i*24)|0)|0);
                 $1116 = $1114;
                 $1117 = $1115;
                 $1118 = $1114;
                 $1119 = $1118;
                 $1120 = HEAP32[$1119>>2]|0;
                 $1121 = (($1118) + 4)|0;
                 $1122 = $1121;
                 $1123 = HEAP32[$1122>>2]|0;
                 $1106 = $1120;$1108 = $1123;$1125 = $2598;$bucket$sroa$0$1$i$i$i$i$i = $1116;$bucket$sroa$12$1$i$i$i$i$i = $1117;$bucket$sroa$22$1$i$i$i$i$i = $1111;
                }
                HEAP32[$_95$i$i$i$i$i>>2] = $1163;
                HEAP32[$left_val$i$i$i$i$i>>2] = $_95$i$i$i$i$i;
                HEAP32[$right_val$i$i$i$i$i>>2] = $old_size$i$i$i$i$i;
                $1165 = ($1163|0)==($old_table$i$sroa$8$0$copyload$i$i$i$i|0);
                if (!($1165)) {
                 label = 433;
                 break L511;
                }
                _free($old_table$i$sroa$11$0$copyload$i$i$i$i);
               }
              } while(0);
              $_16$sroa$0$0$copyload$i$i$i = HEAP32[$k$i$i$i>>2]|0;
              $_16$sroa$4$0$copyload$i$i$i = HEAP32[$_16$sroa$4$0$$sroa_idx2$i$i$i>>2]|0;
              $_16$sroa$5$0$copyload$i$i$i = +HEAPF32[$_16$sroa$5$0$$sroa_idx4$i$i$i>>2];
              $_16$sroa$6$0$copyload$i$i$i = +HEAPF32[$_16$sroa$6$0$$sroa_idx6$i$i$i>>2];
              $$idx$val$i$i10$i$i$i = HEAP32[$$idx$i$i$i162$i>>2]|0;
              $1179 = ($$idx$val$i$i10$i$i$i|0)==(0);
              if ($1179) {
               label = 445;
               break;
              }
              $1180 = (($$idx$val$i$i10$i$i$i) + -1)|0;
              $1181 = $1180 & $1048;
              $1182 = $$idx$val$i$i10$i$i$i << 3;
              $1183 = HEAP32[$971>>2]|0;
              $1184 = (($1183) + ($1182)|0);
              $1185 = (($1183) + ($1181<<3)|0);
              $1186 = (($1184) + (($1181*24)|0)|0);
              $1187 = $1186;
              $1188 = $1185;
              $1189 = $1188;
              $1190 = HEAP32[$1189>>2]|0;
              $1191 = (($1188) + 4)|0;
              $1192 = $1191;
              $1193 = HEAP32[$1192>>2]|0;
              $1194 = ($1190|0)==(0);
              $1195 = ($1193|0)==(0);
              $1196 = $1194 & $1195;
              L560: do {
               if ($1196) {
                $_10$sroa$18$0$ph$in$ph$i$i$i$i = $1185;$_10$sroa$21$0$ph$ph$i$i$i$i = $1187;
                label = 451;
               } else {
                $1197 = (1 - ($$idx$val$i$i10$i$i$i))|0;
                $$sink239252$i$i$i$i$i = $1185;$$sink253$i$i$i$i$i = $1186;$1199 = $1190;$1204 = $1193;$1302 = $1187;$probe$sroa$8$0254$i$i$i$i$i = $1181;
                L562: while(1) {
                 $1198 = (($probe$sroa$8$0254$i$i$i$i$i) - ($1199))|0;
                 $1200 = $1198 & $1180;
                 $1201 = (($probe$sroa$8$0254$i$i$i$i$i) - ($1200))|0;
                 $1202 = ($1181|0)<($1201|0);
                 if ($1202) {
                  break;
                 }
                 $1203 = ($1199|0)==($1048|0);
                 $1205 = ($1204|0)==($1049|0);
                 $1206 = $1203 & $1205;
                 do {
                  if ($1206) {
                   $1207 = HEAP32[$$sink253$i$i$i$i$i>>2]|0;
                   $1208 = ($1207|0)==($_16$sroa$0$0$copyload$i$i$i|0);
                   if (!($1208)) {
                    break;
                   }
                   $1211 = ((($$sink253$i$i$i$i$i)) + 4|0);
                   $1212 = HEAP32[$1211>>2]|0;
                   $1213 = ($1212|0)==($_16$sroa$4$0$copyload$i$i$i|0);
                   if (!($1213)) {
                    break;
                   }
                   $$idx$i$i73$i$i$i$i$i = ((($$sink253$i$i$i$i$i)) + 8|0);
                   $$idx$val$i$i74$i$i$i$i$i = +HEAPF32[$$idx$i$i73$i$i$i$i$i>>2];
                   $$idx1$i$i$i$i$i$i$i61 = ((($$sink253$i$i$i$i$i)) + 12|0);
                   $$idx1$val$i$i$i$i$i$i$i62 = +HEAPF32[$$idx1$i$i$i$i$i$i$i61>>2];
                   $1209 = $$idx$val$i$i74$i$i$i$i$i == $_16$sroa$5$0$copyload$i$i$i;
                   $1210 = $$idx1$val$i$i$i$i$i$i$i62 == $_16$sroa$6$0$copyload$i$i$i;
                   $or$cond$i$i$i$i$i$i$i$i = $1209 & $1210;
                   if ($or$cond$i$i$i$i$i$i$i$i) {
                    label = 452;
                    break L562;
                   }
                  }
                 } while(0);
                 $1214 = (($probe$sroa$8$0254$i$i$i$i$i) + 1)|0;
                 $1215 = $1214 & $1180;
                 $1216 = ($1215|0)==(0);
                 $dist$0$i$i$i$i12$i$i$i = $1216 ? $1197 : 1;
                 $1217 = (($$sink239252$i$i$i$i$i) + ($dist$0$i$i$i$i12$i$i$i<<3)|0);
                 $1218 = (($$sink253$i$i$i$i$i) + (($dist$0$i$i$i$i12$i$i$i*24)|0)|0);
                 $1219 = $1218;
                 $1220 = $1217;
                 $1221 = $1220;
                 $1222 = HEAP32[$1221>>2]|0;
                 $1223 = (($1220) + 4)|0;
                 $1224 = $1223;
                 $1225 = HEAP32[$1224>>2]|0;
                 $1226 = ($1222|0)==(0);
                 $1227 = ($1225|0)==(0);
                 $1228 = $1226 & $1227;
                 if ($1228) {
                  $_10$sroa$18$0$ph$in$ph$i$i$i$i = $1217;$_10$sroa$21$0$ph$ph$i$i$i$i = $1219;
                  label = 451;
                  break L560;
                 } else {
                  $$sink239252$i$i$i$i$i = $1217;$$sink253$i$i$i$i$i = $1218;$1199 = $1222;$1204 = $1225;$1302 = $1219;$probe$sroa$8$0254$i$i$i$i$i = $1214;
                 }
                }
                if ((label|0) == 452) {
                 label = 0;
                 $1303 = $1302;
                 $1304 = ((($1303)) + 16|0);
                 $1305 = $1304;
                 $1306 = $1305;
                 HEAP32[$1306>>2] = $_19$sroa$0$0$iter$sroa$6$0824$i;
                 $1307 = (($1305) + 4)|0;
                 $1308 = $1307;
                 HEAP32[$1308>>2] = $$sink$i$i$i$i;
                 break;
                }
                $1230 = (HEAPF32[tempDoublePtr>>2]=$_16$sroa$6$0$copyload$i$i$i,HEAP32[tempDoublePtr>>2]|0);
                $1231 = $1230;
                $_10$sroa$18$0$ph$i$i$i$i = $$sink239252$i$i$i$i$i;
                $1232 = (HEAPF32[tempDoublePtr>>2]=$_16$sroa$5$0$copyload$i$i$i,HEAP32[tempDoublePtr>>2]|0);
                $1242 = $1048;$1245 = $1049;$1255 = $_16$sroa$0$0$copyload$i$i$i;$1258 = $_16$sroa$4$0$copyload$i$i$i;$bucket1$sroa$0$sroa$0$0$i$i$i$i$i$i = $_10$sroa$18$0$ph$i$i$i$i;$bucket1$sroa$0$sroa$6$0$i$i$i$i$i$i = $1302;$bucket1$sroa$9$0$i$i$i$i$i$i = $probe$sroa$8$0254$i$i$i$i$i;$ib$0$i$i$i$i$i$i = $1201;$key$i$i$sroa$6$0$i$i$i$i = $1232;$key$i$i$sroa$7$0$i$i$i$i = $1231;$val$sroa$0$0$i$i$i$i$i$i = $_19$sroa$0$0$iter$sroa$6$0824$i;$val$sroa$6$0$i$i$i$i$i$i = $$sink$i$i$i$i;
                L573: while(1) {
                 $1233 = $bucket1$sroa$0$sroa$0$0$i$i$i$i$i$i;
                 $1234 = $1233;
                 $1235 = $1234;
                 $1236 = HEAP32[$1235>>2]|0;
                 $1237 = (($1234) + 4)|0;
                 $1238 = $1237;
                 $1239 = HEAP32[$1238>>2]|0;
                 $1240 = $1233;
                 $1241 = $1240;
                 HEAP32[$1241>>2] = $1242;
                 $1243 = (($1240) + 4)|0;
                 $1244 = $1243;
                 HEAP32[$1244>>2] = $1245;
                 $1246 = $bucket1$sroa$0$sroa$6$0$i$i$i$i$i$i;
                 $src$i$sroa$0$0$$sroa_cast26$i$i$i$i$i$i$i = $bucket1$sroa$0$sroa$6$0$i$i$i$i$i$i;
                 $_16$sroa$0$i$i$i$sroa$0$0$src$i$sroa$0$0$$sroa_cast26$i$i$i$sroa_cast$i$i$i$i = $bucket1$sroa$0$sroa$6$0$i$i$i$i$i$i;
                 $1247 = $_16$sroa$0$i$i$i$sroa$0$0$src$i$sroa$0$0$$sroa_cast26$i$i$i$sroa_cast$i$i$i$i;
                 $1248 = $1247;
                 $1249 = HEAP32[$1248>>2]|0;
                 $1250 = (($1247) + 4)|0;
                 $1251 = $1250;
                 $1252 = HEAP32[$1251>>2]|0;
                 $_16$sroa$0$i$i$i$sroa$4$0$src$i$sroa$0$0$$sroa_cast26$i$i$i$sroa_idx$i$i$i$i = ((($src$i$sroa$0$0$$sroa_cast26$i$i$i$i$i$i$i)) + 8|0);
                 $_16$sroa$0$i$i$i$sroa$4$0$copyload$i$i$i$i = HEAP32[$_16$sroa$0$i$i$i$sroa$4$0$src$i$sroa$0$0$$sroa_cast26$i$i$i$sroa_idx$i$i$i$i>>2]|0;
                 $_16$sroa$0$i$i$i$sroa$5$0$src$i$sroa$0$0$$sroa_cast26$i$i$i$sroa_idx$i$i$i$i = ((($src$i$sroa$0$0$$sroa_cast26$i$i$i$i$i$i$i)) + 12|0);
                 $_16$sroa$0$i$i$i$sroa$5$0$copyload$i$i$i$i = HEAP32[$_16$sroa$0$i$i$i$sroa$5$0$src$i$sroa$0$0$$sroa_cast26$i$i$i$sroa_idx$i$i$i$i>>2]|0;
                 $src$i$sroa$4$0$$sroa_idx30$i$i$i$i$i$i$i = ((($1246)) + 16|0);
                 $src$i$sroa$4$0$copyload$i$i$i$i$i$i$i = HEAP32[$src$i$sroa$4$0$$sroa_idx30$i$i$i$i$i$i$i>>2]|0;
                 $src$i$sroa$5$0$$sroa_idx32$i$i$i$i$i$i$i = ((($1246)) + 20|0);
                 $src$i$sroa$5$0$copyload$i$i$i$i$i$i$i = HEAP32[$src$i$sroa$5$0$$sroa_idx32$i$i$i$i$i$i$i>>2]|0;
                 $1253 = $_16$sroa$0$i$i$i$sroa$0$0$src$i$sroa$0$0$$sroa_cast26$i$i$i$sroa_cast$i$i$i$i;
                 $1254 = $1253;
                 HEAP32[$1254>>2] = $1255;
                 $1256 = (($1253) + 4)|0;
                 $1257 = $1256;
                 HEAP32[$1257>>2] = $1258;
                 HEAP32[$_16$sroa$0$i$i$i$sroa$4$0$src$i$sroa$0$0$$sroa_cast26$i$i$i$sroa_idx$i$i$i$i>>2] = $key$i$i$sroa$6$0$i$i$i$i;
                 HEAP32[$_16$sroa$0$i$i$i$sroa$5$0$src$i$sroa$0$0$$sroa_cast26$i$i$i$sroa_idx$i$i$i$i>>2] = $key$i$i$sroa$7$0$i$i$i$i;
                 HEAP32[$src$i$sroa$4$0$$sroa_idx30$i$i$i$i$i$i$i>>2] = $val$sroa$0$0$i$i$i$i$i$i;
                 HEAP32[$src$i$sroa$5$0$$sroa_idx32$i$i$i$i$i$i$i>>2] = $val$sroa$6$0$i$i$i$i$i$i;
                 $$idx$val$i$i$i$i$i$i$i$i = HEAP32[$$idx$i$i$i162$i>>2]|0;
                 $1259 = (($$idx$val$i$i$i$i$i$i$i$i) + -1)|0;
                 $1260 = (1 - ($$idx$val$i$i$i$i$i$i$i$i))|0;
                 $bucket1$sroa$0$sroa$0$1$i$i$i$i$i$i = $bucket1$sroa$0$sroa$0$0$i$i$i$i$i$i;$bucket1$sroa$0$sroa$6$1$i$i$i$i$i$i = $bucket1$sroa$0$sroa$6$0$i$i$i$i$i$i;$bucket1$sroa$9$1$i$i$i$i$i$i = $bucket1$sroa$9$0$i$i$i$i$i$i;
                 while(1) {
                  $1261 = (($bucket1$sroa$9$1$i$i$i$i$i$i) + 1)|0;
                  $1262 = $1261 & $1259;
                  $1263 = ($1262|0)==(0);
                  $dist$0$i$i$i$i$i$i$i$i = $1263 ? $1260 : 1;
                  $1264 = $bucket1$sroa$0$sroa$0$1$i$i$i$i$i$i;
                  $1265 = $bucket1$sroa$0$sroa$6$1$i$i$i$i$i$i;
                  $1266 = (($1264) + ($dist$0$i$i$i$i$i$i$i$i<<3)|0);
                  $1267 = (($1265) + (($dist$0$i$i$i$i$i$i$i$i*24)|0)|0);
                  $1268 = $1267;
                  $1269 = $1266;
                  $1270 = $1269;
                  $1271 = HEAP32[$1270>>2]|0;
                  $1272 = (($1269) + 4)|0;
                  $1273 = $1272;
                  $1274 = HEAP32[$1273>>2]|0;
                  $1275 = ($1271|0)==(0);
                  $1276 = ($1274|0)==(0);
                  $1277 = $1275 & $1276;
                  $1278 = $1266;
                  if ($1277) {
                   break L573;
                  }
                  $1279 = (($1261) - ($1271))|0;
                  $1280 = $1279 & $1259;
                  $1281 = (($1261) - ($1280))|0;
                  $1282 = ($ib$0$i$i$i$i$i$i>>>0)<($1281>>>0);
                  if ($1282) {
                   $1242 = $1236;$1245 = $1239;$1255 = $1249;$1258 = $1252;$bucket1$sroa$0$sroa$0$0$i$i$i$i$i$i = $1278;$bucket1$sroa$0$sroa$6$0$i$i$i$i$i$i = $1268;$bucket1$sroa$9$0$i$i$i$i$i$i = $1261;$ib$0$i$i$i$i$i$i = $1281;$key$i$i$sroa$6$0$i$i$i$i = $_16$sroa$0$i$i$i$sroa$4$0$copyload$i$i$i$i;$key$i$i$sroa$7$0$i$i$i$i = $_16$sroa$0$i$i$i$sroa$5$0$copyload$i$i$i$i;$val$sroa$0$0$i$i$i$i$i$i = $src$i$sroa$4$0$copyload$i$i$i$i$i$i$i;$val$sroa$6$0$i$i$i$i$i$i = $src$i$sroa$5$0$copyload$i$i$i$i$i$i$i;
                   continue L573;
                  } else {
                   $bucket1$sroa$0$sroa$0$1$i$i$i$i$i$i = $1278;$bucket1$sroa$0$sroa$6$1$i$i$i$i$i$i = $1268;$bucket1$sroa$9$1$i$i$i$i$i$i = $1261;
                  }
                 }
                }
                $1283 = $1266;
                $1284 = $1283;
                HEAP32[$1284>>2] = $1236;
                $1285 = (($1283) + 4)|0;
                $1286 = $1285;
                HEAP32[$1286>>2] = $1239;
                $1287 = $1267;
                $1288 = $1287;
                HEAP32[$1288>>2] = $1249;
                $1289 = (($1287) + 4)|0;
                $1290 = $1289;
                HEAP32[$1290>>2] = $1252;
                $key$i$i$i$sroa$4$0$_16$sroa$0$0$$sroa_cast5$i$i$i$sroa_idx152$i$i$i$i = (((($1265) + (($dist$0$i$i$i$i$i$i$i$i*24)|0)|0)) + 8|0);
                HEAP32[$key$i$i$i$sroa$4$0$_16$sroa$0$0$$sroa_cast5$i$i$i$sroa_idx152$i$i$i$i>>2] = $_16$sroa$0$i$i$i$sroa$4$0$copyload$i$i$i$i;
                $key$i$i$i$sroa$5$0$_16$sroa$0$0$$sroa_cast5$i$i$i$sroa_idx154$i$i$i$i = (((($1265) + (($dist$0$i$i$i$i$i$i$i$i*24)|0)|0)) + 12|0);
                HEAP32[$key$i$i$i$sroa$5$0$_16$sroa$0$0$$sroa_cast5$i$i$i$sroa_idx154$i$i$i$i>>2] = $_16$sroa$0$i$i$i$sroa$5$0$copyload$i$i$i$i;
                $_16$sroa$4$0$$sroa_idx9$i$i$i$i$i$i$i = (((($1265) + (($dist$0$i$i$i$i$i$i$i$i*24)|0)|0)) + 16|0);
                HEAP32[$_16$sroa$4$0$$sroa_idx9$i$i$i$i$i$i$i>>2] = $src$i$sroa$4$0$copyload$i$i$i$i$i$i$i;
                $_16$sroa$5$0$$sroa_idx11$i$i$i$i$i$i$i = (((($1265) + (($dist$0$i$i$i$i$i$i$i$i*24)|0)|0)) + 20|0);
                HEAP32[$_16$sroa$5$0$$sroa_idx11$i$i$i$i$i$i$i>>2] = $src$i$sroa$5$0$copyload$i$i$i$i$i$i$i;
                label = 453;
               }
              } while(0);
              if ((label|0) == 451) {
               label = 0;
               $1291 = (HEAPF32[tempDoublePtr>>2]=$_16$sroa$6$0$copyload$i$i$i,HEAP32[tempDoublePtr>>2]|0);
               $1292 = $1291;
               $1293 = $_10$sroa$18$0$ph$in$ph$i$i$i$i;
               $1294 = $1293;
               HEAP32[$1294>>2] = $1048;
               $1295 = (($1293) + 4)|0;
               $1296 = $1295;
               HEAP32[$1296>>2] = $1049;
               $1297 = $_10$sroa$21$0$ph$ph$i$i$i$i;
               $_16$sroa$0$0$$sroa_cast3$i$i$i$i$i$i = $_10$sroa$21$0$ph$ph$i$i$i$i;
               $key$i3$i$sroa$0$0$_16$sroa$0$0$$sroa_cast3$i$i$sroa_cast$i$i$i$i = $_10$sroa$21$0$ph$ph$i$i$i$i;
               $1298 = $key$i3$i$sroa$0$0$_16$sroa$0$0$$sroa_cast3$i$i$sroa_cast$i$i$i$i;
               $1299 = $1298;
               HEAP32[$1299>>2] = $_16$sroa$0$0$copyload$i$i$i;
               $1300 = (($1298) + 4)|0;
               $1301 = $1300;
               HEAP32[$1301>>2] = $_16$sroa$4$0$copyload$i$i$i;
               $key$i3$i$sroa$4$0$_16$sroa$0$0$$sroa_cast3$i$i$sroa_idx$i$i$i$i = ((($_16$sroa$0$0$$sroa_cast3$i$i$i$i$i$i)) + 8|0);
               HEAPF32[$key$i3$i$sroa$4$0$_16$sroa$0$0$$sroa_cast3$i$i$sroa_idx$i$i$i$i>>2] = $_16$sroa$5$0$copyload$i$i$i;
               $key$i3$i$sroa$5$0$_16$sroa$0$0$$sroa_cast3$i$i$sroa_idx$i$i$i$i = ((($_16$sroa$0$0$$sroa_cast3$i$i$i$i$i$i)) + 12|0);
               HEAP32[$key$i3$i$sroa$5$0$_16$sroa$0$0$$sroa_cast3$i$i$sroa_idx$i$i$i$i>>2] = $1292;
               $_16$sroa$4$0$$sroa_idx7$i$i$i$i$i$i = ((($1297)) + 16|0);
               HEAP32[$_16$sroa$4$0$$sroa_idx7$i$i$i$i$i$i>>2] = $_19$sroa$0$0$iter$sroa$6$0824$i;
               $_16$sroa$5$0$$sroa_idx9$i$i$i$i$i$i = ((($1297)) + 20|0);
               HEAP32[$_16$sroa$5$0$$sroa_idx9$i$i$i$i$i$i>>2] = $$sink$i$i$i$i;
               label = 453;
              }
              if ((label|0) == 453) {
               label = 0;
               $storemerge$in$i$i$i = HEAP32[$$idx$i$i$i$i$i>>2]|0;
               $storemerge$i$i$i = (($storemerge$in$i$i$i) + 1)|0;
               HEAP32[$$idx$i$i$i$i$i>>2] = $storemerge$i$i$i;
              }
             }
             $1309 = ($iter$sroa$0$0$825$i|0)==($962|0);
             $1310 = ((($iter$sroa$0$0$825$i)) + 40|0);
             $_19$sroa$0$0$iter$sroa$6$0$i = $1309 ? $_19$sroa$0$0$iter$sroa$6$0824$i : $iter$sroa$6$0$826$i;
             $iter$sroa$0$0$$i = $1309 ? $iter$sroa$0$0$825$i : $1310;
             $1311 = $1309&1;
             $1312 = $1311 ^ 1;
             $iter$sroa$6$0$$i = (($1312) + ($iter$sroa$6$0$826$i))|0;
             $switchtmp385$i = ($iter$sroa$0$0$825$i|0)==(0|0);
             $switchtmp$i = $1309 | $switchtmp385$i;
             if ($switchtmp$i) {
              $2599 = $collector$idx$val;$iter2$sroa$0$0$ph821$i = $963;
              label = 485;
              break;
             } else {
              $iter$sroa$0$0823$i$phi = $iter$sroa$0$0$825$i;$_19$sroa$0$0$iter$sroa$6$0824$i = $_19$sroa$0$0$iter$sroa$6$0$i;$iter$sroa$0$0$825$i = $iter$sroa$0$0$$i;$iter$sroa$6$0$826$i = $iter$sroa$6$0$$i;$iter$sroa$0$0823$i = $iter$sroa$0$0823$i$phi;
             }
            }
            L585:             switch (label|0) {
             case 407: {
              __THREW__ = 0;
              invoke_viii(225,(11156|0),16,(5740|0));
              $1060 = __THREW__; __THREW__ = 0;
              label = 872;
              break;
             }
             case 409: {
              __THREW__ = 0;
              invoke_vii(219,(11135|0),21);
              $1067 = __THREW__; __THREW__ = 0;
              label = 872;
              break;
             }
             case 411: {
              __THREW__ = 0;
              invoke_viii(225,(11956|0),50,(5764|0));
              $1070 = __THREW__; __THREW__ = 0;
              label = 872;
              break;
             }
             case 413: {
              __THREW__ = 0;
              invoke_viii(225,(11889|0),67,(5776|0));
              $1074 = __THREW__; __THREW__ = 0;
              label = 872;
              break;
             }
             case 427: {
              __THREW__ = 0;
              invoke_viii(225,(11841|0),37,(5752|0));
              $1140 = __THREW__; __THREW__ = 0;
              $1141 = ___cxa_find_matching_catch_2()|0;
              $1142 = tempRet0;
              $personalityslot$sroa$0$1336$i$i$i$i$i = $1141;$personalityslot$sroa$6$1335$i$i$i$i$i = $1142;
              label = 434;
              break;
             }
             case 433: {
              $1166 = $left_val$i$i$i$i$i;
              $1167 = $right_val$i$i$i$i$i;
              HEAP32[$_112$i$i$i$i$i>>2] = $1166;
              $1168 = ((($_112$i$i$i$i$i)) + 4|0);
              HEAP32[$1168>>2] = (258);
              $1169 = ((($_112$i$i$i$i$i)) + 8|0);
              HEAP32[$1169>>2] = $1167;
              $1170 = ((($_112$i$i$i$i$i)) + 12|0);
              HEAP32[$1170>>2] = (258);
              HEAP32[$_107$i$i$i$i$i>>2] = (5800);
              $1171 = ((($_107$i$i$i$i$i)) + 4|0);
              HEAP32[$1171>>2] = 3;
              $_6$sroa$0$0$$sroa_idx$i$i$i$i$i$i = ((($_107$i$i$i$i$i)) + 8|0);
              HEAP32[$_6$sroa$0$0$$sroa_idx$i$i$i$i$i$i>>2] = 0;
              $1172 = ((($_107$i$i$i$i$i)) + 16|0);
              HEAP32[$1172>>2] = $_112$i$i$i$i$i;
              $1173 = ((($_107$i$i$i$i$i)) + 20|0);
              HEAP32[$1173>>2] = 2;
              __THREW__ = 0;
              invoke_vii(259,($_107$i$i$i$i$i|0),(5788|0));
              $1174 = __THREW__; __THREW__ = 0;
              $1175 = ___cxa_find_matching_catch_2()|0;
              $1176 = tempRet0;
              $personalityslot$sroa$0$1336$i$i$i$i$i = $1175;$personalityslot$sroa$6$1335$i$i$i$i$i = $1176;
              label = 434;
              break;
             }
             case 435: {
              $1177 = ___cxa_find_matching_catch_2()|0;
              $1178 = tempRet0;
              $personalityslot$sroa$0$0$i$i$i$i$i = $1177;$personalityslot$sroa$6$0$i$i$i$i$i = $1178;
              label = 415;
              break;
             }
             case 445: {
              __THREW__ = 0;
              invoke_viii(225,(10157|0),40,(5824|0));
              $1229 = __THREW__; __THREW__ = 0;
              label = 872;
              break;
             }
             case 485: {
              L586: while(1) {
               label = 0;
               $2600 = $2599;$iter2$sroa$0$0$ph412819$i = $iter2$sroa$0$0$ph821$i;
               L588: while(1) {
                $1314 = $2600;$iter2$sroa$0$0817$i = $iter2$sroa$0$0$ph412819$i;
                L590: while(1) {
                 $1313 = ((($1314)) + 40|0);
                 $1315 = $1313;
                 $1316 = $iter2$sroa$0$0817$i;
                 $1317 = $iter2$sroa$0$0817$i;
                 $1318 = HEAP32[$1317>>2]|0;
                 $trunc$i = $1318&255;
                 $trunc$i$clear = $trunc$i & 3;
                 switch ($trunc$i$clear<<24>>24) {
                 case 2:  {
                  break L588;
                  break;
                 }
                 case 1:  {
                  break L590;
                  break;
                 }
                 case 0:  {
                  break;
                 }
                 default: {
                  label = 874;
                  break L586;
                 }
                 }
                 $1319 = ((($1316)) + 4|0);
                 $$idx87$val$i = HEAP32[$1319>>2]|0;
                 $1320 = ((($$idx87$val$i)) + 8|0);
                 $1321 = HEAP32[$1320>>2]|0;
                 $cond$i$i$i$i = ($1321|0)==(0);
                 if (!($cond$i$i$i$i)) {
                  label = 458;
                  break L586;
                 }
                 $1323 = ((($1316)) + 8|0);
                 $1324 = ((($$idx87$val$i)) + 124|0);
                 HEAP32[$1324>>2] = -2;
                 HEAP32[$1320>>2] = 0;
                 $$idx$val$i65 = HEAP32[$1323>>2]|0;
                 $1325 = ((($$idx$val$i65)) + 8|0);
                 $1326 = HEAP32[$1325>>2]|0;
                 $cond$i$i$i190$i = ($1326|0)==(0);
                 if (!($cond$i$i$i190$i)) {
                  label = 460;
                  break L586;
                 }
                 $1328 = ((($$idx$val$i65)) + 124|0);
                 HEAP32[$1328>>2] = -2;
                 HEAP32[$1325>>2] = 0;
                 $1329 = ($1313|0)==($962|0);
                 if ($1329) {
                  label = 486;
                  break L586;
                 } else {
                  $1314 = $1313;$iter2$sroa$0$0817$i = $1315;
                 }
                }
                $1330 = ((($1316)) + 4|0);
                $$idx96$val$i = HEAP32[$1330>>2]|0;
                $1331 = ((($$idx96$val$i)) + 8|0);
                $1332 = HEAP32[$1331>>2]|0;
                $cond$i$i$i197$i = ($1332|0)==(-1);
                if ($cond$i$i$i197$i) {
                 label = 463;
                 break L586;
                }
                $1336 = (($1332) + 1)|0;
                HEAP32[$1331>>2] = $1336;
                $1337 = ((($$idx96$val$i)) + 16|0);
                $1338 = HEAP32[$1337>>2]|0;
                $switch20tmp$i = ($1338|0)==(0|0);
                if (!($switch20tmp$i)) {
                 $1339 = ((($1338)) + 8|0);
                 $1340 = HEAP32[$1339>>2]|0;
                 $cond$i$i$i201$i = ($1340|0)==(0);
                 if (!($cond$i$i$i201$i)) {
                  label = 466;
                  break L586;
                 }
                 $1342 = ((($1338)) + 124|0);
                 HEAP32[$1342>>2] = -2;
                 HEAP32[$1339>>2] = 0;
                }
                $1343 = ((($$idx96$val$i)) + 28|0);
                $1344 = HEAP32[$1343>>2]|0;
                $switch21tmp$i = ($1344|0)==(0|0);
                if (!($switch21tmp$i)) {
                 $1345 = ((($1344)) + 8|0);
                 $1346 = HEAP32[$1345>>2]|0;
                 $cond$i$i$i210$i = ($1346|0)==(0);
                 if (!($cond$i$i$i210$i)) {
                  label = 470;
                  break L586;
                 }
                 $1348 = ((($1344)) + 124|0);
                 HEAP32[$1348>>2] = -2;
                 HEAP32[$1345>>2] = 0;
                }
                $1349 = HEAP32[$1331>>2]|0;
                $1350 = (($1349) + -1)|0;
                HEAP32[$1331>>2] = $1350;
                $1351 = ($1313|0)==($962|0);
                if ($1351) {
                 label = 486;
                 break L586;
                } else {
                 $2600 = $1313;$iter2$sroa$0$0$ph412819$i = $1315;
                }
               }
               $1352 = ((($1316)) + 4|0);
               $$idx98$val$i = HEAP32[$1352>>2]|0;
               $1353 = ((($$idx98$val$i)) + 8|0);
               $1354 = HEAP32[$1353>>2]|0;
               $cond$i$i$i217$i = ($1354|0)==(-1);
               if ($cond$i$i$i217$i) {
                label = 475;
                break;
               }
               $1358 = (($1354) + 1)|0;
               HEAP32[$1353>>2] = $1358;
               $1359 = ((($$idx98$val$i)) + 16|0);
               $1360 = HEAP32[$1359>>2]|0;
               $switch22tmp$i = ($1360|0)==(0|0);
               if (!($switch22tmp$i)) {
                $1361 = ((($1360)) + 8|0);
                $1362 = HEAP32[$1361>>2]|0;
                $cond$i$i$i221$i = ($1362|0)==(0);
                if (!($cond$i$i$i221$i)) {
                 label = 478;
                 break;
                }
                $1364 = ((($1360)) + 124|0);
                HEAP32[$1364>>2] = -2;
                HEAP32[$1361>>2] = 0;
               }
               $1365 = ((($$idx98$val$i)) + 44|0);
               $1366 = HEAP32[$1365>>2]|0;
               $switch23tmp$i = ($1366|0)==(0|0);
               if (!($switch23tmp$i)) {
                $1367 = ((($1366)) + 8|0);
                $1368 = HEAP32[$1367>>2]|0;
                $cond$i$i$i230$i = ($1368|0)==(0);
                if (!($cond$i$i$i230$i)) {
                 label = 482;
                 break;
                }
                $1370 = ((($1366)) + 124|0);
                HEAP32[$1370>>2] = -2;
                HEAP32[$1367>>2] = 0;
               }
               $1371 = HEAP32[$1353>>2]|0;
               $1372 = (($1371) + -1)|0;
               HEAP32[$1353>>2] = $1372;
               $1373 = ($1313|0)==($962|0);
               if ($1373) {
                label = 486;
                break;
               } else {
                $2599 = $1313;$iter2$sroa$0$0$ph821$i = $1315;
                label = 485;
               }
              }
              switch (label|0) {
               case 458: {
                __THREW__ = 0;
                invoke_v(212);
                $1322 = __THREW__; __THREW__ = 0;
                label = 872;
                break L585;
                break;
               }
               case 460: {
                __THREW__ = 0;
                invoke_v(212);
                $1327 = __THREW__; __THREW__ = 0;
                label = 872;
                break L585;
                break;
               }
               case 463: {
                __THREW__ = 0;
                invoke_v(221);
                $1333 = __THREW__; __THREW__ = 0;
                $1334 = ___cxa_find_matching_catch_2()|0;
                $1335 = tempRet0;
                $personalityslot$sroa$0$1$i = $1334;$personalityslot$sroa$16$1$i = $1335;
                label = 850;
                break L585;
                break;
               }
               case 466: {
                __THREW__ = 0;
                invoke_v(212);
                $1341 = __THREW__; __THREW__ = 0;
                label = 865;
                break;
               }
               case 470: {
                __THREW__ = 0;
                invoke_v(212);
                $1347 = __THREW__; __THREW__ = 0;
                label = 865;
                break;
               }
               case 475: {
                __THREW__ = 0;
                invoke_v(221);
                $1355 = __THREW__; __THREW__ = 0;
                $1356 = ___cxa_find_matching_catch_2()|0;
                $1357 = tempRet0;
                $personalityslot$sroa$0$1$i = $1356;$personalityslot$sroa$16$1$i = $1357;
                label = 850;
                break L585;
                break;
               }
               case 478: {
                __THREW__ = 0;
                invoke_v(212);
                $1363 = __THREW__; __THREW__ = 0;
                label = 866;
                break;
               }
               case 482: {
                __THREW__ = 0;
                invoke_v(212);
                $1369 = __THREW__; __THREW__ = 0;
                label = 866;
                break;
               }
               case 486: {
                HEAP32[$id$i>>2] = 0;
                HEAP32[$joints$i>>2] = 1;
                $1374 = ((($joints$i)) + 4|0);
                HEAP32[$1374>>2] = 0;
                $1375 = ((($joints$i)) + 8|0);
                HEAP32[$1375>>2] = 0;
                $2601 = (1);$2602 = 0;$_149$sroa$0$0$ph$i = 0;$iter4$sroa$0$0$ph$i = $collector$idx$val;$iter4$sroa$6$0$ph$i = 0;
                L617: while(1) {
                 $2603 = $2601;$_149$sroa$0$0$ph404$i = $_149$sroa$0$0$ph$i;$iter4$sroa$0$0$ph403$i = $iter4$sroa$0$0$ph$i;$iter4$sroa$6$0$ph402$i = $iter4$sroa$6$0$ph$i;$joints$idx94$val$i = $2602;
                 L619: while(1) {
                  $_149$sroa$0$0$i = $_149$sroa$0$0$ph404$i;$iter4$sroa$0$0$i = $iter4$sroa$0$0$ph403$i;$iter4$sroa$6$0$i = $iter4$sroa$6$0$ph402$i;
                  L621: while(1) {
                   $1376 = ($iter4$sroa$0$0$i|0)==($962|0);
                   $1377 = ((($iter4$sroa$0$0$i)) + 40|0);
                   $1378 = $1376&1;
                   $1379 = $1378 ^ 1;
                   $iter4$sroa$6$0$$i = (($1379) + ($iter4$sroa$6$0$i))|0;
                   $iter4$sroa$0$0$$i = $1376 ? $iter4$sroa$0$0$i : $1377;
                   $_149$sroa$0$0$iter4$sroa$6$0$i = $1376 ? $_149$sroa$0$0$i : $iter4$sroa$6$0$i;
                   $switch24tmp386$i = ($iter4$sroa$0$0$i|0)==(0|0);
                   $switch24tmp$i = $1376 | $switch24tmp386$i;
                   if ($switch24tmp$i) {
                    label = 513;
                    break L617;
                   }
                   $1380 = HEAP32[$iter4$sroa$0$0$i>>2]|0;
                   $trunc86$i = $1380&255;
                   $trunc86$i$clear = $trunc86$i & 3;
                   switch ($trunc86$i$clear<<24>>24) {
                   case 1:  {
                    break L619;
                    break;
                   }
                   case 2:  {
                    break L621;
                    break;
                   }
                   case 0:  {
                    break;
                   }
                   default: {
                    label = 874;
                    break L617;
                   }
                   }
                   $1381 = ((($iter4$sroa$0$0$i)) + 4|0);
                   $$idx104$val$i = HEAP32[$1381>>2]|0;
                   __THREW__ = 0;
                   invoke_viii(260,($$idx104$val$i|0),($bodies$i|0),($id$i|0));
                   $1382 = __THREW__; __THREW__ = 0;
                   $1383 = $1382&1;
                   if ($1383) {
                    label = 876;
                    break L617;
                   }
                   $1390 = ((($iter4$sroa$0$0$i)) + 8|0);
                   $$idx103$val$i = HEAP32[$1390>>2]|0;
                   __THREW__ = 0;
                   invoke_viii(260,($$idx103$val$i|0),($bodies$i|0),($id$i|0));
                   $1391 = __THREW__; __THREW__ = 0;
                   $1392 = $1391&1;
                   if ($1392) {
                    label = 876;
                    break L617;
                   } else {
                    $_149$sroa$0$0$i = $_149$sroa$0$0$iter4$sroa$6$0$i;$iter4$sroa$0$0$i = $iter4$sroa$0$0$$i;$iter4$sroa$6$0$i = $iter4$sroa$6$0$$i;
                   }
                  }
                  $$idx$val$i245$i = HEAP32[$1374>>2]|0;
                  $1387 = ($joints$idx94$val$i|0)==($$idx$val$i245$i|0);
                  if ($1387) {
                   __THREW__ = 0;
                   invoke_vi(261,($joints$i|0));
                   $1388 = __THREW__; __THREW__ = 0;
                   $1389 = $1388&1;
                   if ($1389) {
                    label = 877;
                    break L617;
                   }
                   $$pre$i246$i = HEAP32[$1375>>2]|0;
                   $$pre$i = HEAP32[$joints$i>>2]|0;
                   $1415 = $$pre$i;$1416 = $$pre$i246$i;
                  } else {
                   $1415 = $2603;$1416 = $joints$idx94$val$i;
                  }
                  $1414 = (($1415) + ($1416<<2)|0);
                  HEAP32[$1414>>2] = $_149$sroa$0$0$iter4$sroa$6$0$i;
                  $1417 = HEAP32[$1375>>2]|0;
                  $1418 = (($1417) + 1)|0;
                  HEAP32[$1375>>2] = $1418;
                  $1419 = ((($iter4$sroa$0$0$i)) + 4|0);
                  $$idx97$val$i = HEAP32[$1419>>2]|0;
                  $1420 = ((($$idx97$val$i)) + 8|0);
                  $1421 = HEAP32[$1420>>2]|0;
                  $cond$i$i$i258$i = ($1421|0)==(-1);
                  if ($cond$i$i$i258$i) {
                   label = 507;
                   break L617;
                  }
                  $1425 = (($1421) + 1)|0;
                  HEAP32[$1420>>2] = $1425;
                  $1426 = ((($$idx97$val$i)) + 16|0);
                  $1427 = HEAP32[$1426>>2]|0;
                  $switch27tmp$i = ($1427|0)==(0|0);
                  if (!($switch27tmp$i)) {
                   __THREW__ = 0;
                   invoke_viii(260,($1427|0),($bodies$i|0),($id$i|0));
                   $1428 = __THREW__; __THREW__ = 0;
                   $1429 = $1428&1;
                   if ($1429) {
                    label = 870;
                    break L617;
                   }
                  }
                  $1430 = ((($$idx97$val$i)) + 44|0);
                  $1431 = HEAP32[$1430>>2]|0;
                  $switch28tmp$i = ($1431|0)==(0|0);
                  if (!($switch28tmp$i)) {
                   __THREW__ = 0;
                   invoke_viii(260,($1431|0),($bodies$i|0),($id$i|0));
                   $1432 = __THREW__; __THREW__ = 0;
                   $1433 = $1432&1;
                   if ($1433) {
                    label = 870;
                    break L617;
                   }
                  }
                  $1434 = HEAP32[$1420>>2]|0;
                  $1435 = (($1434) + -1)|0;
                  HEAP32[$1420>>2] = $1435;
                  $2603 = $1415;$_149$sroa$0$0$ph404$i = $_149$sroa$0$0$iter4$sroa$6$0$i;$iter4$sroa$0$0$ph403$i = $iter4$sroa$0$0$$i;$iter4$sroa$6$0$ph402$i = $iter4$sroa$6$0$$i;$joints$idx94$val$i = $1418;
                 }
                 $$idx$val$i241$i = HEAP32[$1374>>2]|0;
                 $1384 = ($joints$idx94$val$i|0)==($$idx$val$i241$i|0);
                 if ($1384) {
                  __THREW__ = 0;
                  invoke_vi(261,($joints$i|0));
                  $1385 = __THREW__; __THREW__ = 0;
                  $1386 = $1385&1;
                  if ($1386) {
                   label = 878;
                   break;
                  }
                  $$pre$i$i = HEAP32[$1375>>2]|0;
                  $1395 = $$pre$i$i;
                 } else {
                  $1395 = $joints$idx94$val$i;
                 }
                 $1393 = HEAP32[$joints$i>>2]|0;
                 $1394 = (($1393) + ($1395<<2)|0);
                 HEAP32[$1394>>2] = $_149$sroa$0$0$iter4$sroa$6$0$i;
                 $1396 = (($1395) + 1)|0;
                 HEAP32[$1375>>2] = $1396;
                 $1397 = ((($iter4$sroa$0$0$i)) + 4|0);
                 $$idx95$val$i = HEAP32[$1397>>2]|0;
                 $1398 = ((($$idx95$val$i)) + 8|0);
                 $1399 = HEAP32[$1398>>2]|0;
                 $cond$i$i$i251$i = ($1399|0)==(-1);
                 if ($cond$i$i$i251$i) {
                  label = 500;
                  break;
                 }
                 $1403 = (($1399) + 1)|0;
                 HEAP32[$1398>>2] = $1403;
                 $1404 = ((($$idx95$val$i)) + 16|0);
                 $1405 = HEAP32[$1404>>2]|0;
                 $switch25tmp$i = ($1405|0)==(0|0);
                 if (!($switch25tmp$i)) {
                  __THREW__ = 0;
                  invoke_viii(260,($1405|0),($bodies$i|0),($id$i|0));
                  $1406 = __THREW__; __THREW__ = 0;
                  $1407 = $1406&1;
                  if ($1407) {
                   label = 869;
                   break;
                  }
                 }
                 $1408 = ((($$idx95$val$i)) + 28|0);
                 $1409 = HEAP32[$1408>>2]|0;
                 $switch26tmp$i = ($1409|0)==(0|0);
                 if (!($switch26tmp$i)) {
                  __THREW__ = 0;
                  invoke_viii(260,($1409|0),($bodies$i|0),($id$i|0));
                  $1410 = __THREW__; __THREW__ = 0;
                  $1411 = $1410&1;
                  if ($1411) {
                   label = 869;
                   break;
                  }
                 }
                 $1412 = HEAP32[$1398>>2]|0;
                 $1413 = (($1412) + -1)|0;
                 HEAP32[$1398>>2] = $1413;
                 $2601 = $1393;$2602 = $1396;$_149$sroa$0$0$ph$i = $_149$sroa$0$0$iter4$sroa$6$0$i;$iter4$sroa$0$0$ph$i = $iter4$sroa$0$0$$i;$iter4$sroa$6$0$ph$i = $iter4$sroa$6$0$$i;
                }
                L650: do {
                 if ((label|0) == 500) {
                  __THREW__ = 0;
                  invoke_v(221);
                  $1400 = __THREW__; __THREW__ = 0;
                  $1401 = ___cxa_find_matching_catch_2()|0;
                  $1402 = tempRet0;
                  $personalityslot$sroa$0$4$i = $1401;$personalityslot$sroa$16$4$i = $1402;
                 }
                 else if ((label|0) == 507) {
                  __THREW__ = 0;
                  invoke_v(221);
                  $1422 = __THREW__; __THREW__ = 0;
                  $1423 = ___cxa_find_matching_catch_2()|0;
                  $1424 = tempRet0;
                  $personalityslot$sroa$0$4$i = $1423;$personalityslot$sroa$16$4$i = $1424;
                 }
                 else if ((label|0) == 513) {
                  $joints$idx$val$i = HEAP32[$joints$i>>2]|0;
                  $bodies$idx$val$i = HEAP32[$bodies$i>>2]|0;
                  $bodies$idx109$val$i = HEAP32[$960>>2]|0;
                  $$idx$val$i$i209$i$i = HEAP32[$$idx$i$i$i$i$i>>2]|0;
                  $1436 = (($joints$idx$val$i) + ($joints$idx94$val$i<<2)|0);
                  $1437 = $joints$idx$val$i;
                  $iter$sroa$0$0$ph$i$i = $1437;$num_joint_equations$0$ph$i$i = 0;
                  L656: while(1) {
                   $iter$sroa$0$0$i$i = $iter$sroa$0$0$ph$i$i;
                   L658: while(1) {
                    $1438 = $iter$sroa$0$0$i$i;
                    $1439 = ($1438|0)==($1436|0);
                    if ($1439) {
                     label = 517;
                     break L656;
                    }
                    $1440 = ((($1438)) + 4|0);
                    $1441 = $1440;
                    $1442 = HEAP32[$1438>>2]|0;
                    $1443 = ($1442>>>0)<($collector$idx30$val>>>0);
                    if (!($1443)) {
                     label = 815;
                     break L656;
                    }
                    $1468 = (($collector$idx$val) + (($1442*40)|0)|0);
                    $1469 = HEAP32[$1468>>2]|0;
                    $trunc$i$i = $1469&255;
                    $trunc$i$i$clear = $trunc$i$i & 3;
                    switch ($trunc$i$i$clear<<24>>24) {
                    case 0:  {
                     $iter$sroa$0$0$i$i = $1441;
                     break;
                    }
                    case 1:  {
                     label = 521;
                     break L658;
                     break;
                    }
                    case 2:  {
                     label = 522;
                     break L658;
                     break;
                    }
                    default: {
                     label = 814;
                     break L656;
                    }
                    }
                   }
                   if ((label|0) == 521) {
                    label = 0;
                    $1470 = (($num_joint_equations$0$ph$i$i) + 2)|0;
                    $iter$sroa$0$0$ph$i$i = $1441;$num_joint_equations$0$ph$i$i = $1470;
                    continue;
                   }
                   else if ((label|0) == 522) {
                    label = 0;
                    $1471 = (($num_joint_equations$0$ph$i$i) + 3)|0;
                    $iter$sroa$0$0$ph$i$i = $1441;$num_joint_equations$0$ph$i$i = $1471;
                    continue;
                   }
                  }
                  L665: do {
                   if ((label|0) == 517) {
                    $1444 = (($num_joint_equations$0$ph$i$i) + ($$idx$val$i$i209$i$i))|0;
                    $1445 = ((($0)) + 556|0);
                    $1446 = ((($_11$i$i$i)) + 60|0);
                    dest=$_11$i$i$i; stop=dest+60|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
                    HEAP32[$1446>>2] = -1;
                    $1447 = ((($_11$i$i$i)) + 64|0);
                    HEAP32[$1447>>2] = -1;
                    $1448 = ((($_11$i$i$i)) + 68|0);
                    HEAP32[$1448>>2] = 0;
                    $1449 = ((($_11$i$i$i)) + 72|0);
                    HEAPF32[$1449>>2] = 0.0;
                    __THREW__ = 0;
                    invoke_viii(262,($1445|0),($1444|0),($_11$i$i$i|0));
                    $1450 = __THREW__; __THREW__ = 0;
                    $1451 = $1450&1;
                    if ($1451) {
                     break;
                    }
                    $1452 = ((($0)) + 568|0);
                    $1453 = ((($_17$i$i$i)) + 60|0);
                    dest=$_17$i$i$i; stop=dest+60|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
                    HEAP32[$1453>>2] = -1;
                    $1454 = ((($_17$i$i$i)) + 64|0);
                    HEAP32[$1454>>2] = -1;
                    $1455 = ((($_17$i$i$i)) + 68|0);
                    HEAP32[$1455>>2] = 0;
                    $1456 = ((($_17$i$i$i)) + 72|0);
                    HEAPF32[$1456>>2] = 0.0;
                    __THREW__ = 0;
                    invoke_viii(262,($1452|0),($$idx$val$i$i209$i$i|0),($_17$i$i$i|0));
                    $1457 = __THREW__; __THREW__ = 0;
                    $1458 = $1457&1;
                    if ($1458) {
                     break;
                    }
                    $1459 = HEAP32[$$idx$i$i$i162$i>>2]|0;
                    $1460 = $1459 << 3;
                    $1461 = HEAP32[$971>>2]|0;
                    $$cast$i$i$i$i$i138$i = $1461;
                    $1462 = (($1461) + ($1460)|0);
                    $1463 = $1462;
                    $1464 = (($1461) + ($1459<<3)|0);
                    $$idx180$i$i = ((($0)) + 564|0);
                    $$idx161$i$i = ((($0)) + 576|0);
                    $1465 = ((($0)) + 544|0);
                    $$idx$i346$i$i = ((($0)) + 504|0);
                    $$idx3$i348$i$i = ((($0)) + 512|0);
                    $1466 = ((($arg$i$i$i)) + 4|0);
                    $1467 = ((($arg$i$i$i$i$i$i)) + 4|0);
                    $iter2$sroa$0$0$i$i = $$cast$i$i$i$i$i138$i;$iter2$sroa$10$0$i$i = 0;$iter2$sroa$5$0$i$i = $1463;
                    L671: while(1) {
                     $1472 = $iter2$sroa$0$0$i$i;
                     $1473 = $1472;$iter2$sroa$0$1$i$i = $iter2$sroa$0$0$i$i;$iter2$sroa$5$1$i$i = $iter2$sroa$5$0$i$i;
                     while(1) {
                      $1474 = ($1473|0)==($1464|0);
                      if ($1474) {
                       label = 527;
                       break L671;
                      }
                      $1475 = $iter2$sroa$0$1$i$i;
                      $1476 = $iter2$sroa$5$1$i$i;
                      $1477 = ((($1475)) + 8|0);
                      $1478 = ((($1476)) + 24|0);
                      $1479 = $1477;
                      $1480 = $1478;
                      $1481 = $1475;
                      $1482 = $1481;
                      $1483 = HEAP32[$1482>>2]|0;
                      $1484 = (($1481) + 4)|0;
                      $1485 = $1484;
                      $1486 = HEAP32[$1485>>2]|0;
                      $1487 = ($1483|0)==(0);
                      $1488 = ($1486|0)==(0);
                      $1489 = $1487 & $1488;
                      if ($1489) {
                       $1473 = $1477;$iter2$sroa$0$1$i$i = $1479;$iter2$sroa$5$1$i$i = $1480;
                      } else {
                       break;
                      }
                     }
                     $switch2tmp$i$i274$i$i = ($iter2$sroa$5$1$i$i|0)==(0);
                     if ($switch2tmp$i$i274$i$i) {
                      label = 527;
                      break;
                     }
                     $1494 = (($iter2$sroa$10$0$i$i) + 1)|0;
                     $1495 = ((($1476)) + 16|0);
                     $1496 = HEAP32[$1495>>2]|0;
                     $1497 = ((($1476)) + 20|0);
                     $1498 = HEAP32[$1497>>2]|0;
                     $1499 = ($1496>>>0)<($collector$idx30$val>>>0);
                     if (!($1499)) {
                      label = 816;
                      break;
                     }
                     $1500 = (($collector$idx$val) + (($1496*40)|0)|0);
                     $1501 = HEAP32[$1500>>2]|0;
                     $cond$i$i = ($1501|0)==(0);
                     if (!($cond$i$i)) {
                      $iter2$sroa$0$0$i$i = $1479;$iter2$sroa$10$0$i$i = $1494;$iter2$sroa$5$0$i$i = $1480;
                      continue;
                     }
                     $1502 = (((($collector$idx$val) + (($1496*40)|0)|0)) + 4|0);
                     $1503 = (((($collector$idx$val) + (($1496*40)|0)|0)) + 12|0);
                     $$idx149$val$i$i = HEAP32[$1502>>2]|0;
                     $1504 = ((($$idx149$val$i$i)) + 8|0);
                     $1505 = HEAP32[$1504>>2]|0;
                     $cond$i$i$i319$i$i = ($1505|0)==(-1);
                     if ($cond$i$i$i319$i$i) {
                      label = 531;
                      break;
                     }
                     $1509 = (($1505) + 1)|0;
                     HEAP32[$1504>>2] = $1509;
                     $1510 = ((($$idx149$val$i$i)) + 12|0);
                     $1511 = (((($collector$idx$val) + (($1496*40)|0)|0)) + 8|0);
                     $$idx148$val$i$i = HEAP32[$1511>>2]|0;
                     $1512 = ((($$idx148$val$i$i)) + 8|0);
                     $1513 = HEAP32[$1512>>2]|0;
                     $cond$i$i$i337$i$i = ($1513|0)==(-1);
                     if ($cond$i$i$i337$i$i) {
                      label = 535;
                      break;
                     }
                     $1517 = (($1513) + 1)|0;
                     HEAP32[$1512>>2] = $1517;
                     $1518 = ((($$idx148$val$i$i)) + 12|0);
                     $$idx180$val$i$i = HEAP32[$$idx180$i$i>>2]|0;
                     $1519 = ($$idx180$val$i$i>>>0)>($iter2$sroa$10$0$i$i>>>0);
                     if (!($1519)) {
                      label = 537;
                      break;
                     }
                     $$idx179$val$i$i = HEAP32[$1445>>2]|0;
                     $1521 = (($$idx179$val$i$i) + (($iter2$sroa$10$0$i$i*76)|0)|0);
                     $$idx160$val$i$i = HEAP32[$1452>>2]|0;
                     $$idx161$val$i$i = HEAP32[$$idx161$i$i>>2]|0;
                     $1522 = HEAP32[$1465>>2]|0;
                     $1523 = (($1522) + ($1498))|0;
                     $$idx$val$i347$i$i = HEAP32[$$idx$i346$i$i>>2]|0;
                     $$idx3$val$i349$i$i = HEAP32[$$idx3$i348$i$i>>2]|0;
                     $1524 = ($1523>>>0)<($1498>>>0);
                     if ($1524) {
                      label = 539;
                      break;
                     }
                     $1526 = ($1523>>>0)>($$idx3$val$i349$i$i>>>0);
                     if ($1526) {
                      label = 541;
                      break;
                     }
                     $1528 = (($$idx$val$i347$i$i) + ($1498<<2)|0);
                     $1529 = (((($collector$idx$val) + (($1496*40)|0)|0)) + 16|0);
                     $1530 = +HEAPF32[$1503>>2];
                     $1531 = +HEAPF32[$1529>>2];
                     $1532 = (((($collector$idx$val) + (($1496*40)|0)|0)) + 24|0);
                     $1533 = (((($collector$idx$val) + (($1496*40)|0)|0)) + 20|0);
                     $1534 = +HEAPF32[$1533>>2];
                     $1535 = +HEAPF32[$1532>>2];
                     $1536 = $1530 + $1534;
                     $1537 = $1531 + $1535;
                     $1538 = $1536 * 0.5;
                     $1539 = $1537 * 0.5;
                     $$idx4$i$i$i = (((($collector$idx$val) + (($1496*40)|0)|0)) + 32|0);
                     $1540 = ($1522|0)==(0);
                     if ($1540) {
                      label = 547;
                      break;
                     }
                     $1541 = (((($collector$idx$val) + (($1496*40)|0)|0)) + 28|0);
                     $1542 = (((($collector$idx$val) + (($1496*40)|0)|0)) + 36|0);
                     $$val3$i$i$i = +HEAPF32[$1542>>2];
                     $$idx4$val48$i$i$i = HEAP32[$$idx4$i$i$i>>2]|0;
                     $$idx$val47$i$i$i = HEAP32[$1541>>2]|0;
                     $$idx7$i355$i$i = ((($$idx149$val$i$i)) + 116|0);
                     $$idx7$val$i356$i$i = +HEAPF32[$$idx7$i355$i$i>>2];
                     $$idx6$i$i$i = ((($$idx148$val$i$i)) + 116|0);
                     $$idx6$val$i$i$i = +HEAPF32[$$idx6$i$i$i>>2];
                     $1543 = $$idx7$val$i356$i$i * $$idx6$val$i$i$i;
                     $$val$i357$i$i = +HEAPF32[$1528>>2];
                     HEAP32[$arg$i$i$i>>2] = $$idx$val47$i$i$i;
                     HEAP32[$1466>>2] = $$idx4$val48$i$i$i;
                     __ZN10nphysics2d10resolution10constraint16contact_equation24fill_velocity_constraint17h53bc1af81e480467E($arg$i$i$i,$1538,$1539,$1543,$$val3$i$i$i,$$val$i357$i$i,3.4028234663852886E+38,$1510,$1518,$1521,$958);
                     $$idx9$i$i$i = ((($$idx149$val$i$i)) + 120|0);
                     $$idx9$val$i$i$i = +HEAPF32[$$idx9$i$i$i>>2];
                     $$idx8$i358$i$i = ((($$idx148$val$i$i)) + 120|0);
                     $$idx8$val$i359$i$i = +HEAPF32[$$idx8$i358$i$i>>2];
                     $1544 = $$idx9$val$i$i$i * $$idx8$val$i359$i$i;
                     $$idx10$val49$i$i$i = HEAP32[$1541>>2]|0;
                     $$idx11$val$i$i$i = +HEAPF32[$$idx4$i$i$i>>2];
                     $1545 = -$$idx11$val$i$i$i;
                     $1546 = ($iter2$sroa$10$0$i$i>>>0)<($$idx161$val$i$i>>>0);
                     if (!($1546)) {
                      label = 544;
                      break;
                     }
                     $1548 = ($1522>>>0)>(1);
                     if (!($1548)) {
                      label = 546;
                      break;
                     }
                     $1551 = (($$idx160$val$i$i) + (($iter2$sroa$10$0$i$i*76)|0)|0);
                     $1552 = ((($1528)) + 4|0);
                     $$val1$i$i$i$i$i$i = +HEAPF32[$1552>>2];
                     HEAPF32[$arg$i$i$i$i$i$i>>2] = $1545;
                     HEAP32[$1467>>2] = $$idx10$val49$i$i$i;
                     __ZN10nphysics2d10resolution10constraint16contact_equation24fill_velocity_constraint17h53bc1af81e480467E($arg$i$i$i$i$i$i,$1538,$1539,0.0,0.0,$$val1$i$i$i$i$i$i,0.0,$1510,$1518,$1551,$958);
                     $1553 = (((($$idx160$val$i$i) + (($iter2$sroa$10$0$i$i*76)|0)|0)) + 72|0);
                     HEAPF32[$1553>>2] = $1544;
                     $1554 = (((($$idx160$val$i$i) + (($iter2$sroa$10$0$i$i*76)|0)|0)) + 68|0);
                     HEAP32[$1554>>2] = $iter2$sroa$10$0$i$i;
                     $1555 = HEAP32[$1512>>2]|0;
                     $1556 = (($1555) + -1)|0;
                     HEAP32[$1512>>2] = $1556;
                     $1557 = HEAP32[$1504>>2]|0;
                     $1558 = (($1557) + -1)|0;
                     HEAP32[$1504>>2] = $1558;
                     $iter2$sroa$0$0$i$i = $1479;$iter2$sroa$10$0$i$i = $1494;$iter2$sroa$5$0$i$i = $1480;
                    }
                    L688:                     switch (label|0) {
                     case 527: {
                      $$idx2$i$i$i = ((($0)) + 484|0);
                      $1490 = ((($error$i$i400$i$i)) + 4|0);
                      $1491 = ((($lin_axis$i$i401$i$i)) + 4|0);
                      $1492 = ((($error$i$i$i$i)) + 4|0);
                      $1493 = ((($lin_axis$i$i$i$i)) + 4|0);
                      $iter4$sroa$0$0$ph$i$i = $1437;$joint_offset$0$ph$i$i = $$idx$val$i$i209$i$i;
                      L692: while(1) {
                       $iter4$sroa$0$0$i$i = $iter4$sroa$0$0$ph$i$i;
                       L694: while(1) {
                        $1559 = $iter4$sroa$0$0$i$i;
                        $1560 = ($1559|0)==($1436|0);
                        if ($1560) {
                         label = 551;
                         break L692;
                        }
                        $1561 = ((($1559)) + 4|0);
                        $1562 = $1561;
                        $1563 = HEAP32[$1559>>2]|0;
                        $1564 = ($1563>>>0)<($collector$idx30$val>>>0);
                        if (!($1564)) {
                         label = 819;
                         break L692;
                        }
                        $1590 = (($collector$idx$val) + (($1563*40)|0)|0);
                        $1591 = HEAP32[$1590>>2]|0;
                        $trunc136$i$i = $1591&255;
                        $trunc136$i$i$clear = $trunc136$i$i & 3;
                        switch ($trunc136$i$i$clear<<24>>24) {
                        case 0:  {
                         $iter4$sroa$0$0$i$i = $1562;
                         break;
                        }
                        case 1:  {
                         label = 572;
                         break L694;
                         break;
                        }
                        case 2:  {
                         break L694;
                         break;
                        }
                        default: {
                         label = 814;
                         break L692;
                        }
                        }
                       }
                       if ((label|0) == 572) {
                        label = 0;
                        $$idx176$val$le1167$i$i = HEAP32[$$idx180$i$i>>2]|0;
                        $1592 = (((($collector$idx$val) + (($1563*40)|0)|0)) + 4|0);
                        $$idx172$val$i$i = HEAP32[$1592>>2]|0;
                        $1593 = ((($$idx172$val$i$i)) + 8|0);
                        $1594 = HEAP32[$1593>>2]|0;
                        $cond$i$i$i385$i$i = ($1594|0)==(-1);
                        if ($cond$i$i$i385$i$i) {
                         label = 573;
                         break;
                        }
                        $1600 = (($1594) + 1)|0;
                        HEAP32[$1593>>2] = $1600;
                        $$idx181$val$i$i = HEAP32[$1445>>2]|0;
                        $$idx182$val$i$i = HEAP32[$$idx180$i$i>>2]|0;
                        $1601 = ($$idx176$val$le1167$i$i>>>0)<($joint_offset$0$ph$i$i>>>0);
                        if ($1601) {
                         label = 577;
                         break;
                        }
                        $1603 = ($$idx176$val$le1167$i$i>>>0)>($$idx182$val$i$i>>>0);
                        if ($1603) {
                         label = 579;
                         break;
                        }
                        $1605 = (($$idx181$val$i$i) + (($joint_offset$0$ph$i$i*76)|0)|0);
                        $1606 = (($$idx176$val$le1167$i$i) - ($joint_offset$0$ph$i$i))|0;
                        $1607 = ((($$idx172$val$i$i)) + 16|0);
                        $1608 = HEAP32[$1607>>2]|0;
                        $switchtmp$i$i402$i$i = ($1608|0)==(0|0);
                        if ($switchtmp$i$i402$i$i) {
                         $1609 = ((($$idx172$val$i$i)) + 20|0);
                         $$idx12$val16$i$i$i$i = HEAP32[$1609>>2]|0;
                         $$idx13$i$i$i$i = ((($$idx172$val$i$i)) + 24|0);
                         $$idx13$val17$i$i$i$i = HEAP32[$$idx13$i$i$i$i>>2]|0;
                         $_13$sroa$0$0$i$i$i = $$idx12$val16$i$i$i$i;$_13$sroa$5$0$i$i$i = $$idx13$val17$i$i$i$i;
                        } else {
                         $1610 = ((($1608)) + 8|0);
                         $1611 = HEAP32[$1610>>2]|0;
                         $cond$i$i$i$i$i404$i$i = ($1611|0)==(-1);
                         if ($cond$i$i$i$i$i404$i$i) {
                          label = 583;
                          break;
                         }
                         $$idx$i$i407$i$i = ((($$idx172$val$i$i)) + 20|0);
                         $$idx$val$i$i408$i$i = +HEAPF32[$$idx$i$i407$i$i>>2];
                         $$idx10$i$i$i$i = ((($$idx172$val$i$i)) + 24|0);
                         $$idx10$val$i$i$i$i = +HEAPF32[$$idx10$i$i$i$i>>2];
                         $_5$sroa$0$0$$sroa_idx$i$i$i$i$i$i$i = ((($1608)) + 20|0);
                         $_5$sroa$0$0$copyload$i$i$i$i$i$i$i = +HEAPF32[$_5$sroa$0$0$$sroa_idx$i$i$i$i$i$i$i>>2];
                         $_5$sroa$4$0$$sroa_idx2$i$i$i$i$i$i$i = ((($1608)) + 24|0);
                         $_5$sroa$4$0$copyload$i$i$i$i$i$i$i = +HEAPF32[$_5$sroa$4$0$$sroa_idx2$i$i$i$i$i$i$i>>2];
                         $_5$sroa$5$0$$sroa_idx4$i$i$i$i$i$i$i = ((($1608)) + 28|0);
                         $_5$sroa$5$0$copyload$i$i$i$i$i$i$i = +HEAPF32[$_5$sroa$5$0$$sroa_idx4$i$i$i$i$i$i$i>>2];
                         $_5$sroa$6$0$$sroa_idx6$i$i$i$i$i$i$i = ((($1608)) + 32|0);
                         $_5$sroa$6$0$copyload$i$i$i$i$i$i$i = +HEAPF32[$_5$sroa$6$0$$sroa_idx6$i$i$i$i$i$i$i>>2];
                         $1613 = $$idx$val$i$i408$i$i * $_5$sroa$0$0$copyload$i$i$i$i$i$i$i;
                         $1614 = $$idx10$val$i$i$i$i * $_5$sroa$5$0$copyload$i$i$i$i$i$i$i;
                         $1615 = $1613 + $1614;
                         $1616 = $$idx$val$i$i408$i$i * $_5$sroa$4$0$copyload$i$i$i$i$i$i$i;
                         $1617 = $$idx10$val$i$i$i$i * $_5$sroa$6$0$copyload$i$i$i$i$i$i$i;
                         $1618 = $1616 + $1617;
                         $1619 = ((($1608)) + 36|0);
                         $1620 = ((($1608)) + 40|0);
                         $1621 = +HEAPF32[$1619>>2];
                         $1622 = +HEAPF32[$1620>>2];
                         $1623 = $1615 + $1621;
                         $1624 = $1618 + $1622;
                         $1625 = (HEAPF32[tempDoublePtr>>2]=$1623,HEAP32[tempDoublePtr>>2]|0);
                         $1626 = (HEAPF32[tempDoublePtr>>2]=$1624,HEAP32[tempDoublePtr>>2]|0);
                         $_13$sroa$0$0$i$i$i = $1625;$_13$sroa$5$0$i$i$i = $1626;
                        }
                        $1627 = ((($$idx172$val$i$i)) + 28|0);
                        $1628 = HEAP32[$1627>>2]|0;
                        $switchtmp$i3$i$i$i = ($1628|0)==(0|0);
                        if ($switchtmp$i3$i$i$i) {
                         $1629 = ((($$idx172$val$i$i)) + 32|0);
                         $$idx12$val16$i4$i$i$i = HEAP32[$1629>>2]|0;
                         $$idx13$i5$i$i$i = ((($$idx172$val$i$i)) + 36|0);
                         $$idx13$val17$i6$i$i$i = HEAP32[$$idx13$i5$i$i$i>>2]|0;
                         $_17$sroa$0$0$i$i$i = $$idx12$val16$i4$i$i$i;$_17$sroa$5$0$i$i$i = $$idx13$val17$i6$i$i$i;
                        } else {
                         $1630 = ((($1628)) + 8|0);
                         $1631 = HEAP32[$1630>>2]|0;
                         $cond$i$i$i$i8$i$i$i = ($1631|0)==(-1);
                         if ($cond$i$i$i$i8$i$i$i) {
                          label = 588;
                          break;
                         }
                         $$idx$i11$i$i$i = ((($$idx172$val$i$i)) + 32|0);
                         $$idx$val$i12$i$i$i = +HEAPF32[$$idx$i11$i$i$i>>2];
                         $$idx10$i13$i$i$i = ((($$idx172$val$i$i)) + 36|0);
                         $$idx10$val$i14$i$i$i = +HEAPF32[$$idx10$i13$i$i$i>>2];
                         $_5$sroa$0$0$$sroa_idx$i$i$i$i15$i$i$i = ((($1628)) + 20|0);
                         $_5$sroa$0$0$copyload$i$i$i$i16$i$i$i = +HEAPF32[$_5$sroa$0$0$$sroa_idx$i$i$i$i15$i$i$i>>2];
                         $_5$sroa$4$0$$sroa_idx2$i$i$i$i17$i$i$i = ((($1628)) + 24|0);
                         $_5$sroa$4$0$copyload$i$i$i$i18$i$i$i = +HEAPF32[$_5$sroa$4$0$$sroa_idx2$i$i$i$i17$i$i$i>>2];
                         $_5$sroa$5$0$$sroa_idx4$i$i$i$i19$i$i$i = ((($1628)) + 28|0);
                         $_5$sroa$5$0$copyload$i$i$i$i20$i$i$i = +HEAPF32[$_5$sroa$5$0$$sroa_idx4$i$i$i$i19$i$i$i>>2];
                         $_5$sroa$6$0$$sroa_idx6$i$i$i$i21$i$i$i = ((($1628)) + 32|0);
                         $_5$sroa$6$0$copyload$i$i$i$i22$i$i$i = +HEAPF32[$_5$sroa$6$0$$sroa_idx6$i$i$i$i21$i$i$i>>2];
                         $1633 = $$idx$val$i12$i$i$i * $_5$sroa$0$0$copyload$i$i$i$i16$i$i$i;
                         $1634 = $$idx10$val$i14$i$i$i * $_5$sroa$5$0$copyload$i$i$i$i20$i$i$i;
                         $1635 = $1633 + $1634;
                         $1636 = $$idx$val$i12$i$i$i * $_5$sroa$4$0$copyload$i$i$i$i18$i$i$i;
                         $1637 = $$idx10$val$i14$i$i$i * $_5$sroa$6$0$copyload$i$i$i$i22$i$i$i;
                         $1638 = $1636 + $1637;
                         $1639 = ((($1628)) + 36|0);
                         $1640 = ((($1628)) + 40|0);
                         $1641 = +HEAPF32[$1639>>2];
                         $1642 = +HEAPF32[$1640>>2];
                         $1643 = $1635 + $1641;
                         $1644 = $1638 + $1642;
                         $1645 = (HEAPF32[tempDoublePtr>>2]=$1643,HEAP32[tempDoublePtr>>2]|0);
                         $1646 = (HEAPF32[tempDoublePtr>>2]=$1644,HEAP32[tempDoublePtr>>2]|0);
                         $_17$sroa$0$0$i$i$i = $1645;$_17$sroa$5$0$i$i$i = $1646;
                        }
                        $$idx2$val$i$i$i = +HEAPF32[$$idx2$i$i$i>>2];
                        $1647 = (HEAP32[tempDoublePtr>>2]=$_17$sroa$0$0$i$i$i,+HEAPF32[tempDoublePtr>>2]);
                        $1648 = (HEAP32[tempDoublePtr>>2]=$_17$sroa$5$0$i$i$i,+HEAPF32[tempDoublePtr>>2]);
                        $1649 = (HEAP32[tempDoublePtr>>2]=$_13$sroa$0$0$i$i$i,+HEAPF32[tempDoublePtr>>2]);
                        $1650 = (HEAP32[tempDoublePtr>>2]=$_13$sroa$5$0$i$i$i,+HEAPF32[tempDoublePtr>>2]);
                        $1651 = $1647 - $1649;
                        $1652 = $1648 - $1650;
                        $1653 = $$idx2$val$i$i$i * $1651;
                        $1654 = $1652 * $$idx2$val$i$i$i;
                        HEAPF32[$error$i$i400$i$i>>2] = $1653;
                        HEAPF32[$1490>>2] = $1654;
                        if ($switchtmp$i$i402$i$i) {
                         $tmp_ret5$sroa$0$0$i$i417$i$i = 0;$tmp_ret5$sroa$3$0$i$i418$i$i = 0;
                        } else {
                         $1655 = ((($1608)) + 8|0);
                         $1656 = HEAP32[$1655>>2]|0;
                         $cond$i$i$i$i$i$i410$i$i = ($1656|0)==(-1);
                         if ($cond$i$i$i$i$i$i410$i$i) {
                          label = 592;
                          break;
                         }
                         $1658 = ((($1608)) + 76|0);
                         $$idx10$val16$i$i$i413$i$i = HEAP32[$1658>>2]|0;
                         $$idx11$i$i$i414$i$i = ((($1608)) + 80|0);
                         $$idx11$val17$i$i$i415$i$i = HEAP32[$$idx11$i$i$i414$i$i>>2]|0;
                         $tmp_ret5$sroa$0$0$i$i417$i$i = $$idx10$val16$i$i$i413$i$i;$tmp_ret5$sroa$3$0$i$i418$i$i = $$idx11$val17$i$i$i415$i$i;
                        }
                        $1659 = (HEAP32[tempDoublePtr>>2]=$tmp_ret5$sroa$0$0$i$i417$i$i,+HEAPF32[tempDoublePtr>>2]);
                        $1660 = (HEAP32[tempDoublePtr>>2]=$tmp_ret5$sroa$3$0$i$i418$i$i,+HEAPF32[tempDoublePtr>>2]);
                        $1661 = $1649 - $1659;
                        $1662 = $1650 - $1660;
                        if ($switchtmp$i3$i$i$i) {
                         $tmp_ret8$sroa$0$0$i$i426$i$i = 0;$tmp_ret8$sroa$3$0$i$i427$i$i = 0;
                        } else {
                         $1663 = ((($1628)) + 8|0);
                         $1664 = HEAP32[$1663>>2]|0;
                         $cond$i$i$i$i156$i$i419$i$i = ($1664|0)==(-1);
                         if ($cond$i$i$i$i156$i$i419$i$i) {
                          label = 596;
                          break;
                         }
                         $1666 = ((($1628)) + 76|0);
                         $$idx10$val16$i159$i$i422$i$i = HEAP32[$1666>>2]|0;
                         $$idx11$i160$i$i423$i$i = ((($1628)) + 80|0);
                         $$idx11$val17$i161$i$i424$i$i = HEAP32[$$idx11$i160$i$i423$i$i>>2]|0;
                         $tmp_ret8$sroa$0$0$i$i426$i$i = $$idx10$val16$i159$i$i422$i$i;$tmp_ret8$sroa$3$0$i$i427$i$i = $$idx11$val17$i161$i$i424$i$i;
                        }
                        $1667 = (HEAP32[tempDoublePtr>>2]=$tmp_ret8$sroa$0$0$i$i426$i$i,+HEAPF32[tempDoublePtr>>2]);
                        $1668 = (HEAP32[tempDoublePtr>>2]=$tmp_ret8$sroa$3$0$i$i427$i$i,+HEAPF32[tempDoublePtr>>2]);
                        $1669 = $1647 - $1667;
                        $1670 = $1648 - $1668;
                        $1671 = -$1670;
                        $1672 = -$1661;
                        $1673 = ((($1628)) + 8|0);
                        $1674 = ((($1628)) + 12|0);
                        $1675 = $1673;
                        $$idx15$i$i$i429$i$i = ((($1628)) + 124|0);
                        $1676 = ((($1608)) + 8|0);
                        $1677 = ((($1608)) + 12|0);
                        $1678 = $1676;
                        $$idx15$i182$i$i431$i$i = ((($1608)) + 124|0);
                        $1794 = 1;$iter$sroa$0$042$i$i434$i$i = 0;$opt_rb1$i$sroa$5$0$i432$i$i = 0;$opt_rb2$i$sroa$5$0$i433$i$i = 0;
                        while(1) {
                         HEAPF32[$lin_axis$i$i401$i$i>>2] = 0.0;
                         HEAPF32[$1491>>2] = 0.0;
                         $1679 = ($iter$sroa$0$042$i$i434$i$i>>>0)<($1606>>>0);
                         if (!($1679)) {
                          label = 639;
                          break L692;
                         }
                         $1680 = (($lin_axis$i$i401$i$i) + ($iter$sroa$0$042$i$i434$i$i<<2)|0);
                         HEAPF32[$1680>>2] = 1.0;
                         $1681 = (((($1605) + (($iter$sroa$0$042$i$i434$i$i*76)|0)|0)) + 60|0);
                         do {
                          if ($switchtmp$i$i402$i$i) {
                           HEAP32[$1681>>2] = -1;
                           $1708 = 0;$opt_rb1$i$sroa$5$1$i453$i$i = $opt_rb1$i$sroa$5$0$i432$i$i;
                          } else {
                           $1682 = HEAP32[$1676>>2]|0;
                           $cond$i$i$i$i175$i$i438$i$i = ($1682|0)==(-1);
                           if ($cond$i$i$i$i175$i$i438$i$i) {
                            label = 603;
                            break L692;
                           }
                           $1686 = (($1682) + 1)|0;
                           HEAP32[$1676>>2] = $1686;
                           $$idx14$val$i179$i$i442$i$i = HEAP8[$1677>>0]|0;
                           $switch$i$i180$i$i443$i$i = ($$idx14$val$i179$i$i442$i$i<<24>>24)==(1);
                           if ($switch$i$i180$i$i443$i$i) {
                            $$idx15$val$i183$i$i445$i$i = HEAP32[$$idx15$i182$i$i431$i$i>>2]|0;
                            HEAP32[$1681>>2] = $$idx15$val$i183$i$i445$i$i;
                            $1708 = $1677;$opt_rb1$i$sroa$5$1$i453$i$i = $1678;
                            break;
                           } else {
                            HEAP32[$1681>>2] = -1;
                            $1687 = HEAP32[$1676>>2]|0;
                            $1688 = (($1687) + -1)|0;
                            HEAP32[$1676>>2] = $1688;
                            $1708 = 0;$opt_rb1$i$sroa$5$1$i453$i$i = $opt_rb1$i$sroa$5$0$i432$i$i;
                            break;
                           }
                          }
                         } while(0);
                         $1689 = (((($1605) + (($iter$sroa$0$042$i$i434$i$i*76)|0)|0)) + 64|0);
                         do {
                          if ($switchtmp$i3$i$i$i) {
                           HEAP32[$1689>>2] = -1;
                           $1727 = 0;$opt_rb2$i$sroa$5$1$i466$i$i = $opt_rb2$i$sroa$5$0$i433$i$i;
                          } else {
                           $1690 = HEAP32[$1673>>2]|0;
                           $cond$i$i$i$i167$i$i456$i$i = ($1690|0)==(-1);
                           if ($cond$i$i$i$i167$i$i456$i$i) {
                            label = 611;
                            break L692;
                           }
                           $1694 = (($1690) + 1)|0;
                           HEAP32[$1673>>2] = $1694;
                           $$idx14$val$i$i$i460$i$i = HEAP8[$1674>>0]|0;
                           $switch$i$i$i$i461$i$i = ($$idx14$val$i$i$i460$i$i<<24>>24)==(1);
                           if ($switch$i$i$i$i461$i$i) {
                            $$idx15$val$i$i$i463$i$i = HEAP32[$$idx15$i$i$i429$i$i>>2]|0;
                            HEAP32[$1689>>2] = $$idx15$val$i$i$i463$i$i;
                            $1727 = $1674;$opt_rb2$i$sroa$5$1$i466$i$i = $1675;
                            break;
                           } else {
                            HEAP32[$1689>>2] = -1;
                            $1695 = HEAP32[$1673>>2]|0;
                            $1696 = (($1695) + -1)|0;
                            HEAP32[$1673>>2] = $1696;
                            $1727 = 0;$opt_rb2$i$sroa$5$1$i466$i$i = $opt_rb2$i$sroa$5$0$i433$i$i;
                            break;
                           }
                          }
                         } while(0);
                         HEAP32[$i$i141$i$i396$i$i>>2] = $iter$sroa$0$042$i$i434$i$i;
                         switch ($iter$sroa$0$042$i$i434$i$i|0) {
                         case 0:  {
                          $1725 = $1662;$_0$sroa$0$0$i$i$i474$i$i = $1671;
                          break;
                         }
                         case 1:  {
                          $1725 = $1672;$_0$sroa$0$0$i$i$i474$i$i = $1669;
                          break;
                         }
                         default: {
                          label = 617;
                          break L692;
                         }
                         }
                         $lin_axis$idx$val$i$i475$i$i = +HEAPF32[$lin_axis$i$i401$i$i>>2];
                         $lin_axis$idx85$val$i$i476$i$i = +HEAPF32[$1491>>2];
                         $switch24tmp$i$i$i477$i$i = ($1708|0)==(0|0);
                         if ($switch24tmp$i$i$i477$i$i) {
                          $dvel$0$i$i$i487$i$i = 0.0;
                         } else {
                          $1709 = ((($1708)) + 32|0);
                          $$idx$val2$i719$i$i$i479$i$i = +HEAPF32[$1709>>2];
                          $$idx1$i72$i$i$i480$i$i = ((($1708)) + 36|0);
                          $$idx1$val3$i7310$i$i$i481$i$i = +HEAPF32[$$idx1$i72$i$i$i480$i$i>>2];
                          $1710 = ((($1708)) + 72|0);
                          $1711 = ((($1708)) + 76|0);
                          $1712 = +HEAPF32[$1710>>2];
                          $1713 = +HEAPF32[$1711>>2];
                          $1714 = $1712 * 0.033333335071802139;
                          $1715 = $1713 * 0.033333335071802139;
                          $1716 = $$idx$val2$i719$i$i$i479$i$i + $1714;
                          $1717 = $$idx1$val3$i7310$i$i$i481$i$i + $1715;
                          $1718 = $lin_axis$idx$val$i$i475$i$i * $1716;
                          $1719 = $lin_axis$idx85$val$i$i476$i$i * $1717;
                          $1720 = $1718 + $1719;
                          $1721 = 0.0 - $1720;
                          $$idx$i69$i$i$i482$i$i = ((($1708)) + 40|0);
                          $$idx$val$i70$i$i$i483$i$i = +HEAPF32[$$idx$i69$i$i$i482$i$i>>2];
                          $$idx$i67$i$i$i484$i$i = ((($1708)) + 80|0);
                          $$idx$val$i68$i$i$i485$i$i = +HEAPF32[$$idx$i67$i$i$i484$i$i>>2];
                          $1722 = $$idx$val$i68$i$i$i485$i$i * 0.033333335071802139;
                          $1723 = $$idx$val$i70$i$i$i483$i$i + $1722;
                          $1724 = $1725 * $1723;
                          $1726 = $1721 + $1724;
                          $dvel$0$i$i$i487$i$i = $1726;
                         }
                         $switchtmp$i116$i$i488$i$i = ($1727|0)==(0|0);
                         if ($switchtmp$i116$i$i488$i$i) {
                          $dvel$1$i$i$i498$i$i = $dvel$0$i$i$i487$i$i;
                         } else {
                          $1728 = ((($1727)) + 32|0);
                          $$idx$val2$i11$i$i$i490$i$i = +HEAPF32[$1728>>2];
                          $$idx1$i$i$i$i491$i$i = ((($1727)) + 36|0);
                          $$idx1$val3$i12$i$i$i492$i$i = +HEAPF32[$$idx1$i$i$i$i491$i$i>>2];
                          $1729 = ((($1727)) + 72|0);
                          $1730 = ((($1727)) + 76|0);
                          $1731 = +HEAPF32[$1729>>2];
                          $1732 = +HEAPF32[$1730>>2];
                          $1733 = $1731 * 0.033333335071802139;
                          $1734 = $1732 * 0.033333335071802139;
                          $1735 = $$idx$val2$i11$i$i$i490$i$i + $1733;
                          $1736 = $$idx1$val3$i12$i$i$i492$i$i + $1734;
                          $1737 = $lin_axis$idx$val$i$i475$i$i * $1735;
                          $1738 = $lin_axis$idx85$val$i$i476$i$i * $1736;
                          $1739 = $1737 + $1738;
                          $1740 = $dvel$0$i$i$i487$i$i + $1739;
                          $$idx$i65$i$i$i493$i$i = ((($1727)) + 40|0);
                          $$idx$val$i66$i$i$i494$i$i = +HEAPF32[$$idx$i65$i$i$i493$i$i>>2];
                          $$idx$i$i118$i$i495$i$i = ((($1727)) + 80|0);
                          $$idx$val$i$i119$i$i496$i$i = +HEAPF32[$$idx$i$i118$i$i495$i$i>>2];
                          $1741 = $$idx$val$i$i119$i$i496$i$i * 0.033333335071802139;
                          $1742 = $$idx$val$i66$i$i$i494$i$i + $1741;
                          $1743 = $_0$sroa$0$0$i$i$i474$i$i * $1742;
                          $1744 = $1740 + $1743;
                          $dvel$1$i$i$i498$i$i = $1744;
                         }
                         $1745 = (($1605) + (($iter$sroa$0$042$i$i434$i$i*76)|0)|0);
                         HEAPF32[$1745>>2] = $lin_axis$idx$val$i$i475$i$i;
                         $1746 = (((($1605) + (($iter$sroa$0$042$i$i434$i$i*76)|0)|0)) + 4|0);
                         HEAPF32[$1746>>2] = $lin_axis$idx85$val$i$i476$i$i;
                         $1747 = (((($1605) + (($iter$sroa$0$042$i$i434$i$i*76)|0)|0)) + 40|0);
                         HEAPF32[$1747>>2] = 0.0;
                         if ($switch24tmp$i$i$i477$i$i) {
                          $1774 = 0.0;
                         } else {
                          $$idx41$i$i$i500$i$i = ((($1708)) + 44|0);
                          $$idx41$val$i$i$i501$i$i = +HEAPF32[$$idx41$i$i$i500$i$i>>2];
                          $1748 = $lin_axis$idx$val$i$i475$i$i * $$idx41$val$i$i$i501$i$i;
                          $1749 = $lin_axis$idx85$val$i$i476$i$i * $$idx41$val$i$i$i501$i$i;
                          $1750 = (((($1605) + (($iter$sroa$0$042$i$i434$i$i*76)|0)|0)) + 8|0);
                          HEAPF32[$1750>>2] = $1748;
                          $1751 = (((($1605) + (($iter$sroa$0$042$i$i434$i$i*76)|0)|0)) + 12|0);
                          HEAPF32[$1751>>2] = $1749;
                          $1752 = (((($1605) + (($iter$sroa$0$042$i$i434$i$i*76)|0)|0)) + 24|0);
                          HEAPF32[$1752>>2] = $1725;
                          $$idx44$i$i$i502$i$i = ((($1708)) + 52|0);
                          $$idx44$val$i$i$i503$i$i = +HEAPF32[$$idx44$i$i$i502$i$i>>2];
                          $1753 = $1725 * $$idx44$val$i$i$i503$i$i;
                          $1754 = $1753 + 0.0;
                          $1755 = (((($1605) + (($iter$sroa$0$042$i$i434$i$i*76)|0)|0)) + 28|0);
                          HEAPF32[$1755>>2] = $1754;
                          $1756 = $lin_axis$idx$val$i$i475$i$i * $1748;
                          $1757 = $lin_axis$idx85$val$i$i476$i$i * $1749;
                          $1758 = $1756 + $1757;
                          $1759 = $1758 + 0.0;
                          $1760 = $1725 * $1754;
                          $1761 = $1759 + $1760;
                          HEAPF32[$1747>>2] = $1761;
                          $1774 = $1761;
                         }
                         if ($switchtmp$i116$i$i488$i$i) {
                          $1778 = $1774;
                         } else {
                          $$idx40$i$i$i506$i$i = ((($1727)) + 44|0);
                          $$idx40$val$i$i$i507$i$i = +HEAPF32[$$idx40$i$i$i506$i$i>>2];
                          $1762 = $lin_axis$idx$val$i$i475$i$i * $$idx40$val$i$i$i507$i$i;
                          $1763 = $lin_axis$idx85$val$i$i476$i$i * $$idx40$val$i$i$i507$i$i;
                          $1764 = (((($1605) + (($iter$sroa$0$042$i$i434$i$i*76)|0)|0)) + 16|0);
                          HEAPF32[$1764>>2] = $1762;
                          $1765 = (((($1605) + (($iter$sroa$0$042$i$i434$i$i*76)|0)|0)) + 20|0);
                          HEAPF32[$1765>>2] = $1763;
                          $1766 = (((($1605) + (($iter$sroa$0$042$i$i434$i$i*76)|0)|0)) + 32|0);
                          HEAPF32[$1766>>2] = $_0$sroa$0$0$i$i$i474$i$i;
                          $$idx42$i$i$i508$i$i = ((($1727)) + 52|0);
                          $$idx42$val$i$i$i509$i$i = +HEAPF32[$$idx42$i$i$i508$i$i>>2];
                          $1767 = $_0$sroa$0$0$i$i$i474$i$i * $$idx42$val$i$i$i509$i$i;
                          $1768 = $1767 + 0.0;
                          $1769 = (((($1605) + (($iter$sroa$0$042$i$i434$i$i*76)|0)|0)) + 36|0);
                          HEAPF32[$1769>>2] = $1768;
                          $1770 = $lin_axis$idx$val$i$i475$i$i * $1762;
                          $1771 = $lin_axis$idx85$val$i$i476$i$i * $1763;
                          $1772 = $1770 + $1771;
                          $1773 = $1774 + $1772;
                          $1775 = $_0$sroa$0$0$i$i$i474$i$i * $1768;
                          $1776 = $1773 + $1775;
                          HEAPF32[$1747>>2] = $1776;
                          $1778 = $1776;
                         }
                         $1777 = 1.0 / $1778;
                         HEAPF32[$1747>>2] = $1777;
                         $1779 = (((($1605) + (($iter$sroa$0$042$i$i434$i$i*76)|0)|0)) + 48|0);
                         HEAPF32[$1779>>2] = -3.4028234663852886E+38;
                         $1780 = (((($1605) + (($iter$sroa$0$042$i$i434$i$i*76)|0)|0)) + 52|0);
                         HEAPF32[$1780>>2] = 3.4028234663852886E+38;
                         $1781 = -$dvel$1$i$i$i498$i$i;
                         $1782 = (($error$i$i400$i$i) + ($iter$sroa$0$042$i$i434$i$i<<2)|0);
                         $1783 = +HEAPF32[$1782>>2];
                         $1784 = $1783 / 0.033333335071802139;
                         $1785 = $1781 - $1784;
                         $1786 = (((($1605) + (($iter$sroa$0$042$i$i434$i$i*76)|0)|0)) + 56|0);
                         HEAPF32[$1786>>2] = $1785;
                         $1787 = (((($1605) + (($iter$sroa$0$042$i$i434$i$i*76)|0)|0)) + 44|0);
                         HEAPF32[$1787>>2] = 0.0;
                         if (!($switchtmp$i116$i$i488$i$i)) {
                          $1788 = $opt_rb2$i$sroa$5$1$i466$i$i;
                          $1789 = HEAP32[$1788>>2]|0;
                          $1790 = (($1789) + -1)|0;
                          HEAP32[$1788>>2] = $1790;
                         }
                         if (!($switch24tmp$i$i$i477$i$i)) {
                          $1791 = $opt_rb1$i$sroa$5$1$i453$i$i;
                          $1792 = HEAP32[$1791>>2]|0;
                          $1793 = (($1792) + -1)|0;
                          HEAP32[$1791>>2] = $1793;
                         }
                         $1795 = ($1794>>>0)<(2);
                         $1796 = (($1794) + 1)|0;
                         if ($1795) {
                          $iter$sroa$0$042$i$i434$i$i$phi = $1794;$1794 = $1796;$opt_rb1$i$sroa$5$0$i432$i$i = $opt_rb1$i$sroa$5$1$i453$i$i;$opt_rb2$i$sroa$5$0$i433$i$i = $opt_rb2$i$sroa$5$1$i466$i$i;$iter$sroa$0$042$i$i434$i$i = $iter$sroa$0$042$i$i434$i$i$phi;
                         } else {
                          break;
                         }
                        }
                        $1804 = HEAP32[$1593>>2]|0;
                        $1805 = (($1804) + -1)|0;
                        HEAP32[$1593>>2] = $1805;
                        $1806 = (($joint_offset$0$ph$i$i) + 2)|0;
                        $iter4$sroa$0$0$ph$i$i = $1562;$joint_offset$0$ph$i$i = $1806;
                        continue;
                       }
                       $$idx176$val$le$i$i = HEAP32[$$idx180$i$i>>2]|0;
                       $1596 = (((($collector$idx$val) + (($1563*40)|0)|0)) + 4|0);
                       $$idx173$val$i$i = HEAP32[$1596>>2]|0;
                       $1597 = ((($$idx173$val$i$i)) + 8|0);
                       $1598 = HEAP32[$1597>>2]|0;
                       $cond$i$i$i388$i$i = ($1598|0)==(-1);
                       if ($cond$i$i$i388$i$i) {
                        label = 575;
                        break;
                       }
                       $1807 = (($1598) + 1)|0;
                       HEAP32[$1597>>2] = $1807;
                       $$idx184$val$i$i = HEAP32[$1445>>2]|0;
                       $$idx185$val$i$i = HEAP32[$$idx180$i$i>>2]|0;
                       $1808 = ($$idx176$val$le$i$i>>>0)<($joint_offset$0$ph$i$i>>>0);
                       if ($1808) {
                        label = 643;
                        break;
                       }
                       $1810 = ($$idx176$val$le$i$i>>>0)>($$idx185$val$i$i>>>0);
                       if ($1810) {
                        label = 645;
                        break;
                       }
                       $1812 = (($$idx184$val$i$i) + (($joint_offset$0$ph$i$i*76)|0)|0);
                       $1813 = (($$idx176$val$le$i$i) - ($joint_offset$0$ph$i$i))|0;
                       $1814 = ((($$idx173$val$i$i)) + 16|0);
                       $1815 = HEAP32[$1814>>2]|0;
                       $switchtmp$i$i$i$i = ($1815|0)==(0|0);
                       if ($switchtmp$i$i$i$i) {
                        $1816 = ((($$idx173$val$i$i)) + 20|0);
                        $1817 = ((($$idx173$val$i$i)) + 36|0);
                        $1818 = ((($$idx173$val$i$i)) + 24|0);
                        $1819 = ((($$idx173$val$i$i)) + 32|0);
                        $$val1718$i$i$i$i$i$i$i = HEAP32[$1816>>2]|0;
                        $$val1619$i$i$i$i$i$i$i = HEAP32[$1818>>2]|0;
                        $1820 = ((($$idx173$val$i$i)) + 28|0);
                        $$val1520$i$i$i$i$i$i$i = HEAP32[$1820>>2]|0;
                        $$val21$i$i$i$i$i$i$i = HEAP32[$1819>>2]|0;
                        $$idx$val17$i$i$i$i$i = HEAP32[$1817>>2]|0;
                        $$idx5$i$i$i$i$i = ((($$idx173$val$i$i)) + 40|0);
                        $$idx5$val18$i$i$i$i$i = HEAP32[$$idx5$i$i$i$i$i>>2]|0;
                        $ref1$sroa$0$0$i$i$i = $$val1718$i$i$i$i$i$i$i;$ref1$sroa$11$0$i$i$i = $$val21$i$i$i$i$i$i$i;$ref1$sroa$14$0$i$i$i = $$idx$val17$i$i$i$i$i;$ref1$sroa$17$0$i$i$i = $$idx5$val18$i$i$i$i$i;$ref1$sroa$5$0$i$i$i = $$val1619$i$i$i$i$i$i$i;$ref1$sroa$8$0$i$i$i = $$val1520$i$i$i$i$i$i$i;
                       } else {
                        $1821 = ((($1815)) + 8|0);
                        $1822 = HEAP32[$1821>>2]|0;
                        $cond$i$i$i$i$i$i$i68 = ($1822|0)==(-1);
                        if ($cond$i$i$i$i$i$i$i68) {
                         label = 649;
                         break;
                        }
                        $_4$sroa$0$0$$sroa_idx$i$i$i$i = ((($1815)) + 20|0);
                        $_4$sroa$0$0$copyload$i$i$i$i = +HEAPF32[$_4$sroa$0$0$$sroa_idx$i$i$i$i>>2];
                        $_4$sroa$4$0$$sroa_idx26$i$i$i$i = ((($1815)) + 24|0);
                        $_4$sroa$4$0$copyload$i$i$i$i = +HEAPF32[$_4$sroa$4$0$$sroa_idx26$i$i$i$i>>2];
                        $_4$sroa$5$0$$sroa_idx28$i$i$i$i = ((($1815)) + 28|0);
                        $_4$sroa$5$0$copyload$i$i$i$i = +HEAPF32[$_4$sroa$5$0$$sroa_idx28$i$i$i$i>>2];
                        $_4$sroa$6$0$$sroa_idx30$i$i$i$i = ((($1815)) + 32|0);
                        $_4$sroa$6$0$copyload$i$i$i$i = +HEAPF32[$_4$sroa$6$0$$sroa_idx30$i$i$i$i>>2];
                        $_4$sroa$7$0$$sroa_idx32$i$i$i$i = ((($1815)) + 36|0);
                        $_4$sroa$7$0$copyload$i$i$i$i = +HEAPF32[$_4$sroa$7$0$$sroa_idx32$i$i$i$i>>2];
                        $_4$sroa$8$0$$sroa_idx34$i$i$i$i = ((($1815)) + 40|0);
                        $_4$sroa$8$0$copyload$i$i$i$i = +HEAPF32[$_4$sroa$8$0$$sroa_idx34$i$i$i$i>>2];
                        $_14$sroa$0$0$$sroa_idx$i$i$i$i = ((($$idx173$val$i$i)) + 20|0);
                        $_14$sroa$0$0$copyload$i$i$i$i = +HEAPF32[$_14$sroa$0$0$$sroa_idx$i$i$i$i>>2];
                        $_14$sroa$4$0$$sroa_idx13$i$i$i$i = ((($$idx173$val$i$i)) + 24|0);
                        $_14$sroa$4$0$copyload$i$i$i$i = +HEAPF32[$_14$sroa$4$0$$sroa_idx13$i$i$i$i>>2];
                        $_14$sroa$5$0$$sroa_idx15$i$i$i$i = ((($$idx173$val$i$i)) + 28|0);
                        $_14$sroa$5$0$copyload$i$i$i$i = +HEAPF32[$_14$sroa$5$0$$sroa_idx15$i$i$i$i>>2];
                        $_14$sroa$6$0$$sroa_idx17$i$i$i$i = ((($$idx173$val$i$i)) + 32|0);
                        $_14$sroa$6$0$copyload$i$i$i$i = +HEAPF32[$_14$sroa$6$0$$sroa_idx17$i$i$i$i>>2];
                        $_14$sroa$7$0$$sroa_idx19$i$i$i$i = ((($$idx173$val$i$i)) + 36|0);
                        $_14$sroa$7$0$copyload$i$i$i$i = +HEAPF32[$_14$sroa$7$0$$sroa_idx19$i$i$i$i>>2];
                        $_14$sroa$8$0$$sroa_idx21$i$i$i$i = ((($$idx173$val$i$i)) + 40|0);
                        $_14$sroa$8$0$copyload$i$i$i$i = +HEAPF32[$_14$sroa$8$0$$sroa_idx21$i$i$i$i>>2];
                        $1824 = $_4$sroa$0$0$copyload$i$i$i$i * $_14$sroa$7$0$copyload$i$i$i$i;
                        $1825 = $_4$sroa$5$0$copyload$i$i$i$i * $_14$sroa$8$0$copyload$i$i$i$i;
                        $1826 = $1824 + $1825;
                        $1827 = $_4$sroa$4$0$copyload$i$i$i$i * $_14$sroa$7$0$copyload$i$i$i$i;
                        $1828 = $_4$sroa$6$0$copyload$i$i$i$i * $_14$sroa$8$0$copyload$i$i$i$i;
                        $1829 = $1827 + $1828;
                        $1830 = $_4$sroa$7$0$copyload$i$i$i$i + $1826;
                        $1831 = $_4$sroa$8$0$copyload$i$i$i$i + $1829;
                        $1832 = $_4$sroa$0$0$copyload$i$i$i$i * $_14$sroa$0$0$copyload$i$i$i$i;
                        $1833 = $_4$sroa$5$0$copyload$i$i$i$i * $_14$sroa$4$0$copyload$i$i$i$i;
                        $1834 = $1832 + $1833;
                        $1835 = $_4$sroa$0$0$copyload$i$i$i$i * $_14$sroa$5$0$copyload$i$i$i$i;
                        $1836 = $_4$sroa$5$0$copyload$i$i$i$i * $_14$sroa$6$0$copyload$i$i$i$i;
                        $1837 = $1835 + $1836;
                        $1838 = $_4$sroa$4$0$copyload$i$i$i$i * $_14$sroa$0$0$copyload$i$i$i$i;
                        $1839 = $_4$sroa$6$0$copyload$i$i$i$i * $_14$sroa$4$0$copyload$i$i$i$i;
                        $1840 = $1838 + $1839;
                        $1841 = $_4$sroa$4$0$copyload$i$i$i$i * $_14$sroa$5$0$copyload$i$i$i$i;
                        $1842 = $_4$sroa$6$0$copyload$i$i$i$i * $_14$sroa$6$0$copyload$i$i$i$i;
                        $1843 = $1841 + $1842;
                        $1844 = (HEAPF32[tempDoublePtr>>2]=$1834,HEAP32[tempDoublePtr>>2]|0);
                        $1845 = (HEAPF32[tempDoublePtr>>2]=$1840,HEAP32[tempDoublePtr>>2]|0);
                        $1846 = (HEAPF32[tempDoublePtr>>2]=$1837,HEAP32[tempDoublePtr>>2]|0);
                        $1847 = (HEAPF32[tempDoublePtr>>2]=$1843,HEAP32[tempDoublePtr>>2]|0);
                        $1848 = (HEAPF32[tempDoublePtr>>2]=$1830,HEAP32[tempDoublePtr>>2]|0);
                        $1849 = (HEAPF32[tempDoublePtr>>2]=$1831,HEAP32[tempDoublePtr>>2]|0);
                        $ref1$sroa$0$0$i$i$i = $1844;$ref1$sroa$11$0$i$i$i = $1847;$ref1$sroa$14$0$i$i$i = $1848;$ref1$sroa$17$0$i$i$i = $1849;$ref1$sroa$5$0$i$i$i = $1845;$ref1$sroa$8$0$i$i$i = $1846;
                       }
                       $1850 = ((($$idx173$val$i$i)) + 44|0);
                       $1851 = HEAP32[$1850>>2]|0;
                       $switchtmp$i4$i$i$i = ($1851|0)==(0|0);
                       if ($switchtmp$i4$i$i$i) {
                        $1852 = ((($$idx173$val$i$i)) + 48|0);
                        $1853 = ((($$idx173$val$i$i)) + 64|0);
                        $1854 = ((($$idx173$val$i$i)) + 52|0);
                        $$val1718$i$i$i$i5$i$i$i = HEAP32[$1852>>2]|0;
                        $$val1619$i$i$i$i6$i$i$i = HEAP32[$1854>>2]|0;
                        $$idx$val17$i$i9$i$i$i = HEAP32[$1853>>2]|0;
                        $$idx5$i$i10$i$i$i = ((($$idx173$val$i$i)) + 68|0);
                        $$idx5$val18$i$i11$i$i$i = HEAP32[$$idx5$i$i10$i$i$i>>2]|0;
                        $ref2$sroa$0$0$i$i$i = $$val1718$i$i$i$i5$i$i$i;$ref2$sroa$12$0$i$i$i = $$idx$val17$i$i9$i$i$i;$ref2$sroa$15$0$i$i$i = $$idx5$val18$i$i11$i$i$i;$ref2$sroa$5$0$i$i$i = $$val1619$i$i$i$i6$i$i$i;
                       } else {
                        $1855 = ((($1851)) + 8|0);
                        $1856 = HEAP32[$1855>>2]|0;
                        $cond$i$i$i$i20$i$i$i = ($1856|0)==(-1);
                        if ($cond$i$i$i$i20$i$i$i) {
                         label = 654;
                         break;
                        }
                        $_4$sroa$0$0$$sroa_idx$i23$i$i$i = ((($1851)) + 20|0);
                        $_4$sroa$0$0$copyload$i24$i$i$i = +HEAPF32[$_4$sroa$0$0$$sroa_idx$i23$i$i$i>>2];
                        $_4$sroa$4$0$$sroa_idx26$i25$i$i$i = ((($1851)) + 24|0);
                        $_4$sroa$4$0$copyload$i26$i$i$i = +HEAPF32[$_4$sroa$4$0$$sroa_idx26$i25$i$i$i>>2];
                        $_4$sroa$5$0$$sroa_idx28$i27$i$i$i = ((($1851)) + 28|0);
                        $_4$sroa$5$0$copyload$i28$i$i$i = +HEAPF32[$_4$sroa$5$0$$sroa_idx28$i27$i$i$i>>2];
                        $_4$sroa$6$0$$sroa_idx30$i29$i$i$i = ((($1851)) + 32|0);
                        $_4$sroa$6$0$copyload$i30$i$i$i = +HEAPF32[$_4$sroa$6$0$$sroa_idx30$i29$i$i$i>>2];
                        $_4$sroa$7$0$$sroa_idx32$i31$i$i$i = ((($1851)) + 36|0);
                        $_4$sroa$7$0$copyload$i32$i$i$i = +HEAPF32[$_4$sroa$7$0$$sroa_idx32$i31$i$i$i>>2];
                        $_4$sroa$8$0$$sroa_idx34$i33$i$i$i = ((($1851)) + 40|0);
                        $_4$sroa$8$0$copyload$i34$i$i$i = +HEAPF32[$_4$sroa$8$0$$sroa_idx34$i33$i$i$i>>2];
                        $_14$sroa$0$0$$sroa_idx$i35$i$i$i = ((($$idx173$val$i$i)) + 48|0);
                        $_14$sroa$0$0$copyload$i36$i$i$i = +HEAPF32[$_14$sroa$0$0$$sroa_idx$i35$i$i$i>>2];
                        $_14$sroa$4$0$$sroa_idx13$i37$i$i$i = ((($$idx173$val$i$i)) + 52|0);
                        $_14$sroa$4$0$copyload$i38$i$i$i = +HEAPF32[$_14$sroa$4$0$$sroa_idx13$i37$i$i$i>>2];
                        $_14$sroa$7$0$$sroa_idx19$i43$i$i$i = ((($$idx173$val$i$i)) + 64|0);
                        $_14$sroa$7$0$copyload$i44$i$i$i = +HEAPF32[$_14$sroa$7$0$$sroa_idx19$i43$i$i$i>>2];
                        $_14$sroa$8$0$$sroa_idx21$i45$i$i$i = ((($$idx173$val$i$i)) + 68|0);
                        $_14$sroa$8$0$copyload$i46$i$i$i = +HEAPF32[$_14$sroa$8$0$$sroa_idx21$i45$i$i$i>>2];
                        $1858 = $_4$sroa$0$0$copyload$i24$i$i$i * $_14$sroa$7$0$copyload$i44$i$i$i;
                        $1859 = $_4$sroa$5$0$copyload$i28$i$i$i * $_14$sroa$8$0$copyload$i46$i$i$i;
                        $1860 = $1858 + $1859;
                        $1861 = $_4$sroa$4$0$copyload$i26$i$i$i * $_14$sroa$7$0$copyload$i44$i$i$i;
                        $1862 = $_4$sroa$6$0$copyload$i30$i$i$i * $_14$sroa$8$0$copyload$i46$i$i$i;
                        $1863 = $1861 + $1862;
                        $1864 = $_4$sroa$7$0$copyload$i32$i$i$i + $1860;
                        $1865 = $_4$sroa$8$0$copyload$i34$i$i$i + $1863;
                        $1866 = $_4$sroa$0$0$copyload$i24$i$i$i * $_14$sroa$0$0$copyload$i36$i$i$i;
                        $1867 = $_4$sroa$5$0$copyload$i28$i$i$i * $_14$sroa$4$0$copyload$i38$i$i$i;
                        $1868 = $1866 + $1867;
                        $1869 = $_4$sroa$4$0$copyload$i26$i$i$i * $_14$sroa$0$0$copyload$i36$i$i$i;
                        $1870 = $_4$sroa$6$0$copyload$i30$i$i$i * $_14$sroa$4$0$copyload$i38$i$i$i;
                        $1871 = $1869 + $1870;
                        $1872 = (HEAPF32[tempDoublePtr>>2]=$1868,HEAP32[tempDoublePtr>>2]|0);
                        $1873 = (HEAPF32[tempDoublePtr>>2]=$1871,HEAP32[tempDoublePtr>>2]|0);
                        $1874 = (HEAPF32[tempDoublePtr>>2]=$1864,HEAP32[tempDoublePtr>>2]|0);
                        $1875 = (HEAPF32[tempDoublePtr>>2]=$1865,HEAP32[tempDoublePtr>>2]|0);
                        $ref2$sroa$0$0$i$i$i = $1872;$ref2$sroa$12$0$i$i$i = $1874;$ref2$sroa$15$0$i$i$i = $1875;$ref2$sroa$5$0$i$i$i = $1873;
                       }
                       $1876 = (HEAP32[tempDoublePtr>>2]=$ref1$sroa$14$0$i$i$i,+HEAPF32[tempDoublePtr>>2]);
                       $1877 = (HEAP32[tempDoublePtr>>2]=$ref1$sroa$17$0$i$i$i,+HEAPF32[tempDoublePtr>>2]);
                       $1878 = $1876 + 0.0;
                       $1879 = $1877 + 0.0;
                       $1880 = (HEAP32[tempDoublePtr>>2]=$ref2$sroa$12$0$i$i$i,+HEAPF32[tempDoublePtr>>2]);
                       $1881 = (HEAP32[tempDoublePtr>>2]=$ref2$sroa$15$0$i$i$i,+HEAPF32[tempDoublePtr>>2]);
                       $1882 = $1880 + 0.0;
                       $1883 = $1881 + 0.0;
                       $$idx3$val$i$i$i = +HEAPF32[$$idx2$i$i$i>>2];
                       $1884 = $1882 - $1878;
                       $1885 = $1883 - $1879;
                       $1886 = $1884 * $$idx3$val$i$i$i;
                       $1887 = $1885 * $$idx3$val$i$i$i;
                       HEAPF32[$error$i$i$i$i>>2] = $1886;
                       HEAPF32[$1492>>2] = $1887;
                       if ($switchtmp$i$i$i$i) {
                        $tmp_ret5$sroa$0$0$i$i$i$i = 0;$tmp_ret5$sroa$3$0$i$i$i$i = 0;
                       } else {
                        $1888 = ((($1815)) + 8|0);
                        $1889 = HEAP32[$1888>>2]|0;
                        $cond$i$i$i$i$i$i$i$i = ($1889|0)==(-1);
                        if ($cond$i$i$i$i$i$i$i$i) {
                         label = 658;
                         break;
                        }
                        $1891 = ((($1815)) + 76|0);
                        $$idx10$val16$i$i$i$i$i = HEAP32[$1891>>2]|0;
                        $$idx11$i$i$i$i$i = ((($1815)) + 80|0);
                        $$idx11$val17$i$i$i$i$i = HEAP32[$$idx11$i$i$i$i$i>>2]|0;
                        $tmp_ret5$sroa$0$0$i$i$i$i = $$idx10$val16$i$i$i$i$i;$tmp_ret5$sroa$3$0$i$i$i$i = $$idx11$val17$i$i$i$i$i;
                       }
                       $1892 = (HEAP32[tempDoublePtr>>2]=$tmp_ret5$sroa$0$0$i$i$i$i,+HEAPF32[tempDoublePtr>>2]);
                       $1893 = (HEAP32[tempDoublePtr>>2]=$tmp_ret5$sroa$3$0$i$i$i$i,+HEAPF32[tempDoublePtr>>2]);
                       $1894 = $1878 - $1892;
                       $1895 = $1879 - $1893;
                       if ($switchtmp$i4$i$i$i) {
                        $tmp_ret8$sroa$0$0$i$i$i$i = 0;$tmp_ret8$sroa$3$0$i$i$i$i = 0;
                       } else {
                        $1896 = ((($1851)) + 8|0);
                        $1897 = HEAP32[$1896>>2]|0;
                        $cond$i$i$i$i156$i$i$i$i = ($1897|0)==(-1);
                        if ($cond$i$i$i$i156$i$i$i$i) {
                         label = 662;
                         break;
                        }
                        $1899 = ((($1851)) + 76|0);
                        $$idx10$val16$i159$i$i$i$i = HEAP32[$1899>>2]|0;
                        $$idx11$i160$i$i$i$i = ((($1851)) + 80|0);
                        $$idx11$val17$i161$i$i$i$i = HEAP32[$$idx11$i160$i$i$i$i>>2]|0;
                        $tmp_ret8$sroa$0$0$i$i$i$i = $$idx10$val16$i159$i$i$i$i;$tmp_ret8$sroa$3$0$i$i$i$i = $$idx11$val17$i161$i$i$i$i;
                       }
                       $1900 = (HEAP32[tempDoublePtr>>2]=$tmp_ret8$sroa$0$0$i$i$i$i,+HEAPF32[tempDoublePtr>>2]);
                       $1901 = (HEAP32[tempDoublePtr>>2]=$tmp_ret8$sroa$3$0$i$i$i$i,+HEAPF32[tempDoublePtr>>2]);
                       $1902 = $1882 - $1900;
                       $1903 = $1883 - $1901;
                       $1904 = -$1903;
                       $1905 = -$1894;
                       $1906 = ((($1851)) + 8|0);
                       $1907 = ((($1851)) + 12|0);
                       $1908 = $1906;
                       $$idx15$i$i$i$i$i = ((($1851)) + 124|0);
                       $1909 = ((($1815)) + 8|0);
                       $1910 = ((($1815)) + 12|0);
                       $1911 = $1909;
                       $$idx15$i182$i$i$i$i = ((($1815)) + 124|0);
                       $2027 = 1;$iter$sroa$0$042$i$i$i$i = 0;$opt_rb1$i$sroa$5$0$i$i$i = 0;$opt_rb2$i$sroa$5$0$i$i$i = 0;
                       while(1) {
                        HEAPF32[$lin_axis$i$i$i$i>>2] = 0.0;
                        HEAPF32[$1493>>2] = 0.0;
                        $1912 = ($iter$sroa$0$042$i$i$i$i>>>0)<($1813>>>0);
                        if (!($1912)) {
                         label = 705;
                         break L692;
                        }
                        $1913 = (($lin_axis$i$i$i$i) + ($iter$sroa$0$042$i$i$i$i<<2)|0);
                        HEAPF32[$1913>>2] = 1.0;
                        $1914 = (((($1812) + (($iter$sroa$0$042$i$i$i$i*76)|0)|0)) + 60|0);
                        do {
                         if ($switchtmp$i$i$i$i) {
                          HEAP32[$1914>>2] = -1;
                          $1941 = 0;$opt_rb1$i$sroa$5$1$i$i$i = $opt_rb1$i$sroa$5$0$i$i$i;
                         } else {
                          $1915 = HEAP32[$1909>>2]|0;
                          $cond$i$i$i$i175$i$i$i$i = ($1915|0)==(-1);
                          if ($cond$i$i$i$i175$i$i$i$i) {
                           label = 669;
                           break L692;
                          }
                          $1919 = (($1915) + 1)|0;
                          HEAP32[$1909>>2] = $1919;
                          $$idx14$val$i179$i$i$i$i = HEAP8[$1910>>0]|0;
                          $switch$i$i180$i$i$i$i = ($$idx14$val$i179$i$i$i$i<<24>>24)==(1);
                          if ($switch$i$i180$i$i$i$i) {
                           $$idx15$val$i183$i$i$i$i = HEAP32[$$idx15$i182$i$i$i$i>>2]|0;
                           HEAP32[$1914>>2] = $$idx15$val$i183$i$i$i$i;
                           $1941 = $1910;$opt_rb1$i$sroa$5$1$i$i$i = $1911;
                           break;
                          } else {
                           HEAP32[$1914>>2] = -1;
                           $1920 = HEAP32[$1909>>2]|0;
                           $1921 = (($1920) + -1)|0;
                           HEAP32[$1909>>2] = $1921;
                           $1941 = 0;$opt_rb1$i$sroa$5$1$i$i$i = $opt_rb1$i$sroa$5$0$i$i$i;
                           break;
                          }
                         }
                        } while(0);
                        $1922 = (((($1812) + (($iter$sroa$0$042$i$i$i$i*76)|0)|0)) + 64|0);
                        do {
                         if ($switchtmp$i4$i$i$i) {
                          HEAP32[$1922>>2] = -1;
                          $1960 = 0;$opt_rb2$i$sroa$5$1$i$i$i = $opt_rb2$i$sroa$5$0$i$i$i;
                         } else {
                          $1923 = HEAP32[$1906>>2]|0;
                          $cond$i$i$i$i167$i$i$i$i = ($1923|0)==(-1);
                          if ($cond$i$i$i$i167$i$i$i$i) {
                           label = 677;
                           break L692;
                          }
                          $1927 = (($1923) + 1)|0;
                          HEAP32[$1906>>2] = $1927;
                          $$idx14$val$i$i$i$i$i = HEAP8[$1907>>0]|0;
                          $switch$i$i$i$i$i$i = ($$idx14$val$i$i$i$i$i<<24>>24)==(1);
                          if ($switch$i$i$i$i$i$i) {
                           $$idx15$val$i$i$i$i$i = HEAP32[$$idx15$i$i$i$i$i>>2]|0;
                           HEAP32[$1922>>2] = $$idx15$val$i$i$i$i$i;
                           $1960 = $1907;$opt_rb2$i$sroa$5$1$i$i$i = $1908;
                           break;
                          } else {
                           HEAP32[$1922>>2] = -1;
                           $1928 = HEAP32[$1906>>2]|0;
                           $1929 = (($1928) + -1)|0;
                           HEAP32[$1906>>2] = $1929;
                           $1960 = 0;$opt_rb2$i$sroa$5$1$i$i$i = $opt_rb2$i$sroa$5$0$i$i$i;
                           break;
                          }
                         }
                        } while(0);
                        HEAP32[$i$i141$i$i$i$i>>2] = $iter$sroa$0$042$i$i$i$i;
                        switch ($iter$sroa$0$042$i$i$i$i|0) {
                        case 0:  {
                         $1958 = $1895;$_0$sroa$0$0$i$i$i$i$i = $1904;
                         break;
                        }
                        case 1:  {
                         $1958 = $1905;$_0$sroa$0$0$i$i$i$i$i = $1902;
                         break;
                        }
                        default: {
                         label = 683;
                         break L692;
                        }
                        }
                        $lin_axis$idx$val$i$i$i$i = +HEAPF32[$lin_axis$i$i$i$i>>2];
                        $lin_axis$idx85$val$i$i$i$i = +HEAPF32[$1493>>2];
                        $switch24tmp$i$i$i$i$i = ($1941|0)==(0|0);
                        if ($switch24tmp$i$i$i$i$i) {
                         $dvel$0$i$i$i$i$i = 0.0;
                        } else {
                         $1942 = ((($1941)) + 32|0);
                         $$idx$val2$i719$i$i$i$i$i = +HEAPF32[$1942>>2];
                         $$idx1$i72$i$i$i$i$i = ((($1941)) + 36|0);
                         $$idx1$val3$i7310$i$i$i$i$i = +HEAPF32[$$idx1$i72$i$i$i$i$i>>2];
                         $1943 = ((($1941)) + 72|0);
                         $1944 = ((($1941)) + 76|0);
                         $1945 = +HEAPF32[$1943>>2];
                         $1946 = +HEAPF32[$1944>>2];
                         $1947 = $1945 * 0.033333335071802139;
                         $1948 = $1946 * 0.033333335071802139;
                         $1949 = $$idx$val2$i719$i$i$i$i$i + $1947;
                         $1950 = $$idx1$val3$i7310$i$i$i$i$i + $1948;
                         $1951 = $lin_axis$idx$val$i$i$i$i * $1949;
                         $1952 = $lin_axis$idx85$val$i$i$i$i * $1950;
                         $1953 = $1951 + $1952;
                         $1954 = 0.0 - $1953;
                         $$idx$i69$i$i$i$i$i = ((($1941)) + 40|0);
                         $$idx$val$i70$i$i$i$i$i = +HEAPF32[$$idx$i69$i$i$i$i$i>>2];
                         $$idx$i67$i$i$i$i$i = ((($1941)) + 80|0);
                         $$idx$val$i68$i$i$i$i$i = +HEAPF32[$$idx$i67$i$i$i$i$i>>2];
                         $1955 = $$idx$val$i68$i$i$i$i$i * 0.033333335071802139;
                         $1956 = $$idx$val$i70$i$i$i$i$i + $1955;
                         $1957 = $1958 * $1956;
                         $1959 = $1954 + $1957;
                         $dvel$0$i$i$i$i$i = $1959;
                        }
                        $switchtmp$i116$i$i$i$i = ($1960|0)==(0|0);
                        if ($switchtmp$i116$i$i$i$i) {
                         $dvel$1$i$i$i$i$i = $dvel$0$i$i$i$i$i;
                        } else {
                         $1961 = ((($1960)) + 32|0);
                         $$idx$val2$i11$i$i$i$i$i = +HEAPF32[$1961>>2];
                         $$idx1$i$i$i$i$i$i = ((($1960)) + 36|0);
                         $$idx1$val3$i12$i$i$i$i$i = +HEAPF32[$$idx1$i$i$i$i$i$i>>2];
                         $1962 = ((($1960)) + 72|0);
                         $1963 = ((($1960)) + 76|0);
                         $1964 = +HEAPF32[$1962>>2];
                         $1965 = +HEAPF32[$1963>>2];
                         $1966 = $1964 * 0.033333335071802139;
                         $1967 = $1965 * 0.033333335071802139;
                         $1968 = $$idx$val2$i11$i$i$i$i$i + $1966;
                         $1969 = $$idx1$val3$i12$i$i$i$i$i + $1967;
                         $1970 = $lin_axis$idx$val$i$i$i$i * $1968;
                         $1971 = $lin_axis$idx85$val$i$i$i$i * $1969;
                         $1972 = $1970 + $1971;
                         $1973 = $dvel$0$i$i$i$i$i + $1972;
                         $$idx$i65$i$i$i$i$i = ((($1960)) + 40|0);
                         $$idx$val$i66$i$i$i$i$i = +HEAPF32[$$idx$i65$i$i$i$i$i>>2];
                         $$idx$i$i118$i$i$i$i = ((($1960)) + 80|0);
                         $$idx$val$i$i119$i$i$i$i = +HEAPF32[$$idx$i$i118$i$i$i$i>>2];
                         $1974 = $$idx$val$i$i119$i$i$i$i * 0.033333335071802139;
                         $1975 = $$idx$val$i66$i$i$i$i$i + $1974;
                         $1976 = $_0$sroa$0$0$i$i$i$i$i * $1975;
                         $1977 = $1973 + $1976;
                         $dvel$1$i$i$i$i$i = $1977;
                        }
                        $1978 = (($1812) + (($iter$sroa$0$042$i$i$i$i*76)|0)|0);
                        HEAPF32[$1978>>2] = $lin_axis$idx$val$i$i$i$i;
                        $1979 = (((($1812) + (($iter$sroa$0$042$i$i$i$i*76)|0)|0)) + 4|0);
                        HEAPF32[$1979>>2] = $lin_axis$idx85$val$i$i$i$i;
                        $1980 = (((($1812) + (($iter$sroa$0$042$i$i$i$i*76)|0)|0)) + 40|0);
                        HEAPF32[$1980>>2] = 0.0;
                        if ($switch24tmp$i$i$i$i$i) {
                         $2007 = 0.0;
                        } else {
                         $$idx41$i$i$i$i$i = ((($1941)) + 44|0);
                         $$idx41$val$i$i$i$i$i = +HEAPF32[$$idx41$i$i$i$i$i>>2];
                         $1981 = $lin_axis$idx$val$i$i$i$i * $$idx41$val$i$i$i$i$i;
                         $1982 = $lin_axis$idx85$val$i$i$i$i * $$idx41$val$i$i$i$i$i;
                         $1983 = (((($1812) + (($iter$sroa$0$042$i$i$i$i*76)|0)|0)) + 8|0);
                         HEAPF32[$1983>>2] = $1981;
                         $1984 = (((($1812) + (($iter$sroa$0$042$i$i$i$i*76)|0)|0)) + 12|0);
                         HEAPF32[$1984>>2] = $1982;
                         $1985 = (((($1812) + (($iter$sroa$0$042$i$i$i$i*76)|0)|0)) + 24|0);
                         HEAPF32[$1985>>2] = $1958;
                         $$idx44$i$i$i$i$i = ((($1941)) + 52|0);
                         $$idx44$val$i$i$i$i$i = +HEAPF32[$$idx44$i$i$i$i$i>>2];
                         $1986 = $1958 * $$idx44$val$i$i$i$i$i;
                         $1987 = $1986 + 0.0;
                         $1988 = (((($1812) + (($iter$sroa$0$042$i$i$i$i*76)|0)|0)) + 28|0);
                         HEAPF32[$1988>>2] = $1987;
                         $1989 = $lin_axis$idx$val$i$i$i$i * $1981;
                         $1990 = $lin_axis$idx85$val$i$i$i$i * $1982;
                         $1991 = $1989 + $1990;
                         $1992 = $1991 + 0.0;
                         $1993 = $1958 * $1987;
                         $1994 = $1992 + $1993;
                         HEAPF32[$1980>>2] = $1994;
                         $2007 = $1994;
                        }
                        if ($switchtmp$i116$i$i$i$i) {
                         $2011 = $2007;
                        } else {
                         $$idx40$i$i$i$i$i = ((($1960)) + 44|0);
                         $$idx40$val$i$i$i$i$i = +HEAPF32[$$idx40$i$i$i$i$i>>2];
                         $1995 = $lin_axis$idx$val$i$i$i$i * $$idx40$val$i$i$i$i$i;
                         $1996 = $lin_axis$idx85$val$i$i$i$i * $$idx40$val$i$i$i$i$i;
                         $1997 = (((($1812) + (($iter$sroa$0$042$i$i$i$i*76)|0)|0)) + 16|0);
                         HEAPF32[$1997>>2] = $1995;
                         $1998 = (((($1812) + (($iter$sroa$0$042$i$i$i$i*76)|0)|0)) + 20|0);
                         HEAPF32[$1998>>2] = $1996;
                         $1999 = (((($1812) + (($iter$sroa$0$042$i$i$i$i*76)|0)|0)) + 32|0);
                         HEAPF32[$1999>>2] = $_0$sroa$0$0$i$i$i$i$i;
                         $$idx42$i$i$i$i$i = ((($1960)) + 52|0);
                         $$idx42$val$i$i$i$i$i = +HEAPF32[$$idx42$i$i$i$i$i>>2];
                         $2000 = $_0$sroa$0$0$i$i$i$i$i * $$idx42$val$i$i$i$i$i;
                         $2001 = $2000 + 0.0;
                         $2002 = (((($1812) + (($iter$sroa$0$042$i$i$i$i*76)|0)|0)) + 36|0);
                         HEAPF32[$2002>>2] = $2001;
                         $2003 = $lin_axis$idx$val$i$i$i$i * $1995;
                         $2004 = $lin_axis$idx85$val$i$i$i$i * $1996;
                         $2005 = $2003 + $2004;
                         $2006 = $2007 + $2005;
                         $2008 = $_0$sroa$0$0$i$i$i$i$i * $2001;
                         $2009 = $2006 + $2008;
                         HEAPF32[$1980>>2] = $2009;
                         $2011 = $2009;
                        }
                        $2010 = 1.0 / $2011;
                        HEAPF32[$1980>>2] = $2010;
                        $2012 = (((($1812) + (($iter$sroa$0$042$i$i$i$i*76)|0)|0)) + 48|0);
                        HEAPF32[$2012>>2] = -3.4028234663852886E+38;
                        $2013 = (((($1812) + (($iter$sroa$0$042$i$i$i$i*76)|0)|0)) + 52|0);
                        HEAPF32[$2013>>2] = 3.4028234663852886E+38;
                        $2014 = -$dvel$1$i$i$i$i$i;
                        $2015 = (($error$i$i$i$i) + ($iter$sroa$0$042$i$i$i$i<<2)|0);
                        $2016 = +HEAPF32[$2015>>2];
                        $2017 = $2016 / 0.033333335071802139;
                        $2018 = $2014 - $2017;
                        $2019 = (((($1812) + (($iter$sroa$0$042$i$i$i$i*76)|0)|0)) + 56|0);
                        HEAPF32[$2019>>2] = $2018;
                        $2020 = (((($1812) + (($iter$sroa$0$042$i$i$i$i*76)|0)|0)) + 44|0);
                        HEAPF32[$2020>>2] = 0.0;
                        if (!($switchtmp$i116$i$i$i$i)) {
                         $2021 = $opt_rb2$i$sroa$5$1$i$i$i;
                         $2022 = HEAP32[$2021>>2]|0;
                         $2023 = (($2022) + -1)|0;
                         HEAP32[$2021>>2] = $2023;
                        }
                        if (!($switch24tmp$i$i$i$i$i)) {
                         $2024 = $opt_rb1$i$sroa$5$1$i$i$i;
                         $2025 = HEAP32[$2024>>2]|0;
                         $2026 = (($2025) + -1)|0;
                         HEAP32[$2024>>2] = $2026;
                        }
                        $2028 = ($2027>>>0)<(2);
                        $2029 = (($2027) + 1)|0;
                        if ($2028) {
                         $iter$sroa$0$042$i$i$i$i$phi = $2027;$2027 = $2029;$opt_rb1$i$sroa$5$0$i$i$i = $opt_rb1$i$sroa$5$1$i$i$i;$opt_rb2$i$sroa$5$0$i$i$i = $opt_rb2$i$sroa$5$1$i$i$i;$iter$sroa$0$042$i$i$i$i = $iter$sroa$0$042$i$i$i$i$phi;
                        } else {
                         break;
                        }
                       }
                       $2037 = ($1813>>>0)<(2);
                       if ($2037) {
                        label = 707;
                        break;
                       }
                       $2039 = ((($1812)) + 152|0);
                       $2040 = (HEAP32[tempDoublePtr>>2]=$ref2$sroa$0$0$i$i$i,+HEAPF32[tempDoublePtr>>2]);
                       $2041 = (HEAP32[tempDoublePtr>>2]=$ref2$sroa$5$0$i$i$i,+HEAPF32[tempDoublePtr>>2]);
                       $2042 = (HEAP32[tempDoublePtr>>2]=$ref1$sroa$0$0$i$i$i,+HEAPF32[tempDoublePtr>>2]);
                       $2043 = (HEAP32[tempDoublePtr>>2]=$ref1$sroa$5$0$i$i$i,+HEAPF32[tempDoublePtr>>2]);
                       $2044 = (HEAP32[tempDoublePtr>>2]=$ref1$sroa$8$0$i$i$i,+HEAPF32[tempDoublePtr>>2]);
                       $2045 = (HEAP32[tempDoublePtr>>2]=$ref1$sroa$11$0$i$i$i,+HEAPF32[tempDoublePtr>>2]);
                       $2046 = $2042 * $2040;
                       $2047 = $2043 * $2041;
                       $2048 = $2047 + $2046;
                       $2049 = $2044 * $2040;
                       $2050 = $2045 * $2041;
                       $2051 = $2050 + $2049;
                       $2052 = -$2051;
                       $2053 = (+Math_atan2((+$2052),(+$2048)));
                       $2054 = ($1813|0)==(2);
                       if ($2054) {
                        label = 737;
                        break;
                       }
                       $2055 = ((($1812)) + 212|0);
                       $2056 = HEAP32[$1814>>2]|0;
                       $switchtmp$i$i$i$i$i$i$i$i = ($2056|0)==(0|0);
                       do {
                        if ($switchtmp$i$i$i$i$i$i$i$i) {
                         HEAP32[$2055>>2] = -1;
                         $opt_rb1$i$sroa$0$0$i$i$i$i$i$i = 0;$opt_rb1$i$sroa$6$0$i$i$i$i$i$i = 0;
                        } else {
                         $2057 = ((($2056)) + 8|0);
                         $2058 = HEAP32[$2057>>2]|0;
                         $cond$i$i$i$i$i$i$i$i$i$i$i = ($2058|0)==(-1);
                         if ($cond$i$i$i$i$i$i$i$i$i$i$i) {
                          label = 712;
                          break L692;
                         }
                         $2062 = (($2058) + 1)|0;
                         HEAP32[$2057>>2] = $2062;
                         $2063 = ((($2056)) + 12|0);
                         $$idx14$val$i$i$i$i$i$i$i$i = HEAP8[$2063>>0]|0;
                         $switch$i$i$i$i$i$i$i$i$i = ($$idx14$val$i$i$i$i$i$i$i$i<<24>>24)==(1);
                         if ($switch$i$i$i$i$i$i$i$i$i) {
                          $$idx15$i$i$i$i$i$i$i$i = ((($2056)) + 124|0);
                          $$idx15$val$i$i$i$i$i$i$i$i = HEAP32[$$idx15$i$i$i$i$i$i$i$i>>2]|0;
                          HEAP32[$2055>>2] = $$idx15$val$i$i$i$i$i$i$i$i;
                          $opt_rb1$i$sroa$0$0$i$i$i$i$i$i = $2063;$opt_rb1$i$sroa$6$0$i$i$i$i$i$i = $2057;
                          break;
                         } else {
                          HEAP32[$2055>>2] = -1;
                          $2064 = HEAP32[$2057>>2]|0;
                          $2065 = (($2064) + -1)|0;
                          HEAP32[$2057>>2] = $2065;
                          $opt_rb1$i$sroa$0$0$i$i$i$i$i$i = 0;$opt_rb1$i$sroa$6$0$i$i$i$i$i$i = 0;
                          break;
                         }
                        }
                       } while(0);
                       $2066 = ((($1812)) + 216|0);
                       $2067 = HEAP32[$1850>>2]|0;
                       $switchtmp$i24$i$i$i$i$i$i$i = ($2067|0)==(0|0);
                       do {
                        if ($switchtmp$i24$i$i$i$i$i$i$i) {
                         HEAP32[$2066>>2] = -1;
                         $$pre$i$i$i$i$i$i$i = 0;$opt_rb2$i$sroa$5$0$i$i$i$i$i$i = 0;
                        } else {
                         $2068 = ((($2067)) + 8|0);
                         $2069 = HEAP32[$2068>>2]|0;
                         $cond$i$i$i$i26$i$i$i$i$i$i$i = ($2069|0)==(-1);
                         if ($cond$i$i$i$i26$i$i$i$i$i$i$i) {
                          label = 720;
                          break L692;
                         }
                         $2073 = (($2069) + 1)|0;
                         HEAP32[$2068>>2] = $2073;
                         $2074 = ((($2067)) + 12|0);
                         $$idx14$val$i30$i$i$i$i$i$i$i = HEAP8[$2074>>0]|0;
                         $switch$i$i31$i$i$i$i$i$i$i = ($$idx14$val$i30$i$i$i$i$i$i$i<<24>>24)==(1);
                         if ($switch$i$i31$i$i$i$i$i$i$i) {
                          $$idx15$i33$i$i$i$i$i$i$i = ((($2067)) + 124|0);
                          $$idx15$val$i34$i$i$i$i$i$i$i = HEAP32[$$idx15$i33$i$i$i$i$i$i$i>>2]|0;
                          HEAP32[$2066>>2] = $$idx15$val$i34$i$i$i$i$i$i$i;
                          $$pre$i$i$i$i$i$i$i = $2074;$opt_rb2$i$sroa$5$0$i$i$i$i$i$i = $2068;
                          break;
                         } else {
                          HEAP32[$2066>>2] = -1;
                          $2075 = HEAP32[$2068>>2]|0;
                          $2076 = (($2075) + -1)|0;
                          HEAP32[$2068>>2] = $2076;
                          $$pre$i$i$i$i$i$i$i = 0;$opt_rb2$i$sroa$5$0$i$i$i$i$i$i = 0;
                          break;
                         }
                        }
                       } while(0);
                       HEAP32[$2039>>2] = 0;
                       $2077 = ((($1812)) + 156|0);
                       HEAP32[$2077>>2] = 0;
                       $2078 = ((($1812)) + 192|0);
                       HEAPF32[$2078>>2] = 0.0;
                       $switch6tmp$i$i$i$i$i$i$i$i = ($opt_rb1$i$sroa$0$0$i$i$i$i$i$i|0)==(0|0);
                       if ($switch6tmp$i$i$i$i$i$i$i$i) {
                        $2098 = 0.0;
                       } else {
                        $$idx41$i$i$i$i$i$i$i$i = ((($opt_rb1$i$sroa$0$0$i$i$i$i$i$i)) + 44|0);
                        $$idx41$val$i$i$i$i$i$i$i$i = +HEAPF32[$$idx41$i$i$i$i$i$i$i$i>>2];
                        $2079 = $$idx41$val$i$i$i$i$i$i$i$i * 0.0;
                        $2080 = ((($1812)) + 160|0);
                        HEAPF32[$2080>>2] = $2079;
                        $2081 = ((($1812)) + 164|0);
                        HEAPF32[$2081>>2] = $2079;
                        $2082 = ((($1812)) + 176|0);
                        HEAPF32[$2082>>2] = 1.0;
                        $$idx44$i$i$i$i$i$i$i$i = ((($opt_rb1$i$sroa$0$0$i$i$i$i$i$i)) + 52|0);
                        $$idx44$val$i$i$i$i$i$i$i$i = +HEAPF32[$$idx44$i$i$i$i$i$i$i$i>>2];
                        $2083 = $$idx44$val$i$i$i$i$i$i$i$i + 0.0;
                        $2084 = ((($1812)) + 180|0);
                        HEAPF32[$2084>>2] = $2083;
                        $2085 = $2079 * 0.0;
                        $2086 = $2085 + $2085;
                        $2087 = $2086 + 0.0;
                        $2088 = $2087 + $2083;
                        HEAPF32[$2078>>2] = $2088;
                        $2098 = $2088;
                       }
                       $switchtmp$i74$i$i$i$i$i$i$i = ($$pre$i$i$i$i$i$i$i|0)==(0|0);
                       if ($switchtmp$i74$i$i$i$i$i$i$i) {
                        $2101 = $2098;
                       } else {
                        $$idx40$i$i$i$i$i$i$i$i = ((($$pre$i$i$i$i$i$i$i)) + 44|0);
                        $$idx40$val$i$i$i$i$i$i$i$i = +HEAPF32[$$idx40$i$i$i$i$i$i$i$i>>2];
                        $2089 = $$idx40$val$i$i$i$i$i$i$i$i * 0.0;
                        $2090 = ((($1812)) + 168|0);
                        HEAPF32[$2090>>2] = $2089;
                        $2091 = ((($1812)) + 172|0);
                        HEAPF32[$2091>>2] = $2089;
                        $2092 = ((($1812)) + 184|0);
                        HEAPF32[$2092>>2] = -1.0;
                        $$idx42$i$i$i$i$i$i$i$i = ((($$pre$i$i$i$i$i$i$i)) + 52|0);
                        $$idx42$val$i$i$i$i$i$i$i$i = +HEAPF32[$$idx42$i$i$i$i$i$i$i$i>>2];
                        $2093 = 0.0 - $$idx42$val$i$i$i$i$i$i$i$i;
                        $2094 = ((($1812)) + 188|0);
                        HEAPF32[$2094>>2] = $2093;
                        $2095 = $2089 * 0.0;
                        $2096 = $2095 + $2095;
                        $2097 = $2098 + $2096;
                        $2099 = $2097 - $2093;
                        HEAPF32[$2078>>2] = $2099;
                        $2101 = $2099;
                       }
                       $2100 = 1.0 / $2101;
                       HEAPF32[$2078>>2] = $2100;
                       if ($switch6tmp$i$i$i$i$i$i$i$i) {
                        $_73$2101$i$i$i$i$i$i$i = 1;$ang_vel1$sroa$0$0103$i$i$i$i$i$i$i = 0.0;
                       } else {
                        $$idx$i72$i$i$i$i$i$i$i = ((($opt_rb1$i$sroa$0$0$i$i$i$i$i$i)) + 40|0);
                        $$idx$val$i73$i$i$i$i$i$i$i = +HEAPF32[$$idx$i72$i$i$i$i$i$i$i>>2];
                        $2114 = HEAP32[$opt_rb1$i$sroa$6$0$i$i$i$i$i$i>>2]|0;
                        $2115 = (($2114) + -1)|0;
                        HEAP32[$opt_rb1$i$sroa$6$0$i$i$i$i$i$i>>2] = $2115;
                        $_73$2101$i$i$i$i$i$i$i = 0;$ang_vel1$sroa$0$0103$i$i$i$i$i$i$i = $$idx$val$i73$i$i$i$i$i$i$i;
                       }
                       if ($switchtmp$i74$i$i$i$i$i$i$i) {
                        $_76$1106$i$i$i$i$i$i$i = 0;$ang_vel2$sroa$0$0108$i$i$i$i$i$i$i = 0.0;
                       } else {
                        $$idx$i70$i$i$i$i$i$i$i = ((($$pre$i$i$i$i$i$i$i)) + 40|0);
                        $$idx$val$i71$i$i$i$i$i$i$i = +HEAPF32[$$idx$i70$i$i$i$i$i$i$i>>2];
                        $2116 = HEAP32[$opt_rb2$i$sroa$5$0$i$i$i$i$i$i>>2]|0;
                        $2117 = (($2116) + -1)|0;
                        HEAP32[$opt_rb2$i$sroa$5$0$i$i$i$i$i$i>>2] = $2117;
                        $_76$1106$i$i$i$i$i$i$i = 1;$ang_vel2$sroa$0$0108$i$i$i$i$i$i$i = $$idx$val$i71$i$i$i$i$i$i$i;
                       }
                       $2102 = ((($1812)) + 200|0);
                       HEAPF32[$2102>>2] = -3.4028234663852886E+38;
                       $2103 = ((($1812)) + 204|0);
                       HEAPF32[$2103>>2] = 3.4028234663852886E+38;
                       $2104 = +HEAPF32[$$idx2$i$i$i>>2];
                       $2105 = $2053 * $2104;
                       $2106 = $2105 / 0.033333335071802139;
                       $2107 = $ang_vel2$sroa$0$0108$i$i$i$i$i$i$i - $ang_vel1$sroa$0$0103$i$i$i$i$i$i$i;
                       $2108 = $2107 - $2106;
                       $2109 = ((($1812)) + 208|0);
                       HEAPF32[$2109>>2] = $2108;
                       $2110 = ((($1812)) + 196|0);
                       HEAPF32[$2110>>2] = 0.0;
                       $or$cond$i$i$i$i$i$i$i = $switchtmp$i74$i$i$i$i$i$i$i | $_76$1106$i$i$i$i$i$i$i;
                       if (!($or$cond$i$i$i$i$i$i$i)) {
                        $2118 = HEAP32[$opt_rb2$i$sroa$5$0$i$i$i$i$i$i>>2]|0;
                        $2119 = (($2118) + -1)|0;
                        HEAP32[$opt_rb2$i$sroa$5$0$i$i$i$i$i$i>>2] = $2119;
                       }
                       $2111 = ($_73$2101$i$i$i$i$i$i$i<<24>>24)==(0);
                       $or$cond110$i$i$i$i$i$i$i = $switch6tmp$i$i$i$i$i$i$i$i | $2111;
                       if (!($or$cond110$i$i$i$i$i$i$i)) {
                        $2120 = HEAP32[$opt_rb1$i$sroa$6$0$i$i$i$i$i$i>>2]|0;
                        $2121 = (($2120) + -1)|0;
                        HEAP32[$opt_rb1$i$sroa$6$0$i$i$i$i$i$i>>2] = $2121;
                       }
                       $2123 = HEAP32[$1597>>2]|0;
                       $2124 = (($2123) + -1)|0;
                       HEAP32[$1597>>2] = $2124;
                       $2125 = (($joint_offset$0$ph$i$i) + 3)|0;
                       $iter4$sroa$0$0$ph$i$i = $1562;$joint_offset$0$ph$i$i = $2125;
                      }
                      switch (label|0) {
                       case 551: {
                        $1565 = ((($0)) + 580|0);
                        $$idx$i375$i$i = ((($0)) + 588|0);
                        $$idx$val$i376$i$i = HEAP32[$$idx$i375$i$i>>2]|0;
                        $1566 = ($bodies$idx109$val$i>>>0)>($$idx$val$i376$i$i>>>0);
                        L899: do {
                         if ($1566) {
                          $1567 = (($bodies$idx109$val$i) - ($$idx$val$i376$i$i))|0;
                          $1568 = ($1567|0)==(0);
                          if ($1568) {
                           $$idx165$val$i$i = $$idx$val$i376$i$i;
                           label = 739;
                           break;
                          }
                          $$idx$i$i$i$i$i$i$i = ((($0)) + 584|0);
                          $$in$i$i$i$i$i$i = $1567;$1570 = $$idx$val$i376$i$i;
                          L902: while(1) {
                           $1569 = (($$in$i$i$i$i$i$i) + -1)|0;
                           $$idx$val$i$i$i$i$i$i$i = HEAP32[$$idx$i$i$i$i$i$i$i>>2]|0;
                           $1571 = ($1570|0)==($$idx$val$i$i$i$i$i$i$i|0);
                           do {
                            if ($1571) {
                             $$arith116 = (($1569) + 1)|0;
                             $$overflow117 = ($1569>>>0)>(4294967294);
                             $$$i$i$i$i$i$i$i = $$overflow117 ? -1 : $$arith116;
                             $1572 = ($$$i$i$i$i$i$i$i|0)==(0);
                             if ($1572) {
                              break;
                             }
                             $$arith = (($1570) + ($$$i$i$i$i$i$i$i))|0;
                             $$overflow = ($$arith>>>0)<($1570>>>0);
                             if ($$overflow) {
                              label = 557;
                              break L902;
                             }
                             $1574 = $1570 << 1;
                             $1575 = ($$arith>>>0)>=($1574>>>0);
                             $_0$0$sroa$speculated$i$i$i$i$i$i$i$i$i$i = $1575 ? $$arith : $1574;
                             $$arith168 = ($_0$0$sroa$speculated$i$i$i$i$i$i$i$i$i$i*12)|0;
                             $$overflow169 = ($_0$0$sroa$speculated$i$i$i$i$i$i$i$i$i$i>>>0)>(357913941);
                             if ($$overflow169) {
                              label = 559;
                              break L902;
                             }
                             $1577 = ($$arith168|0)<(0);
                             if ($1577) {
                              label = 561;
                              break L902;
                             }
                             $1579 = ($1570|0)==(0);
                             if ($1579) {
                              $1580 = (_malloc($$arith168)|0);
                              $ptr$0$i$i$i$i$i$i$i$i = $1580;
                             } else {
                              $1581 = HEAP32[$1565>>2]|0;
                              $1582 = (_realloc($1581,$$arith168)|0);
                              $ptr$0$i$i$i$i$i$i$i$i = $1582;
                             }
                             $1583 = ($ptr$0$i$i$i$i$i$i$i$i|0)==(0|0);
                             if ($1583) {
                              label = 566;
                              break L902;
                             }
                             HEAP32[$1565>>2] = $ptr$0$i$i$i$i$i$i$i$i;
                             HEAP32[$$idx$i$i$i$i$i$i$i>>2] = $_0$0$sroa$speculated$i$i$i$i$i$i$i$i$i$i;
                            }
                           } while(0);
                           $1585 = HEAP32[$1565>>2]|0;
                           $1586 = (($1585) + (($1570*12)|0)|0);
                           HEAP32[$1586>>2] = 0;
                           $_31$sroa$4$0$$sroa_idx42$i$i$i$i$i$i = (((($1585) + (($1570*12)|0)|0)) + 4|0);
                           HEAP32[$_31$sroa$4$0$$sroa_idx42$i$i$i$i$i$i>>2] = 0;
                           $_31$sroa$5$0$$sroa_idx44$i$i$i$i$i$i = (((($1585) + (($1570*12)|0)|0)) + 8|0);
                           HEAP32[$_31$sroa$5$0$$sroa_idx44$i$i$i$i$i$i>>2] = 0;
                           $1587 = (($1570) + 1)|0;
                           HEAP32[$$idx$i375$i$i>>2] = $1587;
                           $1588 = ($1569|0)==(0);
                           if ($1588) {
                            $$idx165$val$i$i = $1587;
                            label = 739;
                            break L899;
                           } else {
                            $$in$i$i$i$i$i$i = $1569;$1570 = $1587;
                           }
                          }
                          if ((label|0) == 557) {
                           __THREW__ = 0;
                           invoke_vii(219,(11172|0),17);
                           $1573 = __THREW__; __THREW__ = 0;
                           break;
                          }
                          else if ((label|0) == 559) {
                           __THREW__ = 0;
                           invoke_vii(219,(11172|0),17);
                           $1576 = __THREW__; __THREW__ = 0;
                           break;
                          }
                          else if ((label|0) == 561) {
                           __THREW__ = 0;
                           invoke_vi(220,(6432|0));
                           $1578 = __THREW__; __THREW__ = 0;
                           break;
                          }
                          else if ((label|0) == 566) {
                           __THREW__ = 0;
                           invoke_v(210);
                           $1584 = __THREW__; __THREW__ = 0;
                           break;
                          }
                         } else {
                          $1589 = ($bodies$idx109$val$i>>>0)<($$idx$val$i376$i$i>>>0);
                          if (!($1589)) {
                           $$idx165$val$i$i = $$idx$val$i376$i$i;
                           label = 739;
                           break;
                          }
                          HEAP32[$$idx$i375$i$i>>2] = $bodies$idx109$val$i;
                          $$idx165$val$i$i = $bodies$idx109$val$i;
                          label = 739;
                         }
                        } while(0);
                        L923: do {
                         if ((label|0) == 739) {
                          $$idx158$val$i$i = HEAP32[$1445>>2]|0;
                          $$idx159$val$i$i = HEAP32[$$idx180$i$i>>2]|0;
                          $$idx156$val$i$i = HEAP32[$1452>>2]|0;
                          $$idx157$val$i$i = HEAP32[$$idx161$i$i>>2]|0;
                          $$idx164$val$i$i = HEAP32[$1565>>2]|0;
                          $2126 = ((($0)) + 552|0);
                          $2127 = HEAP32[$2126>>2]|0;
                          __THREW__ = 0;
                          invoke_viiiiiiiii(266,($$idx158$val$i$i|0),($$idx159$val$i$i|0),($$idx156$val$i$i|0),($$idx157$val$i$i|0),($$idx164$val$i$i|0),($$idx165$val$i$i|0),($bodies$idx109$val$i|0),($2127|0),0);
                          $2128 = __THREW__; __THREW__ = 0;
                          $2129 = $2128&1;
                          if ($2129) {
                           break L665;
                          }
                          $2130 = ((($_11$i317$i$i)) + 60|0);
                          dest=$_11$i317$i$i; stop=dest+60|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
                          HEAP32[$2130>>2] = -1;
                          $2131 = ((($_11$i317$i$i)) + 64|0);
                          HEAP32[$2131>>2] = -1;
                          $2132 = ((($_11$i317$i$i)) + 68|0);
                          HEAP32[$2132>>2] = 0;
                          $2133 = ((($_11$i317$i$i)) + 72|0);
                          HEAPF32[$2133>>2] = 0.0;
                          __THREW__ = 0;
                          invoke_viii(262,($1445|0),($$idx$val$i$i209$i$i|0),($_11$i317$i$i|0));
                          $2134 = __THREW__; __THREW__ = 0;
                          $2135 = $2134&1;
                          if ($2135) {
                           break L665;
                          }
                          $2136 = ((($_17$i318$i$i)) + 60|0);
                          dest=$_17$i318$i$i; stop=dest+60|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
                          HEAP32[$2136>>2] = -1;
                          $2137 = ((($_17$i318$i$i)) + 64|0);
                          HEAP32[$2137>>2] = -1;
                          $2138 = ((($_17$i318$i$i)) + 68|0);
                          HEAP32[$2138>>2] = 0;
                          $2139 = ((($_17$i318$i$i)) + 72|0);
                          HEAPF32[$2139>>2] = 0.0;
                          __THREW__ = 0;
                          invoke_viii(262,($1452|0),($$idx$val$i$i209$i$i|0),($_17$i318$i$i|0));
                          $2140 = __THREW__; __THREW__ = 0;
                          $2141 = $2140&1;
                          if ($2141) {
                           break L665;
                          }
                          $2142 = (($bodies$idx$val$i) + ($bodies$idx109$val$i<<2)|0);
                          $2143 = $bodies$idx$val$i;
                          $2144 = ($bodies$idx109$val$i|0)==(0);
                          L928: do {
                           if (!($2144)) {
                            $2146 = $bodies$idx$val$i;$iter6$sroa$0$01166$i$i = $2143;
                            while(1) {
                             $2145 = ((($2146)) + 4|0);
                             $2147 = $2145;
                             $2148 = $iter6$sroa$0$01166$i$i;
                             $$idx147$val$i$i = HEAP32[$2148>>2]|0;
                             $2149 = ((($$idx147$val$i$i)) + 8|0);
                             $2150 = HEAP32[$2149>>2]|0;
                             $cond$i$i$i309$i$i = ($2150|0)==(0);
                             if (!($cond$i$i$i309$i$i)) {
                              label = 746;
                              break;
                             }
                             HEAP32[$2149>>2] = -1;
                             $$idx175$i$i = ((($$idx147$val$i$i)) + 124|0);
                             $$idx175$val$i$i = HEAP32[$$idx175$i$i>>2]|0;
                             $$idx1$i$i$i = ((($$idx147$val$i$i)) + 48|0);
                             $$idx$i307$i$i = ((($$idx147$val$i$i)) + 52|0);
                             $$idx$val$i308$i$i = +HEAPF32[$$idx$i307$i$i>>2];
                             $$idx194$val$i$i = HEAP32[$$idx$i375$i$i>>2]|0;
                             $2160 = ($$idx194$val$i$i>>>0)>($$idx175$val$i$i>>>0);
                             if (!($2160)) {
                              label = 748;
                              break;
                             }
                             $$idx193$val$i$i = HEAP32[$1565>>2]|0;
                             $$idx1$val3$i838$i$i = +HEAPF32[$$idx1$i$i$i>>2];
                             $2162 = ((($$idx147$val$i$i)) + 44|0);
                             $$idx$val2$i837$i$i = +HEAPF32[$2162>>2];
                             $2163 = (((($$idx193$val$i$i) + (($$idx175$val$i$i*12)|0)|0)) + 4|0);
                             $2164 = (($$idx193$val$i$i) + (($$idx175$val$i$i*12)|0)|0);
                             $2165 = +HEAPF32[$2164>>2];
                             $2166 = +HEAPF32[$2163>>2];
                             $2167 = $$idx$val2$i837$i$i + $2165;
                             $2168 = $$idx1$val3$i838$i$i + $2166;
                             HEAPF32[$2162>>2] = $2167;
                             HEAPF32[$$idx1$i$i$i>>2] = $2168;
                             $$idx192$val$i$i = HEAP32[$$idx$i375$i$i>>2]|0;
                             $2169 = ($$idx192$val$i$i>>>0)>($$idx175$val$i$i>>>0);
                             if (!($2169)) {
                              label = 750;
                              break;
                             }
                             $$idx191$val$i$i = HEAP32[$1565>>2]|0;
                             $2171 = (((($$idx191$val$i$i) + (($$idx175$val$i$i*12)|0)|0)) + 8|0);
                             $$unpack$i$i = +HEAPF32[$2171>>2];
                             $2172 = $$idx$val$i308$i$i + $$unpack$i$i;
                             HEAPF32[$$idx$i307$i$i>>2] = $2172;
                             HEAP32[$2149>>2] = 0;
                             $2173 = ($2145|0)==($2142|0);
                             if ($2173) {
                              break L928;
                             } else {
                              $2146 = $2145;$iter6$sroa$0$01166$i$i = $2147;
                             }
                            }
                            if ((label|0) == 746) {
                             __THREW__ = 0;
                             invoke_v(212);
                             $2157 = __THREW__; __THREW__ = 0;
                             $2158 = ___cxa_find_matching_catch_2()|0;
                             $2159 = tempRet0;
                             $personalityslot$sroa$0$0$i$i = $2158;$personalityslot$sroa$10$0$i$i = $2159;
                             break L688;
                            }
                            else if ((label|0) == 748) {
                             __THREW__ = 0;
                             invoke_viiiii(214,(12236|0),104,1349,($$idx175$val$i$i|0),($$idx194$val$i$i|0));
                             $2161 = __THREW__; __THREW__ = 0;
                            }
                            else if ((label|0) == 750) {
                             __THREW__ = 0;
                             invoke_viiiii(214,(12236|0),104,1349,($$idx175$val$i$i|0),($$idx192$val$i$i|0));
                             $2170 = __THREW__; __THREW__ = 0;
                            }
                            $2384 = ___cxa_find_matching_catch_2()|0;
                            $2385 = tempRet0;
                            HEAP32[$2149>>2] = 0;
                            $personalityslot$sroa$0$0$i$i = $2384;$personalityslot$sroa$10$0$i$i = $2385;
                            break L688;
                           }
                          } while(0);
                          $2151 = HEAP32[$1445>>2]|0;
                          $2152 = HEAP32[$$idx180$i$i>>2]|0;
                          $2153 = (($2151) + (($2152*76)|0)|0);
                          $2154 = ($2152|0)==(0);
                          L940: do {
                           if (!($2154)) {
                            $2155 = ((($2151)) + 76|0);
                            $2156 = ((($0)) + 528|0);
                            $$idx7$i$i$i = ((($0)) + 536|0);
                            $$idx$i$i263$i$i = ((($0)) + 532|0);
                            $_272$sroa$0$0$iter8$sroa$6$01163$i$i = 0;$iter8$sroa$0$0$1164$i$i = $2155;$iter8$sroa$0$01162$i$i = $2151;$iter8$sroa$6$0$1165$i$i = 1;
                            L942: while(1) {
                             $$idx7$val$i$i$i = HEAP32[$$idx7$i$i$i>>2]|0;
                             $2180 = HEAP32[$1465>>2]|0;
                             $2181 = ($2180|0)==(0);
                             if ($2181) {
                              $$idx$val20$i$i$i = $$idx7$val$i$i$i;
                             } else {
                              $2182 = $$idx7$val$i$i$i;$2192 = 1;
                              while(1) {
                               $$idx$val$i$i264$i$i = HEAP32[$$idx$i$i263$i$i>>2]|0;
                               $2183 = ($2182|0)==($$idx$val$i$i264$i$i|0);
                               if ($2183) {
                                __THREW__ = 0;
                                invoke_vi(267,($2156|0));
                                $2184 = __THREW__; __THREW__ = 0;
                                $2185 = $2184&1;
                                if ($2185) {
                                 label = 875;
                                 break L942;
                                }
                                $$pre$i$i$i$i = HEAP32[$$idx7$i$i$i>>2]|0;
                                $2188 = $$pre$i$i$i$i;
                               } else {
                                $2188 = $2182;
                               }
                               $2186 = HEAP32[$2156>>2]|0;
                               $2187 = (($2186) + ($2188<<2)|0);
                               HEAPF32[$2187>>2] = 0.0;
                               $2189 = HEAP32[$$idx7$i$i$i>>2]|0;
                               $2190 = (($2189) + 1)|0;
                               HEAP32[$$idx7$i$i$i>>2] = $2190;
                               $2191 = (($2192) + 1)|0;
                               $exitcond$i$i$i = ($2192|0)==($2180|0);
                               if ($exitcond$i$i$i) {
                                break;
                               } else {
                                $2182 = $2190;$2192 = $2191;
                               }
                              }
                              $2193 = ($2190>>>0)<($$idx7$val$i$i$i>>>0);
                              if ($2193) {
                               label = 759;
                               break;
                              } else {
                               $$idx$val20$i$i$i = $2190;
                              }
                             }
                             $$idx8$val$i$i$i = HEAP32[$2156>>2]|0;
                             $2195 = (($$idx8$val$i$i$i) + ($$idx7$val$i$i$i<<2)|0);
                             $2196 = (($$idx$val20$i$i$i) - ($$idx7$val$i$i$i))|0;
                             $2197 = ($2196|0)==(0);
                             if ($2197) {
                              label = 824;
                              break;
                             }
                             $2198 = ((($iter8$sroa$0$01162$i$i)) + 44|0);
                             $2199 = +HEAPF32[$2198>>2];
                             $2200 = $2199 * 0.85000002384185791;
                             HEAPF32[$2195>>2] = $2200;
                             $$idx197$val$i$i = HEAP32[$$idx161$i$i>>2]|0;
                             $2201 = ($$idx197$val$i$i>>>0)>($_272$sroa$0$0$iter8$sroa$6$01163$i$i>>>0);
                             if (!($2201)) {
                              label = 762;
                              break;
                             }
                             $2203 = ($2196>>>0)>(1);
                             if (!($2203)) {
                              label = 764;
                              break;
                             }
                             $$idx196$val$i$i = HEAP32[$1452>>2]|0;
                             $2205 = (((($$idx196$val$i$i) + (($_272$sroa$0$0$iter8$sroa$6$01163$i$i*76)|0)|0)) + 44|0);
                             $2206 = +HEAPF32[$2205>>2];
                             $2207 = $2206 * 0.85000002384185791;
                             $2208 = ((($2195)) + 4|0);
                             HEAPF32[$2208>>2] = $2207;
                             $2209 = ($iter8$sroa$0$0$1164$i$i|0)==($2153|0);
                             $2210 = ((($iter8$sroa$0$0$1164$i$i)) + 76|0);
                             $_272$sroa$0$0$iter8$sroa$6$0$i$i = $2209 ? $_272$sroa$0$0$iter8$sroa$6$01163$i$i : $iter8$sroa$6$0$1165$i$i;
                             $iter8$sroa$0$0$$i$i = $2209 ? $iter8$sroa$0$0$1164$i$i : $2210;
                             $2211 = $2209&1;
                             $2212 = $2211 ^ 1;
                             $iter8$sroa$6$0$$i$i = (($2212) + ($iter8$sroa$6$0$1165$i$i))|0;
                             $switch47tmp839$i$i = ($iter8$sroa$0$0$1164$i$i|0)==(0|0);
                             $switch47tmp$i$i = $2209 | $switch47tmp839$i$i;
                             if ($switch47tmp$i$i) {
                              break L940;
                             } else {
                              $iter8$sroa$0$01162$i$i$phi = $iter8$sroa$0$0$1164$i$i;$_272$sroa$0$0$iter8$sroa$6$01163$i$i = $_272$sroa$0$0$iter8$sroa$6$0$i$i;$iter8$sroa$0$0$1164$i$i = $iter8$sroa$0$0$$i$i;$iter8$sroa$6$0$1165$i$i = $iter8$sroa$6$0$$i$i;$iter8$sroa$0$01162$i$i = $iter8$sroa$0$01162$i$i$phi;
                             }
                            }
                            if ((label|0) == 759) {
                             __THREW__ = 0;
                             invoke_vii(226,($$idx7$val$i$i$i|0),($2190|0));
                             $2194 = __THREW__; __THREW__ = 0;
                             break L665;
                            }
                            else if ((label|0) == 762) {
                             __THREW__ = 0;
                             invoke_viiiii(214,(12236|0),104,1349,($_272$sroa$0$0$iter8$sroa$6$01163$i$i|0),($$idx197$val$i$i|0));
                             $2202 = __THREW__; __THREW__ = 0;
                             break L665;
                            }
                            else if ((label|0) == 764) {
                             __THREW__ = 0;
                             invoke_viiiii(214,(11401|0),99,534,1,($2196|0));
                             $2204 = __THREW__; __THREW__ = 0;
                             break L665;
                            }
                            else if ((label|0) == 824) {
                             __THREW__ = 0;
                             invoke_viiiii(214,(9456|0),132,192,0,0);
                             $2403 = __THREW__; __THREW__ = 0;
                             break L665;
                            }
                            else if ((label|0) == 875) {
                             $2530 = ___cxa_find_matching_catch_2()|0;
                             $2531 = tempRet0;
                             $eh$lpad$body144$i$index59Z2D = $2531;$eh$lpad$body144$i$indexZ2D = $2530;
                             label = 880;
                             break L650;
                            }
                           }
                          } while(0);
                          $$idx195$val$i$i = HEAP32[$1465>>2]|0;
                          $2174 = HEAP32[$$idx$i$i$i162$i>>2]|0;
                          $2175 = $2174 << 3;
                          $2176 = HEAP32[$971>>2]|0;
                          $$cast$i$i$i$i286$i$i = $2176;
                          $2177 = (($2176) + ($2175)|0);
                          $2178 = $2177;
                          $2179 = (($2176) + ($2174<<3)|0);
                          $iter12$sroa$0$0$i$i = $$cast$i$i$i$i286$i$i;$iter12$sroa$10$0$i$i = 0;$iter12$sroa$5$0$i$i = $2178;
                          L963: while(1) {
                           $2213 = $iter12$sroa$0$0$i$i;
                           $2214 = $2213;$iter12$sroa$0$1$i$i = $iter12$sroa$0$0$i$i;$iter12$sroa$5$1$i$i = $iter12$sroa$5$0$i$i;
                           while(1) {
                            $2215 = ($2214|0)==($2179|0);
                            if ($2215) {
                             break L963;
                            }
                            $2216 = $iter12$sroa$0$1$i$i;
                            $2217 = $iter12$sroa$5$1$i$i;
                            $2218 = ((($2216)) + 8|0);
                            $2219 = ((($2217)) + 24|0);
                            $2220 = $2218;
                            $2221 = $2219;
                            $2222 = $2216;
                            $2223 = $2222;
                            $2224 = HEAP32[$2223>>2]|0;
                            $2225 = (($2222) + 4)|0;
                            $2226 = $2225;
                            $2227 = HEAP32[$2226>>2]|0;
                            $2228 = ($2224|0)==(0);
                            $2229 = ($2227|0)==(0);
                            $2230 = $2228 & $2229;
                            if ($2230) {
                             $2214 = $2218;$iter12$sroa$0$1$i$i = $2220;$iter12$sroa$5$1$i$i = $2221;
                            } else {
                             break;
                            }
                           }
                           $switch2tmp$i$i250$i$i = ($iter12$sroa$5$1$i$i|0)==(0);
                           if ($switch2tmp$i$i250$i$i) {
                            break;
                           }
                           $2233 = (($iter12$sroa$10$0$i$i) + 1)|0;
                           $2234 = $iter12$sroa$10$0$i$i << 1;
                           $2235 = (($2234) + ($$idx195$val$i$i))|0;
                           $2236 = ((($2217)) + 20|0);
                           HEAP32[$2236>>2] = $2235;
                           $iter12$sroa$0$0$i$i = $2220;$iter12$sroa$10$0$i$i = $2233;$iter12$sroa$5$0$i$i = $2221;
                          }
                          $2231 = HEAP32[$958>>2]|0;
                          $switch$i$i = ($2231|0)==(0);
                          L971: do {
                           if (!($switch$i$i)) {
                            $_0$0$i241$in$in$i$i = ((($0)) + 476|0);
                            $_0$0$i241$i$i = +HEAPF32[$_0$0$i241$in$in$i$i>>2];
                            $2232 = $_0$0$i241$i$i == 0.0;
                            if ($2232) {
                             break;
                            }
                            $trunc$i$i$i$i$i = $2231&255;
                            $2237 = ((($0)) + 480|0);
                            $$val$i$i$i$i$i = +HEAPF32[$2237>>2];
                            $trunc$i$i$i$i$i$clear = $trunc$i$i$i$i$i & 3;
                            L974: do {
                             switch ($trunc$i$i$i$i$i$clear<<24>>24) {
                             case 0:  {
                              $2239 = $collector$idx$val;
                              while(1) {
                               $2238 = ((($2239)) + 40|0);
                               $2240 = HEAP32[$2239>>2]|0;
                               $cond$i$i$us$i$i = ($2240|0)==(0);
                               if ($cond$i$i$us$i$i) {
                                $2241 = ((($2239)) + 36|0);
                                $$val$i$i238$us$i$i = +HEAPF32[$2241>>2];
                                $2242 = !($$val$i$i238$us$i$i >= 3.4028234663852886E+38);
                                if (!($2242)) {
                                 break L974;
                                }
                               }
                               $2243 = ($2238|0)==($962|0);
                               if ($2243) {
                                break L971;
                               } else {
                                $2239 = $2238;
                               }
                              }
                              break;
                             }
                             case 1:  {
                              $2245 = $collector$idx$val;
                              while(1) {
                               $2244 = ((($2245)) + 40|0);
                               $2246 = HEAP32[$2245>>2]|0;
                               $cond$i$i$us1140$i$i = ($2246|0)==(0);
                               if ($cond$i$i$us1140$i$i) {
                                $2247 = ((($2245)) + 36|0);
                                $$val$i$i238$us1146$i$i = +HEAPF32[$2247>>2];
                                $2248 = !($$val$i$i238$us1146$i$i >= $$val$i$i$i$i$i);
                                if (!($2248)) {
                                 break L974;
                                }
                               }
                               $2249 = ($2244|0)==($962|0);
                               if ($2249) {
                                break L971;
                               } else {
                                $2245 = $2244;
                               }
                              }
                              break;
                             }
                             case 2:  {
                              $2251 = $collector$idx$val;
                              while(1) {
                               $2250 = ((($2251)) + 40|0);
                               $2252 = HEAP32[$2251>>2]|0;
                               $cond$i$i$us1150$i$i = ($2252|0)==(0);
                               if ($cond$i$i$us1150$i$i) {
                                $2253 = ((($2251)) + 36|0);
                                $$val$i$i238$us1156$i$i = +HEAPF32[$2253>>2];
                                $2254 = !($$val$i$i238$us1156$i$i >= $$val$i$i$i$i$i);
                                if (!($2254)) {
                                 break L974;
                                }
                               }
                               $2255 = ($2250|0)==($962|0);
                               if ($2255) {
                                break L971;
                               } else {
                                $2251 = $2250;
                               }
                              }
                              break;
                             }
                             default: {
                              break L971;
                             }
                             }
                            } while(0);
                            $2256 = ((($_11$i232$i$i)) + 60|0);
                            dest=$_11$i232$i$i; stop=dest+60|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
                            HEAP32[$2256>>2] = -1;
                            $2257 = ((($_11$i232$i$i)) + 64|0);
                            HEAP32[$2257>>2] = -1;
                            $2258 = ((($_11$i232$i$i)) + 68|0);
                            HEAP32[$2258>>2] = 0;
                            $2259 = ((($_11$i232$i$i)) + 72|0);
                            HEAPF32[$2259>>2] = 0.0;
                            __THREW__ = 0;
                            invoke_viii(262,($1445|0),($$idx$val$i$i209$i$i|0),($_11$i232$i$i|0));
                            $2260 = __THREW__; __THREW__ = 0;
                            $2261 = $2260&1;
                            if ($2261) {
                             break L665;
                            }
                            $2262 = ((($_17$i233$i$i)) + 60|0);
                            dest=$_17$i233$i$i; stop=dest+60|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
                            HEAP32[$2262>>2] = -1;
                            $2263 = ((($_17$i233$i$i)) + 64|0);
                            HEAP32[$2263>>2] = -1;
                            $2264 = ((($_17$i233$i$i)) + 68|0);
                            HEAP32[$2264>>2] = 0;
                            $2265 = ((($_17$i233$i$i)) + 72|0);
                            HEAPF32[$2265>>2] = 0.0;
                            __THREW__ = 0;
                            invoke_viii(262,($1452|0),($$idx$val$i$i209$i$i|0),($_17$i233$i$i|0));
                            $2266 = __THREW__; __THREW__ = 0;
                            $2267 = $2266&1;
                            if ($2267) {
                             break L665;
                            }
                            $2268 = HEAP32[$$idx$i$i$i162$i>>2]|0;
                            $2269 = $2268 << 3;
                            $2270 = HEAP32[$971>>2]|0;
                            $$cast$i$i$i$i223$i$i = $2270;
                            $2271 = (($2270) + ($2269)|0);
                            $2272 = $2271;
                            $2273 = (($2270) + ($2268<<3)|0);
                            $iter14$sroa$0$0$i$i = $$cast$i$i$i$i223$i$i;$iter14$sroa$10$0$i$i = 0;$iter14$sroa$5$0$i$i = $2272;
                            L993: while(1) {
                             $2274 = $iter14$sroa$0$0$i$i;
                             $2275 = $2274;$iter14$sroa$0$1$i$i = $iter14$sroa$0$0$i$i;$iter14$sroa$5$1$i$i = $iter14$sroa$5$0$i$i;
                             while(1) {
                              $2276 = ($2275|0)==($2273|0);
                              if ($2276) {
                               label = 806;
                               break L993;
                              }
                              $2277 = $iter14$sroa$0$1$i$i;
                              $2278 = $iter14$sroa$5$1$i$i;
                              $2279 = ((($2277)) + 8|0);
                              $2280 = ((($2278)) + 24|0);
                              $2281 = $2279;
                              $2282 = $2280;
                              $2283 = $2277;
                              $2284 = $2283;
                              $2285 = HEAP32[$2284>>2]|0;
                              $2286 = (($2283) + 4)|0;
                              $2287 = $2286;
                              $2288 = HEAP32[$2287>>2]|0;
                              $2289 = ($2285|0)==(0);
                              $2290 = ($2288|0)==(0);
                              $2291 = $2289 & $2290;
                              if ($2291) {
                               $2275 = $2279;$iter14$sroa$0$1$i$i = $2281;$iter14$sroa$5$1$i$i = $2282;
                              } else {
                               break;
                              }
                             }
                             $switch2tmp$i$i$i$i = ($iter14$sroa$5$1$i$i|0)==(0);
                             if ($switch2tmp$i$i$i$i) {
                              label = 806;
                              break;
                             }
                             $2292 = (($iter14$sroa$10$0$i$i) + 1)|0;
                             $2293 = ((($2278)) + 16|0);
                             $2294 = HEAP32[$2293>>2]|0;
                             $2295 = ($2294>>>0)<($collector$idx30$val>>>0);
                             if (!($2295)) {
                              label = 825;
                              break;
                             }
                             $2296 = (($collector$idx$val) + (($2294*40)|0)|0);
                             $2297 = HEAP32[$2296>>2]|0;
                             $cond43$i$i = ($2297|0)==(0);
                             if (!($cond43$i$i)) {
                              $iter14$sroa$0$0$i$i = $2281;$iter14$sroa$10$0$i$i = $2292;$iter14$sroa$5$0$i$i = $2282;
                              continue;
                             }
                             $$idx178$val$i$i = HEAP32[$$idx180$i$i>>2]|0;
                             $2298 = ($$idx178$val$i$i>>>0)>($iter14$sroa$10$0$i$i>>>0);
                             if (!($2298)) {
                              label = 793;
                              break;
                             }
                             $$idx177$val$i$i = HEAP32[$1445>>2]|0;
                             $2300 = (((($collector$idx$val) + (($2294*40)|0)|0)) + 36|0);
                             $2301 = HEAP32[$958>>2]|0;
                             $trunc$i$i$i$i = $2301&255;
                             $trunc$i$i$i$i$clear = $trunc$i$i$i$i & 3;
                             switch ($trunc$i$i$i$i$clear<<24>>24) {
                             case 0:  {
                              $_0$0$i$i$i$i = 3.4028234663852886E+38;
                              break;
                             }
                             case 1:  {
                              $$val$i$i$i$i = +HEAPF32[$2237>>2];
                              $_0$0$i$i$i$i = $$val$i$i$i$i;
                              break;
                             }
                             case 2:  {
                              $$val1$i$i$i$i = +HEAPF32[$2237>>2];
                              $_0$0$i$i$i$i = $$val1$i$i$i$i;
                              break;
                             }
                             default: {
                              label = 797;
                              break L993;
                             }
                             }
                             $$val$i$i$i = +HEAPF32[$2300>>2];
                             $2302 = !($$val$i$i$i >= $_0$0$i$i$i$i);
                             if ($2302) {
                              $2307 = (((($$idx177$val$i$i) + (($iter14$sroa$10$0$i$i*76)|0)|0)) + 56|0);
                              HEAPF32[$2307>>2] = 0.0;
                             } else {
                              $trunc$i$i$i$i$clear176 = $trunc$i$i$i$i & 3;
                              switch ($trunc$i$i$i$i$clear176<<24>>24) {
                              case 0:  {
                               $_0$0$i6$i$i$i = 0.0;
                               break;
                              }
                              case 1:  {
                               $$val$i2$i$i$i = +HEAPF32[$_0$0$i241$in$in$i$i>>2];
                               $_0$0$i6$i$i$i = $$val$i2$i$i$i;
                               break;
                              }
                              case 2:  {
                               $$val1$i4$i$i$i = +HEAPF32[$_0$0$i241$in$in$i$i>>2];
                               $_0$0$i6$i$i$i = $$val1$i4$i$i$i;
                               break;
                              }
                              default: {
                               label = 802;
                               break L993;
                              }
                              }
                              $2303 = (+_fmaxf($$val$i$i$i,0.0));
                              $2304 = $_0$0$i6$i$i$i * $2303;
                              $2305 = $2304 / 0.033333335071802139;
                              $2306 = (((($$idx177$val$i$i) + (($iter14$sroa$10$0$i$i*76)|0)|0)) + 56|0);
                              HEAPF32[$2306>>2] = $2305;
                             }
                             $2308 = (((($$idx177$val$i$i) + (($iter14$sroa$10$0$i$i*76)|0)|0)) + 44|0);
                             HEAPF32[$2308>>2] = 0.0;
                             $iter14$sroa$0$0$i$i = $2281;$iter14$sroa$10$0$i$i = $2292;$iter14$sroa$5$0$i$i = $2282;
                            }
                            if ((label|0) == 793) {
                             __THREW__ = 0;
                             invoke_viiiii(214,(12236|0),104,1358,($iter14$sroa$10$0$i$i|0),($$idx178$val$i$i|0));
                             $2299 = __THREW__; __THREW__ = 0;
                             break L665;
                            }
                            else if ((label|0) == 797) {
                             // unreachable;
                            }
                            else if ((label|0) == 802) {
                             // unreachable;
                            }
                            else if ((label|0) == 806) {
                             $$idx154$val$i$i = HEAP32[$1445>>2]|0;
                             $$idx155$val$i$i = HEAP32[$$idx180$i$i>>2]|0;
                             $$idx162$val$i$i = HEAP32[$1565>>2]|0;
                             $$idx163$val$i$i = HEAP32[$$idx$i375$i$i>>2]|0;
                             $2309 = ((($0)) + 548|0);
                             $2310 = HEAP32[$2309>>2]|0;
                             __THREW__ = 0;
                             invoke_viiiiiiiii(266,($$idx154$val$i$i|0),($$idx155$val$i$i|0),(26728|0),0,($$idx162$val$i$i|0),($$idx163$val$i$i|0),($bodies$idx109$val$i|0),($2310|0),1);
                             $2311 = __THREW__; __THREW__ = 0;
                             $2312 = $2311&1;
                             if ($2312) {
                              break L923;
                             }
                             if ($2144) {
                              break;
                             } else {
                              $2314 = $bodies$idx$val$i;$iter16$sroa$0$01138$i$i = $2143;
                             }
                             while(1) {
                              $2313 = ((($2314)) + 4|0);
                              $2315 = $2313;
                              $2316 = $iter16$sroa$0$01138$i$i;
                              $$idx$val$i141$i = HEAP32[$2316>>2]|0;
                              $2317 = ((($$idx$val$i141$i)) + 8|0);
                              $2318 = HEAP32[$2317>>2]|0;
                              $cond$i$i$i$i$i = ($2318|0)==(0);
                              if (!($cond$i$i$i$i$i)) {
                               label = 809;
                               break;
                              }
                              HEAP32[$2317>>2] = -1;
                              $$idx174$i$i = ((($$idx$val$i141$i)) + 124|0);
                              $$idx174$val$i$i = HEAP32[$$idx174$i$i>>2]|0;
                              $$idx190$val$i$i = HEAP32[$$idx$i375$i$i>>2]|0;
                              $2322 = ($$idx190$val$i$i>>>0)>($$idx174$val$i$i>>>0);
                              if (!($2322)) {
                               label = 811;
                               break;
                              }
                              $$idx189$val$i$i = HEAP32[$1565>>2]|0;
                              $2326 = (((($$idx189$val$i$i) + (($$idx174$val$i$i*12)|0)|0)) + 4|0);
                              $2327 = (($$idx189$val$i$i) + (($$idx174$val$i$i*12)|0)|0);
                              $2328 = +HEAPF32[$2327>>2];
                              $2329 = +HEAPF32[$2326>>2];
                              $2330 = $2328 * 0.033333335071802139;
                              $2331 = $2329 * 0.033333335071802139;
                              $2332 = (((($$idx189$val$i$i) + (($$idx174$val$i$i*12)|0)|0)) + 8|0);
                              $$unpack141$i$i = +HEAPF32[$2332>>2];
                              $2333 = $$unpack141$i$i * 0.033333335071802139;
                              $$idx152$i$i = ((($$idx$val$i141$i)) + 76|0);
                              $$idx152$val$i$i = +HEAPF32[$$idx152$i$i>>2];
                              $$idx153$i$i = ((($$idx$val$i141$i)) + 80|0);
                              $$idx153$val$i$i = +HEAPF32[$$idx153$i$i>>2];
                              $2334 = 0.0 - $$idx152$val$i$i;
                              $2335 = 0.0 - $$idx153$val$i$i;
                              $2336 = (+Math_sin((+$2333)));
                              $2337 = (+Math_cos((+$2333)));
                              $2338 = $2336 * 0.0;
                              $2339 = $2337 - $2338;
                              $2340 = $2337 * 0.0;
                              $2341 = $2340 - $2336;
                              $2342 = $2336 + $2340;
                              $2343 = $2338 + $2337;
                              $2344 = $2334 * $2337;
                              $2345 = $2336 * $2335;
                              $2346 = $2344 - $2345;
                              $2347 = $2334 * $2336;
                              $2348 = $2335 * $2337;
                              $2349 = $2347 + $2348;
                              $2350 = $$idx152$val$i$i + $2346;
                              $2351 = $$idx153$val$i$i + $2349;
                              $2352 = $2330 + $2350;
                              $2353 = $2331 + $2351;
                              $_7$sroa$0$0$$sroa_idx$i$i$i$i = ((($$idx$val$i141$i)) + 20|0);
                              $_7$sroa$0$0$copyload$i$i$i$i = +HEAPF32[$_7$sroa$0$0$$sroa_idx$i$i$i$i>>2];
                              $_7$sroa$4$0$$sroa_idx2$i$i$i$i = ((($$idx$val$i141$i)) + 24|0);
                              $_7$sroa$4$0$copyload$i$i$i$i = +HEAPF32[$_7$sroa$4$0$$sroa_idx2$i$i$i$i>>2];
                              $_7$sroa$5$0$$sroa_idx4$i$i$i$i = ((($$idx$val$i141$i)) + 28|0);
                              $_7$sroa$5$0$copyload$i$i$i$i = +HEAPF32[$_7$sroa$5$0$$sroa_idx4$i$i$i$i>>2];
                              $_7$sroa$6$0$$sroa_idx6$i$i$i$i = ((($$idx$val$i141$i)) + 32|0);
                              $_7$sroa$6$0$copyload$i$i$i$i = +HEAPF32[$_7$sroa$6$0$$sroa_idx6$i$i$i$i>>2];
                              $_7$sroa$7$0$$sroa_idx8$i$i$i$i = ((($$idx$val$i141$i)) + 36|0);
                              $_7$sroa$7$0$copyload$i$i$i$i = +HEAPF32[$_7$sroa$7$0$$sroa_idx8$i$i$i$i>>2];
                              $_7$sroa$8$0$$sroa_idx10$i$i$i$i = ((($$idx$val$i141$i)) + 40|0);
                              $_7$sroa$8$0$copyload$i$i$i$i = +HEAPF32[$_7$sroa$8$0$$sroa_idx10$i$i$i$i>>2];
                              $2354 = $2339 * $_7$sroa$7$0$copyload$i$i$i$i;
                              $2355 = $2341 * $_7$sroa$8$0$copyload$i$i$i$i;
                              $2356 = $2354 + $2355;
                              $2357 = $2342 * $_7$sroa$7$0$copyload$i$i$i$i;
                              $2358 = $2343 * $_7$sroa$8$0$copyload$i$i$i$i;
                              $2359 = $2357 + $2358;
                              $2360 = $2352 + $2356;
                              $2361 = $2353 + $2359;
                              $2362 = $2339 * $_7$sroa$0$0$copyload$i$i$i$i;
                              $2363 = $2341 * $_7$sroa$4$0$copyload$i$i$i$i;
                              $2364 = $2362 + $2363;
                              $2365 = $2339 * $_7$sroa$5$0$copyload$i$i$i$i;
                              $2366 = $2341 * $_7$sroa$6$0$copyload$i$i$i$i;
                              $2367 = $2365 + $2366;
                              $2368 = $_7$sroa$0$0$copyload$i$i$i$i * $2342;
                              $2369 = $2343 * $_7$sroa$4$0$copyload$i$i$i$i;
                              $2370 = $2368 + $2369;
                              $2371 = $2342 * $_7$sroa$5$0$copyload$i$i$i$i;
                              $2372 = $2343 * $_7$sroa$6$0$copyload$i$i$i$i;
                              $2373 = $2371 + $2372;
                              HEAPF32[$_7$sroa$0$0$$sroa_idx$i$i$i$i>>2] = $2364;
                              HEAPF32[$_7$sroa$4$0$$sroa_idx2$i$i$i$i>>2] = $2370;
                              HEAPF32[$_7$sroa$5$0$$sroa_idx4$i$i$i$i>>2] = $2367;
                              HEAPF32[$_7$sroa$6$0$$sroa_idx6$i$i$i$i>>2] = $2373;
                              HEAPF32[$_7$sroa$7$0$$sroa_idx8$i$i$i$i>>2] = $2360;
                              HEAPF32[$_7$sroa$8$0$$sroa_idx10$i$i$i$i>>2] = $2361;
                              $$idx$i1$i$i$i = ((($$idx$val$i141$i)) + 68|0);
                              $$idx$val$i$i$i$i = +HEAPF32[$$idx$i1$i$i$i>>2];
                              $$idx1$i$i$i$i = ((($$idx$val$i141$i)) + 72|0);
                              $$idx1$val$i$i$i$i = +HEAPF32[$$idx1$i$i$i$i>>2];
                              $2374 = $2364 * $$idx$val$i$i$i$i;
                              $2375 = $2367 * $$idx1$val$i$i$i$i;
                              $2376 = $2374 + $2375;
                              $2377 = $2370 * $$idx$val$i$i$i$i;
                              $2378 = $2373 * $$idx1$val$i$i$i$i;
                              $2379 = $2377 + $2378;
                              $2380 = $2360 + $2376;
                              $2381 = $2361 + $2379;
                              HEAPF32[$$idx152$i$i>>2] = $2380;
                              HEAPF32[$$idx153$i$i>>2] = $2381;
                              $$idx$i$i$i$i = ((($$idx$val$i141$i)) + 60|0);
                              $$idx$val3$i$i$i$i = HEAP32[$$idx$i$i$i$i>>2]|0;
                              $2382 = ((($$idx$val$i141$i)) + 64|0);
                              HEAP32[$2382>>2] = $$idx$val3$i$i$i$i;
                              HEAP32[$2317>>2] = 0;
                              $2383 = ($2313|0)==($2142|0);
                              if ($2383) {
                               break L971;
                              } else {
                               $2314 = $2313;$iter16$sroa$0$01138$i$i = $2315;
                              }
                             }
                             if ((label|0) == 809) {
                              __THREW__ = 0;
                              invoke_v(212);
                              $2319 = __THREW__; __THREW__ = 0;
                              $2320 = ___cxa_find_matching_catch_2()|0;
                              $2321 = tempRet0;
                              $personalityslot$sroa$0$0$i$i = $2320;$personalityslot$sroa$10$0$i$i = $2321;
                              break L688;
                             }
                             else if ((label|0) == 811) {
                              __THREW__ = 0;
                              invoke_viiiii(214,(12236|0),104,1349,($$idx174$val$i$i|0),($$idx190$val$i$i|0));
                              $2323 = __THREW__; __THREW__ = 0;
                              $2324 = ___cxa_find_matching_catch_2()|0;
                              $2325 = tempRet0;
                              HEAP32[$2317>>2] = 0;
                              $personalityslot$sroa$0$0$i$i = $2324;$personalityslot$sroa$10$0$i$i = $2325;
                              break L688;
                             }
                            }
                            else if ((label|0) == 825) {
                             __THREW__ = 0;
                             invoke_viiiii(214,(9456|0),132,221,($2294|0),($collector$idx30$val|0));
                             $2404 = __THREW__; __THREW__ = 0;
                             break L665;
                            }
                           }
                          } while(0);
                          $2405 = ((($0)) + 492|0);
                          ;HEAP32[$t$sroa$0$i$i$i>>2]=HEAP32[$2405>>2]|0;HEAP32[$t$sroa$0$i$i$i+4>>2]=HEAP32[$2405+4>>2]|0;HEAP32[$t$sroa$0$i$i$i+8>>2]=HEAP32[$2405+8>>2]|0;
                          ;HEAP32[$2405>>2]=HEAP32[$969>>2]|0;HEAP32[$2405+4>>2]=HEAP32[$969+4>>2]|0;HEAP32[$2405+8>>2]=HEAP32[$969+8>>2]|0;
                          ;HEAP32[$969>>2]=HEAP32[$t$sroa$0$i$i$i>>2]|0;HEAP32[$969+4>>2]=HEAP32[$t$sroa$0$i$i$i+4>>2]|0;HEAP32[$969+8>>2]=HEAP32[$t$sroa$0$i$i$i+8>>2]|0;
                          $2406 = ((($0)) + 504|0);
                          $2407 = ((($0)) + 528|0);
                          ;HEAP32[$t$i$i$i>>2]=HEAP32[$2406>>2]|0;HEAP32[$t$i$i$i+4>>2]=HEAP32[$2406+4>>2]|0;HEAP32[$t$i$i$i+8>>2]=HEAP32[$2406+8>>2]|0;
                          ;HEAP32[$2406>>2]=HEAP32[$2407>>2]|0;HEAP32[$2406+4>>2]=HEAP32[$2407+4>>2]|0;HEAP32[$2406+8>>2]=HEAP32[$2407+8>>2]|0;
                          ;HEAP32[$2407>>2]=HEAP32[$t$i$i$i>>2]|0;HEAP32[$2407+4>>2]=HEAP32[$t$i$i$i+4>>2]|0;HEAP32[$2407+8>>2]=HEAP32[$t$i$i$i+8>>2]|0;
                          $2408 = HEAP32[$$idx$i$i$i162$i>>2]|0;
                          $2409 = HEAP32[$971>>2]|0;
                          $$cast$i$i$i$i$i$i$i = $2409;
                          $2410 = (($2409) + ($2408<<3)|0);
                          $_3$sroa$2$sroa$0$0$i$i$i = $$cast$i$i$i$i$i$i$i;
                          L1030: while(1) {
                           $2411 = $_3$sroa$2$sroa$0$0$i$i$i;
                           $2412 = $2411;$2414 = $_3$sroa$2$sroa$0$0$i$i$i;
                           while(1) {
                            $2413 = ($2412|0)==($2410|0);
                            if ($2413) {
                             break L1030;
                            }
                            $2415 = $2414;
                            $2416 = ((($2415)) + 8|0);
                            $2417 = $2416;
                            $2418 = $2415;
                            $2419 = $2418;
                            $2420 = HEAP32[$2419>>2]|0;
                            $2421 = (($2418) + 4)|0;
                            $2422 = $2421;
                            $2423 = HEAP32[$2422>>2]|0;
                            $2424 = ($2420|0)==(0);
                            $2425 = ($2423|0)==(0);
                            $2426 = $2424 & $2425;
                            if ($2426) {
                             $2412 = $2416;$2414 = $2417;
                            } else {
                             break;
                            }
                           }
                           $2427 = HEAP32[$$idx$i$i$i$i$i>>2]|0;
                           $2428 = (($2427) + -1)|0;
                           HEAP32[$$idx$i$i$i$i$i>>2] = $2428;
                           $2429 = $2415;
                           $2430 = $2429;
                           HEAP32[$2430>>2] = 0;
                           $2431 = (($2429) + 4)|0;
                           $2432 = $2431;
                           HEAP32[$2432>>2] = 0;
                           $_3$sroa$2$sroa$0$0$i$i$i = $2417;
                          }
                          $2433 = HEAP32[$1465>>2]|0;
                          $2434 = ((($0)) + 536|0);
                          $2435 = HEAP32[$2434>>2]|0;
                          $2436 = ($2435>>>0)>($2433>>>0);
                          if ($2436) {
                           HEAP32[$2434>>2] = $2433;
                          }
                          $2437 = HEAP32[$1374>>2]|0;
                          $not$$i$i$i$i134$i = ($2437|0)==(0);
                          if (!($not$$i$i$i$i134$i)) {
                           $2438 = HEAP32[$joints$i>>2]|0;
                           _free($2438);
                          }
                          $$idx5$val$i123$pr$i = HEAP32[$960>>2]|0;
                          $$idx$val$i121$i = HEAP32[$bodies$i>>2]|0;
                          $2439 = (($$idx$val$i121$i) + ($$idx5$val$i123$pr$i<<2)|0);
                          $2440 = ($$idx5$val$i123$pr$i|0)==(0);
                          if ($2440) {
                           $2470 = $$idx$val$i121$i;
                           break L509;
                          } else {
                           $2442 = $$idx$val$i121$i;
                          }
                          L1043: while(1) {
                           $2441 = HEAP32[$2442>>2]|0;
                           $2443 = HEAP32[$2441>>2]|0;
                           $2444 = (($2443) + -1)|0;
                           HEAP32[$2441>>2] = $2444;
                           $$idx$val$i$i4185 = HEAP32[$2442>>2]|0;
                           $2445 = HEAP32[$$idx$val$i$i4185>>2]|0;
                           $2446 = ($2445|0)==(0);
                           do {
                            if ($2446) {
                             $2447 = ((($2441)) + 16|0);
                             $2448 = HEAP32[$2447>>2]|0;
                             $2449 = HEAP32[$2448>>2]|0;HEAP32[$2448>>2] = (($2449-1)|0);
                             $2450 = ($2449|0)==(1);
                             if ($2450) {
                              /* fence */;
                              __THREW__ = 0;
                              invoke_vi(241,($2447|0));
                              $2451 = __THREW__; __THREW__ = 0;
                              $2452 = $2451&1;
                              if ($2452) {
                               break L1043;
                              }
                             }
                             $2453 = ((($2441)) + 172|0);
                             $2454 = HEAP32[$2453>>2]|0;
                             $switchtmp$i$i$i$i$i$i4188 = ($2454|0)==(0|0);
                             do {
                              if (!($switchtmp$i$i$i$i$i$i4188)) {
                               $$idx1$i$i$i$i$i$i$i4190 = ((($2441)) + 176|0);
                               $$idx1$val$i$i$i$i$i$i$i4191 = HEAP32[$$idx1$i$i$i$i$i$i$i4190>>2]|0;
                               $$idx1$val$val$i$i$i$i$i$i$i4192 = HEAP32[$$idx1$val$i$i$i$i$i$i$i4191>>2]|0;
                               __THREW__ = 0;
                               invoke_vi($$idx1$val$val$i$i$i$i$i$i$i4192|0,($2454|0));
                               $2455 = __THREW__; __THREW__ = 0;
                               $2456 = $2455&1;
                               if ($2456) {
                                break L1043;
                               }
                               $2457 = HEAP32[$$idx1$i$i$i$i$i$i$i4190>>2]|0;
                               $2458 = ((($2457)) + 4|0);
                               $2459 = HEAP32[$2458>>2]|0;
                               $2460 = ($2459|0)==(0);
                               if ($2460) {
                                break;
                               }
                               _free($2454);
                              }
                             } while(0);
                             $$idx3$val$i$i4195 = HEAP32[$2442>>2]|0;
                             $2461 = ((($$idx3$val$i$i4195)) + 4|0);
                             $2462 = HEAP32[$2461>>2]|0;
                             $2463 = (($2462) + -1)|0;
                             HEAP32[$2461>>2] = $2463;
                             $$idx2$val$i$i4196 = HEAP32[$2442>>2]|0;
                             $2464 = ((($$idx2$val$i$i4196)) + 4|0);
                             $2465 = HEAP32[$2464>>2]|0;
                             $2466 = ($2465|0)==(0);
                             if (!($2466)) {
                              break;
                             }
                             _free($2441);
                            }
                           } while(0);
                           $2467 = ((($2442)) + 4|0);
                           $2468 = ($2467|0)==($2439|0);
                           if ($2468) {
                            $2470 = $$idx$val$i121$i;
                            break L509;
                           } else {
                            $2442 = $2467;
                           }
                          }
                          $2471 = ___cxa_find_matching_catch_2()|0;
                          $2472 = tempRet0;
                          $2473 = HEAP32[$959>>2]|0;
                          $not$$i$i$i6$i129$i = ($2473|0)==(0);
                          if (!($not$$i$i$i6$i129$i)) {
                           _free($$idx$val$i121$i);
                          }
                          $personalityslot$sroa$0$0$i = $2471;$personalityslot$sroa$16$0$i = $2472;
                          break L585;
                         }
                        } while(0);
                        $2392 = ___cxa_find_matching_catch_2()|0;
                        $2393 = tempRet0;
                        $personalityslot$sroa$0$0$i$i = $2392;$personalityslot$sroa$10$0$i$i = $2393;
                        break L688;
                        break;
                       }
                       case 573: {
                        __THREW__ = 0;
                        invoke_v(221);
                        $1595 = __THREW__; __THREW__ = 0;
                        break L665;
                        break;
                       }
                       case 575: {
                        __THREW__ = 0;
                        invoke_v(221);
                        $1599 = __THREW__; __THREW__ = 0;
                        break L665;
                        break;
                       }
                       case 577: {
                        __THREW__ = 0;
                        invoke_vii(226,($joint_offset$0$ph$i$i|0),($$idx176$val$le1167$i$i|0));
                        $1602 = __THREW__; __THREW__ = 0;
                        label = 822;
                        break;
                       }
                       case 579: {
                        __THREW__ = 0;
                        invoke_vii(263,($$idx176$val$le1167$i$i|0),($$idx182$val$i$i|0));
                        $1604 = __THREW__; __THREW__ = 0;
                        label = 822;
                        break;
                       }
                       case 583: {
                        __THREW__ = 0;
                        invoke_v(221);
                        $1612 = __THREW__; __THREW__ = 0;
                        label = 822;
                        break;
                       }
                       case 588: {
                        __THREW__ = 0;
                        invoke_v(221);
                        $1632 = __THREW__; __THREW__ = 0;
                        label = 822;
                        break;
                       }
                       case 592: {
                        __THREW__ = 0;
                        invoke_v(221);
                        $1657 = __THREW__; __THREW__ = 0;
                        label = 822;
                        break;
                       }
                       case 596: {
                        __THREW__ = 0;
                        invoke_v(221);
                        $1665 = __THREW__; __THREW__ = 0;
                        label = 822;
                        break;
                       }
                       case 603: {
                        __THREW__ = 0;
                        invoke_v(221);
                        $1683 = __THREW__; __THREW__ = 0;
                        $1684 = ___cxa_find_matching_catch_2()|0;
                        $1685 = tempRet0;
                        $personalityslot$sroa$0$128$i$i449$i$i = $1684;$personalityslot$sroa$6$130$i$i448$i$i = $1685;
                        label = 607;
                        break;
                       }
                       case 611: {
                        __THREW__ = 0;
                        invoke_v(221);
                        $1691 = __THREW__; __THREW__ = 0;
                        $1692 = ___cxa_find_matching_catch_2()|0;
                        $1693 = tempRet0;
                        $$fca$0$extract3534$i$i517$i$i = $1692;$$fca$1$extract3736$i$i516$i$i = $1693;
                        label = 635;
                        break;
                       }
                       case 617: {
                        $1697 = $i$i141$i$i396$i$i;
                        HEAP32[$_14$i$i$i$i$i>>2] = $1697;
                        $1698 = ((($_14$i$i$i$i$i)) + 4|0);
                        HEAP32[$1698>>2] = (264);
                        HEAP32[$output$i>>2] = 1;
                        $_1$sroa$4$0$$sroa_idx3$i$i = ((($output$i)) + 4|0);
                        HEAP32[$_1$sroa$4$0$$sroa_idx3$i$i>>2] = 0;
                        $_1$sroa$5$0$$sroa_idx5$i$i = ((($output$i)) + 8|0);
                        HEAP32[$_1$sroa$5$0$$sroa_idx5$i$i>>2] = 0;
                        HEAP32[$_8$i$i>>2] = $output$i;
                        HEAP32[$_10$i$i>>2] = (5672);
                        $_9$i143$i$i398$i$i$sroa$3$0$$sroa_idx4290 = ((($_10$i$i)) + 4|0);
                        HEAP32[$_9$i143$i$i398$i$i$sroa$3$0$$sroa_idx4290>>2] = 2;
                        $_9$i143$i$i398$i$i$sroa$4$0$$sroa_idx4291 = ((($_10$i$i)) + 8|0);
                        HEAP32[$_9$i143$i$i398$i$i$sroa$4$0$$sroa_idx4291>>2] = 0;
                        $_9$i143$i$i398$i$i$sroa$54293$0$$sroa_idx4294 = ((($_10$i$i)) + 16|0);
                        HEAP32[$_9$i143$i$i398$i$i$sroa$54293$0$$sroa_idx4294>>2] = $_14$i$i$i$i$i;
                        $_9$i143$i$i398$i$i$sroa$6$0$$sroa_idx4295 = ((($_10$i$i)) + 20|0);
                        HEAP32[$_9$i143$i$i398$i$i$sroa$6$0$$sroa_idx4295>>2] = 1;
                        __THREW__ = 0;
                        (invoke_iiii(244,($_8$i$i|0),(1864|0),($_10$i$i|0))|0);
                        $1699 = __THREW__; __THREW__ = 0;
                        $1700 = $1699&1;
                        do {
                         if ($1700) {
                          $1701 = ___cxa_find_matching_catch_2()|0;
                          $1702 = tempRet0;
                          $1703 = HEAP32[$_1$sroa$4$0$$sroa_idx3$i$i>>2]|0;
                          $not$$i$i$i$i$i$i4168 = ($1703|0)==(0);
                          if ($not$$i$i$i$i$i$i4168) {
                           $eh$lpad$body$index23Z2D = $1702;$eh$lpad$body$indexZ2D = $1701;
                           break;
                          }
                          $1704 = HEAP32[$output$i>>2]|0;
                          _free($1704);
                          $eh$lpad$body$index23Z2D = $1702;$eh$lpad$body$indexZ2D = $1701;
                         } else {
                          ;HEAP32[$_8$i142$i$i397$i$i>>2]=HEAP32[$output$i>>2]|0;HEAP32[$_8$i142$i$i397$i$i+4>>2]=HEAP32[$output$i+4>>2]|0;HEAP32[$_8$i142$i$i397$i$i+8>>2]=HEAP32[$output$i+8>>2]|0;
                          __THREW__ = 0;
                          invoke_vi(265,($_8$i142$i$i397$i$i|0));
                          $1705 = __THREW__; __THREW__ = 0;
                          $1706 = ___cxa_find_matching_catch_2()|0;
                          $1707 = tempRet0;
                          $eh$lpad$body$index23Z2D = $1707;$eh$lpad$body$indexZ2D = $1706;
                         }
                        } while(0);
                        $switchtmp$i$i$i527$i$i = ($1727|0)==(0|0);
                        if ($switchtmp$i$i$i527$i$i) {
                         $$fca$0$extract3534$i$i517$i$i = $eh$lpad$body$indexZ2D;$$fca$1$extract3736$i$i516$i$i = $eh$lpad$body$index23Z2D;
                         label = 635;
                         break;
                        }
                        $1800 = $opt_rb2$i$sroa$5$1$i466$i$i;
                        $1801 = HEAP32[$1800>>2]|0;
                        $1802 = (($1801) + -1)|0;
                        HEAP32[$1800>>2] = $1802;
                        $$fca$0$extract3534$i$i517$i$i = $eh$lpad$body$indexZ2D;$$fca$1$extract3736$i$i516$i$i = $eh$lpad$body$index23Z2D;
                        label = 635;
                        break;
                       }
                       case 639: {
                        __THREW__ = 0;
                        invoke_viiiii(214,(9849|0),129,40,($iter$sroa$0$042$i$i434$i$i|0),($1606|0));
                        $1803 = __THREW__; __THREW__ = 0;
                        label = 822;
                        break;
                       }
                       case 643: {
                        __THREW__ = 0;
                        invoke_vii(226,($joint_offset$0$ph$i$i|0),($$idx176$val$le$i$i|0));
                        $1809 = __THREW__; __THREW__ = 0;
                        label = 820;
                        break;
                       }
                       case 645: {
                        __THREW__ = 0;
                        invoke_vii(263,($$idx176$val$le$i$i|0),($$idx185$val$i$i|0));
                        $1811 = __THREW__; __THREW__ = 0;
                        label = 820;
                        break;
                       }
                       case 649: {
                        __THREW__ = 0;
                        invoke_v(221);
                        $1823 = __THREW__; __THREW__ = 0;
                        label = 820;
                        break;
                       }
                       case 654: {
                        __THREW__ = 0;
                        invoke_v(221);
                        $1857 = __THREW__; __THREW__ = 0;
                        label = 820;
                        break;
                       }
                       case 658: {
                        __THREW__ = 0;
                        invoke_v(221);
                        $1890 = __THREW__; __THREW__ = 0;
                        label = 820;
                        break;
                       }
                       case 662: {
                        __THREW__ = 0;
                        invoke_v(221);
                        $1898 = __THREW__; __THREW__ = 0;
                        label = 820;
                        break;
                       }
                       case 669: {
                        __THREW__ = 0;
                        invoke_v(221);
                        $1916 = __THREW__; __THREW__ = 0;
                        $1917 = ___cxa_find_matching_catch_2()|0;
                        $1918 = tempRet0;
                        $personalityslot$sroa$0$128$i$i$i$i = $1917;$personalityslot$sroa$6$130$i$i$i$i = $1918;
                        label = 673;
                        break;
                       }
                       case 677: {
                        __THREW__ = 0;
                        invoke_v(221);
                        $1924 = __THREW__; __THREW__ = 0;
                        $1925 = ___cxa_find_matching_catch_2()|0;
                        $1926 = tempRet0;
                        $$fca$0$extract3534$i$i$i$i = $1925;$$fca$1$extract3736$i$i$i$i = $1926;
                        label = 701;
                        break;
                       }
                       case 683: {
                        $1930 = $i$i141$i$i$i$i;
                        HEAP32[$_14$i$i$i$i$i>>2] = $1930;
                        $1931 = ((($_14$i$i$i$i$i)) + 4|0);
                        HEAP32[$1931>>2] = (264);
                        HEAP32[$output$i4172>>2] = 1;
                        $_1$sroa$4$0$$sroa_idx3$i$i4174 = ((($output$i4172)) + 4|0);
                        HEAP32[$_1$sroa$4$0$$sroa_idx3$i$i4174>>2] = 0;
                        $_1$sroa$5$0$$sroa_idx5$i$i4175 = ((($output$i4172)) + 8|0);
                        HEAP32[$_1$sroa$5$0$$sroa_idx5$i$i4175>>2] = 0;
                        HEAP32[$_8$i$i4170>>2] = $output$i4172;
                        HEAP32[$_10$i$i4171>>2] = (5672);
                        $_9$i143$i$i$i$i$sroa$3$0$$sroa_idx4283 = ((($_10$i$i4171)) + 4|0);
                        HEAP32[$_9$i143$i$i$i$i$sroa$3$0$$sroa_idx4283>>2] = 2;
                        $_9$i143$i$i$i$i$sroa$4$0$$sroa_idx4284 = ((($_10$i$i4171)) + 8|0);
                        HEAP32[$_9$i143$i$i$i$i$sroa$4$0$$sroa_idx4284>>2] = 0;
                        $_9$i143$i$i$i$i$sroa$54286$0$$sroa_idx4287 = ((($_10$i$i4171)) + 16|0);
                        HEAP32[$_9$i143$i$i$i$i$sroa$54286$0$$sroa_idx4287>>2] = $_14$i$i$i$i$i;
                        $_9$i143$i$i$i$i$sroa$6$0$$sroa_idx4288 = ((($_10$i$i4171)) + 20|0);
                        HEAP32[$_9$i143$i$i$i$i$sroa$6$0$$sroa_idx4288>>2] = 1;
                        __THREW__ = 0;
                        (invoke_iiii(244,($_8$i$i4170|0),(1864|0),($_10$i$i4171|0))|0);
                        $1932 = __THREW__; __THREW__ = 0;
                        $1933 = $1932&1;
                        do {
                         if ($1933) {
                          $1934 = ___cxa_find_matching_catch_2()|0;
                          $1935 = tempRet0;
                          $1936 = HEAP32[$_1$sroa$4$0$$sroa_idx3$i$i4174>>2]|0;
                          $not$$i$i$i$i$i$i4180 = ($1936|0)==(0);
                          if ($not$$i$i$i$i$i$i4180) {
                           $eh$lpad$body4183$index30Z2D = $1935;$eh$lpad$body4183$indexZ2D = $1934;
                           break;
                          }
                          $1937 = HEAP32[$output$i4172>>2]|0;
                          _free($1937);
                          $eh$lpad$body4183$index30Z2D = $1935;$eh$lpad$body4183$indexZ2D = $1934;
                         } else {
                          ;HEAP32[$_8$i142$i$i$i$i>>2]=HEAP32[$output$i4172>>2]|0;HEAP32[$_8$i142$i$i$i$i+4>>2]=HEAP32[$output$i4172+4>>2]|0;HEAP32[$_8$i142$i$i$i$i+8>>2]=HEAP32[$output$i4172+8>>2]|0;
                          __THREW__ = 0;
                          invoke_vi(265,($_8$i142$i$i$i$i|0));
                          $1938 = __THREW__; __THREW__ = 0;
                          $1939 = ___cxa_find_matching_catch_2()|0;
                          $1940 = tempRet0;
                          $eh$lpad$body4183$index30Z2D = $1940;$eh$lpad$body4183$indexZ2D = $1939;
                         }
                        } while(0);
                        $switchtmp$i$i$i$i$i = ($1960|0)==(0|0);
                        if ($switchtmp$i$i$i$i$i) {
                         $$fca$0$extract3534$i$i$i$i = $eh$lpad$body4183$indexZ2D;$$fca$1$extract3736$i$i$i$i = $eh$lpad$body4183$index30Z2D;
                         label = 701;
                         break;
                        }
                        $2033 = $opt_rb2$i$sroa$5$1$i$i$i;
                        $2034 = HEAP32[$2033>>2]|0;
                        $2035 = (($2034) + -1)|0;
                        HEAP32[$2033>>2] = $2035;
                        $$fca$0$extract3534$i$i$i$i = $eh$lpad$body4183$indexZ2D;$$fca$1$extract3736$i$i$i$i = $eh$lpad$body4183$index30Z2D;
                        label = 701;
                        break;
                       }
                       case 705: {
                        __THREW__ = 0;
                        invoke_viiiii(214,(9849|0),129,40,($iter$sroa$0$042$i$i$i$i|0),($1813|0));
                        $2036 = __THREW__; __THREW__ = 0;
                        label = 820;
                        break;
                       }
                       case 707: {
                        __THREW__ = 0;
                        invoke_vii(226,2,($1813|0));
                        $2038 = __THREW__; __THREW__ = 0;
                        label = 820;
                        break;
                       }
                       case 712: {
                        __THREW__ = 0;
                        invoke_v(221);
                        $2059 = __THREW__; __THREW__ = 0;
                        $2060 = ___cxa_find_matching_catch_2()|0;
                        $2061 = tempRet0;
                        $personalityslot$sroa$0$195$i$i$i$i$i$i$i = $2060;$personalityslot$sroa$8$197$i$i$i$i$i$i$i = $2061;
                        label = 716;
                        break;
                       }
                       case 720: {
                        __THREW__ = 0;
                        invoke_v(221);
                        $2070 = __THREW__; __THREW__ = 0;
                        $2071 = ___cxa_find_matching_catch_2()|0;
                        $2072 = tempRet0;
                        $switch21tmp$i$i$i$i$i$i$i = ($opt_rb1$i$sroa$0$0$i$i$i$i$i$i|0)==(0|0);
                        if ($switch21tmp$i$i$i$i$i$i$i) {
                         $personalityslot$sroa$0$195$i$i$i$i$i$i$i = $2071;$personalityslot$sroa$8$197$i$i$i$i$i$i$i = $2072;
                         label = 716;
                         break;
                        }
                        $2112 = HEAP32[$opt_rb1$i$sroa$6$0$i$i$i$i$i$i>>2]|0;
                        $2113 = (($2112) + -1)|0;
                        HEAP32[$opt_rb1$i$sroa$6$0$i$i$i$i$i$i>>2] = $2113;
                        $personalityslot$sroa$0$195$i$i$i$i$i$i$i = $2071;$personalityslot$sroa$8$197$i$i$i$i$i$i$i = $2072;
                        label = 716;
                        break;
                       }
                       case 737: {
                        __THREW__ = 0;
                        invoke_viiiii(214,(9607|0),120,48,0,0);
                        $2122 = __THREW__; __THREW__ = 0;
                        label = 820;
                        break;
                       }
                       case 814: {
                        // unreachable;
                        break;
                       }
                       case 819: {
                        __THREW__ = 0;
                        invoke_viiiii(214,(9456|0),132,140,($1563|0),($collector$idx30$val|0));
                        $2394 = __THREW__; __THREW__ = 0;
                        break L665;
                        break;
                       }
                      }
                      do {
                       if ((label|0) == 635) {
                        $switchtmp$i90$i$i518$i$i = ($1708|0)==(0|0);
                        if ($switchtmp$i90$i$i518$i$i) {
                         $personalityslot$sroa$0$128$i$i449$i$i = $$fca$0$extract3534$i$i517$i$i;$personalityslot$sroa$6$130$i$i448$i$i = $$fca$1$extract3736$i$i516$i$i;
                         label = 607;
                         break;
                        }
                        $1797 = $opt_rb1$i$sroa$5$1$i453$i$i;
                        $1798 = HEAP32[$1797>>2]|0;
                        $1799 = (($1798) + -1)|0;
                        HEAP32[$1797>>2] = $1799;
                        $personalityslot$sroa$0$128$i$i449$i$i = $$fca$0$extract3534$i$i517$i$i;$personalityslot$sroa$6$130$i$i448$i$i = $$fca$1$extract3736$i$i516$i$i;
                        label = 607;
                       }
                       else if ((label|0) == 701) {
                        $switchtmp$i90$i$i$i$i = ($1941|0)==(0|0);
                        if ($switchtmp$i90$i$i$i$i) {
                         $personalityslot$sroa$0$128$i$i$i$i = $$fca$0$extract3534$i$i$i$i;$personalityslot$sroa$6$130$i$i$i$i = $$fca$1$extract3736$i$i$i$i;
                         label = 673;
                         break;
                        }
                        $2030 = $opt_rb1$i$sroa$5$1$i$i$i;
                        $2031 = HEAP32[$2030>>2]|0;
                        $2032 = (($2031) + -1)|0;
                        HEAP32[$2030>>2] = $2032;
                        $personalityslot$sroa$0$128$i$i$i$i = $$fca$0$extract3534$i$i$i$i;$personalityslot$sroa$6$130$i$i$i$i = $$fca$1$extract3736$i$i$i$i;
                        label = 673;
                       }
                       else if ((label|0) == 716) {
                        $eh$lpad$body$i$i$index37Z2D = $personalityslot$sroa$8$197$i$i$i$i$i$i$i;$eh$lpad$body$i$i$indexZ2D = $personalityslot$sroa$0$195$i$i$i$i$i$i$i;
                        label = 821;
                       }
                       else if ((label|0) == 820) {
                        $2395 = ___cxa_find_matching_catch_2()|0;
                        $2396 = tempRet0;
                        $eh$lpad$body$i$i$index37Z2D = $2396;$eh$lpad$body$i$i$indexZ2D = $2395;
                        label = 821;
                       }
                       else if ((label|0) == 822) {
                        $2399 = ___cxa_find_matching_catch_2()|0;
                        $2400 = tempRet0;
                        $eh$lpad$body539$i$i$index43Z2D = $2400;$eh$lpad$body539$i$i$indexZ2D = $2399;
                        label = 823;
                       }
                      } while(0);
                      if ((label|0) == 607) {
                       $eh$lpad$body539$i$i$index43Z2D = $personalityslot$sroa$6$130$i$i448$i$i;$eh$lpad$body539$i$i$indexZ2D = $personalityslot$sroa$0$128$i$i449$i$i;
                       label = 823;
                      }
                      else if ((label|0) == 673) {
                       $eh$lpad$body$i$i$index37Z2D = $personalityslot$sroa$6$130$i$i$i$i;$eh$lpad$body$i$i$indexZ2D = $personalityslot$sroa$0$128$i$i$i$i;
                       label = 821;
                      }
                      if ((label|0) == 821) {
                       $2397 = HEAP32[$1597>>2]|0;
                       $2398 = (($2397) + -1)|0;
                       HEAP32[$1597>>2] = $2398;
                       $personalityslot$sroa$0$0$i$i = $eh$lpad$body$i$i$indexZ2D;$personalityslot$sroa$10$0$i$i = $eh$lpad$body$i$i$index37Z2D;
                       break;
                      }
                      else if ((label|0) == 823) {
                       $2401 = HEAP32[$1593>>2]|0;
                       $2402 = (($2401) + -1)|0;
                       HEAP32[$1593>>2] = $2402;
                       $personalityslot$sroa$0$0$i$i = $eh$lpad$body539$i$i$indexZ2D;$personalityslot$sroa$10$0$i$i = $eh$lpad$body539$i$i$index43Z2D;
                       break;
                      }
                      break;
                     }
                     case 531: {
                      __THREW__ = 0;
                      invoke_v(221);
                      $1506 = __THREW__; __THREW__ = 0;
                      break L665;
                      break;
                     }
                     case 535: {
                      __THREW__ = 0;
                      invoke_v(221);
                      $1514 = __THREW__; __THREW__ = 0;
                      $1515 = ___cxa_find_matching_catch_2()|0;
                      $1516 = tempRet0;
                      $personalityslot$sroa$0$1$i$i = $1515;$personalityslot$sroa$10$1$i$i = $1516;
                      label = 533;
                      break;
                     }
                     case 537: {
                      __THREW__ = 0;
                      invoke_viiiii(214,(12236|0),104,1358,($iter2$sroa$10$0$i$i|0),($$idx180$val$i$i|0));
                      $1520 = __THREW__; __THREW__ = 0;
                      label = 817;
                      break;
                     }
                     case 539: {
                      __THREW__ = 0;
                      invoke_vii(226,($1498|0),($1523|0));
                      $1525 = __THREW__; __THREW__ = 0;
                      label = 817;
                      break;
                     }
                     case 541: {
                      __THREW__ = 0;
                      invoke_vii(263,($1523|0),($$idx3$val$i349$i$i|0));
                      $1527 = __THREW__; __THREW__ = 0;
                      label = 817;
                      break;
                     }
                     case 544: {
                      __THREW__ = 0;
                      invoke_viiiii(214,(11401|0),99,534,($iter2$sroa$10$0$i$i|0),($$idx161$val$i$i|0));
                      $1547 = __THREW__; __THREW__ = 0;
                      label = 817;
                      break;
                     }
                     case 546: {
                      __THREW__ = 0;
                      invoke_viiiii(214,(11401|0),99,524,1,($1522|0));
                      $1549 = __THREW__; __THREW__ = 0;
                      label = 817;
                      break;
                     }
                     case 547: {
                      __THREW__ = 0;
                      invoke_viiiii(214,(9727|0),122,109,0,0);
                      $1550 = __THREW__; __THREW__ = 0;
                      label = 817;
                      break;
                     }
                     case 816: {
                      __THREW__ = 0;
                      invoke_viiiii(214,(9456|0),132,118,($1496|0),($collector$idx30$val|0));
                      $2387 = __THREW__; __THREW__ = 0;
                      break L665;
                      break;
                     }
                    }
                    if ((label|0) == 817) {
                     $2388 = ___cxa_find_matching_catch_2()|0;
                     $2389 = tempRet0;
                     $2390 = HEAP32[$1512>>2]|0;
                     $2391 = (($2390) + -1)|0;
                     HEAP32[$1512>>2] = $2391;
                     $personalityslot$sroa$0$1$i$i = $2388;$personalityslot$sroa$10$1$i$i = $2389;
                     label = 533;
                    }
                    if ((label|0) == 533) {
                     $1507 = HEAP32[$1504>>2]|0;
                     $1508 = (($1507) + -1)|0;
                     HEAP32[$1504>>2] = $1508;
                     $personalityslot$sroa$0$0$i$i = $personalityslot$sroa$0$1$i$i;$personalityslot$sroa$10$0$i$i = $personalityslot$sroa$10$1$i$i;
                    }
                    $eh$lpad$body144$i$index59Z2D = $personalityslot$sroa$10$0$i$i;$eh$lpad$body144$i$indexZ2D = $personalityslot$sroa$0$0$i$i;
                    label = 880;
                    break L650;
                   }
                   else if ((label|0) == 814) {
                    // unreachable;
                   }
                   else if ((label|0) == 815) {
                    __THREW__ = 0;
                    invoke_viiiii(214,(9456|0),132,102,($1442|0),($collector$idx30$val|0));
                    $2386 = __THREW__; __THREW__ = 0;
                   }
                  } while(0);
                  $2538 = ___cxa_find_matching_catch_2()|0;
                  $2539 = tempRet0;
                  $eh$lpad$body144$i$index59Z2D = $2539;$eh$lpad$body144$i$indexZ2D = $2538;
                  label = 880;
                 }
                 else if ((label|0) == 869) {
                  $2518 = ___cxa_find_matching_catch_2()|0;
                  $2519 = tempRet0;
                  $2520 = HEAP32[$1398>>2]|0;
                  $2521 = (($2520) + -1)|0;
                  HEAP32[$1398>>2] = $2521;
                  $personalityslot$sroa$0$4$i = $2518;$personalityslot$sroa$16$4$i = $2519;
                 }
                 else if ((label|0) == 870) {
                  $2522 = ___cxa_find_matching_catch_2()|0;
                  $2523 = tempRet0;
                  $2524 = HEAP32[$1420>>2]|0;
                  $2525 = (($2524) + -1)|0;
                  HEAP32[$1420>>2] = $2525;
                  $personalityslot$sroa$0$4$i = $2522;$personalityslot$sroa$16$4$i = $2523;
                 }
                 else if ((label|0) == 874) {
                  // unreachable;
                 }
                 else if ((label|0) == 876) {
                  $2532 = ___cxa_find_matching_catch_2()|0;
                  $2533 = tempRet0;
                  $eh$lpad$body144$i$index59Z2D = $2533;$eh$lpad$body144$i$indexZ2D = $2532;
                  label = 880;
                 }
                 else if ((label|0) == 877) {
                  $2534 = ___cxa_find_matching_catch_2()|0;
                  $2535 = tempRet0;
                  $eh$lpad$body144$i$index59Z2D = $2535;$eh$lpad$body144$i$indexZ2D = $2534;
                  label = 880;
                 }
                 else if ((label|0) == 878) {
                  $2536 = ___cxa_find_matching_catch_2()|0;
                  $2537 = tempRet0;
                  $eh$lpad$body144$i$index59Z2D = $2537;$eh$lpad$body144$i$indexZ2D = $2536;
                  label = 880;
                 }
                } while(0);
                if ((label|0) == 880) {
                 $personalityslot$sroa$0$4$i = $eh$lpad$body144$i$indexZ2D;$personalityslot$sroa$16$4$i = $eh$lpad$body144$i$index59Z2D;
                }
                $2516 = HEAP32[$1374>>2]|0;
                $not$$i$i$i$i$i = ($2516|0)==(0);
                if ($not$$i$i$i$i$i) {
                 $personalityslot$sroa$0$1$i = $personalityslot$sroa$0$4$i;$personalityslot$sroa$16$1$i = $personalityslot$sroa$16$4$i;
                 label = 850;
                 break L585;
                }
                $2517 = HEAP32[$joints$i>>2]|0;
                _free($2517);
                $personalityslot$sroa$0$1$i = $personalityslot$sroa$0$4$i;$personalityslot$sroa$16$1$i = $personalityslot$sroa$16$4$i;
                label = 850;
                break L585;
                break;
               }
               case 874: {
                // unreachable;
                break;
               }
              }
              if ((label|0) == 865) {
               $2508 = ___cxa_find_matching_catch_2()|0;
               $2509 = tempRet0;
               $2510 = HEAP32[$1331>>2]|0;
               $2511 = (($2510) + -1)|0;
               HEAP32[$1331>>2] = $2511;
               $personalityslot$sroa$0$1$i = $2508;$personalityslot$sroa$16$1$i = $2509;
               label = 850;
               break;
              }
              else if ((label|0) == 866) {
               $2512 = ___cxa_find_matching_catch_2()|0;
               $2513 = tempRet0;
               $2514 = HEAP32[$1353>>2]|0;
               $2515 = (($2514) + -1)|0;
               HEAP32[$1353>>2] = $2515;
               $personalityslot$sroa$0$1$i = $2512;$personalityslot$sroa$16$1$i = $2513;
               label = 850;
               break;
              }
              break;
             }
             case 871: {
              $2526 = ___cxa_find_matching_catch_2()|0;
              $2527 = tempRet0;
              $eh$lpad$body182$i$index49Z2D = $2527;$eh$lpad$body182$i$indexZ2D = $2526;
              label = 873;
              break;
             }
            }
            if ((label|0) == 434) {
             _free($old_table$i$sroa$11$0$copyload$i$i$i$i);
             $personalityslot$sroa$0$0$i$i$i$i$i = $personalityslot$sroa$0$1336$i$i$i$i$i;$personalityslot$sroa$6$0$i$i$i$i$i = $personalityslot$sroa$6$1335$i$i$i$i$i;
             label = 415;
            }
            else if ((label|0) == 872) {
             $2528 = ___cxa_find_matching_catch_2()|0;
             $2529 = tempRet0;
             $eh$lpad$body182$i$index49Z2D = $2529;$eh$lpad$body182$i$indexZ2D = $2528;
             label = 873;
            }
            if ((label|0) == 415) {
             $eh$lpad$body182$i$index49Z2D = $personalityslot$sroa$6$0$i$i$i$i$i;$eh$lpad$body182$i$indexZ2D = $personalityslot$sroa$0$0$i$i$i$i$i;
             label = 873;
            }
            if ((label|0) == 873) {
             $personalityslot$sroa$0$1$i = $eh$lpad$body182$i$indexZ2D;$personalityslot$sroa$16$1$i = $eh$lpad$body182$i$index49Z2D;
             label = 850;
            }
            do {
             if ((label|0) == 850) {
              $$idx$val$i117$i = HEAP32[$bodies$i>>2]|0;
              $$idx5$val$i$i = HEAP32[$960>>2]|0;
              $2474 = (($$idx$val$i117$i) + ($$idx5$val$i$i<<2)|0);
              $2475 = ($$idx5$val$i$i|0)==(0);
              L1134: do {
               if (!($2475)) {
                $2477 = $$idx$val$i117$i;
                L1135: while(1) {
                 $2476 = HEAP32[$2477>>2]|0;
                 $2478 = HEAP32[$2476>>2]|0;
                 $2479 = (($2478) + -1)|0;
                 HEAP32[$2476>>2] = $2479;
                 $$idx$val$i$i4203 = HEAP32[$2477>>2]|0;
                 $2480 = HEAP32[$$idx$val$i$i4203>>2]|0;
                 $2481 = ($2480|0)==(0);
                 do {
                  if ($2481) {
                   $2482 = ((($2476)) + 16|0);
                   $2483 = HEAP32[$2482>>2]|0;
                   $2484 = HEAP32[$2483>>2]|0;HEAP32[$2483>>2] = (($2484-1)|0);
                   $2485 = ($2484|0)==(1);
                   if ($2485) {
                    /* fence */;
                    __THREW__ = 0;
                    invoke_vi(241,($2482|0));
                    $2486 = __THREW__; __THREW__ = 0;
                    $2487 = $2486&1;
                    if ($2487) {
                     break L1135;
                    }
                   }
                   $2488 = ((($2476)) + 172|0);
                   $2489 = HEAP32[$2488>>2]|0;
                   $switchtmp$i$i$i$i$i$i4206 = ($2489|0)==(0|0);
                   do {
                    if (!($switchtmp$i$i$i$i$i$i4206)) {
                     $$idx1$i$i$i$i$i$i$i4208 = ((($2476)) + 176|0);
                     $$idx1$val$i$i$i$i$i$i$i4209 = HEAP32[$$idx1$i$i$i$i$i$i$i4208>>2]|0;
                     $$idx1$val$val$i$i$i$i$i$i$i4210 = HEAP32[$$idx1$val$i$i$i$i$i$i$i4209>>2]|0;
                     __THREW__ = 0;
                     invoke_vi($$idx1$val$val$i$i$i$i$i$i$i4210|0,($2489|0));
                     $2490 = __THREW__; __THREW__ = 0;
                     $2491 = $2490&1;
                     if ($2491) {
                      break L1135;
                     }
                     $2492 = HEAP32[$$idx1$i$i$i$i$i$i$i4208>>2]|0;
                     $2493 = ((($2492)) + 4|0);
                     $2494 = HEAP32[$2493>>2]|0;
                     $2495 = ($2494|0)==(0);
                     if ($2495) {
                      break;
                     }
                     _free($2489);
                    }
                   } while(0);
                   $$idx3$val$i$i4213 = HEAP32[$2477>>2]|0;
                   $2496 = ((($$idx3$val$i$i4213)) + 4|0);
                   $2497 = HEAP32[$2496>>2]|0;
                   $2498 = (($2497) + -1)|0;
                   HEAP32[$2496>>2] = $2498;
                   $$idx2$val$i$i4214 = HEAP32[$2477>>2]|0;
                   $2499 = ((($$idx2$val$i$i4214)) + 4|0);
                   $2500 = HEAP32[$2499>>2]|0;
                   $2501 = ($2500|0)==(0);
                   if (!($2501)) {
                    break;
                   }
                   _free($2476);
                  }
                 } while(0);
                 $2502 = ((($2477)) + 4|0);
                 $2503 = ($2502|0)==($2474|0);
                 if ($2503) {
                  break L1134;
                 } else {
                  $2477 = $2502;
                 }
                }
                $2505 = ___cxa_find_matching_catch_2()|0;
                $2506 = tempRet0;
                $2507 = HEAP32[$959>>2]|0;
                $not$$i$i$i6$i$i = ($2507|0)==(0);
                if ($not$$i$i$i6$i$i) {
                 $$pre1784$pre$phiZZ2D = $collector;$eh$lpad$body70$index102Z2D = $2506;$eh$lpad$body70$indexZ2D = $2505;
                 label = 912;
                 break L438;
                }
                _free($$idx$val$i117$i);
                $$pre1784$pre$phiZZ2D = $collector;$eh$lpad$body70$index102Z2D = $2506;$eh$lpad$body70$indexZ2D = $2505;
                label = 912;
                break L438;
               }
              } while(0);
              $2504 = HEAP32[$959>>2]|0;
              $not$$i$i$i$i118$i = ($2504|0)==(0);
              if ($not$$i$i$i$i118$i) {
               $personalityslot$sroa$0$0$i = $personalityslot$sroa$0$1$i;$personalityslot$sroa$16$0$i = $personalityslot$sroa$16$1$i;
               break;
              }
              _free($$idx$val$i117$i);
              $personalityslot$sroa$0$0$i = $personalityslot$sroa$0$1$i;$personalityslot$sroa$16$0$i = $personalityslot$sroa$16$1$i;
             }
            } while(0);
            $$pre1784$pre$phiZZ2D = $collector;$eh$lpad$body70$index102Z2D = $personalityslot$sroa$16$0$i;$eh$lpad$body70$indexZ2D = $personalityslot$sroa$0$0$i;
            label = 912;
            break L438;
           }
          } while(0);
          $2469 = HEAP32[$959>>2]|0;
          $not$$i$i$i$i126$i = ($2469|0)==(0);
          if (!($not$$i$i$i$i126$i)) {
           _free($2470);
          }
          $2540 = HEAP32[$818>>2]|0;
          $2541 = ($2540|0)==(0);
          L1158: do {
           if (!($2541)) {
            $2542 = HEAP32[$collector>>2]|0;
            $2544 = $2540;
            while(1) {
             $2543 = (($2544) + -1)|0;
             HEAP32[$818>>2] = $2543;
             $2545 = (($2542) + (($2543*40)|0)|0);
             __THREW__ = 0;
             invoke_vi(254,($2545|0));
             $2546 = __THREW__; __THREW__ = 0;
             $2547 = $2546&1;
             if ($2547) {
              break;
             }
             $2548 = ($2543|0)==(0);
             if ($2548) {
              break L1158;
             } else {
              $2544 = $2543;
             }
            }
            $2580 = ___cxa_find_matching_catch_2()|0;
            $2581 = tempRet0;
            $$pre1784$pre$phiZZ2D = $collector;$eh$lpad$body70$index102Z2D = $2581;$eh$lpad$body70$indexZ2D = $2580;
            label = 912;
            break L438;
           }
          } while(0);
          $2549 = HEAP32[$817>>2]|0;
          $not$$i$i$i$i51 = ($2549|0)==(0);
          if ($not$$i$i$i$i51) {
           STACKTOP = sp;return;
          }
          $2550 = HEAP32[$collector>>2]|0;
          _free($2550);
          STACKTOP = sp;return;
          break;
         }
         case 913: {
          $2584 = ___cxa_find_matching_catch_2()|0;
          $2585 = tempRet0;
          $lpad$phi627$index = $2584;$lpad$phi627$index111 = $2585;
          label = 915;
          break;
         }
        }
        if ((label|0) == 914) {
         $2586 = ___cxa_find_matching_catch_2()|0;
         $2587 = tempRet0;
         $lpad$phi627$index = $2586;$lpad$phi627$index111 = $2587;
         label = 915;
        }
        else if ((label|0) == 916) {
         $2588 = ___cxa_find_matching_catch_2()|0;
         $2589 = tempRet0;
         $personalityslot$sroa$0$1 = $2588;$personalityslot$sroa$19$1 = $2589;
        }
        if ((label|0) == 915) {
         $personalityslot$sroa$0$1 = $lpad$phi627$index;$personalityslot$sroa$19$1 = $lpad$phi627$index111;
        }
        $877 = HEAP32[$_134$sroa$8$0$$sroa_idx545>>2]|0;
        $not$$i$i$i$i$i329 = ($877|0)==(0);
        if ($not$$i$i$i$i$i329) {
         $$idx$i39$pre$phiZZZ2D = $collector;$personalityslot$sroa$0$6 = $personalityslot$sroa$0$1;$personalityslot$sroa$19$6 = $personalityslot$sroa$19$1;
        } else {
         $878 = HEAP32[$_134$sroa$7$0$$sroa_idx542>>2]|0;
         _free($878);
         $$idx$i39$pre$phiZZZ2D = $collector;$personalityslot$sroa$0$6 = $personalityslot$sroa$0$1;$personalityslot$sroa$19$6 = $personalityslot$sroa$19$1;
        }
       }
      } while(0);
      if ((label|0) == 911) {
       $2582 = ___cxa_find_matching_catch_2()|0;
       $2583 = tempRet0;
       $$pre1784$pre$phiZZ2D = $collector;$eh$lpad$body70$index102Z2D = $2583;$eh$lpad$body70$indexZ2D = $2582;
       label = 912;
      }
      if ((label|0) == 912) {
       $$idx$i39$pre$phiZZZ2D = $$pre1784$pre$phiZZ2D;$personalityslot$sroa$0$6 = $eh$lpad$body70$indexZ2D;$personalityslot$sroa$19$6 = $eh$lpad$body70$index102Z2D;
      }
      $$idx$val$i40 = HEAP32[$$idx$i39$pre$phiZZZ2D>>2]|0;
      $$idx5$val$i = HEAP32[$818>>2]|0;
      $2557 = (($$idx$val$i40) + (($$idx5$val$i*40)|0)|0);
      $2558 = ($$idx5$val$i|0)==(0);
      L1196: do {
       if (!($2558)) {
        $2559 = $$idx$val$i40;
        while(1) {
         __THREW__ = 0;
         invoke_vi(254,($2559|0));
         $2560 = __THREW__; __THREW__ = 0;
         $2561 = $2560&1;
         if ($2561) {
          break;
         }
         $2562 = ((($2559)) + 40|0);
         $2563 = ($2562|0)==($2557|0);
         if ($2563) {
          break L1196;
         } else {
          $2559 = $2562;
         }
        }
        $2565 = ___cxa_find_matching_catch_2()|0;
        $2566 = tempRet0;
        $2567 = HEAP32[$817>>2]|0;
        $not$$i$i$i6$i = ($2567|0)==(0);
        if ($not$$i$i$i6$i) {
         ___resumeException($2565|0);
         // unreachable;
        }
        _free($$idx$val$i40);
        ___resumeException($2565|0);
        // unreachable;
       }
      } while(0);
      $2564 = HEAP32[$817>>2]|0;
      $not$$i$i$i$i = ($2564|0)==(0);
      if ($not$$i$i$i$i) {
       $personalityslot$sroa$0$0 = $personalityslot$sroa$0$6;$personalityslot$sroa$19$0 = $personalityslot$sroa$19$6;
       ___resumeException($personalityslot$sroa$0$0|0);
       // unreachable;
      }
      _free($$idx$val$i40);
      $personalityslot$sroa$0$0 = $personalityslot$sroa$0$6;$personalityslot$sroa$19$0 = $personalityslot$sroa$19$6;
      ___resumeException($personalityslot$sroa$0$0|0);
      // unreachable;
     }
    }
   } while(0);
   $2578 = ___cxa_find_matching_catch_2()|0;
   $2579 = tempRet0;
   $eh$lpad$body288$index88Z2D = $2579;$eh$lpad$body288$indexZ2D = $2578;
  }
 } while(0);
 if ((label|0) == 174) {
  $eh$lpad$body288$index88Z2D = $personalityslot$sroa$12$0$i;$eh$lpad$body288$indexZ2D = $personalityslot$sroa$0$0$i215;
 }
 HEAP32[$509>>2] = 0;
 $personalityslot$sroa$0$0 = $eh$lpad$body288$indexZ2D;$personalityslot$sroa$19$0 = $eh$lpad$body288$index88Z2D;
 ___resumeException($personalityslot$sroa$0$0|0);
 // unreachable;
}
function __ZN4core3fmt5Write10write_char17h6c9d4222bb591802E($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$idx$i$i$i = 0, $$idx$val$i$i$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, $_12 = 0, $_12$1$$sroa_raw_idx = 0, $_12$1$$sroa_raw_idx12 = 0, $_12$1$$sroa_raw_idx14 = 0, $_12$2$$sroa_raw_idx = 0, $_12$2$$sroa_raw_idx16 = 0, $_12$3$$sroa_raw_idx = 0, $len$2$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $_12 = sp;
 HEAP32[$_12>>2] = 0;
 $2 = ($1>>>0)<(128);
 do {
  if ($2) {
   $3 = $1&255;
   HEAP8[$_12>>0] = $3;
   $len$2$i = 1;
  } else {
   $4 = ($1>>>0)<(2048);
   if ($4) {
    $5 = $1 >>> 6;
    $6 = $5 & 31;
    $7 = $6&255;
    $8 = $7 | -64;
    HEAP8[$_12>>0] = $8;
    $9 = $1 & 63;
    $10 = $9&255;
    $11 = $10 | -128;
    $_12$1$$sroa_raw_idx = ((($_12)) + 1|0);
    HEAP8[$_12$1$$sroa_raw_idx>>0] = $11;
    $len$2$i = 2;
    break;
   }
   $12 = ($1>>>0)<(65536);
   if ($12) {
    $13 = $1 >>> 12;
    $14 = $13 & 15;
    $15 = $14&255;
    $16 = $15 | -32;
    HEAP8[$_12>>0] = $16;
    $17 = $1 >>> 6;
    $18 = $17 & 63;
    $19 = $18&255;
    $20 = $19 | -128;
    $_12$1$$sroa_raw_idx12 = ((($_12)) + 1|0);
    HEAP8[$_12$1$$sroa_raw_idx12>>0] = $20;
    $21 = $1 & 63;
    $22 = $21&255;
    $23 = $22 | -128;
    $_12$2$$sroa_raw_idx = ((($_12)) + 2|0);
    HEAP8[$_12$2$$sroa_raw_idx>>0] = $23;
    $len$2$i = 3;
    break;
   } else {
    $24 = $1 >>> 18;
    $25 = $24 & 7;
    $26 = $25&255;
    $27 = $26 | -16;
    HEAP8[$_12>>0] = $27;
    $28 = $1 >>> 12;
    $29 = $28 & 63;
    $30 = $29&255;
    $31 = $30 | -128;
    $_12$1$$sroa_raw_idx14 = ((($_12)) + 1|0);
    HEAP8[$_12$1$$sroa_raw_idx14>>0] = $31;
    $32 = $1 >>> 6;
    $33 = $32 & 63;
    $34 = $33&255;
    $35 = $34 | -128;
    $_12$2$$sroa_raw_idx16 = ((($_12)) + 2|0);
    HEAP8[$_12$2$$sroa_raw_idx16>>0] = $35;
    $36 = $1 & 63;
    $37 = $36&255;
    $38 = $37 | -128;
    $_12$3$$sroa_raw_idx = ((($_12)) + 3|0);
    HEAP8[$_12$3$$sroa_raw_idx>>0] = $38;
    $len$2$i = 4;
    break;
   }
  }
 } while(0);
 $39 = HEAP32[$0>>2]|0;
 __ZN39__LT_collections__vec__Vec_LT_T_GT__GT_7reserve17h36095f9d9422ab2dE($39,$len$2$i);
 $$idx$i$i$i = ((($39)) + 8|0);
 $$idx$val$i$i$i = HEAP32[$$idx$i$i$i>>2]|0;
 $40 = (($$idx$val$i$i$i) + ($len$2$i))|0;
 $41 = HEAP32[$39>>2]|0;
 $42 = (($41) + ($$idx$val$i$i$i)|0);
 _memcpy(($42|0),($_12|0),($len$2$i|0))|0;
 HEAP32[$$idx$i$i$i>>2] = $40;
 STACKTOP = sp;return 0;
}
function __ZN4core3fmt5Write9write_fmt17h28aa3235621c575cE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $_10 = 0, $_8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $_8 = sp + 24|0;
 $_10 = sp;
 HEAP32[$_8>>2] = $0;
 ;HEAP32[$_10>>2]=HEAP32[$1>>2]|0;HEAP32[$_10+4>>2]=HEAP32[$1+4>>2]|0;HEAP32[$_10+8>>2]=HEAP32[$1+8>>2]|0;HEAP32[$_10+12>>2]=HEAP32[$1+12>>2]|0;HEAP32[$_10+16>>2]=HEAP32[$1+16>>2]|0;HEAP32[$_10+20>>2]=HEAP32[$1+20>>2]|0;
 $2 = (__ZN4core3fmt5write17hdd089a59fed6a1dbE($_8,848,$_10)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZN4core4iter8iterator8Iterator7collect17h06a0762198dfaef4E($0,$$0$1$val) {
 $0 = $0|0;
 $$0$1$val = $$0$1$val|0;
 var $$$i$i = 0, $$$i$i$i = 0, $$arith = 0, $$arith10 = 0, $$arith14 = 0, $$arith2 = 0, $$arith6 = 0, $$in$i$i = 0, $$overflow = 0, $$overflow11 = 0, $$overflow15 = 0, $$overflow3 = 0, $$overflow7 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0;
 var $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0;
 var $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $_0$0$sroa$speculated$i$i$i$i$i$i = 0, $_32$sroa$4$0$$sroa_idx32$i = 0, $_32$sroa$5$0$$sroa_idx34$i = 0, $not$$i$i$i$i40$i = 0, $personalityslot$sroa$0$046$i = 0, $personalityslot$sroa$7$044$i = 0, $ptr$0$i$i$i = 0, $ptr$0$i$i$i$i = 0;
 var $vector$sroa$0$1$i = 0, $vector$sroa$0$2$i = 0, $vector$sroa$0$3$i = 0, $vector$sroa$13$0$i = 0, $vector$sroa$9$1$i = 0, $vector$sroa$9$2$i = 0, $vector$sroa$9$3$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($$0$1$val|0)==(0);
 $2 = (($$0$1$val) + -1)|0;
 if ($1) {
  HEAP32[$0>>2] = 1;
  $5 = ((($0)) + 4|0);
  HEAP32[$5>>2] = 0;
  $6 = ((($0)) + 8|0);
  HEAP32[$6>>2] = 0;
  return;
 }
 $$arith6 = (($2) + 1)|0;
 $$overflow7 = ($2>>>0)>(4294967294);
 $$$i$i = $$overflow7 ? -1 : $$arith6;
 $$arith14 = $$$i$i<<2;
 $$overflow15 = ($$$i$i>>>0)>(1073741823);
 do {
  if ($$overflow15) {
   __THREW__ = 0;
   invoke_vii(219,(11172|0),17);
   $7 = __THREW__; __THREW__ = 0;
  } else {
   $8 = ($$arith14|0)<(0);
   if ($8) {
    __THREW__ = 0;
    invoke_vi(220,(6432|0));
    $9 = __THREW__; __THREW__ = 0;
    break;
   }
   $10 = ($$arith14|0)==(0);
   if ($10) {
    $ptr$0$i$i$i = (1);
   } else {
    $11 = (_malloc($$arith14)|0);
    $12 = ($11|0)==(0|0);
    if ($12) {
     __THREW__ = 0;
     invoke_v(210);
     $13 = __THREW__; __THREW__ = 0;
     break;
    } else {
     $ptr$0$i$i$i = $11;
    }
   }
   $14 = $ptr$0$i$i$i;
   HEAP32[$ptr$0$i$i$i>>2] = -1;
   $15 = ($2|0)==(0);
   L15: do {
    if ($15) {
     $vector$sroa$0$3$i = $14;$vector$sroa$13$0$i = 1;$vector$sroa$9$3$i = $$$i$i;
    } else {
     $$in$i$i = $2;$17 = 1;$vector$sroa$0$1$i = $14;$vector$sroa$9$1$i = $$$i$i;
     while(1) {
      $16 = (($$in$i$i) + -1)|0;
      $18 = ($17|0)==($vector$sroa$9$1$i|0);
      if ($18) {
       $$arith2 = (($16) + 1)|0;
       $$overflow3 = ($16>>>0)>(4294967294);
       $$$i$i$i = $$overflow3 ? -1 : $$arith2;
       $19 = ($$$i$i$i|0)==(0);
       if ($19) {
        $vector$sroa$0$2$i = $vector$sroa$0$1$i;$vector$sroa$9$2$i = $vector$sroa$9$1$i;
       } else {
        $$arith = (($vector$sroa$9$1$i) + ($$$i$i$i))|0;
        $$overflow = ($$arith>>>0)<($vector$sroa$9$1$i>>>0);
        if ($$overflow) {
         label = 16;
         break;
        }
        $21 = $vector$sroa$9$1$i << 1;
        $22 = ($$arith>>>0)>=($21>>>0);
        $_0$0$sroa$speculated$i$i$i$i$i$i = $22 ? $$arith : $21;
        $$arith10 = $_0$0$sroa$speculated$i$i$i$i$i$i<<2;
        $$overflow11 = ($_0$0$sroa$speculated$i$i$i$i$i$i>>>0)>(1073741823);
        if ($$overflow11) {
         label = 18;
         break;
        }
        $24 = ($$arith10|0)<(0);
        if ($24) {
         label = 20;
         break;
        }
        $26 = ($vector$sroa$9$1$i|0)==(0);
        if ($26) {
         $27 = (_malloc($$arith10)|0);
         $ptr$0$i$i$i$i = $27;
        } else {
         $28 = $vector$sroa$0$1$i;
         $29 = (_realloc($28,$$arith10)|0);
         $ptr$0$i$i$i$i = $29;
        }
        $30 = ($ptr$0$i$i$i$i|0)==(0|0);
        if ($30) {
         label = 25;
         break;
        }
        $32 = $ptr$0$i$i$i$i;
        $vector$sroa$0$2$i = $32;$vector$sroa$9$2$i = $_0$0$sroa$speculated$i$i$i$i$i$i;
       }
      } else {
       $vector$sroa$0$2$i = $vector$sroa$0$1$i;$vector$sroa$9$2$i = $vector$sroa$9$1$i;
      }
      $33 = $vector$sroa$0$2$i;
      $34 = (($33) + ($17<<2)|0);
      HEAP32[$34>>2] = -1;
      $35 = (($17) + 1)|0;
      $36 = ($16|0)==(0);
      if ($36) {
       $vector$sroa$0$3$i = $vector$sroa$0$2$i;$vector$sroa$13$0$i = $35;$vector$sroa$9$3$i = $vector$sroa$9$2$i;
       break L15;
      } else {
       $$in$i$i = $16;$17 = $35;$vector$sroa$0$1$i = $vector$sroa$0$2$i;$vector$sroa$9$1$i = $vector$sroa$9$2$i;
      }
     }
     if ((label|0) == 16) {
      __THREW__ = 0;
      invoke_vii(219,(11172|0),17);
      $20 = __THREW__; __THREW__ = 0;
     }
     else if ((label|0) == 18) {
      __THREW__ = 0;
      invoke_vii(219,(11172|0),17);
      $23 = __THREW__; __THREW__ = 0;
     }
     else if ((label|0) == 20) {
      __THREW__ = 0;
      invoke_vi(220,(6432|0));
      $25 = __THREW__; __THREW__ = 0;
     }
     else if ((label|0) == 25) {
      __THREW__ = 0;
      invoke_v(210);
      $31 = __THREW__; __THREW__ = 0;
     }
     $37 = ___cxa_find_matching_catch_2()|0;
     $38 = tempRet0;
     $not$$i$i$i$i40$i = ($vector$sroa$9$1$i|0)==(0);
     if ($not$$i$i$i$i40$i) {
      $personalityslot$sroa$0$046$i = $37;$personalityslot$sroa$7$044$i = $38;
      ___resumeException($personalityslot$sroa$0$046$i|0);
      // unreachable;
     }
     $39 = $vector$sroa$0$1$i;
     _free($39);
     $personalityslot$sroa$0$046$i = $37;$personalityslot$sroa$7$044$i = $38;
     ___resumeException($personalityslot$sroa$0$046$i|0);
     // unreachable;
    }
   } while(0);
   HEAP32[$0>>2] = $vector$sroa$0$3$i;
   $_32$sroa$4$0$$sroa_idx32$i = ((($0)) + 4|0);
   HEAP32[$_32$sroa$4$0$$sroa_idx32$i>>2] = $vector$sroa$9$3$i;
   $_32$sroa$5$0$$sroa_idx34$i = ((($0)) + 8|0);
   HEAP32[$_32$sroa$5$0$$sroa_idx34$i>>2] = $vector$sroa$13$0$i;
   return;
  }
 } while(0);
 $3 = ___cxa_find_matching_catch_2()|0;
 $4 = tempRet0;
 $personalityslot$sroa$0$046$i = $3;$personalityslot$sroa$7$044$i = $4;
 ___resumeException($personalityslot$sroa$0$046$i|0);
 // unreachable;
}
function __ZN4core4iter8iterator8Iterator7collect17h86545e166188adc2E($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$$i$i = 0, $$$i$i$i = 0, $$arith = 0, $$arith10 = 0, $$arith14 = 0, $$arith2 = 0, $$arith6 = 0, $$in$i$i = 0, $$overflow = 0, $$overflow11 = 0, $$overflow15 = 0, $$overflow3 = 0, $$overflow7 = 0, $$unpack6 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0;
 var $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0;
 var $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $_0$0$sroa$speculated$i$i$i$i$i$i = 0, $_32$sroa$4$0$$sroa_idx80$i = 0, $_32$sroa$5$0$$sroa_idx82$i = 0, $not$$i$i$i$i40$i = 0, $personalityslot$sroa$0$094$i = 0;
 var $personalityslot$sroa$7$092$i = 0, $ptr$0$i$i$i = 0, $ptr$0$i$i$i$i = 0, $vector$sroa$0$1$i = 0, $vector$sroa$0$2$i = 0, $vector$sroa$0$3$i = 0, $vector$sroa$13$0$i = 0, $vector$sroa$9$1$i = 0, $vector$sroa$9$2$i = 0, $vector$sroa$9$3$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($1)) + 4|0);
 $$unpack6 = HEAP32[$1>>2]|0;
 $3 = HEAP32[$2>>2]|0;
 $4 = ($3|0)==(0);
 $5 = (($3) + -1)|0;
 if ($4) {
  HEAP32[$0>>2] = 1;
  $8 = ((($0)) + 4|0);
  HEAP32[$8>>2] = 0;
  $9 = ((($0)) + 8|0);
  HEAP32[$9>>2] = 0;
  return;
 }
 $$arith6 = (($5) + 1)|0;
 $$overflow7 = ($5>>>0)>(4294967294);
 $$$i$i = $$overflow7 ? -1 : $$arith6;
 $$arith14 = $$$i$i<<2;
 $$overflow15 = ($$$i$i>>>0)>(1073741823);
 do {
  if ($$overflow15) {
   __THREW__ = 0;
   invoke_vii(219,(11172|0),17);
   $10 = __THREW__; __THREW__ = 0;
  } else {
   $11 = ($$arith14|0)<(0);
   if ($11) {
    __THREW__ = 0;
    invoke_vi(220,(6432|0));
    $12 = __THREW__; __THREW__ = 0;
    break;
   }
   $13 = ($$arith14|0)==(0);
   if ($13) {
    $ptr$0$i$i$i = (1);
   } else {
    $14 = (_malloc($$arith14)|0);
    $15 = ($14|0)==(0|0);
    if ($15) {
     __THREW__ = 0;
     invoke_v(210);
     $16 = __THREW__; __THREW__ = 0;
     break;
    } else {
     $ptr$0$i$i$i = $14;
    }
   }
   $17 = $ptr$0$i$i$i;
   HEAP32[$ptr$0$i$i$i>>2] = $$unpack6;
   $18 = ($5|0)==(0);
   L15: do {
    if ($18) {
     $vector$sroa$0$3$i = $17;$vector$sroa$13$0$i = 1;$vector$sroa$9$3$i = $$$i$i;
    } else {
     $$in$i$i = $5;$20 = 1;$vector$sroa$0$1$i = $17;$vector$sroa$9$1$i = $$$i$i;
     while(1) {
      $19 = (($$in$i$i) + -1)|0;
      $21 = ($20|0)==($vector$sroa$9$1$i|0);
      if ($21) {
       $$arith2 = (($19) + 1)|0;
       $$overflow3 = ($19>>>0)>(4294967294);
       $$$i$i$i = $$overflow3 ? -1 : $$arith2;
       $22 = ($$$i$i$i|0)==(0);
       if ($22) {
        $vector$sroa$0$2$i = $vector$sroa$0$1$i;$vector$sroa$9$2$i = $vector$sroa$9$1$i;
       } else {
        $$arith = (($vector$sroa$9$1$i) + ($$$i$i$i))|0;
        $$overflow = ($$arith>>>0)<($vector$sroa$9$1$i>>>0);
        if ($$overflow) {
         label = 16;
         break;
        }
        $24 = $vector$sroa$9$1$i << 1;
        $25 = ($$arith>>>0)>=($24>>>0);
        $_0$0$sroa$speculated$i$i$i$i$i$i = $25 ? $$arith : $24;
        $$arith10 = $_0$0$sroa$speculated$i$i$i$i$i$i<<2;
        $$overflow11 = ($_0$0$sroa$speculated$i$i$i$i$i$i>>>0)>(1073741823);
        if ($$overflow11) {
         label = 18;
         break;
        }
        $27 = ($$arith10|0)<(0);
        if ($27) {
         label = 20;
         break;
        }
        $29 = ($vector$sroa$9$1$i|0)==(0);
        if ($29) {
         $30 = (_malloc($$arith10)|0);
         $ptr$0$i$i$i$i = $30;
        } else {
         $31 = $vector$sroa$0$1$i;
         $32 = (_realloc($31,$$arith10)|0);
         $ptr$0$i$i$i$i = $32;
        }
        $33 = ($ptr$0$i$i$i$i|0)==(0|0);
        if ($33) {
         label = 25;
         break;
        }
        $35 = $ptr$0$i$i$i$i;
        $vector$sroa$0$2$i = $35;$vector$sroa$9$2$i = $_0$0$sroa$speculated$i$i$i$i$i$i;
       }
      } else {
       $vector$sroa$0$2$i = $vector$sroa$0$1$i;$vector$sroa$9$2$i = $vector$sroa$9$1$i;
      }
      $36 = $vector$sroa$0$2$i;
      $37 = (($36) + ($20<<2)|0);
      HEAP32[$37>>2] = $$unpack6;
      $38 = (($20) + 1)|0;
      $39 = ($19|0)==(0);
      if ($39) {
       $vector$sroa$0$3$i = $vector$sroa$0$2$i;$vector$sroa$13$0$i = $38;$vector$sroa$9$3$i = $vector$sroa$9$2$i;
       break L15;
      } else {
       $$in$i$i = $19;$20 = $38;$vector$sroa$0$1$i = $vector$sroa$0$2$i;$vector$sroa$9$1$i = $vector$sroa$9$2$i;
      }
     }
     if ((label|0) == 16) {
      __THREW__ = 0;
      invoke_vii(219,(11172|0),17);
      $23 = __THREW__; __THREW__ = 0;
     }
     else if ((label|0) == 18) {
      __THREW__ = 0;
      invoke_vii(219,(11172|0),17);
      $26 = __THREW__; __THREW__ = 0;
     }
     else if ((label|0) == 20) {
      __THREW__ = 0;
      invoke_vi(220,(6432|0));
      $28 = __THREW__; __THREW__ = 0;
     }
     else if ((label|0) == 25) {
      __THREW__ = 0;
      invoke_v(210);
      $34 = __THREW__; __THREW__ = 0;
     }
     $40 = ___cxa_find_matching_catch_2()|0;
     $41 = tempRet0;
     $not$$i$i$i$i40$i = ($vector$sroa$9$1$i|0)==(0);
     if ($not$$i$i$i$i40$i) {
      $personalityslot$sroa$0$094$i = $40;$personalityslot$sroa$7$092$i = $41;
      ___resumeException($personalityslot$sroa$0$094$i|0);
      // unreachable;
     }
     $42 = $vector$sroa$0$1$i;
     _free($42);
     $personalityslot$sroa$0$094$i = $40;$personalityslot$sroa$7$092$i = $41;
     ___resumeException($personalityslot$sroa$0$094$i|0);
     // unreachable;
    }
   } while(0);
   HEAP32[$0>>2] = $vector$sroa$0$3$i;
   $_32$sroa$4$0$$sroa_idx80$i = ((($0)) + 4|0);
   HEAP32[$_32$sroa$4$0$$sroa_idx80$i>>2] = $vector$sroa$9$3$i;
   $_32$sroa$5$0$$sroa_idx82$i = ((($0)) + 8|0);
   HEAP32[$_32$sroa$5$0$$sroa_idx82$i>>2] = $vector$sroa$13$0$i;
   return;
  }
 } while(0);
 $6 = ___cxa_find_matching_catch_2()|0;
 $7 = tempRet0;
 $personalityslot$sroa$0$094$i = $6;$personalityslot$sroa$7$092$i = $7;
 ___resumeException($personalityslot$sroa$0$094$i|0);
 // unreachable;
}
function __ZN4core6result13unwrap_failed17h0dc63b200336bf84E() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $_12 = 0, $_6$sroa$0$0$$sroa_idx$i = 0, $_7 = 0, $error = 0, $msg = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $error = sp + 48|0;
 $msg = sp + 40|0;
 $_7 = sp + 16|0;
 $_12 = sp;
 HEAP32[$msg>>2] = 11111;
 $0 = ((($msg)) + 4|0);
 HEAP32[$0>>2] = 24;
 $1 = $msg;
 $2 = $error;
 HEAP32[$_12>>2] = $1;
 $3 = ((($_12)) + 4|0);
 HEAP32[$3>>2] = (268);
 $4 = ((($_12)) + 8|0);
 HEAP32[$4>>2] = $2;
 $5 = ((($_12)) + 12|0);
 HEAP32[$5>>2] = (269);
 HEAP32[$_7>>2] = (6520);
 $6 = ((($_7)) + 4|0);
 HEAP32[$6>>2] = 2;
 $_6$sroa$0$0$$sroa_idx$i = ((($_7)) + 8|0);
 HEAP32[$_6$sroa$0$0$$sroa_idx$i>>2] = 0;
 $7 = ((($_7)) + 16|0);
 HEAP32[$7>>2] = $_12;
 $8 = ((($_7)) + 20|0);
 HEAP32[$8>>2] = 2;
 __ZN4core9panicking9panic_fmt17hfa35599633a0afa2E($_7,22324,100,799);
 // unreachable;
}
function __ZN4core6result13unwrap_failed17he96585155b596c01E() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $_12 = 0, $_6$sroa$0$0$$sroa_idx$i = 0, $_7 = 0, $error = 0, $msg = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $error = sp + 48|0;
 $msg = sp + 40|0;
 $_7 = sp + 16|0;
 $_12 = sp;
 HEAP32[$msg>>2] = 11095;
 $0 = ((($msg)) + 4|0);
 HEAP32[$0>>2] = 16;
 $1 = $msg;
 $2 = $error;
 HEAP32[$_12>>2] = $1;
 $3 = ((($_12)) + 4|0);
 HEAP32[$3>>2] = (268);
 $4 = ((($_12)) + 8|0);
 HEAP32[$4>>2] = $2;
 $5 = ((($_12)) + 12|0);
 HEAP32[$5>>2] = (270);
 HEAP32[$_7>>2] = (6520);
 $6 = ((($_7)) + 4|0);
 HEAP32[$6>>2] = 2;
 $_6$sroa$0$0$$sroa_idx$i = ((($_7)) + 8|0);
 HEAP32[$_6$sroa$0$0$$sroa_idx$i>>2] = 0;
 $7 = ((($_7)) + 16|0);
 HEAP32[$7>>2] = $_12;
 $8 = ((($_7)) + 20|0);
 HEAP32[$8>>2] = 2;
 __ZN4core9panicking9panic_fmt17hfa35599633a0afa2E($_7,22324,100,799);
 // unreachable;
}
function __ZN4core6result13unwrap_failed17hecfe8d3f25d6ccebE($0) {
 $0 = $0|0;
 var $$idx1$i$i$i$i$i$i = 0, $$idx1$val$i$i$i$i$i$i = 0, $$idx1$val$val$i$i$i$i$i$i = 0, $$val$i$i$i = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $_12 = 0, $_6$sroa$0$0$$sroa_idx$i = 0, $_7 = 0, $cond$i = 0, $cond$i$i$i = 0, $error = 0, $msg = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(80|0);
 $msg = sp + 64|0;
 $error = sp + 40|0;
 $_7 = sp + 16|0;
 $_12 = sp;
 HEAP32[$msg>>2] = 11246;
 $1 = ((($msg)) + 4|0);
 HEAP32[$1>>2] = 43;
 ;HEAP32[$error>>2]=HEAP32[$0>>2]|0;HEAP32[$error+4>>2]=HEAP32[$0+4>>2]|0;HEAP32[$error+8>>2]=HEAP32[$0+8>>2]|0;HEAP32[$error+12>>2]=HEAP32[$0+12>>2]|0;HEAP32[$error+16>>2]=HEAP32[$0+16>>2]|0;HEAP32[$error+20>>2]=HEAP32[$0+20>>2]|0;
 $2 = $msg;
 $3 = $error;
 HEAP32[$_12>>2] = $2;
 $4 = ((($_12)) + 4|0);
 HEAP32[$4>>2] = (268);
 $5 = ((($_12)) + 8|0);
 HEAP32[$5>>2] = $3;
 $6 = ((($_12)) + 12|0);
 HEAP32[$6>>2] = (271);
 HEAP32[$_7>>2] = (6520);
 $7 = ((($_7)) + 4|0);
 HEAP32[$7>>2] = 2;
 $_6$sroa$0$0$$sroa_idx$i = ((($_7)) + 8|0);
 HEAP32[$_6$sroa$0$0$$sroa_idx$i>>2] = 0;
 $8 = ((($_7)) + 16|0);
 HEAP32[$8>>2] = $_12;
 $9 = ((($_7)) + 20|0);
 HEAP32[$9>>2] = 2;
 __THREW__ = 0;
 invoke_viiii(272,($_7|0),(22324|0),100,799);
 $10 = __THREW__; __THREW__ = 0;
 $11 = ___cxa_find_matching_catch_2()|0;
 $12 = tempRet0;
 $13 = HEAP8[$error>>0]|0;
 $cond$i = ($13<<24>>24)==(0);
 if (!($cond$i)) {
  ___resumeException($11|0);
  // unreachable;
 }
 $14 = ((($error)) + 4|0);
 $15 = HEAP32[$14>>2]|0;
 $cond$i$i$i = ($15|0)==(1);
 if (!($cond$i$i$i)) {
  ___resumeException($11|0);
  // unreachable;
 }
 $16 = ((($error)) + 8|0);
 $$val$i$i$i = HEAP32[$16>>2]|0;
 $17 = ((($$val$i$i$i)) + 4|0);
 $18 = HEAP32[$17>>2]|0;
 $$idx1$i$i$i$i$i$i = ((($$val$i$i$i)) + 8|0);
 $$idx1$val$i$i$i$i$i$i = HEAP32[$$idx1$i$i$i$i$i$i>>2]|0;
 $$idx1$val$val$i$i$i$i$i$i = HEAP32[$$idx1$val$i$i$i$i$i$i>>2]|0;
 FUNCTION_TABLE_vi[$$idx1$val$val$i$i$i$i$i$i & 511]($18);
 $19 = HEAP32[$$idx1$i$i$i$i$i$i>>2]|0;
 $20 = ((($19)) + 4|0);
 $21 = HEAP32[$20>>2]|0;
 $22 = ($21|0)==(0);
 if (!($22)) {
  _free($18);
 }
 _free($$val$i$i$i);
 ___resumeException($11|0);
 // unreachable;
}
function __ZN4drop17h033793f6a4c3c96dE($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZN4drop17h048dae4e9f2bf6a0E($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $not$$i$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 4|0);
 $2 = HEAP32[$1>>2]|0;
 $not$$i$i$i$i = ($2|0)==(0);
 if ($not$$i$i$i$i) {
  return;
 }
 $3 = HEAP32[$0>>2]|0;
 _free($3);
 return;
}
function __ZN4drop17h09974e56699176eaE($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZN4drop17h11ff7f052d90b889E($0) {
 $0 = $0|0;
 var $$idx$val = 0, $$idx$val$i$i = 0, $$idx$val$i$i$i$i$i = 0, $$idx1$i$i$i$i$i$i$i = 0, $$idx1$val$i$i$i$i$i$i$i = 0, $$idx1$val$val$i$i$i$i$i$i$i = 0, $$idx2$val$i$i = 0, $$idx2$val$i$i$i$i$i = 0, $$idx3$val$i$i = 0, $$idx3$val$i$i$i$i$i = 0, $$idx5 = 0, $$idx5$val = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0;
 var $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0;
 var $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0;
 var $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $7 = 0, $8 = 0, $9 = 0, $not$$i$i$i = 0, $not$$i$i$i8 = 0, $switchtmp$i$i$i = 0, $switchtmp$i$i$i$i$i$i = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $$idx$val = HEAP32[$0>>2]|0;
 $$idx5 = ((($0)) + 8|0);
 $$idx5$val = HEAP32[$$idx5>>2]|0;
 $1 = (($$idx$val) + ($$idx5$val<<6)|0);
 $2 = ($$idx5$val|0)==(0);
 L1: do {
  if (!($2)) {
   $4 = $$idx$val;
   L2: while(1) {
    $3 = ((($4)) + 28|0);
    $5 = HEAP32[$3>>2]|0;
    $switchtmp$i$i$i = ($5|0)==(0|0);
    L4: do {
     if (!($switchtmp$i$i$i)) {
      $6 = HEAP32[$5>>2]|0;HEAP32[$5>>2] = (($6-1)|0);
      $7 = ($6|0)==(1);
      if ($7) {
       $8 = ((($4)) + 28|0);
       /* fence */;
       __THREW__ = 0;
       invoke_vi(241,($8|0));
       $9 = __THREW__; __THREW__ = 0;
       $10 = $9&1;
       if ($10) {
        break L2;
       }
      }
      $11 = ((($4)) + 52|0);
      $12 = HEAP32[$11>>2]|0;
      switch ($12|0) {
      case 0:  {
       break;
      }
      case 1:  {
       $39 = ((($4)) + 56|0);
       $40 = HEAP32[$39>>2]|0;
       $41 = HEAP32[$40>>2]|0;
       $42 = (($41) + -1)|0;
       HEAP32[$40>>2] = $42;
       $$idx$val$i$i$i$i$i = HEAP32[$39>>2]|0;
       $43 = HEAP32[$$idx$val$i$i$i$i$i>>2]|0;
       $44 = ($43|0)==(0);
       if (!($44)) {
        break L4;
       }
       $45 = ((($40)) + 12|0);
       __THREW__ = 0;
       invoke_vi(247,($45|0));
       $46 = __THREW__; __THREW__ = 0;
       $47 = $46&1;
       if ($47) {
        break L2;
       }
       $$idx3$val$i$i$i$i$i = HEAP32[$39>>2]|0;
       $48 = ((($$idx3$val$i$i$i$i$i)) + 4|0);
       $49 = HEAP32[$48>>2]|0;
       $50 = (($49) + -1)|0;
       HEAP32[$48>>2] = $50;
       $$idx2$val$i$i$i$i$i = HEAP32[$39>>2]|0;
       $51 = ((($$idx2$val$i$i$i$i$i)) + 4|0);
       $52 = HEAP32[$51>>2]|0;
       $53 = ($52|0)==(0);
       if (!($53)) {
        break L4;
       }
       _free($40);
       break L4;
       break;
      }
      default: {
       break L4;
      }
      }
      $13 = ((($4)) + 56|0);
      $14 = HEAP32[$13>>2]|0;
      $15 = HEAP32[$14>>2]|0;
      $16 = (($15) + -1)|0;
      HEAP32[$14>>2] = $16;
      $$idx$val$i$i = HEAP32[$13>>2]|0;
      $17 = HEAP32[$$idx$val$i$i>>2]|0;
      $18 = ($17|0)==(0);
      if ($18) {
       $19 = ((($14)) + 16|0);
       $20 = HEAP32[$19>>2]|0;
       $21 = HEAP32[$20>>2]|0;HEAP32[$20>>2] = (($21-1)|0);
       $22 = ($21|0)==(1);
       if ($22) {
        /* fence */;
        __THREW__ = 0;
        invoke_vi(241,($19|0));
        $23 = __THREW__; __THREW__ = 0;
        $24 = $23&1;
        if ($24) {
         break L2;
        }
       }
       $25 = ((($14)) + 172|0);
       $26 = HEAP32[$25>>2]|0;
       $switchtmp$i$i$i$i$i$i = ($26|0)==(0|0);
       if (!($switchtmp$i$i$i$i$i$i)) {
        $$idx1$i$i$i$i$i$i$i = ((($14)) + 176|0);
        $$idx1$val$i$i$i$i$i$i$i = HEAP32[$$idx1$i$i$i$i$i$i$i>>2]|0;
        $$idx1$val$val$i$i$i$i$i$i$i = HEAP32[$$idx1$val$i$i$i$i$i$i$i>>2]|0;
        __THREW__ = 0;
        invoke_vi($$idx1$val$val$i$i$i$i$i$i$i|0,($26|0));
        $27 = __THREW__; __THREW__ = 0;
        $28 = $27&1;
        if ($28) {
         break L2;
        }
        $29 = HEAP32[$$idx1$i$i$i$i$i$i$i>>2]|0;
        $30 = ((($29)) + 4|0);
        $31 = HEAP32[$30>>2]|0;
        $32 = ($31|0)==(0);
        if (!($32)) {
         _free($26);
        }
       }
       $$idx3$val$i$i = HEAP32[$13>>2]|0;
       $33 = ((($$idx3$val$i$i)) + 4|0);
       $34 = HEAP32[$33>>2]|0;
       $35 = (($34) + -1)|0;
       HEAP32[$33>>2] = $35;
       $$idx2$val$i$i = HEAP32[$13>>2]|0;
       $36 = ((($$idx2$val$i$i)) + 4|0);
       $37 = HEAP32[$36>>2]|0;
       $38 = ($37|0)==(0);
       if ($38) {
        _free($14);
       }
      }
     }
    } while(0);
    $54 = ((($4)) + 64|0);
    $55 = ($54|0)==($1|0);
    if ($55) {
     break L1;
    } else {
     $4 = $54;
    }
   }
   $59 = ___cxa_find_matching_catch_2()|0;
   $60 = tempRet0;
   $61 = ((($0)) + 4|0);
   $62 = HEAP32[$61>>2]|0;
   $not$$i$i$i8 = ($62|0)==(0);
   if ($not$$i$i$i8) {
    ___resumeException($59|0);
    // unreachable;
   }
   $63 = HEAP32[$0>>2]|0;
   _free($63);
   ___resumeException($59|0);
   // unreachable;
  }
 } while(0);
 $56 = ((($0)) + 4|0);
 $57 = HEAP32[$56>>2]|0;
 $not$$i$i$i = ($57|0)==(0);
 if ($not$$i$i$i) {
  return;
 }
 $58 = HEAP32[$0>>2]|0;
 _free($58);
 return;
}
function __ZN4drop17h135bc4bdb783be3aE($0) {
 $0 = $0|0;
 var $$idx$val = 0, $$idx$val$i$i$i$i = 0, $$idx5 = 0, $$idx5$i$i$i$i = 0, $$idx5$val = 0, $$idx5$val$i$i$i$i = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $not$$i$i$i = 0, $not$$i$i$i$i$i$i$i = 0, $not$$i$i$i6 = 0, $not$$i$i$i6$i$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $$idx$val = HEAP32[$0>>2]|0;
 $$idx5 = ((($0)) + 8|0);
 $$idx5$val = HEAP32[$$idx5>>2]|0;
 $1 = (($$idx$val) + ($$idx5$val<<4)|0);
 $2 = ($$idx5$val|0)==(0);
 L1: do {
  if (!($2)) {
   $4 = $$idx$val;
   L2: while(1) {
    $3 = ((($4)) + 4|0);
    $$idx$val$i$i$i$i = HEAP32[$3>>2]|0;
    $$idx5$i$i$i$i = ((($4)) + 12|0);
    $$idx5$val$i$i$i$i = HEAP32[$$idx5$i$i$i$i>>2]|0;
    $5 = (($$idx$val$i$i$i$i) + (($$idx5$val$i$i$i$i*40)|0)|0);
    $6 = ($$idx5$val$i$i$i$i|0)==(0);
    if (!($6)) {
     $7 = $$idx$val$i$i$i$i;
     while(1) {
      __THREW__ = 0;
      invoke_vi(254,($7|0));
      $8 = __THREW__; __THREW__ = 0;
      $9 = $8&1;
      if ($9) {
       break L2;
      }
      $10 = ((($7)) + 40|0);
      $11 = ($10|0)==($5|0);
      if ($11) {
       break;
      } else {
       $7 = $10;
      }
     }
    }
    $12 = ((($4)) + 8|0);
    $13 = HEAP32[$12>>2]|0;
    $not$$i$i$i$i$i$i$i = ($13|0)==(0);
    if (!($not$$i$i$i$i$i$i$i)) {
     $14 = HEAP32[$3>>2]|0;
     _free($14);
    }
    $20 = ((($4)) + 16|0);
    $21 = ($20|0)==($1|0);
    if ($21) {
     break L1;
    } else {
     $4 = $20;
    }
   }
   $15 = ___cxa_find_matching_catch_2()|0;
   $16 = tempRet0;
   $17 = ((($4)) + 8|0);
   $18 = HEAP32[$17>>2]|0;
   $not$$i$i$i6$i$i$i$i = ($18|0)==(0);
   if (!($not$$i$i$i6$i$i$i$i)) {
    $19 = HEAP32[$3>>2]|0;
    _free($19);
   }
   $25 = ((($0)) + 4|0);
   $26 = HEAP32[$25>>2]|0;
   $not$$i$i$i6 = ($26|0)==(0);
   if ($not$$i$i$i6) {
    ___resumeException($15|0);
    // unreachable;
   }
   $27 = HEAP32[$0>>2]|0;
   _free($27);
   ___resumeException($15|0);
   // unreachable;
  }
 } while(0);
 $22 = ((($0)) + 4|0);
 $23 = HEAP32[$22>>2]|0;
 $not$$i$i$i = ($23|0)==(0);
 if ($not$$i$i$i) {
  return;
 }
 $24 = HEAP32[$0>>2]|0;
 _free($24);
 return;
}
function __ZN4drop17h156bdbf342ee89b6E($0) {
 $0 = $0|0;
 var $$idx$val$i = 0, $$idx$val$i$i = 0, $$idx1$i$i$i$i$i$i$i = 0, $$idx1$val$i$i$i$i$i$i$i = 0, $$idx1$val$val$i$i$i$i$i$i$i = 0, $$idx2$val$i$i = 0, $$idx3$val$i$i = 0, $$idx5$i = 0, $$idx5$val$i = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0;
 var $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0;
 var $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $not$$i$i$i$i = 0, $not$$i$i$i$i1 = 0, $not$$i$i$i$i4 = 0;
 var $not$$i$i$i6$i = 0, $switchtmp$i$i$i$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 4|0);
 $$idx$val$i = HEAP32[$1>>2]|0;
 $$idx5$i = ((($0)) + 12|0);
 $$idx5$val$i = HEAP32[$$idx5$i>>2]|0;
 $2 = (($$idx$val$i) + ($$idx5$val$i<<3)|0);
 $3 = ($$idx5$val$i|0)==(0);
 L1: do {
  if (!($3)) {
   $5 = $$idx$val$i;
   while(1) {
    $4 = ((($5)) + 4|0);
    $6 = HEAP32[$4>>2]|0;
    $7 = HEAP32[$6>>2]|0;
    $8 = (($7) + -1)|0;
    HEAP32[$6>>2] = $8;
    $$idx$val$i$i = HEAP32[$4>>2]|0;
    $9 = HEAP32[$$idx$val$i$i>>2]|0;
    $10 = ($9|0)==(0);
    if ($10) {
     $11 = ((($6)) + 16|0);
     $12 = HEAP32[$11>>2]|0;
     $13 = HEAP32[$12>>2]|0;HEAP32[$12>>2] = (($13-1)|0);
     $14 = ($13|0)==(1);
     if ($14) {
      /* fence */;
      __THREW__ = 0;
      invoke_vi(241,($11|0));
      $15 = __THREW__; __THREW__ = 0;
      $16 = $15&1;
      if ($16) {
       break;
      }
     }
     $17 = ((($6)) + 172|0);
     $18 = HEAP32[$17>>2]|0;
     $switchtmp$i$i$i$i$i$i = ($18|0)==(0|0);
     if (!($switchtmp$i$i$i$i$i$i)) {
      $$idx1$i$i$i$i$i$i$i = ((($6)) + 176|0);
      $$idx1$val$i$i$i$i$i$i$i = HEAP32[$$idx1$i$i$i$i$i$i$i>>2]|0;
      $$idx1$val$val$i$i$i$i$i$i$i = HEAP32[$$idx1$val$i$i$i$i$i$i$i>>2]|0;
      __THREW__ = 0;
      invoke_vi($$idx1$val$val$i$i$i$i$i$i$i|0,($18|0));
      $19 = __THREW__; __THREW__ = 0;
      $20 = $19&1;
      if ($20) {
       break;
      }
      $21 = HEAP32[$$idx1$i$i$i$i$i$i$i>>2]|0;
      $22 = ((($21)) + 4|0);
      $23 = HEAP32[$22>>2]|0;
      $24 = ($23|0)==(0);
      if (!($24)) {
       _free($18);
      }
     }
     $$idx3$val$i$i = HEAP32[$4>>2]|0;
     $25 = ((($$idx3$val$i$i)) + 4|0);
     $26 = HEAP32[$25>>2]|0;
     $27 = (($26) + -1)|0;
     HEAP32[$25>>2] = $27;
     $$idx2$val$i$i = HEAP32[$4>>2]|0;
     $28 = ((($$idx2$val$i$i)) + 4|0);
     $29 = HEAP32[$28>>2]|0;
     $30 = ($29|0)==(0);
     if ($30) {
      _free($6);
     }
    }
    $31 = ((($5)) + 8|0);
    $32 = ($31|0)==($2|0);
    if ($32) {
     break L1;
    } else {
     $5 = $31;
    }
   }
   $36 = ___cxa_find_matching_catch_2()|0;
   $37 = tempRet0;
   $38 = ((($0)) + 8|0);
   $39 = HEAP32[$38>>2]|0;
   $not$$i$i$i6$i = ($39|0)==(0);
   if ($not$$i$i$i6$i) {
    ___resumeException($36|0);
    // unreachable;
   }
   $40 = HEAP32[$1>>2]|0;
   _free($40);
   ___resumeException($36|0);
   // unreachable;
  }
 } while(0);
 $33 = ((($0)) + 8|0);
 $34 = HEAP32[$33>>2]|0;
 $not$$i$i$i$i = ($34|0)==(0);
 if (!($not$$i$i$i$i)) {
  $35 = HEAP32[$1>>2]|0;
  _free($35);
 }
 $41 = ((($0)) + 24|0);
 $42 = HEAP32[$41>>2]|0;
 $not$$i$i$i$i1 = ($42|0)==(0);
 if (!($not$$i$i$i$i1)) {
  $43 = ((($0)) + 20|0);
  $44 = HEAP32[$43>>2]|0;
  _free($44);
 }
 $45 = ((($0)) + 36|0);
 $46 = HEAP32[$45>>2]|0;
 $not$$i$i$i$i4 = ($46|0)==(0);
 if ($not$$i$i$i$i4) {
  return;
 }
 $47 = ((($0)) + 32|0);
 $48 = HEAP32[$47>>2]|0;
 _free($48);
 return;
}
function __ZN4drop17h24a762a076737f65E($0) {
 $0 = $0|0;
 var $$idx$i = 0, $$idx$val$i = 0, $$idx1$i$i$i$i$i$i$i$i = 0, $$idx1$val$i$i$i$i$i$i$i$i = 0, $$idx1$val$val$i$i$i$i$i$i$i$i = 0, $$idx3$val$i$i$i = 0, $$pre$i = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, $_5$i = 0, $switchtmp$i = 0, $switchtmp$i$i$i$i$i$i$i = 0, dest = 0, label = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $_5$i = sp;
 $1 = ((($0)) + 8|0);
 $2 = ((($0)) + 12|0);
 $3 = ((($_5$i)) + 28|0);
 $4 = ((($_5$i)) + 28|0);
 $5 = ((($_5$i)) + 52|0);
 $6 = ((($_5$i)) + 56|0);
 $7 = HEAP32[$1>>2]|0;
 $8 = HEAP32[$2>>2]|0;
 $9 = ($7|0)==($8|0);
 L1: do {
  if ($9) {
   label = 2;
  } else {
   $11 = $7;
   while(1) {
    $10 = ((($11)) + 64|0);
    HEAP32[$1>>2] = $10;
    dest=$_5$i; src=$11; stop=dest+64|0; do { HEAP32[dest>>2]=HEAP32[src>>2]|0; dest=dest+4|0; src=src+4|0; } while ((dest|0) < (stop|0));
    $$pre$i = HEAP32[$3>>2]|0;
    $switchtmp$i = ($$pre$i|0)==(0|0);
    if ($switchtmp$i) {
     break L1;
    }
    $12 = HEAP32[$$pre$i>>2]|0;HEAP32[$$pre$i>>2] = (($12-1)|0);
    $13 = ($12|0)==(1);
    if ($13) {
     /* fence */;
     __ZN33__LT_alloc__arc__Arc_LT_T_GT__GT_9drop_slow17hb3767c2311d7d383E($4);
    }
    $14 = HEAP32[$5>>2]|0;
    switch ($14|0) {
    case 0:  {
     $15 = HEAP32[$6>>2]|0;
     $16 = HEAP32[$15>>2]|0;
     $17 = (($16) + -1)|0;
     HEAP32[$15>>2] = $17;
     $18 = ($17|0)==(0);
     if ($18) {
      $19 = ((($15)) + 16|0);
      $20 = HEAP32[$19>>2]|0;
      $21 = HEAP32[$20>>2]|0;HEAP32[$20>>2] = (($21-1)|0);
      $22 = ($21|0)==(1);
      if ($22) {
       /* fence */;
       __ZN33__LT_alloc__arc__Arc_LT_T_GT__GT_9drop_slow17hb3767c2311d7d383E($19);
      }
      $23 = ((($15)) + 172|0);
      $24 = HEAP32[$23>>2]|0;
      $switchtmp$i$i$i$i$i$i$i = ($24|0)==(0|0);
      if (!($switchtmp$i$i$i$i$i$i$i)) {
       $$idx1$i$i$i$i$i$i$i$i = ((($15)) + 176|0);
       $$idx1$val$i$i$i$i$i$i$i$i = HEAP32[$$idx1$i$i$i$i$i$i$i$i>>2]|0;
       $$idx1$val$val$i$i$i$i$i$i$i$i = HEAP32[$$idx1$val$i$i$i$i$i$i$i$i>>2]|0;
       FUNCTION_TABLE_vi[$$idx1$val$val$i$i$i$i$i$i$i$i & 511]($24);
       $25 = HEAP32[$$idx1$i$i$i$i$i$i$i$i>>2]|0;
       $26 = ((($25)) + 4|0);
       $27 = HEAP32[$26>>2]|0;
       $28 = ($27|0)==(0);
       if (!($28)) {
        _free($24);
       }
      }
      $$idx3$val$i$i$i = HEAP32[$6>>2]|0;
      $29 = ((($$idx3$val$i$i$i)) + 4|0);
      $30 = HEAP32[$29>>2]|0;
      $31 = (($30) + -1)|0;
      HEAP32[$29>>2] = $31;
      $32 = ($31|0)==(0);
      if ($32) {
       _free($15);
      }
     }
     break;
    }
    case 1:  {
     $33 = HEAP32[$6>>2]|0;
     $34 = HEAP32[$33>>2]|0;
     $35 = (($34) + -1)|0;
     HEAP32[$33>>2] = $35;
     $36 = ($35|0)==(0);
     if ($36) {
      $37 = ((($33)) + 12|0);
      __ZN4drop17hd4af0298b60386b8E($37);
      $38 = ((($33)) + 4|0);
      $39 = HEAP32[$38>>2]|0;
      $40 = (($39) + -1)|0;
      HEAP32[$38>>2] = $40;
      $41 = ($40|0)==(0);
      if ($41) {
       _free($33);
      }
     }
     break;
    }
    default: {
    }
    }
    $42 = HEAP32[$1>>2]|0;
    $43 = HEAP32[$2>>2]|0;
    $44 = ($42|0)==($43|0);
    if ($44) {
     label = 2;
     break L1;
    } else {
     $11 = $42;
    }
   }
  }
 } while(0);
 if ((label|0) == 2) {
  HEAP32[$3>>2] = 0;
 }
 $45 = ((($0)) + 4|0);
 $46 = HEAP32[$45>>2]|0;
 $47 = ($46|0)==(0);
 if ($47) {
  STACKTOP = sp;return;
 }
 $48 = ((($0)) + 16|0);
 $49 = HEAP32[$48>>2]|0;
 $$idx$i = ((($49)) + 8|0);
 $$idx$val$i = HEAP32[$$idx$i>>2]|0;
 $50 = HEAP32[$0>>2]|0;
 $51 = HEAP32[$49>>2]|0;
 $52 = (($51) + ($50<<6)|0);
 $53 = (($51) + ($$idx$val$i<<6)|0);
 $54 = $46 << 6;
 _memmove(($53|0),($52|0),($54|0))|0;
 $55 = HEAP32[$45>>2]|0;
 $56 = (($55) + ($$idx$val$i))|0;
 HEAP32[$$idx$i>>2] = $56;
 STACKTOP = sp;return;
}
function __ZN4drop17h25022725af3d2334E($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $not$$i$i$i$i$i = 0, $not$$i$i$i$i1$i = 0, $not$$i$i$i$i4$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[$0>>2]|0;
 $2 = HEAP32[$1>>2]|0;HEAP32[$1>>2] = (($2-1)|0);
 $3 = ($2|0)==(1);
 if ($3) {
  /* fence */;
  __ZN33__LT_alloc__arc__Arc_LT_T_GT__GT_9drop_slow17h639b296ab3838c06E($0);
 }
 $4 = ((($0)) + 8|0);
 $5 = HEAP32[$4>>2]|0;
 $not$$i$i$i$i$i = ($5|0)==(0);
 if (!($not$$i$i$i$i$i)) {
  $6 = ((($0)) + 4|0);
  $7 = HEAP32[$6>>2]|0;
  _free($7);
 }
 $8 = ((($0)) + 20|0);
 $9 = HEAP32[$8>>2]|0;
 $not$$i$i$i$i1$i = ($9|0)==(0);
 if (!($not$$i$i$i$i1$i)) {
  $10 = ((($0)) + 16|0);
  $11 = HEAP32[$10>>2]|0;
  _free($11);
 }
 $12 = ((($0)) + 32|0);
 $13 = HEAP32[$12>>2]|0;
 $not$$i$i$i$i4$i = ($13|0)==(0);
 if ($not$$i$i$i$i4$i) {
  return;
 }
 $14 = ((($0)) + 28|0);
 $15 = HEAP32[$14>>2]|0;
 _free($15);
 return;
}
function __ZN4drop17h2598c1eaf9d269edE($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZN4drop17heceddef0f26ca94eE($0);
 return;
}
function __ZN4drop17h2f30a22cc85f591fE($0) {
 $0 = $0|0;
 var $$idx$val$i$i = 0, $$idx$val$i$i$i$i$i$i$i = 0, $$idx$val$i$i1 = 0, $$idx2$val$i$i = 0, $$idx2$val$i$i$i$i$i$i$i = 0, $$idx3$val$i$i = 0, $$idx3$val$i$i$i$i$i$i$i = 0, $$idx5$i$i = 0, $$idx5$val$i$i = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0;
 var $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0;
 var $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0;
 var $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $7 = 0, $8 = 0, $9 = 0, $not$$i$i$i$i = 0, $not$$i$i$i$i$i = 0, $not$$i$i$i$i$i$i = 0, $not$$i$i$i$i1$i = 0, $not$$i$i$i$i1$i$i = 0, $not$$i$i$i4$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 __ZN4drop17hc8545853bac74c2bE($0);
 $1 = ((($0)) + 160|0);
 __ZN4drop17h156bdbf342ee89b6E($1);
 $2 = ((($0)) + 220|0);
 $$idx$val$i$i = HEAP32[$2>>2]|0;
 $$idx5$i$i = ((($0)) + 228|0);
 $$idx5$val$i$i = HEAP32[$$idx5$i$i>>2]|0;
 $3 = (($$idx$val$i$i) + ($$idx5$val$i$i<<3)|0);
 $4 = ($$idx5$val$i$i|0)==(0);
 L1: do {
  if (!($4)) {
   $6 = $$idx$val$i$i;
   while(1) {
    $5 = ((($6)) + 4|0);
    $7 = HEAP32[$5>>2]|0;
    $8 = HEAP32[$7>>2]|0;
    $9 = (($8) + -1)|0;
    HEAP32[$7>>2] = $9;
    $$idx$val$i$i$i$i$i$i$i = HEAP32[$5>>2]|0;
    $10 = HEAP32[$$idx$val$i$i$i$i$i$i$i>>2]|0;
    $11 = ($10|0)==(0);
    if ($11) {
     $12 = ((($7)) + 12|0);
     __THREW__ = 0;
     invoke_vi(247,($12|0));
     $13 = __THREW__; __THREW__ = 0;
     $14 = $13&1;
     if ($14) {
      break;
     }
     $$idx3$val$i$i$i$i$i$i$i = HEAP32[$5>>2]|0;
     $15 = ((($$idx3$val$i$i$i$i$i$i$i)) + 4|0);
     $16 = HEAP32[$15>>2]|0;
     $17 = (($16) + -1)|0;
     HEAP32[$15>>2] = $17;
     $$idx2$val$i$i$i$i$i$i$i = HEAP32[$5>>2]|0;
     $18 = ((($$idx2$val$i$i$i$i$i$i$i)) + 4|0);
     $19 = HEAP32[$18>>2]|0;
     $20 = ($19|0)==(0);
     if ($20) {
      _free($7);
     }
    }
    $21 = ((($6)) + 8|0);
    $22 = ($21|0)==($3|0);
    if ($22) {
     break L1;
    } else {
     $6 = $21;
    }
   }
   $23 = ___cxa_find_matching_catch_2()|0;
   $24 = tempRet0;
   $25 = ((($0)) + 224|0);
   $26 = HEAP32[$25>>2]|0;
   $not$$i$i$i4$i = ($26|0)==(0);
   if ($not$$i$i$i4$i) {
    ___resumeException($23|0);
    // unreachable;
   }
   $27 = HEAP32[$2>>2]|0;
   _free($27);
   ___resumeException($23|0);
   // unreachable;
  }
 } while(0);
 $28 = ((($0)) + 224|0);
 $29 = HEAP32[$28>>2]|0;
 $not$$i$i$i$i = ($29|0)==(0);
 if (!($not$$i$i$i$i)) {
  $30 = HEAP32[$2>>2]|0;
  _free($30);
 }
 $31 = ((($0)) + 240|0);
 $32 = HEAP32[$31>>2]|0;
 $not$$i$i$i$i$i = ($32|0)==(0);
 if (!($not$$i$i$i$i$i)) {
  $33 = ((($0)) + 236|0);
  $34 = HEAP32[$33>>2]|0;
  _free($34);
 }
 $35 = ((($0)) + 252|0);
 $36 = HEAP32[$35>>2]|0;
 $not$$i$i$i$i1$i = ($36|0)==(0);
 if (!($not$$i$i$i$i1$i)) {
  $37 = ((($0)) + 248|0);
  $38 = HEAP32[$37>>2]|0;
  _free($38);
 }
 $39 = ((($0)) + 284|0);
 $40 = HEAP32[$39>>2]|0;
 $41 = HEAP32[$40>>2]|0;
 $42 = (($41) + -1)|0;
 HEAP32[$40>>2] = $42;
 $$idx$val$i$i1 = HEAP32[$39>>2]|0;
 $43 = HEAP32[$$idx$val$i$i1>>2]|0;
 $44 = ($43|0)==(0);
 if ($44) {
  $45 = ((($40)) + 12|0);
  __ZN4drop17h5e5a688e2f4a74b7E($45);
  $$idx3$val$i$i = HEAP32[$39>>2]|0;
  $46 = ((($$idx3$val$i$i)) + 4|0);
  $47 = HEAP32[$46>>2]|0;
  $48 = (($47) + -1)|0;
  HEAP32[$46>>2] = $48;
  $$idx2$val$i$i = HEAP32[$39>>2]|0;
  $49 = ((($$idx2$val$i$i)) + 4|0);
  $50 = HEAP32[$49>>2]|0;
  $51 = ($50|0)==(0);
  if ($51) {
   _free($40);
  }
 }
 $52 = ((($0)) + 288|0);
 __ZN4drop17h3bddf975cc648b2fE($52);
 $53 = ((($0)) + 356|0);
 __ZN4drop17heeecd458b244cc82E($53);
 $54 = ((($0)) + 416|0);
 __ZN4drop17h135bc4bdb783be3aE($54);
 $55 = ((($0)) + 436|0);
 $56 = HEAP32[$55>>2]|0;
 $not$$i$i$i$i$i$i = ($56|0)==(0);
 if (!($not$$i$i$i$i$i$i)) {
  $57 = ((($0)) + 432|0);
  $58 = HEAP32[$57>>2]|0;
  _free($58);
 }
 $59 = ((($0)) + 448|0);
 $60 = HEAP32[$59>>2]|0;
 $not$$i$i$i$i1$i$i = ($60|0)==(0);
 if ($not$$i$i$i$i1$i$i) {
  $63 = ((($0)) + 468|0);
  __ZN4drop17h7b660c5166a4b0b3E($63);
  return;
 }
 $61 = ((($0)) + 444|0);
 $62 = HEAP32[$61>>2]|0;
 _free($62);
 $63 = ((($0)) + 468|0);
 __ZN4drop17h7b660c5166a4b0b3E($63);
 return;
}
function __ZN4drop17h37255e4d2306d967E($0) {
 $0 = $0|0;
 var $$idx1$i$i$i$i$i$i = 0, $$idx1$val$i$i$i$i$i$i = 0, $$idx1$val$val$i$i$i$i$i$i = 0, $$val$i$i$i = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $cond$i = 0, $cond$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 4|0);
 $2 = HEAP32[$1>>2]|0;
 $cond$i = ($2|0)==(1);
 if (!($cond$i)) {
  return;
 }
 $3 = ((($0)) + 8|0);
 $4 = HEAP32[$3>>2]|0;
 $cond$i$i$i = ($4|0)==(1);
 if (!($cond$i$i$i)) {
  return;
 }
 $5 = ((($0)) + 12|0);
 $$val$i$i$i = HEAP32[$5>>2]|0;
 $6 = ((($$val$i$i$i)) + 4|0);
 $7 = HEAP32[$6>>2]|0;
 $$idx1$i$i$i$i$i$i = ((($$val$i$i$i)) + 8|0);
 $$idx1$val$i$i$i$i$i$i = HEAP32[$$idx1$i$i$i$i$i$i>>2]|0;
 $$idx1$val$val$i$i$i$i$i$i = HEAP32[$$idx1$val$i$i$i$i$i$i>>2]|0;
 FUNCTION_TABLE_vi[$$idx1$val$val$i$i$i$i$i$i & 511]($7);
 $8 = HEAP32[$$idx1$i$i$i$i$i$i>>2]|0;
 $9 = ((($8)) + 4|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = ($10|0)==(0);
 if (!($11)) {
  _free($7);
 }
 _free($$val$i$i$i);
 return;
}
function __ZN4drop17h3bddf975cc648b2fE($0) {
 $0 = $0|0;
 var $$idx$val$i = 0, $$idx$val$i$i = 0, $$idx$val$i$i$i = 0, $$idx$val$i$i$i$i$i$i = 0, $$idx1$i$i$i$i$i$i$i$i = 0, $$idx1$val$i$i$i$i$i$i$i$i = 0, $$idx1$val$val$i$i$i$i$i$i$i$i = 0, $$idx2$val$i$i$i = 0, $$idx2$val$i$i$i$i$i$i = 0, $$idx3$val$i$i$i = 0, $$idx3$val$i$i$i$i$i$i = 0, $$idx5$i = 0, $$idx5$i$i = 0, $$idx5$val$i = 0, $$idx5$val$i$i = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0;
 var $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0;
 var $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0;
 var $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0;
 var $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $8 = 0, $9 = 0, $not$$i$i$i$i = 0, $not$$i$i$i$i$i = 0, $not$$i$i$i$i1$i = 0, $not$$i$i$i$i4$i = 0, $not$$i$i$i6$i = 0, $not$$i$i$i6$i$i = 0, $switchtmp$i$i$i$i$i$i$i = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 4|0);
 $$idx$val$i$i = HEAP32[$1>>2]|0;
 $$idx5$i$i = ((($0)) + 12|0);
 $$idx5$val$i$i = HEAP32[$$idx5$i$i>>2]|0;
 $2 = (($$idx$val$i$i) + (($$idx5$val$i$i*24)|0)|0);
 $3 = ($$idx5$val$i$i|0)==(0);
 L1: do {
  if (!($3)) {
   $5 = $$idx$val$i$i;
   while(1) {
    $4 = ((($5)) + 4|0);
    $6 = HEAP32[$4>>2]|0;
    $7 = HEAP32[$6>>2]|0;
    $8 = (($7) + -1)|0;
    HEAP32[$6>>2] = $8;
    $$idx$val$i$i$i = HEAP32[$4>>2]|0;
    $9 = HEAP32[$$idx$val$i$i$i>>2]|0;
    $10 = ($9|0)==(0);
    if ($10) {
     $11 = ((($6)) + 16|0);
     $12 = HEAP32[$11>>2]|0;
     $13 = HEAP32[$12>>2]|0;HEAP32[$12>>2] = (($13-1)|0);
     $14 = ($13|0)==(1);
     if ($14) {
      /* fence */;
      __THREW__ = 0;
      invoke_vi(241,($11|0));
      $15 = __THREW__; __THREW__ = 0;
      $16 = $15&1;
      if ($16) {
       break;
      }
     }
     $17 = ((($6)) + 172|0);
     $18 = HEAP32[$17>>2]|0;
     $switchtmp$i$i$i$i$i$i$i = ($18|0)==(0|0);
     if (!($switchtmp$i$i$i$i$i$i$i)) {
      $$idx1$i$i$i$i$i$i$i$i = ((($6)) + 176|0);
      $$idx1$val$i$i$i$i$i$i$i$i = HEAP32[$$idx1$i$i$i$i$i$i$i$i>>2]|0;
      $$idx1$val$val$i$i$i$i$i$i$i$i = HEAP32[$$idx1$val$i$i$i$i$i$i$i$i>>2]|0;
      __THREW__ = 0;
      invoke_vi($$idx1$val$val$i$i$i$i$i$i$i$i|0,($18|0));
      $19 = __THREW__; __THREW__ = 0;
      $20 = $19&1;
      if ($20) {
       break;
      }
      $21 = HEAP32[$$idx1$i$i$i$i$i$i$i$i>>2]|0;
      $22 = ((($21)) + 4|0);
      $23 = HEAP32[$22>>2]|0;
      $24 = ($23|0)==(0);
      if (!($24)) {
       _free($18);
      }
     }
     $$idx3$val$i$i$i = HEAP32[$4>>2]|0;
     $25 = ((($$idx3$val$i$i$i)) + 4|0);
     $26 = HEAP32[$25>>2]|0;
     $27 = (($26) + -1)|0;
     HEAP32[$25>>2] = $27;
     $$idx2$val$i$i$i = HEAP32[$4>>2]|0;
     $28 = ((($$idx2$val$i$i$i)) + 4|0);
     $29 = HEAP32[$28>>2]|0;
     $30 = ($29|0)==(0);
     if ($30) {
      _free($6);
     }
    }
    $31 = ((($5)) + 24|0);
    $32 = ($31|0)==($2|0);
    if ($32) {
     break L1;
    } else {
     $5 = $31;
    }
   }
   $36 = ___cxa_find_matching_catch_2()|0;
   $37 = tempRet0;
   $38 = ((($0)) + 8|0);
   $39 = HEAP32[$38>>2]|0;
   $not$$i$i$i6$i$i = ($39|0)==(0);
   if ($not$$i$i$i6$i$i) {
    ___resumeException($36|0);
    // unreachable;
   }
   $40 = HEAP32[$1>>2]|0;
   _free($40);
   ___resumeException($36|0);
   // unreachable;
  }
 } while(0);
 $33 = ((($0)) + 8|0);
 $34 = HEAP32[$33>>2]|0;
 $not$$i$i$i$i$i = ($34|0)==(0);
 if (!($not$$i$i$i$i$i)) {
  $35 = HEAP32[$1>>2]|0;
  _free($35);
 }
 $41 = ((($0)) + 24|0);
 $42 = HEAP32[$41>>2]|0;
 $not$$i$i$i$i1$i = ($42|0)==(0);
 if (!($not$$i$i$i$i1$i)) {
  $43 = ((($0)) + 20|0);
  $44 = HEAP32[$43>>2]|0;
  _free($44);
 }
 $45 = ((($0)) + 36|0);
 $46 = HEAP32[$45>>2]|0;
 $not$$i$i$i$i4$i = ($46|0)==(0);
 if (!($not$$i$i$i$i4$i)) {
  $47 = ((($0)) + 32|0);
  $48 = HEAP32[$47>>2]|0;
  _free($48);
 }
 $49 = ((($0)) + 56|0);
 $$idx$val$i = HEAP32[$49>>2]|0;
 $$idx5$i = ((($0)) + 64|0);
 $$idx5$val$i = HEAP32[$$idx5$i>>2]|0;
 $50 = (($$idx$val$i) + ($$idx5$val$i<<3)|0);
 $51 = ($$idx5$val$i|0)==(0);
 L31: do {
  if (!($51)) {
   $53 = $$idx$val$i;
   while(1) {
    $52 = ((($53)) + 4|0);
    $54 = HEAP32[$52>>2]|0;
    $55 = HEAP32[$54>>2]|0;
    $56 = (($55) + -1)|0;
    HEAP32[$54>>2] = $56;
    $$idx$val$i$i$i$i$i$i = HEAP32[$52>>2]|0;
    $57 = HEAP32[$$idx$val$i$i$i$i$i$i>>2]|0;
    $58 = ($57|0)==(0);
    if ($58) {
     $59 = ((($54)) + 12|0);
     __THREW__ = 0;
     invoke_vi(247,($59|0));
     $60 = __THREW__; __THREW__ = 0;
     $61 = $60&1;
     if ($61) {
      break;
     }
     $$idx3$val$i$i$i$i$i$i = HEAP32[$52>>2]|0;
     $62 = ((($$idx3$val$i$i$i$i$i$i)) + 4|0);
     $63 = HEAP32[$62>>2]|0;
     $64 = (($63) + -1)|0;
     HEAP32[$62>>2] = $64;
     $$idx2$val$i$i$i$i$i$i = HEAP32[$52>>2]|0;
     $65 = ((($$idx2$val$i$i$i$i$i$i)) + 4|0);
     $66 = HEAP32[$65>>2]|0;
     $67 = ($66|0)==(0);
     if ($67) {
      _free($54);
     }
    }
    $68 = ((($53)) + 8|0);
    $69 = ($68|0)==($50|0);
    if ($69) {
     break L31;
    } else {
     $53 = $68;
    }
   }
   $73 = ___cxa_find_matching_catch_2()|0;
   $74 = tempRet0;
   $75 = ((($0)) + 60|0);
   $76 = HEAP32[$75>>2]|0;
   $not$$i$i$i6$i = ($76|0)==(0);
   if ($not$$i$i$i6$i) {
    ___resumeException($73|0);
    // unreachable;
   }
   $77 = HEAP32[$49>>2]|0;
   _free($77);
   ___resumeException($73|0);
   // unreachable;
  }
 } while(0);
 $70 = ((($0)) + 60|0);
 $71 = HEAP32[$70>>2]|0;
 $not$$i$i$i$i = ($71|0)==(0);
 if ($not$$i$i$i$i) {
  return;
 }
 $72 = HEAP32[$49>>2]|0;
 _free($72);
 return;
}
function __ZN4drop17h4764338a7a20a600E($0) {
 $0 = $0|0;
 var $$idx$i$i$i$i = 0, $$idx$i5$i$i$i = 0, $$idx$val$i$i$i$i = 0, $$idx$val$i6$i$i$i = 0, $$pr$i = 0, $$pre$i$i$i$i = 0, $$val$i$i = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $_22$sroa$0$0$$sroa_idx$i$i$i$i = 0, $_22$sroa$4$0$$sroa_idx18$i$i$i$i = 0, $_22$sroa$5$0$$sroa_idx20$i$i$i$i = 0, $cond$i$i$i$i$i = 0, $not$$i$i$i$i$i$i$i = 0, $not$$i$i$i$i$i$i$i$i = 0, $not$$i$i$i$i$i$i6$i = 0, $not$$i$i$i$i$i7$i$i$i = 0, $not$$i$i$i$i19$i$i = 0, $personalityslot$sroa$0$161$i$i = 0, $personalityslot$sroa$6$159$i$i = 0, $src$sroa$0$i$i$sroa$0$0$copyload$i$i = 0;
 var $src$sroa$0$i$i$sroa$4$0$$sroa_idx54$i$i = 0, $src$sroa$0$i$i$sroa$4$0$copyload$i$i = 0, $switch4tmp$i$i = 0, $switchtmp$i$i$i = 0, $switchtmp$i$i5$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $src$sroa$0$i$i$sroa$0$0$copyload$i$i = HEAP32[$0>>2]|0;
 $src$sroa$0$i$i$sroa$4$0$$sroa_idx54$i$i = ((($0)) + 4|0);
 $src$sroa$0$i$i$sroa$4$0$copyload$i$i = HEAP32[$src$sroa$0$i$i$sroa$4$0$$sroa_idx54$i$i>>2]|0;
 HEAP32[$0>>2] = 0;
 $switch4tmp$i$i = ($src$sroa$0$i$i$sroa$0$0$copyload$i$i|0)==(0|0);
 if ($switch4tmp$i$i) {
  return;
 }
 $1 = ((($0)) + 12|0);
 $$val$i$i = HEAP32[$1>>2]|0;
 $2 = HEAP32[$$val$i$i>>2]|0;
 $cond$i$i$i$i$i = ($2|0)==(0);
 L4: do {
  if ($cond$i$i$i$i$i) {
   HEAP32[$$val$i$i>>2] = -1;
   $6 = ((($$val$i$i)) + 4|0);
   $$idx$i$i$i$i = ((($$val$i$i)) + 12|0);
   $$idx$val$i$i$i$i = HEAP32[$$idx$i$i$i$i>>2]|0;
   $7 = ((($$val$i$i)) + 16|0);
   $8 = HEAP32[$7>>2]|0;
   $9 = ($$idx$val$i$i$i$i>>>0)<($8>>>0);
   if ($9) {
    $$idx$i5$i$i$i = ((($$val$i$i)) + 8|0);
    $$idx$val$i6$i$i$i = HEAP32[$$idx$i5$i$i$i>>2]|0;
    $10 = ($$idx$val$i$i$i$i|0)==($$idx$val$i6$i$i$i|0);
    do {
     if ($10) {
      __THREW__ = 0;
      invoke_vi(273,($6|0));
      $11 = __THREW__; __THREW__ = 0;
      $12 = $11&1;
      if (!($12)) {
       $$pre$i$i$i$i = HEAP32[$$idx$i$i$i$i>>2]|0;
       $16 = $$pre$i$i$i$i;
       break;
      }
      $13 = ___cxa_find_matching_catch_2()|0;
      $14 = tempRet0;
      $not$$i$i$i$i$i7$i$i$i = ($src$sroa$0$i$i$sroa$4$0$copyload$i$i|0)==(0);
      if (!($not$$i$i$i$i$i7$i$i$i)) {
       _free($src$sroa$0$i$i$sroa$0$0$copyload$i$i);
      }
      HEAP32[$$val$i$i>>2] = 0;
      $personalityslot$sroa$0$161$i$i = $13;$personalityslot$sroa$6$159$i$i = $14;
      break L4;
     } else {
      $16 = $$idx$val$i$i$i$i;
     }
    } while(0);
    $15 = HEAP32[$6>>2]|0;
    $_22$sroa$0$0$$sroa_idx$i$i$i$i = (($15) + (($16*12)|0)|0);
    HEAP32[$_22$sroa$0$0$$sroa_idx$i$i$i$i>>2] = $src$sroa$0$i$i$sroa$0$0$copyload$i$i;
    $_22$sroa$4$0$$sroa_idx18$i$i$i$i = (((($15) + (($16*12)|0)|0)) + 4|0);
    HEAP32[$_22$sroa$4$0$$sroa_idx18$i$i$i$i>>2] = $src$sroa$0$i$i$sroa$4$0$copyload$i$i;
    $_22$sroa$5$0$$sroa_idx20$i$i$i$i = (((($15) + (($16*12)|0)|0)) + 8|0);
    HEAP32[$_22$sroa$5$0$$sroa_idx20$i$i$i$i>>2] = 0;
    $17 = HEAP32[$$idx$i$i$i$i>>2]|0;
    $18 = (($17) + 1)|0;
    HEAP32[$$idx$i$i$i$i>>2] = $18;
   } else {
    $not$$i$i$i$i$i$i$i$i = ($src$sroa$0$i$i$sroa$4$0$copyload$i$i|0)==(0);
    if (!($not$$i$i$i$i$i$i$i$i)) {
     _free($src$sroa$0$i$i$sroa$0$0$copyload$i$i);
    }
   }
   HEAP32[$$val$i$i>>2] = 0;
   $$pr$i = HEAP32[$0>>2]|0;
   $switchtmp$i$i$i = ($$pr$i|0)==(0|0);
   if ($switchtmp$i$i$i) {
    return;
   }
   $19 = HEAP32[$src$sroa$0$i$i$sroa$4$0$$sroa_idx54$i$i>>2]|0;
   $not$$i$i$i$i$i$i$i = ($19|0)==(0);
   if ($not$$i$i$i$i$i$i$i) {
    return;
   }
   _free($$pr$i);
   return;
  } else {
   __THREW__ = 0;
   invoke_v(212);
   $3 = __THREW__; __THREW__ = 0;
   $4 = ___cxa_find_matching_catch_2()|0;
   $5 = tempRet0;
   $not$$i$i$i$i19$i$i = ($src$sroa$0$i$i$sroa$4$0$copyload$i$i|0)==(0);
   if ($not$$i$i$i$i19$i$i) {
    $personalityslot$sroa$0$161$i$i = $4;$personalityslot$sroa$6$159$i$i = $5;
   } else {
    _free($src$sroa$0$i$i$sroa$0$0$copyload$i$i);
    $personalityslot$sroa$0$161$i$i = $4;$personalityslot$sroa$6$159$i$i = $5;
   }
  }
 } while(0);
 $20 = HEAP32[$0>>2]|0;
 $switchtmp$i$i5$i = ($20|0)==(0|0);
 if ($switchtmp$i$i5$i) {
  ___resumeException($personalityslot$sroa$0$161$i$i|0);
  // unreachable;
 }
 $21 = HEAP32[$src$sroa$0$i$i$sroa$4$0$$sroa_idx54$i$i>>2]|0;
 $not$$i$i$i$i$i$i6$i = ($21|0)==(0);
 if ($not$$i$i$i$i$i$i6$i) {
  ___resumeException($personalityslot$sroa$0$161$i$i|0);
  // unreachable;
 }
 _free($20);
 ___resumeException($personalityslot$sroa$0$161$i$i|0);
 // unreachable;
}
function __ZN4drop17h5178d490d4b6edadE($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZN4drop17h561a92a322b53d51E($0) {
 $0 = $0|0;
 var $$idx$val$i$i = 0, $$idx$val$i$i1 = 0, $$idx$val$i$i10 = 0, $$idx$val$i$i15 = 0, $$idx$val$i$i30 = 0, $$idx$val$i$i45 = 0, $$idx$val$i$i60 = 0, $$idx$val$i$i75 = 0, $$idx1$i$i$i$i$i$i$i = 0, $$idx1$i$i$i$i$i$i$i20 = 0, $$idx1$i$i$i$i$i$i$i35 = 0, $$idx1$i$i$i$i$i$i$i50 = 0, $$idx1$i$i$i$i$i$i$i65 = 0, $$idx1$i$i$i$i$i$i$i80 = 0, $$idx1$val$i$i$i$i$i$i$i = 0, $$idx1$val$i$i$i$i$i$i$i21 = 0, $$idx1$val$i$i$i$i$i$i$i36 = 0, $$idx1$val$i$i$i$i$i$i$i51 = 0, $$idx1$val$i$i$i$i$i$i$i66 = 0, $$idx1$val$i$i$i$i$i$i$i81 = 0;
 var $$idx1$val$val$i$i$i$i$i$i$i = 0, $$idx1$val$val$i$i$i$i$i$i$i22 = 0, $$idx1$val$val$i$i$i$i$i$i$i37 = 0, $$idx1$val$val$i$i$i$i$i$i$i52 = 0, $$idx1$val$val$i$i$i$i$i$i$i67 = 0, $$idx1$val$val$i$i$i$i$i$i$i82 = 0, $$idx2$val$i$i = 0, $$idx2$val$i$i13 = 0, $$idx2$val$i$i26 = 0, $$idx2$val$i$i41 = 0, $$idx2$val$i$i56 = 0, $$idx2$val$i$i71 = 0, $$idx2$val$i$i8 = 0, $$idx2$val$i$i86 = 0, $$idx3$val$i$i = 0, $$idx3$val$i$i12 = 0, $$idx3$val$i$i25 = 0, $$idx3$val$i$i40 = 0, $$idx3$val$i$i55 = 0, $$idx3$val$i$i7 = 0;
 var $$idx3$val$i$i70 = 0, $$idx3$val$i$i85 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0;
 var $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0;
 var $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0;
 var $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $switchtmp$i$i$i$i$i$i = 0;
 var $switchtmp$i$i$i$i$i$i$i = 0, $switchtmp$i$i$i$i$i$i$i2 = 0, $switchtmp$i$i$i$i$i$i18 = 0, $switchtmp$i$i$i$i$i$i33 = 0, $switchtmp$i$i$i$i$i$i48 = 0, $switchtmp$i$i$i$i$i$i63 = 0, $switchtmp$i$i$i$i$i$i78 = 0, $switchtmp$i$i1$i$i$i$i$i = 0, $switchtmp$i$i1$i$i$i$i$i5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[$0>>2]|0;
 switch ($1|0) {
 case 0:  {
  $2 = ((($0)) + 4|0);
  $3 = HEAP32[$2>>2]|0;
  $4 = HEAP32[$3>>2]|0;
  $5 = (($4) + -1)|0;
  HEAP32[$3>>2] = $5;
  $$idx$val$i$i10 = HEAP32[$2>>2]|0;
  $6 = HEAP32[$$idx$val$i$i10>>2]|0;
  $7 = ($6|0)==(0);
  if ($7) {
   $8 = ((($3)) + 16|0);
   $9 = HEAP32[$8>>2]|0;
   $10 = HEAP32[$9>>2]|0;HEAP32[$9>>2] = (($10-1)|0);
   $11 = ($10|0)==(1);
   if ($11) {
    /* fence */;
    __ZN33__LT_alloc__arc__Arc_LT_T_GT__GT_9drop_slow17hb3767c2311d7d383E($8);
   }
   $12 = ((($3)) + 172|0);
   $13 = HEAP32[$12>>2]|0;
   $switchtmp$i$i$i$i$i$i = ($13|0)==(0|0);
   if (!($switchtmp$i$i$i$i$i$i)) {
    $$idx1$i$i$i$i$i$i$i = ((($3)) + 176|0);
    $$idx1$val$i$i$i$i$i$i$i = HEAP32[$$idx1$i$i$i$i$i$i$i>>2]|0;
    $$idx1$val$val$i$i$i$i$i$i$i = HEAP32[$$idx1$val$i$i$i$i$i$i$i>>2]|0;
    FUNCTION_TABLE_vi[$$idx1$val$val$i$i$i$i$i$i$i & 511]($13);
    $14 = HEAP32[$$idx1$i$i$i$i$i$i$i>>2]|0;
    $15 = ((($14)) + 4|0);
    $16 = HEAP32[$15>>2]|0;
    $17 = ($16|0)==(0);
    if (!($17)) {
     _free($13);
    }
   }
   $$idx3$val$i$i12 = HEAP32[$2>>2]|0;
   $18 = ((($$idx3$val$i$i12)) + 4|0);
   $19 = HEAP32[$18>>2]|0;
   $20 = (($19) + -1)|0;
   HEAP32[$18>>2] = $20;
   $$idx2$val$i$i13 = HEAP32[$2>>2]|0;
   $21 = ((($$idx2$val$i$i13)) + 4|0);
   $22 = HEAP32[$21>>2]|0;
   $23 = ($22|0)==(0);
   if ($23) {
    _free($3);
   }
  }
  $24 = ((($0)) + 8|0);
  $25 = HEAP32[$24>>2]|0;
  $26 = HEAP32[$25>>2]|0;
  $27 = (($26) + -1)|0;
  HEAP32[$25>>2] = $27;
  $$idx$val$i$i15 = HEAP32[$24>>2]|0;
  $28 = HEAP32[$$idx$val$i$i15>>2]|0;
  $29 = ($28|0)==(0);
  if (!($29)) {
   return;
  }
  $30 = ((($25)) + 16|0);
  $31 = HEAP32[$30>>2]|0;
  $32 = HEAP32[$31>>2]|0;HEAP32[$31>>2] = (($32-1)|0);
  $33 = ($32|0)==(1);
  if ($33) {
   /* fence */;
   __ZN33__LT_alloc__arc__Arc_LT_T_GT__GT_9drop_slow17hb3767c2311d7d383E($30);
  }
  $34 = ((($25)) + 172|0);
  $35 = HEAP32[$34>>2]|0;
  $switchtmp$i$i$i$i$i$i18 = ($35|0)==(0|0);
  if (!($switchtmp$i$i$i$i$i$i18)) {
   $$idx1$i$i$i$i$i$i$i20 = ((($25)) + 176|0);
   $$idx1$val$i$i$i$i$i$i$i21 = HEAP32[$$idx1$i$i$i$i$i$i$i20>>2]|0;
   $$idx1$val$val$i$i$i$i$i$i$i22 = HEAP32[$$idx1$val$i$i$i$i$i$i$i21>>2]|0;
   FUNCTION_TABLE_vi[$$idx1$val$val$i$i$i$i$i$i$i22 & 511]($35);
   $36 = HEAP32[$$idx1$i$i$i$i$i$i$i20>>2]|0;
   $37 = ((($36)) + 4|0);
   $38 = HEAP32[$37>>2]|0;
   $39 = ($38|0)==(0);
   if (!($39)) {
    _free($35);
   }
  }
  $$idx3$val$i$i25 = HEAP32[$24>>2]|0;
  $40 = ((($$idx3$val$i$i25)) + 4|0);
  $41 = HEAP32[$40>>2]|0;
  $42 = (($41) + -1)|0;
  HEAP32[$40>>2] = $42;
  $$idx2$val$i$i26 = HEAP32[$24>>2]|0;
  $43 = ((($$idx2$val$i$i26)) + 4|0);
  $44 = HEAP32[$43>>2]|0;
  $45 = ($44|0)==(0);
  if (!($45)) {
   return;
  }
  _free($25);
  return;
  break;
 }
 case 1:  {
  $46 = ((($0)) + 4|0);
  $47 = HEAP32[$46>>2]|0;
  $48 = HEAP32[$47>>2]|0;
  $49 = (($48) + -1)|0;
  HEAP32[$47>>2] = $49;
  $$idx$val$i$i1 = HEAP32[$46>>2]|0;
  $50 = HEAP32[$$idx$val$i$i1>>2]|0;
  $51 = ($50|0)==(0);
  if (!($51)) {
   return;
  }
  $52 = ((($47)) + 16|0);
  $53 = HEAP32[$52>>2]|0;
  $switchtmp$i$i$i$i$i$i$i2 = ($53|0)==(0|0);
  if (!($switchtmp$i$i$i$i$i$i$i2)) {
   $54 = HEAP32[$53>>2]|0;
   $55 = (($54) + -1)|0;
   HEAP32[$53>>2] = $55;
   $$idx$val$i$i30 = HEAP32[$52>>2]|0;
   $56 = HEAP32[$$idx$val$i$i30>>2]|0;
   $57 = ($56|0)==(0);
   if ($57) {
    $58 = ((($53)) + 16|0);
    $59 = HEAP32[$58>>2]|0;
    $60 = HEAP32[$59>>2]|0;HEAP32[$59>>2] = (($60-1)|0);
    $61 = ($60|0)==(1);
    if ($61) {
     /* fence */;
     __ZN33__LT_alloc__arc__Arc_LT_T_GT__GT_9drop_slow17hb3767c2311d7d383E($58);
    }
    $62 = ((($53)) + 172|0);
    $63 = HEAP32[$62>>2]|0;
    $switchtmp$i$i$i$i$i$i33 = ($63|0)==(0|0);
    if (!($switchtmp$i$i$i$i$i$i33)) {
     $$idx1$i$i$i$i$i$i$i35 = ((($53)) + 176|0);
     $$idx1$val$i$i$i$i$i$i$i36 = HEAP32[$$idx1$i$i$i$i$i$i$i35>>2]|0;
     $$idx1$val$val$i$i$i$i$i$i$i37 = HEAP32[$$idx1$val$i$i$i$i$i$i$i36>>2]|0;
     FUNCTION_TABLE_vi[$$idx1$val$val$i$i$i$i$i$i$i37 & 511]($63);
     $64 = HEAP32[$$idx1$i$i$i$i$i$i$i35>>2]|0;
     $65 = ((($64)) + 4|0);
     $66 = HEAP32[$65>>2]|0;
     $67 = ($66|0)==(0);
     if (!($67)) {
      _free($63);
     }
    }
    $$idx3$val$i$i40 = HEAP32[$52>>2]|0;
    $68 = ((($$idx3$val$i$i40)) + 4|0);
    $69 = HEAP32[$68>>2]|0;
    $70 = (($69) + -1)|0;
    HEAP32[$68>>2] = $70;
    $$idx2$val$i$i41 = HEAP32[$52>>2]|0;
    $71 = ((($$idx2$val$i$i41)) + 4|0);
    $72 = HEAP32[$71>>2]|0;
    $73 = ($72|0)==(0);
    if ($73) {
     _free($53);
    }
   }
  }
  $74 = ((($47)) + 28|0);
  $75 = HEAP32[$74>>2]|0;
  $switchtmp$i$i1$i$i$i$i$i5 = ($75|0)==(0|0);
  if (!($switchtmp$i$i1$i$i$i$i$i5)) {
   $76 = HEAP32[$75>>2]|0;
   $77 = (($76) + -1)|0;
   HEAP32[$75>>2] = $77;
   $$idx$val$i$i45 = HEAP32[$74>>2]|0;
   $78 = HEAP32[$$idx$val$i$i45>>2]|0;
   $79 = ($78|0)==(0);
   if ($79) {
    $80 = ((($75)) + 16|0);
    $81 = HEAP32[$80>>2]|0;
    $82 = HEAP32[$81>>2]|0;HEAP32[$81>>2] = (($82-1)|0);
    $83 = ($82|0)==(1);
    if ($83) {
     /* fence */;
     __ZN33__LT_alloc__arc__Arc_LT_T_GT__GT_9drop_slow17hb3767c2311d7d383E($80);
    }
    $84 = ((($75)) + 172|0);
    $85 = HEAP32[$84>>2]|0;
    $switchtmp$i$i$i$i$i$i48 = ($85|0)==(0|0);
    if (!($switchtmp$i$i$i$i$i$i48)) {
     $$idx1$i$i$i$i$i$i$i50 = ((($75)) + 176|0);
     $$idx1$val$i$i$i$i$i$i$i51 = HEAP32[$$idx1$i$i$i$i$i$i$i50>>2]|0;
     $$idx1$val$val$i$i$i$i$i$i$i52 = HEAP32[$$idx1$val$i$i$i$i$i$i$i51>>2]|0;
     FUNCTION_TABLE_vi[$$idx1$val$val$i$i$i$i$i$i$i52 & 511]($85);
     $86 = HEAP32[$$idx1$i$i$i$i$i$i$i50>>2]|0;
     $87 = ((($86)) + 4|0);
     $88 = HEAP32[$87>>2]|0;
     $89 = ($88|0)==(0);
     if (!($89)) {
      _free($85);
     }
    }
    $$idx3$val$i$i55 = HEAP32[$74>>2]|0;
    $90 = ((($$idx3$val$i$i55)) + 4|0);
    $91 = HEAP32[$90>>2]|0;
    $92 = (($91) + -1)|0;
    HEAP32[$90>>2] = $92;
    $$idx2$val$i$i56 = HEAP32[$74>>2]|0;
    $93 = ((($$idx2$val$i$i56)) + 4|0);
    $94 = HEAP32[$93>>2]|0;
    $95 = ($94|0)==(0);
    if ($95) {
     _free($75);
    }
   }
  }
  $$idx3$val$i$i7 = HEAP32[$46>>2]|0;
  $96 = ((($$idx3$val$i$i7)) + 4|0);
  $97 = HEAP32[$96>>2]|0;
  $98 = (($97) + -1)|0;
  HEAP32[$96>>2] = $98;
  $$idx2$val$i$i8 = HEAP32[$46>>2]|0;
  $99 = ((($$idx2$val$i$i8)) + 4|0);
  $100 = HEAP32[$99>>2]|0;
  $101 = ($100|0)==(0);
  if (!($101)) {
   return;
  }
  _free($47);
  return;
  break;
 }
 case 2:  {
  $102 = ((($0)) + 4|0);
  $103 = HEAP32[$102>>2]|0;
  $104 = HEAP32[$103>>2]|0;
  $105 = (($104) + -1)|0;
  HEAP32[$103>>2] = $105;
  $$idx$val$i$i = HEAP32[$102>>2]|0;
  $106 = HEAP32[$$idx$val$i$i>>2]|0;
  $107 = ($106|0)==(0);
  if (!($107)) {
   return;
  }
  $108 = ((($103)) + 16|0);
  $109 = HEAP32[$108>>2]|0;
  $switchtmp$i$i$i$i$i$i$i = ($109|0)==(0|0);
  if (!($switchtmp$i$i$i$i$i$i$i)) {
   $110 = HEAP32[$109>>2]|0;
   $111 = (($110) + -1)|0;
   HEAP32[$109>>2] = $111;
   $$idx$val$i$i60 = HEAP32[$108>>2]|0;
   $112 = HEAP32[$$idx$val$i$i60>>2]|0;
   $113 = ($112|0)==(0);
   if ($113) {
    $114 = ((($109)) + 16|0);
    $115 = HEAP32[$114>>2]|0;
    $116 = HEAP32[$115>>2]|0;HEAP32[$115>>2] = (($116-1)|0);
    $117 = ($116|0)==(1);
    if ($117) {
     /* fence */;
     __ZN33__LT_alloc__arc__Arc_LT_T_GT__GT_9drop_slow17hb3767c2311d7d383E($114);
    }
    $118 = ((($109)) + 172|0);
    $119 = HEAP32[$118>>2]|0;
    $switchtmp$i$i$i$i$i$i63 = ($119|0)==(0|0);
    if (!($switchtmp$i$i$i$i$i$i63)) {
     $$idx1$i$i$i$i$i$i$i65 = ((($109)) + 176|0);
     $$idx1$val$i$i$i$i$i$i$i66 = HEAP32[$$idx1$i$i$i$i$i$i$i65>>2]|0;
     $$idx1$val$val$i$i$i$i$i$i$i67 = HEAP32[$$idx1$val$i$i$i$i$i$i$i66>>2]|0;
     FUNCTION_TABLE_vi[$$idx1$val$val$i$i$i$i$i$i$i67 & 511]($119);
     $120 = HEAP32[$$idx1$i$i$i$i$i$i$i65>>2]|0;
     $121 = ((($120)) + 4|0);
     $122 = HEAP32[$121>>2]|0;
     $123 = ($122|0)==(0);
     if (!($123)) {
      _free($119);
     }
    }
    $$idx3$val$i$i70 = HEAP32[$108>>2]|0;
    $124 = ((($$idx3$val$i$i70)) + 4|0);
    $125 = HEAP32[$124>>2]|0;
    $126 = (($125) + -1)|0;
    HEAP32[$124>>2] = $126;
    $$idx2$val$i$i71 = HEAP32[$108>>2]|0;
    $127 = ((($$idx2$val$i$i71)) + 4|0);
    $128 = HEAP32[$127>>2]|0;
    $129 = ($128|0)==(0);
    if ($129) {
     _free($109);
    }
   }
  }
  $130 = ((($103)) + 44|0);
  $131 = HEAP32[$130>>2]|0;
  $switchtmp$i$i1$i$i$i$i$i = ($131|0)==(0|0);
  if (!($switchtmp$i$i1$i$i$i$i$i)) {
   $132 = HEAP32[$131>>2]|0;
   $133 = (($132) + -1)|0;
   HEAP32[$131>>2] = $133;
   $$idx$val$i$i75 = HEAP32[$130>>2]|0;
   $134 = HEAP32[$$idx$val$i$i75>>2]|0;
   $135 = ($134|0)==(0);
   if ($135) {
    $136 = ((($131)) + 16|0);
    $137 = HEAP32[$136>>2]|0;
    $138 = HEAP32[$137>>2]|0;HEAP32[$137>>2] = (($138-1)|0);
    $139 = ($138|0)==(1);
    if ($139) {
     /* fence */;
     __ZN33__LT_alloc__arc__Arc_LT_T_GT__GT_9drop_slow17hb3767c2311d7d383E($136);
    }
    $140 = ((($131)) + 172|0);
    $141 = HEAP32[$140>>2]|0;
    $switchtmp$i$i$i$i$i$i78 = ($141|0)==(0|0);
    if (!($switchtmp$i$i$i$i$i$i78)) {
     $$idx1$i$i$i$i$i$i$i80 = ((($131)) + 176|0);
     $$idx1$val$i$i$i$i$i$i$i81 = HEAP32[$$idx1$i$i$i$i$i$i$i80>>2]|0;
     $$idx1$val$val$i$i$i$i$i$i$i82 = HEAP32[$$idx1$val$i$i$i$i$i$i$i81>>2]|0;
     FUNCTION_TABLE_vi[$$idx1$val$val$i$i$i$i$i$i$i82 & 511]($141);
     $142 = HEAP32[$$idx1$i$i$i$i$i$i$i80>>2]|0;
     $143 = ((($142)) + 4|0);
     $144 = HEAP32[$143>>2]|0;
     $145 = ($144|0)==(0);
     if (!($145)) {
      _free($141);
     }
    }
    $$idx3$val$i$i85 = HEAP32[$130>>2]|0;
    $146 = ((($$idx3$val$i$i85)) + 4|0);
    $147 = HEAP32[$146>>2]|0;
    $148 = (($147) + -1)|0;
    HEAP32[$146>>2] = $148;
    $$idx2$val$i$i86 = HEAP32[$130>>2]|0;
    $149 = ((($$idx2$val$i$i86)) + 4|0);
    $150 = HEAP32[$149>>2]|0;
    $151 = ($150|0)==(0);
    if ($151) {
     _free($131);
    }
   }
  }
  $$idx3$val$i$i = HEAP32[$102>>2]|0;
  $152 = ((($$idx3$val$i$i)) + 4|0);
  $153 = HEAP32[$152>>2]|0;
  $154 = (($153) + -1)|0;
  HEAP32[$152>>2] = $154;
  $$idx2$val$i$i = HEAP32[$102>>2]|0;
  $155 = ((($$idx2$val$i$i)) + 4|0);
  $156 = HEAP32[$155>>2]|0;
  $157 = ($156|0)==(0);
  if (!($157)) {
   return;
  }
  _free($103);
  return;
  break;
 }
 default: {
  return;
 }
 }
}
function __ZN4drop17h5e5a688e2f4a74b7E($0) {
 $0 = $0|0;
 var $$idx$val$i$i = 0, $$idx$val$i$i1 = 0, $$idx1$i$i$i$i$i$i$i = 0, $$idx1$val$i$i$i$i$i$i$i = 0, $$idx1$val$val$i$i$i$i$i$i$i = 0, $$idx2$val$i$i = 0, $$idx3$val$i$i = 0, $$idx5$i$i = 0, $$idx5$val$i$i = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0;
 var $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0;
 var $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $not$$i$i$i$i$i = 0, $not$$i$i$i$i1$i = 0, $not$$i$i$i$i3$i = 0, $not$$i$i$i6$i$i = 0;
 var $switchtmp$i$i$i$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 8|0);
 $2 = HEAP32[$1>>2]|0;
 $not$$i$i$i$i$i = ($2|0)==(0);
 if (!($not$$i$i$i$i$i)) {
  $3 = ((($0)) + 4|0);
  $4 = HEAP32[$3>>2]|0;
  _free($4);
 }
 $5 = ((($0)) + 20|0);
 $6 = HEAP32[$5>>2]|0;
 $not$$i$i$i$i1$i = ($6|0)==(0);
 if (!($not$$i$i$i$i1$i)) {
  $7 = ((($0)) + 16|0);
  $8 = HEAP32[$7>>2]|0;
  _free($8);
 }
 $9 = ((($0)) + 28|0);
 $$idx$val$i$i = HEAP32[$9>>2]|0;
 $$idx5$i$i = ((($0)) + 36|0);
 $$idx5$val$i$i = HEAP32[$$idx5$i$i>>2]|0;
 $10 = (($$idx$val$i$i) + ($$idx5$val$i$i<<2)|0);
 $11 = ($$idx5$val$i$i|0)==(0);
 L7: do {
  if (!($11)) {
   $13 = $$idx$val$i$i;
   while(1) {
    $12 = HEAP32[$13>>2]|0;
    $14 = HEAP32[$12>>2]|0;
    $15 = (($14) + -1)|0;
    HEAP32[$12>>2] = $15;
    $$idx$val$i$i1 = HEAP32[$13>>2]|0;
    $16 = HEAP32[$$idx$val$i$i1>>2]|0;
    $17 = ($16|0)==(0);
    if ($17) {
     $18 = ((($12)) + 16|0);
     $19 = HEAP32[$18>>2]|0;
     $20 = HEAP32[$19>>2]|0;HEAP32[$19>>2] = (($20-1)|0);
     $21 = ($20|0)==(1);
     if ($21) {
      /* fence */;
      __THREW__ = 0;
      invoke_vi(241,($18|0));
      $22 = __THREW__; __THREW__ = 0;
      $23 = $22&1;
      if ($23) {
       break;
      }
     }
     $24 = ((($12)) + 172|0);
     $25 = HEAP32[$24>>2]|0;
     $switchtmp$i$i$i$i$i$i = ($25|0)==(0|0);
     if (!($switchtmp$i$i$i$i$i$i)) {
      $$idx1$i$i$i$i$i$i$i = ((($12)) + 176|0);
      $$idx1$val$i$i$i$i$i$i$i = HEAP32[$$idx1$i$i$i$i$i$i$i>>2]|0;
      $$idx1$val$val$i$i$i$i$i$i$i = HEAP32[$$idx1$val$i$i$i$i$i$i$i>>2]|0;
      __THREW__ = 0;
      invoke_vi($$idx1$val$val$i$i$i$i$i$i$i|0,($25|0));
      $26 = __THREW__; __THREW__ = 0;
      $27 = $26&1;
      if ($27) {
       break;
      }
      $28 = HEAP32[$$idx1$i$i$i$i$i$i$i>>2]|0;
      $29 = ((($28)) + 4|0);
      $30 = HEAP32[$29>>2]|0;
      $31 = ($30|0)==(0);
      if (!($31)) {
       _free($25);
      }
     }
     $$idx3$val$i$i = HEAP32[$13>>2]|0;
     $32 = ((($$idx3$val$i$i)) + 4|0);
     $33 = HEAP32[$32>>2]|0;
     $34 = (($33) + -1)|0;
     HEAP32[$32>>2] = $34;
     $$idx2$val$i$i = HEAP32[$13>>2]|0;
     $35 = ((($$idx2$val$i$i)) + 4|0);
     $36 = HEAP32[$35>>2]|0;
     $37 = ($36|0)==(0);
     if ($37) {
      _free($12);
     }
    }
    $38 = ((($13)) + 4|0);
    $39 = ($38|0)==($10|0);
    if ($39) {
     break L7;
    } else {
     $13 = $38;
    }
   }
   $43 = ___cxa_find_matching_catch_2()|0;
   $44 = tempRet0;
   $45 = ((($0)) + 32|0);
   $46 = HEAP32[$45>>2]|0;
   $not$$i$i$i6$i$i = ($46|0)==(0);
   if ($not$$i$i$i6$i$i) {
    ___resumeException($43|0);
    // unreachable;
   }
   $47 = HEAP32[$9>>2]|0;
   _free($47);
   ___resumeException($43|0);
   // unreachable;
  }
 } while(0);
 $40 = ((($0)) + 32|0);
 $41 = HEAP32[$40>>2]|0;
 $not$$i$i$i$i3$i = ($41|0)==(0);
 if ($not$$i$i$i$i3$i) {
  return;
 }
 $42 = HEAP32[$9>>2]|0;
 _free($42);
 return;
}
function __ZN4drop17h6a836c9a94be8fafE($0) {
 $0 = $0|0;
 var $$idx$val$i = 0, $$idx1$i$i$i$i$i = 0, $$idx1$val$i$i$i$i$i = 0, $$idx1$val$val$i$i$i$i$i = 0, $$idx5$i = 0, $$idx5$val$i = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $not$$i$i$i$i = 0, $not$$i$i$i$i$i$i$i$i$i = 0, $not$$i$i$i6$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $$idx$val$i = HEAP32[$0>>2]|0;
 $$idx5$i = ((($0)) + 8|0);
 $$idx5$val$i = HEAP32[$$idx5$i>>2]|0;
 $1 = (($$idx$val$i) + (($$idx5$val$i*20)|0)|0);
 $2 = ($$idx5$val$i|0)==(0);
 L1: do {
  if (!($2)) {
   $4 = $$idx$val$i;
   while(1) {
    $3 = ((($4)) + 4|0);
    $5 = HEAP32[$3>>2]|0;
    $not$$i$i$i$i$i$i$i$i$i = ($5|0)==(0);
    if (!($not$$i$i$i$i$i$i$i$i$i)) {
     $6 = HEAP32[$4>>2]|0;
     _free($6);
    }
    $7 = ((($4)) + 12|0);
    $8 = HEAP32[$7>>2]|0;
    $$idx1$i$i$i$i$i = ((($4)) + 16|0);
    $$idx1$val$i$i$i$i$i = HEAP32[$$idx1$i$i$i$i$i>>2]|0;
    $$idx1$val$val$i$i$i$i$i = HEAP32[$$idx1$val$i$i$i$i$i>>2]|0;
    __THREW__ = 0;
    invoke_vi($$idx1$val$val$i$i$i$i$i|0,($8|0));
    $9 = __THREW__; __THREW__ = 0;
    $10 = $9&1;
    if ($10) {
     break;
    }
    $11 = HEAP32[$$idx1$i$i$i$i$i>>2]|0;
    $12 = ((($11)) + 4|0);
    $13 = HEAP32[$12>>2]|0;
    $14 = ($13|0)==(0);
    if (!($14)) {
     _free($8);
    }
    $15 = ((($4)) + 20|0);
    $16 = ($15|0)==($1|0);
    if ($16) {
     break L1;
    } else {
     $4 = $15;
    }
   }
   $20 = ___cxa_find_matching_catch_2()|0;
   $21 = tempRet0;
   $22 = ((($0)) + 4|0);
   $23 = HEAP32[$22>>2]|0;
   $not$$i$i$i6$i = ($23|0)==(0);
   if ($not$$i$i$i6$i) {
    ___resumeException($20|0);
    // unreachable;
   }
   $24 = HEAP32[$0>>2]|0;
   _free($24);
   ___resumeException($20|0);
   // unreachable;
  }
 } while(0);
 $17 = ((($0)) + 4|0);
 $18 = HEAP32[$17>>2]|0;
 $not$$i$i$i$i = ($18|0)==(0);
 if ($not$$i$i$i$i) {
  return;
 }
 $19 = HEAP32[$0>>2]|0;
 _free($19);
 return;
}
function __ZN4drop17h6dacdfb36df3e41cE($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $not$$i$i$i$i$i = 0, $not$$i$i$i$i1$i = 0, $not$$i$i$i$i4$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[$0>>2]|0;
 $2 = HEAP32[$1>>2]|0;HEAP32[$1>>2] = (($2-1)|0);
 $3 = ($2|0)==(1);
 if ($3) {
  /* fence */;
  __ZN33__LT_alloc__arc__Arc_LT_T_GT__GT_9drop_slow17h639b296ab3838c06E($0);
 }
 $4 = ((($0)) + 8|0);
 $5 = HEAP32[$4>>2]|0;
 $not$$i$i$i$i$i = ($5|0)==(0);
 if (!($not$$i$i$i$i$i)) {
  $6 = ((($0)) + 4|0);
  $7 = HEAP32[$6>>2]|0;
  _free($7);
 }
 $8 = ((($0)) + 20|0);
 $9 = HEAP32[$8>>2]|0;
 $not$$i$i$i$i1$i = ($9|0)==(0);
 if (!($not$$i$i$i$i1$i)) {
  $10 = ((($0)) + 16|0);
  $11 = HEAP32[$10>>2]|0;
  _free($11);
 }
 $12 = ((($0)) + 32|0);
 $13 = HEAP32[$12>>2]|0;
 $not$$i$i$i$i4$i = ($13|0)==(0);
 if ($not$$i$i$i$i4$i) {
  return;
 }
 $14 = ((($0)) + 28|0);
 $15 = HEAP32[$14>>2]|0;
 _free($15);
 return;
}
function __ZN4drop17h7a054f0c0ce2a476E($0) {
 $0 = $0|0;
 var $$idx$val$i$i = 0, $$idx1$i$i$i$i$i$i = 0, $$idx1$val$i$i$i$i$i$i = 0, $$idx1$val$val$i$i$i$i$i$i = 0, $$idx5$i$i = 0, $$idx5$val$i$i = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, $not$$i$i$i$i = 0, $not$$i$i$i$i$i = 0, $not$$i$i$i$i1 = 0, $not$$i$i$i$i1$i = 0, $not$$i$i$i$i4$i = 0, $not$$i$i$i6$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 8|0);
 $$idx$val$i$i = HEAP32[$1>>2]|0;
 $$idx5$i$i = ((($0)) + 16|0);
 $$idx5$val$i$i = HEAP32[$$idx5$i$i>>2]|0;
 $2 = (($$idx$val$i$i) + (($$idx5$val$i$i*12)|0)|0);
 $3 = ($$idx5$val$i$i|0)==(0);
 L1: do {
  if (!($3)) {
   $5 = $$idx$val$i$i;
   while(1) {
    $4 = ((($5)) + 4|0);
    $6 = HEAP32[$4>>2]|0;
    $$idx1$i$i$i$i$i$i = ((($5)) + 8|0);
    $$idx1$val$i$i$i$i$i$i = HEAP32[$$idx1$i$i$i$i$i$i>>2]|0;
    $$idx1$val$val$i$i$i$i$i$i = HEAP32[$$idx1$val$i$i$i$i$i$i>>2]|0;
    __THREW__ = 0;
    invoke_vi($$idx1$val$val$i$i$i$i$i$i|0,($6|0));
    $7 = __THREW__; __THREW__ = 0;
    $8 = $7&1;
    if ($8) {
     break;
    }
    $9 = HEAP32[$$idx1$i$i$i$i$i$i>>2]|0;
    $10 = ((($9)) + 4|0);
    $11 = HEAP32[$10>>2]|0;
    $12 = ($11|0)==(0);
    if (!($12)) {
     _free($6);
    }
    $13 = ((($5)) + 12|0);
    $14 = ($13|0)==($2|0);
    if ($14) {
     break L1;
    } else {
     $5 = $13;
    }
   }
   $18 = ___cxa_find_matching_catch_2()|0;
   $19 = tempRet0;
   $20 = ((($0)) + 12|0);
   $21 = HEAP32[$20>>2]|0;
   $not$$i$i$i6$i$i = ($21|0)==(0);
   if ($not$$i$i$i6$i$i) {
    ___resumeException($18|0);
    // unreachable;
   }
   $22 = HEAP32[$1>>2]|0;
   _free($22);
   ___resumeException($18|0);
   // unreachable;
  }
 } while(0);
 $15 = ((($0)) + 12|0);
 $16 = HEAP32[$15>>2]|0;
 $not$$i$i$i$i$i = ($16|0)==(0);
 if (!($not$$i$i$i$i$i)) {
  $17 = HEAP32[$1>>2]|0;
  _free($17);
 }
 $23 = ((($0)) + 28|0);
 $24 = HEAP32[$23>>2]|0;
 $not$$i$i$i$i1$i = ($24|0)==(0);
 if (!($not$$i$i$i$i1$i)) {
  $25 = ((($0)) + 24|0);
  $26 = HEAP32[$25>>2]|0;
  _free($26);
 }
 $27 = ((($0)) + 40|0);
 $28 = HEAP32[$27>>2]|0;
 $not$$i$i$i$i4$i = ($28|0)==(0);
 if (!($not$$i$i$i$i4$i)) {
  $29 = ((($0)) + 36|0);
  $30 = HEAP32[$29>>2]|0;
  _free($30);
 }
 $31 = ((($0)) + 64|0);
 $32 = HEAP32[$31>>2]|0;
 $not$$i$i$i$i = ($32|0)==(0);
 if (!($not$$i$i$i$i)) {
  $33 = ((($0)) + 60|0);
  $34 = HEAP32[$33>>2]|0;
  _free($34);
 }
 $35 = ((($0)) + 76|0);
 $36 = HEAP32[$35>>2]|0;
 $not$$i$i$i$i1 = ($36|0)==(0);
 if ($not$$i$i$i$i1) {
  return;
 }
 $37 = ((($0)) + 72|0);
 $38 = HEAP32[$37>>2]|0;
 _free($38);
 return;
}
function __ZN4drop17h7ae47e2d424ed70bE($0) {
 $0 = $0|0;
 var $$idx$val$i = 0, $$idx$val$i11 = 0, $$idx1$i = 0, $$idx1$i$i$i$i$i = 0, $$idx1$i$i$i$i$i15 = 0, $$idx1$i1 = 0, $$idx1$val$i = 0, $$idx1$val$i$i$i$i$i = 0, $$idx1$val$i$i$i$i$i16 = 0, $$idx1$val$i2 = 0, $$idx1$val$val$i = 0, $$idx1$val$val$i$i$i$i$i = 0, $$idx1$val$val$i$i$i$i$i17 = 0, $$idx1$val$val$i3 = 0, $$idx5$i = 0, $$idx5$i12 = 0, $$idx5$val$i = 0, $$idx5$val$i13 = 0, $1 = 0, $10 = 0;
 var $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0;
 var $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $8 = 0, $9 = 0, $not$$i$i$i$i = 0, $not$$i$i$i$i$i = 0, $not$$i$i$i$i$i5 = 0, $not$$i$i$i$i1$i = 0, $not$$i$i$i$i1$i7 = 0, $not$$i$i$i$i22 = 0, $not$$i$i$i6$i = 0, $not$$i$i$i6$i25 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[$0>>2]|0;
 $$idx1$i = ((($0)) + 4|0);
 $$idx1$val$i = HEAP32[$$idx1$i>>2]|0;
 $$idx1$val$val$i = HEAP32[$$idx1$val$i>>2]|0;
 FUNCTION_TABLE_vi[$$idx1$val$val$i & 511]($1);
 $2 = HEAP32[$$idx1$i>>2]|0;
 $3 = ((($2)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ($4|0)==(0);
 if (!($5)) {
  _free($1);
 }
 $6 = ((($0)) + 12|0);
 $$idx$val$i = HEAP32[$6>>2]|0;
 $$idx5$i = ((($0)) + 20|0);
 $$idx5$val$i = HEAP32[$$idx5$i>>2]|0;
 $7 = (($$idx$val$i) + (($$idx5$val$i*24)|0)|0);
 $8 = ($$idx5$val$i|0)==(0);
 L4: do {
  if (!($8)) {
   $10 = $$idx$val$i;
   while(1) {
    $9 = ((($10)) + 16|0);
    $11 = HEAP32[$9>>2]|0;
    $$idx1$i$i$i$i$i = ((($10)) + 20|0);
    $$idx1$val$i$i$i$i$i = HEAP32[$$idx1$i$i$i$i$i>>2]|0;
    $$idx1$val$val$i$i$i$i$i = HEAP32[$$idx1$val$i$i$i$i$i>>2]|0;
    __THREW__ = 0;
    invoke_vi($$idx1$val$val$i$i$i$i$i|0,($11|0));
    $12 = __THREW__; __THREW__ = 0;
    $13 = $12&1;
    if ($13) {
     break;
    }
    $14 = HEAP32[$$idx1$i$i$i$i$i>>2]|0;
    $15 = ((($14)) + 4|0);
    $16 = HEAP32[$15>>2]|0;
    $17 = ($16|0)==(0);
    if (!($17)) {
     _free($11);
    }
    $18 = ((($10)) + 24|0);
    $19 = ($18|0)==($7|0);
    if ($19) {
     break L4;
    } else {
     $10 = $18;
    }
   }
   $23 = ___cxa_find_matching_catch_2()|0;
   $24 = tempRet0;
   $25 = ((($0)) + 16|0);
   $26 = HEAP32[$25>>2]|0;
   $not$$i$i$i6$i = ($26|0)==(0);
   if ($not$$i$i$i6$i) {
    ___resumeException($23|0);
    // unreachable;
   }
   $27 = HEAP32[$6>>2]|0;
   _free($27);
   ___resumeException($23|0);
   // unreachable;
  }
 } while(0);
 $20 = ((($0)) + 16|0);
 $21 = HEAP32[$20>>2]|0;
 $not$$i$i$i$i = ($21|0)==(0);
 if (!($not$$i$i$i$i)) {
  $22 = HEAP32[$6>>2]|0;
  _free($22);
 }
 $28 = ((($0)) + 32|0);
 $29 = HEAP32[$28>>2]|0;
 $not$$i$i$i$i$i = ($29|0)==(0);
 if (!($not$$i$i$i$i$i)) {
  $30 = ((($0)) + 28|0);
  $31 = HEAP32[$30>>2]|0;
  _free($31);
 }
 $32 = ((($0)) + 44|0);
 $33 = HEAP32[$32>>2]|0;
 $not$$i$i$i$i1$i = ($33|0)==(0);
 if (!($not$$i$i$i$i1$i)) {
  $34 = ((($0)) + 40|0);
  $35 = HEAP32[$34>>2]|0;
  _free($35);
 }
 $36 = ((($0)) + 64|0);
 $37 = HEAP32[$36>>2]|0;
 $$idx1$i1 = ((($0)) + 68|0);
 $$idx1$val$i2 = HEAP32[$$idx1$i1>>2]|0;
 $$idx1$val$val$i3 = HEAP32[$$idx1$val$i2>>2]|0;
 FUNCTION_TABLE_vi[$$idx1$val$val$i3 & 511]($37);
 $38 = HEAP32[$$idx1$i1>>2]|0;
 $39 = ((($38)) + 4|0);
 $40 = HEAP32[$39>>2]|0;
 $41 = ($40|0)==(0);
 if (!($41)) {
  _free($37);
 }
 $42 = ((($0)) + 76|0);
 $$idx$val$i11 = HEAP32[$42>>2]|0;
 $$idx5$i12 = ((($0)) + 84|0);
 $$idx5$val$i13 = HEAP32[$$idx5$i12>>2]|0;
 $43 = (($$idx$val$i11) + (($$idx5$val$i13*24)|0)|0);
 $44 = ($$idx5$val$i13|0)==(0);
 L29: do {
  if (!($44)) {
   $46 = $$idx$val$i11;
   while(1) {
    $45 = ((($46)) + 16|0);
    $47 = HEAP32[$45>>2]|0;
    $$idx1$i$i$i$i$i15 = ((($46)) + 20|0);
    $$idx1$val$i$i$i$i$i16 = HEAP32[$$idx1$i$i$i$i$i15>>2]|0;
    $$idx1$val$val$i$i$i$i$i17 = HEAP32[$$idx1$val$i$i$i$i$i16>>2]|0;
    __THREW__ = 0;
    invoke_vi($$idx1$val$val$i$i$i$i$i17|0,($47|0));
    $48 = __THREW__; __THREW__ = 0;
    $49 = $48&1;
    if ($49) {
     break;
    }
    $50 = HEAP32[$$idx1$i$i$i$i$i15>>2]|0;
    $51 = ((($50)) + 4|0);
    $52 = HEAP32[$51>>2]|0;
    $53 = ($52|0)==(0);
    if (!($53)) {
     _free($47);
    }
    $54 = ((($46)) + 24|0);
    $55 = ($54|0)==($43|0);
    if ($55) {
     break L29;
    } else {
     $46 = $54;
    }
   }
   $59 = ___cxa_find_matching_catch_2()|0;
   $60 = tempRet0;
   $61 = ((($0)) + 80|0);
   $62 = HEAP32[$61>>2]|0;
   $not$$i$i$i6$i25 = ($62|0)==(0);
   if ($not$$i$i$i6$i25) {
    ___resumeException($59|0);
    // unreachable;
   }
   $63 = HEAP32[$42>>2]|0;
   _free($63);
   ___resumeException($59|0);
   // unreachable;
  }
 } while(0);
 $56 = ((($0)) + 80|0);
 $57 = HEAP32[$56>>2]|0;
 $not$$i$i$i$i22 = ($57|0)==(0);
 if (!($not$$i$i$i$i22)) {
  $58 = HEAP32[$42>>2]|0;
  _free($58);
 }
 $64 = ((($0)) + 96|0);
 $65 = HEAP32[$64>>2]|0;
 $not$$i$i$i$i$i5 = ($65|0)==(0);
 if (!($not$$i$i$i$i$i5)) {
  $66 = ((($0)) + 92|0);
  $67 = HEAP32[$66>>2]|0;
  _free($67);
 }
 $68 = ((($0)) + 108|0);
 $69 = HEAP32[$68>>2]|0;
 $not$$i$i$i$i1$i7 = ($69|0)==(0);
 if ($not$$i$i$i$i1$i7) {
  return;
 }
 $70 = ((($0)) + 104|0);
 $71 = HEAP32[$70>>2]|0;
 _free($71);
 return;
}
function __ZN4drop17h7b660c5166a4b0b3E($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $not$$i$i$i$i = 0, $not$$i$i$i$i$i = 0, $not$$i$i$i$i1 = 0, $not$$i$i$i$i4 = 0, $not$$i$i$i$i4$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 24|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)==(0);
 if (!($3)) {
  $4 = ((($0)) + 32|0);
  $5 = HEAP32[$4>>2]|0;
  _free($5);
 }
 $6 = ((($0)) + 40|0);
 $7 = HEAP32[$6>>2]|0;
 $not$$i$i$i$i$i = ($7|0)==(0);
 if (!($not$$i$i$i$i$i)) {
  $8 = ((($0)) + 36|0);
  $9 = HEAP32[$8>>2]|0;
  _free($9);
 }
 $10 = ((($0)) + 48|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = ($11|0)==(0);
 if (!($12)) {
  $13 = ((($0)) + 56|0);
  $14 = HEAP32[$13>>2]|0;
  _free($14);
 }
 $15 = ((($0)) + 64|0);
 $16 = HEAP32[$15>>2]|0;
 $not$$i$i$i$i4$i = ($16|0)==(0);
 if (!($not$$i$i$i$i4$i)) {
  $17 = ((($0)) + 60|0);
  $18 = HEAP32[$17>>2]|0;
  _free($18);
 }
 $19 = ((($0)) + 92|0);
 $20 = HEAP32[$19>>2]|0;
 $not$$i$i$i$i = ($20|0)==(0);
 if (!($not$$i$i$i$i)) {
  $21 = ((($0)) + 88|0);
  $22 = HEAP32[$21>>2]|0;
  _free($22);
 }
 $23 = ((($0)) + 104|0);
 $24 = HEAP32[$23>>2]|0;
 $not$$i$i$i$i1 = ($24|0)==(0);
 if (!($not$$i$i$i$i1)) {
  $25 = ((($0)) + 100|0);
  $26 = HEAP32[$25>>2]|0;
  _free($26);
 }
 $27 = ((($0)) + 116|0);
 $28 = HEAP32[$27>>2]|0;
 $not$$i$i$i$i4 = ($28|0)==(0);
 if ($not$$i$i$i$i4) {
  return;
 }
 $29 = ((($0)) + 112|0);
 $30 = HEAP32[$29>>2]|0;
 _free($30);
 return;
}
function __ZN4drop17h7f80dfa911830ae4E($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $not$$i$i$i$i$i = 0, $not$$i$i$i$i1$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 4|0);
 $2 = HEAP32[$1>>2]|0;
 $not$$i$i$i$i$i = ($2|0)==(0);
 if (!($not$$i$i$i$i$i)) {
  $3 = HEAP32[$0>>2]|0;
  _free($3);
 }
 $4 = ((($0)) + 16|0);
 $5 = HEAP32[$4>>2]|0;
 $not$$i$i$i$i1$i = ($5|0)==(0);
 if ($not$$i$i$i$i1$i) {
  return;
 }
 $6 = ((($0)) + 12|0);
 $7 = HEAP32[$6>>2]|0;
 _free($7);
 return;
}
function __ZN4drop17h8e8e44eece6d63d5E($0) {
 $0 = $0|0;
 var $$idx$val$i$i = 0, $$idx$val$i$i$i$i$i$i = 0, $$idx1$i$i$i$i$i$i = 0, $$idx1$val$i$i$i$i$i$i = 0, $$idx1$val$val$i$i$i$i$i$i = 0, $$idx2$val$i$i = 0, $$idx3$val$i$i = 0, $$idx5$i$i$i$i$i$i = 0, $$idx5$val$i$i$i$i$i$i = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0;
 var $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $not$$i$i$i$i$i$i$i$i$i = 0, $not$$i$i$i$i$i$i$i$i$i$i$i$i = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[$0>>2]|0;
 $2 = HEAP32[$1>>2]|0;
 $3 = (($2) + -1)|0;
 HEAP32[$1>>2] = $3;
 $$idx$val$i$i = HEAP32[$0>>2]|0;
 $4 = HEAP32[$$idx$val$i$i>>2]|0;
 $5 = ($4|0)==(0);
 if (!($5)) {
  return;
 }
 $6 = ((($1)) + 12|0);
 $$idx$val$i$i$i$i$i$i = HEAP32[$6>>2]|0;
 $$idx5$i$i$i$i$i$i = ((($1)) + 20|0);
 $$idx5$val$i$i$i$i$i$i = HEAP32[$$idx5$i$i$i$i$i$i>>2]|0;
 $7 = (($$idx$val$i$i$i$i$i$i) + (($$idx5$val$i$i$i$i$i$i*12)|0)|0);
 $8 = ($$idx5$val$i$i$i$i$i$i|0)==(0);
 if (!($8)) {
  $10 = $$idx$val$i$i$i$i$i$i;
  while(1) {
   $9 = ((($10)) + 4|0);
   $11 = HEAP32[$9>>2]|0;
   $not$$i$i$i$i$i$i$i$i$i$i$i$i = ($11|0)==(0);
   if (!($not$$i$i$i$i$i$i$i$i$i$i$i$i)) {
    $12 = HEAP32[$10>>2]|0;
    _free($12);
   }
   $13 = ((($10)) + 12|0);
   $14 = ($13|0)==($7|0);
   if ($14) {
    break;
   } else {
    $10 = $13;
   }
  }
 }
 $15 = ((($1)) + 16|0);
 $16 = HEAP32[$15>>2]|0;
 $not$$i$i$i$i$i$i$i$i$i = ($16|0)==(0);
 if (!($not$$i$i$i$i$i$i$i$i$i)) {
  $17 = HEAP32[$6>>2]|0;
  _free($17);
 }
 $18 = ((($1)) + 28|0);
 $19 = HEAP32[$18>>2]|0;
 $$idx1$i$i$i$i$i$i = ((($1)) + 32|0);
 $$idx1$val$i$i$i$i$i$i = HEAP32[$$idx1$i$i$i$i$i$i>>2]|0;
 $$idx1$val$val$i$i$i$i$i$i = HEAP32[$$idx1$val$i$i$i$i$i$i>>2]|0;
 FUNCTION_TABLE_vi[$$idx1$val$val$i$i$i$i$i$i & 511]($19);
 $20 = HEAP32[$$idx1$i$i$i$i$i$i>>2]|0;
 $21 = ((($20)) + 4|0);
 $22 = HEAP32[$21>>2]|0;
 $23 = ($22|0)==(0);
 if (!($23)) {
  _free($19);
 }
 $$idx3$val$i$i = HEAP32[$0>>2]|0;
 $24 = ((($$idx3$val$i$i)) + 4|0);
 $25 = HEAP32[$24>>2]|0;
 $26 = (($25) + -1)|0;
 HEAP32[$24>>2] = $26;
 $$idx2$val$i$i = HEAP32[$0>>2]|0;
 $27 = ((($$idx2$val$i$i)) + 4|0);
 $28 = HEAP32[$27>>2]|0;
 $29 = ($28|0)==(0);
 if (!($29)) {
  return;
 }
 _free($1);
 return;
}
function __ZN4drop17h95af9e8f1e83bb49E($0) {
 $0 = $0|0;
 var $$idx$val$i$i = 0, $$idx$val$i$i$i$i$i = 0, $$idx1$i$i$i$i$i$i$i$i = 0, $$idx1$val$i$i$i$i$i$i$i$i = 0, $$idx1$val$val$i$i$i$i$i$i$i$i = 0, $$idx2$val$i$i = 0, $$idx3$val$i$i = 0, $$idx5$i$i$i$i$i = 0, $$idx5$val$i$i$i$i$i = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0;
 var $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, $not$$i$i$i$i$i$i$i$i = 0, $not$$i$i$i6$i$i$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[$0>>2]|0;
 $2 = HEAP32[$1>>2]|0;
 $3 = (($2) + -1)|0;
 HEAP32[$1>>2] = $3;
 $$idx$val$i$i = HEAP32[$0>>2]|0;
 $4 = HEAP32[$$idx$val$i$i>>2]|0;
 $5 = ($4|0)==(0);
 if (!($5)) {
  return;
 }
 $6 = ((($1)) + 12|0);
 $$idx$val$i$i$i$i$i = HEAP32[$6>>2]|0;
 $$idx5$i$i$i$i$i = ((($1)) + 20|0);
 $$idx5$val$i$i$i$i$i = HEAP32[$$idx5$i$i$i$i$i>>2]|0;
 $7 = (($$idx$val$i$i$i$i$i) + ($$idx5$val$i$i$i$i$i<<3)|0);
 $8 = ($$idx5$val$i$i$i$i$i|0)==(0);
 L4: do {
  if (!($8)) {
   $10 = $$idx$val$i$i$i$i$i;
   while(1) {
    $9 = HEAP32[$10>>2]|0;
    $$idx1$i$i$i$i$i$i$i$i = ((($10)) + 4|0);
    $$idx1$val$i$i$i$i$i$i$i$i = HEAP32[$$idx1$i$i$i$i$i$i$i$i>>2]|0;
    $$idx1$val$val$i$i$i$i$i$i$i$i = HEAP32[$$idx1$val$i$i$i$i$i$i$i$i>>2]|0;
    __THREW__ = 0;
    invoke_vi($$idx1$val$val$i$i$i$i$i$i$i$i|0,($9|0));
    $11 = __THREW__; __THREW__ = 0;
    $12 = $11&1;
    if ($12) {
     break;
    }
    $13 = HEAP32[$$idx1$i$i$i$i$i$i$i$i>>2]|0;
    $14 = ((($13)) + 4|0);
    $15 = HEAP32[$14>>2]|0;
    $16 = ($15|0)==(0);
    if (!($16)) {
     _free($9);
    }
    $17 = ((($10)) + 8|0);
    $18 = ($17|0)==($7|0);
    if ($18) {
     break L4;
    } else {
     $10 = $17;
    }
   }
   $22 = ___cxa_find_matching_catch_2()|0;
   $23 = tempRet0;
   $24 = ((($1)) + 16|0);
   $25 = HEAP32[$24>>2]|0;
   $not$$i$i$i6$i$i$i$i$i = ($25|0)==(0);
   if ($not$$i$i$i6$i$i$i$i$i) {
    ___resumeException($22|0);
    // unreachable;
   }
   $26 = HEAP32[$6>>2]|0;
   _free($26);
   ___resumeException($22|0);
   // unreachable;
  }
 } while(0);
 $19 = ((($1)) + 16|0);
 $20 = HEAP32[$19>>2]|0;
 $not$$i$i$i$i$i$i$i$i = ($20|0)==(0);
 if (!($not$$i$i$i$i$i$i$i$i)) {
  $21 = HEAP32[$6>>2]|0;
  _free($21);
 }
 $$idx3$val$i$i = HEAP32[$0>>2]|0;
 $27 = ((($$idx3$val$i$i)) + 4|0);
 $28 = HEAP32[$27>>2]|0;
 $29 = (($28) + -1)|0;
 HEAP32[$27>>2] = $29;
 $$idx2$val$i$i = HEAP32[$0>>2]|0;
 $30 = ((($$idx2$val$i$i)) + 4|0);
 $31 = HEAP32[$30>>2]|0;
 $32 = ($31|0)==(0);
 if (!($32)) {
  return;
 }
 _free($1);
 return;
}
function __ZN4drop17h9f42eedb81b88214E($0) {
 $0 = $0|0;
 var $$idx$val$i$i = 0, $$idx2$val$i$i = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[$0>>2]|0;
 switch ($1|0) {
 case 0:  {
  $2 = ((($0)) + 4|0);
  $3 = HEAP32[$2>>2]|0;
  $4 = ((($3)) + 24|0);
  __ZN4drop17h9f42eedb81b88214E($4);
  $5 = ((($3)) + 32|0);
  __ZN4drop17h9f42eedb81b88214E($5);
  _free($3);
  return;
  break;
 }
 case 1:  {
  $6 = ((($0)) + 4|0);
  $7 = HEAP32[$6>>2]|0;
  $8 = HEAP32[$7>>2]|0;
  $9 = (($8) + -1)|0;
  HEAP32[$7>>2] = $9;
  $$idx$val$i$i = HEAP32[$6>>2]|0;
  $10 = HEAP32[$$idx$val$i$i>>2]|0;
  $11 = ($10|0)==(0);
  if (!($11)) {
   return;
  }
  $12 = ((($$idx$val$i$i)) + 4|0);
  $13 = HEAP32[$12>>2]|0;
  $14 = (($13) + -1)|0;
  HEAP32[$12>>2] = $14;
  $$idx2$val$i$i = HEAP32[$6>>2]|0;
  $15 = ((($$idx2$val$i$i)) + 4|0);
  $16 = HEAP32[$15>>2]|0;
  $17 = ($16|0)==(0);
  if (!($17)) {
   return;
  }
  _free($7);
  return;
  break;
 }
 default: {
  return;
 }
 }
}
function __ZN4drop17ha4e743f99a9d3e06E($0) {
 $0 = $0|0;
 var $$idx$val$i$i$i = 0, $$idx$val$i$i$i$i$i$i$i$i$i = 0, $$idx$val$i$i$i10 = 0, $$idx$val$i$i$i2 = 0, $$idx2$val$i$i$i$i$i$i$i$i$i = 0, $$idx5$i$i$i = 0, $$idx5$i$i$i11 = 0, $$idx5$i$i$i3 = 0, $$idx5$val$i$i$i = 0, $$idx5$val$i$i$i12 = 0, $$idx5$val$i$i$i4 = 0, $$val$i$i$i$i$i = 0, $$val$i$i$i$i$i13 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0;
 var $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0;
 var $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0;
 var $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0;
 var $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0;
 var $89 = 0, $9 = 0, $cond$i$i = 0, $cond$i$i18 = 0, $not$$i$i$i$i = 0, $not$$i$i$i$i$i = 0, $not$$i$i$i$i$i$i = 0, $not$$i$i$i$i$i$i15 = 0, $not$$i$i$i$i$i$i30 = 0, $not$$i$i$i$i$i$i6 = 0, $not$$i$i$i$i1$i = 0, $not$$i$i$i$i22 = 0, $not$$i$i$i$i24 = 0, $not$$i$i$i$i26 = 0, $not$$i$i$i$i28 = 0, $not$$i$i$i$i3$i = 0, $switchtmp$i = 0, $switchtmp$i$i$i$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $$idx$val$i$i$i = HEAP32[$0>>2]|0;
 $$idx5$i$i$i = ((($0)) + 8|0);
 $$idx5$val$i$i$i = HEAP32[$$idx5$i$i$i>>2]|0;
 $1 = (($$idx$val$i$i$i) + (($$idx5$val$i$i$i*12)|0)|0);
 $2 = ($$idx5$val$i$i$i|0)==(0);
 if (!($2)) {
  $4 = $$idx$val$i$i$i;
  while(1) {
   $3 = ((($4)) + 4|0);
   $5 = HEAP32[$3>>2]|0;
   $switchtmp$i$i$i$i$i$i = ($5|0)==(0|0);
   if (!($switchtmp$i$i$i$i$i$i)) {
    $6 = HEAP32[$5>>2]|0;
    $7 = (($6) + -1)|0;
    HEAP32[$5>>2] = $7;
    $$idx$val$i$i$i$i$i$i$i$i$i = HEAP32[$3>>2]|0;
    $8 = HEAP32[$$idx$val$i$i$i$i$i$i$i$i$i>>2]|0;
    $9 = ($8|0)==(0);
    if ($9) {
     $10 = ((($$idx$val$i$i$i$i$i$i$i$i$i)) + 4|0);
     $11 = HEAP32[$10>>2]|0;
     $12 = (($11) + -1)|0;
     HEAP32[$10>>2] = $12;
     $$idx2$val$i$i$i$i$i$i$i$i$i = HEAP32[$3>>2]|0;
     $13 = ((($$idx2$val$i$i$i$i$i$i$i$i$i)) + 4|0);
     $14 = HEAP32[$13>>2]|0;
     $15 = ($14|0)==(0);
     if ($15) {
      _free($5);
     }
    }
   }
   $16 = ((($4)) + 12|0);
   $17 = ($16|0)==($1|0);
   if ($17) {
    break;
   } else {
    $4 = $16;
   }
  }
 }
 $18 = ((($0)) + 4|0);
 $19 = HEAP32[$18>>2]|0;
 $not$$i$i$i$i$i$i = ($19|0)==(0);
 if (!($not$$i$i$i$i$i$i)) {
  $20 = HEAP32[$0>>2]|0;
  _free($20);
 }
 $21 = ((($0)) + 40|0);
 $22 = HEAP32[$21>>2]|0;
 $switchtmp$i = ($22|0)==(0|0);
 if (!($switchtmp$i)) {
  $23 = ((($0)) + 32|0);
  $24 = HEAP32[$23>>2]|0;
  $25 = ($24|0)==(0);
  if (!($25)) {
   _free($22);
  }
  $26 = ((($0)) + 52|0);
  $27 = HEAP32[$26>>2]|0;
  $not$$i$i$i$i$i$i30 = ($27|0)==(0);
  if (!($not$$i$i$i$i$i$i30)) {
   $28 = ((($0)) + 48|0);
   $29 = HEAP32[$28>>2]|0;
   _free($29);
  }
 }
 $30 = ((($0)) + 64|0);
 $$idx$val$i$i$i2 = HEAP32[$30>>2]|0;
 $$idx5$i$i$i3 = ((($0)) + 72|0);
 $$idx5$val$i$i$i4 = HEAP32[$$idx5$i$i$i3>>2]|0;
 $31 = (($$idx$val$i$i$i2) + ($$idx5$val$i$i$i4<<2)|0);
 $32 = ($$idx5$val$i$i$i4|0)==(0);
 if (!($32)) {
  $33 = $$idx$val$i$i$i2;
  while(1) {
   $$val$i$i$i$i$i = HEAP32[$33>>2]|0;
   $34 = ((($$val$i$i$i$i$i)) + 24|0);
   __ZN4drop17h9f42eedb81b88214E($34);
   $35 = ((($$val$i$i$i$i$i)) + 32|0);
   __ZN4drop17h9f42eedb81b88214E($35);
   _free($$val$i$i$i$i$i);
   $36 = ((($33)) + 4|0);
   $37 = ($36|0)==($31|0);
   if ($37) {
    break;
   } else {
    $33 = $36;
   }
  }
 }
 $38 = ((($0)) + 68|0);
 $39 = HEAP32[$38>>2]|0;
 $not$$i$i$i$i$i$i6 = ($39|0)==(0);
 if (!($not$$i$i$i$i$i$i6)) {
  $40 = HEAP32[$30>>2]|0;
  _free($40);
 }
 $41 = ((($0)) + 76|0);
 $42 = HEAP32[$41>>2]|0;
 $cond$i$i = ($42|0)==(1);
 if ($cond$i$i) {
  $43 = ((($0)) + 80|0);
  __ZN4drop17h9f42eedb81b88214E($43);
 }
 $44 = ((($0)) + 92|0);
 $$idx$val$i$i$i10 = HEAP32[$44>>2]|0;
 $$idx5$i$i$i11 = ((($0)) + 100|0);
 $$idx5$val$i$i$i12 = HEAP32[$$idx5$i$i$i11>>2]|0;
 $45 = (($$idx$val$i$i$i10) + ($$idx5$val$i$i$i12<<2)|0);
 $46 = ($$idx5$val$i$i$i12|0)==(0);
 if (!($46)) {
  $47 = $$idx$val$i$i$i10;
  while(1) {
   $$val$i$i$i$i$i13 = HEAP32[$47>>2]|0;
   $48 = ((($$val$i$i$i$i$i13)) + 24|0);
   __ZN4drop17h9f42eedb81b88214E($48);
   $49 = ((($$val$i$i$i$i$i13)) + 32|0);
   __ZN4drop17h9f42eedb81b88214E($49);
   _free($$val$i$i$i$i$i13);
   $50 = ((($47)) + 4|0);
   $51 = ($50|0)==($45|0);
   if ($51) {
    break;
   } else {
    $47 = $50;
   }
  }
 }
 $52 = ((($0)) + 96|0);
 $53 = HEAP32[$52>>2]|0;
 $not$$i$i$i$i$i$i15 = ($53|0)==(0);
 if (!($not$$i$i$i$i$i$i15)) {
  $54 = HEAP32[$44>>2]|0;
  _free($54);
 }
 $55 = ((($0)) + 104|0);
 $56 = HEAP32[$55>>2]|0;
 $cond$i$i18 = ($56|0)==(1);
 if ($cond$i$i18) {
  $57 = ((($0)) + 108|0);
  __ZN4drop17h9f42eedb81b88214E($57);
 }
 $58 = ((($0)) + 128|0);
 $59 = HEAP32[$58>>2]|0;
 $not$$i$i$i$i$i = ($59|0)==(0);
 if (!($not$$i$i$i$i$i)) {
  $60 = ((($0)) + 124|0);
  $61 = HEAP32[$60>>2]|0;
  _free($61);
 }
 $62 = ((($0)) + 144|0);
 $63 = HEAP32[$62>>2]|0;
 $not$$i$i$i$i1$i = ($63|0)==(0);
 if (!($not$$i$i$i$i1$i)) {
  $64 = ((($0)) + 140|0);
  $65 = HEAP32[$64>>2]|0;
  _free($65);
 }
 $66 = ((($0)) + 156|0);
 $67 = HEAP32[$66>>2]|0;
 $not$$i$i$i$i3$i = ($67|0)==(0);
 if (!($not$$i$i$i$i3$i)) {
  $68 = ((($0)) + 152|0);
  $69 = HEAP32[$68>>2]|0;
  _free($69);
 }
 $70 = ((($0)) + 192|0);
 $71 = HEAP32[$70>>2]|0;
 $not$$i$i$i$i = ($71|0)==(0);
 if (!($not$$i$i$i$i)) {
  $72 = ((($0)) + 188|0);
  $73 = HEAP32[$72>>2]|0;
  _free($73);
 }
 $74 = ((($0)) + 204|0);
 $75 = HEAP32[$74>>2]|0;
 $not$$i$i$i$i22 = ($75|0)==(0);
 if (!($not$$i$i$i$i22)) {
  $76 = ((($0)) + 200|0);
  $77 = HEAP32[$76>>2]|0;
  _free($77);
 }
 $78 = ((($0)) + 216|0);
 $79 = HEAP32[$78>>2]|0;
 $not$$i$i$i$i24 = ($79|0)==(0);
 if (!($not$$i$i$i$i24)) {
  $80 = ((($0)) + 212|0);
  $81 = HEAP32[$80>>2]|0;
  _free($81);
 }
 $82 = ((($0)) + 228|0);
 $83 = HEAP32[$82>>2]|0;
 $not$$i$i$i$i26 = ($83|0)==(0);
 if (!($not$$i$i$i$i26)) {
  $84 = ((($0)) + 224|0);
  $85 = HEAP32[$84>>2]|0;
  _free($85);
 }
 $86 = ((($0)) + 240|0);
 $87 = HEAP32[$86>>2]|0;
 $not$$i$i$i$i28 = ($87|0)==(0);
 if ($not$$i$i$i$i28) {
  return;
 }
 $88 = ((($0)) + 236|0);
 $89 = HEAP32[$88>>2]|0;
 _free($89);
 return;
}
function __ZN4drop17ha57ca43c0ff2b1bbE($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZN4drop17h7a054f0c0ce2a476E($0);
 return;
}
function __ZN4drop17hab695909c806641cE($0) {
 $0 = $0|0;
 var $$idx$val$i = 0, $$idx$val$i$i = 0, $$idx$val$i$i$i$i = 0, $$idx1$i$i$i$i$i$i$i = 0, $$idx1$val$i$i$i$i$i$i$i = 0, $$idx1$val$val$i$i$i$i$i$i$i = 0, $$idx2$val$i = 0, $$idx2$val$i$i = 0, $$idx3$val$i = 0, $$idx3$val$i$i = 0, $$idx5$i$i$i$i = 0, $$idx5$val$i$i$i$i = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0;
 var $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0;
 var $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, $not$$i$i$i$i$i$i$i = 0, $not$$i$i$i6$i$i$i$i = 0, $switchtmp$i$i$i$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[$0>>2]|0;
 $2 = HEAP32[$1>>2]|0;
 $3 = (($2) + -1)|0;
 HEAP32[$1>>2] = $3;
 $$idx$val$i = HEAP32[$0>>2]|0;
 $4 = HEAP32[$$idx$val$i>>2]|0;
 $5 = ($4|0)==(0);
 if (!($5)) {
  return;
 }
 $6 = ((($1)) + 12|0);
 $$idx$val$i$i$i$i = HEAP32[$6>>2]|0;
 $$idx5$i$i$i$i = ((($1)) + 20|0);
 $$idx5$val$i$i$i$i = HEAP32[$$idx5$i$i$i$i>>2]|0;
 $7 = (($$idx$val$i$i$i$i) + ($$idx5$val$i$i$i$i<<2)|0);
 $8 = ($$idx5$val$i$i$i$i|0)==(0);
 L4: do {
  if (!($8)) {
   $10 = $$idx$val$i$i$i$i;
   while(1) {
    $9 = HEAP32[$10>>2]|0;
    $11 = HEAP32[$9>>2]|0;
    $12 = (($11) + -1)|0;
    HEAP32[$9>>2] = $12;
    $$idx$val$i$i = HEAP32[$10>>2]|0;
    $13 = HEAP32[$$idx$val$i$i>>2]|0;
    $14 = ($13|0)==(0);
    if ($14) {
     $15 = ((($9)) + 16|0);
     $16 = HEAP32[$15>>2]|0;
     $17 = HEAP32[$16>>2]|0;HEAP32[$16>>2] = (($17-1)|0);
     $18 = ($17|0)==(1);
     if ($18) {
      /* fence */;
      __THREW__ = 0;
      invoke_vi(241,($15|0));
      $19 = __THREW__; __THREW__ = 0;
      $20 = $19&1;
      if ($20) {
       break;
      }
     }
     $21 = ((($9)) + 172|0);
     $22 = HEAP32[$21>>2]|0;
     $switchtmp$i$i$i$i$i$i = ($22|0)==(0|0);
     if (!($switchtmp$i$i$i$i$i$i)) {
      $$idx1$i$i$i$i$i$i$i = ((($9)) + 176|0);
      $$idx1$val$i$i$i$i$i$i$i = HEAP32[$$idx1$i$i$i$i$i$i$i>>2]|0;
      $$idx1$val$val$i$i$i$i$i$i$i = HEAP32[$$idx1$val$i$i$i$i$i$i$i>>2]|0;
      __THREW__ = 0;
      invoke_vi($$idx1$val$val$i$i$i$i$i$i$i|0,($22|0));
      $23 = __THREW__; __THREW__ = 0;
      $24 = $23&1;
      if ($24) {
       break;
      }
      $25 = HEAP32[$$idx1$i$i$i$i$i$i$i>>2]|0;
      $26 = ((($25)) + 4|0);
      $27 = HEAP32[$26>>2]|0;
      $28 = ($27|0)==(0);
      if (!($28)) {
       _free($22);
      }
     }
     $$idx3$val$i$i = HEAP32[$10>>2]|0;
     $29 = ((($$idx3$val$i$i)) + 4|0);
     $30 = HEAP32[$29>>2]|0;
     $31 = (($30) + -1)|0;
     HEAP32[$29>>2] = $31;
     $$idx2$val$i$i = HEAP32[$10>>2]|0;
     $32 = ((($$idx2$val$i$i)) + 4|0);
     $33 = HEAP32[$32>>2]|0;
     $34 = ($33|0)==(0);
     if ($34) {
      _free($9);
     }
    }
    $35 = ((($10)) + 4|0);
    $36 = ($35|0)==($7|0);
    if ($36) {
     break L4;
    } else {
     $10 = $35;
    }
   }
   $40 = ___cxa_find_matching_catch_2()|0;
   $41 = tempRet0;
   $42 = ((($1)) + 16|0);
   $43 = HEAP32[$42>>2]|0;
   $not$$i$i$i6$i$i$i$i = ($43|0)==(0);
   if ($not$$i$i$i6$i$i$i$i) {
    ___resumeException($40|0);
    // unreachable;
   }
   $44 = HEAP32[$6>>2]|0;
   _free($44);
   ___resumeException($40|0);
   // unreachable;
  }
 } while(0);
 $37 = ((($1)) + 16|0);
 $38 = HEAP32[$37>>2]|0;
 $not$$i$i$i$i$i$i$i = ($38|0)==(0);
 if (!($not$$i$i$i$i$i$i$i)) {
  $39 = HEAP32[$6>>2]|0;
  _free($39);
 }
 $$idx3$val$i = HEAP32[$0>>2]|0;
 $45 = ((($$idx3$val$i)) + 4|0);
 $46 = HEAP32[$45>>2]|0;
 $47 = (($46) + -1)|0;
 HEAP32[$45>>2] = $47;
 $$idx2$val$i = HEAP32[$0>>2]|0;
 $48 = ((($$idx2$val$i)) + 4|0);
 $49 = HEAP32[$48>>2]|0;
 $50 = ($49|0)==(0);
 if (!($50)) {
  return;
 }
 _free($1);
 return;
}
function __ZN4drop17hb88b2eda1462e24bE($0) {
 $0 = $0|0;
 var $$idx$val$i$i = 0, $$idx2$val$i$i = 0, $$idx3$val$i$i = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 8|0);
 __ZN4drop17hab695909c806641cE($1);
 $2 = ((($0)) + 12|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = HEAP32[$3>>2]|0;
 $5 = (($4) + -1)|0;
 HEAP32[$3>>2] = $5;
 $$idx$val$i$i = HEAP32[$2>>2]|0;
 $6 = HEAP32[$$idx$val$i$i>>2]|0;
 $7 = ($6|0)==(0);
 if (!($7)) {
  return;
 }
 $8 = ((($3)) + 16|0);
 __ZN4drop17h2f30a22cc85f591fE($8);
 $$idx3$val$i$i = HEAP32[$2>>2]|0;
 $9 = ((($$idx3$val$i$i)) + 4|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = (($10) + -1)|0;
 HEAP32[$9>>2] = $11;
 $$idx2$val$i$i = HEAP32[$2>>2]|0;
 $12 = ((($$idx2$val$i$i)) + 4|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = ($13|0)==(0);
 if (!($14)) {
  return;
 }
 _free($3);
 return;
}
function __ZN4drop17hc58e3ecad5deb1bcE($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $not$$i$i$i$i$i = 0, $not$$i$i$i$i1$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 4|0);
 $2 = HEAP32[$1>>2]|0;
 $not$$i$i$i$i$i = ($2|0)==(0);
 if (!($not$$i$i$i$i$i)) {
  $3 = HEAP32[$0>>2]|0;
  _free($3);
 }
 $4 = ((($0)) + 16|0);
 $5 = HEAP32[$4>>2]|0;
 $not$$i$i$i$i1$i = ($5|0)==(0);
 if ($not$$i$i$i$i1$i) {
  return;
 }
 $6 = ((($0)) + 12|0);
 $7 = HEAP32[$6>>2]|0;
 _free($7);
 return;
}
function __ZN4drop17hc8545853bac74c2bE($0) {
 $0 = $0|0;
 var $$idx$val$i = 0, $$idx$val$i$i = 0, $$idx$val$i$i$i$i$i$i$i = 0, $$idx$val$i$i9 = 0, $$idx1$i = 0, $$idx1$i$i$i$i$i$i = 0, $$idx1$i$i$i$i$i$i$i = 0, $$idx1$i1 = 0, $$idx1$val$i = 0, $$idx1$val$i$i$i$i$i$i = 0, $$idx1$val$i$i$i$i$i$i$i = 0, $$idx1$val$i2 = 0, $$idx1$val$val$i = 0, $$idx1$val$val$i$i$i$i$i$i = 0, $$idx1$val$val$i$i$i$i$i$i$i = 0, $$idx1$val$val$i3 = 0, $$idx2$val$i$i = 0, $$idx2$val$i$i$i$i$i$i$i = 0, $$idx3$val$i$i = 0, $$idx3$val$i$i$i$i$i$i$i = 0;
 var $$idx5$i = 0, $$idx5$i$i = 0, $$idx5$val$i = 0, $$idx5$val$i$i = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0;
 var $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0;
 var $97 = 0, $98 = 0, $99 = 0, $not$$i$i$i$i = 0, $not$$i$i$i$i$i = 0, $not$$i$i$i$i$i$i$i = 0, $not$$i$i$i$i$i$i$i$i$i$i = 0, $not$$i$i$i$i5 = 0, $not$$i$i$i$i7 = 0, $not$$i$i$i6$i$i = 0, $not$$i$i$i8$i = 0, $switchtmp$i$i = 0, $switchtmp$i$i$i$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 __ZN4drop17h11ff7f052d90b889E($0);
 $1 = ((($0)) + 40|0);
 $2 = HEAP32[$1>>2]|0;
 $switchtmp$i$i = ($2|0)==(0|0);
 if (!($switchtmp$i$i)) {
  $3 = ((($0)) + 32|0);
  $4 = HEAP32[$3>>2]|0;
  $5 = ($4|0)==(0);
  if (!($5)) {
   _free($2);
  }
  $6 = ((($0)) + 52|0);
  $7 = HEAP32[$6>>2]|0;
  $not$$i$i$i$i$i$i$i = ($7|0)==(0);
  if (!($not$$i$i$i$i$i$i$i)) {
   $8 = ((($0)) + 48|0);
   $9 = HEAP32[$8>>2]|0;
   _free($9);
  }
 }
 $10 = ((($0)) + 64|0);
 $11 = HEAP32[$10>>2]|0;
 $$idx1$i = ((($0)) + 68|0);
 $$idx1$val$i = HEAP32[$$idx1$i>>2]|0;
 $$idx1$val$val$i = HEAP32[$$idx1$val$i>>2]|0;
 FUNCTION_TABLE_vi[$$idx1$val$val$i & 511]($11);
 $12 = HEAP32[$$idx1$i>>2]|0;
 $13 = ((($12)) + 4|0);
 $14 = HEAP32[$13>>2]|0;
 $15 = ($14|0)==(0);
 if (!($15)) {
  _free($11);
 }
 $16 = ((($0)) + 72|0);
 $17 = HEAP32[$16>>2]|0;
 $$idx1$i1 = ((($0)) + 76|0);
 $$idx1$val$i2 = HEAP32[$$idx1$i1>>2]|0;
 $$idx1$val$val$i3 = HEAP32[$$idx1$val$i2>>2]|0;
 FUNCTION_TABLE_vi[$$idx1$val$val$i3 & 511]($17);
 $18 = HEAP32[$$idx1$i1>>2]|0;
 $19 = ((($18)) + 4|0);
 $20 = HEAP32[$19>>2]|0;
 $21 = ($20|0)==(0);
 if (!($21)) {
  _free($17);
 }
 $22 = ((($0)) + 80|0);
 __ZN4drop17he9b4e7e2d8142e3bE($22);
 $23 = ((($0)) + 92|0);
 __ZN4drop17h6a836c9a94be8fafE($23);
 $24 = ((($0)) + 104|0);
 $$idx$val$i$i = HEAP32[$24>>2]|0;
 $$idx5$i$i = ((($0)) + 112|0);
 $$idx5$val$i$i = HEAP32[$$idx5$i$i>>2]|0;
 $25 = (($$idx$val$i$i) + (($$idx5$val$i$i*20)|0)|0);
 $26 = ($$idx5$val$i$i|0)==(0);
 L14: do {
  if (!($26)) {
   $28 = $$idx$val$i$i;
   while(1) {
    $27 = ((($28)) + 4|0);
    $29 = HEAP32[$27>>2]|0;
    $not$$i$i$i$i$i$i$i$i$i$i = ($29|0)==(0);
    if (!($not$$i$i$i$i$i$i$i$i$i$i)) {
     $30 = HEAP32[$28>>2]|0;
     _free($30);
    }
    $31 = ((($28)) + 12|0);
    $32 = HEAP32[$31>>2]|0;
    $$idx1$i$i$i$i$i$i = ((($28)) + 16|0);
    $$idx1$val$i$i$i$i$i$i = HEAP32[$$idx1$i$i$i$i$i$i>>2]|0;
    $$idx1$val$val$i$i$i$i$i$i = HEAP32[$$idx1$val$i$i$i$i$i$i>>2]|0;
    __THREW__ = 0;
    invoke_vi($$idx1$val$val$i$i$i$i$i$i|0,($32|0));
    $33 = __THREW__; __THREW__ = 0;
    $34 = $33&1;
    if ($34) {
     break;
    }
    $35 = HEAP32[$$idx1$i$i$i$i$i$i>>2]|0;
    $36 = ((($35)) + 4|0);
    $37 = HEAP32[$36>>2]|0;
    $38 = ($37|0)==(0);
    if (!($38)) {
     _free($32);
    }
    $39 = ((($28)) + 20|0);
    $40 = ($39|0)==($25|0);
    if ($40) {
     break L14;
    } else {
     $28 = $39;
    }
   }
   $44 = ___cxa_find_matching_catch_2()|0;
   $45 = tempRet0;
   $46 = ((($0)) + 108|0);
   $47 = HEAP32[$46>>2]|0;
   $not$$i$i$i6$i$i = ($47|0)==(0);
   if ($not$$i$i$i6$i$i) {
    ___resumeException($44|0);
    // unreachable;
   }
   $48 = HEAP32[$24>>2]|0;
   _free($48);
   ___resumeException($44|0);
   // unreachable;
  }
 } while(0);
 $41 = ((($0)) + 108|0);
 $42 = HEAP32[$41>>2]|0;
 $not$$i$i$i$i$i = ($42|0)==(0);
 if (!($not$$i$i$i$i$i)) {
  $43 = HEAP32[$24>>2]|0;
  _free($43);
 }
 $49 = ((($0)) + 120|0);
 $50 = HEAP32[$49>>2]|0;
 $not$$i$i$i$i = ($50|0)==(0);
 if (!($not$$i$i$i$i)) {
  $51 = ((($0)) + 116|0);
  $52 = HEAP32[$51>>2]|0;
  _free($52);
 }
 $53 = ((($0)) + 132|0);
 $54 = HEAP32[$53>>2]|0;
 $not$$i$i$i$i5 = ($54|0)==(0);
 if (!($not$$i$i$i$i5)) {
  $55 = ((($0)) + 128|0);
  $56 = HEAP32[$55>>2]|0;
  _free($56);
 }
 $57 = ((($0)) + 140|0);
 $$idx$val$i = HEAP32[$57>>2]|0;
 $$idx5$i = ((($0)) + 148|0);
 $$idx5$val$i = HEAP32[$$idx5$i>>2]|0;
 $58 = (($$idx$val$i) + ($$idx5$val$i<<6)|0);
 $59 = ($$idx5$val$i|0)==(0);
 L39: do {
  if (!($59)) {
   $61 = $$idx$val$i;
   L40: while(1) {
    $60 = ((($61)) + 28|0);
    $62 = HEAP32[$60>>2]|0;
    $63 = HEAP32[$62>>2]|0;HEAP32[$62>>2] = (($63-1)|0);
    $64 = ($63|0)==(1);
    if ($64) {
     /* fence */;
     __THREW__ = 0;
     invoke_vi(241,($60|0));
     $65 = __THREW__; __THREW__ = 0;
     $66 = $65&1;
     if ($66) {
      break;
     }
    }
    $67 = ((($61)) + 52|0);
    $68 = HEAP32[$67>>2]|0;
    switch ($68|0) {
    case 0:  {
     $69 = ((($61)) + 56|0);
     $70 = HEAP32[$69>>2]|0;
     $71 = HEAP32[$70>>2]|0;
     $72 = (($71) + -1)|0;
     HEAP32[$70>>2] = $72;
     $$idx$val$i$i9 = HEAP32[$69>>2]|0;
     $73 = HEAP32[$$idx$val$i$i9>>2]|0;
     $74 = ($73|0)==(0);
     if ($74) {
      $75 = ((($70)) + 16|0);
      $76 = HEAP32[$75>>2]|0;
      $77 = HEAP32[$76>>2]|0;HEAP32[$76>>2] = (($77-1)|0);
      $78 = ($77|0)==(1);
      if ($78) {
       /* fence */;
       __THREW__ = 0;
       invoke_vi(241,($75|0));
       $79 = __THREW__; __THREW__ = 0;
       $80 = $79&1;
       if ($80) {
        break L40;
       }
      }
      $81 = ((($70)) + 172|0);
      $82 = HEAP32[$81>>2]|0;
      $switchtmp$i$i$i$i$i$i = ($82|0)==(0|0);
      if (!($switchtmp$i$i$i$i$i$i)) {
       $$idx1$i$i$i$i$i$i$i = ((($70)) + 176|0);
       $$idx1$val$i$i$i$i$i$i$i = HEAP32[$$idx1$i$i$i$i$i$i$i>>2]|0;
       $$idx1$val$val$i$i$i$i$i$i$i = HEAP32[$$idx1$val$i$i$i$i$i$i$i>>2]|0;
       __THREW__ = 0;
       invoke_vi($$idx1$val$val$i$i$i$i$i$i$i|0,($82|0));
       $83 = __THREW__; __THREW__ = 0;
       $84 = $83&1;
       if ($84) {
        break L40;
       }
       $85 = HEAP32[$$idx1$i$i$i$i$i$i$i>>2]|0;
       $86 = ((($85)) + 4|0);
       $87 = HEAP32[$86>>2]|0;
       $88 = ($87|0)==(0);
       if (!($88)) {
        _free($82);
       }
      }
      $$idx3$val$i$i = HEAP32[$69>>2]|0;
      $89 = ((($$idx3$val$i$i)) + 4|0);
      $90 = HEAP32[$89>>2]|0;
      $91 = (($90) + -1)|0;
      HEAP32[$89>>2] = $91;
      $$idx2$val$i$i = HEAP32[$69>>2]|0;
      $92 = ((($$idx2$val$i$i)) + 4|0);
      $93 = HEAP32[$92>>2]|0;
      $94 = ($93|0)==(0);
      if ($94) {
       _free($70);
      }
     }
     break;
    }
    case 1:  {
     $95 = ((($61)) + 56|0);
     $96 = HEAP32[$95>>2]|0;
     $97 = HEAP32[$96>>2]|0;
     $98 = (($97) + -1)|0;
     HEAP32[$96>>2] = $98;
     $$idx$val$i$i$i$i$i$i$i = HEAP32[$95>>2]|0;
     $99 = HEAP32[$$idx$val$i$i$i$i$i$i$i>>2]|0;
     $100 = ($99|0)==(0);
     if ($100) {
      $101 = ((($96)) + 12|0);
      __THREW__ = 0;
      invoke_vi(247,($101|0));
      $102 = __THREW__; __THREW__ = 0;
      $103 = $102&1;
      if ($103) {
       break L40;
      }
      $$idx3$val$i$i$i$i$i$i$i = HEAP32[$95>>2]|0;
      $104 = ((($$idx3$val$i$i$i$i$i$i$i)) + 4|0);
      $105 = HEAP32[$104>>2]|0;
      $106 = (($105) + -1)|0;
      HEAP32[$104>>2] = $106;
      $$idx2$val$i$i$i$i$i$i$i = HEAP32[$95>>2]|0;
      $107 = ((($$idx2$val$i$i$i$i$i$i$i)) + 4|0);
      $108 = HEAP32[$107>>2]|0;
      $109 = ($108|0)==(0);
      if ($109) {
       _free($96);
      }
     }
     break;
    }
    default: {
    }
    }
    $110 = ((($61)) + 64|0);
    $111 = ($110|0)==($58|0);
    if ($111) {
     break L39;
    } else {
     $61 = $110;
    }
   }
   $115 = ___cxa_find_matching_catch_2()|0;
   $116 = tempRet0;
   $117 = ((($0)) + 144|0);
   $118 = HEAP32[$117>>2]|0;
   $not$$i$i$i8$i = ($118|0)==(0);
   if ($not$$i$i$i8$i) {
    ___resumeException($115|0);
    // unreachable;
   }
   $119 = HEAP32[$57>>2]|0;
   _free($119);
   ___resumeException($115|0);
   // unreachable;
  }
 } while(0);
 $112 = ((($0)) + 144|0);
 $113 = HEAP32[$112>>2]|0;
 $not$$i$i$i$i7 = ($113|0)==(0);
 if ($not$$i$i$i$i7) {
  return;
 }
 $114 = HEAP32[$57>>2]|0;
 _free($114);
 return;
}
function __ZN4drop17hcc8b352798921f08E($0) {
 $0 = $0|0;
 var $$idx$val$i$i = 0, $$idx2$val$i$i = 0, $$idx3$val$i$i = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 __ZN4drop17hab695909c806641cE($0);
 $1 = ((($0)) + 4|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = HEAP32[$2>>2]|0;
 $4 = (($3) + -1)|0;
 HEAP32[$2>>2] = $4;
 $$idx$val$i$i = HEAP32[$1>>2]|0;
 $5 = HEAP32[$$idx$val$i$i>>2]|0;
 $6 = ($5|0)==(0);
 if (!($6)) {
  return;
 }
 $7 = ((($2)) + 8|0);
 __ZN4drop17h95af9e8f1e83bb49E($7);
 $$idx3$val$i$i = HEAP32[$1>>2]|0;
 $8 = ((($$idx3$val$i$i)) + 4|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = (($9) + -1)|0;
 HEAP32[$8>>2] = $10;
 $$idx2$val$i$i = HEAP32[$1>>2]|0;
 $11 = ((($$idx2$val$i$i)) + 4|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = ($12|0)==(0);
 if (!($13)) {
  return;
 }
 _free($2);
 return;
}
function __ZN4drop17hd4af0298b60386b8E($0) {
 $0 = $0|0;
 var $$idx$val$i = 0, $$idx$val$i$i = 0, $$idx$val$i$i16 = 0, $$idx$val$i$i22 = 0, $$idx$val$i8 = 0, $$idx1$i = 0, $$idx1$i$i = 0, $$idx1$i$i$i$i$i$i$i = 0, $$idx1$i$i$i$i$i$i$i27 = 0, $$idx1$val$i = 0, $$idx1$val$i$i = 0, $$idx1$val$i$i$i$i$i$i$i = 0, $$idx1$val$i$i$i$i$i$i$i28 = 0, $$idx1$val$val$i$i = 0, $$idx1$val$val$i$i$i$i$i$i$i = 0, $$idx1$val$val$i$i$i$i$i$i$i29 = 0, $$idx2$val$i$i = 0, $$idx2$val$i$i19 = 0, $$idx2$val$i$i33 = 0, $$idx3$val$i$i = 0;
 var $$idx3$val$i$i18 = 0, $$idx3$val$i$i32 = 0, $$idx5$i = 0, $$idx5$val$i = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0;
 var $97 = 0, $98 = 0, $not$$i$i$i$i = 0, $not$$i$i$i$i3 = 0, $not$$i$i$i5$i = 0, $not$$i$i$i6$i = 0, $switchtmp$i = 0, $switchtmp$i$i$i$i$i$i = 0, $switchtmp$i$i$i$i$i$i25 = 0, $switchtmp$i1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[$0>>2]|0;
 $switchtmp$i = ($1|0)==(0|0);
 if (!($switchtmp$i)) {
  $2 = HEAP32[$1>>2]|0;
  $3 = (($2) + -1)|0;
  HEAP32[$1>>2] = $3;
  $$idx$val$i$i16 = HEAP32[$0>>2]|0;
  $4 = HEAP32[$$idx$val$i$i16>>2]|0;
  $5 = ($4|0)==(0);
  if ($5) {
   $6 = ((($1)) + 16|0);
   $7 = HEAP32[$6>>2]|0;
   $8 = HEAP32[$7>>2]|0;HEAP32[$7>>2] = (($8-1)|0);
   $9 = ($8|0)==(1);
   if ($9) {
    /* fence */;
    __ZN33__LT_alloc__arc__Arc_LT_T_GT__GT_9drop_slow17hb3767c2311d7d383E($6);
   }
   $10 = ((($1)) + 172|0);
   $11 = HEAP32[$10>>2]|0;
   $switchtmp$i$i$i$i$i$i = ($11|0)==(0|0);
   if (!($switchtmp$i$i$i$i$i$i)) {
    $$idx1$i$i$i$i$i$i$i = ((($1)) + 176|0);
    $$idx1$val$i$i$i$i$i$i$i = HEAP32[$$idx1$i$i$i$i$i$i$i>>2]|0;
    $$idx1$val$val$i$i$i$i$i$i$i = HEAP32[$$idx1$val$i$i$i$i$i$i$i>>2]|0;
    FUNCTION_TABLE_vi[$$idx1$val$val$i$i$i$i$i$i$i & 511]($11);
    $12 = HEAP32[$$idx1$i$i$i$i$i$i$i>>2]|0;
    $13 = ((($12)) + 4|0);
    $14 = HEAP32[$13>>2]|0;
    $15 = ($14|0)==(0);
    if (!($15)) {
     _free($11);
    }
   }
   $$idx3$val$i$i18 = HEAP32[$0>>2]|0;
   $16 = ((($$idx3$val$i$i18)) + 4|0);
   $17 = HEAP32[$16>>2]|0;
   $18 = (($17) + -1)|0;
   HEAP32[$16>>2] = $18;
   $$idx2$val$i$i19 = HEAP32[$0>>2]|0;
   $19 = ((($$idx2$val$i$i19)) + 4|0);
   $20 = HEAP32[$19>>2]|0;
   $21 = ($20|0)==(0);
   if ($21) {
    _free($1);
   }
  }
 }
 $22 = ((($0)) + 28|0);
 $23 = HEAP32[$22>>2]|0;
 $24 = HEAP32[$23>>2]|0;HEAP32[$23>>2] = (($24-1)|0);
 $25 = ($24|0)==(1);
 if ($25) {
  /* fence */;
  __ZN33__LT_alloc__arc__Arc_LT_T_GT__GT_9drop_slow17hb3767c2311d7d383E($22);
 }
 $26 = ((($0)) + 52|0);
 $27 = HEAP32[$26>>2]|0;
 $switchtmp$i1 = ($27|0)==(0|0);
 if (!($switchtmp$i1)) {
  $$idx1$i$i = ((($0)) + 56|0);
  $$idx1$val$i$i = HEAP32[$$idx1$i$i>>2]|0;
  $$idx1$val$val$i$i = HEAP32[$$idx1$val$i$i>>2]|0;
  FUNCTION_TABLE_vi[$$idx1$val$val$i$i & 511]($27);
  $28 = HEAP32[$$idx1$i$i>>2]|0;
  $29 = ((($28)) + 4|0);
  $30 = HEAP32[$29>>2]|0;
  $31 = ($30|0)==(0);
  if (!($31)) {
   _free($27);
  }
 }
 $32 = ((($0)) + 60|0);
 $$idx$val$i = HEAP32[$32>>2]|0;
 $$idx5$i = ((($0)) + 68|0);
 $$idx5$val$i = HEAP32[$$idx5$i>>2]|0;
 $33 = (($$idx$val$i) + ($$idx5$val$i<<2)|0);
 $34 = ($$idx5$val$i|0)==(0);
 L20: do {
  if (!($34)) {
   $36 = $$idx$val$i;
   while(1) {
    $35 = HEAP32[$36>>2]|0;
    $37 = HEAP32[$35>>2]|0;
    $38 = (($37) + -1)|0;
    HEAP32[$35>>2] = $38;
    $$idx$val$i$i22 = HEAP32[$36>>2]|0;
    $39 = HEAP32[$$idx$val$i$i22>>2]|0;
    $40 = ($39|0)==(0);
    if ($40) {
     $41 = ((($35)) + 16|0);
     $42 = HEAP32[$41>>2]|0;
     $43 = HEAP32[$42>>2]|0;HEAP32[$42>>2] = (($43-1)|0);
     $44 = ($43|0)==(1);
     if ($44) {
      /* fence */;
      __THREW__ = 0;
      invoke_vi(241,($41|0));
      $45 = __THREW__; __THREW__ = 0;
      $46 = $45&1;
      if ($46) {
       break;
      }
     }
     $47 = ((($35)) + 172|0);
     $48 = HEAP32[$47>>2]|0;
     $switchtmp$i$i$i$i$i$i25 = ($48|0)==(0|0);
     if (!($switchtmp$i$i$i$i$i$i25)) {
      $$idx1$i$i$i$i$i$i$i27 = ((($35)) + 176|0);
      $$idx1$val$i$i$i$i$i$i$i28 = HEAP32[$$idx1$i$i$i$i$i$i$i27>>2]|0;
      $$idx1$val$val$i$i$i$i$i$i$i29 = HEAP32[$$idx1$val$i$i$i$i$i$i$i28>>2]|0;
      __THREW__ = 0;
      invoke_vi($$idx1$val$val$i$i$i$i$i$i$i29|0,($48|0));
      $49 = __THREW__; __THREW__ = 0;
      $50 = $49&1;
      if ($50) {
       break;
      }
      $51 = HEAP32[$$idx1$i$i$i$i$i$i$i27>>2]|0;
      $52 = ((($51)) + 4|0);
      $53 = HEAP32[$52>>2]|0;
      $54 = ($53|0)==(0);
      if (!($54)) {
       _free($48);
      }
     }
     $$idx3$val$i$i32 = HEAP32[$36>>2]|0;
     $55 = ((($$idx3$val$i$i32)) + 4|0);
     $56 = HEAP32[$55>>2]|0;
     $57 = (($56) + -1)|0;
     HEAP32[$55>>2] = $57;
     $$idx2$val$i$i33 = HEAP32[$36>>2]|0;
     $58 = ((($$idx2$val$i$i33)) + 4|0);
     $59 = HEAP32[$58>>2]|0;
     $60 = ($59|0)==(0);
     if ($60) {
      _free($35);
     }
    }
    $61 = ((($36)) + 4|0);
    $62 = ($61|0)==($33|0);
    if ($62) {
     break L20;
    } else {
     $36 = $61;
    }
   }
   $66 = ___cxa_find_matching_catch_2()|0;
   $67 = tempRet0;
   $68 = ((($0)) + 64|0);
   $69 = HEAP32[$68>>2]|0;
   $not$$i$i$i6$i = ($69|0)==(0);
   if ($not$$i$i$i6$i) {
    ___resumeException($66|0);
    // unreachable;
   }
   $70 = HEAP32[$32>>2]|0;
   _free($70);
   ___resumeException($66|0);
   // unreachable;
  }
 } while(0);
 $63 = ((($0)) + 64|0);
 $64 = HEAP32[$63>>2]|0;
 $not$$i$i$i$i = ($64|0)==(0);
 if (!($not$$i$i$i$i)) {
  $65 = HEAP32[$32>>2]|0;
  _free($65);
 }
 $71 = ((($0)) + 72|0);
 $$idx$val$i8 = HEAP32[$71>>2]|0;
 $$idx1$i = ((($0)) + 80|0);
 $$idx1$val$i = HEAP32[$$idx1$i>>2]|0;
 $72 = (($$idx$val$i8) + ($$idx1$val$i<<2)|0);
 $73 = ($$idx1$val$i|0)==(0);
 L44: do {
  if (!($73)) {
   $75 = $$idx$val$i8;
   while(1) {
    $74 = HEAP32[$75>>2]|0;
    $76 = HEAP32[$74>>2]|0;
    $77 = (($76) + -1)|0;
    HEAP32[$74>>2] = $77;
    $$idx$val$i$i = HEAP32[$75>>2]|0;
    $78 = HEAP32[$$idx$val$i$i>>2]|0;
    $79 = ($78|0)==(0);
    if ($79) {
     $80 = ((($74)) + 12|0);
     __THREW__ = 0;
     invoke_vi(247,($80|0));
     $81 = __THREW__; __THREW__ = 0;
     $82 = $81&1;
     if ($82) {
      break;
     }
     $$idx3$val$i$i = HEAP32[$75>>2]|0;
     $83 = ((($$idx3$val$i$i)) + 4|0);
     $84 = HEAP32[$83>>2]|0;
     $85 = (($84) + -1)|0;
     HEAP32[$83>>2] = $85;
     $$idx2$val$i$i = HEAP32[$75>>2]|0;
     $86 = ((($$idx2$val$i$i)) + 4|0);
     $87 = HEAP32[$86>>2]|0;
     $88 = ($87|0)==(0);
     if ($88) {
      _free($74);
     }
    }
    $89 = ((($75)) + 4|0);
    $90 = ($89|0)==($72|0);
    if ($90) {
     break L44;
    } else {
     $75 = $89;
    }
   }
   $94 = ___cxa_find_matching_catch_2()|0;
   $95 = tempRet0;
   $96 = ((($0)) + 76|0);
   $97 = HEAP32[$96>>2]|0;
   $not$$i$i$i5$i = ($97|0)==(0);
   if ($not$$i$i$i5$i) {
    ___resumeException($94|0);
    // unreachable;
   }
   $98 = HEAP32[$71>>2]|0;
   _free($98);
   ___resumeException($94|0);
   // unreachable;
  }
 } while(0);
 $91 = ((($0)) + 76|0);
 $92 = HEAP32[$91>>2]|0;
 $not$$i$i$i$i3 = ($92|0)==(0);
 if ($not$$i$i$i$i3) {
  return;
 }
 $93 = HEAP32[$71>>2]|0;
 _free($93);
 return;
}
function __ZN4drop17hdc14e06f44431368E($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, $not$$i$i$i$i$i = 0, $not$$i$i$i$i$i$i$i = 0, $not$$i$i$i$i1$i = 0, $not$$i$i$i$i1$i$i$i = 0, $not$$i$i$i$i4$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 4|0);
 $2 = HEAP32[$1>>2]|0;
 $not$$i$i$i$i$i = ($2|0)==(0);
 if (!($not$$i$i$i$i$i)) {
  $3 = HEAP32[$0>>2]|0;
  _free($3);
 }
 $4 = ((($0)) + 16|0);
 $5 = HEAP32[$4>>2]|0;
 $not$$i$i$i$i1$i = ($5|0)==(0);
 if (!($not$$i$i$i$i1$i)) {
  $6 = ((($0)) + 12|0);
  $7 = HEAP32[$6>>2]|0;
  _free($7);
 }
 $8 = ((($0)) + 24|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = HEAP32[$9>>2]|0;HEAP32[$9>>2] = (($10-1)|0);
 $11 = ($10|0)==(1);
 if ($11) {
  /* fence */;
  __ZN33__LT_alloc__arc__Arc_LT_T_GT__GT_9drop_slow17h639b296ab3838c06E($8);
 }
 $12 = ((($0)) + 32|0);
 $13 = HEAP32[$12>>2]|0;
 $not$$i$i$i$i$i$i$i = ($13|0)==(0);
 if (!($not$$i$i$i$i$i$i$i)) {
  $14 = ((($0)) + 28|0);
  $15 = HEAP32[$14>>2]|0;
  _free($15);
 }
 $16 = ((($0)) + 44|0);
 $17 = HEAP32[$16>>2]|0;
 $not$$i$i$i$i1$i$i$i = ($17|0)==(0);
 if (!($not$$i$i$i$i1$i$i$i)) {
  $18 = ((($0)) + 40|0);
  $19 = HEAP32[$18>>2]|0;
  _free($19);
 }
 $20 = ((($0)) + 56|0);
 $21 = HEAP32[$20>>2]|0;
 $not$$i$i$i$i4$i$i$i = ($21|0)==(0);
 if ($not$$i$i$i$i4$i$i$i) {
  return;
 }
 $22 = ((($0)) + 52|0);
 $23 = HEAP32[$22>>2]|0;
 _free($23);
 return;
}
function __ZN4drop17he9b4e7e2d8142e3bE($0) {
 $0 = $0|0;
 var $$idx$val$i = 0, $$idx1$i$i$i$i$i = 0, $$idx1$val$i$i$i$i$i = 0, $$idx1$val$val$i$i$i$i$i = 0, $$idx5$i = 0, $$idx5$val$i = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $not$$i$i$i$i = 0, $not$$i$i$i$i$i$i$i$i$i = 0, $not$$i$i$i6$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $$idx$val$i = HEAP32[$0>>2]|0;
 $$idx5$i = ((($0)) + 8|0);
 $$idx5$val$i = HEAP32[$$idx5$i>>2]|0;
 $1 = (($$idx$val$i) + (($$idx5$val$i*20)|0)|0);
 $2 = ($$idx5$val$i|0)==(0);
 L1: do {
  if (!($2)) {
   $4 = $$idx$val$i;
   while(1) {
    $3 = ((($4)) + 4|0);
    $5 = HEAP32[$3>>2]|0;
    $not$$i$i$i$i$i$i$i$i$i = ($5|0)==(0);
    if (!($not$$i$i$i$i$i$i$i$i$i)) {
     $6 = HEAP32[$4>>2]|0;
     _free($6);
    }
    $7 = ((($4)) + 12|0);
    $8 = HEAP32[$7>>2]|0;
    $$idx1$i$i$i$i$i = ((($4)) + 16|0);
    $$idx1$val$i$i$i$i$i = HEAP32[$$idx1$i$i$i$i$i>>2]|0;
    $$idx1$val$val$i$i$i$i$i = HEAP32[$$idx1$val$i$i$i$i$i>>2]|0;
    __THREW__ = 0;
    invoke_vi($$idx1$val$val$i$i$i$i$i|0,($8|0));
    $9 = __THREW__; __THREW__ = 0;
    $10 = $9&1;
    if ($10) {
     break;
    }
    $11 = HEAP32[$$idx1$i$i$i$i$i>>2]|0;
    $12 = ((($11)) + 4|0);
    $13 = HEAP32[$12>>2]|0;
    $14 = ($13|0)==(0);
    if (!($14)) {
     _free($8);
    }
    $15 = ((($4)) + 20|0);
    $16 = ($15|0)==($1|0);
    if ($16) {
     break L1;
    } else {
     $4 = $15;
    }
   }
   $20 = ___cxa_find_matching_catch_2()|0;
   $21 = tempRet0;
   $22 = ((($0)) + 4|0);
   $23 = HEAP32[$22>>2]|0;
   $not$$i$i$i6$i = ($23|0)==(0);
   if ($not$$i$i$i6$i) {
    ___resumeException($20|0);
    // unreachable;
   }
   $24 = HEAP32[$0>>2]|0;
   _free($24);
   ___resumeException($20|0);
   // unreachable;
  }
 } while(0);
 $17 = ((($0)) + 4|0);
 $18 = HEAP32[$17>>2]|0;
 $not$$i$i$i$i = ($18|0)==(0);
 if ($not$$i$i$i$i) {
  return;
 }
 $19 = HEAP32[$0>>2]|0;
 _free($19);
 return;
}
function __ZN4drop17heceddef0f26ca94eE($0) {
 $0 = $0|0;
 var $$idx$val$i$i = 0, $$idx1$i$i$i$i$i$i = 0, $$idx1$val$i$i$i$i$i$i = 0, $$idx1$val$val$i$i$i$i$i$i = 0, $$idx5$i$i = 0, $$idx5$val$i$i = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, $not$$i$i$i$i = 0, $not$$i$i$i$i$i = 0, $not$$i$i$i$i1 = 0, $not$$i$i$i$i1$i = 0, $not$$i$i$i$i4$i = 0, $not$$i$i$i6$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 4|0);
 $$idx$val$i$i = HEAP32[$1>>2]|0;
 $$idx5$i$i = ((($0)) + 12|0);
 $$idx5$val$i$i = HEAP32[$$idx5$i$i>>2]|0;
 $2 = (($$idx$val$i$i) + (($$idx5$val$i$i*12)|0)|0);
 $3 = ($$idx5$val$i$i|0)==(0);
 L1: do {
  if (!($3)) {
   $5 = $$idx$val$i$i;
   while(1) {
    $4 = ((($5)) + 4|0);
    $6 = HEAP32[$4>>2]|0;
    $$idx1$i$i$i$i$i$i = ((($5)) + 8|0);
    $$idx1$val$i$i$i$i$i$i = HEAP32[$$idx1$i$i$i$i$i$i>>2]|0;
    $$idx1$val$val$i$i$i$i$i$i = HEAP32[$$idx1$val$i$i$i$i$i$i>>2]|0;
    __THREW__ = 0;
    invoke_vi($$idx1$val$val$i$i$i$i$i$i|0,($6|0));
    $7 = __THREW__; __THREW__ = 0;
    $8 = $7&1;
    if ($8) {
     break;
    }
    $9 = HEAP32[$$idx1$i$i$i$i$i$i>>2]|0;
    $10 = ((($9)) + 4|0);
    $11 = HEAP32[$10>>2]|0;
    $12 = ($11|0)==(0);
    if (!($12)) {
     _free($6);
    }
    $13 = ((($5)) + 12|0);
    $14 = ($13|0)==($2|0);
    if ($14) {
     break L1;
    } else {
     $5 = $13;
    }
   }
   $18 = ___cxa_find_matching_catch_2()|0;
   $19 = tempRet0;
   $20 = ((($0)) + 8|0);
   $21 = HEAP32[$20>>2]|0;
   $not$$i$i$i6$i$i = ($21|0)==(0);
   if ($not$$i$i$i6$i$i) {
    ___resumeException($18|0);
    // unreachable;
   }
   $22 = HEAP32[$1>>2]|0;
   _free($22);
   ___resumeException($18|0);
   // unreachable;
  }
 } while(0);
 $15 = ((($0)) + 8|0);
 $16 = HEAP32[$15>>2]|0;
 $not$$i$i$i$i$i = ($16|0)==(0);
 if (!($not$$i$i$i$i$i)) {
  $17 = HEAP32[$1>>2]|0;
  _free($17);
 }
 $23 = ((($0)) + 24|0);
 $24 = HEAP32[$23>>2]|0;
 $not$$i$i$i$i1$i = ($24|0)==(0);
 if (!($not$$i$i$i$i1$i)) {
  $25 = ((($0)) + 20|0);
  $26 = HEAP32[$25>>2]|0;
  _free($26);
 }
 $27 = ((($0)) + 36|0);
 $28 = HEAP32[$27>>2]|0;
 $not$$i$i$i$i4$i = ($28|0)==(0);
 if (!($not$$i$i$i$i4$i)) {
  $29 = ((($0)) + 32|0);
  $30 = HEAP32[$29>>2]|0;
  _free($30);
 }
 $31 = ((($0)) + 60|0);
 $32 = HEAP32[$31>>2]|0;
 $not$$i$i$i$i = ($32|0)==(0);
 if (!($not$$i$i$i$i)) {
  $33 = ((($0)) + 56|0);
  $34 = HEAP32[$33>>2]|0;
  _free($34);
 }
 $35 = ((($0)) + 72|0);
 $36 = HEAP32[$35>>2]|0;
 $not$$i$i$i$i1 = ($36|0)==(0);
 if ($not$$i$i$i$i1) {
  return;
 }
 $37 = ((($0)) + 68|0);
 $38 = HEAP32[$37>>2]|0;
 _free($38);
 return;
}
function __ZN4drop17heeecd458b244cc82E($0) {
 $0 = $0|0;
 var $$idx$val$i = 0, $$idx5$i = 0, $$idx5$val$i = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $not$$i$i$i$i = 0, $not$$i$i$i$i1 = 0, $not$$i$i$i$i4 = 0, $not$$i$i$i6$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 4|0);
 $$idx$val$i = HEAP32[$1>>2]|0;
 $$idx5$i = ((($0)) + 12|0);
 $$idx5$val$i = HEAP32[$$idx5$i>>2]|0;
 $2 = (($$idx$val$i) + (($$idx5$val$i*44)|0)|0);
 $3 = ($$idx5$val$i|0)==(0);
 L1: do {
  if (!($3)) {
   $5 = $$idx$val$i;
   while(1) {
    $4 = ((($5)) + 4|0);
    __THREW__ = 0;
    invoke_vi(254,($4|0));
    $6 = __THREW__; __THREW__ = 0;
    $7 = $6&1;
    if ($7) {
     break;
    }
    $8 = ((($5)) + 44|0);
    $9 = ($8|0)==($2|0);
    if ($9) {
     break L1;
    } else {
     $5 = $8;
    }
   }
   $13 = ___cxa_find_matching_catch_2()|0;
   $14 = tempRet0;
   $15 = ((($0)) + 8|0);
   $16 = HEAP32[$15>>2]|0;
   $not$$i$i$i6$i = ($16|0)==(0);
   if ($not$$i$i$i6$i) {
    ___resumeException($13|0);
    // unreachable;
   }
   $17 = HEAP32[$1>>2]|0;
   _free($17);
   ___resumeException($13|0);
   // unreachable;
  }
 } while(0);
 $10 = ((($0)) + 8|0);
 $11 = HEAP32[$10>>2]|0;
 $not$$i$i$i$i = ($11|0)==(0);
 if (!($not$$i$i$i$i)) {
  $12 = HEAP32[$1>>2]|0;
  _free($12);
 }
 $18 = ((($0)) + 24|0);
 $19 = HEAP32[$18>>2]|0;
 $not$$i$i$i$i1 = ($19|0)==(0);
 if (!($not$$i$i$i$i1)) {
  $20 = ((($0)) + 20|0);
  $21 = HEAP32[$20>>2]|0;
  _free($21);
 }
 $22 = ((($0)) + 36|0);
 $23 = HEAP32[$22>>2]|0;
 $not$$i$i$i$i4 = ($23|0)==(0);
 if ($not$$i$i$i$i4) {
  return;
 }
 $24 = ((($0)) + 32|0);
 $25 = HEAP32[$24>>2]|0;
 _free($25);
 return;
}
function __ZN4drop17hef327981beb78ddcE($0) {
 $0 = $0|0;
 var $$idx$val$i$i = 0, $$idx2$val$i$i = 0, $$idx3$val$i$i = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[$0>>2]|0;
 $2 = HEAP32[$1>>2]|0;
 $3 = (($2) + -1)|0;
 HEAP32[$1>>2] = $3;
 $$idx$val$i$i = HEAP32[$0>>2]|0;
 $4 = HEAP32[$$idx$val$i$i>>2]|0;
 $5 = ($4|0)==(0);
 if (!($5)) {
  return;
 }
 $6 = ((($1)) + 12|0);
 __ZN4drop17h5e5a688e2f4a74b7E($6);
 $$idx3$val$i$i = HEAP32[$0>>2]|0;
 $7 = ((($$idx3$val$i$i)) + 4|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = (($8) + -1)|0;
 HEAP32[$7>>2] = $9;
 $$idx2$val$i$i = HEAP32[$0>>2]|0;
 $10 = ((($$idx2$val$i$i)) + 4|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = ($11|0)==(0);
 if (!($12)) {
  return;
 }
 _free($1);
 return;
}
function __ZN4drop17hfff8ac0b247dd822E($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZN53__LT__RF__u27_a_u20_T_u20_as_u20_core__fmt__Debug_GT_3fmt17h1b7acfd18e094fa5E($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[$0>>2]|0;
 $3 = (__ZN4core3fmt3num54__LT_impl_u20_core__fmt__Display_u20_for_u20_usize_GT_3fmt17hfc58b44c96803197E($2,$1)|0);
 return ($3|0);
}
function __ZN54__LT_collections__binary_heap__BinaryHeap_LT_T_GT__GT_7sift_up17h0ad6cf0e409ee868E($$0$0$0$0$0$0$val,$$0$0$1$val,$0) {
 $$0$0$0$0$0$0$val = $$0$0$0$0$0$0$val|0;
 $$0$0$1$val = $$0$0$1$val|0;
 $0 = $0|0;
 var $$1$i$i$i$i = 0, $$2$i$i$i$i = 0, $1 = 0, $10 = 0.0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $_0$sroa$0$0$insert$insert$i$i$i$i = 0, $_29$val$idx = 0, $_29$val$idx$val = 0.0, $_5$sroa$0$0$extract$trunc$i$i = 0;
 var $_5$sroa$4$0$extract$shift$mask$i$i = 0, $hole$sroa$18$0$lcssa = 0, $hole$sroa$18$035 = 0, $not$or$cond$i$i = 0, $notlhs$i$i = 0, $notrhs$i$i = 0, $switch2tmp$i$i$i7 = 0, $switchtmp$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($$0$0$1$val>>>0)>($0>>>0);
 if (!($1)) {
  __ZN4core9panicking18panic_bounds_check17hd14a5808e41829e9E(11617,112,897,$0,$$0$0$1$val);
  // unreachable;
 }
 $2 = (($$0$0$0$0$0$0$val) + ($0<<3)|0);
 $3 = $2;
 $4 = $3;
 $5 = HEAP32[$4>>2]|0;
 $6 = (($3) + 4)|0;
 $7 = $6;
 $8 = HEAP32[$7>>2]|0;
 $9 = ($0|0)==(0);
 L4: do {
  if ($9) {
   $hole$sroa$18$0$lcssa = 0;
  } else {
   $switchtmp$i$i = ($5|0)==(0);
   $10 = (HEAP32[tempDoublePtr>>2]=$8,+HEAPF32[tempDoublePtr>>2]);
   if ($switchtmp$i$i) {
    __THREW__ = 0;
    invoke_vi(220,(6500|0));
    $11 = __THREW__; __THREW__ = 0;
    $12 = ___cxa_find_matching_catch_2()|0;
    $13 = tempRet0;
    __ZN4core9panicking5panic17ha7507e8e32961bfeE(6500);
    // unreachable;
   } else {
    $hole$sroa$18$035 = $0;
   }
   while(1) {
    $14 = (($hole$sroa$18$035) + -1)|0;
    $15 = $14 >>> 1;
    $_29$val$idx = (((($$0$0$0$0$0$0$val) + ($15<<3)|0)) + 4|0);
    $_29$val$idx$val = +HEAPF32[$_29$val$idx>>2];
    $16 = $10 <= $_29$val$idx$val;
    $17 = $10 >= $_29$val$idx$val;
    $$1$i$i$i$i = $17&1;
    $$2$i$i$i$i = $17 ? 256 : 0;
    $18 = $17 ? 1 : -255;
    $19 = $$2$i$i$i$i | $$1$i$i$i$i;
    $_0$sroa$0$0$insert$insert$i$i$i$i = $16 ? $18 : $19;
    $_5$sroa$0$0$extract$trunc$i$i = $_0$sroa$0$0$insert$insert$i$i$i$i&255;
    $_5$sroa$4$0$extract$shift$mask$i$i = $_0$sroa$0$0$insert$insert$i$i$i$i & -256;
    $notlhs$i$i = ($_5$sroa$0$0$extract$trunc$i$i<<24>>24)!=(0);
    $notrhs$i$i = ($_5$sroa$4$0$extract$shift$mask$i$i<<16>>16)!=(256);
    $not$or$cond$i$i = $notrhs$i$i & $notlhs$i$i;
    if ($not$or$cond$i$i) {
     $hole$sroa$18$0$lcssa = $hole$sroa$18$035;
     break L4;
    }
    $20 = (($$0$0$0$0$0$0$val) + ($15<<3)|0);
    $21 = (($$0$0$0$0$0$0$val) + ($hole$sroa$18$035<<3)|0);
    $22 = $20;
    $23 = $22;
    $24 = HEAP32[$23>>2]|0;
    $25 = (($22) + 4)|0;
    $26 = $25;
    $27 = HEAP32[$26>>2]|0;
    $28 = $21;
    $29 = $28;
    HEAP32[$29>>2] = $24;
    $30 = (($28) + 4)|0;
    $31 = $30;
    HEAP32[$31>>2] = $27;
    $32 = ($15|0)==(0);
    if ($32) {
     $hole$sroa$18$0$lcssa = 0;
     break;
    } else {
     $hole$sroa$18$035 = $15;
    }
   }
  }
 } while(0);
 $switch2tmp$i$i$i7 = ($5|0)==(0);
 if ($switch2tmp$i$i$i7) {
  __ZN4core9panicking5panic17ha7507e8e32961bfeE(6500);
  // unreachable;
 } else {
  $33 = (($$0$0$0$0$0$0$val) + ($hole$sroa$18$0$lcssa<<3)|0);
  HEAP32[$33>>2] = $5;
  $34 = (((($$0$0$0$0$0$0$val) + ($hole$sroa$18$0$lcssa<<3)|0)) + 4|0);
  HEAP32[$34>>2] = $8;
  return;
 }
}
function __ZN55__LT__RF__u27_a_u20_T_u20_as_u20_core__fmt__Display_GT_3fmt17h0070a87612600aa5E($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[$0>>2]|0;
 $3 = ((($0)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (__ZN4core3fmt9Formatter3pad17hd3e8d63fceae72f6E($1,$2,$4)|0);
 return ($5|0);
}
function __ZN55__LT_ncollide_utils__data__vec_map__VecMap_LT_V_GT__GT_6insert17h0d8c60ac9e2f91e2E($0,$1,$2,$$0$0$0$val,$$0$1$0$0$0$val,$$0$2$val) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $$0$0$0$val = $$0$0$0$val|0;
 $$0$1$0$0$0$val = $$0$1$0$0$0$val|0;
 $$0$2$val = $$0$2$val|0;
 var $$$i$i$i$i = 0, $$arith = 0, $$arith2 = 0, $$arith6 = 0, $$idx = 0, $$idx$i$i$i$i = 0, $$idx$val = 0, $$idx$val$i$i$i$i = 0, $$idx8$val = 0, $$idx9$val = 0, $$in$i$i$i = 0, $$overflow = 0, $$overflow3 = 0, $$overflow7 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0;
 var $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0;
 var $35 = 0, $36 = 0, $37 = 0, $38 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $_0$0$sroa$speculated$i$i$i$i$i$i$i = 0, $_29$sroa$0$sroa$4$0$_29$sroa$0$0$$sroa_cast19$sroa_idx42 = 0, $_29$sroa$0$sroa$5$0$_29$sroa$0$0$$sroa_cast19$sroa_idx44 = 0, $_31$sroa$0$sroa$4$0$_31$sroa$0$0$_9$sroa$0$0$$sroa_cast3$i$sroa_cast$sroa_idx65$i$i$i = 0, $ptr$0$i$i$i$i$i = 0, $src$sroa$0$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $src$sroa$0$i = sp;
 $$idx = ((($1)) + 8|0);
 $$idx$val = HEAP32[$$idx>>2]|0;
 $3 = ($$idx$val>>>0)>($2>>>0);
 L1: do {
  if ($3) {
   $$idx9$val = $$idx$val;
   label = 20;
  } else {
   $5 = (($2) - ($$idx$val))|0;
   $6 = (($5) + 1)|0;
   $7 = ($6|0)==(0);
   if ($7) {
    $$idx9$val = $$idx$val;
    label = 20;
   } else {
    $$idx$i$i$i$i = ((($1)) + 4|0);
    $$in$i$i$i = 0;$9 = $$idx$val;
    while(1) {
     $8 = (($$in$i$i$i) + 1)|0;
     $$idx$val$i$i$i$i = HEAP32[$$idx$i$i$i$i>>2]|0;
     $10 = ($9|0)==($$idx$val$i$i$i$i|0);
     if ($10) {
      $11 = (($6) - ($8))|0;
      $$arith2 = (($11) + 1)|0;
      $$overflow3 = ($11>>>0)>(4294967294);
      $$$i$i$i$i = $$overflow3 ? -1 : $$arith2;
      $12 = ($$$i$i$i$i|0)==(0);
      if (!($12)) {
       $$arith = (($9) + ($$$i$i$i$i))|0;
       $$overflow = ($$arith>>>0)<($9>>>0);
       if ($$overflow) {
        label = 8;
        break;
       }
       $14 = $9 << 1;
       $15 = ($$arith>>>0)>=($14>>>0);
       $_0$0$sroa$speculated$i$i$i$i$i$i$i = $15 ? $$arith : $14;
       $$arith6 = ($_0$0$sroa$speculated$i$i$i$i$i$i$i*12)|0;
       $$overflow7 = ($_0$0$sroa$speculated$i$i$i$i$i$i$i>>>0)>(357913941);
       if ($$overflow7) {
        label = 10;
        break;
       }
       $17 = ($$arith6|0)<(0);
       if ($17) {
        label = 12;
        break;
       }
       $19 = ($9|0)==(0);
       if ($19) {
        $20 = (_malloc($$arith6)|0);
        $ptr$0$i$i$i$i$i = $20;
       } else {
        $21 = HEAP32[$1>>2]|0;
        $22 = (_realloc($21,$$arith6)|0);
        $ptr$0$i$i$i$i$i = $22;
       }
       $23 = ($ptr$0$i$i$i$i$i|0)==(0|0);
       if ($23) {
        label = 17;
        break;
       }
       HEAP32[$1>>2] = $ptr$0$i$i$i$i$i;
       HEAP32[$$idx$i$i$i$i>>2] = $_0$0$sroa$speculated$i$i$i$i$i$i$i;
      }
     }
     $25 = HEAP32[$1>>2]|0;
     $_31$sroa$0$sroa$4$0$_31$sroa$0$0$_9$sroa$0$0$$sroa_cast3$i$sroa_cast$sroa_idx65$i$i$i = (((($25) + (($9*12)|0)|0)) + 4|0);
     HEAP32[$_31$sroa$0$sroa$4$0$_31$sroa$0$0$_9$sroa$0$0$$sroa_cast3$i$sroa_cast$sroa_idx65$i$i$i>>2] = 0;
     $26 = (($9) + 1)|0;
     HEAP32[$$idx>>2] = $26;
     $27 = ($6>>>0)>($8>>>0);
     if ($27) {
      $$in$i$i$i = $8;$9 = $26;
     } else {
      $$idx9$val = $26;
      label = 20;
      break L1;
     }
    }
    if ((label|0) == 8) {
     __THREW__ = 0;
     invoke_vii(219,(11172|0),17);
     $13 = __THREW__; __THREW__ = 0;
     break;
    }
    else if ((label|0) == 10) {
     __THREW__ = 0;
     invoke_vii(219,(11172|0),17);
     $16 = __THREW__; __THREW__ = 0;
     break;
    }
    else if ((label|0) == 12) {
     __THREW__ = 0;
     invoke_vi(220,(6432|0));
     $18 = __THREW__; __THREW__ = 0;
     break;
    }
    else if ((label|0) == 17) {
     __THREW__ = 0;
     invoke_v(210);
     $24 = __THREW__; __THREW__ = 0;
     break;
    }
   }
  }
 } while(0);
 do {
  if ((label|0) == 20) {
   $28 = ($$idx9$val>>>0)>($2>>>0);
   if ($28) {
    $$idx8$val = HEAP32[$1>>2]|0;
    $30 = (($$idx8$val) + (($2*12)|0)|0);
    ;HEAP32[$src$sroa$0$i>>2]=HEAP32[$30>>2]|0;HEAP32[$src$sroa$0$i+4>>2]=HEAP32[$30+4>>2]|0;HEAP32[$src$sroa$0$i+8>>2]=HEAP32[$30+8>>2]|0;
    HEAP32[$30>>2] = $$0$0$0$val;
    $_29$sroa$0$sroa$4$0$_29$sroa$0$0$$sroa_cast19$sroa_idx42 = (((($$idx8$val) + (($2*12)|0)|0)) + 4|0);
    HEAP32[$_29$sroa$0$sroa$4$0$_29$sroa$0$0$$sroa_cast19$sroa_idx42>>2] = $$0$1$0$0$0$val;
    $_29$sroa$0$sroa$5$0$_29$sroa$0$0$$sroa_cast19$sroa_idx44 = (((($$idx8$val) + (($2*12)|0)|0)) + 8|0);
    HEAP32[$_29$sroa$0$sroa$5$0$_29$sroa$0$0$$sroa_cast19$sroa_idx44>>2] = $$0$2$val;
    ;HEAP32[$0>>2]=HEAP32[$src$sroa$0$i>>2]|0;HEAP32[$0+4>>2]=HEAP32[$src$sroa$0$i+4>>2]|0;HEAP32[$0+8>>2]=HEAP32[$src$sroa$0$i+8>>2]|0;
    STACKTOP = sp;return;
   } else {
    __THREW__ = 0;
    invoke_viiiii(214,(12236|0),104,1358,($2|0),($$idx9$val|0));
    $29 = __THREW__; __THREW__ = 0;
    break;
   }
  }
 } while(0);
 $4 = ___cxa_find_matching_catch_2()|0;
 $31 = tempRet0;
 $32 = HEAP32[$$0$1$0$0$0$val>>2]|0;
 $33 = (($32) + -1)|0;
 HEAP32[$$0$1$0$0$0$val>>2] = $33;
 $34 = ($33|0)==(0);
 if (!($34)) {
  ___resumeException($4|0);
  // unreachable;
 }
 $35 = ((($$0$1$0$0$0$val)) + 4|0);
 $36 = HEAP32[$35>>2]|0;
 $37 = (($36) + -1)|0;
 HEAP32[$35>>2] = $37;
 $38 = ($37|0)==(0);
 if (!($38)) {
  ___resumeException($4|0);
  // unreachable;
 }
 _free($$0$1$0$0$0$val);
 ___resumeException($4|0);
 // unreachable;
}
function __ZN55__LT_ncollide_utils__data__vec_map__VecMap_LT_V_GT__GT_6insert17hdb87c82b2b7a7ff7E($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$$i$i$i$i = 0, $$arith = 0, $$arith2 = 0, $$arith6 = 0, $$idx = 0, $$idx$i$i$i$i = 0, $$idx$val = 0, $$idx$val$i$i$i$i11 = 0, $$idx1$i$i$i$i$i$i$i = 0, $$idx1$val$i$i$i$i$i$i$i = 0, $$idx1$val$val$i$i$i$i$i$i$i = 0, $$idx10$val = 0, $$idx10$val33 = 0, $$idx3$val$i$i = 0, $$idx9$val = 0, $$in$i$i$i = 0, $$overflow = 0, $$overflow3 = 0, $$overflow7 = 0, $10 = 0;
 var $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0;
 var $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0;
 var $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0;
 var $68 = 0, $7 = 0, $8 = 0, $9 = 0, $_0$0$sroa$speculated$i$i$i$i$i$i$i = 0, $_6$i$sroa$7$i$i = 0, $_6$i$sroa$9$i$i = 0, $element$i$i$sroa$0$0$$sroa_cast26$pre$phi$iZZZZZZZZ2D = 0, $element$i$i$sroa$0$i = 0, $element$i$i$sroa$5$0$_31$sroa$0$0$_9$sroa$0$0$$sroa_cast3$i$sroa_cast$i$i$sroa_idx18$i = 0, $element$i$i$sroa$6$0$$sroa_cast23$pre$phi$iZZZZZZZZ2D = 0, $element$i$i$sroa$6$0$_31$sroa$0$0$_9$sroa$0$0$$sroa_cast3$i$sroa_cast$i$i$sroa_idx$i = 0, $element$i$i$sroa$6$i = 0, $ptr$0$i$i$i$i$i = 0, $src$sroa$0$i = 0, $switchtmp$i$i$i$i$i$i = 0, $value = 0, dest = 0, label = 0, sp = 0;
 var src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 256|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(256|0);
 $src$sroa$0$i = sp + 128|0;
 $_6$i$sroa$7$i$i = sp + 224|0;
 $_6$i$sroa$9$i$i = sp + 192|0;
 $element$i$i$sroa$0$i = sp + 96|0;
 $element$i$i$sroa$6$i = sp + 64|0;
 $value = sp;
 dest=$value; src=$3; stop=dest+64|0; do { HEAP32[dest>>2]=HEAP32[src>>2]|0; dest=dest+4|0; src=src+4|0; } while ((dest|0) < (stop|0));
 $$idx = ((($1)) + 8|0);
 $$idx$val = HEAP32[$$idx>>2]|0;
 $4 = ($$idx$val>>>0)>($2>>>0);
 L1: do {
  if ($4) {
   $$idx10$val = $$idx$val;
   label = 22;
  } else {
   $6 = (($2) - ($$idx$val))|0;
   $7 = (($6) + 1)|0;
   $8 = ($7|0)==(0);
   L3: do {
    if ($8) {
     $$idx10$val33 = $$idx$val;$element$i$i$sroa$0$0$$sroa_cast26$pre$phi$iZZZZZZZZ2D = $element$i$i$sroa$0$i;$element$i$i$sroa$6$0$$sroa_cast23$pre$phi$iZZZZZZZZ2D = $element$i$i$sroa$6$i;
    } else {
     $$idx$i$i$i$i = ((($1)) + 4|0);
     $$in$i$i$i = 0;$10 = $$idx$val;
     while(1) {
      $9 = (($$in$i$i$i) + 1)|0;
      ;HEAP32[$element$i$i$sroa$0$i>>2]=HEAP32[$_6$i$sroa$7$i$i>>2]|0;HEAP32[$element$i$i$sroa$0$i+4>>2]=HEAP32[$_6$i$sroa$7$i$i+4>>2]|0;HEAP32[$element$i$i$sroa$0$i+8>>2]=HEAP32[$_6$i$sroa$7$i$i+8>>2]|0;HEAP32[$element$i$i$sroa$0$i+12>>2]=HEAP32[$_6$i$sroa$7$i$i+12>>2]|0;HEAP32[$element$i$i$sroa$0$i+16>>2]=HEAP32[$_6$i$sroa$7$i$i+16>>2]|0;HEAP32[$element$i$i$sroa$0$i+20>>2]=HEAP32[$_6$i$sroa$7$i$i+20>>2]|0;HEAP32[$element$i$i$sroa$0$i+24>>2]=HEAP32[$_6$i$sroa$7$i$i+24>>2]|0;
      ;HEAP32[$element$i$i$sroa$6$i>>2]=HEAP32[$_6$i$sroa$9$i$i>>2]|0;HEAP32[$element$i$i$sroa$6$i+4>>2]=HEAP32[$_6$i$sroa$9$i$i+4>>2]|0;HEAP32[$element$i$i$sroa$6$i+8>>2]=HEAP32[$_6$i$sroa$9$i$i+8>>2]|0;HEAP32[$element$i$i$sroa$6$i+12>>2]=HEAP32[$_6$i$sroa$9$i$i+12>>2]|0;HEAP32[$element$i$i$sroa$6$i+16>>2]=HEAP32[$_6$i$sroa$9$i$i+16>>2]|0;HEAP32[$element$i$i$sroa$6$i+20>>2]=HEAP32[$_6$i$sroa$9$i$i+20>>2]|0;HEAP32[$element$i$i$sroa$6$i+24>>2]=HEAP32[$_6$i$sroa$9$i$i+24>>2]|0;HEAP32[$element$i$i$sroa$6$i+28>>2]=HEAP32[$_6$i$sroa$9$i$i+28>>2]|0;
      $$idx$val$i$i$i$i11 = HEAP32[$$idx$i$i$i$i>>2]|0;
      $11 = ($10|0)==($$idx$val$i$i$i$i11|0);
      if ($11) {
       $12 = (($7) - ($9))|0;
       $$arith2 = (($12) + 1)|0;
       $$overflow3 = ($12>>>0)>(4294967294);
       $$$i$i$i$i = $$overflow3 ? -1 : $$arith2;
       $13 = ($$$i$i$i$i|0)==(0);
       if (!($13)) {
        $$arith = (($10) + ($$$i$i$i$i))|0;
        $$overflow = ($$arith>>>0)<($10>>>0);
        if ($$overflow) {
         label = 9;
         break;
        }
        $15 = $10 << 1;
        $16 = ($$arith>>>0)>=($15>>>0);
        $_0$0$sroa$speculated$i$i$i$i$i$i$i = $16 ? $$arith : $15;
        $$arith6 = $_0$0$sroa$speculated$i$i$i$i$i$i$i<<6;
        $$overflow7 = ($_0$0$sroa$speculated$i$i$i$i$i$i$i>>>0)>(67108863);
        if ($$overflow7) {
         label = 11;
         break;
        }
        $18 = ($$arith6|0)<(0);
        if ($18) {
         label = 13;
         break;
        }
        $20 = ($10|0)==(0);
        if ($20) {
         $21 = (_malloc($$arith6)|0);
         $ptr$0$i$i$i$i$i = $21;
        } else {
         $22 = HEAP32[$1>>2]|0;
         $23 = (_realloc($22,$$arith6)|0);
         $ptr$0$i$i$i$i$i = $23;
        }
        $24 = ($ptr$0$i$i$i$i$i|0)==(0|0);
        if ($24) {
         label = 18;
         break;
        }
        HEAP32[$1>>2] = $ptr$0$i$i$i$i$i;
        HEAP32[$$idx$i$i$i$i>>2] = $_0$0$sroa$speculated$i$i$i$i$i$i$i;
       }
      }
      $26 = HEAP32[$1>>2]|0;
      $27 = (($26) + ($10<<6)|0);
      ;HEAP32[$27>>2]=HEAP32[$element$i$i$sroa$0$i>>2]|0;HEAP32[$27+4>>2]=HEAP32[$element$i$i$sroa$0$i+4>>2]|0;HEAP32[$27+8>>2]=HEAP32[$element$i$i$sroa$0$i+8>>2]|0;HEAP32[$27+12>>2]=HEAP32[$element$i$i$sroa$0$i+12>>2]|0;HEAP32[$27+16>>2]=HEAP32[$element$i$i$sroa$0$i+16>>2]|0;HEAP32[$27+20>>2]=HEAP32[$element$i$i$sroa$0$i+20>>2]|0;HEAP32[$27+24>>2]=HEAP32[$element$i$i$sroa$0$i+24>>2]|0;
      $element$i$i$sroa$5$0$_31$sroa$0$0$_9$sroa$0$0$$sroa_cast3$i$sroa_cast$i$i$sroa_idx18$i = (((($26) + ($10<<6)|0)) + 28|0);
      HEAP32[$element$i$i$sroa$5$0$_31$sroa$0$0$_9$sroa$0$0$$sroa_cast3$i$sroa_cast$i$i$sroa_idx18$i>>2] = 0;
      $element$i$i$sroa$6$0$_31$sroa$0$0$_9$sroa$0$0$$sroa_cast3$i$sroa_cast$i$i$sroa_idx$i = (((($26) + ($10<<6)|0)) + 32|0);
      ;HEAP32[$element$i$i$sroa$6$0$_31$sroa$0$0$_9$sroa$0$0$$sroa_cast3$i$sroa_cast$i$i$sroa_idx$i>>2]=HEAP32[$element$i$i$sroa$6$i>>2]|0;HEAP32[$element$i$i$sroa$6$0$_31$sroa$0$0$_9$sroa$0$0$$sroa_cast3$i$sroa_cast$i$i$sroa_idx$i+4>>2]=HEAP32[$element$i$i$sroa$6$i+4>>2]|0;HEAP32[$element$i$i$sroa$6$0$_31$sroa$0$0$_9$sroa$0$0$$sroa_cast3$i$sroa_cast$i$i$sroa_idx$i+8>>2]=HEAP32[$element$i$i$sroa$6$i+8>>2]|0;HEAP32[$element$i$i$sroa$6$0$_31$sroa$0$0$_9$sroa$0$0$$sroa_cast3$i$sroa_cast$i$i$sroa_idx$i+12>>2]=HEAP32[$element$i$i$sroa$6$i+12>>2]|0;HEAP32[$element$i$i$sroa$6$0$_31$sroa$0$0$_9$sroa$0$0$$sroa_cast3$i$sroa_cast$i$i$sroa_idx$i+16>>2]=HEAP32[$element$i$i$sroa$6$i+16>>2]|0;HEAP32[$element$i$i$sroa$6$0$_31$sroa$0$0$_9$sroa$0$0$$sroa_cast3$i$sroa_cast$i$i$sroa_idx$i+20>>2]=HEAP32[$element$i$i$sroa$6$i+20>>2]|0;HEAP32[$element$i$i$sroa$6$0$_31$sroa$0$0$_9$sroa$0$0$$sroa_cast3$i$sroa_cast$i$i$sroa_idx$i+24>>2]=HEAP32[$element$i$i$sroa$6$i+24>>2]|0;HEAP32[$element$i$i$sroa$6$0$_31$sroa$0$0$_9$sroa$0$0$$sroa_cast3$i$sroa_cast$i$i$sroa_idx$i+28>>2]=HEAP32[$element$i$i$sroa$6$i+28>>2]|0;
      $28 = (($10) + 1)|0;
      HEAP32[$$idx>>2] = $28;
      $29 = ($7>>>0)>($9>>>0);
      if ($29) {
       $$in$i$i$i = $9;$10 = $28;
      } else {
       $$idx10$val33 = $28;$element$i$i$sroa$0$0$$sroa_cast26$pre$phi$iZZZZZZZZ2D = $element$i$i$sroa$0$i;$element$i$i$sroa$6$0$$sroa_cast23$pre$phi$iZZZZZZZZ2D = $element$i$i$sroa$6$i;
       break L3;
      }
     }
     if ((label|0) == 9) {
      __THREW__ = 0;
      invoke_vii(219,(11172|0),17);
      $14 = __THREW__; __THREW__ = 0;
      break L1;
     }
     else if ((label|0) == 11) {
      __THREW__ = 0;
      invoke_vii(219,(11172|0),17);
      $17 = __THREW__; __THREW__ = 0;
      break L1;
     }
     else if ((label|0) == 13) {
      __THREW__ = 0;
      invoke_vi(220,(6432|0));
      $19 = __THREW__; __THREW__ = 0;
      break L1;
     }
     else if ((label|0) == 18) {
      __THREW__ = 0;
      invoke_v(210);
      $25 = __THREW__; __THREW__ = 0;
      break L1;
     }
    }
   } while(0);
   $$idx10$val = $$idx10$val33;
   label = 22;
  }
 } while(0);
 do {
  if ((label|0) == 22) {
   $30 = ($$idx10$val>>>0)>($2>>>0);
   if ($30) {
    $$idx9$val = HEAP32[$1>>2]|0;
    $32 = (($$idx9$val) + ($2<<6)|0);
    dest=$src$sroa$0$i; src=$32; stop=dest+64|0; do { HEAP32[dest>>2]=HEAP32[src>>2]|0; dest=dest+4|0; src=src+4|0; } while ((dest|0) < (stop|0));
    dest=$32; src=$value; stop=dest+64|0; do { HEAP32[dest>>2]=HEAP32[src>>2]|0; dest=dest+4|0; src=src+4|0; } while ((dest|0) < (stop|0));
    dest=$0; src=$src$sroa$0$i; stop=dest+64|0; do { HEAP32[dest>>2]=HEAP32[src>>2]|0; dest=dest+4|0; src=src+4|0; } while ((dest|0) < (stop|0));
    STACKTOP = sp;return;
   } else {
    __THREW__ = 0;
    invoke_viiiii(214,(12236|0),104,1358,($2|0),($$idx10$val|0));
    $31 = __THREW__; __THREW__ = 0;
    break;
   }
  }
 } while(0);
 $5 = ___cxa_find_matching_catch_2()|0;
 $33 = tempRet0;
 $34 = ((($value)) + 28|0);
 $35 = HEAP32[$34>>2]|0;
 $36 = HEAP32[$35>>2]|0;HEAP32[$35>>2] = (($36-1)|0);
 $37 = ($36|0)==(1);
 if ($37) {
  /* fence */;
  __ZN33__LT_alloc__arc__Arc_LT_T_GT__GT_9drop_slow17hb3767c2311d7d383E($34);
 }
 $38 = ((($value)) + 52|0);
 $39 = HEAP32[$38>>2]|0;
 switch ($39|0) {
 case 0:  {
  $40 = ((($value)) + 56|0);
  $41 = HEAP32[$40>>2]|0;
  $42 = HEAP32[$41>>2]|0;
  $43 = (($42) + -1)|0;
  HEAP32[$41>>2] = $43;
  $44 = ($43|0)==(0);
  if (!($44)) {
   ___resumeException($5|0);
   // unreachable;
  }
  $45 = ((($41)) + 16|0);
  $46 = HEAP32[$45>>2]|0;
  $47 = HEAP32[$46>>2]|0;HEAP32[$46>>2] = (($47-1)|0);
  $48 = ($47|0)==(1);
  if ($48) {
   /* fence */;
   __ZN33__LT_alloc__arc__Arc_LT_T_GT__GT_9drop_slow17hb3767c2311d7d383E($45);
  }
  $49 = ((($41)) + 172|0);
  $50 = HEAP32[$49>>2]|0;
  $switchtmp$i$i$i$i$i$i = ($50|0)==(0|0);
  if (!($switchtmp$i$i$i$i$i$i)) {
   $$idx1$i$i$i$i$i$i$i = ((($41)) + 176|0);
   $$idx1$val$i$i$i$i$i$i$i = HEAP32[$$idx1$i$i$i$i$i$i$i>>2]|0;
   $$idx1$val$val$i$i$i$i$i$i$i = HEAP32[$$idx1$val$i$i$i$i$i$i$i>>2]|0;
   FUNCTION_TABLE_vi[$$idx1$val$val$i$i$i$i$i$i$i & 511]($50);
   $51 = HEAP32[$$idx1$i$i$i$i$i$i$i>>2]|0;
   $52 = ((($51)) + 4|0);
   $53 = HEAP32[$52>>2]|0;
   $54 = ($53|0)==(0);
   if (!($54)) {
    _free($50);
   }
  }
  $$idx3$val$i$i = HEAP32[$40>>2]|0;
  $55 = ((($$idx3$val$i$i)) + 4|0);
  $56 = HEAP32[$55>>2]|0;
  $57 = (($56) + -1)|0;
  HEAP32[$55>>2] = $57;
  $58 = ($57|0)==(0);
  if (!($58)) {
   ___resumeException($5|0);
   // unreachable;
  }
  _free($41);
  ___resumeException($5|0);
  // unreachable;
  break;
 }
 case 1:  {
  $59 = ((($value)) + 56|0);
  $60 = HEAP32[$59>>2]|0;
  $61 = HEAP32[$60>>2]|0;
  $62 = (($61) + -1)|0;
  HEAP32[$60>>2] = $62;
  $63 = ($62|0)==(0);
  if (!($63)) {
   ___resumeException($5|0);
   // unreachable;
  }
  $64 = ((($60)) + 12|0);
  __ZN4drop17hd4af0298b60386b8E($64);
  $65 = ((($60)) + 4|0);
  $66 = HEAP32[$65>>2]|0;
  $67 = (($66) + -1)|0;
  HEAP32[$65>>2] = $67;
  $68 = ($67|0)==(0);
  if (!($68)) {
   ___resumeException($5|0);
   // unreachable;
  }
  _free($60);
  ___resumeException($5|0);
  // unreachable;
  break;
 }
 default: {
  ___resumeException($5|0);
  // unreachable;
 }
 }
}
function __ZN59__LT_nphysics2d__object__rigid_body__RigidBody_LT_N_GT__GT_3new17h99e88e4bbce651f1E($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = +$3;
 var $10 = 0, $11 = 0, $12 = 0.0, $13 = 0, $14 = 0.0, $15 = 0.0, $16 = 0, $17 = 0.0, $18 = 0.0, $19 = 0.0, $20 = 0.0, $21 = 0.0, $22 = 0.0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $_15$sroa$0$0 = 0.0;
 var $_15$sroa$11$0 = 0, $_15$sroa$14$0 = 0, $_15$sroa$19$0 = 0, $_15$sroa$22$sroa$2$0 = 0, $_15$sroa$22$sroa$7$0 = 0, $_15$sroa$5$0 = 0.0, $_15$sroa$8$0 = 0.0, $mass_properties$sroa$0$0$copyload = 0, $mass_properties$sroa$4$0$copyload155 = 0.0, $mass_properties$sroa$5$0$$sroa_idx154 = 0, $mass_properties$sroa$5$0$copyload = 0.0, $mass_properties$sroa$6$0$$sroa_idx157 = 0, $mass_properties$sroa$6$0$copyload = 0.0, $mass_properties$sroa$7$0$$sroa_idx160 = 0, $mass_properties$sroa$7$0$copyload256 = 0.0, $phitmp = 0, $res$sroa$10$0$$sroa_idx = 0, $res$sroa$11$0$$sroa_idx = 0, $res$sroa$12$0$$sroa_idx = 0, $res$sroa$14$0$$sroa_idx = 0;
 var $res$sroa$15$0$$sroa_idx = 0, $res$sroa$1579$0$$sroa_idx = 0, $res$sroa$16$0$$sroa_idx = 0, $res$sroa$17$0$$sroa_idx = 0, $res$sroa$18$0$$sroa_idx = 0, $res$sroa$19$0$$sroa_idx = 0, $res$sroa$20$0$$sroa_idx = 0, $res$sroa$21$0$$sroa_idx = 0, $res$sroa$22$0$$sroa_idx = 0, $res$sroa$23$0$$sroa_idx = 0, $res$sroa$24$0$$sroa_idx = 0, $res$sroa$25$0$$sroa_idx = 0, $res$sroa$26$0$$sroa_idx = 0, $res$sroa$27$0$$sroa_idx = 0, $res$sroa$28$0$$sroa_idx = 0, $res$sroa$29$0$$sroa_idx = 0, $res$sroa$459$0$$sroa_idx = 0, $res$sroa$5$0$$sroa_idx = 0, $res$sroa$6$0$$sroa_idx65 = 0, $res$sroa$7$0$$sroa_idx = 0;
 var $res$sroa$8$0$$sroa_idx = 0, $res$sroa$9$0$$sroa_idx = 0, $shape = 0, $switch19 = 0, label = 0, sp = 0, temp_Float32x4_ptr = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $shape = sp;
 $4 = $1;
 HEAP32[$shape>>2] = $4;
 $mass_properties$sroa$0$0$copyload = HEAP32[$2>>2]|0;
 $mass_properties$sroa$5$0$$sroa_idx154 = ((($2)) + 8|0);
 $mass_properties$sroa$5$0$copyload = +HEAPF32[$mass_properties$sroa$5$0$$sroa_idx154>>2];
 $mass_properties$sroa$6$0$$sroa_idx157 = ((($2)) + 12|0);
 $mass_properties$sroa$6$0$copyload = +HEAPF32[$mass_properties$sroa$6$0$$sroa_idx157>>2];
 $mass_properties$sroa$7$0$$sroa_idx160 = ((($2)) + 16|0);
 $mass_properties$sroa$7$0$copyload256 = +HEAPF32[$mass_properties$sroa$7$0$$sroa_idx160>>2];
 $switch19 = ($mass_properties$sroa$0$0$copyload|0)==(0);
 do {
  if ($switch19) {
   $_15$sroa$0$0 = 0.0;$_15$sroa$11$0 = 0;$_15$sroa$14$0 = 1;$_15$sroa$19$0 = 0;$_15$sroa$22$sroa$2$0 = 805306367;$_15$sroa$22$sroa$7$0 = 805306368;$_15$sroa$5$0 = 0.0;$_15$sroa$8$0 = 0.0;
  } else {
   $6 = ((($2)) + 4|0);
   $mass_properties$sroa$4$0$copyload155 = +HEAPF32[$6>>2];
   $7 = $mass_properties$sroa$4$0$copyload155 == 0.0;
   if (!($7)) {
    $12 = (+Math_abs((+$mass_properties$sroa$7$0$copyload256)));
    $13 = $12 < 9.9999999747524271E-7;
    $14 = 1.0 / $mass_properties$sroa$7$0$copyload256;
    $15 = 1.0 / $mass_properties$sroa$4$0$copyload155;
    $16 = (HEAPF32[tempDoublePtr>>2]=$14,HEAP32[tempDoublePtr>>2]|0);
    $phitmp = $13 ? 0 : $16;
    $_15$sroa$0$0 = $15;$_15$sroa$11$0 = $phitmp;$_15$sroa$14$0 = 0;$_15$sroa$19$0 = 1;$_15$sroa$22$sroa$2$0 = 268435455;$_15$sroa$22$sroa$7$0 = 0;$_15$sroa$5$0 = $mass_properties$sroa$5$0$copyload;$_15$sroa$8$0 = $mass_properties$sroa$6$0$copyload;
    break;
   }
   __THREW__ = 0;
   invoke_viii(225,(11574|0),43,(5208|0));
   $8 = __THREW__; __THREW__ = 0;
   $5 = ___cxa_find_matching_catch_2()|0;
   $9 = tempRet0;
   $10 = HEAP32[$4>>2]|0;HEAP32[$4>>2] = (($10-1)|0);
   $11 = ($10|0)==(1);
   if (!($11)) {
    ___resumeException($5|0);
    // unreachable;
   }
   /* fence */;
   __ZN33__LT_alloc__arc__Arc_LT_T_GT__GT_9drop_slow17hb3767c2311d7d383E($shape);
   ___resumeException($5|0);
   // unreachable;
  }
 } while(0);
 $17 = $_15$sroa$8$0 * 0.0;
 $18 = $_15$sroa$5$0 + $17;
 $19 = $_15$sroa$5$0 * 0.0;
 $20 = $19 + $_15$sroa$8$0;
 $21 = $18 + 0.0;
 $22 = $20 + 0.0;
 HEAP8[$0>>0] = $_15$sroa$19$0;
 $res$sroa$459$0$$sroa_idx = ((($0)) + 4|0);
 HEAP32[$res$sroa$459$0$$sroa_idx>>2] = $1;
 $res$sroa$5$0$$sroa_idx = ((($0)) + 8|0);
 temp_Float32x4_ptr = $res$sroa$5$0$$sroa_idx;SIMD_Float32x4_store(HEAPU8, temp_Float32x4_ptr, SIMD_Float32x4(Math_fround(1.0),Math_fround(0.0),Math_fround(0.0),Math_fround(1.0)));
 $res$sroa$6$0$$sroa_idx65 = ((($0)) + 24|0);
 ;HEAP32[$res$sroa$6$0$$sroa_idx65>>2]=0|0;HEAP32[$res$sroa$6$0$$sroa_idx65+4>>2]=0|0;HEAP32[$res$sroa$6$0$$sroa_idx65+8>>2]=0|0;HEAP32[$res$sroa$6$0$$sroa_idx65+12>>2]=0|0;HEAP32[$res$sroa$6$0$$sroa_idx65+16>>2]=0|0;
 $res$sroa$7$0$$sroa_idx = ((($0)) + 44|0);
 HEAPF32[$res$sroa$7$0$$sroa_idx>>2] = $_15$sroa$0$0;
 $res$sroa$8$0$$sroa_idx = ((($0)) + 48|0);
 HEAP32[$res$sroa$8$0$$sroa_idx>>2] = $_15$sroa$11$0;
 $res$sroa$9$0$$sroa_idx = ((($0)) + 52|0);
 HEAP32[$res$sroa$9$0$$sroa_idx>>2] = $_15$sroa$11$0;
 $res$sroa$10$0$$sroa_idx = ((($0)) + 56|0);
 HEAPF32[$res$sroa$10$0$$sroa_idx>>2] = $_15$sroa$5$0;
 $res$sroa$11$0$$sroa_idx = ((($0)) + 60|0);
 HEAPF32[$res$sroa$11$0$$sroa_idx>>2] = $_15$sroa$8$0;
 $res$sroa$12$0$$sroa_idx = ((($0)) + 64|0);
 HEAPF32[$res$sroa$12$0$$sroa_idx>>2] = $21;
 $res$sroa$14$0$$sroa_idx = ((($0)) + 68|0);
 HEAPF32[$res$sroa$14$0$$sroa_idx>>2] = $22;
 $res$sroa$15$0$$sroa_idx = ((($0)) + 72|0);
 ;HEAP32[$res$sroa$15$0$$sroa_idx>>2]=0|0;HEAP32[$res$sroa$15$0$$sroa_idx+4>>2]=0|0;HEAP32[$res$sroa$15$0$$sroa_idx+8>>2]=0|0;HEAP32[$res$sroa$15$0$$sroa_idx+12>>2]=0|0;HEAP32[$res$sroa$15$0$$sroa_idx+16>>2]=0|0;HEAP32[$res$sroa$15$0$$sroa_idx+20>>2]=0|0;HEAP32[$res$sroa$15$0$$sroa_idx+24>>2]=0|0;HEAP32[$res$sroa$15$0$$sroa_idx+28>>2]=0|0;
 $res$sroa$1579$0$$sroa_idx = ((($0)) + 104|0);
 HEAPF32[$res$sroa$1579$0$$sroa_idx>>2] = 0.30000001192092896;
 $res$sroa$16$0$$sroa_idx = ((($0)) + 108|0);
 HEAPF32[$res$sroa$16$0$$sroa_idx>>2] = $3;
 $res$sroa$17$0$$sroa_idx = ((($0)) + 112|0);
 HEAP32[$res$sroa$17$0$$sroa_idx>>2] = 0;
 $res$sroa$18$0$$sroa_idx = ((($0)) + 116|0);
 HEAP32[$res$sroa$18$0$$sroa_idx>>2] = $_15$sroa$14$0;
 $res$sroa$19$0$$sroa_idx = ((($0)) + 120|0);
 HEAP32[$res$sroa$19$0$$sroa_idx>>2] = 2139095039;
 $res$sroa$20$0$$sroa_idx = ((($0)) + 124|0);
 HEAP32[$res$sroa$20$0$$sroa_idx>>2] = 1;
 $res$sroa$21$0$$sroa_idx = ((($0)) + 128|0);
 HEAPF32[$res$sroa$21$0$$sroa_idx>>2] = 0.10000000149011612;
 $res$sroa$22$0$$sroa_idx = ((($0)) + 132|0);
 HEAP32[$res$sroa$22$0$$sroa_idx>>2] = 1065353216;
 $res$sroa$23$0$$sroa_idx = ((($0)) + 136|0);
 HEAP32[$res$sroa$23$0$$sroa_idx>>2] = 1065353216;
 $res$sroa$24$0$$sroa_idx = ((($0)) + 140|0);
 HEAPF32[$res$sroa$24$0$$sroa_idx>>2] = 1.0;
 $res$sroa$25$0$$sroa_idx = ((($0)) + 144|0);
 HEAPF32[$res$sroa$25$0$$sroa_idx>>2] = 0.039999999105930328;
 $res$sroa$26$0$$sroa_idx = ((($0)) + 148|0);
 HEAP32[$res$sroa$26$0$$sroa_idx>>2] = $_15$sroa$22$sroa$2$0;
 $res$sroa$27$0$$sroa_idx = ((($0)) + 152|0);
 HEAP32[$res$sroa$27$0$$sroa_idx>>2] = 268435455;
 $res$sroa$28$0$$sroa_idx = ((($0)) + 156|0);
 HEAP32[$res$sroa$28$0$$sroa_idx>>2] = $_15$sroa$22$sroa$7$0;
 $res$sroa$29$0$$sroa_idx = ((($0)) + 160|0);
 HEAP32[$res$sroa$29$0$$sroa_idx>>2] = 0;
 STACKTOP = sp;return;
}
function __ZN64__LT_T_u20_as_u20_ncollide_geometry__shape__shape__GetTypeId_GT_7type_id17h615a9e94ede580dcE($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 tempRet0 = (162210410);
 return 391555669;
}
function __ZN64__LT_T_u20_as_u20_ncollide_geometry__shape__shape__GetTypeId_GT_7type_id17he8b0f34b9333fc88E($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 tempRet0 = (-1918276056);
 return -255454720;
}
function __ZN66__LT_collections__string__String_u20_as_u20_core__fmt__Display_GT_3fmt17h3959eb99769eafdcE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[$0>>2]|0;
 $3 = ((($0)) + 8|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (__ZN4core3fmt9Formatter3pad17hd3e8d63fceae72f6E($1,$2,$4)|0);
 return ($5|0);
}
function __ZN66__LT_std__collections__hash__table__RawTable_LT_K_C__u20_V_GT__GT_3new17hac8ab5db00a555aeE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$arith = 0, $$arith2 = 0, $$overflow = 0, $$overflow3 = 0, $$pre$phiZ2D = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $_11$sroa$4$0$$sroa_idx18 = 0, $_11$sroa$5$0$$sroa_idx20 = 0, $ret$sroa$0$0 = 0, $ret$sroa$8$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($1|0)==(0);
 do {
  if ($2) {
   $$pre$phiZ2D = 0;$ret$sroa$0$0 = 0;$ret$sroa$8$0 = (1);
  } else {
   $3 = $1 << 3;
   $4 = ($1*24)|0;
   $$arith = (($3) + ($4))|0;
   $$overflow = ($$arith>>>0)<($3>>>0);
   if ($$overflow) {
    __ZN3std9panicking11begin_panic17h9936a195de5ffc4dE(11172,17,5716);
    // unreachable;
   }
   $$arith2 = $1<<5;
   $$overflow3 = ($1>>>0)>(134217727);
   if ($$overflow3) {
    __ZN4core6option13expect_failed17hc1eeb48c0c4a1725E(11172,17);
    // unreachable;
   }
   $5 = ($$arith>>>0)<($$arith2>>>0);
   if ($5) {
    __ZN3std9panicking11begin_panic17h9936a195de5ffc4dE(11172,17,5728);
    // unreachable;
   }
   $6 = (_malloc($$arith)|0);
   $7 = ($6|0)==(0|0);
   if ($7) {
    __ZN5alloc3oom3oom17hb253cf665793f59eE();
    // unreachable;
   } else {
    $$pre$phiZ2D = $3;$ret$sroa$0$0 = $1;$ret$sroa$8$0 = $6;
    break;
   }
  }
 } while(0);
 _memset(($ret$sroa$8$0|0),0,($$pre$phiZ2D|0))|0;
 HEAP32[$0>>2] = $ret$sroa$0$0;
 $_11$sroa$4$0$$sroa_idx18 = ((($0)) + 4|0);
 HEAP32[$_11$sroa$4$0$$sroa_idx18>>2] = 0;
 $_11$sroa$5$0$$sroa_idx20 = ((($0)) + 8|0);
 HEAP32[$_11$sroa$5$0$$sroa_idx20>>2] = $ret$sroa$8$0;
 return;
}
function __ZN72__LT_std__collections__hash__map__HashMap_LT_K_C__u20_V_C__u20_S_GT__GT_5entry17h95d084aa83ca0906E($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$arith = 0, $$arith2 = 0, $$cast$i$i$i$i = 0, $$idx$i = 0, $$idx$i$i = 0, $$idx$val$i = 0, $$idx$val$i$i = 0, $$idx$val$i$i$i$i = 0, $$idx$val$i$i6 = 0, $$idx178 = 0, $$overflow = 0, $$overflow3 = 0, $$pre = 0, $$pre$phiZ2D = 0, $$sink112115$i$i$i = 0, $$sink116$i$i$i = 0, $$sink237250$i$i = 0, $$sink251$i$i = 0, $$val$i$i = 0, $10 = 0;
 var $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0;
 var $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0;
 var $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0;
 var $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0;
 var $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0;
 var $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0;
 var $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0;
 var $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0;
 var $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0;
 var $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0;
 var $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $_0$0$sroa$speculated$i$i$i = 0, $_107$i$i = 0, $_112$i$i = 0, $_28$i$i$sroa$5$0$$sroa_idx182 = 0, $_6$sroa$0$0$$sroa_idx$i$i$i = 0, $_8$sroa$10$sroa$0$0 = 0, $_8$sroa$10$sroa$5$0 = 0, $_8$sroa$13$sroa$0$0 = 0, $_8$sroa$13$sroa$5$0 = 0, $_8$sroa$16$0 = 0;
 var $_8$sroa$6$0 = 0, $_9$sroa$14$0$ph = 0, $_9$sroa$18$0$ph = 0, $_9$sroa$18$0$ph$in = 0, $_9$sroa$21$0$ph = 0, $_9$sroa$21$099 = 0, $_9$sroa$23$0$ph = 0, $_9$sroa$23$096 = 0, $_9$sroa$27$0$ph = 0, $_9$sroa$27$090 = 0, $_95$i$i = 0, $bucket$sroa$0$0$i$i = 0, $bucket$sroa$0$1$i$i = 0, $bucket$sroa$12$0$i$i = 0, $bucket$sroa$12$1$i$i = 0, $bucket$sroa$22$0$i$i = 0, $bucket$sroa$22$1$i$i = 0, $buckets$sroa$12$0117$i$i$i = 0, $dist$0$i$i$i = 0, $dist$0$i$i$i$i = 0;
 var $dist$0$i$i$i$i7 = 0, $dist$0$i70$i$i = 0, $elem1$sroa$4$0$elem1$0$elem1$0$$sroa_cast137$pre$phi$iZZZZZZZZZZ2D = 0, $elem1$sroa$4$i = 0, $left_val$i$i = 0, $old_size$i$i = 0, $old_table$i$sroa$11$0$$sroa_idx17$i = 0, $old_table$i$sroa$11$0$copyload$i = 0, $or$cond340$i$i = 0, $personalityslot$sroa$0$0$i$i = 0, $personalityslot$sroa$0$1335$i$i = 0, $personalityslot$sroa$6$0$i$i = 0, $personalityslot$sroa$6$1334$i$i = 0, $probe$sroa$8$0252$i$i = 0, $right_val$i$i = 0, $self$sroa$5$i$sroa$10$0$$sroa_idx = 0, $self$sroa$5$i$sroa$11$0$$sroa_idx78 = 0, $self$sroa$5$i$sroa$4$0$$sroa_idx62 = 0, $self$sroa$5$i$sroa$5$0$$sroa_idx64 = 0, $self$sroa$5$i$sroa$6$0$$sroa_idx66 = 0;
 var $self$sroa$5$i$sroa$7$0$$sroa_idx68 = 0, $self$sroa$5$i$sroa$8$0$$sroa_idx = 0, $self$sroa$5$i$sroa$9$0$$sroa_idx73 = 0, $self$sroa$6$sroa$5$i$sroa$5$0$elem1$sroa$4$0$elem1$0$elem1$0$$sroa_cast$i$sroa_idx47 = 0, $self$sroa$6$sroa$5$i$sroa$7$0$elem1$sroa$4$0$elem1$0$elem1$0$$sroa_cast$i$sroa_idx49 = 0, $self$sroa$6$sroa$5$i$sroa$8$0$elem1$sroa$4$0$elem1$0$elem1$0$$sroa_cast$i$sroa_idx51 = 0, $self$sroa$6$sroa$5$i$sroa$9$0$elem1$sroa$4$0$elem1$0$elem1$0$$sroa_cast$i$sroa_idx53 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(80|0);
 $elem1$sroa$4$i = sp + 56|0;
 $old_size$i$i = sp + 52|0;
 $_95$i$i = sp + 48|0;
 $left_val$i$i = sp + 44|0;
 $right_val$i$i = sp + 40|0;
 $_107$i$i = sp + 16|0;
 $_112$i$i = sp;
 $$idx$i = ((($1)) + 16|0);
 $$idx$val$i = HEAP32[$$idx$i>>2]|0;
 $3 = ($$idx$val$i*10)|0;
 $4 = (($3) + 9)|0;
 $5 = (($4>>>0) / 11)&-1;
 $$idx$i$i = ((($1)) + 20|0);
 $$idx$val$i$i = HEAP32[$$idx$i$i>>2]|0;
 $6 = ($5|0)==($$idx$val$i$i|0);
 L1: do {
  if ($6) {
   $7 = (($5) + 1)|0;
   $8 = ($7*11)|0;
   $9 = (($8>>>0) / 10)&-1;
   $10 = ($9>>>0)<($7>>>0);
   if ($10) {
    __ZN3std9panicking11begin_panic17h9936a195de5ffc4dE(11156,16,5740);
    // unreachable;
   }
   $11 = (($9) + -1)|0;
   $12 = (Math_clz32(($11|0))|0);
   $13 = (0 - ($12))|0;
   $14 = $13 & 31;
   $15 = 1 << $14;
   $16 = ($15>>>0)<($9>>>0);
   if ($16) {
    __ZN4core6option13expect_failed17hc1eeb48c0c4a1725E(11135,21);
    // unreachable;
   }
   $17 = ($15>>>0)<(32);
   $_0$0$sroa$speculated$i$i$i = $17 ? 32 : $15;
   $18 = ((($1)) + 16|0);
   $19 = ($5>>>0)>($_0$0$sroa$speculated$i$i$i>>>0);
   if ($19) {
    __ZN3std9panicking11begin_panic17h9936a195de5ffc4dE(11956,50,5764);
    // unreachable;
   }
   $20 = (($_0$0$sroa$speculated$i$i$i) + -1)|0;
   $21 = $20 & $_0$0$sroa$speculated$i$i$i;
   $22 = ($21|0)==(0);
   if (!($22)) {
    __ZN3std9panicking11begin_panic17h9936a195de5ffc4dE(11889,67,5776);
    // unreachable;
   }
   $23 = $_0$0$sroa$speculated$i$i$i << 3;
   $$arith = (($23) + ($23))|0;
   $$overflow = ($$arith>>>0)<($23>>>0);
   do {
    if ($$overflow) {
     __THREW__ = 0;
     invoke_viii(225,(11172|0),17,(5716|0));
     $24 = __THREW__; __THREW__ = 0;
    } else {
     $$arith2 = $_0$0$sroa$speculated$i$i$i<<4;
     $$overflow3 = ($_0$0$sroa$speculated$i$i$i>>>0)>(268435455);
     if ($$overflow3) {
      __THREW__ = 0;
      invoke_vii(219,(11172|0),17);
      $25 = __THREW__; __THREW__ = 0;
      break;
     }
     $26 = ($$arith>>>0)<($$arith2>>>0);
     if ($26) {
      __THREW__ = 0;
      invoke_viii(225,(11172|0),17,(5728|0));
      $27 = __THREW__; __THREW__ = 0;
      break;
     }
     $28 = (_malloc($$arith)|0);
     $29 = ($28|0)==(0|0);
     if ($29) {
      __THREW__ = 0;
      invoke_v(210);
      $30 = __THREW__; __THREW__ = 0;
      break;
     }
     _memset(($28|0),0,($23|0))|0;
     $old_table$i$sroa$11$0$$sroa_idx17$i = ((($1)) + 24|0);
     $old_table$i$sroa$11$0$copyload$i = HEAP32[$old_table$i$sroa$11$0$$sroa_idx17$i>>2]|0;
     HEAP32[$$idx$i>>2] = $_0$0$sroa$speculated$i$i$i;
     HEAP32[$$idx$i$i>>2] = 0;
     $_28$i$i$sroa$5$0$$sroa_idx182 = ((($1)) + 24|0);
     HEAP32[$_28$i$i$sroa$5$0$$sroa_idx182>>2] = $28;
     HEAP32[$old_size$i$i>>2] = $5;
     $31 = ($$idx$val$i|0)==(0);
     $32 = ($4>>>0)<(11);
     $or$cond340$i$i = $31 | $32;
     if ($or$cond340$i$i) {
      if ($31) {
       $$pre$phiZ2D = $18;
       break L1;
      }
      _free($old_table$i$sroa$11$0$copyload$i);
      $$pre$phiZ2D = $18;
      break L1;
     }
     $33 = $$idx$val$i << 3;
     $$cast$i$i$i$i = $old_table$i$sroa$11$0$copyload$i;
     $34 = (($old_table$i$sroa$11$0$copyload$i) + ($33)|0);
     $35 = $34;
     $36 = (($$idx$val$i) + -1)|0;
     $37 = (1 - ($$idx$val$i))|0;
     $bucket$sroa$0$0$i$i = $$cast$i$i$i$i;$bucket$sroa$12$0$i$i = $35;$bucket$sroa$22$0$i$i = 0;
     while(1) {
      $38 = $bucket$sroa$0$0$i$i;
      $39 = $38;
      $40 = $39;
      $41 = HEAP32[$40>>2]|0;
      $42 = (($39) + 4)|0;
      $43 = $42;
      $44 = HEAP32[$43>>2]|0;
      $45 = ($41|0)==(0);
      $46 = ($44|0)==(0);
      $47 = $45 & $46;
      if (!($47)) {
       $56 = (($bucket$sroa$22$0$i$i) - ($41))|0;
       $57 = $56 & $36;
       $58 = ($57|0)==(0);
       if ($58) {
        break;
       }
      }
      $48 = (($bucket$sroa$22$0$i$i) + 1)|0;
      $49 = $48 & $36;
      $50 = ($49|0)==(0);
      $dist$0$i70$i$i = $50 ? $37 : 1;
      $51 = $bucket$sroa$12$0$i$i;
      $52 = (($38) + ($dist$0$i70$i$i<<3)|0);
      $53 = (($51) + ($dist$0$i70$i$i<<3)|0);
      $54 = $52;
      $55 = $53;
      $bucket$sroa$0$0$i$i = $54;$bucket$sroa$12$0$i$i = $55;$bucket$sroa$22$0$i$i = $48;
     }
     $60 = $41;$62 = $44;$80 = $5;$bucket$sroa$0$1$i$i = $bucket$sroa$0$0$i$i;$bucket$sroa$12$1$i$i = $bucket$sroa$12$0$i$i;$bucket$sroa$22$1$i$i = $bucket$sroa$22$0$i$i;
     L37: while(1) {
      $59 = $bucket$sroa$0$1$i$i;
      $61 = ($60|0)==(0);
      $63 = ($62|0)==(0);
      $64 = $61 & $63;
      if ($64) {
       $212 = $80;
      } else {
       $79 = (($80) + -1)|0;
       $81 = $59;
       $82 = $81;
       HEAP32[$82>>2] = 0;
       $83 = (($81) + 4)|0;
       $84 = $83;
       HEAP32[$84>>2] = 0;
       $85 = $bucket$sroa$12$1$i$i;
       $86 = $85;
       $87 = $86;
       $88 = HEAP32[$87>>2]|0;
       $89 = (($86) + 4)|0;
       $90 = $89;
       $91 = HEAP32[$90>>2]|0;
       $$idx$val$i$i$i$i = HEAP32[$$idx$i>>2]|0;
       $92 = (($$idx$val$i$i$i$i) + -1)|0;
       $93 = $92 & $60;
       $94 = HEAP32[$_28$i$i$sroa$5$0$$sroa_idx182>>2]|0;
       $95 = (($93) + ($$idx$val$i$i$i$i))|0;
       $96 = ($$idx$val$i$i$i$i|0)==(0);
       if ($96) {
        label = 32;
        break;
       }
       $97 = $$idx$val$i$i$i$i << 3;
       $98 = (($94) + ($97)|0);
       $99 = (($98) + ($93<<3)|0);
       $100 = (($94) + ($93<<3)|0);
       $101 = (1 - ($$idx$val$i$i$i$i))|0;
       $$sink112115$i$i$i = $100;$$sink116$i$i$i = $99;$buckets$sroa$12$0117$i$i$i = $93;
       while(1) {
        $105 = $$sink112115$i$i$i;
        $106 = $105;
        $107 = HEAP32[$106>>2]|0;
        $108 = (($105) + 4)|0;
        $109 = $108;
        $110 = HEAP32[$109>>2]|0;
        $111 = ($107|0)==(0);
        $112 = ($110|0)==(0);
        $113 = $111 & $112;
        if ($113) {
         break;
        }
        $114 = (($buckets$sroa$12$0117$i$i$i) + 1)|0;
        $115 = $114 & $92;
        $116 = ($115|0)==(0);
        $dist$0$i$i$i$i = $116 ? $101 : 1;
        $117 = (($$sink112115$i$i$i) + ($dist$0$i$i$i$i<<3)|0);
        $118 = (($$sink116$i$i$i) + ($dist$0$i$i$i$i<<3)|0);
        $119 = ($114|0)==($95|0);
        if ($119) {
         label = 32;
         break L37;
        } else {
         $$sink112115$i$i$i = $117;$$sink116$i$i$i = $118;$buckets$sroa$12$0117$i$i$i = $114;
        }
       }
       $120 = $$sink112115$i$i$i;
       $121 = $120;
       HEAP32[$121>>2] = $60;
       $122 = (($120) + 4)|0;
       $123 = $122;
       HEAP32[$123>>2] = $62;
       HEAP32[$$sink116$i$i$i>>2] = $88;
       $124 = ((($$sink116$i$i$i)) + 4|0);
       HEAP32[$124>>2] = $91;
       $125 = HEAP32[$$idx$i$i>>2]|0;
       $126 = (($125) + 1)|0;
       HEAP32[$$idx$i$i>>2] = $126;
       $127 = ($79|0)==(0);
       if ($127) {
        label = 36;
        break;
       } else {
        $212 = $79;
       }
      }
      $65 = (($bucket$sroa$22$1$i$i) + 1)|0;
      $66 = $65 & $36;
      $67 = ($66|0)==(0);
      $dist$0$i$i$i = $67 ? $37 : 1;
      $68 = $bucket$sroa$12$1$i$i;
      $69 = (($59) + ($dist$0$i$i$i<<3)|0);
      $70 = (($68) + ($dist$0$i$i$i<<3)|0);
      $71 = $69;
      $72 = $70;
      $73 = $69;
      $74 = $73;
      $75 = HEAP32[$74>>2]|0;
      $76 = (($73) + 4)|0;
      $77 = $76;
      $78 = HEAP32[$77>>2]|0;
      $60 = $75;$62 = $78;$80 = $212;$bucket$sroa$0$1$i$i = $71;$bucket$sroa$12$1$i$i = $72;$bucket$sroa$22$1$i$i = $65;
     }
     do {
      if ((label|0) == 32) {
       __THREW__ = 0;
       invoke_viii(225,(11841|0),37,(5752|0));
       $102 = __THREW__; __THREW__ = 0;
       $103 = ___cxa_find_matching_catch_2()|0;
       $104 = tempRet0;
       $personalityslot$sroa$0$1335$i$i = $103;$personalityslot$sroa$6$1334$i$i = $104;
      }
      else if ((label|0) == 36) {
       HEAP32[$_95$i$i>>2] = $126;
       HEAP32[$left_val$i$i>>2] = $_95$i$i;
       HEAP32[$right_val$i$i>>2] = $old_size$i$i;
       $128 = HEAP32[$old_size$i$i>>2]|0;
       $129 = ($126|0)==($128|0);
       if ($129) {
        _free($old_table$i$sroa$11$0$copyload$i);
        $$pre$phiZ2D = $18;
        break L1;
       } else {
        $130 = $left_val$i$i;
        $131 = $right_val$i$i;
        HEAP32[$_112$i$i>>2] = $130;
        $132 = ((($_112$i$i)) + 4|0);
        HEAP32[$132>>2] = (258);
        $133 = ((($_112$i$i)) + 8|0);
        HEAP32[$133>>2] = $131;
        $134 = ((($_112$i$i)) + 12|0);
        HEAP32[$134>>2] = (258);
        HEAP32[$_107$i$i>>2] = (5800);
        $135 = ((($_107$i$i)) + 4|0);
        HEAP32[$135>>2] = 3;
        $_6$sroa$0$0$$sroa_idx$i$i$i = ((($_107$i$i)) + 8|0);
        HEAP32[$_6$sroa$0$0$$sroa_idx$i$i$i>>2] = 0;
        $136 = ((($_107$i$i)) + 16|0);
        HEAP32[$136>>2] = $_112$i$i;
        $137 = ((($_107$i$i)) + 20|0);
        HEAP32[$137>>2] = 2;
        __THREW__ = 0;
        invoke_vii(259,($_107$i$i|0),(5788|0));
        $138 = __THREW__; __THREW__ = 0;
        $139 = ___cxa_find_matching_catch_2()|0;
        $140 = tempRet0;
        $personalityslot$sroa$0$1335$i$i = $139;$personalityslot$sroa$6$1334$i$i = $140;
        break;
       }
      }
     } while(0);
     _free($old_table$i$sroa$11$0$copyload$i);
     $personalityslot$sroa$0$0$i$i = $personalityslot$sroa$0$1335$i$i;$personalityslot$sroa$6$0$i$i = $personalityslot$sroa$6$1334$i$i;
     ___resumeException($personalityslot$sroa$0$0$i$i|0);
     // unreachable;
    }
   } while(0);
   $141 = ___cxa_find_matching_catch_2()|0;
   $142 = tempRet0;
   $personalityslot$sroa$0$0$i$i = $141;$personalityslot$sroa$6$0$i$i = $142;
   ___resumeException($personalityslot$sroa$0$0$i$i|0);
   // unreachable;
  } else {
   $$pre = ((($1)) + 16|0);
   $$pre$phiZ2D = $$pre;
  }
 } while(0);
 $143 = $1;
 $144 = $143;
 $145 = HEAP32[$144>>2]|0;
 $146 = (($143) + 4)|0;
 $147 = $146;
 $148 = HEAP32[$147>>2]|0;
 $$idx178 = ((($1)) + 8|0);
 $149 = $$idx178;
 $150 = $149;
 $151 = HEAP32[$150>>2]|0;
 $152 = (($149) + 4)|0;
 $153 = $152;
 $154 = HEAP32[$153>>2]|0;
 $155 = (__ZN72__LT_std__collections__hash__map__HashMap_LT_K_C__u20_V_C__u20_S_GT__GT_9make_hash17he80a4aab712026bfE($145,$148,$151,$154,$2)|0);
 $156 = tempRet0;
 $$idx$val$i$i6 = HEAP32[$$idx$i>>2]|0;
 $157 = ($$idx$val$i$i6|0)==(0);
 if ($157) {
  __ZN4core6option13expect_failed17hc1eeb48c0c4a1725E(11878,11);
  // unreachable;
 }
 $158 = $$pre$phiZ2D;
 $159 = (($$idx$val$i$i6) + -1)|0;
 $160 = $159 & $155;
 $161 = $$idx$val$i$i6 << 3;
 $162 = ((($1)) + 24|0);
 $163 = HEAP32[$162>>2]|0;
 $164 = (($163) + ($161)|0);
 $165 = (($163) + ($160<<3)|0);
 $166 = (($164) + ($160<<3)|0);
 $167 = $166;
 $168 = $165;
 $169 = $168;
 $170 = HEAP32[$169>>2]|0;
 $171 = (($168) + 4)|0;
 $172 = $171;
 $173 = HEAP32[$172>>2]|0;
 $174 = ($170|0)==(0);
 $175 = ($173|0)==(0);
 $176 = $174 & $175;
 L62: do {
  if ($176) {
   $_9$sroa$14$0$ph = 1;$_9$sroa$18$0$ph$in = $165;$_9$sroa$21$0$ph = $167;$_9$sroa$23$0$ph = $160;$_9$sroa$27$0$ph = 0;
  } else {
   $177 = (1 - ($$idx$val$i$i6))|0;
   $$sink237250$i$i = $165;$$sink251$i$i = $166;$179 = $170;$184 = $173;$213 = $167;$probe$sroa$8$0252$i$i = $160;
   while(1) {
    $178 = (($probe$sroa$8$0252$i$i) - ($179))|0;
    $180 = $178 & $159;
    $181 = (($probe$sroa$8$0252$i$i) - ($180))|0;
    $182 = ($160|0)<($181|0);
    if ($182) {
     $_9$sroa$14$0$ph = 0;$_9$sroa$18$0$ph$in = $$sink237250$i$i;$_9$sroa$21$0$ph = $213;$_9$sroa$23$0$ph = $probe$sroa$8$0252$i$i;$_9$sroa$27$0$ph = $181;
     break L62;
    }
    $183 = ($179|0)==($155|0);
    $185 = ($184|0)==($156|0);
    $186 = $183 & $185;
    if ($186) {
     $$val$i$i = HEAP32[$$sink251$i$i>>2]|0;
     $187 = ($$val$i$i|0)==($2|0);
     if ($187) {
      break;
     }
    }
    $188 = (($probe$sroa$8$0252$i$i) + 1)|0;
    $189 = $188 & $159;
    $190 = ($189|0)==(0);
    $dist$0$i$i$i$i7 = $190 ? $177 : 1;
    $191 = (($$sink237250$i$i) + ($dist$0$i$i$i$i7<<3)|0);
    $192 = (($$sink251$i$i) + ($dist$0$i$i$i$i7<<3)|0);
    $193 = $192;
    $194 = $191;
    $195 = $194;
    $196 = HEAP32[$195>>2]|0;
    $197 = (($194) + 4)|0;
    $198 = $197;
    $199 = HEAP32[$198>>2]|0;
    $200 = ($196|0)==(0);
    $201 = ($199|0)==(0);
    $202 = $200 & $201;
    if ($202) {
     $_9$sroa$14$0$ph = 1;$_9$sroa$18$0$ph$in = $191;$_9$sroa$21$0$ph = $193;$_9$sroa$23$0$ph = $188;$_9$sroa$27$0$ph = $181;
     break L62;
    } else {
     $$sink237250$i$i = $191;$$sink251$i$i = $192;$179 = $196;$184 = $199;$213 = $193;$probe$sroa$8$0252$i$i = $188;
    }
   }
   $203 = $$sink237250$i$i;
   $_8$sroa$10$sroa$0$0 = $2;$_8$sroa$10$sroa$5$0 = $203;$_8$sroa$13$sroa$0$0 = $213;$_8$sroa$13$sroa$5$0 = $probe$sroa$8$0252$i$i;$_8$sroa$16$0 = $158;$_8$sroa$6$0 = 0;$_9$sroa$21$099 = 0;$_9$sroa$23$096 = 0;$_9$sroa$27$090 = 0;$elem1$sroa$4$0$elem1$0$elem1$0$$sroa_cast137$pre$phi$iZZZZZZZZZZ2D = $elem1$sroa$4$i;
   HEAP32[$0>>2] = $_8$sroa$6$0;
   $self$sroa$5$i$sroa$4$0$$sroa_idx62 = ((($0)) + 4|0);
   HEAP32[$self$sroa$5$i$sroa$4$0$$sroa_idx62>>2] = 1;
   $self$sroa$5$i$sroa$5$0$$sroa_idx64 = ((($0)) + 8|0);
   $204 = $self$sroa$5$i$sroa$5$0$$sroa_idx64;
   $205 = $204;
   HEAP32[$205>>2] = $_8$sroa$10$sroa$0$0;
   $206 = (($204) + 4)|0;
   $207 = $206;
   HEAP32[$207>>2] = $_8$sroa$10$sroa$5$0;
   $self$sroa$5$i$sroa$6$0$$sroa_idx66 = ((($0)) + 16|0);
   $208 = $self$sroa$5$i$sroa$6$0$$sroa_idx66;
   $209 = $208;
   HEAP32[$209>>2] = $_8$sroa$13$sroa$0$0;
   $210 = (($208) + 4)|0;
   $211 = $210;
   HEAP32[$211>>2] = $_8$sroa$13$sroa$5$0;
   $self$sroa$5$i$sroa$7$0$$sroa_idx68 = ((($0)) + 24|0);
   HEAP32[$self$sroa$5$i$sroa$7$0$$sroa_idx68>>2] = $_8$sroa$16$0;
   $self$sroa$5$i$sroa$8$0$$sroa_idx = ((($0)) + 28|0);
   HEAP32[$self$sroa$5$i$sroa$8$0$$sroa_idx>>2] = $_9$sroa$21$099;
   $self$sroa$5$i$sroa$9$0$$sroa_idx73 = ((($0)) + 32|0);
   HEAP32[$self$sroa$5$i$sroa$9$0$$sroa_idx73>>2] = $_9$sroa$23$096;
   $self$sroa$5$i$sroa$10$0$$sroa_idx = ((($0)) + 36|0);
   HEAP32[$self$sroa$5$i$sroa$10$0$$sroa_idx>>2] = $158;
   $self$sroa$5$i$sroa$11$0$$sroa_idx78 = ((($0)) + 40|0);
   HEAP32[$self$sroa$5$i$sroa$11$0$$sroa_idx78>>2] = $_9$sroa$27$090;
   STACKTOP = sp;return;
  }
 } while(0);
 $_9$sroa$18$0$ph = $_9$sroa$18$0$ph$in;
 HEAP32[$elem1$sroa$4$i>>2] = $_9$sroa$18$0$ph;
 $self$sroa$6$sroa$5$i$sroa$5$0$elem1$sroa$4$0$elem1$0$elem1$0$$sroa_cast$i$sroa_idx47 = ((($elem1$sroa$4$i)) + 4|0);
 HEAP32[$self$sroa$6$sroa$5$i$sroa$5$0$elem1$sroa$4$0$elem1$0$elem1$0$$sroa_cast$i$sroa_idx47>>2] = $_9$sroa$21$0$ph;
 $self$sroa$6$sroa$5$i$sroa$7$0$elem1$sroa$4$0$elem1$0$elem1$0$$sroa_cast$i$sroa_idx49 = ((($elem1$sroa$4$i)) + 8|0);
 HEAP32[$self$sroa$6$sroa$5$i$sroa$7$0$elem1$sroa$4$0$elem1$0$elem1$0$$sroa_cast$i$sroa_idx49>>2] = $_9$sroa$23$0$ph;
 $self$sroa$6$sroa$5$i$sroa$8$0$elem1$sroa$4$0$elem1$0$elem1$0$$sroa_cast$i$sroa_idx51 = ((($elem1$sroa$4$i)) + 12|0);
 HEAP32[$self$sroa$6$sroa$5$i$sroa$8$0$elem1$sroa$4$0$elem1$0$elem1$0$$sroa_cast$i$sroa_idx51>>2] = $158;
 $self$sroa$6$sroa$5$i$sroa$9$0$elem1$sroa$4$0$elem1$0$elem1$0$$sroa_cast$i$sroa_idx53 = ((($elem1$sroa$4$i)) + 16|0);
 HEAP32[$self$sroa$6$sroa$5$i$sroa$9$0$elem1$sroa$4$0$elem1$0$elem1$0$$sroa_cast$i$sroa_idx53>>2] = $_9$sroa$27$0$ph;
 $_8$sroa$10$sroa$0$0 = $155;$_8$sroa$10$sroa$5$0 = $156;$_8$sroa$13$sroa$0$0 = $2;$_8$sroa$13$sroa$5$0 = $_9$sroa$14$0$ph;$_8$sroa$16$0 = $_9$sroa$18$0$ph;$_8$sroa$6$0 = 1;$_9$sroa$21$099 = $_9$sroa$21$0$ph;$_9$sroa$23$096 = $_9$sroa$23$0$ph;$_9$sroa$27$090 = $_9$sroa$27$0$ph;$elem1$sroa$4$0$elem1$0$elem1$0$$sroa_cast137$pre$phi$iZZZZZZZZZZ2D = $elem1$sroa$4$i;
 HEAP32[$0>>2] = $_8$sroa$6$0;
 $self$sroa$5$i$sroa$4$0$$sroa_idx62 = ((($0)) + 4|0);
 HEAP32[$self$sroa$5$i$sroa$4$0$$sroa_idx62>>2] = 1;
 $self$sroa$5$i$sroa$5$0$$sroa_idx64 = ((($0)) + 8|0);
 $204 = $self$sroa$5$i$sroa$5$0$$sroa_idx64;
 $205 = $204;
 HEAP32[$205>>2] = $_8$sroa$10$sroa$0$0;
 $206 = (($204) + 4)|0;
 $207 = $206;
 HEAP32[$207>>2] = $_8$sroa$10$sroa$5$0;
 $self$sroa$5$i$sroa$6$0$$sroa_idx66 = ((($0)) + 16|0);
 $208 = $self$sroa$5$i$sroa$6$0$$sroa_idx66;
 $209 = $208;
 HEAP32[$209>>2] = $_8$sroa$13$sroa$0$0;
 $210 = (($208) + 4)|0;
 $211 = $210;
 HEAP32[$211>>2] = $_8$sroa$13$sroa$5$0;
 $self$sroa$5$i$sroa$7$0$$sroa_idx68 = ((($0)) + 24|0);
 HEAP32[$self$sroa$5$i$sroa$7$0$$sroa_idx68>>2] = $_8$sroa$16$0;
 $self$sroa$5$i$sroa$8$0$$sroa_idx = ((($0)) + 28|0);
 HEAP32[$self$sroa$5$i$sroa$8$0$$sroa_idx>>2] = $_9$sroa$21$099;
 $self$sroa$5$i$sroa$9$0$$sroa_idx73 = ((($0)) + 32|0);
 HEAP32[$self$sroa$5$i$sroa$9$0$$sroa_idx73>>2] = $_9$sroa$23$096;
 $self$sroa$5$i$sroa$10$0$$sroa_idx = ((($0)) + 36|0);
 HEAP32[$self$sroa$5$i$sroa$10$0$$sroa_idx>>2] = $158;
 $self$sroa$5$i$sroa$11$0$$sroa_idx78 = ((($0)) + 40|0);
 HEAP32[$self$sroa$5$i$sroa$11$0$$sroa_idx78>>2] = $_9$sroa$27$090;
 STACKTOP = sp;return;
}
function __ZN72__LT_std__collections__hash__map__HashMap_LT_K_C__u20_V_C__u20_S_GT__GT_6remove17h229702fffc95699cE($0,$1,$$val) {
 $0 = $0|0;
 $1 = $1|0;
 $$val = $$val|0;
 var $$idx = 0, $$idx$i$i = 0, $$idx$val = 0, $$idx$val$i$i = 0, $$idx$val$i$i$i$i$i$i = 0, $$idx$val$i$i$i44$i$i$i = 0, $$idx59 = 0, $$in = 0, $$sink237250$i$i = 0, $$val$i$i = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0;
 var $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0;
 var $127 = 0, $128 = 0, $129 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0;
 var $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $dist$0$i$i$i$i = 0, $dist$0$i$i$i$i$i$i = 0;
 var $dist$0$i$i$i45$i$i$i = 0, $gap$sroa$0$0$in$i24$i$i = 0, $gap$sroa$0$0$in$i24$i$i$phi = 0, $gap$sroa$12$0$in$i26$i$i = 0, $gap$sroa$16$0$in$i27$i$i = 0, $gap$sroa$19$0$i28$i$i = 0, $gap$sroa$6$0$in$i25$i$i = 0, $gap$sroa$6$0$in$i25$i$i$phi = 0, $probe$sroa$8$0252$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $$idx = ((($1)) + 20|0);
 $$idx$val = HEAP32[$$idx>>2]|0;
 $2 = ($$idx$val|0)==(0);
 if ($2) {
  HEAP32[$0>>2] = 0;
  return;
 }
 $3 = $1;
 $4 = $3;
 $5 = HEAP32[$4>>2]|0;
 $6 = (($3) + 4)|0;
 $7 = $6;
 $8 = HEAP32[$7>>2]|0;
 $$idx59 = ((($1)) + 8|0);
 $9 = $$idx59;
 $10 = $9;
 $11 = HEAP32[$10>>2]|0;
 $12 = (($9) + 4)|0;
 $13 = $12;
 $14 = HEAP32[$13>>2]|0;
 $15 = (__ZN72__LT_std__collections__hash__map__HashMap_LT_K_C__u20_V_C__u20_S_GT__GT_9make_hash17he80a4aab712026bfE($5,$8,$11,$14,$$val)|0);
 $16 = tempRet0;
 $$idx$i$i = ((($1)) + 16|0);
 $$idx$val$i$i = HEAP32[$$idx$i$i>>2]|0;
 $17 = ($$idx$val$i$i|0)==(0);
 L5: do {
  if (!($17)) {
   $18 = (($$idx$val$i$i) + -1)|0;
   $19 = $18 & $15;
   $20 = ((($1)) + 24|0);
   $21 = HEAP32[$20>>2]|0;
   $22 = (($21) + ($19<<3)|0);
   $23 = $22;
   $24 = $23;
   $25 = HEAP32[$24>>2]|0;
   $26 = (($23) + 4)|0;
   $27 = $26;
   $28 = HEAP32[$27>>2]|0;
   $29 = ($25|0)==(0);
   $30 = ($28|0)==(0);
   $31 = $29 & $30;
   if (!($31)) {
    $32 = $$idx$val$i$i << 3;
    $33 = (($21) + ($32)|0);
    $34 = (($33) + ($19<<3)|0);
    $35 = (1 - ($$idx$val$i$i))|0;
    $$in = $34;$$sink237250$i$i = $22;$37 = $25;$42 = $28;$probe$sroa$8$0252$i$i = $19;
    while(1) {
     $36 = (($probe$sroa$8$0252$i$i) - ($37))|0;
     $38 = $36 & $18;
     $39 = (($probe$sroa$8$0252$i$i) - ($38))|0;
     $40 = ($19|0)<($39|0);
     if ($40) {
      break L5;
     }
     $41 = ($37|0)==($15|0);
     $43 = ($42|0)==($16|0);
     $44 = $41 & $43;
     if ($44) {
      $$val$i$i = HEAP32[$$in>>2]|0;
      $45 = ($$val$i$i|0)==($$val|0);
      if ($45) {
       break;
      }
     }
     $46 = (($probe$sroa$8$0252$i$i) + 1)|0;
     $47 = $46 & $18;
     $48 = ($47|0)==(0);
     $dist$0$i$i$i$i = $48 ? $35 : 1;
     $49 = (($$sink237250$i$i) + ($dist$0$i$i$i$i<<3)|0);
     $50 = (($$in) + ($dist$0$i$i$i$i<<3)|0);
     $51 = $49;
     $52 = $51;
     $53 = HEAP32[$52>>2]|0;
     $54 = (($51) + 4)|0;
     $55 = $54;
     $56 = HEAP32[$55>>2]|0;
     $57 = ($53|0)==(0);
     $58 = ($56|0)==(0);
     $59 = $57 & $58;
     if ($59) {
      break L5;
     } else {
      $$in = $50;$$sink237250$i$i = $49;$37 = $53;$42 = $56;$probe$sroa$8$0252$i$i = $46;
     }
    }
    $60 = (($$idx$val) + -1)|0;
    HEAP32[$$idx>>2] = $60;
    $61 = $$sink237250$i$i;
    $62 = $61;
    HEAP32[$62>>2] = 0;
    $63 = (($61) + 4)|0;
    $64 = $63;
    HEAP32[$64>>2] = 0;
    $65 = $$in;
    $66 = $65;
    $67 = HEAP32[$66>>2]|0;
    $68 = (($65) + 4)|0;
    $69 = $68;
    $70 = HEAP32[$69>>2]|0;
    $71 = (($probe$sroa$8$0252$i$i) + 1)|0;
    $$idx$val$i$i$i44$i$i$i = HEAP32[$$idx$i$i>>2]|0;
    $72 = (($$idx$val$i$i$i44$i$i$i) + -1)|0;
    $73 = $72 & $71;
    $74 = ($73|0)==(0);
    $75 = (1 - ($$idx$val$i$i$i44$i$i$i))|0;
    $dist$0$i$i$i45$i$i$i = $74 ? $75 : 1;
    $76 = (($$sink237250$i$i) + ($dist$0$i$i$i45$i$i$i<<3)|0);
    $77 = $76;
    $78 = $77;
    $79 = HEAP32[$78>>2]|0;
    $80 = (($77) + 4)|0;
    $81 = $80;
    $82 = HEAP32[$81>>2]|0;
    $83 = ($79|0)==(0);
    $84 = ($82|0)==(0);
    $85 = $83 & $84;
    L15: do {
     if (!($85)) {
      $86 = (($71) - ($79))|0;
      $87 = $86 & $72;
      $88 = ($87|0)==(0);
      if (!($88)) {
       $89 = (($$in) + ($dist$0$i$i$i45$i$i$i<<3)|0);
       $96 = $79;$99 = $82;$gap$sroa$0$0$in$i24$i$i = $$sink237250$i$i;$gap$sroa$12$0$in$i26$i$i = $76;$gap$sroa$16$0$in$i27$i$i = $89;$gap$sroa$19$0$i28$i$i = $71;$gap$sroa$6$0$in$i25$i$i = $$in;
       while(1) {
        $90 = $gap$sroa$12$0$in$i26$i$i;
        $91 = $90;
        HEAP32[$91>>2] = 0;
        $92 = (($90) + 4)|0;
        $93 = $92;
        HEAP32[$93>>2] = 0;
        $94 = $gap$sroa$0$0$in$i24$i$i;
        $95 = $94;
        HEAP32[$95>>2] = $96;
        $97 = (($94) + 4)|0;
        $98 = $97;
        HEAP32[$98>>2] = $99;
        $100 = $gap$sroa$16$0$in$i27$i$i;
        $101 = $100;
        $102 = HEAP32[$101>>2]|0;
        $103 = (($100) + 4)|0;
        $104 = $103;
        $105 = HEAP32[$104>>2]|0;
        $106 = $gap$sroa$6$0$in$i25$i$i;
        $107 = $106;
        HEAP32[$107>>2] = $102;
        $108 = (($106) + 4)|0;
        $109 = $108;
        HEAP32[$109>>2] = $105;
        $110 = (($gap$sroa$19$0$i28$i$i) + 1)|0;
        $$idx$val$i$i$i$i$i$i = HEAP32[$$idx$i$i>>2]|0;
        $111 = (($$idx$val$i$i$i$i$i$i) + -1)|0;
        $112 = $111 & $110;
        $113 = ($112|0)==(0);
        $114 = (1 - ($$idx$val$i$i$i$i$i$i))|0;
        $dist$0$i$i$i$i$i$i = $113 ? $114 : 1;
        $115 = (($gap$sroa$12$0$in$i26$i$i) + ($dist$0$i$i$i$i$i$i<<3)|0);
        $116 = $115;
        $117 = $116;
        $118 = HEAP32[$117>>2]|0;
        $119 = (($116) + 4)|0;
        $120 = $119;
        $121 = HEAP32[$120>>2]|0;
        $122 = ($118|0)==(0);
        $123 = ($121|0)==(0);
        $124 = $122 & $123;
        if ($124) {
         break L15;
        }
        $125 = (($gap$sroa$16$0$in$i27$i$i) + ($dist$0$i$i$i$i$i$i<<3)|0);
        $126 = (($110) - ($118))|0;
        $127 = $126 & $111;
        $128 = ($127|0)==(0);
        if ($128) {
         break;
        } else {
         $gap$sroa$6$0$in$i25$i$i$phi = $gap$sroa$16$0$in$i27$i$i;$gap$sroa$0$0$in$i24$i$i$phi = $gap$sroa$12$0$in$i26$i$i;$96 = $118;$99 = $121;$gap$sroa$12$0$in$i26$i$i = $115;$gap$sroa$16$0$in$i27$i$i = $125;$gap$sroa$19$0$i28$i$i = $110;$gap$sroa$6$0$in$i25$i$i = $gap$sroa$6$0$in$i25$i$i$phi;$gap$sroa$0$0$in$i24$i$i = $gap$sroa$0$0$in$i24$i$i$phi;
        }
       }
      }
     }
    } while(0);
    HEAP32[$0>>2] = 1;
    $129 = ((($0)) + 4|0);
    HEAP32[$129>>2] = $70;
    return;
   }
  }
 } while(0);
 HEAP32[$0>>2] = 0;
 return;
}
function __ZN72__LT_std__collections__hash__map__HashMap_LT_K_C__u20_V_C__u20_S_GT__GT_9make_hash17h6044c6c9d787b3adE($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0;
 var $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0;
 var $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0;
 var $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0;
 var $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0;
 var $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0;
 var $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0;
 var $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0;
 var $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0;
 var $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0;
 var $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0;
 var $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0;
 var $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 8|0);
 $2 = $1;
 $3 = $2;
 $4 = HEAPU8[$3>>0]|(HEAPU8[$3+1>>0]<<8)|(HEAPU8[$3+2>>0]<<16)|(HEAPU8[$3+3>>0]<<24);
 $5 = (($2) + 4)|0;
 $6 = $5;
 $7 = HEAPU8[$6>>0]|(HEAPU8[$6+1>>0]<<8)|(HEAPU8[$6+2>>0]<<16)|(HEAPU8[$6+3>>0]<<24);
 $8 = $4 ^ 2037671283;
 $9 = $7 ^ 1952801890;
 $10 = (_i64Add(($8|0),($9|0),1852142177,1819895653)|0);
 $11 = tempRet0;
 $12 = (_bitshift64Shl(($8|0),($9|0),16)|0);
 $13 = tempRet0;
 $14 = (_bitshift64Lshr(($8|0),($9|0),48)|0);
 $15 = tempRet0;
 $16 = $12 | $14;
 $17 = $13 | $15;
 $18 = $16 ^ $10;
 $19 = $17 ^ $11;
 $20 = (_i64Add(($18|0),($19|0),-673259578,-556280606)|0);
 $21 = tempRet0;
 $22 = (_bitshift64Shl(($18|0),($19|0),21)|0);
 $23 = tempRet0;
 $24 = (_bitshift64Lshr(($18|0),($19|0),43)|0);
 $25 = tempRet0;
 $26 = $22 | $24;
 $27 = $23 | $25;
 $28 = $26 ^ $20;
 $29 = $27 ^ $21;
 $30 = (_i64Add(($8|0),($9|0),-1046484272,-1509140113)|0);
 $31 = tempRet0;
 $32 = $30 ^ -253856987;
 $33 = $31 ^ -468408716;
 $34 = (_i64Add(($20|0),($21|0),($32|0),($33|0))|0);
 $35 = tempRet0;
 $36 = (_bitshift64Shl(($32|0),($33|0),13)|0);
 $37 = tempRet0;
 $38 = (_bitshift64Lshr(($32|0),($33|0),51)|0);
 $39 = tempRet0;
 $40 = $36 | $38;
 $41 = $37 | $39;
 $42 = $40 ^ $34;
 $43 = $41 ^ $35;
 $44 = (_i64Add(($28|0),($29|0),($31|0),($30|0))|0);
 $45 = tempRet0;
 $46 = (_bitshift64Shl(($28|0),($29|0),16)|0);
 $47 = tempRet0;
 $48 = (_bitshift64Lshr(($28|0),($29|0),48)|0);
 $49 = tempRet0;
 $50 = $46 | $48;
 $51 = $47 | $49;
 $52 = $50 ^ $44;
 $53 = $51 ^ $45;
 $54 = (_i64Add(($52|0),($53|0),($35|0),($34|0))|0);
 $55 = tempRet0;
 $56 = (_bitshift64Shl(($52|0),($53|0),21)|0);
 $57 = tempRet0;
 $58 = (_bitshift64Lshr(($52|0),($53|0),43)|0);
 $59 = tempRet0;
 $60 = $56 | $58;
 $61 = $57 | $59;
 $62 = $60 ^ $54;
 $63 = $61 ^ $55;
 $64 = (_i64Add(($44|0),($45|0),($42|0),($43|0))|0);
 $65 = tempRet0;
 $66 = (_bitshift64Shl(($42|0),($43|0),17)|0);
 $67 = tempRet0;
 $68 = (_bitshift64Lshr(($42|0),($43|0),47)|0);
 $69 = tempRet0;
 $70 = $66 | $68;
 $71 = $67 | $69;
 $72 = $70 ^ $64;
 $73 = $71 ^ $65;
 $74 = $54 ^ $4;
 $75 = $55 ^ $7;
 $76 = $63 ^ 134217728;
 $77 = (_i64Add(($72|0),($73|0),($74|0),($75|0))|0);
 $78 = tempRet0;
 $79 = (_bitshift64Shl(($72|0),($73|0),13)|0);
 $80 = tempRet0;
 $81 = (_bitshift64Lshr(($72|0),($73|0),51)|0);
 $82 = tempRet0;
 $83 = $79 | $81;
 $84 = $80 | $82;
 $85 = $83 ^ $77;
 $86 = $84 ^ $78;
 $87 = (_i64Add(($62|0),($76|0),($65|0),($64|0))|0);
 $88 = tempRet0;
 $89 = (_bitshift64Shl(($62|0),($63|0),16)|0);
 $90 = tempRet0;
 $91 = (_bitshift64Lshr(($62|0),($76|0),48)|0);
 $92 = tempRet0;
 $93 = $89 | $91;
 $94 = $90 | $92;
 $95 = $93 ^ $87;
 $96 = $94 ^ $88;
 $97 = (_i64Add(($95|0),($96|0),($78|0),($77|0))|0);
 $98 = tempRet0;
 $99 = (_bitshift64Shl(($95|0),($96|0),21)|0);
 $100 = tempRet0;
 $101 = (_bitshift64Lshr(($95|0),($96|0),43)|0);
 $102 = tempRet0;
 $103 = $99 | $101;
 $104 = $100 | $102;
 $105 = $103 ^ $97;
 $106 = $104 ^ $98;
 $107 = (_i64Add(($87|0),($88|0),($85|0),($86|0))|0);
 $108 = tempRet0;
 $109 = (_bitshift64Shl(($85|0),($86|0),17)|0);
 $110 = tempRet0;
 $111 = (_bitshift64Lshr(($85|0),($86|0),47)|0);
 $112 = tempRet0;
 $113 = $109 | $111;
 $114 = $110 | $112;
 $115 = $113 ^ $107;
 $116 = $114 ^ $108;
 $117 = (_i64Add(($97|0),($98|0),($115|0),($116|0))|0);
 $118 = tempRet0;
 $119 = (_bitshift64Shl(($115|0),($116|0),13)|0);
 $120 = tempRet0;
 $121 = (_bitshift64Lshr(($115|0),($116|0),51)|0);
 $122 = tempRet0;
 $123 = $119 | $121;
 $124 = $120 | $122;
 $125 = $123 ^ $117;
 $126 = $124 ^ $118;
 $127 = (_i64Add(($105|0),($106|0),($108|0),($107|0))|0);
 $128 = tempRet0;
 $129 = (_bitshift64Shl(($105|0),($106|0),16)|0);
 $130 = tempRet0;
 $131 = (_bitshift64Lshr(($105|0),($106|0),48)|0);
 $132 = tempRet0;
 $133 = $129 | $131;
 $134 = $130 | $132;
 $135 = $133 ^ $127;
 $136 = $134 ^ $128;
 $137 = (_i64Add(($135|0),($136|0),($118|0),($117|0))|0);
 $138 = tempRet0;
 $139 = (_bitshift64Shl(($135|0),($136|0),21)|0);
 $140 = tempRet0;
 $141 = (_bitshift64Lshr(($135|0),($136|0),43)|0);
 $142 = tempRet0;
 $143 = $139 | $141;
 $144 = $140 | $142;
 $145 = $143 ^ $137;
 $146 = $144 ^ $138;
 $147 = (_i64Add(($127|0),($128|0),($125|0),($126|0))|0);
 $148 = tempRet0;
 $149 = (_bitshift64Shl(($125|0),($126|0),17)|0);
 $150 = tempRet0;
 $151 = (_bitshift64Lshr(($125|0),($126|0),47)|0);
 $152 = tempRet0;
 $153 = $149 | $151;
 $154 = $150 | $152;
 $155 = $153 ^ $147;
 $156 = $154 ^ $148;
 $157 = $138 ^ 134217728;
 $158 = $148 ^ 255;
 $159 = (_i64Add(($137|0),($157|0),($155|0),($156|0))|0);
 $160 = tempRet0;
 $161 = (_bitshift64Shl(($155|0),($156|0),13)|0);
 $162 = tempRet0;
 $163 = (_bitshift64Lshr(($155|0),($156|0),51)|0);
 $164 = tempRet0;
 $165 = $161 | $163;
 $166 = $162 | $164;
 $167 = $159 ^ $165;
 $168 = $160 ^ $166;
 $169 = (_i64Add(($145|0),($146|0),($158|0),($147|0))|0);
 $170 = tempRet0;
 $171 = (_bitshift64Shl(($145|0),($146|0),16)|0);
 $172 = tempRet0;
 $173 = (_bitshift64Lshr(($145|0),($146|0),48)|0);
 $174 = tempRet0;
 $175 = $171 | $173;
 $176 = $172 | $174;
 $177 = $175 ^ $169;
 $178 = $176 ^ $170;
 $179 = (_i64Add(($177|0),($178|0),($160|0),($159|0))|0);
 $180 = tempRet0;
 $181 = (_bitshift64Shl(($177|0),($178|0),21)|0);
 $182 = tempRet0;
 $183 = (_bitshift64Lshr(($177|0),($178|0),43)|0);
 $184 = tempRet0;
 $185 = $181 | $183;
 $186 = $182 | $184;
 $187 = $185 ^ $179;
 $188 = $186 ^ $180;
 $189 = (_i64Add(($167|0),($168|0),($169|0),($170|0))|0);
 $190 = tempRet0;
 $191 = (_bitshift64Shl(($167|0),($168|0),17)|0);
 $192 = tempRet0;
 $193 = (_bitshift64Lshr(($167|0),($168|0),47)|0);
 $194 = tempRet0;
 $195 = $191 | $193;
 $196 = $192 | $194;
 $197 = $195 ^ $189;
 $198 = $196 ^ $190;
 $199 = (_i64Add(($179|0),($180|0),($197|0),($198|0))|0);
 $200 = tempRet0;
 $201 = (_bitshift64Shl(($197|0),($198|0),13)|0);
 $202 = tempRet0;
 $203 = (_bitshift64Lshr(($197|0),($198|0),51)|0);
 $204 = tempRet0;
 $205 = $201 | $203;
 $206 = $202 | $204;
 $207 = $205 ^ $199;
 $208 = $206 ^ $200;
 $209 = (_i64Add(($187|0),($188|0),($190|0),($189|0))|0);
 $210 = tempRet0;
 $211 = (_bitshift64Shl(($187|0),($188|0),16)|0);
 $212 = tempRet0;
 $213 = (_bitshift64Lshr(($187|0),($188|0),48)|0);
 $214 = tempRet0;
 $215 = $211 | $213;
 $216 = $212 | $214;
 $217 = $215 ^ $209;
 $218 = $216 ^ $210;
 $219 = (_i64Add(($217|0),($218|0),($200|0),($199|0))|0);
 $220 = tempRet0;
 $221 = (_bitshift64Shl(($217|0),($218|0),21)|0);
 $222 = tempRet0;
 $223 = (_bitshift64Lshr(($217|0),($218|0),43)|0);
 $224 = tempRet0;
 $225 = $221 | $223;
 $226 = $222 | $224;
 $227 = $225 ^ $219;
 $228 = $226 ^ $220;
 $229 = (_i64Add(($207|0),($208|0),($209|0),($210|0))|0);
 $230 = tempRet0;
 $231 = (_bitshift64Shl(($207|0),($208|0),17)|0);
 $232 = tempRet0;
 $233 = (_bitshift64Lshr(($207|0),($208|0),47)|0);
 $234 = tempRet0;
 $235 = $231 | $233;
 $236 = $232 | $234;
 $237 = $235 ^ $229;
 $238 = $236 ^ $230;
 $239 = (_i64Add(($219|0),($220|0),($237|0),($238|0))|0);
 $240 = tempRet0;
 $241 = (_bitshift64Shl(($237|0),($238|0),13)|0);
 $242 = tempRet0;
 $243 = (_bitshift64Lshr(($237|0),($238|0),51)|0);
 $244 = tempRet0;
 $245 = $241 | $243;
 $246 = $242 | $244;
 $247 = $245 ^ $239;
 $248 = $246 ^ $240;
 $249 = (_i64Add(($227|0),($228|0),($230|0),($229|0))|0);
 $250 = tempRet0;
 $251 = (_bitshift64Shl(($227|0),($228|0),16)|0);
 $252 = tempRet0;
 $253 = (_bitshift64Lshr(($227|0),($228|0),48)|0);
 $254 = tempRet0;
 $255 = $251 | $253;
 $256 = $252 | $254;
 $257 = $255 ^ $249;
 $258 = $256 ^ $250;
 $259 = (_i64Add(($257|0),($258|0),($240|0),($239|0))|0);
 $260 = tempRet0;
 $261 = (_bitshift64Shl(($257|0),($258|0),21)|0);
 $262 = tempRet0;
 $263 = (_bitshift64Lshr(($257|0),($258|0),43)|0);
 $264 = tempRet0;
 $265 = $261 | $263;
 $266 = $262 | $264;
 $267 = $265 ^ $259;
 $268 = $266 ^ $260;
 $269 = (_i64Add(($247|0),($248|0),($249|0),($250|0))|0);
 $270 = tempRet0;
 $271 = (_bitshift64Shl(($247|0),($248|0),17)|0);
 $272 = tempRet0;
 $273 = (_bitshift64Lshr(($247|0),($248|0),47)|0);
 $274 = tempRet0;
 $275 = $271 | $273;
 $276 = $272 | $274;
 $277 = $275 ^ $269;
 $278 = $276 ^ $270;
 $279 = (_i64Add(($259|0),($260|0),($277|0),($278|0))|0);
 $280 = tempRet0;
 $281 = (_bitshift64Shl(($277|0),($278|0),13)|0);
 $282 = tempRet0;
 $283 = (_bitshift64Lshr(($277|0),($278|0),51)|0);
 $284 = tempRet0;
 $285 = $281 | $283;
 $286 = $282 | $284;
 $287 = $285 ^ $279;
 $288 = $286 ^ $280;
 $289 = (_i64Add(($267|0),($268|0),($270|0),($269|0))|0);
 $290 = tempRet0;
 $291 = (_bitshift64Shl(($267|0),($268|0),16)|0);
 $292 = tempRet0;
 $293 = (_bitshift64Lshr(($267|0),($268|0),48)|0);
 $294 = tempRet0;
 $295 = $291 | $293;
 $296 = $292 | $294;
 $297 = $295 ^ $289;
 $298 = $296 ^ $290;
 $299 = (_bitshift64Shl(($297|0),($298|0),21)|0);
 $300 = tempRet0;
 $301 = (_bitshift64Lshr(($297|0),($298|0),43)|0);
 $302 = tempRet0;
 $303 = $299 | $301;
 $304 = $300 | $302;
 $305 = (_i64Add(($287|0),($288|0),($289|0),($290|0))|0);
 $306 = tempRet0;
 $307 = (_bitshift64Shl(($287|0),($288|0),17)|0);
 $308 = tempRet0;
 $309 = (_bitshift64Lshr(($287|0),($288|0),47)|0);
 $310 = tempRet0;
 $311 = $307 | $309;
 $312 = $308 | $310;
 $313 = $311 ^ $305;
 $314 = $312 ^ $306;
 $315 = $313 ^ $306;
 $316 = $314 ^ $305;
 $317 = $315 ^ $303;
 $318 = $316 ^ $304;
 $319 = $318 | -2147483648;
 tempRet0 = ($319);
 return ($317|0);
}
function __ZN72__LT_std__collections__hash__map__HashMap_LT_K_C__u20_V_C__u20_S_GT__GT_9make_hash17he80a4aab712026bfE($0,$1,$2,$3,$$val1) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $$val1 = $$val1|0;
 var $$mask$i = 0, $$mask19$i = 0, $$mask20$i = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0;
 var $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0;
 var $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0;
 var $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0;
 var $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0;
 var $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0;
 var $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0;
 var $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0;
 var $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0;
 var $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = $0 ^ 1886610805;
 $5 = $1 ^ 1936682341;
 $6 = $2 ^ 1852075885;
 $7 = $3 ^ 1685025377;
 $8 = $0 ^ 1852142177;
 $9 = $1 ^ 1819895653;
 $10 = $$val1 >>> 8;
 $11 = $$val1 >>> 16;
 $12 = $$val1 >>> 24;
 $$mask20$i = $11 & 255;
 $13 = (_bitshift64Shl(($$mask20$i|0),0,16)|0);
 $14 = tempRet0;
 $$mask19$i = $10 & 255;
 $15 = (_bitshift64Shl(($$mask19$i|0),0,8)|0);
 $16 = tempRet0;
 $$mask$i = $$val1 & 255;
 $17 = (_bitshift64Shl(($12|0),0,24)|0);
 $18 = tempRet0;
 $19 = $$mask$i | $17;
 $20 = $19 | $15;
 $21 = $18 | $16;
 $22 = $20 | $13;
 $23 = $21 | $14;
 $24 = $23 | 67108864;
 $25 = $22 ^ 2037671283;
 $26 = $23 ^ 1885693026;
 $27 = $25 ^ $2;
 $28 = $26 ^ $3;
 $29 = (_i64Add(($6|0),($7|0),($4|0),($5|0))|0);
 $30 = tempRet0;
 $31 = (_bitshift64Shl(($6|0),($7|0),13)|0);
 $32 = tempRet0;
 $33 = (_bitshift64Lshr(($6|0),($7|0),51)|0);
 $34 = tempRet0;
 $35 = $31 | $33;
 $36 = $32 | $34;
 $37 = $35 ^ $29;
 $38 = $36 ^ $30;
 $39 = (_i64Add(($27|0),($28|0),($8|0),($9|0))|0);
 $40 = tempRet0;
 $41 = (_bitshift64Shl(($27|0),($28|0),16)|0);
 $42 = tempRet0;
 $43 = (_bitshift64Lshr(($27|0),($28|0),48)|0);
 $44 = tempRet0;
 $45 = $41 | $43;
 $46 = $42 | $44;
 $47 = $45 ^ $39;
 $48 = $46 ^ $40;
 $49 = (_i64Add(($47|0),($48|0),($30|0),($29|0))|0);
 $50 = tempRet0;
 $51 = (_bitshift64Shl(($47|0),($48|0),21)|0);
 $52 = tempRet0;
 $53 = (_bitshift64Lshr(($47|0),($48|0),43)|0);
 $54 = tempRet0;
 $55 = $51 | $53;
 $56 = $52 | $54;
 $57 = $55 ^ $49;
 $58 = $56 ^ $50;
 $59 = (_i64Add(($37|0),($38|0),($39|0),($40|0))|0);
 $60 = tempRet0;
 $61 = (_bitshift64Shl(($37|0),($38|0),17)|0);
 $62 = tempRet0;
 $63 = (_bitshift64Lshr(($37|0),($38|0),47)|0);
 $64 = tempRet0;
 $65 = $61 | $63;
 $66 = $62 | $64;
 $67 = $65 ^ $59;
 $68 = $66 ^ $60;
 $69 = $49 ^ $22;
 $70 = $50 ^ $24;
 $71 = $60 ^ 255;
 $72 = (_i64Add(($69|0),($70|0),($67|0),($68|0))|0);
 $73 = tempRet0;
 $74 = (_bitshift64Shl(($67|0),($68|0),13)|0);
 $75 = tempRet0;
 $76 = (_bitshift64Lshr(($67|0),($68|0),51)|0);
 $77 = tempRet0;
 $78 = $74 | $76;
 $79 = $75 | $77;
 $80 = $78 ^ $72;
 $81 = $79 ^ $73;
 $82 = (_i64Add(($57|0),($58|0),($71|0),($59|0))|0);
 $83 = tempRet0;
 $84 = (_bitshift64Shl(($57|0),($58|0),16)|0);
 $85 = tempRet0;
 $86 = (_bitshift64Lshr(($57|0),($58|0),48)|0);
 $87 = tempRet0;
 $88 = $84 | $86;
 $89 = $85 | $87;
 $90 = $88 ^ $82;
 $91 = $89 ^ $83;
 $92 = (_i64Add(($90|0),($91|0),($73|0),($72|0))|0);
 $93 = tempRet0;
 $94 = (_bitshift64Shl(($90|0),($91|0),21)|0);
 $95 = tempRet0;
 $96 = (_bitshift64Lshr(($90|0),($91|0),43)|0);
 $97 = tempRet0;
 $98 = $94 | $96;
 $99 = $95 | $97;
 $100 = $98 ^ $92;
 $101 = $99 ^ $93;
 $102 = (_i64Add(($80|0),($81|0),($82|0),($83|0))|0);
 $103 = tempRet0;
 $104 = (_bitshift64Shl(($80|0),($81|0),17)|0);
 $105 = tempRet0;
 $106 = (_bitshift64Lshr(($80|0),($81|0),47)|0);
 $107 = tempRet0;
 $108 = $104 | $106;
 $109 = $105 | $107;
 $110 = $108 ^ $102;
 $111 = $109 ^ $103;
 $112 = (_i64Add(($110|0),($111|0),($92|0),($93|0))|0);
 $113 = tempRet0;
 $114 = (_bitshift64Shl(($110|0),($111|0),13)|0);
 $115 = tempRet0;
 $116 = (_bitshift64Lshr(($110|0),($111|0),51)|0);
 $117 = tempRet0;
 $118 = $114 | $116;
 $119 = $115 | $117;
 $120 = $118 ^ $112;
 $121 = $119 ^ $113;
 $122 = (_i64Add(($100|0),($101|0),($103|0),($102|0))|0);
 $123 = tempRet0;
 $124 = (_bitshift64Shl(($100|0),($101|0),16)|0);
 $125 = tempRet0;
 $126 = (_bitshift64Lshr(($100|0),($101|0),48)|0);
 $127 = tempRet0;
 $128 = $124 | $126;
 $129 = $125 | $127;
 $130 = $128 ^ $122;
 $131 = $129 ^ $123;
 $132 = (_i64Add(($130|0),($131|0),($113|0),($112|0))|0);
 $133 = tempRet0;
 $134 = (_bitshift64Shl(($130|0),($131|0),21)|0);
 $135 = tempRet0;
 $136 = (_bitshift64Lshr(($130|0),($131|0),43)|0);
 $137 = tempRet0;
 $138 = $134 | $136;
 $139 = $135 | $137;
 $140 = $138 ^ $132;
 $141 = $139 ^ $133;
 $142 = (_i64Add(($120|0),($121|0),($122|0),($123|0))|0);
 $143 = tempRet0;
 $144 = (_bitshift64Shl(($120|0),($121|0),17)|0);
 $145 = tempRet0;
 $146 = (_bitshift64Lshr(($120|0),($121|0),47)|0);
 $147 = tempRet0;
 $148 = $144 | $146;
 $149 = $145 | $147;
 $150 = $148 ^ $142;
 $151 = $149 ^ $143;
 $152 = (_i64Add(($150|0),($151|0),($132|0),($133|0))|0);
 $153 = tempRet0;
 $154 = (_bitshift64Shl(($150|0),($151|0),13)|0);
 $155 = tempRet0;
 $156 = (_bitshift64Lshr(($150|0),($151|0),51)|0);
 $157 = tempRet0;
 $158 = $154 | $156;
 $159 = $155 | $157;
 $160 = $158 ^ $152;
 $161 = $159 ^ $153;
 $162 = (_i64Add(($140|0),($141|0),($143|0),($142|0))|0);
 $163 = tempRet0;
 $164 = (_bitshift64Shl(($140|0),($141|0),16)|0);
 $165 = tempRet0;
 $166 = (_bitshift64Lshr(($140|0),($141|0),48)|0);
 $167 = tempRet0;
 $168 = $164 | $166;
 $169 = $165 | $167;
 $170 = $168 ^ $162;
 $171 = $169 ^ $163;
 $172 = (_bitshift64Shl(($170|0),($171|0),21)|0);
 $173 = tempRet0;
 $174 = (_bitshift64Lshr(($170|0),($171|0),43)|0);
 $175 = tempRet0;
 $176 = $172 | $174;
 $177 = $173 | $175;
 $178 = (_i64Add(($160|0),($161|0),($162|0),($163|0))|0);
 $179 = tempRet0;
 $180 = (_bitshift64Shl(($160|0),($161|0),17)|0);
 $181 = tempRet0;
 $182 = (_bitshift64Lshr(($160|0),($161|0),47)|0);
 $183 = tempRet0;
 $184 = $180 | $182;
 $185 = $181 | $183;
 $186 = $184 ^ $178;
 $187 = $185 ^ $179;
 $188 = $186 ^ $179;
 $189 = $187 ^ $178;
 $190 = $188 ^ $176;
 $191 = $189 ^ $177;
 $192 = $191 | -2147483648;
 tempRet0 = ($192);
 return ($190|0);
}
function __ZN73__LT_ncollide_geometry__partitioning__bvt__BVTNode_LT_B_C__u20_BV_GT__GT_5visit17he0ab4eeb7498f34dE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$idx$i5$i = 0, $$idx$val = 0, $$idx$val$i$i = 0.0, $$idx$val$i$i4 = 0.0, $$idx$val$i6$i = 0, $$idx1$i$i = 0, $$idx1$i$i5 = 0, $$idx1$val = 0, $$idx1$val$i$i = 0.0, $$idx1$val$i$i6 = 0.0, $$idx2 = 0, $$idx2$i$i = 0, $$idx2$i$i7 = 0, $$idx2$val = 0, $$idx2$val$i$i = 0.0, $$idx2$val$i$i8 = 0.0, $$idx3$i$i = 0, $$idx3$i$i9 = 0, $$idx3$val$i$i = 0.0, $$idx3$val$i$i10 = 0.0;
 var $$idx4$i$i = 0, $$idx4$i$i12 = 0, $$idx4$val$i$i = 0.0, $$idx4$val$i$i13 = 0.0, $$idx5$i$i = 0, $$idx5$i$i14 = 0, $$idx5$val$i$i = 0.0, $$idx5$val$i$i15 = 0.0, $$idx6$val$i$i = 0.0, $$idx6$val$i$i17 = 0.0, $$idx7$i$i = 0, $$idx7$i$i18 = 0, $$idx7$val$i$i = 0.0, $$idx7$val$i$i19 = 0.0, $$lcssa = 0, $$pre$i$i = 0, $$tr$lcssa = 0, $$tr26 = 0, $$val = 0, $10 = 0;
 var $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $3 = 0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond$i$i$i$i = 0, $or$cond$i$i$i$i11 = 0, $or$cond$i$i8$i$i = 0, $or$cond$i$i8$i$i20 = 0, $switch = 0, $switch25 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[$0>>2]|0;
 $switch25 = ($2|0)==(1);
 $3 = ((($0)) + 4|0);
 L1: do {
  if ($switch25) {
   $$lcssa = $3;$$tr$lcssa = $0;
  } else {
   $$tr26 = $0;$4 = $3;
   while(1) {
    $$idx$val = HEAP32[$1>>2]|0;
    $$idx$val$i$i = +HEAPF32[$4>>2];
    $$idx1$i$i = ((($$tr26)) + 8|0);
    $$idx1$val$i$i = +HEAPF32[$$idx1$i$i>>2];
    $$idx2$i$i = ((($$idx$val)) + 8|0);
    $$idx2$val$i$i = +HEAPF32[$$idx2$i$i>>2];
    $$idx3$i$i = ((($$idx$val)) + 12|0);
    $$idx3$val$i$i = +HEAPF32[$$idx3$i$i>>2];
    $5 = $$idx$val$i$i <= $$idx2$val$i$i;
    $6 = $$idx1$val$i$i <= $$idx3$val$i$i;
    $or$cond$i$i$i$i = $5 & $6;
    if (!($or$cond$i$i$i$i)) {
     label = 10;
     break;
    }
    $$idx4$i$i = ((($$tr26)) + 12|0);
    $$idx4$val$i$i = +HEAPF32[$$idx4$i$i>>2];
    $$idx5$i$i = ((($$tr26)) + 16|0);
    $$idx5$val$i$i = +HEAPF32[$$idx5$i$i>>2];
    $$idx6$val$i$i = +HEAPF32[$$idx$val>>2];
    $$idx7$i$i = ((($$idx$val)) + 4|0);
    $$idx7$val$i$i = +HEAPF32[$$idx7$i$i>>2];
    $7 = $$idx4$val$i$i >= $$idx6$val$i$i;
    $8 = $$idx5$val$i$i >= $$idx7$val$i$i;
    $or$cond$i$i8$i$i = $7 & $8;
    if (!($or$cond$i$i8$i$i)) {
     label = 10;
     break;
    }
    $23 = ((($$tr26)) + 24|0);
    $24 = ((($$tr26)) + 20|0);
    $25 = HEAP32[$24>>2]|0;
    __ZN73__LT_ncollide_geometry__partitioning__bvt__BVTNode_LT_B_C__u20_BV_GT__GT_5visit17he0ab4eeb7498f34dE($25,$1);
    $26 = HEAP32[$23>>2]|0;
    $27 = HEAP32[$26>>2]|0;
    $switch = ($27|0)==(1);
    $28 = ((($26)) + 4|0);
    if ($switch) {
     $$lcssa = $28;$$tr$lcssa = $26;
     break L1;
    } else {
     $$tr26 = $26;$4 = $28;
    }
   }
   if ((label|0) == 10) {
    return;
   }
  }
 } while(0);
 $9 = ((($$tr$lcssa)) + 20|0);
 $$idx1$val = HEAP32[$1>>2]|0;
 $$idx2 = ((($1)) + 4|0);
 $$idx2$val = HEAP32[$$idx2>>2]|0;
 $$val = HEAP32[$9>>2]|0;
 $10 = ($$idx1$val|0)==($$lcssa|0);
 if ($10) {
  return;
 }
 $$idx$val$i$i4 = +HEAPF32[$$lcssa>>2];
 $$idx1$i$i5 = ((($$tr$lcssa)) + 8|0);
 $$idx1$val$i$i6 = +HEAPF32[$$idx1$i$i5>>2];
 $$idx2$i$i7 = ((($$idx1$val)) + 8|0);
 $$idx2$val$i$i8 = +HEAPF32[$$idx2$i$i7>>2];
 $$idx3$i$i9 = ((($$idx1$val)) + 12|0);
 $$idx3$val$i$i10 = +HEAPF32[$$idx3$i$i9>>2];
 $11 = $$idx$val$i$i4 <= $$idx2$val$i$i8;
 $12 = $$idx1$val$i$i6 <= $$idx3$val$i$i10;
 $or$cond$i$i$i$i11 = $11 & $12;
 if (!($or$cond$i$i$i$i11)) {
  return;
 }
 $$idx4$i$i12 = ((($$tr$lcssa)) + 12|0);
 $$idx4$val$i$i13 = +HEAPF32[$$idx4$i$i12>>2];
 $$idx5$i$i14 = ((($$tr$lcssa)) + 16|0);
 $$idx5$val$i$i15 = +HEAPF32[$$idx5$i$i14>>2];
 $$idx6$val$i$i17 = +HEAPF32[$$idx1$val>>2];
 $$idx7$i$i18 = ((($$idx1$val)) + 4|0);
 $$idx7$val$i$i19 = +HEAPF32[$$idx7$i$i18>>2];
 $13 = $$idx4$val$i$i13 >= $$idx6$val$i$i17;
 $14 = $$idx5$val$i$i15 >= $$idx7$val$i$i19;
 $or$cond$i$i8$i$i20 = $13 & $14;
 if (!($or$cond$i$i8$i$i20)) {
  return;
 }
 $15 = ((($$idx2$val)) + 8|0);
 $16 = HEAP32[$15>>2]|0;
 $$idx$i5$i = ((($$idx2$val)) + 4|0);
 $$idx$val$i6$i = HEAP32[$$idx$i5$i>>2]|0;
 $17 = ($16|0)==($$idx$val$i6$i|0);
 if ($17) {
  __ZN40__LT_alloc__raw_vec__RawVec_LT_T_GT__GT_6double17he78dc10a992efc57E($$idx2$val);
  $$pre$i$i = HEAP32[$15>>2]|0;
  $20 = $$pre$i$i;
 } else {
  $20 = $16;
 }
 $18 = HEAP32[$$idx2$val>>2]|0;
 $19 = (($18) + ($20<<2)|0);
 HEAP32[$19>>2] = $$val;
 $21 = HEAP32[$15>>2]|0;
 $22 = (($21) + 1)|0;
 HEAP32[$15>>2] = $22;
 return;
}
function __ZN75__LT_ncollide_utils__data__hash_map__HashMap_LT_K_C__u20_V_C__u20_H_GT__GT_13find_entry_id17hc8fb07c6c2c87be9E($0,$$val3) {
 $0 = $0|0;
 $$val3 = $$val3|0;
 var $$idx11 = 0, $$idx11$val = 0, $$idx12 = 0, $$idx12$val = 0, $$idx13 = 0, $$idx13$val = 0, $$idx14 = 0, $$idx14$val = 0, $$idx21 = 0, $$idx21$val = 0, $$idx22 = 0, $$idx22$val = 0, $$val15 = 0, $$val17 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0;
 var $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, $pos$0 = 0, $pos$1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = $$val3 << 15;
 $2 = $1 ^ -1;
 $3 = (($2) + ($$val3))|0;
 $4 = $3 >>> 10;
 $5 = $4 ^ $3;
 $6 = ($5*9)|0;
 $7 = $6 >>> 6;
 $8 = $7 ^ $6;
 $9 = $8 << 11;
 $10 = $9 ^ -1;
 $11 = (($8) + ($10))|0;
 $12 = $11 >>> 16;
 $13 = $12 ^ $11;
 $14 = ((($0)) + 16|0);
 $15 = HEAP32[$14>>2]|0;
 $16 = $15 & $13;
 $$idx14 = ((($0)) + 28|0);
 $$idx14$val = HEAP32[$$idx14>>2]|0;
 $17 = ($$idx14$val>>>0)>($16>>>0);
 if (!($17)) {
  __ZN4core9panicking18panic_bounds_check17hd14a5808e41829e9E(12236,104,1349,$16,$$idx14$val);
  // unreachable;
 }
 $$idx13 = ((($0)) + 20|0);
 $$idx13$val = HEAP32[$$idx13>>2]|0;
 $18 = (($$idx13$val) + ($16<<2)|0);
 $19 = HEAP32[$18>>2]|0;
 $20 = ($19|0)==(-1);
 if ($20) {
  $pos$1 = -1;
  return ($pos$1|0);
 }
 $$idx22 = ((($0)) + 12|0);
 $$idx22$val = HEAP32[$$idx22>>2]|0;
 $21 = ($$idx22$val>>>0)>($19>>>0);
 if (!($21)) {
  __ZN4core9panicking18panic_bounds_check17hd14a5808e41829e9E(12236,104,1349,$19,$$idx22$val);
  // unreachable;
 }
 $$idx21 = ((($0)) + 4|0);
 $$idx21$val = HEAP32[$$idx21>>2]|0;
 $22 = (($$idx21$val) + (($19*12)|0)|0);
 $$val17 = HEAP32[$22>>2]|0;
 $23 = ($$val17|0)==($$val3|0);
 if ($23) {
  $pos$1 = $19;
  return ($pos$1|0);
 }
 $$idx11 = ((($0)) + 32|0);
 $$idx12 = ((($0)) + 40|0);
 $$idx12$val = HEAP32[$$idx12>>2]|0;
 $$idx11$val = HEAP32[$$idx11>>2]|0;
 $pos$0 = $19;
 while(1) {
  $24 = ($$idx12$val>>>0)>($pos$0>>>0);
  if (!($24)) {
   label = 9;
   break;
  }
  $25 = (($$idx11$val) + ($pos$0<<2)|0);
  $26 = HEAP32[$25>>2]|0;
  $27 = ($26|0)==(-1);
  if ($27) {
   $pos$1 = -1;
   label = 14;
   break;
  }
  $28 = ($$idx22$val>>>0)>($26>>>0);
  if (!($28)) {
   label = 12;
   break;
  }
  $29 = (($$idx21$val) + (($26*12)|0)|0);
  $$val15 = HEAP32[$29>>2]|0;
  $30 = ($$val15|0)==($$val3|0);
  if ($30) {
   $pos$1 = $26;
   label = 14;
   break;
  } else {
   $pos$0 = $26;
  }
 }
 if ((label|0) == 9) {
  __ZN4core9panicking18panic_bounds_check17hd14a5808e41829e9E(12236,104,1349,$pos$0,$$idx12$val);
  // unreachable;
 }
 else if ((label|0) == 12) {
  __ZN4core9panicking18panic_bounds_check17hd14a5808e41829e9E(12236,104,1349,$26,$$idx22$val);
  // unreachable;
 }
 else if ((label|0) == 14) {
  return ($pos$1|0);
 }
 return (0)|0;
}
function __ZN78__LT_nphysics2d__detection__activation_manager__ActivationManager_LT_N_GT__GT_17deferred_activate17h46b0bef2bcefa161E($0,$$0$0$0$0$val) {
 $0 = $0|0;
 $$0$0$0$0$val = $$0$0$0$0$val|0;
 var $$arith = 0, $$idx$i = 0, $$idx$val$i = 0, $$idx1$i$i$i$i$i$i$i = 0, $$idx1$val$i$i$i$i$i$i$i = 0, $$idx1$val$val$i$i$i$i$i$i$i = 0, $$idx19 = 0, $$idx19$val = 0, $$idx20 = 0, $$idx20$val = 0, $$overflow = 0, $$pre$i = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0;
 var $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0;
 var $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $cond$i = 0, $cond$i$i$i = 0;
 var $cond$i$i$i32 = 0, $eh$lpad$body$index4Z2D = 0, $eh$lpad$body$indexZ2D = 0, $personalityslot$sroa$0$0 = 0, $personalityslot$sroa$6$0 = 0, $switch$i = 0, $switchtmp$i$i$i$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($$0$0$0$0$val)) + 8|0);
 $2 = HEAP32[$1>>2]|0;
 $cond$i$i$i = ($2|0)==(-1);
 if ($cond$i$i$i) {
  __ZN4core6result13unwrap_failed17h0dc63b200336bf84E();
  // unreachable;
 }
 $3 = (($2) + 1)|0;
 HEAP32[$1>>2] = $3;
 $$idx19 = ((($$0$0$0$0$val)) + 12|0);
 $$idx19$val = HEAP8[$$idx19>>0]|0;
 $switch$i = ($$idx19$val<<24>>24)==(1);
 if ($switch$i) {
  $cond$i$i$i32 = ($3|0)==(-1);
  if ($cond$i$i$i32) {
   __THREW__ = 0;
   invoke_v(221);
   $4 = __THREW__; __THREW__ = 0;
   $5 = ___cxa_find_matching_catch_2()|0;
   $6 = tempRet0;
   $7 = HEAP32[$1>>2]|0;
   $8 = (($7) + -1)|0;
   HEAP32[$1>>2] = $8;
   $personalityslot$sroa$0$0 = $5;$personalityslot$sroa$6$0 = $6;
   ___resumeException($personalityslot$sroa$0$0|0);
   // unreachable;
  }
  $$idx20 = ((($$0$0$0$0$val)) + 128|0);
  $$idx20$val = HEAP32[$$idx20>>2]|0;
  $cond$i = ($$idx20$val|0)==(0);
  HEAP32[$1>>2] = $3;
  if (!($cond$i)) {
   HEAP32[$1>>2] = $2;
   $9 = ((($0)) + 28|0);
   $10 = HEAP32[$$0$0$0$0$val>>2]|0;
   $$arith = (($10) + 1)|0;
   $$overflow = ($10>>>0)>(4294967294);
   if ($$overflow) {
    _llvm_trap();
    // unreachable;
   }
   $11 = $$0$0$0$0$val;
   HEAP32[$$0$0$0$0$val>>2] = $$arith;
   $12 = ((($0)) + 36|0);
   $13 = HEAP32[$12>>2]|0;
   $$idx$i = ((($0)) + 32|0);
   $$idx$val$i = HEAP32[$$idx$i>>2]|0;
   $14 = ($13|0)==($$idx$val$i|0);
   do {
    if ($14) {
     __THREW__ = 0;
     invoke_vi(242,($9|0));
     $38 = __THREW__; __THREW__ = 0;
     $39 = $38&1;
     if (!($39)) {
      $$pre$i = HEAP32[$12>>2]|0;
      $42 = $$pre$i;
      break;
     }
     $15 = ___cxa_find_matching_catch_2()|0;
     $16 = tempRet0;
     $17 = HEAP32[$$0$0$0$0$val>>2]|0;
     $18 = (($17) + -1)|0;
     HEAP32[$$0$0$0$0$val>>2] = $18;
     $19 = ($18|0)==(0);
     L19: do {
      if ($19) {
       $20 = ((($$0$0$0$0$val)) + 16|0);
       $21 = HEAP32[$20>>2]|0;
       $22 = HEAP32[$21>>2]|0;HEAP32[$21>>2] = (($22-1)|0);
       $23 = ($22|0)==(1);
       if ($23) {
        /* fence */;
        __THREW__ = 0;
        invoke_vi(241,($20|0));
        $24 = __THREW__; __THREW__ = 0;
        $25 = $24&1;
        if (!($25)) {
         label = 15;
        }
       } else {
        label = 15;
       }
       do {
        if ((label|0) == 15) {
         $26 = ((($$0$0$0$0$val)) + 172|0);
         $27 = HEAP32[$26>>2]|0;
         $switchtmp$i$i$i$i$i$i = ($27|0)==(0|0);
         if (!($switchtmp$i$i$i$i$i$i)) {
          $$idx1$i$i$i$i$i$i$i = ((($$0$0$0$0$val)) + 176|0);
          $$idx1$val$i$i$i$i$i$i$i = HEAP32[$$idx1$i$i$i$i$i$i$i>>2]|0;
          $$idx1$val$val$i$i$i$i$i$i$i = HEAP32[$$idx1$val$i$i$i$i$i$i$i>>2]|0;
          __THREW__ = 0;
          invoke_vi($$idx1$val$val$i$i$i$i$i$i$i|0,($27|0));
          $28 = __THREW__; __THREW__ = 0;
          $29 = $28&1;
          if ($29) {
           break;
          }
          $30 = HEAP32[$$idx1$i$i$i$i$i$i$i>>2]|0;
          $31 = ((($30)) + 4|0);
          $32 = HEAP32[$31>>2]|0;
          $33 = ($32|0)==(0);
          if (!($33)) {
           _free($27);
          }
         }
         $34 = ((($$0$0$0$0$val)) + 4|0);
         $35 = HEAP32[$34>>2]|0;
         $36 = (($35) + -1)|0;
         HEAP32[$34>>2] = $36;
         $37 = ($36|0)==(0);
         if (!($37)) {
          $eh$lpad$body$index4Z2D = $16;$eh$lpad$body$indexZ2D = $15;
          break L19;
         }
         _free($$0$0$0$0$val);
         $eh$lpad$body$index4Z2D = $16;$eh$lpad$body$indexZ2D = $15;
         break L19;
        }
       } while(0);
       $45 = ___cxa_find_matching_catch_2()|0;
       $46 = tempRet0;
       $eh$lpad$body$index4Z2D = $46;$eh$lpad$body$indexZ2D = $45;
      } else {
       $eh$lpad$body$index4Z2D = $16;$eh$lpad$body$indexZ2D = $15;
      }
     } while(0);
     $personalityslot$sroa$0$0 = $eh$lpad$body$indexZ2D;$personalityslot$sroa$6$0 = $eh$lpad$body$index4Z2D;
     ___resumeException($personalityslot$sroa$0$0|0);
     // unreachable;
    } else {
     $42 = $13;
    }
   } while(0);
   $40 = HEAP32[$9>>2]|0;
   $41 = (($40) + ($42<<2)|0);
   HEAP32[$41>>2] = $11;
   $43 = HEAP32[$12>>2]|0;
   $44 = (($43) + 1)|0;
   HEAP32[$12>>2] = $44;
   return;
  }
 }
 HEAP32[$1>>2] = $2;
 return;
}
function __ZN78__LT_nphysics2d__detection__activation_manager__ActivationManager_LT_N_GT__GT_6update10make_union17h220be54fd56bf6b5E($$0$0$0$0$val,$0,$1,$2) {
 $$0$0$0$0$val = $$0$0$0$0$val|0;
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$fca$0$extract313 = 0, $$fca$1$extract515 = 0, $$idx$val = 0, $$idx18 = 0, $$idx18$val = 0, $$idx19 = 0, $$idx19$val = 0, $$idx20 = 0, $$idx20$val = 0, $$idx21 = 0, $$idx21$val = 0, $$pre = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0;
 var $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0;
 var $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $cond$i$i$i = 0, $cond$i$i$i29 = 0, $personalityslot$sroa$0$18 = 0, $personalityslot$sroa$6$16 = 0, $switch$i = 0, $switch$i28 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($$0$0$0$0$val)) + 8|0);
 $4 = HEAP32[$3>>2]|0;
 $cond$i$i$i29 = ($4|0)==(-1);
 if ($cond$i$i$i29) {
  __THREW__ = 0;
  invoke_v(221);
  $5 = __THREW__; __THREW__ = 0;
  $6 = ___cxa_find_matching_catch_2()|0;
  $7 = tempRet0;
  $personalityslot$sroa$0$18 = $6;$personalityslot$sroa$6$16 = $7;
  ___resumeException($personalityslot$sroa$0$18|0);
  // unreachable;
 }
 $8 = (($4) + 1)|0;
 HEAP32[$3>>2] = $8;
 $$idx$val = HEAP32[$0>>2]|0;
 $9 = ((($$idx$val)) + 8|0);
 $10 = HEAP32[$9>>2]|0;
 $cond$i$i$i = ($10|0)==(-1);
 if ($cond$i$i$i) {
  __THREW__ = 0;
  invoke_v(221);
  $11 = __THREW__; __THREW__ = 0;
  $12 = ___cxa_find_matching_catch_2()|0;
  $13 = tempRet0;
  $$fca$0$extract313 = $12;$$fca$1$extract515 = $13;
 } else {
  $14 = (($10) + 1)|0;
  HEAP32[$9>>2] = $14;
  $$idx19 = ((($$0$0$0$0$val)) + 12|0);
  $$idx19$val = HEAP8[$$idx19>>0]|0;
  $switch$i28 = ($$idx19$val<<24>>24)==(1);
  if (!($switch$i28)) {
   $36 = $14;
   $35 = (($36) + -1)|0;
   HEAP32[$9>>2] = $35;
   $37 = HEAP32[$3>>2]|0;
   $38 = (($37) + -1)|0;
   HEAP32[$3>>2] = $38;
   return;
  }
  $$idx18 = ((($$idx$val)) + 12|0);
  $$idx18$val = HEAP8[$$idx18>>0]|0;
  $switch$i = ($$idx18$val<<24>>24)==(1);
  if (!($switch$i)) {
   $36 = $14;
   $35 = (($36) + -1)|0;
   HEAP32[$9>>2] = $35;
   $37 = HEAP32[$3>>2]|0;
   $38 = (($37) + -1)|0;
   HEAP32[$3>>2] = $38;
   return;
  }
  $$idx21 = ((($$0$0$0$0$val)) + 124|0);
  $$idx21$val = HEAP32[$$idx21>>2]|0;
  $$idx20 = ((($$idx$val)) + 124|0);
  $$idx20$val = HEAP32[$$idx20>>2]|0;
  __THREW__ = 0;
  $15 = (invoke_iiii(253,($$idx21$val|0),($1|0),($2|0))|0);
  $16 = __THREW__; __THREW__ = 0;
  $17 = $16&1;
  L14: do {
   if (!($17)) {
    __THREW__ = 0;
    $18 = (invoke_iiii(253,($$idx20$val|0),($1|0),($2|0))|0);
    $19 = __THREW__; __THREW__ = 0;
    $20 = $19&1;
    if (!($20)) {
     $21 = ($15|0)==($18|0);
     do {
      if (!($21)) {
       $22 = ($15>>>0)<($2>>>0);
       if (!($22)) {
        __THREW__ = 0;
        invoke_viiiii(214,(13731|0),100,48,($15|0),($2|0));
        $33 = __THREW__; __THREW__ = 0;
        break L14;
       }
       $23 = (((($1) + ($15<<3)|0)) + 4|0);
       $24 = HEAP32[$23>>2]|0;
       $25 = ($18>>>0)<($2>>>0);
       if (!($25)) {
        __THREW__ = 0;
        invoke_viiiii(214,(13731|0),100,49,($18|0),($2|0));
        $34 = __THREW__; __THREW__ = 0;
        break L14;
       }
       $26 = (((($1) + ($18<<3)|0)) + 4|0);
       $27 = HEAP32[$26>>2]|0;
       $28 = ($24>>>0)<($27>>>0);
       if ($28) {
        $31 = (($1) + ($15<<3)|0);
        HEAP32[$31>>2] = $18;
        break;
       }
       $29 = ($24>>>0)>($27>>>0);
       $30 = (($1) + ($18<<3)|0);
       HEAP32[$30>>2] = $15;
       if (!($29)) {
        $32 = (($24) + 1)|0;
        HEAP32[$23>>2] = $32;
       }
      }
     } while(0);
     $$pre = HEAP32[$9>>2]|0;
     $36 = $$pre;
     $35 = (($36) + -1)|0;
     HEAP32[$9>>2] = $35;
     $37 = HEAP32[$3>>2]|0;
     $38 = (($37) + -1)|0;
     HEAP32[$3>>2] = $38;
     return;
    }
   }
  } while(0);
  $41 = ___cxa_find_matching_catch_2()|0;
  $42 = tempRet0;
  $43 = HEAP32[$9>>2]|0;
  $44 = (($43) + -1)|0;
  HEAP32[$9>>2] = $44;
  $$fca$0$extract313 = $41;$$fca$1$extract515 = $42;
 }
 $39 = HEAP32[$3>>2]|0;
 $40 = (($39) + -1)|0;
 HEAP32[$3>>2] = $40;
 $personalityslot$sroa$0$18 = $$fca$0$extract313;$personalityslot$sroa$6$16 = $$fca$1$extract515;
 ___resumeException($personalityslot$sroa$0$18|0);
 // unreachable;
}
function __ZN80__LT_ncollide_geometry__partitioning__dbvt__DBVT_LT_P_C__u20_B_C__u20_BV_GT__GT_6insert17hdfd54d5ead3fd847E($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$arith = 0, $$arith16 = 0, $$arith20 = 0, $$arith24 = 0, $$idx$i$i = 0, $$idx$i222$i = 0, $$idx$i253$i = 0, $$idx$val$i = 0, $$idx$val$i$i = 0, $$idx$val$i196$i = 0.0, $$idx$val$i202$i = 0.0, $$idx$val$i223$i = 0.0, $$idx$val$i239$i = 0, $$idx$val$i254$i = 0.0, $$idx178$val$i = 0.0, $$idx179$val$i = 0.0, $$idx180$i = 0, $$idx180$val$i = 0.0, $$idx181$i = 0, $$idx181$val$i = 0.0;
 var $$idx2$i$i = 0, $$idx2$i203$i = 0, $$idx2$i224$i = 0, $$idx2$i255$i = 0, $$idx2$val$i$i = 0.0, $$idx2$val$i204$i = 0.0, $$idx2$val$i225$i = 0.0, $$idx2$val$i256$i = 0.0, $$idx3$val$i$i = 0.0, $$idx3$val$i206$i = 0.0, $$idx3$val$i227$i = 0.0, $$idx3$val$i258$i = 0.0, $$idx4$i$i = 0, $$idx4$i259$i = 0, $$idx4$val$i$i = 0.0, $$idx4$val$i208$i = 0.0, $$idx4$val$i229$i = 0.0, $$idx4$val$i260$i = 0.0, $$idx5$i$i = 0, $$idx5$i209$i = 0;
 var $$idx5$i230$i = 0, $$idx5$i261$i = 0, $$idx5$val$i$i = 0.0, $$idx5$val$i210$i = 0.0, $$idx5$val$i231$i = 0.0, $$idx5$val$i262$i = 0.0, $$idx6$i$i = 0, $$idx6$i211$i = 0, $$idx6$i232$i = 0, $$idx6$i263$i = 0, $$idx6$val$i$i = 0.0, $$idx6$val$i212$i = 0.0, $$idx6$val$i233$i = 0.0, $$idx6$val$i264$i = 0.0, $$idx7$i$i = 0, $$idx7$i265$i = 0, $$idx7$val$i$i = 0.0, $$idx7$val$i214$i = 0.0, $$idx7$val$i235$i = 0.0, $$idx7$val$i266$i = 0.0;
 var $$idx8$i$i = 0, $$idx8$i267$i = 0, $$idx8$val$i$i = 0.0, $$idx8$val$i216$i = 0.0, $$idx8$val$i237$i = 0.0, $$idx8$val$i268$i = 0.0, $$overflow = 0, $$overflow17 = 0, $$overflow21 = 0, $$overflow25 = 0, $$pre$i = 0, $$pre$phi$iZ2D = 0, $$pre$phi396$iZ2D = 0, $$pre$phi397$iZ2D = 0, $$pre$pre$phi$iZZ2D = 0, $$pre395$pre$phi$iZZ2D = 0, $$pre398$i = 0, $$sroa_idx = 0, $$sroa_idx324$i = 0, $$sroa_idx325$i = 0;
 var $$sroa_idx337$i = 0, $$sroa_idx338$i = 0, $$sroa_idx84 = 0, $$val$i = 0, $$val177$i = 0, $10 = 0, $100 = 0, $101 = 0.0, $102 = 0.0, $103 = 0.0, $104 = 0.0, $105 = 0, $106 = 0.0, $107 = 0.0, $108 = 0.0, $109 = 0.0, $11 = 0, $110 = 0.0, $111 = 0.0, $112 = 0;
 var $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0;
 var $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0;
 var $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0;
 var $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0;
 var $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0;
 var $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0;
 var $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0;
 var $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0.0, $44 = 0.0, $45 = 0.0, $46 = 0.0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0;
 var $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0.0, $57 = 0.0, $58 = 0.0, $59 = 0.0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0;
 var $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0.0, $74 = 0.0, $75 = 0.0, $76 = 0.0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0.0, $81 = 0.0, $82 = 0.0, $83 = 0.0, $84 = 0.0, $85 = 0.0, $86 = 0, $87 = 0;
 var $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $_0$0$i = 0, $_105$sroa$0$0$$sroa_idx118$i = 0, $_105$sroa$5$0$$sroa_idx123$i = 0, $_107$sroa$0$0$$sroa_idx109$i = 0, $_107$sroa$5$0$$sroa_idx114$i = 0, $_12$sroa$0$0$$sroa_idx = 0, $_12$sroa$5$0 = 0;
 var $_12$sroa$5$0$$sroa_idx74 = 0, $_12$sroa$7$0 = 0, $_12$sroa$7$0$$sroa_idx76 = 0, $_126$i = 0, $_14$sroa$4$0$$sroa_idx36$i$i = 0, $_14$sroa$4$0$$sroa_idx36$i282$i = 0, $_14$sroa$5$0$$sroa_idx38$i$i = 0, $_14$sroa$5$0$$sroa_idx38$i283$i = 0, $_14$sroa$6$0$$sroa_idx40$i$i = 0, $_14$sroa$6$0$$sroa_idx40$i284$i = 0, $_149$0$off0$i = 0, $_149$1$i = 0, $_149$3361$i = 0, $_150$0$off0$i = 0, $_150$1$i = 0, $_150$3362$i = 0, $_152$2369$i = 0, $_30$0 = 0, $_83$i = 0, $cond$i$i$i = 0;
 var $cond$i$i$i$i = 0, $cond$i$i$i191$i = 0, $cond$i$i$i217$i = 0, $cond$i$i$i248$i = 0, $cond$i$i$i61 = 0, $cond$i58 = 0, $curr$0$i = 0, $curr$0$ph$i = 0, $curr$1$i = 0, $eh$lpad$body108$index4Z2D = 0, $eh$lpad$body108$indexZ2D = 0, $left$0$off0$i = 0, $lpad$phi$i$index = 0, $lpad$phi$i$index11 = 0, $or$cond = 0, $parent$0$i = 0, $personalityslot$sroa$0$1$i = 0, $personalityslot$sroa$0$2$i = 0, $personalityslot$sroa$0$4364$i = 0, $personalityslot$sroa$0$9373$i = 0;
 var $personalityslot$sroa$21$1$i = 0, $personalityslot$sroa$21$2$i = 0, $personalityslot$sroa$21$4363$i = 0, $personalityslot$sroa$21$9371$i = 0, $self$i = 0, $self_tree = 0, $switch = 0, $switch5 = 0, $t$i = 0, $trunc$i = 0, $trunc$i$clear = 0, $trunc163$i$clear = 0, $trunc170$i = 0, $trunc170$i$clear = 0, $trunc172$i = 0, $trunc172$i$clear = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(144|0);
 $self$i = sp + 128|0;
 $_83$i = sp + 80|0;
 $_126$i = sp + 32|0;
 $t$i = sp + 16|0;
 $self_tree = sp;
 HEAP32[$self_tree>>2] = 0;
 $2 = ((($0)) + 12|0);
 ;HEAP32[$t$i>>2]=HEAP32[$self_tree>>2]|0;HEAP32[$t$i+4>>2]=HEAP32[$self_tree+4>>2]|0;HEAP32[$t$i+8>>2]=HEAP32[$self_tree+8>>2]|0;
 ;HEAP32[$self_tree>>2]=HEAP32[$2>>2]|0;HEAP32[$self_tree+4>>2]=HEAP32[$2+4>>2]|0;HEAP32[$self_tree+8>>2]=HEAP32[$2+8>>2]|0;
 ;HEAP32[$2>>2]=HEAP32[$t$i>>2]|0;HEAP32[$2+4>>2]=HEAP32[$t$i+4>>2]|0;HEAP32[$2+8>>2]=HEAP32[$t$i+8>>2]|0;
 $3 = HEAP32[$self_tree>>2]|0;
 $switch = ($3|0)==(1);
 L1: do {
  if ($switch) {
   $4 = ((($self_tree)) + 4|0);
   $5 = $4;
   $6 = $5;
   $7 = HEAP32[$6>>2]|0;
   $8 = (($5) + 4)|0;
   $9 = $8;
   $10 = HEAP32[$9>>2]|0;
   $11 = $self$i;
   $12 = $11;
   HEAP32[$12>>2] = $7;
   $13 = (($11) + 4)|0;
   $14 = $13;
   HEAP32[$14>>2] = $10;
   $15 = $1;
   $16 = ((($15)) + 8|0);
   $17 = HEAP32[$16>>2]|0;
   $cond$i$i$i$i = ($17|0)==(-1);
   $18 = $10;
   do {
    if ($cond$i$i$i$i) {
     __THREW__ = 0;
     invoke_v(221);
     $19 = __THREW__; __THREW__ = 0;
     label = 71;
    } else {
     $31 = ((($15)) + 12|0);
     $$idx$i$i = ((($15)) + 40|0);
     $$idx$val$i$i = HEAP32[$$idx$i$i>>2]|0;
     $cond$i$i$i = ($$idx$val$i$i|0)==(3);
     if (!($cond$i$i$i)) {
      __THREW__ = 0;
      invoke_viii(225,(12410|0),34,(5484|0));
      $32 = __THREW__; __THREW__ = 0;
      label = 71;
      break;
     }
     $cond$i$i$i191$i = ($17|0)==(0);
     if (!($cond$i$i$i191$i)) {
      __THREW__ = 0;
      invoke_v(212);
      $33 = __THREW__; __THREW__ = 0;
      $34 = ___cxa_find_matching_catch_2()|0;
      $35 = tempRet0;
      $_149$0$off0$i = 1;$_150$0$off0$i = 1;$personalityslot$sroa$0$1$i = $34;$personalityslot$sroa$21$1$i = $35;
      break;
     }
     HEAP32[$16>>2] = -1;
     $36 = $7&255;
     $trunc163$i$clear = $36 & 3;
     L12: do {
      switch ($trunc163$i$clear<<24>>24) {
      case 0:  {
       $$idx$val$i196$i = +HEAPF32[$18>>2];
       $$idx2$i$i = ((($18)) + 4|0);
       $$idx2$val$i$i = +HEAPF32[$$idx2$i$i>>2];
       $$idx3$val$i$i = +HEAPF32[$31>>2];
       $$idx4$i$i = ((($15)) + 16|0);
       $$idx4$val$i$i = +HEAPF32[$$idx4$i$i>>2];
       $43 = (+_fminf($$idx$val$i196$i,$$idx3$val$i$i));
       $44 = (+_fminf($$idx2$val$i$i,$$idx4$val$i$i));
       HEAPF32[$18>>2] = $43;
       HEAPF32[$$idx2$i$i>>2] = $44;
       $$idx5$i$i = ((($18)) + 8|0);
       $$idx5$val$i$i = +HEAPF32[$$idx5$i$i>>2];
       $$idx6$i$i = ((($18)) + 12|0);
       $$idx6$val$i$i = +HEAPF32[$$idx6$i$i>>2];
       $$idx7$i$i = ((($15)) + 20|0);
       $$idx7$val$i$i = +HEAPF32[$$idx7$i$i>>2];
       $$idx8$i$i = ((($15)) + 24|0);
       $$idx8$val$i$i = +HEAPF32[$$idx8$i$i>>2];
       $45 = (+_fmaxf($$idx5$val$i$i,$$idx7$val$i$i));
       $46 = (+_fmaxf($$idx6$val$i$i,$$idx8$val$i$i));
       HEAPF32[$$idx5$i$i>>2] = $45;
       HEAPF32[$$idx6$i$i>>2] = $46;
       $$idx180$i = ((($15)) + 28|0);
       $$idx180$val$i = +HEAPF32[$$idx180$i>>2];
       $$idx181$i = ((($15)) + 32|0);
       $$idx181$val$i = +HEAPF32[$$idx181$i>>2];
       __THREW__ = 0;
       $47 = (invoke_iidd(274,($18|0),(+$$idx180$val$i),(+$$idx181$val$i))|0);
       $48 = __THREW__; __THREW__ = 0;
       $49 = $48&1;
       do {
        if ($49) {
         label = 74;
        } else {
         $50 = ((($18)) + 32|0);
         $51 = ((($18)) + 24|0);
         $curr$0$ph$i = $47 ? $51 : $50;
         $curr$0$i = $curr$0$ph$i;$left$0$off0$i = $47;$parent$0$i = $18;
         L16: while(1) {
          $52 = HEAP32[$curr$0$i>>2]|0;
          $trunc172$i = $52&255;
          $trunc172$i$clear = $trunc172$i & 3;
          switch ($trunc172$i$clear<<24>>24) {
          case 1:  {
           label = 24;
           break L16;
           break;
          }
          case 2:  {
           label = 21;
           break L16;
           break;
          }
          case 0:  {
           break;
          }
          default: {
           label = 72;
           break L16;
          }
          }
          $54 = ((($curr$0$i)) + 4|0);
          $55 = HEAP32[$54>>2]|0;
          $$idx$val$i202$i = +HEAPF32[$55>>2];
          $$idx2$i203$i = ((($55)) + 4|0);
          $$idx2$val$i204$i = +HEAPF32[$$idx2$i203$i>>2];
          $$idx3$val$i206$i = +HEAPF32[$31>>2];
          $$idx4$val$i208$i = +HEAPF32[$$idx4$i$i>>2];
          $56 = (+_fminf($$idx$val$i202$i,$$idx3$val$i206$i));
          $57 = (+_fminf($$idx2$val$i204$i,$$idx4$val$i208$i));
          HEAPF32[$55>>2] = $56;
          HEAPF32[$$idx2$i203$i>>2] = $57;
          $$idx5$i209$i = ((($55)) + 8|0);
          $$idx5$val$i210$i = +HEAPF32[$$idx5$i209$i>>2];
          $$idx6$i211$i = ((($55)) + 12|0);
          $$idx6$val$i212$i = +HEAPF32[$$idx6$i211$i>>2];
          $$idx7$val$i214$i = +HEAPF32[$$idx7$i$i>>2];
          $$idx8$val$i216$i = +HEAPF32[$$idx8$i$i>>2];
          $58 = (+_fmaxf($$idx5$val$i210$i,$$idx7$val$i214$i));
          $59 = (+_fmaxf($$idx6$val$i212$i,$$idx8$val$i216$i));
          HEAPF32[$$idx5$i209$i>>2] = $58;
          HEAPF32[$$idx6$i211$i>>2] = $59;
          $60 = HEAP32[$54>>2]|0;
          $$idx178$val$i = +HEAPF32[$$idx180$i>>2];
          $$idx179$val$i = +HEAPF32[$$idx181$i>>2];
          __THREW__ = 0;
          $61 = (invoke_iidd(274,($60|0),(+$$idx178$val$i),(+$$idx179$val$i))|0);
          $62 = __THREW__; __THREW__ = 0;
          $63 = $62&1;
          if ($63) {
           label = 73;
           break;
          }
          $64 = HEAP32[$54>>2]|0;
          $65 = ((($64)) + 24|0);
          $66 = ((($64)) + 32|0);
          $curr$1$i = $61 ? $65 : $66;
          $curr$0$i = $curr$1$i;$left$0$off0$i = $61;$parent$0$i = $64;
         }
         if ((label|0) == 21) {
          __THREW__ = 0;
          invoke_viii(225,(10157|0),40,(5496|0));
          $53 = __THREW__; __THREW__ = 0;
          label = 74;
          break;
         }
         else if ((label|0) == 24) {
          $67 = ((($curr$0$i)) + 4|0);
          $$idx$val$i = HEAP32[$67>>2]|0;
          $68 = ((($$idx$val$i)) + 8|0);
          $69 = HEAP32[$68>>2]|0;
          $cond$i$i$i217$i = ($69|0)==(0);
          if (!($cond$i$i$i217$i)) {
           __THREW__ = 0;
           invoke_v(212);
           $70 = __THREW__; __THREW__ = 0;
           $71 = ___cxa_find_matching_catch_2()|0;
           $72 = tempRet0;
           $$pre$phi$iZ2D = $51;$$pre$phi396$iZ2D = $50;$personalityslot$sroa$0$2$i = $71;$personalityslot$sroa$21$2$i = $72;
           break;
          }
          HEAP32[$68>>2] = -1;
          $$idx$i222$i = ((($$idx$val$i)) + 12|0);
          $$idx$val$i223$i = +HEAPF32[$$idx$i222$i>>2];
          $$idx2$i224$i = ((($$idx$val$i)) + 16|0);
          $$idx2$val$i225$i = +HEAPF32[$$idx2$i224$i>>2];
          $$idx3$val$i227$i = +HEAPF32[$31>>2];
          $$idx4$val$i229$i = +HEAPF32[$$idx4$i$i>>2];
          $73 = (+_fminf($$idx$val$i223$i,$$idx3$val$i227$i));
          $74 = (+_fminf($$idx2$val$i225$i,$$idx4$val$i229$i));
          $$idx5$i230$i = ((($$idx$val$i)) + 20|0);
          $$idx5$val$i231$i = +HEAPF32[$$idx5$i230$i>>2];
          $$idx6$i232$i = ((($$idx$val$i)) + 24|0);
          $$idx6$val$i233$i = +HEAPF32[$$idx6$i232$i>>2];
          $$idx7$val$i235$i = +HEAPF32[$$idx7$i$i>>2];
          $$idx8$val$i237$i = +HEAPF32[$$idx8$i$i>>2];
          $75 = (+_fmaxf($$idx5$val$i231$i,$$idx7$val$i235$i));
          $76 = (+_fmaxf($$idx6$val$i233$i,$$idx8$val$i237$i));
          $$idx$val$i239$i = HEAP32[$67>>2]|0;
          $77 = HEAP32[$$idx$val$i239$i>>2]|0;
          $$arith20 = (($77) + 1)|0;
          $$overflow21 = ($77>>>0)>(4294967294);
          if ($$overflow21) {
           _llvm_trap();
           // unreachable;
          }
          HEAP32[$$idx$val$i239$i>>2] = $$arith20;
          $78 = HEAP32[$15>>2]|0;
          $$arith16 = (($78) + 1)|0;
          $$overflow17 = ($78>>>0)>(4294967294);
          if ($$overflow17) {
           _llvm_trap();
           // unreachable;
          }
          $79 = $$idx$val$i239$i;
          HEAP32[$15>>2] = $$arith16;
          $80 = $73 + $75;
          $81 = $74 + $76;
          $82 = $80 * 0.5;
          $83 = $81 * 0.5;
          $84 = $82 + 0.0;
          $85 = $83 + 0.0;
          HEAPF32[$_83$i>>2] = $73;
          $_14$sroa$4$0$$sroa_idx36$i$i = ((($_83$i)) + 4|0);
          HEAPF32[$_14$sroa$4$0$$sroa_idx36$i$i>>2] = $74;
          $_14$sroa$5$0$$sroa_idx38$i$i = ((($_83$i)) + 8|0);
          HEAPF32[$_14$sroa$5$0$$sroa_idx38$i$i>>2] = $75;
          $_14$sroa$6$0$$sroa_idx40$i$i = ((($_83$i)) + 12|0);
          HEAPF32[$_14$sroa$6$0$$sroa_idx40$i$i>>2] = $76;
          $86 = ((($_83$i)) + 16|0);
          HEAPF32[$86>>2] = $84;
          $87 = ((($_83$i)) + 20|0);
          HEAPF32[$87>>2] = $85;
          $$sroa_idx = ((($_83$i)) + 24|0);
          HEAP32[$$sroa_idx>>2] = 1;
          $$sroa_idx84 = ((($_83$i)) + 28|0);
          HEAP32[$$sroa_idx84>>2] = $79;
          $$sroa_idx337$i = ((($_83$i)) + 32|0);
          HEAP32[$$sroa_idx337$i>>2] = 1;
          $$sroa_idx338$i = ((($_83$i)) + 36|0);
          HEAP32[$$sroa_idx338$i>>2] = $1;
          $88 = ((($_83$i)) + 40|0);
          HEAP32[$88>>2] = $parent$0$i;
          $89 = ((($_83$i)) + 44|0);
          HEAP8[$89>>0] = 1;
          __THREW__ = 0;
          $90 = (invoke_iii(275,($0|0),($_83$i|0))|0);
          $91 = __THREW__; __THREW__ = 0;
          $92 = $91&1;
          if ($92) {
           $170 = ___cxa_find_matching_catch_2()|0;
           $171 = tempRet0;
           HEAP32[$68>>2] = 0;
           $$pre$phi$iZ2D = $51;$$pre$phi396$iZ2D = $50;$personalityslot$sroa$0$2$i = $170;$personalityslot$sroa$21$2$i = $171;
           break;
          }
          $93 = ((($$idx$val$i)) + 40|0);
          HEAP32[$93>>2] = 2;
          $94 = ((($$idx$val$i)) + 44|0);
          HEAP32[$94>>2] = $90;
          HEAP32[$$idx$i$i>>2] = 1;
          $95 = ((($15)) + 44|0);
          HEAP32[$95>>2] = $90;
          if ($left$0$off0$i) {
           $172 = ((($parent$0$i)) + 24|0);
           __ZN4drop17h9f42eedb81b88214E($172);
           $_105$sroa$0$0$$sroa_idx118$i = ((($parent$0$i)) + 24|0);
           HEAP32[$_105$sroa$0$0$$sroa_idx118$i>>2] = 0;
           $_105$sroa$5$0$$sroa_idx123$i = ((($parent$0$i)) + 28|0);
           HEAP32[$_105$sroa$5$0$$sroa_idx123$i>>2] = $90;
          } else {
           $173 = ((($parent$0$i)) + 32|0);
           __ZN4drop17h9f42eedb81b88214E($173);
           $_107$sroa$0$0$$sroa_idx109$i = ((($parent$0$i)) + 32|0);
           HEAP32[$_107$sroa$0$0$$sroa_idx109$i>>2] = 0;
           $_107$sroa$5$0$$sroa_idx114$i = ((($parent$0$i)) + 36|0);
           HEAP32[$_107$sroa$5$0$$sroa_idx114$i>>2] = $90;
          }
          HEAP32[$68>>2] = 0;
          $$pre$phi397$iZ2D = $15;$_0$0$i = $18;$_149$1$i = 1;$_150$1$i = 0;
          break L12;
         }
         else if ((label|0) == 72) {
          // unreachable;
         }
         else if ((label|0) == 73) {
          $200 = ___cxa_find_matching_catch_2()|0;
          $201 = tempRet0;
          $$pre$pre$phi$iZZ2D = $51;$$pre395$pre$phi$iZZ2D = $50;$lpad$phi$i$index = $200;$lpad$phi$i$index11 = $201;
          label = 75;
          break;
         }
        }
       } while(0);
       if ((label|0) == 74) {
        $202 = ___cxa_find_matching_catch_2()|0;
        $203 = tempRet0;
        $$pre398$i = ((($18)) + 24|0);
        $$pre$i = ((($18)) + 32|0);
        $$pre$pre$phi$iZZ2D = $$pre398$i;$$pre395$pre$phi$iZZ2D = $$pre$i;$lpad$phi$i$index = $202;$lpad$phi$i$index11 = $203;
        label = 75;
       }
       if ((label|0) == 75) {
        $$pre$phi$iZ2D = $$pre$pre$phi$iZZ2D;$$pre$phi396$iZ2D = $$pre395$pre$phi$iZZ2D;$personalityslot$sroa$0$2$i = $lpad$phi$i$index;$personalityslot$sroa$21$2$i = $lpad$phi$i$index11;
       }
       __ZN4drop17h9f42eedb81b88214E($$pre$phi$iZ2D);
       __ZN4drop17h9f42eedb81b88214E($$pre$phi396$iZ2D);
       $42 = $10;
       _free($42);
       $_149$3361$i = 1;$_150$3362$i = 0;$personalityslot$sroa$0$4364$i = $personalityslot$sroa$0$2$i;$personalityslot$sroa$21$4363$i = $personalityslot$sroa$21$2$i;
       label = 52;
       break;
      }
      case 1:  {
       $40 = $10;
       $41 = HEAP32[$40>>2]|0;
       $$arith24 = (($41) + 1)|0;
       $$overflow25 = ($41>>>0)>(4294967294);
       if ($$overflow25) {
        _llvm_trap();
        // unreachable;
       }
       HEAP32[$40>>2] = $$arith24;
       $96 = ((($40)) + 8|0);
       $97 = HEAP32[$96>>2]|0;
       $cond$i$i$i248$i = ($97|0)==(0);
       do {
        if ($cond$i$i$i248$i) {
         HEAP32[$96>>2] = -1;
         $$idx$i253$i = ((($40)) + 12|0);
         $$idx$val$i254$i = +HEAPF32[$$idx$i253$i>>2];
         $$idx2$i255$i = ((($40)) + 16|0);
         $$idx2$val$i256$i = +HEAPF32[$$idx2$i255$i>>2];
         $$idx3$val$i258$i = +HEAPF32[$31>>2];
         $$idx4$i259$i = ((($15)) + 16|0);
         $$idx4$val$i260$i = +HEAPF32[$$idx4$i259$i>>2];
         $101 = (+_fminf($$idx$val$i254$i,$$idx3$val$i258$i));
         $102 = (+_fminf($$idx2$val$i256$i,$$idx4$val$i260$i));
         $$idx5$i261$i = ((($40)) + 20|0);
         $$idx5$val$i262$i = +HEAPF32[$$idx5$i261$i>>2];
         $$idx6$i263$i = ((($40)) + 24|0);
         $$idx6$val$i264$i = +HEAPF32[$$idx6$i263$i>>2];
         $$idx7$i265$i = ((($15)) + 20|0);
         $$idx7$val$i266$i = +HEAPF32[$$idx7$i265$i>>2];
         $$idx8$i267$i = ((($15)) + 24|0);
         $$idx8$val$i268$i = +HEAPF32[$$idx8$i267$i>>2];
         $103 = (+_fmaxf($$idx5$val$i262$i,$$idx7$val$i266$i));
         $104 = (+_fmaxf($$idx6$val$i264$i,$$idx8$val$i268$i));
         $105 = HEAP32[$15>>2]|0;
         $$arith = (($105) + 1)|0;
         $$overflow = ($105>>>0)>(4294967294);
         if ($$overflow) {
          _llvm_trap();
          // unreachable;
         }
         HEAP32[$15>>2] = $$arith;
         $106 = $101 + $103;
         $107 = $102 + $104;
         $108 = $106 * 0.5;
         $109 = $107 * 0.5;
         $110 = $108 + 0.0;
         $111 = $109 + 0.0;
         HEAPF32[$_126$i>>2] = $101;
         $_14$sroa$4$0$$sroa_idx36$i282$i = ((($_126$i)) + 4|0);
         HEAPF32[$_14$sroa$4$0$$sroa_idx36$i282$i>>2] = $102;
         $_14$sroa$5$0$$sroa_idx38$i283$i = ((($_126$i)) + 8|0);
         HEAPF32[$_14$sroa$5$0$$sroa_idx38$i283$i>>2] = $103;
         $_14$sroa$6$0$$sroa_idx40$i284$i = ((($_126$i)) + 12|0);
         HEAPF32[$_14$sroa$6$0$$sroa_idx40$i284$i>>2] = $104;
         $112 = ((($_126$i)) + 16|0);
         HEAPF32[$112>>2] = $110;
         $113 = ((($_126$i)) + 20|0);
         HEAPF32[$113>>2] = $111;
         $114 = ((($_126$i)) + 24|0);
         $115 = $114;
         $116 = $115;
         HEAP32[$116>>2] = 1;
         $117 = (($115) + 4)|0;
         $118 = $117;
         HEAP32[$118>>2] = $10;
         $$sroa_idx324$i = ((($_126$i)) + 32|0);
         HEAP32[$$sroa_idx324$i>>2] = 1;
         $$sroa_idx325$i = ((($_126$i)) + 36|0);
         HEAP32[$$sroa_idx325$i>>2] = $1;
         $119 = ((($_126$i)) + 40|0);
         HEAP32[$119>>2] = 0;
         $120 = ((($_126$i)) + 44|0);
         HEAP8[$120>>0] = 1;
         __THREW__ = 0;
         $121 = (invoke_iii(275,($0|0),($_126$i|0))|0);
         $122 = __THREW__; __THREW__ = 0;
         $123 = $122&1;
         if ($123) {
          $182 = ___cxa_find_matching_catch_2()|0;
          $183 = tempRet0;
          HEAP32[$96>>2] = 0;
          $_152$2369$i = 0;$personalityslot$sroa$0$9373$i = $182;$personalityslot$sroa$21$9371$i = $183;
          break;
         }
         $124 = ((($40)) + 40|0);
         HEAP32[$124>>2] = 2;
         $125 = ((($40)) + 44|0);
         HEAP32[$125>>2] = $121;
         HEAP32[$$idx$i$i>>2] = 1;
         $126 = ((($15)) + 44|0);
         HEAP32[$126>>2] = $121;
         HEAP32[$96>>2] = 0;
         $127 = $10;
         $128 = $10;
         $129 = HEAP32[$128>>2]|0;
         $130 = (($129) + -1)|0;
         HEAP32[$128>>2] = $130;
         $131 = HEAP32[$40>>2]|0;
         $132 = ($131|0)==(0);
         if (!($132)) {
          $$pre$phi397$iZ2D = $15;$_0$0$i = $121;$_149$1$i = 0;$_150$1$i = 1;
          break L12;
         }
         $133 = ((($40)) + 4|0);
         $134 = HEAP32[$133>>2]|0;
         $135 = (($134) + -1)|0;
         HEAP32[$133>>2] = $135;
         $136 = ($135|0)==(0);
         if (!($136)) {
          $$pre$phi397$iZ2D = $15;$_0$0$i = $121;$_149$1$i = 0;$_150$1$i = 1;
          break L12;
         }
         _free($127);
         $$pre$phi397$iZ2D = $15;$_0$0$i = $121;$_149$1$i = 0;$_150$1$i = 1;
         break L12;
        } else {
         __THREW__ = 0;
         invoke_v(212);
         $98 = __THREW__; __THREW__ = 0;
         $99 = ___cxa_find_matching_catch_2()|0;
         $100 = tempRet0;
         $_152$2369$i = 1;$personalityslot$sroa$0$9373$i = $99;$personalityslot$sroa$21$9371$i = $100;
        }
       } while(0);
       $169 = $10;
       $161 = $10;
       $174 = HEAP32[$161>>2]|0;
       $175 = (($174) + -1)|0;
       HEAP32[$161>>2] = $175;
       $176 = HEAP32[$40>>2]|0;
       $177 = ($176|0)==(0);
       if ($177) {
        $178 = ((($40)) + 4|0);
        $179 = HEAP32[$178>>2]|0;
        $180 = (($179) + -1)|0;
        HEAP32[$178>>2] = $180;
        $181 = ($180|0)==(0);
        if ($181) {
         _free($169);
        }
       }
       if ($_152$2369$i) {
        $160 = HEAP32[$161>>2]|0;
        $162 = (($160) + -1)|0;
        HEAP32[$161>>2] = $162;
        $163 = HEAP32[$40>>2]|0;
        $164 = ($163|0)==(0);
        if ($164) {
         $165 = ((($40)) + 4|0);
         $166 = HEAP32[$165>>2]|0;
         $167 = (($166) + -1)|0;
         HEAP32[$165>>2] = $167;
         $168 = ($167|0)==(0);
         if ($168) {
          _free($169);
          $_149$3361$i = 0;$_150$3362$i = 1;$personalityslot$sroa$0$4364$i = $personalityslot$sroa$0$9373$i;$personalityslot$sroa$21$4363$i = $personalityslot$sroa$21$9371$i;
          label = 52;
         } else {
          $_149$3361$i = 0;$_150$3362$i = 1;$personalityslot$sroa$0$4364$i = $personalityslot$sroa$0$9373$i;$personalityslot$sroa$21$4363$i = $personalityslot$sroa$21$9371$i;
          label = 52;
         }
        } else {
         $_149$3361$i = 0;$_150$3362$i = 1;$personalityslot$sroa$0$4364$i = $personalityslot$sroa$0$9373$i;$personalityslot$sroa$21$4363$i = $personalityslot$sroa$21$9371$i;
         label = 52;
        }
       } else {
        $_149$3361$i = 0;$_150$3362$i = 1;$personalityslot$sroa$0$4364$i = $personalityslot$sroa$0$9373$i;$personalityslot$sroa$21$4363$i = $personalityslot$sroa$21$9371$i;
        label = 52;
       }
       break;
      }
      case 2:  {
       __THREW__ = 0;
       invoke_viii(225,(10157|0),40,(5508|0));
       $37 = __THREW__; __THREW__ = 0;
       $38 = ___cxa_find_matching_catch_2()|0;
       $39 = tempRet0;
       $_149$3361$i = 1;$_150$3362$i = 1;$personalityslot$sroa$0$4364$i = $38;$personalityslot$sroa$21$4363$i = $39;
       label = 52;
       break;
      }
      default: {
       // unreachable;
      }
      }
     } while(0);
     if ((label|0) == 52) {
      HEAP32[$16>>2] = 0;
      $_149$0$off0$i = $_149$3361$i;$_150$0$off0$i = $_150$3362$i;$personalityslot$sroa$0$1$i = $personalityslot$sroa$0$4364$i;$personalityslot$sroa$21$1$i = $personalityslot$sroa$21$4363$i;
      break;
     }
     HEAP32[$16>>2] = 0;
     $137 = $1;
     $138 = $1;
     $139 = HEAP32[$138>>2]|0;
     $140 = (($139) + -1)|0;
     HEAP32[$138>>2] = $140;
     $141 = HEAP32[$$pre$phi397$iZ2D>>2]|0;
     $142 = ($141|0)==(0);
     if ($142) {
      $143 = ((($15)) + 4|0);
      $144 = HEAP32[$143>>2]|0;
      $145 = (($144) + -1)|0;
      HEAP32[$143>>2] = $145;
      $146 = ($145|0)==(0);
      if ($146) {
       _free($137);
      }
     }
     $147 = HEAP32[$self$i>>2]|0;
     $trunc170$i = $147&255;
     $trunc170$i$clear = $trunc170$i & 3;
     switch ($trunc170$i$clear<<24>>24) {
     case 0:  {
      $184 = ($_150$1$i<<24>>24)==(0);
      if (!($184)) {
       $185 = ((($self$i)) + 4|0);
       $$val177$i = HEAP32[$185>>2]|0;
       $186 = ((($$val177$i)) + 24|0);
       __ZN4drop17h9f42eedb81b88214E($186);
       $187 = ((($$val177$i)) + 32|0);
       __ZN4drop17h9f42eedb81b88214E($187);
       _free($$val177$i);
      }
      break;
     }
     case 1:  {
      $188 = ($_149$1$i<<24>>24)==(0);
      if (!($188)) {
       $189 = ((($self$i)) + 4|0);
       $190 = HEAP32[$189>>2]|0;
       $191 = HEAP32[$190>>2]|0;
       $192 = (($191) + -1)|0;
       HEAP32[$190>>2] = $192;
       $193 = ($192|0)==(0);
       if ($193) {
        $194 = ((($190)) + 4|0);
        $195 = HEAP32[$194>>2]|0;
        $196 = (($195) + -1)|0;
        HEAP32[$194>>2] = $196;
        $197 = ($196|0)==(0);
        if ($197) {
         _free($190);
        }
       }
      }
      break;
     }
     case 2:  {
      __ZN4drop17h9f42eedb81b88214E($self$i);
      break;
     }
     default: {
      // unreachable;
     }
     }
     $219 = $_0$0$i;
     $_12$sroa$5$0 = 0;$_12$sroa$7$0 = $219;$_30$0 = 0;
     break L1;
    }
   } while(0);
   if ((label|0) == 71) {
    $198 = ___cxa_find_matching_catch_2()|0;
    $199 = tempRet0;
    $_149$0$off0$i = 1;$_150$0$off0$i = 1;$personalityslot$sroa$0$1$i = $198;$personalityslot$sroa$21$1$i = $199;
   }
   $20 = $1;
   $21 = $1;
   $22 = HEAP32[$21>>2]|0;
   $23 = (($22) + -1)|0;
   HEAP32[$21>>2] = $23;
   $24 = HEAP32[$15>>2]|0;
   $25 = ($24|0)==(0);
   if ($25) {
    $26 = ((($15)) + 4|0);
    $27 = HEAP32[$26>>2]|0;
    $28 = (($27) + -1)|0;
    HEAP32[$26>>2] = $28;
    $29 = ($28|0)==(0);
    if ($29) {
     _free($20);
    }
   }
   $30 = HEAP32[$self$i>>2]|0;
   $trunc$i = $30&255;
   $trunc$i$clear = $trunc$i & 3;
   switch ($trunc$i$clear<<24>>24) {
   case 0:  {
    if ($_150$0$off0$i) {
     $148 = ((($self$i)) + 4|0);
     $$val$i = HEAP32[$148>>2]|0;
     $149 = ((($$val$i)) + 24|0);
     __ZN4drop17h9f42eedb81b88214E($149);
     $150 = ((($$val$i)) + 32|0);
     __ZN4drop17h9f42eedb81b88214E($150);
     _free($$val$i);
    }
    break;
   }
   case 1:  {
    if ($_149$0$off0$i) {
     $151 = ((($self$i)) + 4|0);
     $152 = HEAP32[$151>>2]|0;
     $153 = HEAP32[$152>>2]|0;
     $154 = (($153) + -1)|0;
     HEAP32[$152>>2] = $154;
     $155 = ($154|0)==(0);
     if ($155) {
      $156 = ((($152)) + 4|0);
      $157 = HEAP32[$156>>2]|0;
      $158 = (($157) + -1)|0;
      HEAP32[$156>>2] = $158;
      $159 = ($158|0)==(0);
      if ($159) {
       _free($152);
      }
     }
    }
    break;
   }
   case 2:  {
    __ZN4drop17h9f42eedb81b88214E($self$i);
    break;
   }
   default: {
    // unreachable;
   }
   }
   $eh$lpad$body108$index4Z2D = $personalityslot$sroa$21$1$i;$eh$lpad$body108$indexZ2D = $personalityslot$sroa$0$1$i;
   ___resumeException($eh$lpad$body108$indexZ2D|0);
   // unreachable;
  } else {
   $206 = $1;
   $207 = ((($206)) + 8|0);
   $208 = HEAP32[$207>>2]|0;
   $cond$i$i$i61 = ($208|0)==(0);
   if ($cond$i$i$i61) {
    $218 = ((($206)) + 40|0);
    HEAP32[$218>>2] = 0;
    HEAP32[$207>>2] = 0;
    $_12$sroa$5$0 = 1;$_12$sroa$7$0 = $1;$_30$0 = 1;
    break;
   }
   __THREW__ = 0;
   invoke_v(212);
   $209 = __THREW__; __THREW__ = 0;
   $210 = ___cxa_find_matching_catch_2()|0;
   $211 = tempRet0;
   $212 = $1;
   $213 = $1;
   $214 = HEAP32[$213>>2]|0;
   $215 = (($214) + -1)|0;
   HEAP32[$213>>2] = $215;
   $216 = HEAP32[$206>>2]|0;
   $217 = ($216|0)==(0);
   if (!($217)) {
    $eh$lpad$body108$index4Z2D = $211;$eh$lpad$body108$indexZ2D = $210;
    ___resumeException($eh$lpad$body108$indexZ2D|0);
    // unreachable;
   }
   $220 = ((($206)) + 4|0);
   $221 = HEAP32[$220>>2]|0;
   $222 = (($221) + -1)|0;
   HEAP32[$220>>2] = $222;
   $223 = ($222|0)==(0);
   if (!($223)) {
    $eh$lpad$body108$index4Z2D = $211;$eh$lpad$body108$indexZ2D = $210;
    ___resumeException($eh$lpad$body108$indexZ2D|0);
    // unreachable;
   }
   _free($212);
   $eh$lpad$body108$index4Z2D = $211;$eh$lpad$body108$indexZ2D = $210;
   ___resumeException($eh$lpad$body108$indexZ2D|0);
   // unreachable;
  }
 } while(0);
 $204 = HEAP32[$2>>2]|0;
 $cond$i58 = ($204|0)==(1);
 if ($cond$i58) {
  $205 = ((($0)) + 16|0);
  __ZN4drop17h9f42eedb81b88214E($205);
 }
 $_12$sroa$0$0$$sroa_idx = ((($0)) + 12|0);
 HEAP32[$_12$sroa$0$0$$sroa_idx>>2] = 1;
 $_12$sroa$5$0$$sroa_idx74 = ((($0)) + 16|0);
 HEAP32[$_12$sroa$5$0$$sroa_idx74>>2] = $_12$sroa$5$0;
 $_12$sroa$7$0$$sroa_idx76 = ((($0)) + 20|0);
 HEAP32[$_12$sroa$7$0$$sroa_idx76>>2] = $_12$sroa$7$0;
 $224 = ((($0)) + 24|0);
 $225 = HEAP32[$224>>2]|0;
 $226 = (($225) + 1)|0;
 HEAP32[$224>>2] = $226;
 $227 = HEAP32[$self_tree>>2]|0;
 $switch5 = ($227|0)!=(1);
 $228 = ($_30$0<<24>>24)==(0);
 $or$cond = $228 | $switch5;
 if ($or$cond) {
  STACKTOP = sp;return;
 }
 $229 = ((($self_tree)) + 4|0);
 __ZN4drop17h9f42eedb81b88214E($229);
 STACKTOP = sp;return;
}
function __ZN80__LT_ncollide_geometry__partitioning__dbvt__DBVT_LT_P_C__u20_B_C__u20_BV_GT__GT_6remove17h870bd997ceaebb8cE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$68$i = 0, $$fca$0$extract15122$i = 0, $$fca$1$extract17123$i = 0, $$idx$i$i = 0, $$idx$i$i$i = 0, $$idx$i$i90$i = 0, $$idx$val = 0, $$idx$val$i$i = 0, $$idx$val$i$i$i = 0, $$idx$val$i$i91$i = 0, $$pre$i$i$i = 0, $$pre$i$i94$i = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0;
 var $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0;
 var $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0;
 var $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0;
 var $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0;
 var $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0;
 var $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0;
 var $99 = 0, $_0$0$off0$i$i = 0, $_15$sroa$0$1 = 0, $_15$sroa$0$2 = 0, $_40$sroa$0$0$$sroa_idx$i = 0, $_40$sroa$5$0$$sroa_idx41$i = 0, $_86$0$i = 0, $cond$i = 0, $cond$i$i = 0, $cond$i$i$i = 0, $cond$i$i$i$i = 0, $cond$i$i$i21 = 0, $cond$i$i$i76$i = 0, $cond$i102$i = 0, $cond$i83$i = 0, $curr_root$i = 0, $extract$t49$i = 0, $other$i = 0, $parent_left$i = 0, $parent_right$i = 0;
 var $personalityslot$sroa$0$149 = 0, $personalityslot$sroa$0$2$i = 0, $personalityslot$sroa$10$2$i = 0, $personalityslot$sroa$6$148 = 0, $self$i$i = 0, $self$i100$i = 0, $self_tree = 0, $src$i$i$sroa$0$0$$sroa_idx = 0, $src$i$i$sroa$0$0$copyload = 0, $src$i$i$sroa$4$0$$sroa_idx39 = 0, $switch3$i = 0, $tmp_ret$sroa$0$0$i = 0, $trunc$i$clear = 0, $trunc61$i$clear = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $self$i100$i = sp + 48|0;
 $self$i$i = sp + 40|0;
 $curr_root$i = sp + 32|0;
 $parent_left$i = sp + 24|0;
 $parent_right$i = sp + 16|0;
 $other$i = sp + 8|0;
 $self_tree = sp;
 $src$i$i$sroa$0$0$$sroa_idx = ((($0)) + 12|0);
 $src$i$i$sroa$0$0$copyload = HEAP32[$src$i$i$sroa$0$0$$sroa_idx>>2]|0;
 $src$i$i$sroa$4$0$$sroa_idx39 = ((($0)) + 16|0);
 $2 = $src$i$i$sroa$4$0$$sroa_idx39;
 $3 = $2;
 $4 = HEAP32[$3>>2]|0;
 $5 = (($2) + 4)|0;
 $6 = $5;
 $7 = HEAP32[$6>>2]|0;
 HEAP32[$src$i$i$sroa$0$0$$sroa_idx>>2] = 0;
 $switch3$i = ($src$i$i$sroa$0$0$copyload|0)==(1);
 if (!($switch3$i)) {
  __THREW__ = 0;
  invoke_vii(219,(12340|0),20);
  $8 = __THREW__; __THREW__ = 0;
  $9 = ___cxa_find_matching_catch_2()|0;
  $10 = tempRet0;
  $personalityslot$sroa$0$149 = $9;$personalityslot$sroa$6$148 = $10;
  ___resumeException($personalityslot$sroa$0$149|0);
  // unreachable;
 }
 $11 = $self_tree;
 $12 = $11;
 HEAP32[$12>>2] = $4;
 $13 = (($11) + 4)|0;
 $14 = $13;
 HEAP32[$14>>2] = $7;
 $$idx$val = HEAP32[$1>>2]|0;
 $15 = ((($$idx$val)) + 8|0);
 $16 = HEAP32[$15>>2]|0;
 $cond$i$i$i = ($16|0)==(0);
 if (!($cond$i$i$i)) {
  __THREW__ = 0;
  invoke_v(212);
  $17 = __THREW__; __THREW__ = 0;
  $18 = ___cxa_find_matching_catch_2()|0;
  $19 = tempRet0;
  __ZN4drop17h9f42eedb81b88214E($self_tree);
  $personalityslot$sroa$0$149 = $18;$personalityslot$sroa$6$148 = $19;
  ___resumeException($personalityslot$sroa$0$149|0);
  // unreachable;
 }
 HEAP32[$15>>2] = -1;
 $20 = $curr_root$i;
 $21 = $20;
 HEAP32[$21>>2] = $4;
 $22 = (($20) + 4)|0;
 $23 = $22;
 HEAP32[$23>>2] = $7;
 $$idx$i$i = ((($$idx$val)) + 40|0);
 $$idx$val$i$i = HEAP32[$$idx$i$i>>2]|0;
 $cond$i$i$i21 = ($$idx$val$i$i|0)==(0);
 L9: do {
  if ($cond$i$i$i21) {
   HEAP32[$$idx$i$i>>2] = 3;
   $187 = 0;$188 = 0;$_15$sroa$0$1 = 0;
   label = 49;
  } else {
   $24 = ((($$idx$val)) + 40|0);
   $25 = $24;
   $26 = $25;
   $27 = HEAP32[$26>>2]|0;
   $28 = (($25) + 4)|0;
   $29 = $28;
   $30 = HEAP32[$29>>2]|0;
   $31 = $24;
   $32 = $31;
   HEAP32[$32>>2] = 3;
   $33 = (($31) + 4)|0;
   $34 = $33;
   HEAP32[$34>>2] = 0;
   switch ($27|0) {
   case 3: case 0:  {
    __THREW__ = 0;
    invoke_viii(225,(12490|0),45,(5424|0));
    $35 = __THREW__; __THREW__ = 0;
    $36 = ___cxa_find_matching_catch_2()|0;
    $37 = tempRet0;
    $personalityslot$sroa$0$2$i = $36;$personalityslot$sroa$10$2$i = $37;
    break;
   }
   case 1:  {
    $tmp_ret$sroa$0$0$i = 1;
    label = 12;
    break;
   }
   case 2:  {
    $tmp_ret$sroa$0$0$i = 0;
    label = 12;
    break;
   }
   default: {
    // unreachable;
   }
   }
   do {
    if ((label|0) == 12) {
     $38 = $30;
     $39 = ((($38)) + 40|0);
     $40 = HEAP32[$39>>2]|0;
     $41 = ((($38)) + 24|0);
     $42 = $41;
     $43 = $42;
     $44 = HEAP32[$43>>2]|0;
     $45 = (($42) + 4)|0;
     $46 = $45;
     $47 = HEAP32[$46>>2]|0;
     $48 = $41;
     $49 = $48;
     HEAP32[$49>>2] = 2;
     $50 = (($48) + 4)|0;
     $51 = $50;
     HEAP32[$51>>2] = 0;
     $52 = $parent_left$i;
     $53 = $52;
     HEAP32[$53>>2] = $44;
     $54 = (($52) + 4)|0;
     $55 = $54;
     HEAP32[$55>>2] = $47;
     $56 = ((($38)) + 32|0);
     $57 = $56;
     $58 = $57;
     $59 = HEAP32[$58>>2]|0;
     $60 = (($57) + 4)|0;
     $61 = $60;
     $62 = HEAP32[$61>>2]|0;
     $63 = $56;
     $64 = $63;
     HEAP32[$64>>2] = 2;
     $65 = (($63) + 4)|0;
     $66 = $65;
     HEAP32[$66>>2] = 0;
     $67 = $parent_right$i;
     $68 = $67;
     HEAP32[$68>>2] = $59;
     $69 = (($67) + 4)|0;
     $70 = $69;
     HEAP32[$70>>2] = $62;
     $71 = $tmp_ret$sroa$0$0$i ? $44 : $59;
     $72 = $tmp_ret$sroa$0$0$i ? $47 : $62;
     $73 = $other$i;
     $74 = $73;
     HEAP32[$74>>2] = $71;
     $75 = (($73) + 4)|0;
     $76 = $75;
     HEAP32[$76>>2] = $72;
     $77 = ($40|0)==(0|0);
     $78 = $72;
     $79 = $72;
     L18: do {
      if ($77) {
       $80 = $71&255;
       $trunc$i$clear = $80 & 3;
       switch ($trunc$i$clear<<24>>24) {
       case 0:  {
        $170 = ((($79)) + 40|0);
        HEAP32[$170>>2] = 0;
        $189 = $71;$190 = $72;$_86$0$i = 1;
        label = 41;
        break L18;
        break;
       }
       case 1:  {
        $171 = ((($78)) + 8|0);
        $172 = HEAP32[$171>>2]|0;
        $cond$i$i$i76$i = ($172|0)==(0);
        if ($cond$i$i$i76$i) {
         $174 = ((($78)) + 40|0);
         HEAP32[$174>>2] = 0;
         HEAP32[$171>>2] = 0;
         $189 = $71;$190 = $72;$_86$0$i = 1;
         label = 41;
         break L18;
        } else {
         __THREW__ = 0;
         invoke_v(212);
         $173 = __THREW__; __THREW__ = 0;
         label = 46;
         break L18;
        }
        break;
       }
       case 2:  {
        __THREW__ = 0;
        invoke_viii(225,(10157|0),40,(5460|0));
        $169 = __THREW__; __THREW__ = 0;
        label = 46;
        break L18;
        break;
       }
       default: {
        // unreachable;
       }
       }
      } else {
       $81 = ((($40)) + 32|0);
       $82 = HEAP32[$81>>2]|0;
       $cond$i$i = ($82|0)==(0);
       $83 = ((($40)) + 36|0);
       $84 = HEAP32[$83>>2]|0;
       $85 = ($84|0)==($38|0);
       $_0$0$off0$i$i = $cond$i$i & $85;
       $86 = $71&255;
       $trunc61$i$clear = $86 & 3;
       L29: do {
        switch ($trunc61$i$clear<<24>>24) {
        case 0:  {
         $88 = ((($79)) + 40|0);
         HEAP32[$88>>2] = $40;
         break;
        }
        case 1:  {
         $89 = ((($78)) + 8|0);
         $90 = HEAP32[$89>>2]|0;
         $cond$i$i$i$i = ($90|0)==(0);
         if ($cond$i$i$i$i) {
          $$68$i = $_0$0$off0$i$i ? 1 : 2;
          $_40$sroa$0$0$$sroa_idx$i = ((($78)) + 40|0);
          HEAP32[$_40$sroa$0$0$$sroa_idx$i>>2] = $$68$i;
          $_40$sroa$5$0$$sroa_idx41$i = ((($78)) + 44|0);
          HEAP32[$_40$sroa$5$0$$sroa_idx41$i>>2] = $40;
          HEAP32[$89>>2] = 0;
          break L29;
         } else {
          __THREW__ = 0;
          invoke_v(212);
          $91 = __THREW__; __THREW__ = 0;
          label = 46;
          break L18;
         }
         break;
        }
        case 2:  {
         __THREW__ = 0;
         invoke_viii(225,(10157|0),40,(5448|0));
         $87 = __THREW__; __THREW__ = 0;
         label = 46;
         break L18;
         break;
        }
        default: {
         // unreachable;
        }
        }
       } while(0);
       if ($_0$0$off0$i$i) {
        $92 = ((($40)) + 32|0);
        $93 = $92;
        $94 = $93;
        $95 = HEAP32[$94>>2]|0;
        $96 = (($93) + 4)|0;
        $97 = $96;
        $98 = HEAP32[$97>>2]|0;
        $99 = $92;
        $100 = $99;
        HEAP32[$100>>2] = $71;
        $101 = (($99) + 4)|0;
        $102 = $101;
        HEAP32[$102>>2] = $72;
        $103 = $other$i;
        $104 = $103;
        HEAP32[$104>>2] = $95;
        $105 = (($103) + 4)|0;
        $106 = $105;
        HEAP32[$106>>2] = $98;
        $107 = $self$i$i;
        $108 = $107;
        HEAP32[$108>>2] = $95;
        $109 = (($107) + 4)|0;
        $110 = $109;
        HEAP32[$110>>2] = $98;
        $cond$i83$i = ($95|0)==(0);
        if (!($cond$i83$i)) {
         __THREW__ = 0;
         invoke_viii(225,(12360|0),50,(5436|0));
         $111 = __THREW__; __THREW__ = 0;
         $112 = ___cxa_find_matching_catch_2()|0;
         $113 = tempRet0;
         __ZN4drop17h9f42eedb81b88214E($self$i$i);
         $$fca$0$extract15122$i = $112;$$fca$1$extract17123$i = $113;
         break;
        }
        $114 = $98;
        $115 = ((($0)) + 8|0);
        $116 = HEAP32[$115>>2]|0;
        $$idx$i$i90$i = ((($0)) + 4|0);
        $$idx$val$i$i91$i = HEAP32[$$idx$i$i90$i>>2]|0;
        $117 = ($116|0)==($$idx$val$i$i91$i|0);
        do {
         if ($117) {
          __THREW__ = 0;
          invoke_vi(276,($0|0));
          $123 = __THREW__; __THREW__ = 0;
          $124 = $123&1;
          if ($124) {
           $118 = ___cxa_find_matching_catch_2()|0;
           $119 = tempRet0;
           $120 = ((($114)) + 24|0);
           __ZN4drop17h9f42eedb81b88214E($120);
           $121 = ((($114)) + 32|0);
           __ZN4drop17h9f42eedb81b88214E($121);
           $122 = $98;
           _free($122);
           $$fca$0$extract15122$i = $118;$$fca$1$extract17123$i = $119;
           break L18;
          } else {
           $$pre$i$i94$i = HEAP32[$115>>2]|0;
           $127 = $$pre$i$i94$i;
           break;
          }
         } else {
          $127 = $116;
         }
        } while(0);
        $125 = HEAP32[$0>>2]|0;
        $126 = (($125) + ($127<<2)|0);
        HEAP32[$126>>2] = $114;
        $128 = HEAP32[$115>>2]|0;
        $129 = (($128) + 1)|0;
        HEAP32[$115>>2] = $129;
       } else {
        $130 = ((($40)) + 24|0);
        $131 = $130;
        $132 = $131;
        $133 = HEAP32[$132>>2]|0;
        $134 = (($131) + 4)|0;
        $135 = $134;
        $136 = HEAP32[$135>>2]|0;
        $137 = $130;
        $138 = $137;
        HEAP32[$138>>2] = $71;
        $139 = (($137) + 4)|0;
        $140 = $139;
        HEAP32[$140>>2] = $72;
        $141 = $other$i;
        $142 = $141;
        HEAP32[$142>>2] = $133;
        $143 = (($141) + 4)|0;
        $144 = $143;
        HEAP32[$144>>2] = $136;
        $145 = $self$i100$i;
        $146 = $145;
        HEAP32[$146>>2] = $133;
        $147 = (($145) + 4)|0;
        $148 = $147;
        HEAP32[$148>>2] = $136;
        $cond$i102$i = ($133|0)==(0);
        if (!($cond$i102$i)) {
         __THREW__ = 0;
         invoke_viii(225,(12360|0),50,(5436|0));
         $149 = __THREW__; __THREW__ = 0;
         $150 = ___cxa_find_matching_catch_2()|0;
         $151 = tempRet0;
         __ZN4drop17h9f42eedb81b88214E($self$i100$i);
         $$fca$0$extract15122$i = $150;$$fca$1$extract17123$i = $151;
         break;
        }
        $152 = $136;
        $153 = ((($0)) + 8|0);
        $154 = HEAP32[$153>>2]|0;
        $$idx$i$i$i = ((($0)) + 4|0);
        $$idx$val$i$i$i = HEAP32[$$idx$i$i$i>>2]|0;
        $155 = ($154|0)==($$idx$val$i$i$i|0);
        do {
         if ($155) {
          __THREW__ = 0;
          invoke_vi(276,($0|0));
          $161 = __THREW__; __THREW__ = 0;
          $162 = $161&1;
          if ($162) {
           $156 = ___cxa_find_matching_catch_2()|0;
           $157 = tempRet0;
           $158 = ((($152)) + 24|0);
           __ZN4drop17h9f42eedb81b88214E($158);
           $159 = ((($152)) + 32|0);
           __ZN4drop17h9f42eedb81b88214E($159);
           $160 = $136;
           _free($160);
           $$fca$0$extract15122$i = $156;$$fca$1$extract17123$i = $157;
           break L18;
          } else {
           $$pre$i$i$i = HEAP32[$153>>2]|0;
           $165 = $$pre$i$i$i;
           break;
          }
         } else {
          $165 = $154;
         }
        } while(0);
        $163 = HEAP32[$0>>2]|0;
        $164 = (($163) + ($165<<2)|0);
        HEAP32[$164>>2] = $152;
        $166 = HEAP32[$153>>2]|0;
        $167 = (($166) + 1)|0;
        HEAP32[$153>>2] = $167;
       }
       $168 = ((($40)) + 44|0);
       HEAP8[$168>>0] = 0;
       $189 = $4;$190 = $7;$_86$0$i = 0;
       label = 41;
      }
     } while(0);
     if ((label|0) == 41) {
      if ($tmp_ret$sroa$0$0$i) {
       __ZN4drop17h9f42eedb81b88214E($parent_right$i);
      } else {
       __ZN4drop17h9f42eedb81b88214E($parent_left$i);
      }
      $extract$t49$i = ($_86$0$i<<24>>24)==(0);
      if ($extract$t49$i) {
       $180 = $189;$183 = $190;$_15$sroa$0$2 = 1;
       break L9;
      } else {
       $187 = $189;$188 = $190;$_15$sroa$0$1 = 1;
       label = 49;
       break L9;
      }
     }
     else if ((label|0) == 46) {
      $175 = ___cxa_find_matching_catch_2()|0;
      $176 = tempRet0;
      __ZN4drop17h9f42eedb81b88214E($other$i);
      $$fca$0$extract15122$i = $175;$$fca$1$extract17123$i = $176;
     }
     if ($tmp_ret$sroa$0$0$i) {
      __ZN4drop17h9f42eedb81b88214E($parent_right$i);
      $personalityslot$sroa$0$2$i = $$fca$0$extract15122$i;$personalityslot$sroa$10$2$i = $$fca$1$extract17123$i;
      break;
     } else {
      __ZN4drop17h9f42eedb81b88214E($parent_left$i);
      $personalityslot$sroa$0$2$i = $$fca$0$extract15122$i;$personalityslot$sroa$10$2$i = $$fca$1$extract17123$i;
      break;
     }
    }
   } while(0);
   __ZN4drop17h9f42eedb81b88214E($curr_root$i);
   HEAP32[$15>>2] = 0;
   $personalityslot$sroa$0$149 = $personalityslot$sroa$0$2$i;$personalityslot$sroa$6$148 = $personalityslot$sroa$10$2$i;
   ___resumeException($personalityslot$sroa$0$149|0);
   // unreachable;
  }
 } while(0);
 if ((label|0) == 49) {
  __ZN4drop17h9f42eedb81b88214E($curr_root$i);
  $180 = $187;$183 = $188;$_15$sroa$0$2 = $_15$sroa$0$1;
 }
 $177 = HEAP32[$src$i$i$sroa$0$0$$sroa_idx>>2]|0;
 $cond$i = ($177|0)==(1);
 if (!($cond$i)) {
  HEAP32[$src$i$i$sroa$0$0$$sroa_idx>>2] = $_15$sroa$0$2;
  $178 = $src$i$i$sroa$4$0$$sroa_idx39;
  $179 = $178;
  HEAP32[$179>>2] = $180;
  $181 = (($178) + 4)|0;
  $182 = $181;
  HEAP32[$182>>2] = $183;
  $184 = ((($0)) + 24|0);
  $185 = HEAP32[$184>>2]|0;
  $186 = (($185) + -1)|0;
  HEAP32[$184>>2] = $186;
  HEAP32[$15>>2] = 0;
  STACKTOP = sp;return;
 }
 __ZN4drop17h9f42eedb81b88214E($src$i$i$sroa$4$0$$sroa_idx39);
 HEAP32[$src$i$i$sroa$0$0$$sroa_idx>>2] = $_15$sroa$0$2;
 $178 = $src$i$i$sroa$4$0$$sroa_idx39;
 $179 = $178;
 HEAP32[$179>>2] = $180;
 $181 = (($178) + 4)|0;
 $182 = $181;
 HEAP32[$182>>2] = $183;
 $184 = ((($0)) + 24|0);
 $185 = HEAP32[$184>>2]|0;
 $186 = (($185) + -1)|0;
 HEAP32[$184>>2] = $186;
 HEAP32[$15>>2] = 0;
 STACKTOP = sp;return;
}
function __ZN84__LT_ncollide_geometry__partitioning__dbvt__DBVTNode_LT_P_C__u20_B_C__u20_BV_GT__GT_5visit17h613dc86990116ad0E($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$idx$i9$i = 0, $$idx$val = 0, $$idx$val$i$i = 0.0, $$idx$val$i$i16 = 0.0, $$idx$val$i10$i = 0, $$idx1$i$i = 0, $$idx1$i$i17 = 0, $$idx1$val$i$i = 0.0, $$idx1$val$i$i18 = 0.0, $$idx11$val = 0, $$idx12$val = 0, $$idx13 = 0, $$idx13$val = 0, $$idx14 = 0, $$idx14$val = 0, $$idx2$i$i = 0, $$idx2$i$i19 = 0, $$idx2$val$i$i = 0.0, $$idx2$val$i$i20 = 0.0, $$idx3$i$i = 0;
 var $$idx3$i$i21 = 0, $$idx3$val$i$i = 0.0, $$idx3$val$i$i22 = 0.0, $$idx4$i$i = 0, $$idx4$i$i24 = 0, $$idx4$val$i$i = 0.0, $$idx4$val$i$i25 = 0.0, $$idx5$i$i = 0, $$idx5$i$i26 = 0, $$idx5$val$i$i = 0.0, $$idx5$val$i$i27 = 0.0, $$idx6$val$i$i = 0.0, $$idx6$val$i$i29 = 0.0, $$idx7$i$i = 0, $$idx7$i$i30 = 0, $$idx7$val$i$i = 0.0, $$idx7$val$i$i31 = 0.0, $$pre = 0, $$pre$i$i = 0, $$tr = 0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $cond$i$i$i = 0, $or$cond$i$i$i$i = 0, $or$cond$i$i$i$i23 = 0, $or$cond$i$i8$i$i = 0, $or$cond$i$i8$i$i32 = 0;
 var $trunc = 0, $trunc$clear = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $$tr = $0;
 L1: while(1) {
  $2 = HEAP32[$$tr>>2]|0;
  $trunc = $2&255;
  $trunc$clear = $trunc & 3;
  switch ($trunc$clear<<24>>24) {
  case 1:  {
   label = 8;
   break L1;
   break;
  }
  case 2:  {
   label = 3;
   break L1;
   break;
  }
  case 0:  {
   break;
  }
  default: {
   label = 19;
   break L1;
  }
  }
  $3 = ((($$tr)) + 4|0);
  $4 = HEAP32[$3>>2]|0;
  $$idx11$val = HEAP32[$1>>2]|0;
  $$idx$val$i$i = +HEAPF32[$4>>2];
  $$idx1$i$i = ((($4)) + 4|0);
  $$idx1$val$i$i = +HEAPF32[$$idx1$i$i>>2];
  $$idx2$i$i = ((($$idx11$val)) + 8|0);
  $$idx2$val$i$i = +HEAPF32[$$idx2$i$i>>2];
  $$idx3$i$i = ((($$idx11$val)) + 12|0);
  $$idx3$val$i$i = +HEAPF32[$$idx3$i$i>>2];
  $5 = $$idx$val$i$i <= $$idx2$val$i$i;
  $6 = $$idx1$val$i$i <= $$idx3$val$i$i;
  $or$cond$i$i$i$i = $5 & $6;
  if (!($or$cond$i$i$i$i)) {
   label = 6;
   break;
  }
  $$idx4$i$i = ((($4)) + 8|0);
  $$idx4$val$i$i = +HEAPF32[$$idx4$i$i>>2];
  $$idx5$i$i = ((($4)) + 12|0);
  $$idx5$val$i$i = +HEAPF32[$$idx5$i$i>>2];
  $$idx6$val$i$i = +HEAPF32[$$idx11$val>>2];
  $$idx7$i$i = ((($$idx11$val)) + 4|0);
  $$idx7$val$i$i = +HEAPF32[$$idx7$i$i>>2];
  $7 = $$idx4$val$i$i >= $$idx6$val$i$i;
  $8 = $$idx5$val$i$i >= $$idx7$val$i$i;
  $or$cond$i$i8$i$i = $7 & $8;
  if (!($or$cond$i$i8$i$i)) {
   label = 6;
   break;
  }
  $9 = ((($4)) + 24|0);
  __ZN84__LT_ncollide_geometry__partitioning__dbvt__DBVTNode_LT_P_C__u20_B_C__u20_BV_GT__GT_5visit17h613dc86990116ad0E($9,$1);
  $10 = ((($4)) + 32|0);
  $$tr = $10;
 }
 if ((label|0) == 3) {
  __ZN3std9panicking11begin_panic17h9936a195de5ffc4dE(10157,40,5520);
  // unreachable;
 }
 else if ((label|0) == 6) {
  return;
 }
 else if ((label|0) == 8) {
  $11 = ((($$tr)) + 4|0);
  $$idx$val = HEAP32[$11>>2]|0;
  $12 = ((($$idx$val)) + 8|0);
  $13 = HEAP32[$12>>2]|0;
  $cond$i$i$i = ($13|0)==(-1);
  if ($cond$i$i$i) {
   __ZN4core6result13unwrap_failed17h0dc63b200336bf84E();
   // unreachable;
  }
  $14 = (($13) + 1)|0;
  HEAP32[$12>>2] = $14;
  $15 = ((($$idx$val)) + 12|0);
  $$idx12$val = HEAP32[$1>>2]|0;
  $$idx13 = ((($1)) + 4|0);
  $$idx13$val = HEAP32[$$idx13>>2]|0;
  $$idx14 = ((($$idx$val)) + 36|0);
  $$idx14$val = HEAP32[$$idx14>>2]|0;
  $16 = ($$idx12$val|0)==($15|0);
  if ($16) {
   $32 = $14;
  } else {
   $$idx$val$i$i16 = +HEAPF32[$15>>2];
   $$idx1$i$i17 = ((($$idx$val)) + 16|0);
   $$idx1$val$i$i18 = +HEAPF32[$$idx1$i$i17>>2];
   $$idx2$i$i19 = ((($$idx12$val)) + 8|0);
   $$idx2$val$i$i20 = +HEAPF32[$$idx2$i$i19>>2];
   $$idx3$i$i21 = ((($$idx12$val)) + 12|0);
   $$idx3$val$i$i22 = +HEAPF32[$$idx3$i$i21>>2];
   $17 = $$idx$val$i$i16 <= $$idx2$val$i$i20;
   $18 = $$idx1$val$i$i18 <= $$idx3$val$i$i22;
   $or$cond$i$i$i$i23 = $17 & $18;
   if ($or$cond$i$i$i$i23) {
    $$idx4$i$i24 = ((($$idx$val)) + 20|0);
    $$idx4$val$i$i25 = +HEAPF32[$$idx4$i$i24>>2];
    $$idx5$i$i26 = ((($$idx$val)) + 24|0);
    $$idx5$val$i$i27 = +HEAPF32[$$idx5$i$i26>>2];
    $$idx6$val$i$i29 = +HEAPF32[$$idx12$val>>2];
    $$idx7$i$i30 = ((($$idx12$val)) + 4|0);
    $$idx7$val$i$i31 = +HEAPF32[$$idx7$i$i30>>2];
    $19 = $$idx4$val$i$i25 >= $$idx6$val$i$i29;
    $20 = $$idx5$val$i$i27 >= $$idx7$val$i$i31;
    $or$cond$i$i8$i$i32 = $19 & $20;
    if ($or$cond$i$i8$i$i32) {
     $21 = ((($$idx13$val)) + 8|0);
     $22 = HEAP32[$21>>2]|0;
     $$idx$i9$i = ((($$idx13$val)) + 4|0);
     $$idx$val$i10$i = HEAP32[$$idx$i9$i>>2]|0;
     $23 = ($22|0)==($$idx$val$i10$i|0);
     do {
      if ($23) {
       __THREW__ = 0;
       invoke_vi(237,($$idx13$val|0));
       $24 = __THREW__; __THREW__ = 0;
       $25 = $24&1;
       if ($25) {
        $33 = ___cxa_find_matching_catch_2()|0;
        $34 = tempRet0;
        $35 = HEAP32[$12>>2]|0;
        $36 = (($35) + -1)|0;
        HEAP32[$12>>2] = $36;
        ___resumeException($33|0);
        // unreachable;
       } else {
        $$pre$i$i = HEAP32[$21>>2]|0;
        $28 = $$pre$i$i;
        break;
       }
      } else {
       $28 = $22;
      }
     } while(0);
     $26 = HEAP32[$$idx13$val>>2]|0;
     $27 = (($26) + ($28<<2)|0);
     HEAP32[$27>>2] = $$idx14$val;
     $29 = HEAP32[$21>>2]|0;
     $30 = (($29) + 1)|0;
     HEAP32[$21>>2] = $30;
     $$pre = HEAP32[$12>>2]|0;
     $32 = $$pre;
    } else {
     $32 = $14;
    }
   } else {
    $32 = $14;
   }
  }
  $31 = (($32) + -1)|0;
  HEAP32[$12>>2] = $31;
  return;
 }
 else if ((label|0) == 19) {
  // unreachable;
 }
}
function __ZN84__LT_ncollide_geometry__partitioning__dbvt__DBVTNode_LT_P_C__u20_B_C__u20_BV_GT__GT_5visit17h8abbbd72b9c7d0faE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$idx$i$i = 0, $$idx$val$i$i = 0, $$idx$val9293 = 0, $$idx10$val = 0, $$idx12 = 0, $$idx12$val = 0, $$pre$i$i = 0, $$val1$i$i$i = 0.0, $$val1$i$i$i33 = 0.0, $$val3$i$i$i = 0.0, $$val3$i$i$i28 = 0.0, $$val5$i$i$i = 0.0, $$val5$i$i$i30 = 0.0, $$val6$i$i$i = 0.0, $$val6$i$i$i31 = 0.0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0;
 var $15 = 0, $16 = 0, $17 = 0.0, $18 = 0, $19 = 0.0, $2 = 0, $20 = 0, $21 = 0.0, $22 = 0.0, $23 = 0.0, $24 = 0, $25 = 0, $26 = 0.0, $27 = 0.0, $28 = 0.0, $29 = 0, $3 = 0, $30 = 0, $31 = 0.0, $32 = 0.0;
 var $33 = 0.0, $34 = 0, $35 = 0.0, $36 = 0.0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = SIMD_Int32x4(0,0,0,0), $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = SIMD_Int32x4(0,0,0,0), $50 = 0;
 var $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0.0, $59 = 0, $6 = 0, $60 = 0.0, $61 = 0, $62 = 0.0, $63 = 0.0, $64 = 0.0, $65 = 0, $66 = 0, $67 = 0.0, $68 = 0.0, $69 = 0.0;
 var $7 = 0, $70 = 0, $71 = 0, $72 = 0.0, $73 = 0.0, $74 = 0.0, $75 = 0, $76 = 0.0, $77 = 0.0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0;
 var $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $cond$i$i$i = 0, $inter_with_far_plane$sroa$0$0$i$i$i = 0, $inter_with_far_plane$sroa$0$0$i$i$i35 = 0, $inter_with_near_plane$sroa$0$0$i$i$i = 0, $inter_with_near_plane$sroa$0$0$i$i$i36 = 0, $iter$sroa$0$0$i$i$i = 0, $iter$sroa$0$0$i$i$i26 = 0, $iter$sroa$0$0$ph$i$i$i = 0, $iter$sroa$0$0$ph$i$i$i22 = 0, $ls_ray$i$i$i = 0;
 var $ls_ray$i$i$i15 = 0, $tmax$0$ph$i$i$i = 0.0, $tmax$0$ph$i$i$i23 = 0.0, $tmin$sroa$0$0$ph$i$i$i = 0, $tmin$sroa$0$0$ph$i$i$i24 = 0, $trunc = 0, $trunc$clear = 0, label = 0, sp = 0, temp_Int32x4_ptr = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $ls_ray$i$i$i15 = sp + 16|0;
 $ls_ray$i$i$i = sp;
 $2 = HEAP32[$0>>2]|0;
 $trunc = $2&255;
 $trunc$clear = $trunc & 3;
 switch ($trunc$clear<<24>>24) {
 case 0:  {
  $3 = ((($0)) + 4|0);
  $4 = HEAP32[$3>>2]|0;
  $$idx$val9293 = HEAP32[$1>>2]|0;
  $5 = SIMD_Int32x4_load(HEAPU8, $$idx$val9293);
  temp_Int32x4_ptr = $ls_ray$i$i$i;SIMD_Int32x4_store(HEAPU8, temp_Int32x4_ptr, $5);
  $6 = ((($ls_ray$i$i$i)) + 8|0);
  $7 = ((($4)) + 8|0);
  $iter$sroa$0$0$ph$i$i$i = 0;$tmax$0$ph$i$i$i = 3.4028234663852886E+38;$tmin$sroa$0$0$ph$i$i$i = 0;
  L4: while(1) {
   $iter$sroa$0$0$i$i$i = $iter$sroa$0$0$ph$i$i$i;
   while(1) {
    $8 = ($iter$sroa$0$0$i$i$i>>>0)<(2);
    $9 = (($iter$sroa$0$0$i$i$i) + 1)|0;
    if (!($8)) {
     label = 12;
     break L4;
    }
    $10 = (($6) + ($iter$sroa$0$0$i$i$i<<2)|0);
    $$val3$i$i$i = +HEAPF32[$10>>2];
    $11 = $$val3$i$i$i == 0.0;
    if (!($11)) {
     break;
    }
    $12 = (($ls_ray$i$i$i) + ($iter$sroa$0$0$i$i$i<<2)|0);
    $13 = (($4) + ($iter$sroa$0$0$i$i$i<<2)|0);
    $$val5$i$i$i = +HEAPF32[$12>>2];
    $$val6$i$i$i = +HEAPF32[$13>>2];
    $14 = $$val5$i$i$i < $$val6$i$i$i;
    if ($14) {
     label = 10;
     break L4;
    }
    $15 = (($7) + ($iter$sroa$0$0$i$i$i<<2)|0);
    $$val1$i$i$i = +HEAPF32[$15>>2];
    $16 = $$val5$i$i$i > $$val1$i$i$i;
    if ($16) {
     label = 10;
     break L4;
    } else {
     $iter$sroa$0$0$i$i$i = $9;
    }
   }
   $17 = 1.0 / $$val3$i$i$i;
   $18 = (($4) + ($iter$sroa$0$0$i$i$i<<2)|0);
   $19 = +HEAPF32[$18>>2];
   $20 = (($ls_ray$i$i$i) + ($iter$sroa$0$0$i$i$i<<2)|0);
   $21 = +HEAPF32[$20>>2];
   $22 = $19 - $21;
   $23 = $17 * $22;
   $24 = (HEAPF32[tempDoublePtr>>2]=$23,HEAP32[tempDoublePtr>>2]|0);
   $25 = (($7) + ($iter$sroa$0$0$i$i$i<<2)|0);
   $26 = +HEAPF32[$25>>2];
   $27 = $26 - $21;
   $28 = $17 * $27;
   $29 = (HEAPF32[tempDoublePtr>>2]=$28,HEAP32[tempDoublePtr>>2]|0);
   $30 = $23 > $28;
   $inter_with_far_plane$sroa$0$0$i$i$i = $30 ? $24 : $29;
   $inter_with_near_plane$sroa$0$0$i$i$i = $30 ? $29 : $24;
   $31 = (HEAP32[tempDoublePtr>>2]=$tmin$sroa$0$0$ph$i$i$i,+HEAPF32[tempDoublePtr>>2]);
   $32 = (HEAP32[tempDoublePtr>>2]=$inter_with_near_plane$sroa$0$0$i$i$i,+HEAPF32[tempDoublePtr>>2]);
   $33 = (+_fmaxf($31,$32));
   $34 = (HEAPF32[tempDoublePtr>>2]=$33,HEAP32[tempDoublePtr>>2]|0);
   $35 = (HEAP32[tempDoublePtr>>2]=$inter_with_far_plane$sroa$0$0$i$i$i,+HEAPF32[tempDoublePtr>>2]);
   $36 = (+_fminf($tmax$0$ph$i$i$i,$35));
   $37 = $33 > $36;
   if ($37) {
    label = 10;
    break;
   } else {
    $iter$sroa$0$0$ph$i$i$i = $9;$tmax$0$ph$i$i$i = $36;$tmin$sroa$0$0$ph$i$i$i = $34;
   }
  }
  if ((label|0) == 10) {
   STACKTOP = sp;return;
  }
  else if ((label|0) == 12) {
   $38 = ((($4)) + 24|0);
   __ZN84__LT_ncollide_geometry__partitioning__dbvt__DBVTNode_LT_P_C__u20_B_C__u20_BV_GT__GT_5visit17h8abbbd72b9c7d0faE($38,$1);
   $39 = ((($4)) + 32|0);
   __ZN84__LT_ncollide_geometry__partitioning__dbvt__DBVTNode_LT_P_C__u20_B_C__u20_BV_GT__GT_5visit17h8abbbd72b9c7d0faE($39,$1);
   STACKTOP = sp;return;
  }
  break;
 }
 case 1:  {
  $40 = ((($0)) + 4|0);
  $$idx10$val = HEAP32[$40>>2]|0;
  $41 = ((($$idx10$val)) + 8|0);
  $42 = HEAP32[$41>>2]|0;
  $cond$i$i$i = ($42|0)==(-1);
  if ($cond$i$i$i) {
   __ZN4core6result13unwrap_failed17h0dc63b200336bf84E();
   // unreachable;
  }
  $43 = (($42) + 1)|0;
  HEAP32[$41>>2] = $43;
  $$idx12 = ((($$idx10$val)) + 36|0);
  $$idx12$val = HEAP32[$$idx12>>2]|0;
  $44 = HEAP32[$1>>2]|0;
  $45 = SIMD_Int32x4_load(HEAPU8, $44);
  temp_Int32x4_ptr = $ls_ray$i$i$i15;SIMD_Int32x4_store(HEAPU8, temp_Int32x4_ptr, $45);
  $46 = ((($ls_ray$i$i$i15)) + 8|0);
  $47 = ((($$idx10$val)) + 12|0);
  $48 = ((($$idx10$val)) + 20|0);
  $iter$sroa$0$0$ph$i$i$i22 = 0;$tmax$0$ph$i$i$i23 = 3.4028234663852886E+38;$tmin$sroa$0$0$ph$i$i$i24 = 0;
  L21: while(1) {
   $iter$sroa$0$0$i$i$i26 = $iter$sroa$0$0$ph$i$i$i22;
   while(1) {
    $49 = ($iter$sroa$0$0$i$i$i26>>>0)<(2);
    $50 = (($iter$sroa$0$0$i$i$i26) + 1)|0;
    if (!($49)) {
     label = 23;
     break L21;
    }
    $51 = (($46) + ($iter$sroa$0$0$i$i$i26<<2)|0);
    $$val3$i$i$i28 = +HEAPF32[$51>>2];
    $52 = $$val3$i$i$i28 == 0.0;
    if (!($52)) {
     break;
    }
    $53 = (($ls_ray$i$i$i15) + ($iter$sroa$0$0$i$i$i26<<2)|0);
    $54 = (($47) + ($iter$sroa$0$0$i$i$i26<<2)|0);
    $$val5$i$i$i30 = +HEAPF32[$53>>2];
    $$val6$i$i$i31 = +HEAPF32[$54>>2];
    $55 = $$val5$i$i$i30 < $$val6$i$i$i31;
    if ($55) {
     label = 22;
     break L21;
    }
    $56 = (($48) + ($iter$sroa$0$0$i$i$i26<<2)|0);
    $$val1$i$i$i33 = +HEAPF32[$56>>2];
    $57 = $$val5$i$i$i30 > $$val1$i$i$i33;
    if ($57) {
     label = 22;
     break L21;
    } else {
     $iter$sroa$0$0$i$i$i26 = $50;
    }
   }
   $58 = 1.0 / $$val3$i$i$i28;
   $59 = (($47) + ($iter$sroa$0$0$i$i$i26<<2)|0);
   $60 = +HEAPF32[$59>>2];
   $61 = (($ls_ray$i$i$i15) + ($iter$sroa$0$0$i$i$i26<<2)|0);
   $62 = +HEAPF32[$61>>2];
   $63 = $60 - $62;
   $64 = $58 * $63;
   $65 = (HEAPF32[tempDoublePtr>>2]=$64,HEAP32[tempDoublePtr>>2]|0);
   $66 = (($48) + ($iter$sroa$0$0$i$i$i26<<2)|0);
   $67 = +HEAPF32[$66>>2];
   $68 = $67 - $62;
   $69 = $58 * $68;
   $70 = (HEAPF32[tempDoublePtr>>2]=$69,HEAP32[tempDoublePtr>>2]|0);
   $71 = $64 > $69;
   $inter_with_far_plane$sroa$0$0$i$i$i35 = $71 ? $65 : $70;
   $inter_with_near_plane$sroa$0$0$i$i$i36 = $71 ? $70 : $65;
   $72 = (HEAP32[tempDoublePtr>>2]=$tmin$sroa$0$0$ph$i$i$i24,+HEAPF32[tempDoublePtr>>2]);
   $73 = (HEAP32[tempDoublePtr>>2]=$inter_with_near_plane$sroa$0$0$i$i$i36,+HEAPF32[tempDoublePtr>>2]);
   $74 = (+_fmaxf($72,$73));
   $75 = (HEAPF32[tempDoublePtr>>2]=$74,HEAP32[tempDoublePtr>>2]|0);
   $76 = (HEAP32[tempDoublePtr>>2]=$inter_with_far_plane$sroa$0$0$i$i$i35,+HEAPF32[tempDoublePtr>>2]);
   $77 = (+_fminf($tmax$0$ph$i$i$i23,$76));
   $78 = $74 > $77;
   if ($78) {
    label = 22;
    break;
   } else {
    $iter$sroa$0$0$ph$i$i$i22 = $50;$tmax$0$ph$i$i$i23 = $77;$tmin$sroa$0$0$ph$i$i$i24 = $75;
   }
  }
  if ((label|0) == 22) {
  }
  else if ((label|0) == 23) {
   $79 = ((($1)) + 4|0);
   $80 = HEAP32[$79>>2]|0;
   $81 = ((($80)) + 8|0);
   $82 = HEAP32[$81>>2]|0;
   $$idx$i$i = ((($80)) + 4|0);
   $$idx$val$i$i = HEAP32[$$idx$i$i>>2]|0;
   $83 = ($82|0)==($$idx$val$i$i|0);
   do {
    if ($83) {
     __THREW__ = 0;
     invoke_vi(237,($80|0));
     $84 = __THREW__; __THREW__ = 0;
     $85 = $84&1;
     if ($85) {
      $93 = ___cxa_find_matching_catch_2()|0;
      $94 = tempRet0;
      $95 = HEAP32[$41>>2]|0;
      $96 = (($95) + -1)|0;
      HEAP32[$41>>2] = $96;
      ___resumeException($93|0);
      // unreachable;
     } else {
      $$pre$i$i = HEAP32[$81>>2]|0;
      $88 = $$pre$i$i;
      break;
     }
    } else {
     $88 = $82;
    }
   } while(0);
   $86 = HEAP32[$80>>2]|0;
   $87 = (($86) + ($88<<2)|0);
   HEAP32[$87>>2] = $$idx12$val;
   $89 = HEAP32[$81>>2]|0;
   $90 = (($89) + 1)|0;
   HEAP32[$81>>2] = $90;
  }
  $91 = HEAP32[$41>>2]|0;
  $92 = (($91) + -1)|0;
  HEAP32[$41>>2] = $92;
  STACKTOP = sp;return;
  break;
 }
 case 2:  {
  __ZN3std9panicking11begin_panic17h9936a195de5ffc4dE(10157,40,5520);
  // unreachable;
  break;
 }
 default: {
  // unreachable;
 }
 }
}
function __ZN84__LT_ncollide_geometry__partitioning__dbvt__DBVTNode_LT_P_C__u20_B_C__u20_BV_GT__GT_5visit17hf41a9b4139a47adcE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$idx$i$i = 0, $$idx$val = 0, $$idx$val$i$i = 0, $$idx11$val = 0, $$idx11$val$idx$val36 = 0, $$idx11$val$idx12 = 0, $$idx11$val$idx12$val37 = 0, $$idx13$val = 0, $$idx13$val$idx$val34 = 0, $$idx13$val$idx16 = 0, $$idx13$val$idx16$val35 = 0, $$idx14 = 0, $$idx14$val = 0, $$idx15 = 0, $$idx15$val = 0, $$pre = 0, $$pre$i$i = 0, $$val1$i$i = 0.0, $$val1$i$i23 = 0.0, $$val3$i$i = 0.0;
 var $$val3$i$i20 = 0.0, $$val4$i$i = 0.0, $$val4$i$i21 = 0.0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $cond$i$i$i = 0, $iter$sroa$0$0$i$i = 0, $iter$sroa$0$0$i$i18 = 0, $ls_pt$i$i = 0, $ls_pt$i$i17 = 0, $trunc = 0, $trunc$clear = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $ls_pt$i$i17 = sp + 8|0;
 $ls_pt$i$i = sp;
 $2 = HEAP32[$0>>2]|0;
 $trunc = $2&255;
 $trunc$clear = $trunc & 3;
 switch ($trunc$clear<<24>>24) {
 case 0:  {
  $3 = ((($0)) + 4|0);
  $4 = HEAP32[$3>>2]|0;
  $$idx11$val = HEAP32[$1>>2]|0;
  $$idx11$val$idx$val36 = HEAP32[$$idx11$val>>2]|0;
  $$idx11$val$idx12 = ((($$idx11$val)) + 4|0);
  $$idx11$val$idx12$val37 = HEAP32[$$idx11$val$idx12>>2]|0;
  HEAP32[$ls_pt$i$i>>2] = $$idx11$val$idx$val36;
  $5 = ((($ls_pt$i$i)) + 4|0);
  HEAP32[$5>>2] = $$idx11$val$idx12$val37;
  $6 = ((($4)) + 8|0);
  $iter$sroa$0$0$i$i = 0;
  while(1) {
   $7 = ($iter$sroa$0$0$i$i>>>0)<(2);
   $8 = (($iter$sroa$0$0$i$i) + 1)|0;
   if (!($7)) {
    label = 9;
    break;
   }
   $9 = (($ls_pt$i$i) + ($iter$sroa$0$0$i$i<<2)|0);
   $10 = (($4) + ($iter$sroa$0$0$i$i<<2)|0);
   $$val3$i$i = +HEAPF32[$9>>2];
   $$val4$i$i = +HEAPF32[$10>>2];
   $11 = $$val3$i$i < $$val4$i$i;
   if ($11) {
    label = 7;
    break;
   }
   $12 = (($6) + ($iter$sroa$0$0$i$i<<2)|0);
   $$val1$i$i = +HEAPF32[$12>>2];
   $13 = $$val3$i$i > $$val1$i$i;
   if ($13) {
    label = 7;
    break;
   } else {
    $iter$sroa$0$0$i$i = $8;
   }
  }
  if ((label|0) == 7) {
   STACKTOP = sp;return;
  }
  else if ((label|0) == 9) {
   $14 = ((($4)) + 24|0);
   __ZN84__LT_ncollide_geometry__partitioning__dbvt__DBVTNode_LT_P_C__u20_B_C__u20_BV_GT__GT_5visit17hf41a9b4139a47adcE($14,$1);
   $15 = ((($4)) + 32|0);
   __ZN84__LT_ncollide_geometry__partitioning__dbvt__DBVTNode_LT_P_C__u20_B_C__u20_BV_GT__GT_5visit17hf41a9b4139a47adcE($15,$1);
   STACKTOP = sp;return;
  }
  break;
 }
 case 1:  {
  $16 = ((($0)) + 4|0);
  $$idx$val = HEAP32[$16>>2]|0;
  $17 = ((($$idx$val)) + 8|0);
  $18 = HEAP32[$17>>2]|0;
  $cond$i$i$i = ($18|0)==(-1);
  if ($cond$i$i$i) {
   __ZN4core6result13unwrap_failed17h0dc63b200336bf84E();
   // unreachable;
  }
  $19 = (($18) + 1)|0;
  HEAP32[$17>>2] = $19;
  $$idx13$val = HEAP32[$1>>2]|0;
  $$idx14 = ((($1)) + 4|0);
  $$idx14$val = HEAP32[$$idx14>>2]|0;
  $$idx15 = ((($$idx$val)) + 36|0);
  $$idx15$val = HEAP32[$$idx15>>2]|0;
  $$idx13$val$idx$val34 = HEAP32[$$idx13$val>>2]|0;
  $$idx13$val$idx16 = ((($$idx13$val)) + 4|0);
  $$idx13$val$idx16$val35 = HEAP32[$$idx13$val$idx16>>2]|0;
  HEAP32[$ls_pt$i$i17>>2] = $$idx13$val$idx$val34;
  $20 = ((($ls_pt$i$i17)) + 4|0);
  HEAP32[$20>>2] = $$idx13$val$idx16$val35;
  $21 = ((($$idx$val)) + 12|0);
  $22 = ((($$idx$val)) + 20|0);
  $iter$sroa$0$0$i$i18 = 0;
  while(1) {
   $23 = ($iter$sroa$0$0$i$i18>>>0)<(2);
   $24 = (($iter$sroa$0$0$i$i18) + 1)|0;
   if (!($23)) {
    label = 17;
    break;
   }
   $25 = (($ls_pt$i$i17) + ($iter$sroa$0$0$i$i18<<2)|0);
   $26 = (($21) + ($iter$sroa$0$0$i$i18<<2)|0);
   $$val3$i$i20 = +HEAPF32[$25>>2];
   $$val4$i$i21 = +HEAPF32[$26>>2];
   $27 = $$val3$i$i20 < $$val4$i$i21;
   if ($27) {
    label = 16;
    break;
   }
   $28 = (($22) + ($iter$sroa$0$0$i$i18<<2)|0);
   $$val1$i$i23 = +HEAPF32[$28>>2];
   $29 = $$val3$i$i20 > $$val1$i$i23;
   if ($29) {
    label = 16;
    break;
   } else {
    $iter$sroa$0$0$i$i18 = $24;
   }
  }
  if ((label|0) == 16) {
   $41 = $19;
  }
  else if ((label|0) == 17) {
   $30 = ((($$idx14$val)) + 8|0);
   $31 = HEAP32[$30>>2]|0;
   $$idx$i$i = ((($$idx14$val)) + 4|0);
   $$idx$val$i$i = HEAP32[$$idx$i$i>>2]|0;
   $32 = ($31|0)==($$idx$val$i$i|0);
   do {
    if ($32) {
     __THREW__ = 0;
     invoke_vi(237,($$idx14$val|0));
     $33 = __THREW__; __THREW__ = 0;
     $34 = $33&1;
     if ($34) {
      $42 = ___cxa_find_matching_catch_2()|0;
      $43 = tempRet0;
      $44 = HEAP32[$17>>2]|0;
      $45 = (($44) + -1)|0;
      HEAP32[$17>>2] = $45;
      ___resumeException($42|0);
      // unreachable;
     } else {
      $$pre$i$i = HEAP32[$30>>2]|0;
      $37 = $$pre$i$i;
      break;
     }
    } else {
     $37 = $31;
    }
   } while(0);
   $35 = HEAP32[$$idx14$val>>2]|0;
   $36 = (($35) + ($37<<2)|0);
   HEAP32[$36>>2] = $$idx15$val;
   $38 = HEAP32[$30>>2]|0;
   $39 = (($38) + 1)|0;
   HEAP32[$30>>2] = $39;
   $$pre = HEAP32[$17>>2]|0;
   $41 = $$pre;
  }
  $40 = (($41) + -1)|0;
  HEAP32[$17>>2] = $40;
  STACKTOP = sp;return;
  break;
 }
 case 2:  {
  __ZN3std9panicking11begin_panic17h9936a195de5ffc4dE(10157,40,5520);
  // unreachable;
  break;
 }
 default: {
  // unreachable;
 }
 }
}
function __ZN84__LT_ncollide_utils__data__owned_allocation_cache__OwnedAllocationCache_LT_T_GT__GT_5alloc17he90abaa411e47d04E($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$idx = 0, $$idx$val = 0, $$val1$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $_0$0$in = 0;
 var $personalityslot$sroa$0$032 = 0, $personalityslot$sroa$6$030 = 0, $switch3tmp$i = 0, $value = 0, $x$i = 0, dest = 0, label = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(96|0);
 $x$i = sp + 48|0;
 $value = sp;
 dest=$value; src=$1; stop=dest+48|0; do { HEAP32[dest>>2]=HEAP32[src>>2]|0; dest=dest+4|0; src=src+4|0; } while ((dest|0) < (stop|0));
 $$idx = ((($0)) + 8|0);
 $$idx$val = HEAP32[$$idx>>2]|0;
 $2 = ($$idx$val|0)==(0);
 if ($2) {
  dest=$x$i; src=$value; stop=dest+48|0; do { HEAP32[dest>>2]=HEAP32[src>>2]|0; dest=dest+4|0; src=src+4|0; } while ((dest|0) < (stop|0));
  $3 = (_malloc(48)|0);
  $4 = ($3|0)==(0|0);
  if ($4) {
   __THREW__ = 0;
   invoke_v(210);
   $5 = __THREW__; __THREW__ = 0;
   $6 = ___cxa_find_matching_catch_2()|0;
   $7 = tempRet0;
   $personalityslot$sroa$0$032 = $6;$personalityslot$sroa$6$030 = $7;
   ___resumeException($personalityslot$sroa$0$032|0);
   // unreachable;
  } else {
   dest=$3; src=$x$i; stop=dest+48|0; do { HEAP32[dest>>2]=HEAP32[src>>2]|0; dest=dest+4|0; src=src+4|0; } while ((dest|0) < (stop|0));
   $_0$0$in = $3;
   STACKTOP = sp;return ($_0$0$in|0);
  }
 } else {
  $8 = (($$idx$val) + -1)|0;
  HEAP32[$$idx>>2] = $8;
  $9 = HEAP32[$0>>2]|0;
  $10 = (($9) + ($8<<2)|0);
  $$val1$i = HEAP32[$10>>2]|0;
  $switch3tmp$i = ($$val1$i|0)==(0|0);
  if ($switch3tmp$i) {
   __THREW__ = 0;
   invoke_vi(220,(6500|0));
   $11 = __THREW__; __THREW__ = 0;
   $12 = ___cxa_find_matching_catch_2()|0;
   $13 = tempRet0;
   $14 = ((($value)) + 24|0);
   __ZN4drop17h9f42eedb81b88214E($14);
   $15 = ((($value)) + 32|0);
   __ZN4drop17h9f42eedb81b88214E($15);
   $personalityslot$sroa$0$032 = $12;$personalityslot$sroa$6$030 = $13;
   ___resumeException($personalityslot$sroa$0$032|0);
   // unreachable;
  } else {
   $16 = ((($$val1$i)) + 24|0);
   __ZN4drop17h9f42eedb81b88214E($16);
   $17 = ((($$val1$i)) + 32|0);
   __ZN4drop17h9f42eedb81b88214E($17);
   dest=$$val1$i; src=$value; stop=dest+48|0; do { HEAP32[dest>>2]=HEAP32[src>>2]|0; dest=dest+4|0; src=src+4|0; } while ((dest|0) < (stop|0));
   $_0$0$in = $$val1$i;
   STACKTOP = sp;return ($_0$0$in|0);
  }
 }
 return (0)|0;
}
function __ZN87__LT_ncollide_geometry__query__algorithms__johnson_simplex__JohnsonSimplex_LT_P_GT__GT_9new_w_tls17ha5345257e29c92b1E($0) {
 $0 = $0|0;
 var $$fca$0$0$0$load3845$i$i = 0, $$idx$i52$i$i = 0, $$idx$val$i$i = 0, $$idx$val$i53$i$i = 0, $$idx46$i$i = 0, $$idx46$val$i$i = 0, $$idx48$i$i$i = 0, $$idx48$val$i$i$i = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0;
 var $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0;
 var $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0;
 var $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0;
 var $8 = 0, $9 = 0, $_10$i$i = 0, $_11$i$i$i = 0, $_16$i$i = 0, $_5$sroa$0$0$$sroa_idx$i$i$i = 0, $_5$sroa$5$0$$sroa_idx64$i$i$i = 0, $_5$sroa$7$0$$sroa_idx66$i$i$i = 0, $_8$sroa$0$0$$sroa_idx$i$i$i = 0, $_8$sroa$5$0$$sroa_idx58$i$i$i = 0, $_8$sroa$7$0$$sroa_idx60$i$i$i = 0, $arg5$i$i$i = 0, $cond$i$i$i$i$i = 0, $cond$i$i$i56$i$i = 0, $data$i$sroa$5$0$$sroa_idx$i = 0, $personalityslot$sroa$0$0$i$i = 0, $personalityslot$sroa$0$0$i$i$i = 0, $personalityslot$sroa$0$1$i$i$i = 0, $personalityslot$sroa$7$0$i$i$i = 0, $personalityslot$sroa$7$1$i$i$i = 0;
 var $personalityslot$sroa$9$0$i$i = 0, $recursion$i$i$i = 0, $switch2tmp$i$i = 0, $switchtmp$i = 0, $switchtmp$i$i$i = 0, $switchtmp$i2$i$i = 0, label = 0, sp = 0, temp_Int32x4_ptr = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $_10$i$i = sp + 40|0;
 $recursion$i$i$i = sp + 32|0;
 $_11$i$i$i = sp + 16|0;
 $arg5$i$i$i = sp + 8|0;
 $_16$i$i = sp;
 $1 = (__ZN17ncollide_geometry5query10algorithms15johnson_simplex22KEY_RECURSION_TEMPLATE7__getit17hed102e47d684af7fE()|0);
 $switch2tmp$i$i = ($1|0)==(0|0);
 if ($switch2tmp$i$i) {
  __ZN4core6option13expect_failed17hc1eeb48c0c4a1725E(11189,57);
  // unreachable;
 }
 $2 = ((($1)) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $switchtmp$i = ($3|0)==(0|0);
 do {
  if ($switchtmp$i) {
   $4 = (_malloc(20)|0);
   $5 = ($4|0)==(0|0);
   if ($5) {
    __ZN5alloc3oom3oom17hb253cf665793f59eE();
    // unreachable;
   }
   temp_Int32x4_ptr = $4;SIMD_Int32x4_store(HEAPU8, temp_Int32x4_ptr, SIMD_Int32x4(1,1,1,0));
   $data$i$sroa$5$0$$sroa_idx$i = ((($4)) + 16|0);
   HEAP32[$data$i$sroa$5$0$$sroa_idx$i>>2] = 0;
   $6 = $4;
   $7 = $1;
   $8 = $7;
   $9 = HEAP32[$8>>2]|0;
   $10 = (($7) + 4)|0;
   $11 = $10;
   $12 = HEAP32[$11>>2]|0;
   $13 = $1;
   $14 = $13;
   HEAP32[$14>>2] = 0;
   $15 = (($13) + 4)|0;
   $16 = $15;
   HEAP32[$16>>2] = $6;
   $17 = $_10$i$i;
   $18 = $17;
   HEAP32[$18>>2] = $9;
   $19 = (($17) + 4)|0;
   $20 = $19;
   HEAP32[$20>>2] = $12;
   $switchtmp$i$i$i = ($12|0)==(0);
   if (!($switchtmp$i$i$i)) {
    $21 = $12;
    $22 = HEAP32[$21>>2]|0;HEAP32[$21>>2] = (($22-1)|0);
    $23 = ($22|0)==(1);
    if ($23) {
     $24 = ((($_10$i$i)) + 4|0);
     /* fence */;
     __ZN33__LT_alloc__arc__Arc_LT_T_GT__GT_9drop_slow17h639b296ab3838c06E($24);
    }
   }
   $25 = HEAP32[$2>>2]|0;
   $switchtmp$i2$i$i = ($25|0)==(0|0);
   if ($switchtmp$i2$i$i) {
    __ZN4core9panicking5panic17ha7507e8e32961bfeE(6500);
    // unreachable;
   } else {
    $$idx$val$i$i = $25;
    break;
   }
  } else {
   $$idx$val$i$i = $3;
  }
 } while(0);
 $26 = HEAP32[$1>>2]|0;
 $cond$i$i$i$i$i = ($26|0)==(-1);
 if ($cond$i$i$i$i$i) {
  __ZN4core6result13unwrap_failed17h0dc63b200336bf84E();
  // unreachable;
 }
 $27 = (($26) + 1)|0;
 HEAP32[$1>>2] = $27;
 $$idx46$i$i = ((($$idx$val$i$i)) + 16|0);
 $$idx46$val$i$i = HEAP32[$$idx46$i$i>>2]|0;
 HEAP32[$1>>2] = $26;
 $28 = ($$idx46$val$i$i>>>0)<(3);
 do {
  if ($28) {
   $29 = (__ZN17ncollide_geometry5query10algorithms15johnson_simplex17RecursionTemplate3new17he26a532eb60d9addE()|0);
   HEAP32[$_16$i$i>>2] = $29;
   $30 = HEAP32[$1>>2]|0;
   $cond$i$i$i56$i$i = ($30|0)==(0);
   $31 = $29;
   if ($cond$i$i$i56$i$i) {
    HEAP32[$1>>2] = -1;
    $37 = HEAP32[$2>>2]|0;
    $38 = HEAP32[$37>>2]|0;HEAP32[$37>>2] = (($38-1)|0);
    $39 = ($38|0)==(1);
    if ($39) {
     /* fence */;
     __ZN33__LT_alloc__arc__Arc_LT_T_GT__GT_9drop_slow17h639b296ab3838c06E($2);
    }
    $$fca$0$0$0$load3845$i$i = HEAP32[$_16$i$i>>2]|0;
    HEAP32[$2>>2] = $$fca$0$0$0$load3845$i$i;
    HEAP32[$1>>2] = 0;
    $40 = $$fca$0$0$0$load3845$i$i;
    $42 = 0;$44 = $40;
    break;
   }
   __THREW__ = 0;
   invoke_v(212);
   $32 = __THREW__; __THREW__ = 0;
   $33 = ___cxa_find_matching_catch_2()|0;
   $34 = tempRet0;
   $35 = HEAP32[$31>>2]|0;HEAP32[$31>>2] = (($35-1)|0);
   $36 = ($35|0)==(1);
   if (!($36)) {
    $personalityslot$sroa$0$0$i$i = $33;$personalityslot$sroa$9$0$i$i = $34;
    ___resumeException($personalityslot$sroa$0$0$i$i|0);
    // unreachable;
   }
   /* fence */;
   __ZN33__LT_alloc__arc__Arc_LT_T_GT__GT_9drop_slow17h639b296ab3838c06E($_16$i$i);
   $personalityslot$sroa$0$0$i$i = $33;$personalityslot$sroa$9$0$i$i = $34;
   ___resumeException($personalityslot$sroa$0$0$i$i|0);
   // unreachable;
  } else {
   $42 = $26;$44 = $$idx$val$i$i;
  }
 } while(0);
 $41 = (($42) + 1)|0;
 HEAP32[$1>>2] = $41;
 $43 = HEAP32[$44>>2]|0;HEAP32[$44>>2] = (($43+1)|0);
 $45 = ($43|0)<(0);
 if ($45) {
  _llvm_trap();
  // unreachable;
 }
 $46 = $44;
 HEAP32[$recursion$i$i$i>>2] = $44;
 $47 = (_malloc(72)|0);
 $48 = ($47|0)==(0|0);
 if ($48) {
  __THREW__ = 0;
  invoke_v(210);
  $49 = __THREW__; __THREW__ = 0;
  $50 = ___cxa_find_matching_catch_2()|0;
  $51 = tempRet0;
  $personalityslot$sroa$0$0$i$i$i = $50;$personalityslot$sroa$7$0$i$i$i = $51;
 } else {
  $52 = $47;
  $53 = (_malloc(72)|0);
  $54 = ($53|0)==(0|0);
  if ($54) {
   __THREW__ = 0;
   invoke_v(210);
   $55 = __THREW__; __THREW__ = 0;
   $56 = ___cxa_find_matching_catch_2()|0;
   $57 = tempRet0;
   $personalityslot$sroa$0$1$i$i$i = $56;$personalityslot$sroa$7$1$i$i$i = $57;
  } else {
   $58 = $53;
   $$idx48$i$i$i = ((($44)) + 16|0);
   $$idx48$val$i$i$i = HEAP32[$$idx48$i$i$i>>2]|0;
   $59 = ($$idx48$val$i$i$i>>>0)>(2);
   if ($59) {
    $$idx$i52$i$i = ((($44)) + 8|0);
    $$idx$val$i53$i$i = HEAP32[$$idx$i52$i$i>>2]|0;
    $61 = ((($$idx$val$i53$i$i)) + 124|0);
    $62 = HEAP32[$61>>2]|0;
    HEAP32[$arg5$i$i$i>>2] = 0;
    $63 = ((($arg5$i$i$i)) + 4|0);
    HEAP32[$63>>2] = $62;
    __THREW__ = 0;
    invoke_vii(223,($_11$i$i$i|0),($arg5$i$i$i|0));
    $64 = __THREW__; __THREW__ = 0;
    $65 = $64&1;
    if (!($65)) {
     HEAP32[$0>>2] = $46;
     $_5$sroa$0$0$$sroa_idx$i$i$i = ((($0)) + 4|0);
     HEAP32[$_5$sroa$0$0$$sroa_idx$i$i$i>>2] = $52;
     $_5$sroa$5$0$$sroa_idx64$i$i$i = ((($0)) + 8|0);
     HEAP32[$_5$sroa$5$0$$sroa_idx64$i$i$i>>2] = 3;
     $_5$sroa$7$0$$sroa_idx66$i$i$i = ((($0)) + 12|0);
     HEAP32[$_5$sroa$7$0$$sroa_idx66$i$i$i>>2] = 0;
     $_8$sroa$0$0$$sroa_idx$i$i$i = ((($0)) + 16|0);
     HEAP32[$_8$sroa$0$0$$sroa_idx$i$i$i>>2] = $58;
     $_8$sroa$5$0$$sroa_idx58$i$i$i = ((($0)) + 20|0);
     HEAP32[$_8$sroa$5$0$$sroa_idx58$i$i$i>>2] = 3;
     $_8$sroa$7$0$$sroa_idx60$i$i$i = ((($0)) + 24|0);
     HEAP32[$_8$sroa$7$0$$sroa_idx60$i$i$i>>2] = 0;
     $72 = ((($0)) + 28|0);
     ;HEAP32[$72>>2]=HEAP32[$_11$i$i$i>>2]|0;HEAP32[$72+4>>2]=HEAP32[$_11$i$i$i+4>>2]|0;HEAP32[$72+8>>2]=HEAP32[$_11$i$i$i+8>>2]|0;
     $73 = HEAP32[$1>>2]|0;
     $74 = (($73) + -1)|0;
     HEAP32[$1>>2] = $74;
     STACKTOP = sp;return;
    }
   } else {
    __THREW__ = 0;
    invoke_viiiii(214,(12236|0),104,1349,2,($$idx48$val$i$i$i|0));
    $60 = __THREW__; __THREW__ = 0;
   }
   $68 = ___cxa_find_matching_catch_2()|0;
   $69 = tempRet0;
   _free($53);
   $personalityslot$sroa$0$1$i$i$i = $68;$personalityslot$sroa$7$1$i$i$i = $69;
  }
  _free($47);
  $personalityslot$sroa$0$0$i$i$i = $personalityslot$sroa$0$1$i$i$i;$personalityslot$sroa$7$0$i$i$i = $personalityslot$sroa$7$1$i$i$i;
 }
 $66 = HEAP32[$44>>2]|0;HEAP32[$44>>2] = (($66-1)|0);
 $67 = ($66|0)==(1);
 if ($67) {
  /* fence */;
  __ZN33__LT_alloc__arc__Arc_LT_T_GT__GT_9drop_slow17h639b296ab3838c06E($recursion$i$i$i);
 }
 $70 = HEAP32[$1>>2]|0;
 $71 = (($70) + -1)|0;
 HEAP32[$1>>2] = $71;
 $personalityslot$sroa$0$0$i$i = $personalityslot$sroa$0$0$i$i$i;$personalityslot$sroa$9$0$i$i = $personalityslot$sroa$7$0$i$i$i;
 ___resumeException($personalityslot$sroa$0$0$i$i|0);
 // unreachable;
}
function __ZN88__LT_ncollide_geometry__partitioning__dbvt__DBVTInternal_LT_P_C__u20_B_C__u20_BV_GT__GT_18is_closest_to_left17hd451ccc44bd1c18dE($0,$$0$0$val,$$0$1$val) {
 $0 = $0|0;
 $$0$0$val = +$$0$0$val;
 $$0$1$val = +$$0$1$val;
 var $$idx$val$i = 0, $$idx$val$i13 = 0, $$idx10$i = 0, $$idx10$i6 = 0, $$idx10$val$i = 0.0, $$idx10$val$i7 = 0.0, $$idx11$i = 0, $$idx11$i8 = 0, $$idx11$val$i = 0.0, $$idx11$val$i9 = 0.0, $$idx14$i = 0, $$idx14$i17 = 0, $$idx14$val$i = 0.0, $$idx14$val$i18 = 0.0, $$idx15$i = 0, $$idx15$i19 = 0, $$idx15$val$i = 0.0, $$idx15$val$i20 = 0.0, $1 = 0, $10 = 0;
 var $11 = 0, $12 = 0, $13 = 0.0, $14 = 0.0, $15 = 0.0, $16 = 0.0, $17 = 0.0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0.0, $23 = 0.0, $24 = 0.0, $25 = 0.0, $26 = 0.0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0.0, $31 = 0.0, $32 = 0.0, $33 = 0.0, $34 = 0.0, $35 = 0, $4 = 0, $5 = 0.0, $6 = 0.0, $7 = 0.0, $8 = 0.0, $9 = 0.0, $_0$0$i = 0.0, $_0$0$i11 = 0.0, $cond$i$i$i$i = 0, $cond$i$i$i$i14 = 0, $trunc$i = 0, $trunc$i$clear = 0, $trunc$i4 = 0;
 var $trunc$i4$clear = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 32|0);
 $2 = HEAP32[$1>>2]|0;
 $trunc$i = $2&255;
 $trunc$i$clear = $trunc$i & 3;
 L1: do {
  switch ($trunc$i$clear<<24>>24) {
  case 0:  {
   $3 = ((($0)) + 36|0);
   $4 = HEAP32[$3>>2]|0;
   $$idx10$i = ((($4)) + 16|0);
   $$idx10$val$i = +HEAPF32[$$idx10$i>>2];
   $$idx11$i = ((($4)) + 20|0);
   $$idx11$val$i = +HEAPF32[$$idx11$i>>2];
   $5 = $$idx10$val$i - $$0$0$val;
   $6 = $$idx11$val$i - $$0$1$val;
   $7 = $5 * $5;
   $8 = $6 * $6;
   $9 = $7 + $8;
   $_0$0$i = $9;
   break;
  }
  case 1:  {
   $10 = ((($0)) + 36|0);
   $$idx$val$i = HEAP32[$10>>2]|0;
   $11 = ((($$idx$val$i)) + 8|0);
   $12 = HEAP32[$11>>2]|0;
   $cond$i$i$i$i = ($12|0)==(-1);
   if ($cond$i$i$i$i) {
    __ZN4core6result13unwrap_failed17h0dc63b200336bf84E();
    // unreachable;
   } else {
    $$idx14$i = ((($$idx$val$i)) + 28|0);
    $$idx14$val$i = +HEAPF32[$$idx14$i>>2];
    $$idx15$i = ((($$idx$val$i)) + 32|0);
    $$idx15$val$i = +HEAPF32[$$idx15$i>>2];
    $13 = $$idx14$val$i - $$0$0$val;
    $14 = $$idx15$val$i - $$0$1$val;
    $15 = $13 * $13;
    $16 = $14 * $14;
    $17 = $15 + $16;
    $_0$0$i = $17;
    break L1;
   }
   break;
  }
  case 2:  {
   __ZN3std9panicking11begin_panic17h9936a195de5ffc4dE(10157,40,5472);
   // unreachable;
   break;
  }
  default: {
   // unreachable;
  }
  }
 } while(0);
 $18 = ((($0)) + 24|0);
 $19 = HEAP32[$18>>2]|0;
 $trunc$i4 = $19&255;
 $trunc$i4$clear = $trunc$i4 & 3;
 switch ($trunc$i4$clear<<24>>24) {
 case 0:  {
  $20 = ((($0)) + 28|0);
  $21 = HEAP32[$20>>2]|0;
  $$idx10$i6 = ((($21)) + 16|0);
  $$idx10$val$i7 = +HEAPF32[$$idx10$i6>>2];
  $$idx11$i8 = ((($21)) + 20|0);
  $$idx11$val$i9 = +HEAPF32[$$idx11$i8>>2];
  $22 = $$idx10$val$i7 - $$0$0$val;
  $23 = $$idx11$val$i9 - $$0$1$val;
  $24 = $22 * $22;
  $25 = $23 * $23;
  $26 = $24 + $25;
  $_0$0$i11 = $26;
  $35 = $_0$0$i > $_0$0$i11;
  return ($35|0);
  break;
 }
 case 1:  {
  $27 = ((($0)) + 28|0);
  $$idx$val$i13 = HEAP32[$27>>2]|0;
  $28 = ((($$idx$val$i13)) + 8|0);
  $29 = HEAP32[$28>>2]|0;
  $cond$i$i$i$i14 = ($29|0)==(-1);
  if ($cond$i$i$i$i14) {
   __ZN4core6result13unwrap_failed17h0dc63b200336bf84E();
   // unreachable;
  }
  $$idx14$i17 = ((($$idx$val$i13)) + 28|0);
  $$idx14$val$i18 = +HEAPF32[$$idx14$i17>>2];
  $$idx15$i19 = ((($$idx$val$i13)) + 32|0);
  $$idx15$val$i20 = +HEAPF32[$$idx15$i19>>2];
  $30 = $$idx14$val$i18 - $$0$0$val;
  $31 = $$idx15$val$i20 - $$0$1$val;
  $32 = $30 * $30;
  $33 = $31 * $31;
  $34 = $32 + $33;
  $_0$0$i11 = $34;
  $35 = $_0$0$i > $_0$0$i11;
  return ($35|0);
  break;
 }
 case 2:  {
  __ZN3std9panicking11begin_panic17h9936a195de5ffc4dE(10157,40,5472);
  // unreachable;
  break;
 }
 default: {
  // unreachable;
 }
 }
 return (0)|0;
}
function __ZN93__LT_ncollide_pipeline__world__collision_world__CollisionWorld_LT_P_C__u20_M_C__u20_T_GT__GT_21deferred_set_position17h5fdf89d6c12e5f55E($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$idx = 0, $$idx$i = 0, $$idx$i$i$i = 0, $$idx$i$i$i$i = 0, $$idx$val$i = 0, $$idx$val$i$i$i = 0, $$idx$val$i$i$i$i = 0, $$idx34 = 0, $$in$i$i = 0, $$pre$i = 0, $$sink237250$i$i$i$i = 0, $$val$i$i$i$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0;
 var $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0;
 var $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0;
 var $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $7 = 0, $8 = 0, $9 = 0, $_7$sroa$5$1 = 0, $dist$0$i$i$i$i$i$i = 0, $pos = 0, $probe$sroa$8$0252$i$i$i$i = 0;
 var $switchtmp$i = 0, $value$i$sroa$0$0$$sroa_idx = 0, $value$i$sroa$4 = 0, $value$i$sroa$4$0$$sroa_idx = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $value$i$sroa$4 = sp + 24|0;
 $pos = sp;
 ;HEAP32[$pos>>2]=HEAP32[$2>>2]|0;HEAP32[$pos+4>>2]=HEAP32[$2+4>>2]|0;HEAP32[$pos+8>>2]=HEAP32[$2+8>>2]|0;HEAP32[$pos+12>>2]=HEAP32[$2+12>>2]|0;HEAP32[$pos+16>>2]=HEAP32[$2+16>>2]|0;HEAP32[$pos+20>>2]=HEAP32[$2+20>>2]|0;
 $3 = ((($0)) + 40|0);
 $4 = HEAP32[$3>>2]|0;
 $switchtmp$i = ($4|0)==(0|0);
 do {
  if ($switchtmp$i) {
   $_7$sroa$5$1 = $1;
  } else {
   $$idx = ((($0)) + 16|0);
   $5 = $$idx;
   $6 = $5;
   $7 = HEAP32[$6>>2]|0;
   $8 = (($5) + 4)|0;
   $9 = $8;
   $10 = HEAP32[$9>>2]|0;
   $$idx34 = ((($0)) + 24|0);
   $11 = $$idx34;
   $12 = $11;
   $13 = HEAP32[$12>>2]|0;
   $14 = (($11) + 4)|0;
   $15 = $14;
   $16 = HEAP32[$15>>2]|0;
   $17 = (__ZN72__LT_std__collections__hash__map__HashMap_LT_K_C__u20_V_C__u20_S_GT__GT_9make_hash17he80a4aab712026bfE($7,$10,$13,$16,$1)|0);
   $18 = tempRet0;
   $$idx$i$i$i$i = ((($0)) + 32|0);
   $$idx$val$i$i$i$i = HEAP32[$$idx$i$i$i$i>>2]|0;
   $19 = ($$idx$val$i$i$i$i|0)==(0);
   if ($19) {
    __ZN3std9panicking11begin_panic17h9936a195de5ffc4dE(12635,129,5376);
    // unreachable;
   }
   $20 = (($$idx$val$i$i$i$i) + -1)|0;
   $21 = $20 & $17;
   $22 = (($4) + ($21<<3)|0);
   $23 = $22;
   $24 = $23;
   $25 = HEAP32[$24>>2]|0;
   $26 = (($23) + 4)|0;
   $27 = $26;
   $28 = HEAP32[$27>>2]|0;
   $29 = ($25|0)==(0);
   $30 = ($28|0)==(0);
   $31 = $29 & $30;
   if ($31) {
    __ZN3std9panicking11begin_panic17h9936a195de5ffc4dE(12635,129,5376);
    // unreachable;
   }
   $32 = (($4) + ($$idx$val$i$i$i$i<<3)|0);
   $33 = (($32) + ($21<<3)|0);
   $34 = (1 - ($$idx$val$i$i$i$i))|0;
   $$in$i$i = $33;$$sink237250$i$i$i$i = $22;$36 = $25;$41 = $28;$probe$sroa$8$0252$i$i$i$i = $21;
   while(1) {
    $35 = (($probe$sroa$8$0252$i$i$i$i) - ($36))|0;
    $37 = $35 & $20;
    $38 = (($probe$sroa$8$0252$i$i$i$i) - ($37))|0;
    $39 = ($21|0)<($38|0);
    if ($39) {
     label = 10;
     break;
    }
    $40 = ($36|0)==($17|0);
    $42 = ($41|0)==($18|0);
    $43 = $40 & $42;
    if ($43) {
     $$val$i$i$i$i = HEAP32[$$in$i$i>>2]|0;
     $44 = ($$val$i$i$i$i|0)==($1|0);
     if ($44) {
      label = 9;
      break;
     }
    }
    $45 = (($probe$sroa$8$0252$i$i$i$i) + 1)|0;
    $46 = $45 & $20;
    $47 = ($46|0)==(0);
    $dist$0$i$i$i$i$i$i = $47 ? $34 : 1;
    $48 = (($$sink237250$i$i$i$i) + ($dist$0$i$i$i$i$i$i<<3)|0);
    $49 = (($$in$i$i) + ($dist$0$i$i$i$i$i$i<<3)|0);
    $50 = $48;
    $51 = $50;
    $52 = HEAP32[$51>>2]|0;
    $53 = (($50) + 4)|0;
    $54 = $53;
    $55 = HEAP32[$54>>2]|0;
    $56 = ($52|0)==(0);
    $57 = ($55|0)==(0);
    $58 = $56 & $57;
    if ($58) {
     label = 10;
     break;
    } else {
     $$in$i$i = $49;$$sink237250$i$i$i$i = $48;$36 = $52;$41 = $55;$probe$sroa$8$0252$i$i$i$i = $45;
    }
   }
   if ((label|0) == 9) {
    $$idx$i$i$i = ((($$in$i$i)) + 4|0);
    $$idx$val$i$i$i = HEAP32[$$idx$i$i$i>>2]|0;
    $_7$sroa$5$1 = $$idx$val$i$i$i;
    break;
   }
   else if ((label|0) == 10) {
    __ZN3std9panicking11begin_panic17h9936a195de5ffc4dE(12635,129,5376);
    // unreachable;
   }
  }
 } while(0);
 $59 = ((($0)) + 116|0);
 ;HEAP32[$value$i$sroa$4>>2]=HEAP32[$pos>>2]|0;HEAP32[$value$i$sroa$4+4>>2]=HEAP32[$pos+4>>2]|0;HEAP32[$value$i$sroa$4+8>>2]=HEAP32[$pos+8>>2]|0;HEAP32[$value$i$sroa$4+12>>2]=HEAP32[$pos+12>>2]|0;HEAP32[$value$i$sroa$4+16>>2]=HEAP32[$pos+16>>2]|0;HEAP32[$value$i$sroa$4+20>>2]=HEAP32[$pos+20>>2]|0;
 $60 = ((($0)) + 124|0);
 $61 = HEAP32[$60>>2]|0;
 $$idx$i = ((($0)) + 120|0);
 $$idx$val$i = HEAP32[$$idx$i>>2]|0;
 $62 = ($61|0)==($$idx$val$i|0);
 if ($62) {
  __ZN40__LT_alloc__raw_vec__RawVec_LT_T_GT__GT_6double17h3b635aeacc3e1107E($59);
  $$pre$i = HEAP32[$60>>2]|0;
  $64 = $$pre$i;
 } else {
  $64 = $61;
 }
 $63 = HEAP32[$59>>2]|0;
 $value$i$sroa$0$0$$sroa_idx = (($63) + (($64*28)|0)|0);
 HEAP32[$value$i$sroa$0$0$$sroa_idx>>2] = $_7$sroa$5$1;
 $value$i$sroa$4$0$$sroa_idx = (((($63) + (($64*28)|0)|0)) + 4|0);
 ;HEAP32[$value$i$sroa$4$0$$sroa_idx>>2]=HEAP32[$value$i$sroa$4>>2]|0;HEAP32[$value$i$sroa$4$0$$sroa_idx+4>>2]=HEAP32[$value$i$sroa$4+4>>2]|0;HEAP32[$value$i$sroa$4$0$$sroa_idx+8>>2]=HEAP32[$value$i$sroa$4+8>>2]|0;HEAP32[$value$i$sroa$4$0$$sroa_idx+12>>2]=HEAP32[$value$i$sroa$4+12>>2]|0;HEAP32[$value$i$sroa$4$0$$sroa_idx+16>>2]=HEAP32[$value$i$sroa$4+16>>2]|0;HEAP32[$value$i$sroa$4$0$$sroa_idx+20>>2]=HEAP32[$value$i$sroa$4+20>>2]|0;
 $65 = HEAP32[$60>>2]|0;
 $66 = (($65) + 1)|0;
 HEAP32[$60>>2] = $66;
 STACKTOP = sp;return;
}
function __ZN93__LT_ncollide_pipeline__world__collision_world__CollisionWorld_LT_P_C__u20_M_C__u20_T_GT__GT_23perform_position_update17hd449c9be1a6fa5a2E($0) {
 $0 = $0|0;
 var $$idx$i$i = 0, $$idx$val = 0, $$idx$val$i$i = 0, $$idx$val17$i = 0, $$idx1$val$i$i = 0, $$idx13$val$idx = 0, $$idx13$val$idx$val = 0, $$idx13$val$idx14 = 0, $$idx13$val$idx14$val = 0, $$idx15$val = 0, $$idx5$i = 0, $$idx5$val18$i = 0, $$pre = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0;
 var $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = SIMD_Int32x4(0,0,0,0), $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0.0, $28 = 0, $29 = 0.0, $3 = 0, $30 = 0.0, $31 = 0.0, $32 = 0.0, $33 = 0.0;
 var $34 = 0.0, $35 = 0.0, $36 = 0.0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $_21$sroa$0$0$$sroa_idx = 0, $_21$sroa$7$0$$sroa_idx = 0, $_21$sroa$8$0$$sroa_idx = 0, $_37 = 0, $aabb = 0, $or$cond = 0;
 var $phitmp = 0, $switch1tmp = 0, $switchtmp$i$i = 0, label = 0, sp = 0, temp_Int32x4_ptr = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $aabb = sp + 16|0;
 $_37 = sp;
 $1 = ((($0)) + 116|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($0)) + 124|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (($2) + (($4*28)|0)|0);
 $6 = ($4|0)==(0);
 if ($6) {
  STACKTOP = sp;return;
 }
 $$idx$i$i = ((($0)) + 8|0);
 $7 = ((($0)) + 152|0);
 $8 = ((($aabb)) + 4|0);
 $9 = ((($aabb)) + 8|0);
 $10 = ((($aabb)) + 12|0);
 $11 = ((($0)) + 64|0);
 $12 = ((($0)) + 68|0);
 $14 = $2;
 while(1) {
  $13 = ((($14)) + 28|0);
  $15 = ((($14)) + 4|0);
  $$idx15$val = HEAP32[$14>>2]|0;
  $$idx$val$i$i = HEAP32[$$idx$i$i>>2]|0;
  $16 = ($$idx$val$i$i>>>0)>($$idx15$val>>>0);
  if ($16) {
   $$idx1$val$i$i = HEAP32[$0>>2]|0;
   $17 = (($$idx1$val$i$i) + ($$idx15$val<<6)|0);
   $18 = (((($$idx1$val$i$i) + ($$idx15$val<<6)|0)) + 28|0);
   $19 = HEAP32[$18>>2]|0;
   $switchtmp$i$i = ($19|0)==(0|0);
   $switch1tmp = ($17|0)==(0|0);
   $or$cond = $switchtmp$i$i | $switch1tmp;
   if (!($or$cond)) {
    $20 = ((($14)) + 20|0);
    $21 = SIMD_Int32x4_load(HEAPU8, $15);
    $$idx$val17$i = HEAP32[$20>>2]|0;
    $$idx5$i = ((($14)) + 24|0);
    $$idx5$val18$i = HEAP32[$$idx5$i>>2]|0;
    $_21$sroa$0$0$$sroa_idx = (((($$idx1$val$i$i) + ($$idx15$val<<6)|0)) + 4|0);
    temp_Int32x4_ptr = $_21$sroa$0$0$$sroa_idx;SIMD_Int32x4_store(HEAPU8, temp_Int32x4_ptr, $21);
    $_21$sroa$7$0$$sroa_idx = (((($$idx1$val$i$i) + ($$idx15$val<<6)|0)) + 20|0);
    HEAP32[$_21$sroa$7$0$$sroa_idx>>2] = $$idx$val17$i;
    $_21$sroa$8$0$$sroa_idx = (((($$idx1$val$i$i) + ($$idx15$val<<6)|0)) + 24|0);
    HEAP32[$_21$sroa$8$0$$sroa_idx>>2] = $$idx5$val18$i;
    $22 = HEAP32[$7>>2]|0;
    $23 = (((($$idx1$val$i$i) + ($$idx15$val<<6)|0)) + 60|0);
    HEAP32[$23>>2] = $22;
    $$idx13$val$idx = ((($19)) + 8|0);
    $$idx13$val$idx$val = HEAP32[$$idx13$val$idx>>2]|0;
    $$idx13$val$idx14 = ((($19)) + 12|0);
    $$idx13$val$idx14$val = HEAP32[$$idx13$val$idx14>>2]|0;
    $24 = ((($$idx13$val$idx14$val)) + 12|0);
    $25 = HEAP32[$24>>2]|0;
    FUNCTION_TABLE_viii[$25 & 511]($aabb,$$idx13$val$idx$val,$15);
    $26 = (((($$idx1$val$i$i) + ($$idx15$val<<6)|0)) + 48|0);
    $27 = +HEAPF32[$26>>2];
    $28 = !($27 >= 0.0);
    if ($28) {
     label = 9;
     break;
    }
    $29 = +HEAPF32[$aabb>>2];
    $30 = +HEAPF32[$8>>2];
    $31 = $29 - $27;
    $32 = $30 - $27;
    HEAPF32[$aabb>>2] = $31;
    HEAPF32[$8>>2] = $32;
    $33 = +HEAPF32[$9>>2];
    $34 = +HEAPF32[$10>>2];
    $35 = $27 + $33;
    $36 = $27 + $34;
    HEAPF32[$9>>2] = $35;
    HEAPF32[$10>>2] = $36;
    $37 = HEAP32[$11>>2]|0;
    $38 = HEAP32[$12>>2]|0;
    $$idx$val = HEAP32[$14>>2]|0;
    ;HEAP32[$_37>>2]=HEAP32[$aabb>>2]|0;HEAP32[$_37+4>>2]=HEAP32[$aabb+4>>2]|0;HEAP32[$_37+8>>2]=HEAP32[$aabb+8>>2]|0;HEAP32[$_37+12>>2]=HEAP32[$aabb+12>>2]|0;
    $39 = ((($38)) + 20|0);
    $40 = HEAP32[$39>>2]|0;
    FUNCTION_TABLE_viii[$40 & 511]($37,$$idx$val,$_37);
   }
  }
  $41 = ($13|0)==($5|0);
  if ($41) {
   break;
  } else {
   $14 = $13;
  }
 }
 if ((label|0) == 9) {
  __ZN3std9panicking11begin_panic17h9936a195de5ffc4dE(11057,38,5400);
  // unreachable;
 }
 $$pre = HEAP32[$3>>2]|0;
 $phitmp = ($$pre|0)==(0);
 if ($phitmp) {
  STACKTOP = sp;return;
 }
 HEAP32[$3>>2] = 0;
 STACKTOP = sp;return;
}
function __ZN93__LT_ncollide_pipeline__world__collision_world__CollisionWorld_LT_P_C__u20_M_C__u20_T_GT__GT_42perform_additions_removals_and_broad_phase17h262b713878bb08b9E($0) {
 $0 = $0|0;
 var $$fca$0$extract17310 = 0, $$fca$0$gep25$i = 0, $$fca$0$load26$i = 0, $$fca$0$load42 = 0, $$fca$0$load42438 = 0, $$fca$1$extract19311 = 0, $$idx$i = 0, $$idx$i$i = 0, $$idx$i$i$i = 0, $$idx$i$i$i$i = 0, $$idx$i$i147 = 0, $$idx$i45$i = 0, $$idx$val$i = 0, $$idx$val$i$i$i$i$i$i = 0, $$idx$val$i$i$i$i140 = 0, $$idx$val$i$i$i$i204 = 0, $$idx$val$i$i$i$i92$i = 0, $$idx$val$i$i$i44$i$i$i = 0, $$idx$val$i$i148 = 0, $$idx$val$i$i243 = 0;
 var $$idx$val$i$i97 = 0, $$idx$val$i35$i = 0, $$idx$val$i46$i = 0, $$idx$val$idx = 0, $$idx$val$idx$val = 0, $$idx$val$idx53 = 0, $$idx$val$idx53$val = 0, $$idx1$i$i$i$i$i$i$i$i = 0, $$idx1$i$i$i$i$i$i$i$i171 = 0, $$idx1$i$i$i$i$i$i$i123 = 0, $$idx1$i$i$i$i$i$i$i155$i = 0, $$idx1$i$i$i$i$i$i$i216 = 0, $$idx1$i$i$i$i$i$i$i248 = 0, $$idx1$val$i$i = 0, $$idx1$val$i$i$i$i$i$i$i$i = 0, $$idx1$val$i$i$i$i$i$i$i$i172 = 0, $$idx1$val$i$i$i$i$i$i$i124 = 0, $$idx1$val$i$i$i$i$i$i$i156$i = 0, $$idx1$val$i$i$i$i$i$i$i217 = 0, $$idx1$val$i$i$i$i$i$i$i249 = 0;
 var $$idx1$val$i38$i = 0, $$idx1$val$val$i$i$i$i$i$i$i$i = 0, $$idx1$val$val$i$i$i$i$i$i$i$i173 = 0, $$idx1$val$val$i$i$i$i$i$i$i125 = 0, $$idx1$val$val$i$i$i$i$i$i$i157$i = 0, $$idx1$val$val$i$i$i$i$i$i$i218 = 0, $$idx1$val$val$i$i$i$i$i$i$i250 = 0, $$idx2$val$i$i$i$i207 = 0, $$idx2$val$i$i254 = 0, $$idx3$i$i = 0, $$idx3$val$i$i$i = 0, $$idx3$val$i$i$i$i206 = 0, $$idx3$val$i$i$i176 = 0, $$idx3$val$i$i128 = 0, $$idx3$val$i$i160$i = 0, $$idx3$val$i$i221 = 0, $$idx3$val$i$i253 = 0, $$idx3$val$i$i98 = 0, $$idx531 = 0, $$in = 0;
 var $$in$i$i = 0, $$pre = 0, $$pre$i47$i = 0, $$pre435 = 0, $$sink$i153 = 0, $$sink156$i = 0, $$sink237250$i$i$i$i = 0, $$val$i = 0, $$val$i$i$i$i = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0;
 var $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0;
 var $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0;
 var $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0;
 var $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0;
 var $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0;
 var $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0;
 var $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0;
 var $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0;
 var $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0;
 var $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0;
 var $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0;
 var $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0;
 var $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0;
 var $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0;
 var $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0.0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0;
 var $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0;
 var $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0;
 var $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0.0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0.0, $430 = 0, $431 = 0, $432 = 0;
 var $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0.0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0.0, $450 = 0;
 var $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0.0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0;
 var $47 = 0.0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0.0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0;
 var $488 = 0, $489 = 0, $49 = 0.0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0;
 var $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0;
 var $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0;
 var $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0;
 var $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0;
 var $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0;
 var $596 = 0, $597 = 0, $598 = 0, $599 = 0, $6 = 0, $60 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0, $612 = 0;
 var $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0, $63 = 0, $630 = 0;
 var $631 = 0, $632 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0;
 var $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0;
 var $99 = 0, $_11$sroa$0 = 0, $_11$sroa$6$0$$sroa_idx540 = 0, $_11$sroa$6$0$$sroa_idx541 = 0, $_11$sroa$6$0$copyload542 = 0, $_11$sroa$8 = 0, $_11$sroa$8$0$$sroa_idx = 0, $_11$sroa$8$0$$sroa_idx548 = 0, $_12$i = 0, $_13$i = 0, $_14$i = 0, $_15$i = 0, $_18$i = 0, $_20$i = 0, $_27 = 0, $_27$sroa$0$sroa$4$0$_27$sroa$0$0$$sroa_cast60$sroa_idx146$i = 0, $_27$sroa$0$sroa$4$0$copyload$i = 0, $_27$sroa$0$sroa$5$0$_27$sroa$0$0$$sroa_cast60$sroa_idx$i = 0, $_28$i = 0, $_34 = 0;
 var $_4$sroa$3$0$$sroa_idx9$i$i40$i = 0, $_5$sroa$4$0$$sroa_idx292 = 0, $_5$sroa$5$0$$sroa_idx294 = 0, $_5$sroa$6$0$$sroa_idx297 = 0, $_5$sroa$7$0$$sroa_idx300 = 0, $_51$i = 0, $_52$sroa$5$2 = 0, $_52$sroa$5$2$in = 0, $_6$sroa$0$i = 0, $_6$sroa$4$0$i = 0, $_6$sroa$5$i = 0, $_67 = 0, $aabb = 0, $bucket2$sroa$0$sroa$0$0$i$i$i = 0, $bucket2$sroa$0$sroa$0$1$i$i$i = 0, $bucket2$sroa$0$sroa$6$0$i$i$i = 0, $bucket2$sroa$0$sroa$6$1$i$i$i = 0, $bucket2$sroa$9$0$i$i$i = 0, $bucket2$sroa$9$1$i$i$i = 0, $co = 0;
 var $dist$0$i$i$i$i$i = 0, $dist$0$i$i$i$i$i$i = 0, $dist$0$i$i$i$i$i$i141 = 0, $dist$0$i$i$i45$i$i$i = 0, $entry$sroa$4$0$$sroa_idx254$i = 0, $entry$sroa$4$0$copyload$i = 0, $entry$sroa$5$0$copyload$i = 0, $entry$sroa$6$0$$sroa_cast$i = 0, $entry$sroa$6$0$copyload$i = 0, $entry$sroa$7$0$copyload$i = 0, $entry1$sroa$0$0$$sroa_idx$i = 0, $entry1$sroa$4$0$$sroa_idx215$i = 0, $entry1$sroa$4$0$copyload$i = 0, $entry1$sroa$5$0$$sroa_idx$i = 0, $entry1$sroa$5$0$copyload$i = 0, $entry1$sroa$6$0$$sroa_idx218$i = 0, $entry1$sroa$7$0$$sroa_idx220$i = 0, $entry1$sroa$7$0$copyload$i = 0, $entry1$sroa$8$0$$sroa_idx$i = 0, $entry1$sroa$8$0$copyload$i = 0;
 var $entry1$sroa$9$0$$sroa_idx223$i = 0, $entry1$sroa$9$0$copyload$i = 0, $fast_key3$sroa$0$0$i = 0, $filts$i = 0, $gap$sroa$0$0$in$i34$i$i = 0, $gap$sroa$0$0$in$i34$i$i$phi = 0, $gap$sroa$12$0$in$i36$i$i = 0, $gap$sroa$16$0$in$i37$i$i = 0, $gap$sroa$19$0$i38$i$i = 0, $gap$sroa$6$0$in$i35$i$i = 0, $gap$sroa$6$0$in$i35$i$i$phi = 0, $ib$0$i$i$i = 0, $iter = 0, $iter2$sroa$0$0$ph411 = 0, $iter2$sroa$0$0391 = 0, $key$0$i$i$i = 0, $lpad$phi$index = 0, $lpad$phi$index12 = 0, $lpad$phi326$index = 0, $lpad$phi326$index7 = 0;
 var $lpad$phi329$index = 0, $lpad$phi329$index2 = 0, $nf$i = 0, $not$switchtmp$i$i = 0, $objs$i = 0, $old_value$i = 0, $old_value$idx$i = 0, $old_value$idx$val$i = 0, $old_value4$i = 0, $old_value4$idx$i = 0, $old_value4$idx$val$i = 0, $personalityslot$sroa$0$0 = 0, $personalityslot$sroa$7$0 = 0, $probe$sroa$8$0252$i$i$i$i = 0, $prox$i = 0, $res$i = 0, $self$i$sroa$0$0$_7$sroa$4$0$$sroa_cast100$i$sroa_idx$i = 0, $self$i$sroa$0$i = 0, $self$i$sroa$7$0$_7$sroa$4$0$$sroa_cast100$i$sroa_idx$i = 0, $self$i$sroa$7$i = 0;
 var $self$i49$sroa$0$i = 0, $self$i49$sroa$6$i = 0, $sig$i = 0, $src$sroa$0$i$i$i$sroa$4$0$$sroa_idx94$i = 0, $src$sroa$0$i$i$i$sroa$4$0$copyload$i = 0, $src$sroa$0$i$i$i$sroa$5$0$$sroa_idx$i = 0, $switch$i = 0, $switch$i$i = 0, $switch3tmp$i$i = 0, $switch3tmp$i51$i = 0, $switch4$i = 0, $switch8tmp$i = 0, $switchtmp = 0, $switchtmp$i$i = 0, $switchtmp$i$i$i = 0, $switchtmp$i$i$i$i$i$i$i = 0, $switchtmp$i$i$i$i$i$i$i169 = 0, $switchtmp$i$i$i$i$i$i121 = 0, $switchtmp$i$i$i$i$i$i153$i = 0, $switchtmp$i$i$i$i$i$i214 = 0;
 var $switchtmp$i$i$i$i$i$i246 = 0, $switchtmp$i$i161 = 0, $switchtmp$i138 = 0, $switchtmp$i146 = 0, $switchtmp$i182 = 0, $switchtmp276$i$i$i = 0, $val$sroa$0$0$i$i$i = 0, $value$i = 0, dest = 0, label = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1136|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(1136|0);
 $self$i49$sroa$0$i = sp + 1080|0;
 $self$i49$sroa$6$i = sp + 1048|0;
 $self$i$sroa$0$i = sp + 1016|0;
 $self$i$sroa$7$i = sp + 984|0;
 $_6$sroa$0$i = sp + 952|0;
 $_6$sroa$5$i = sp + 920|0;
 $_13$i = sp + 912|0;
 $res$i = sp + 848|0;
 $nf$i = sp + 1124|0;
 $sig$i = sp + 1120|0;
 $prox$i = sp + 1116|0;
 $filts$i = sp + 1112|0;
 $objs$i = sp + 1108|0;
 $_14$i = sp + 840|0;
 $_20$i = sp + 824|0;
 $value$i = sp + 760|0;
 $_12$i = sp + 696|0;
 $_15$i = sp + 632|0;
 $_18$i = sp + 584|0;
 $old_value$i = sp + 520|0;
 $_28$i = sp + 456|0;
 $old_value4$i = sp + 392|0;
 $_51$i = sp + 328|0;
 $iter = sp + 304|0;
 $_11$sroa$0 = sp + 272|0;
 $_11$sroa$8 = sp + 240|0;
 $co = sp + 176|0;
 $aabb = sp + 160|0;
 $_27 = sp + 88|0;
 $_34 = sp + 72|0;
 $_67 = sp;
 $1 = ((($0)) + 140|0);
 $$idx$i = ((($0)) + 148|0);
 $$idx$val$i = HEAP32[$$idx$i>>2]|0;
 HEAP32[$$idx$i>>2] = 0;
 $2 = HEAP32[$1>>2]|0;
 $3 = (($2) + ($$idx$val$i<<6)|0);
 $4 = $2;
 $5 = $3;
 HEAP32[$iter>>2] = $$idx$val$i;
 $_5$sroa$4$0$$sroa_idx292 = ((($iter)) + 4|0);
 HEAP32[$_5$sroa$4$0$$sroa_idx292>>2] = 0;
 $_5$sroa$5$0$$sroa_idx294 = ((($iter)) + 8|0);
 HEAP32[$_5$sroa$5$0$$sroa_idx294>>2] = $4;
 $_5$sroa$6$0$$sroa_idx297 = ((($iter)) + 12|0);
 HEAP32[$_5$sroa$6$0$$sroa_idx297>>2] = $5;
 $_5$sroa$7$0$$sroa_idx300 = ((($iter)) + 16|0);
 HEAP32[$_5$sroa$7$0$$sroa_idx300>>2] = $1;
 $6 = ((($iter)) + 8|0);
 $7 = ((($co)) + 28|0);
 $8 = ((($co)) + 4|0);
 $9 = ((($co)) + 48|0);
 $10 = ((($aabb)) + 4|0);
 $11 = ((($aabb)) + 8|0);
 $12 = ((($aabb)) + 12|0);
 $13 = ((($0)) + 40|0);
 $14 = ((($_27)) + 4|0);
 $15 = ((($_27)) + 32|0);
 $16 = ((($0)) + 64|0);
 $17 = ((($0)) + 68|0);
 $18 = ((($_27)) + 32|0);
 $19 = ((($_27)) + 56|0);
 $20 = ((($_27)) + 60|0);
 $21 = ((($0)) + 16|0);
 $$idx$i$i = ((($0)) + 36|0);
 $22 = ((($_18$i)) + 8|0);
 $entry1$sroa$0$0$$sroa_idx$i = ((($_18$i)) + 8|0);
 $entry1$sroa$4$0$$sroa_idx215$i = ((($_18$i)) + 16|0);
 $entry1$sroa$5$0$$sroa_idx$i = ((($22)) + 12|0);
 $entry1$sroa$6$0$$sroa_idx218$i = ((($_18$i)) + 24|0);
 $entry1$sroa$7$0$$sroa_idx220$i = ((($_18$i)) + 32|0);
 $entry1$sroa$8$0$$sroa_idx$i = ((($22)) + 28|0);
 $entry1$sroa$9$0$$sroa_idx223$i = ((($_18$i)) + 40|0);
 $23 = ((($0)) + 56|0);
 $old_value4$idx$i = ((($old_value4$i)) + 28|0);
 $24 = ((($0)) + 48|0);
 $25 = ((($_18$i)) + 4|0);
 $entry$sroa$4$0$$sroa_idx254$i = ((($25)) + 8|0);
 $entry$sroa$6$0$$sroa_cast$i = ((($25)) + 16|0);
 $old_value$idx$i = ((($old_value$i)) + 28|0);
 $26 = ($$idx$val$i|0)==(0);
 L1: do {
  if (!($26)) {
   $_11$sroa$6$0$$sroa_idx540 = ((($co)) + 28|0);
   $_11$sroa$8$0$$sroa_idx = ((($co)) + 32|0);
   $28 = $2;
   L3: while(1) {
    $27 = ((($28)) + 64|0);
    HEAP32[$6>>2] = $27;
    ;HEAP32[$_11$sroa$0>>2]=HEAP32[$28>>2]|0;HEAP32[$_11$sroa$0+4>>2]=HEAP32[$28+4>>2]|0;HEAP32[$_11$sroa$0+8>>2]=HEAP32[$28+8>>2]|0;HEAP32[$_11$sroa$0+12>>2]=HEAP32[$28+12>>2]|0;HEAP32[$_11$sroa$0+16>>2]=HEAP32[$28+16>>2]|0;HEAP32[$_11$sroa$0+20>>2]=HEAP32[$28+20>>2]|0;HEAP32[$_11$sroa$0+24>>2]=HEAP32[$28+24>>2]|0;
    $_11$sroa$6$0$$sroa_idx541 = ((($28)) + 28|0);
    $_11$sroa$6$0$copyload542 = HEAP32[$_11$sroa$6$0$$sroa_idx541>>2]|0;
    $_11$sroa$8$0$$sroa_idx548 = ((($28)) + 32|0);
    ;HEAP32[$_11$sroa$8>>2]=HEAP32[$_11$sroa$8$0$$sroa_idx548>>2]|0;HEAP32[$_11$sroa$8+4>>2]=HEAP32[$_11$sroa$8$0$$sroa_idx548+4>>2]|0;HEAP32[$_11$sroa$8+8>>2]=HEAP32[$_11$sroa$8$0$$sroa_idx548+8>>2]|0;HEAP32[$_11$sroa$8+12>>2]=HEAP32[$_11$sroa$8$0$$sroa_idx548+12>>2]|0;HEAP32[$_11$sroa$8+16>>2]=HEAP32[$_11$sroa$8$0$$sroa_idx548+16>>2]|0;HEAP32[$_11$sroa$8+20>>2]=HEAP32[$_11$sroa$8$0$$sroa_idx548+20>>2]|0;HEAP32[$_11$sroa$8+24>>2]=HEAP32[$_11$sroa$8$0$$sroa_idx548+24>>2]|0;HEAP32[$_11$sroa$8+28>>2]=HEAP32[$_11$sroa$8$0$$sroa_idx548+28>>2]|0;
    $switchtmp = ($_11$sroa$6$0$copyload542|0)==(0|0);
    if ($switchtmp) {
     break L1;
    }
    ;HEAP32[$co>>2]=HEAP32[$_11$sroa$0>>2]|0;HEAP32[$co+4>>2]=HEAP32[$_11$sroa$0+4>>2]|0;HEAP32[$co+8>>2]=HEAP32[$_11$sroa$0+8>>2]|0;HEAP32[$co+12>>2]=HEAP32[$_11$sroa$0+12>>2]|0;HEAP32[$co+16>>2]=HEAP32[$_11$sroa$0+16>>2]|0;HEAP32[$co+20>>2]=HEAP32[$_11$sroa$0+20>>2]|0;HEAP32[$co+24>>2]=HEAP32[$_11$sroa$0+24>>2]|0;
    HEAP32[$_11$sroa$6$0$$sroa_idx540>>2] = $_11$sroa$6$0$copyload542;
    ;HEAP32[$_11$sroa$8$0$$sroa_idx>>2]=HEAP32[$_11$sroa$8>>2]|0;HEAP32[$_11$sroa$8$0$$sroa_idx+4>>2]=HEAP32[$_11$sroa$8+4>>2]|0;HEAP32[$_11$sroa$8$0$$sroa_idx+8>>2]=HEAP32[$_11$sroa$8+8>>2]|0;HEAP32[$_11$sroa$8$0$$sroa_idx+12>>2]=HEAP32[$_11$sroa$8+12>>2]|0;HEAP32[$_11$sroa$8$0$$sroa_idx+16>>2]=HEAP32[$_11$sroa$8+16>>2]|0;HEAP32[$_11$sroa$8$0$$sroa_idx+20>>2]=HEAP32[$_11$sroa$8+20>>2]|0;HEAP32[$_11$sroa$8$0$$sroa_idx+24>>2]=HEAP32[$_11$sroa$8+24>>2]|0;HEAP32[$_11$sroa$8$0$$sroa_idx+28>>2]=HEAP32[$_11$sroa$8+28>>2]|0;
    $$idx$val$idx = ((($_11$sroa$6$0$copyload542)) + 8|0);
    $$idx$val$idx$val = HEAP32[$$idx$val$idx>>2]|0;
    $$idx$val$idx53 = ((($_11$sroa$6$0$copyload542)) + 12|0);
    $$idx$val$idx53$val = HEAP32[$$idx$val$idx53>>2]|0;
    $33 = ((($$idx$val$idx53$val)) + 12|0);
    $34 = HEAP32[$33>>2]|0;
    __THREW__ = 0;
    invoke_viii($34|0,($aabb|0),($$idx$val$idx$val|0),($8|0));
    $35 = __THREW__; __THREW__ = 0;
    $36 = $35&1;
    if ($36) {
     label = 173;
     break;
    }
    $37 = +HEAPF32[$9>>2];
    $38 = !($37 >= 0.0);
    if ($38) {
     label = 11;
     break;
    }
    $42 = +HEAPF32[$aabb>>2];
    $43 = +HEAPF32[$10>>2];
    $44 = $42 - $37;
    $45 = $43 - $37;
    HEAPF32[$aabb>>2] = $44;
    HEAPF32[$10>>2] = $45;
    $46 = +HEAPF32[$11>>2];
    $47 = +HEAPF32[$12>>2];
    $48 = $37 + $46;
    $49 = $37 + $47;
    HEAPF32[$11>>2] = $48;
    HEAPF32[$12>>2] = $49;
    $50 = HEAP32[$co>>2]|0;
    dest=$value$i; src=$co; stop=dest+64|0; do { HEAP32[dest>>2]=HEAP32[src>>2]|0; dest=dest+4|0; src=src+4|0; } while ((dest|0) < (stop|0));
    $51 = HEAP32[$13>>2]|0;
    $switch8tmp$i = ($51|0)==(0|0);
    if ($switch8tmp$i) {
     dest=$_15$i; src=$value$i; stop=dest+64|0; do { HEAP32[dest>>2]=HEAP32[src>>2]|0; dest=dest+4|0; src=src+4|0; } while ((dest|0) < (stop|0));
     __THREW__ = 0;
     invoke_viiii(277,($_12$i|0),($0|0),($50|0),($_15$i|0));
     $54 = __THREW__; __THREW__ = 0;
     $55 = $54&1;
     if ($55) {
      label = 13;
      break;
     }
     HEAP32[$_27>>2] = $50;
     dest=$14; src=$_12$i; stop=dest+64|0; do { HEAP32[dest>>2]=HEAP32[src>>2]|0; dest=dest+4|0; src=src+4|0; } while ((dest|0) < (stop|0));
     $$fca$0$load42 = $50;
    } else {
     $$idx$val$i$i97 = HEAP32[$$idx$i$i>>2]|0;
     __THREW__ = 0;
     invoke_viii(235,($_18$i|0),($21|0),($50|0));
     $56 = __THREW__; __THREW__ = 0;
     $57 = $56&1;
     if ($57) {
      label = 41;
      break;
     }
     $58 = HEAP32[$_18$i>>2]|0;
     $switch$i = ($58|0)==(1);
     if ($switch$i) {
      $130 = $entry1$sroa$0$0$$sroa_idx$i;
      $131 = $130;
      $132 = HEAP32[$131>>2]|0;
      $133 = (($130) + 4)|0;
      $134 = $133;
      $135 = HEAP32[$134>>2]|0;
      $entry1$sroa$4$0$copyload$i = HEAP32[$entry1$sroa$4$0$$sroa_idx215$i>>2]|0;
      $entry1$sroa$5$0$copyload$i = HEAP32[$entry1$sroa$5$0$$sroa_idx$i>>2]|0;
      $136 = $entry1$sroa$6$0$$sroa_idx218$i;
      $137 = $136;
      $138 = HEAP32[$137>>2]|0;
      $139 = (($136) + 4)|0;
      $140 = $139;
      $141 = HEAP32[$140>>2]|0;
      $entry1$sroa$7$0$copyload$i = HEAP32[$entry1$sroa$7$0$$sroa_idx220$i>>2]|0;
      $entry1$sroa$8$0$copyload$i = HEAP32[$entry1$sroa$8$0$$sroa_idx$i>>2]|0;
      $entry1$sroa$9$0$copyload$i = HEAP32[$entry1$sroa$9$0$$sroa_idx223$i>>2]|0;
      $142 = HEAP32[$23>>2]|0;
      $143 = ($142|0)==(0);
      $144 = (($142) + -1)|0;
      if ($143) {
       $fast_key3$sroa$0$0$i = $$idx$val$i$i97;
      } else {
       HEAP32[$23>>2] = $144;
       $150 = HEAP32[$24>>2]|0;
       $$idx3$i$i = (($150) + ($144<<2)|0);
       $$idx3$val$i$i98 = HEAP32[$$idx3$i$i>>2]|0;
       $fast_key3$sroa$0$0$i = $$idx3$val$i$i98;
      }
      $switch$i$i = ($entry1$sroa$5$0$copyload$i|0)==(0);
      if ($switch$i$i) {
       $151 = $entry1$sroa$8$0$copyload$i;
       $161 = $132;$164 = $135;$bucket2$sroa$0$sroa$0$0$i$i$i = $138;$bucket2$sroa$0$sroa$6$0$i$i$i = $141;$bucket2$sroa$9$0$i$i$i = $entry1$sroa$7$0$copyload$i;$ib$0$i$i$i = $entry1$sroa$9$0$copyload$i;$key$0$i$i$i = $entry1$sroa$4$0$copyload$i;$val$sroa$0$0$i$i$i = $fast_key3$sroa$0$0$i;
       L20: while(1) {
        $152 = $bucket2$sroa$0$sroa$0$0$i$i$i;
        $153 = $152;
        $154 = $153;
        $155 = HEAP32[$154>>2]|0;
        $156 = (($153) + 4)|0;
        $157 = $156;
        $158 = HEAP32[$157>>2]|0;
        $159 = $152;
        $160 = $159;
        HEAP32[$160>>2] = $161;
        $162 = (($159) + 4)|0;
        $163 = $162;
        HEAP32[$163>>2] = $164;
        $165 = $bucket2$sroa$0$sroa$6$0$i$i$i;
        $166 = $165;
        $167 = $166;
        $168 = HEAP32[$167>>2]|0;
        $169 = (($166) + 4)|0;
        $170 = $169;
        $171 = HEAP32[$170>>2]|0;
        $172 = $165;
        $173 = $172;
        HEAP32[$173>>2] = $key$0$i$i$i;
        $174 = (($172) + 4)|0;
        $175 = $174;
        HEAP32[$175>>2] = $val$sroa$0$0$i$i$i;
        $$idx$val$i$i$i$i92$i = HEAP32[$151>>2]|0;
        $176 = (($$idx$val$i$i$i$i92$i) + -1)|0;
        $177 = (1 - ($$idx$val$i$i$i$i92$i))|0;
        $bucket2$sroa$0$sroa$0$1$i$i$i = $bucket2$sroa$0$sroa$0$0$i$i$i;$bucket2$sroa$0$sroa$6$1$i$i$i = $bucket2$sroa$0$sroa$6$0$i$i$i;$bucket2$sroa$9$1$i$i$i = $bucket2$sroa$9$0$i$i$i;
        while(1) {
         $178 = (($bucket2$sroa$9$1$i$i$i) + 1)|0;
         $179 = $178 & $176;
         $180 = ($179|0)==(0);
         $dist$0$i$i$i$i$i = $180 ? $177 : 1;
         $181 = $bucket2$sroa$0$sroa$0$1$i$i$i;
         $182 = $bucket2$sroa$0$sroa$6$1$i$i$i;
         $183 = (($181) + ($dist$0$i$i$i$i$i<<3)|0);
         $184 = (($182) + ($dist$0$i$i$i$i$i<<3)|0);
         $185 = $184;
         $186 = $183;
         $187 = $186;
         $188 = HEAP32[$187>>2]|0;
         $189 = (($186) + 4)|0;
         $190 = $189;
         $191 = HEAP32[$190>>2]|0;
         $192 = ($188|0)==(0);
         $193 = ($191|0)==(0);
         $194 = $192 & $193;
         $195 = $183;
         if ($194) {
          break L20;
         }
         $196 = (($178) - ($188))|0;
         $197 = $196 & $176;
         $198 = (($178) - ($197))|0;
         $199 = ($ib$0$i$i$i>>>0)<($198>>>0);
         if ($199) {
          $161 = $155;$164 = $158;$bucket2$sroa$0$sroa$0$0$i$i$i = $195;$bucket2$sroa$0$sroa$6$0$i$i$i = $185;$bucket2$sroa$9$0$i$i$i = $178;$ib$0$i$i$i = $198;$key$0$i$i$i = $168;$val$sroa$0$0$i$i$i = $171;
          continue L20;
         } else {
          $bucket2$sroa$0$sroa$0$1$i$i$i = $195;$bucket2$sroa$0$sroa$6$1$i$i$i = $185;$bucket2$sroa$9$1$i$i$i = $178;
         }
        }
       }
       $200 = $183;
       $201 = $200;
       HEAP32[$201>>2] = $155;
       $202 = (($200) + 4)|0;
       $203 = $202;
       HEAP32[$203>>2] = $158;
       HEAP32[$184>>2] = $168;
       $204 = (((($182) + ($dist$0$i$i$i$i$i<<3)|0)) + 4|0);
       HEAP32[$204>>2] = $171;
       $205 = ((($151)) + 4|0);
       $206 = HEAP32[$205>>2]|0;
       $207 = (($206) + 1)|0;
       HEAP32[$205>>2] = $207;
      } else {
       $208 = $138;
       $209 = $208;
       $210 = $209;
       HEAP32[$210>>2] = $132;
       $211 = (($209) + 4)|0;
       $212 = $211;
       HEAP32[$212>>2] = $135;
       $213 = $141;
       HEAP32[$213>>2] = $entry1$sroa$4$0$copyload$i;
       $214 = ((($213)) + 4|0);
       HEAP32[$214>>2] = $fast_key3$sroa$0$0$i;
       $215 = $entry1$sroa$8$0$copyload$i;
       $216 = ((($215)) + 4|0);
       $217 = HEAP32[$216>>2]|0;
       $218 = (($217) + 1)|0;
       HEAP32[$216>>2] = $218;
      }
      dest=$_51$i; src=$value$i; stop=dest+64|0; do { HEAP32[dest>>2]=HEAP32[src>>2]|0; dest=dest+4|0; src=src+4|0; } while ((dest|0) < (stop|0));
      __THREW__ = 0;
      invoke_viiii(277,($old_value4$i|0),($0|0),($fast_key3$sroa$0$0$i|0),($_51$i|0));
      $219 = __THREW__; __THREW__ = 0;
      $220 = $219&1;
      if ($220) {
       label = 72;
       break;
      }
      $old_value4$idx$val$i = HEAP32[$old_value4$idx$i>>2]|0;
      $221 = ($old_value4$idx$val$i|0)==(0|0);
      if (!($221)) {
       label = 39;
       break;
      }
      HEAP32[$_27>>2] = $fast_key3$sroa$0$0$i;
      HEAP32[$15>>2] = 0;
      $$fca$0$load42438 = $fast_key3$sroa$0$0$i;
     } else {
      $entry$sroa$4$0$copyload$i = HEAP32[$entry$sroa$4$0$$sroa_idx254$i>>2]|0;
      $entry$sroa$5$0$copyload$i = HEAP32[$entry1$sroa$4$0$$sroa_idx215$i>>2]|0;
      $entry$sroa$6$0$copyload$i = HEAP32[$entry$sroa$6$0$$sroa_cast$i>>2]|0;
      $entry$sroa$7$0$copyload$i = HEAP32[$entry1$sroa$6$0$$sroa_idx218$i>>2]|0;
      $59 = ((($entry$sroa$7$0$copyload$i)) + 4|0);
      $60 = HEAP32[$59>>2]|0;
      $61 = (($60) + -1)|0;
      HEAP32[$59>>2] = $61;
      $62 = $entry$sroa$4$0$copyload$i;
      $63 = $62;
      HEAP32[$63>>2] = 0;
      $64 = (($62) + 4)|0;
      $65 = $64;
      HEAP32[$65>>2] = 0;
      $66 = $entry$sroa$5$0$copyload$i;
      $67 = $66;
      $68 = HEAP32[$67>>2]|0;
      $69 = (($66) + 4)|0;
      $70 = $69;
      $71 = HEAP32[$70>>2]|0;
      $72 = (($entry$sroa$6$0$copyload$i) + 1)|0;
      $$idx$val$i$i$i44$i$i$i = HEAP32[$entry$sroa$7$0$copyload$i>>2]|0;
      $73 = (($$idx$val$i$i$i44$i$i$i) + -1)|0;
      $74 = $73 & $72;
      $75 = ($74|0)==(0);
      $76 = (1 - ($$idx$val$i$i$i44$i$i$i))|0;
      $dist$0$i$i$i45$i$i$i = $75 ? $76 : 1;
      $77 = (($entry$sroa$4$0$copyload$i) + ($dist$0$i$i$i45$i$i$i<<3)|0);
      $78 = $77;
      $79 = $78;
      $80 = HEAP32[$79>>2]|0;
      $81 = (($78) + 4)|0;
      $82 = $81;
      $83 = HEAP32[$82>>2]|0;
      $84 = ($80|0)==(0);
      $85 = ($83|0)==(0);
      $86 = $84 & $85;
      $switchtmp276$i$i$i = ($entry$sroa$7$0$copyload$i|0)==(0|0);
      $switchtmp$i$i$i = $switchtmp276$i$i$i | $86;
      L31: do {
       if (!($switchtmp$i$i$i)) {
        $87 = (($72) - ($80))|0;
        $88 = $87 & $73;
        $89 = ($88|0)==(0);
        if (!($89)) {
         $90 = (($entry$sroa$5$0$copyload$i) + ($dist$0$i$i$i45$i$i$i<<3)|0);
         $100 = $83;$97 = $80;$gap$sroa$0$0$in$i34$i$i = $entry$sroa$4$0$copyload$i;$gap$sroa$12$0$in$i36$i$i = $77;$gap$sroa$16$0$in$i37$i$i = $90;$gap$sroa$19$0$i38$i$i = $72;$gap$sroa$6$0$in$i35$i$i = $entry$sroa$5$0$copyload$i;
         while(1) {
          $91 = $gap$sroa$12$0$in$i36$i$i;
          $92 = $91;
          HEAP32[$92>>2] = 0;
          $93 = (($91) + 4)|0;
          $94 = $93;
          HEAP32[$94>>2] = 0;
          $95 = $gap$sroa$0$0$in$i34$i$i;
          $96 = $95;
          HEAP32[$96>>2] = $97;
          $98 = (($95) + 4)|0;
          $99 = $98;
          HEAP32[$99>>2] = $100;
          $101 = $gap$sroa$16$0$in$i37$i$i;
          $102 = $101;
          $103 = HEAP32[$102>>2]|0;
          $104 = (($101) + 4)|0;
          $105 = $104;
          $106 = HEAP32[$105>>2]|0;
          $107 = $gap$sroa$6$0$in$i35$i$i;
          $108 = $107;
          HEAP32[$108>>2] = $103;
          $109 = (($107) + 4)|0;
          $110 = $109;
          HEAP32[$110>>2] = $106;
          $111 = (($gap$sroa$19$0$i38$i$i) + 1)|0;
          $$idx$val$i$i$i$i$i$i = HEAP32[$entry$sroa$7$0$copyload$i>>2]|0;
          $112 = (($$idx$val$i$i$i$i$i$i) + -1)|0;
          $113 = $112 & $111;
          $114 = ($113|0)==(0);
          $115 = (1 - ($$idx$val$i$i$i$i$i$i))|0;
          $dist$0$i$i$i$i$i$i = $114 ? $115 : 1;
          $116 = (($gap$sroa$12$0$in$i36$i$i) + ($dist$0$i$i$i$i$i$i<<3)|0);
          $117 = $116;
          $118 = $117;
          $119 = HEAP32[$118>>2]|0;
          $120 = (($117) + 4)|0;
          $121 = $120;
          $122 = HEAP32[$121>>2]|0;
          $123 = ($119|0)==(0);
          $124 = ($122|0)==(0);
          $125 = $123 & $124;
          if ($125) {
           break L31;
          }
          $126 = (($gap$sroa$16$0$in$i37$i$i) + ($dist$0$i$i$i$i$i$i<<3)|0);
          $127 = (($111) - ($119))|0;
          $128 = $127 & $112;
          $129 = ($128|0)==(0);
          if ($129) {
           break;
          } else {
           $gap$sroa$6$0$in$i35$i$i$phi = $gap$sroa$16$0$in$i37$i$i;$gap$sroa$0$0$in$i34$i$i$phi = $gap$sroa$12$0$in$i36$i$i;$100 = $122;$97 = $119;$gap$sroa$12$0$in$i36$i$i = $116;$gap$sroa$16$0$in$i37$i$i = $126;$gap$sroa$19$0$i38$i$i = $111;$gap$sroa$6$0$in$i35$i$i = $gap$sroa$6$0$in$i35$i$i$phi;$gap$sroa$0$0$in$i34$i$i = $gap$sroa$0$0$in$i34$i$i$phi;
          }
         }
        }
       }
      } while(0);
      dest=$_28$i; src=$value$i; stop=dest+64|0; do { HEAP32[dest>>2]=HEAP32[src>>2]|0; dest=dest+4|0; src=src+4|0; } while ((dest|0) < (stop|0));
      __THREW__ = 0;
      invoke_viiii(277,($old_value$i|0),($0|0),($71|0),($_28$i|0));
      $145 = __THREW__; __THREW__ = 0;
      $146 = $145&1;
      if ($146) {
       label = 73;
       break;
      }
      $old_value$idx$val$i = HEAP32[$old_value$idx$i>>2]|0;
      $not$switchtmp$i$i = ($old_value$idx$val$i|0)==(0|0);
      if ($not$switchtmp$i$i) {
       label = 27;
       break;
      }
      HEAP32[$_27>>2] = $71;
      dest=$14; src=$old_value$i; stop=dest+64|0; do { HEAP32[dest>>2]=HEAP32[src>>2]|0; dest=dest+4|0; src=src+4|0; } while ((dest|0) < (stop|0));
      $$fca$0$load42438 = $71;
     }
     $$fca$0$load42 = $$fca$0$load42438;
    }
    $316 = HEAP32[$15>>2]|0;
    $switchtmp$i$i = ($316|0)==(0|0);
    L42: do {
     if (!($switchtmp$i$i)) {
      $317 = HEAP32[$316>>2]|0;HEAP32[$316>>2] = (($317-1)|0);
      $318 = ($317|0)==(1);
      if ($318) {
       /* fence */;
       __THREW__ = 0;
       invoke_vi(241,($18|0));
       $319 = __THREW__; __THREW__ = 0;
       $320 = $319&1;
       if ($320) {
        label = 6;
        break L3;
       }
      }
      $321 = HEAP32[$19>>2]|0;
      switch ($321|0) {
      case 0:  {
       break;
      }
      case 1:  {
       $344 = HEAP32[$20>>2]|0;
       $345 = HEAP32[$344>>2]|0;
       $346 = (($345) + -1)|0;
       HEAP32[$344>>2] = $346;
       $347 = ($346|0)==(0);
       if (!($347)) {
        break L42;
       }
       $348 = ((($344)) + 12|0);
       __THREW__ = 0;
       invoke_vi(247,($348|0));
       $349 = __THREW__; __THREW__ = 0;
       $350 = $349&1;
       if ($350) {
        label = 6;
        break L3;
       }
       $351 = ((($344)) + 4|0);
       $352 = HEAP32[$351>>2]|0;
       $353 = (($352) + -1)|0;
       HEAP32[$351>>2] = $353;
       $354 = ($353|0)==(0);
       if (!($354)) {
        break L42;
       }
       _free($344);
       break L42;
       break;
      }
      default: {
       break L42;
      }
      }
      $322 = HEAP32[$20>>2]|0;
      $323 = HEAP32[$322>>2]|0;
      $324 = (($323) + -1)|0;
      HEAP32[$322>>2] = $324;
      $325 = ($324|0)==(0);
      if ($325) {
       $326 = ((($322)) + 16|0);
       $327 = HEAP32[$326>>2]|0;
       $328 = HEAP32[$327>>2]|0;HEAP32[$327>>2] = (($328-1)|0);
       $329 = ($328|0)==(1);
       if ($329) {
        /* fence */;
        __THREW__ = 0;
        invoke_vi(241,($326|0));
        $330 = __THREW__; __THREW__ = 0;
        $331 = $330&1;
        if ($331) {
         label = 6;
         break L3;
        }
       }
       $332 = ((($322)) + 172|0);
       $333 = HEAP32[$332>>2]|0;
       $switchtmp$i$i$i$i$i$i121 = ($333|0)==(0|0);
       if (!($switchtmp$i$i$i$i$i$i121)) {
        $$idx1$i$i$i$i$i$i$i123 = ((($322)) + 176|0);
        $$idx1$val$i$i$i$i$i$i$i124 = HEAP32[$$idx1$i$i$i$i$i$i$i123>>2]|0;
        $$idx1$val$val$i$i$i$i$i$i$i125 = HEAP32[$$idx1$val$i$i$i$i$i$i$i124>>2]|0;
        __THREW__ = 0;
        invoke_vi($$idx1$val$val$i$i$i$i$i$i$i125|0,($333|0));
        $334 = __THREW__; __THREW__ = 0;
        $335 = $334&1;
        if ($335) {
         label = 6;
         break L3;
        }
        $336 = HEAP32[$$idx1$i$i$i$i$i$i$i123>>2]|0;
        $337 = ((($336)) + 4|0);
        $338 = HEAP32[$337>>2]|0;
        $339 = ($338|0)==(0);
        if (!($339)) {
         _free($333);
        }
       }
       $$idx3$val$i$i128 = HEAP32[$20>>2]|0;
       $340 = ((($$idx3$val$i$i128)) + 4|0);
       $341 = HEAP32[$340>>2]|0;
       $342 = (($341) + -1)|0;
       HEAP32[$340>>2] = $342;
       $343 = ($342|0)==(0);
       if ($343) {
        _free($322);
       }
      }
     }
    } while(0);
    $355 = HEAP32[$16>>2]|0;
    $356 = HEAP32[$17>>2]|0;
    ;HEAP32[$_34>>2]=HEAP32[$aabb>>2]|0;HEAP32[$_34+4>>2]=HEAP32[$aabb+4>>2]|0;HEAP32[$_34+8>>2]=HEAP32[$aabb+8>>2]|0;HEAP32[$_34+12>>2]=HEAP32[$aabb+12>>2]|0;
    $357 = ((($356)) + 12|0);
    $358 = HEAP32[$357>>2]|0;
    __THREW__ = 0;
    invoke_viiii($358|0,($355|0),($$fca$0$load42|0),($_34|0),($$fca$0$load42|0));
    $359 = __THREW__; __THREW__ = 0;
    $360 = $359&1;
    if ($360) {
     label = 191;
     break;
    }
    $$pre = HEAP32[$6>>2]|0;
    $$pre435 = HEAP32[$_5$sroa$6$0$$sroa_idx297>>2]|0;
    $361 = ($$pre|0)==($$pre435|0);
    if ($361) {
     break L1;
    } else {
     $28 = $$pre;
    }
   }
   L65:    switch (label|0) {
    case 6: {
     $29 = ___cxa_find_matching_catch_2()|0;
     $30 = tempRet0;
     $lpad$phi329$index = $29;$lpad$phi329$index2 = $30;
     label = 8;
     break;
    }
    case 11: {
     __THREW__ = 0;
     invoke_viii(225,(11057|0),38,(5400|0));
     $39 = __THREW__; __THREW__ = 0;
     $40 = ___cxa_find_matching_catch_2()|0;
     $41 = tempRet0;
     $lpad$phi326$index = $40;$lpad$phi326$index7 = $41;
     label = 174;
     break;
    }
    case 13: {
     $52 = ___cxa_find_matching_catch_2()|0;
     $53 = tempRet0;
     $$fca$0$extract17310 = $52;$$fca$1$extract19311 = $53;
     break;
    }
    case 27: {
     __THREW__ = 0;
     invoke_viii(225,(11537|0),37,(5636|0));
     $147 = __THREW__; __THREW__ = 0;
     $148 = ___cxa_find_matching_catch_2()|0;
     $149 = tempRet0;
     $$fca$0$extract17310 = $148;$$fca$1$extract19311 = $149;
     break;
    }
    case 39: {
     __THREW__ = 0;
     invoke_viii(225,(11500|0),37,(5648|0));
     $222 = __THREW__; __THREW__ = 0;
     $223 = ___cxa_find_matching_catch_2()|0;
     $224 = tempRet0;
     $225 = HEAP32[$old_value4$idx$val$i>>2]|0;HEAP32[$old_value4$idx$val$i>>2] = (($225-1)|0);
     $226 = ($225|0)==(1);
     if ($226) {
      $272 = ((($old_value4$i)) + 28|0);
      /* fence */;
      __THREW__ = 0;
      invoke_vi(241,($272|0));
      $273 = __THREW__; __THREW__ = 0;
      $274 = $273&1;
      if ($274) {
       label = 7;
       break;
      }
     }
     $275 = ((($old_value4$i)) + 52|0);
     $276 = HEAP32[$275>>2]|0;
     switch ($276|0) {
     case 0:  {
      break;
     }
     case 1:  {
      $300 = ((($old_value4$i)) + 56|0);
      $301 = HEAP32[$300>>2]|0;
      $302 = HEAP32[$301>>2]|0;
      $303 = (($302) + -1)|0;
      HEAP32[$301>>2] = $303;
      $304 = ($303|0)==(0);
      if (!($304)) {
       $$fca$0$extract17310 = $223;$$fca$1$extract19311 = $224;
       break L65;
      }
      $305 = ((($301)) + 12|0);
      __THREW__ = 0;
      invoke_vi(247,($305|0));
      $306 = __THREW__; __THREW__ = 0;
      $307 = $306&1;
      if ($307) {
       label = 7;
       break L65;
      }
      $308 = ((($301)) + 4|0);
      $309 = HEAP32[$308>>2]|0;
      $310 = (($309) + -1)|0;
      HEAP32[$308>>2] = $310;
      $311 = ($310|0)==(0);
      if (!($311)) {
       $$fca$0$extract17310 = $223;$$fca$1$extract19311 = $224;
       break L65;
      }
      _free($301);
      $$fca$0$extract17310 = $223;$$fca$1$extract19311 = $224;
      break L65;
      break;
     }
     default: {
      $$fca$0$extract17310 = $223;$$fca$1$extract19311 = $224;
      break L65;
     }
     }
     $277 = ((($old_value4$i)) + 56|0);
     $278 = HEAP32[$277>>2]|0;
     $279 = HEAP32[$278>>2]|0;
     $280 = (($279) + -1)|0;
     HEAP32[$278>>2] = $280;
     $281 = ($280|0)==(0);
     if ($281) {
      $282 = ((($278)) + 16|0);
      $283 = HEAP32[$282>>2]|0;
      $284 = HEAP32[$283>>2]|0;HEAP32[$283>>2] = (($284-1)|0);
      $285 = ($284|0)==(1);
      if ($285) {
       /* fence */;
       __THREW__ = 0;
       invoke_vi(241,($282|0));
       $286 = __THREW__; __THREW__ = 0;
       $287 = $286&1;
       if ($287) {
        label = 7;
        break;
       }
      }
      $288 = ((($278)) + 172|0);
      $289 = HEAP32[$288>>2]|0;
      $switchtmp$i$i$i$i$i$i$i = ($289|0)==(0|0);
      if (!($switchtmp$i$i$i$i$i$i$i)) {
       $$idx1$i$i$i$i$i$i$i$i = ((($278)) + 176|0);
       $$idx1$val$i$i$i$i$i$i$i$i = HEAP32[$$idx1$i$i$i$i$i$i$i$i>>2]|0;
       $$idx1$val$val$i$i$i$i$i$i$i$i = HEAP32[$$idx1$val$i$i$i$i$i$i$i$i>>2]|0;
       __THREW__ = 0;
       invoke_vi($$idx1$val$val$i$i$i$i$i$i$i$i|0,($289|0));
       $290 = __THREW__; __THREW__ = 0;
       $291 = $290&1;
       if ($291) {
        label = 7;
        break;
       }
       $292 = HEAP32[$$idx1$i$i$i$i$i$i$i$i>>2]|0;
       $293 = ((($292)) + 4|0);
       $294 = HEAP32[$293>>2]|0;
       $295 = ($294|0)==(0);
       if (!($295)) {
        _free($289);
       }
      }
      $$idx3$val$i$i$i = HEAP32[$277>>2]|0;
      $296 = ((($$idx3$val$i$i$i)) + 4|0);
      $297 = HEAP32[$296>>2]|0;
      $298 = (($297) + -1)|0;
      HEAP32[$296>>2] = $298;
      $299 = ($298|0)==(0);
      if ($299) {
       _free($278);
       $$fca$0$extract17310 = $223;$$fca$1$extract19311 = $224;
      } else {
       $$fca$0$extract17310 = $223;$$fca$1$extract19311 = $224;
      }
     } else {
      $$fca$0$extract17310 = $223;$$fca$1$extract19311 = $224;
     }
     break;
    }
    case 41: {
     $227 = ___cxa_find_matching_catch_2()|0;
     $228 = tempRet0;
     $229 = ((($value$i)) + 28|0);
     $230 = HEAP32[$229>>2]|0;
     $231 = HEAP32[$230>>2]|0;HEAP32[$230>>2] = (($231-1)|0);
     $232 = ($231|0)==(1);
     if ($232) {
      /* fence */;
      __THREW__ = 0;
      invoke_vi(241,($229|0));
      $233 = __THREW__; __THREW__ = 0;
      $234 = $233&1;
      if ($234) {
       label = 7;
       break;
      }
     }
     $235 = ((($value$i)) + 52|0);
     $236 = HEAP32[$235>>2]|0;
     switch ($236|0) {
     case 0:  {
      break;
     }
     case 1:  {
      $260 = ((($value$i)) + 56|0);
      $261 = HEAP32[$260>>2]|0;
      $262 = HEAP32[$261>>2]|0;
      $263 = (($262) + -1)|0;
      HEAP32[$261>>2] = $263;
      $264 = ($263|0)==(0);
      if (!($264)) {
       $$fca$0$extract17310 = $227;$$fca$1$extract19311 = $228;
       break L65;
      }
      $265 = ((($261)) + 12|0);
      __THREW__ = 0;
      invoke_vi(247,($265|0));
      $266 = __THREW__; __THREW__ = 0;
      $267 = $266&1;
      if ($267) {
       label = 7;
       break L65;
      }
      $268 = ((($261)) + 4|0);
      $269 = HEAP32[$268>>2]|0;
      $270 = (($269) + -1)|0;
      HEAP32[$268>>2] = $270;
      $271 = ($270|0)==(0);
      if (!($271)) {
       $$fca$0$extract17310 = $227;$$fca$1$extract19311 = $228;
       break L65;
      }
      _free($261);
      $$fca$0$extract17310 = $227;$$fca$1$extract19311 = $228;
      break L65;
      break;
     }
     default: {
      $$fca$0$extract17310 = $227;$$fca$1$extract19311 = $228;
      break L65;
     }
     }
     $237 = ((($value$i)) + 56|0);
     $238 = HEAP32[$237>>2]|0;
     $239 = HEAP32[$238>>2]|0;
     $240 = (($239) + -1)|0;
     HEAP32[$238>>2] = $240;
     $241 = ($240|0)==(0);
     if ($241) {
      $242 = ((($238)) + 16|0);
      $243 = HEAP32[$242>>2]|0;
      $244 = HEAP32[$243>>2]|0;HEAP32[$243>>2] = (($244-1)|0);
      $245 = ($244|0)==(1);
      if ($245) {
       /* fence */;
       __THREW__ = 0;
       invoke_vi(241,($242|0));
       $246 = __THREW__; __THREW__ = 0;
       $247 = $246&1;
       if ($247) {
        label = 7;
        break;
       }
      }
      $248 = ((($238)) + 172|0);
      $249 = HEAP32[$248>>2]|0;
      $switchtmp$i$i$i$i$i$i153$i = ($249|0)==(0|0);
      if (!($switchtmp$i$i$i$i$i$i153$i)) {
       $$idx1$i$i$i$i$i$i$i155$i = ((($238)) + 176|0);
       $$idx1$val$i$i$i$i$i$i$i156$i = HEAP32[$$idx1$i$i$i$i$i$i$i155$i>>2]|0;
       $$idx1$val$val$i$i$i$i$i$i$i157$i = HEAP32[$$idx1$val$i$i$i$i$i$i$i156$i>>2]|0;
       __THREW__ = 0;
       invoke_vi($$idx1$val$val$i$i$i$i$i$i$i157$i|0,($249|0));
       $250 = __THREW__; __THREW__ = 0;
       $251 = $250&1;
       if ($251) {
        label = 7;
        break;
       }
       $252 = HEAP32[$$idx1$i$i$i$i$i$i$i155$i>>2]|0;
       $253 = ((($252)) + 4|0);
       $254 = HEAP32[$253>>2]|0;
       $255 = ($254|0)==(0);
       if (!($255)) {
        _free($249);
       }
      }
      $$idx3$val$i$i160$i = HEAP32[$237>>2]|0;
      $256 = ((($$idx3$val$i$i160$i)) + 4|0);
      $257 = HEAP32[$256>>2]|0;
      $258 = (($257) + -1)|0;
      HEAP32[$256>>2] = $258;
      $259 = ($258|0)==(0);
      if ($259) {
       _free($238);
       $$fca$0$extract17310 = $227;$$fca$1$extract19311 = $228;
      } else {
       $$fca$0$extract17310 = $227;$$fca$1$extract19311 = $228;
      }
     } else {
      $$fca$0$extract17310 = $227;$$fca$1$extract19311 = $228;
     }
     break;
    }
    case 72: {
     $312 = ___cxa_find_matching_catch_2()|0;
     $313 = tempRet0;
     $$fca$0$extract17310 = $312;$$fca$1$extract19311 = $313;
     break;
    }
    case 73: {
     $314 = ___cxa_find_matching_catch_2()|0;
     $315 = tempRet0;
     $$fca$0$extract17310 = $314;$$fca$1$extract19311 = $315;
     break;
    }
    case 173: {
     $584 = ___cxa_find_matching_catch_2()|0;
     $585 = tempRet0;
     $lpad$phi326$index = $584;$lpad$phi326$index7 = $585;
     label = 174;
     break;
    }
    case 191: {
     $630 = ___cxa_find_matching_catch_2()|0;
     $631 = tempRet0;
     $$fca$0$extract17310 = $630;$$fca$1$extract19311 = $631;
     break;
    }
   }
   L114: do {
    if ((label|0) == 7) {
     $31 = ___cxa_find_matching_catch_2()|0;
     $32 = tempRet0;
     $lpad$phi329$index = $31;$lpad$phi329$index2 = $32;
     label = 8;
    }
    else if ((label|0) == 174) {
     $586 = HEAP32[$7>>2]|0;
     $587 = HEAP32[$586>>2]|0;HEAP32[$586>>2] = (($587-1)|0);
     $588 = ($587|0)==(1);
     if ($588) {
      /* fence */;
      __ZN33__LT_alloc__arc__Arc_LT_T_GT__GT_9drop_slow17hb3767c2311d7d383E($7);
     }
     $589 = ((($co)) + 52|0);
     $590 = HEAP32[$589>>2]|0;
     switch ($590|0) {
     case 0:  {
      break;
     }
     case 1:  {
      $613 = ((($co)) + 56|0);
      $614 = HEAP32[$613>>2]|0;
      $615 = HEAP32[$614>>2]|0;
      $616 = (($615) + -1)|0;
      HEAP32[$614>>2] = $616;
      $$idx$val$i$i$i$i204 = HEAP32[$613>>2]|0;
      $617 = HEAP32[$$idx$val$i$i$i$i204>>2]|0;
      $618 = ($617|0)==(0);
      if (!($618)) {
       $$fca$0$extract17310 = $lpad$phi326$index;$$fca$1$extract19311 = $lpad$phi326$index7;
       break L114;
      }
      $619 = ((($614)) + 12|0);
      __ZN4drop17hd4af0298b60386b8E($619);
      $$idx3$val$i$i$i$i206 = HEAP32[$613>>2]|0;
      $620 = ((($$idx3$val$i$i$i$i206)) + 4|0);
      $621 = HEAP32[$620>>2]|0;
      $622 = (($621) + -1)|0;
      HEAP32[$620>>2] = $622;
      $$idx2$val$i$i$i$i207 = HEAP32[$613>>2]|0;
      $623 = ((($$idx2$val$i$i$i$i207)) + 4|0);
      $624 = HEAP32[$623>>2]|0;
      $625 = ($624|0)==(0);
      if (!($625)) {
       $$fca$0$extract17310 = $lpad$phi326$index;$$fca$1$extract19311 = $lpad$phi326$index7;
       break L114;
      }
      _free($614);
      $$fca$0$extract17310 = $lpad$phi326$index;$$fca$1$extract19311 = $lpad$phi326$index7;
      break L114;
      break;
     }
     default: {
      $$fca$0$extract17310 = $lpad$phi326$index;$$fca$1$extract19311 = $lpad$phi326$index7;
      break L114;
     }
     }
     $591 = ((($co)) + 56|0);
     $592 = HEAP32[$591>>2]|0;
     $593 = HEAP32[$592>>2]|0;
     $594 = (($593) + -1)|0;
     HEAP32[$592>>2] = $594;
     $$idx$val$i$i243 = HEAP32[$591>>2]|0;
     $595 = HEAP32[$$idx$val$i$i243>>2]|0;
     $596 = ($595|0)==(0);
     if ($596) {
      $597 = ((($592)) + 16|0);
      $598 = HEAP32[$597>>2]|0;
      $599 = HEAP32[$598>>2]|0;HEAP32[$598>>2] = (($599-1)|0);
      $600 = ($599|0)==(1);
      if ($600) {
       /* fence */;
       __ZN33__LT_alloc__arc__Arc_LT_T_GT__GT_9drop_slow17hb3767c2311d7d383E($597);
      }
      $601 = ((($592)) + 172|0);
      $602 = HEAP32[$601>>2]|0;
      $switchtmp$i$i$i$i$i$i246 = ($602|0)==(0|0);
      if (!($switchtmp$i$i$i$i$i$i246)) {
       $$idx1$i$i$i$i$i$i$i248 = ((($592)) + 176|0);
       $$idx1$val$i$i$i$i$i$i$i249 = HEAP32[$$idx1$i$i$i$i$i$i$i248>>2]|0;
       $$idx1$val$val$i$i$i$i$i$i$i250 = HEAP32[$$idx1$val$i$i$i$i$i$i$i249>>2]|0;
       FUNCTION_TABLE_vi[$$idx1$val$val$i$i$i$i$i$i$i250 & 511]($602);
       $603 = HEAP32[$$idx1$i$i$i$i$i$i$i248>>2]|0;
       $604 = ((($603)) + 4|0);
       $605 = HEAP32[$604>>2]|0;
       $606 = ($605|0)==(0);
       if (!($606)) {
        _free($602);
       }
      }
      $$idx3$val$i$i253 = HEAP32[$591>>2]|0;
      $607 = ((($$idx3$val$i$i253)) + 4|0);
      $608 = HEAP32[$607>>2]|0;
      $609 = (($608) + -1)|0;
      HEAP32[$607>>2] = $609;
      $$idx2$val$i$i254 = HEAP32[$591>>2]|0;
      $610 = ((($$idx2$val$i$i254)) + 4|0);
      $611 = HEAP32[$610>>2]|0;
      $612 = ($611|0)==(0);
      if ($612) {
       _free($592);
       $$fca$0$extract17310 = $lpad$phi326$index;$$fca$1$extract19311 = $lpad$phi326$index7;
      } else {
       $$fca$0$extract17310 = $lpad$phi326$index;$$fca$1$extract19311 = $lpad$phi326$index7;
      }
     } else {
      $$fca$0$extract17310 = $lpad$phi326$index;$$fca$1$extract19311 = $lpad$phi326$index7;
     }
    }
   } while(0);
   if ((label|0) == 8) {
    $$fca$0$extract17310 = $lpad$phi329$index;$$fca$1$extract19311 = $lpad$phi329$index2;
   }
   __ZN4drop17h24a762a076737f65E($iter);
   $personalityslot$sroa$0$0 = $$fca$0$extract17310;$personalityslot$sroa$7$0 = $$fca$1$extract19311;
   ___resumeException($personalityslot$sroa$0$0|0);
   // unreachable;
  }
 } while(0);
 __THREW__ = 0;
 invoke_vi(278,($iter|0));
 $362 = __THREW__; __THREW__ = 0;
 $363 = $362&1;
 do {
  if ($363) {
   $628 = ___cxa_find_matching_catch_2()|0;
   $629 = tempRet0;
   $lpad$phi$index = $628;$lpad$phi$index12 = $629;
  } else {
   $364 = HEAP32[$$idx$i>>2]|0;
   $365 = ((($0)) + 144|0);
   $366 = HEAP32[$365>>2]|0;
   $367 = ($366>>>0)<($364>>>0);
   if ($367) {
    __ZN4core9panicking5panic17ha7507e8e32961bfeE(6412);
    // unreachable;
   }
   $368 = ($364|0)==(0);
   do {
    if ($368) {
     $369 = $1;
     $370 = $369;
     $371 = HEAP32[$370>>2]|0;
     $372 = (($369) + 4)|0;
     $373 = $372;
     $374 = HEAP32[$373>>2]|0;
     $375 = $1;
     $376 = $375;
     HEAP32[$376>>2] = 1;
     $377 = (($375) + 4)|0;
     $378 = $377;
     HEAP32[$378>>2] = 0;
     $379 = ($374>>>0)<(1);
     $380 = ($371>>>0)<(0);
     $381 = ($374|0)==(1);
     $382 = $381 & $380;
     $383 = $379 | $382;
     if (!($383)) {
      $384 = $371;
      _free($384);
     }
    } else {
     $385 = ($366|0)==($364|0);
     if (!($385)) {
      $386 = HEAP32[$1>>2]|0;
      $387 = $364 << 6;
      $388 = (_realloc($386,$387)|0);
      $389 = ($388|0)==(0|0);
      if ($389) {
       __ZN5alloc3oom3oom17hb253cf665793f59eE();
       // unreachable;
      } else {
       HEAP32[$1>>2] = $388;
       HEAP32[$365>>2] = $364;
       break;
      }
     }
    }
   } while(0);
   $390 = ((($0)) + 128|0);
   $391 = HEAP32[$390>>2]|0;
   $392 = ((($0)) + 136|0);
   $393 = HEAP32[$392>>2]|0;
   $394 = (($391) + ($393<<2)|0);
   $395 = ($393|0)==(0);
   L154: do {
    if (!($395)) {
     $396 = $391;
     $$idx$i$i$i$i = ((($0)) + 32|0);
     $$idx531 = ((($0)) + 24|0);
     $402 = $391;$iter2$sroa$0$0$ph411 = $396;
     while(1) {
      $397 = HEAP32[$13>>2]|0;
      $switchtmp$i138 = ($397|0)==(0|0);
      $$idx$val$i$i$i$i140 = HEAP32[$$idx$i$i$i$i>>2]|0;
      $398 = (($$idx$val$i$i$i$i140) + -1)|0;
      $399 = (($397) + ($$idx$val$i$i$i$i140<<3)|0);
      $400 = (1 - ($$idx$val$i$i$i$i140))|0;
      if ($switchtmp$i138) {
       $401 = ((($402)) + 4|0);
       $403 = $401;
       $404 = $iter2$sroa$0$0$ph411;
       $485 = $403;$_52$sroa$5$2$in = $404;
      } else {
       $405 = ($$idx$val$i$i$i$i140|0)==(0);
       if ($405) {
        break L154;
       }
       $406 = $21;
       $407 = $406;
       $408 = HEAP32[$407>>2]|0;
       $409 = (($406) + 4)|0;
       $410 = $409;
       $411 = HEAP32[$410>>2]|0;
       $412 = $$idx531;
       $413 = $412;
       $414 = HEAP32[$413>>2]|0;
       $415 = (($412) + 4)|0;
       $416 = $415;
       $417 = HEAP32[$416>>2]|0;
       $419 = $402;$iter2$sroa$0$0391 = $iter2$sroa$0$0$ph411;
       L162: while(1) {
        $418 = ((($419)) + 4|0);
        $420 = $418;
        $421 = $iter2$sroa$0$0391;
        $422 = HEAP32[$421>>2]|0;
        $423 = (__ZN72__LT_std__collections__hash__map__HashMap_LT_K_C__u20_V_C__u20_S_GT__GT_9make_hash17he80a4aab712026bfE($408,$411,$414,$417,$422)|0);
        $424 = tempRet0;
        $425 = $398 & $423;
        $426 = (($397) + ($425<<3)|0);
        $427 = $426;
        $428 = $427;
        $429 = HEAP32[$428>>2]|0;
        $430 = (($427) + 4)|0;
        $431 = $430;
        $432 = HEAP32[$431>>2]|0;
        $433 = ($429|0)==(0);
        $434 = ($432|0)==(0);
        $435 = $433 & $434;
        L164: do {
         if (!($435)) {
          $456 = (($399) + ($425<<3)|0);
          $$in$i$i = $456;$$sink237250$i$i$i$i = $426;$458 = $429;$463 = $432;$probe$sroa$8$0252$i$i$i$i = $425;
          while(1) {
           $457 = (($probe$sroa$8$0252$i$i$i$i) - ($458))|0;
           $459 = $457 & $398;
           $460 = (($probe$sroa$8$0252$i$i$i$i) - ($459))|0;
           $461 = ($425|0)<($460|0);
           if ($461) {
            break L164;
           }
           $462 = ($458|0)==($423|0);
           $464 = ($463|0)==($424|0);
           $465 = $462 & $464;
           if ($465) {
            $$val$i$i$i$i = HEAP32[$$in$i$i>>2]|0;
            $466 = ($$val$i$i$i$i|0)==($422|0);
            if ($466) {
             break L162;
            }
           }
           $467 = (($probe$sroa$8$0252$i$i$i$i) + 1)|0;
           $468 = $467 & $398;
           $469 = ($468|0)==(0);
           $dist$0$i$i$i$i$i$i141 = $469 ? $400 : 1;
           $470 = (($$sink237250$i$i$i$i) + ($dist$0$i$i$i$i$i$i141<<3)|0);
           $471 = (($$in$i$i) + ($dist$0$i$i$i$i$i$i141<<3)|0);
           $472 = $470;
           $473 = $472;
           $474 = HEAP32[$473>>2]|0;
           $475 = (($472) + 4)|0;
           $476 = $475;
           $477 = HEAP32[$476>>2]|0;
           $478 = ($474|0)==(0);
           $479 = ($477|0)==(0);
           $480 = $478 & $479;
           if ($480) {
            break;
           } else {
            $$in$i$i = $471;$$sink237250$i$i$i$i = $470;$458 = $474;$463 = $477;$probe$sroa$8$0252$i$i$i$i = $467;
           }
          }
         }
        } while(0);
        $455 = ($418|0)==($394|0);
        if ($455) {
         break L154;
        } else {
         $419 = $418;$iter2$sroa$0$0391 = $420;
        }
       }
       $$idx$i$i$i = ((($$in$i$i)) + 4|0);
       $485 = $420;$_52$sroa$5$2$in = $$idx$i$i$i;
      }
      $_52$sroa$5$2 = HEAP32[$_52$sroa$5$2$in>>2]|0;
      $481 = HEAP32[$16>>2]|0;
      $482 = HEAP32[$17>>2]|0;
      $483 = ((($482)) + 16|0);
      $484 = HEAP32[$483>>2]|0;
      FUNCTION_TABLE_vii[$484 & 511]($481,$_52$sroa$5$2);
      $486 = $485;
      $487 = ($486|0)==($394|0);
      if ($487) {
       break;
      } else {
       $402 = $486;$iter2$sroa$0$0$ph411 = $485;
      }
     }
    }
   } while(0);
   $436 = ((($0)) + 72|0);
   HEAP32[$nf$i>>2] = $436;
   $437 = ((($0)) + 80|0);
   HEAP32[$sig$i>>2] = $437;
   $438 = ((($0)) + 92|0);
   HEAP32[$prox$i>>2] = $438;
   $439 = ((($0)) + 104|0);
   HEAP32[$filts$i>>2] = $439;
   HEAP32[$objs$i>>2] = $0;
   $440 = HEAP32[$16>>2]|0;
   $441 = HEAP32[$17>>2]|0;
   HEAP32[$_14$i>>2] = $filts$i;
   $442 = ((($_14$i)) + 4|0);
   HEAP32[$442>>2] = $objs$i;
   HEAP32[$_20$i>>2] = $nf$i;
   $443 = ((($_20$i)) + 4|0);
   HEAP32[$443>>2] = $sig$i;
   $444 = ((($_20$i)) + 8|0);
   HEAP32[$444>>2] = $prox$i;
   $445 = ((($_20$i)) + 12|0);
   HEAP32[$445>>2] = $objs$i;
   $446 = ((($441)) + 28|0);
   $447 = HEAP32[$446>>2]|0;
   FUNCTION_TABLE_viiiii[$447 & 511]($440,$_14$i,984,$_20$i,1008);
   $448 = HEAP32[$392>>2]|0;
   $449 = ($448|0)==(0);
   if ($449) {
    STACKTOP = sp;return;
   }
   $$idx$i$i147 = ((($0)) + 8|0);
   $450 = ((($_67)) + 32|0);
   $self$i$sroa$0$0$_7$sroa$4$0$$sroa_cast100$i$sroa_idx$i = ((($_67)) + 4|0);
   $self$i$sroa$7$0$_7$sroa$4$0$$sroa_cast100$i$sroa_idx$i = ((($_67)) + 36|0);
   $451 = ((($_67)) + 32|0);
   $452 = ((($_67)) + 56|0);
   $453 = ((($_67)) + 60|0);
   $$fca$0$gep25$i = ((($_13$i)) + 4|0);
   $454 = ((($0)) + 48|0);
   $$idx$i45$i = ((($0)) + 52|0);
   $_27$sroa$0$sroa$4$0$_27$sroa$0$0$$sroa_cast60$sroa_idx146$i = ((($res$i)) + 28|0);
   $_27$sroa$0$sroa$5$0$_27$sroa$0$0$$sroa_cast60$sroa_idx$i = ((($res$i)) + 32|0);
   $$in = $448;
   L179: while(1) {
    $488 = (($$in) + -1)|0;
    HEAP32[$392>>2] = $488;
    $489 = HEAP32[$390>>2]|0;
    $490 = (($489) + ($488<<2)|0);
    $$val$i = HEAP32[$490>>2]|0;
    $491 = HEAP32[$13>>2]|0;
    $switchtmp$i146 = ($491|0)==(0|0);
    if ($switchtmp$i146) {
     $$idx$val$i$i148 = HEAP32[$$idx$i$i147>>2]|0;
     $492 = ($$idx$val$i$i148>>>0)>($$val$i>>>0);
     if ($492) {
      $$idx1$val$i$i = HEAP32[$0>>2]|0;
      $493 = (($$idx1$val$i$i) + ($$val$i<<6)|0);
      ;HEAP32[$_6$sroa$0$i>>2]=HEAP32[$493>>2]|0;HEAP32[$_6$sroa$0$i+4>>2]=HEAP32[$493+4>>2]|0;HEAP32[$_6$sroa$0$i+8>>2]=HEAP32[$493+8>>2]|0;HEAP32[$_6$sroa$0$i+12>>2]=HEAP32[$493+12>>2]|0;HEAP32[$_6$sroa$0$i+16>>2]=HEAP32[$493+16>>2]|0;HEAP32[$_6$sroa$0$i+20>>2]=HEAP32[$493+20>>2]|0;HEAP32[$_6$sroa$0$i+24>>2]=HEAP32[$493+24>>2]|0;
      $src$sroa$0$i$i$i$sroa$4$0$$sroa_idx94$i = (((($$idx1$val$i$i) + ($$val$i<<6)|0)) + 28|0);
      $src$sroa$0$i$i$i$sroa$4$0$copyload$i = HEAP32[$src$sroa$0$i$i$i$sroa$4$0$$sroa_idx94$i>>2]|0;
      $src$sroa$0$i$i$i$sroa$5$0$$sroa_idx$i = (((($$idx1$val$i$i) + ($$val$i<<6)|0)) + 32|0);
      ;HEAP32[$_6$sroa$5$i>>2]=HEAP32[$src$sroa$0$i$i$i$sroa$5$0$$sroa_idx$i>>2]|0;HEAP32[$_6$sroa$5$i+4>>2]=HEAP32[$src$sroa$0$i$i$i$sroa$5$0$$sroa_idx$i+4>>2]|0;HEAP32[$_6$sroa$5$i+8>>2]=HEAP32[$src$sroa$0$i$i$i$sroa$5$0$$sroa_idx$i+8>>2]|0;HEAP32[$_6$sroa$5$i+12>>2]=HEAP32[$src$sroa$0$i$i$i$sroa$5$0$$sroa_idx$i+12>>2]|0;HEAP32[$_6$sroa$5$i+16>>2]=HEAP32[$src$sroa$0$i$i$i$sroa$5$0$$sroa_idx$i+16>>2]|0;HEAP32[$_6$sroa$5$i+20>>2]=HEAP32[$src$sroa$0$i$i$i$sroa$5$0$$sroa_idx$i+20>>2]|0;HEAP32[$_6$sroa$5$i+24>>2]=HEAP32[$src$sroa$0$i$i$i$sroa$5$0$$sroa_idx$i+24>>2]|0;HEAP32[$_6$sroa$5$i+28>>2]=HEAP32[$src$sroa$0$i$i$i$sroa$5$0$$sroa_idx$i+28>>2]|0;
      HEAP32[$src$sroa$0$i$i$i$sroa$4$0$$sroa_idx94$i>>2] = 0;
      $_6$sroa$4$0$i = $src$sroa$0$i$i$i$sroa$4$0$copyload$i;
     } else {
      $_6$sroa$4$0$i = 0;
     }
     ;HEAP32[$self$i$sroa$0$i>>2]=HEAP32[$_6$sroa$0$i>>2]|0;HEAP32[$self$i$sroa$0$i+4>>2]=HEAP32[$_6$sroa$0$i+4>>2]|0;HEAP32[$self$i$sroa$0$i+8>>2]=HEAP32[$_6$sroa$0$i+8>>2]|0;HEAP32[$self$i$sroa$0$i+12>>2]=HEAP32[$_6$sroa$0$i+12>>2]|0;HEAP32[$self$i$sroa$0$i+16>>2]=HEAP32[$_6$sroa$0$i+16>>2]|0;HEAP32[$self$i$sroa$0$i+20>>2]=HEAP32[$_6$sroa$0$i+20>>2]|0;HEAP32[$self$i$sroa$0$i+24>>2]=HEAP32[$_6$sroa$0$i+24>>2]|0;
     ;HEAP32[$self$i$sroa$7$i>>2]=HEAP32[$_6$sroa$5$i>>2]|0;HEAP32[$self$i$sroa$7$i+4>>2]=HEAP32[$_6$sroa$5$i+4>>2]|0;HEAP32[$self$i$sroa$7$i+8>>2]=HEAP32[$_6$sroa$5$i+8>>2]|0;HEAP32[$self$i$sroa$7$i+12>>2]=HEAP32[$_6$sroa$5$i+12>>2]|0;HEAP32[$self$i$sroa$7$i+16>>2]=HEAP32[$_6$sroa$5$i+16>>2]|0;HEAP32[$self$i$sroa$7$i+20>>2]=HEAP32[$_6$sroa$5$i+20>>2]|0;HEAP32[$self$i$sroa$7$i+24>>2]=HEAP32[$_6$sroa$5$i+24>>2]|0;HEAP32[$self$i$sroa$7$i+28>>2]=HEAP32[$_6$sroa$5$i+28>>2]|0;
     $switch3tmp$i$i = ($_6$sroa$4$0$i|0)==(0|0);
     if ($switch3tmp$i$i) {
      $$sink$i153 = 0;
     } else {
      HEAP32[$_67>>2] = $$val$i;
      ;HEAP32[$self$i$sroa$0$0$_7$sroa$4$0$$sroa_cast100$i$sroa_idx$i>>2]=HEAP32[$self$i$sroa$0$i>>2]|0;HEAP32[$self$i$sroa$0$0$_7$sroa$4$0$$sroa_cast100$i$sroa_idx$i+4>>2]=HEAP32[$self$i$sroa$0$i+4>>2]|0;HEAP32[$self$i$sroa$0$0$_7$sroa$4$0$$sroa_cast100$i$sroa_idx$i+8>>2]=HEAP32[$self$i$sroa$0$i+8>>2]|0;HEAP32[$self$i$sroa$0$0$_7$sroa$4$0$$sroa_cast100$i$sroa_idx$i+12>>2]=HEAP32[$self$i$sroa$0$i+12>>2]|0;HEAP32[$self$i$sroa$0$0$_7$sroa$4$0$$sroa_cast100$i$sroa_idx$i+16>>2]=HEAP32[$self$i$sroa$0$i+16>>2]|0;HEAP32[$self$i$sroa$0$0$_7$sroa$4$0$$sroa_cast100$i$sroa_idx$i+20>>2]=HEAP32[$self$i$sroa$0$i+20>>2]|0;HEAP32[$self$i$sroa$0$0$_7$sroa$4$0$$sroa_cast100$i$sroa_idx$i+24>>2]=HEAP32[$self$i$sroa$0$i+24>>2]|0;
      ;HEAP32[$self$i$sroa$7$0$_7$sroa$4$0$$sroa_cast100$i$sroa_idx$i>>2]=HEAP32[$self$i$sroa$7$i>>2]|0;HEAP32[$self$i$sroa$7$0$_7$sroa$4$0$$sroa_cast100$i$sroa_idx$i+4>>2]=HEAP32[$self$i$sroa$7$i+4>>2]|0;HEAP32[$self$i$sroa$7$0$_7$sroa$4$0$$sroa_cast100$i$sroa_idx$i+8>>2]=HEAP32[$self$i$sroa$7$i+8>>2]|0;HEAP32[$self$i$sroa$7$0$_7$sroa$4$0$$sroa_cast100$i$sroa_idx$i+12>>2]=HEAP32[$self$i$sroa$7$i+12>>2]|0;HEAP32[$self$i$sroa$7$0$_7$sroa$4$0$$sroa_cast100$i$sroa_idx$i+16>>2]=HEAP32[$self$i$sroa$7$i+16>>2]|0;HEAP32[$self$i$sroa$7$0$_7$sroa$4$0$$sroa_cast100$i$sroa_idx$i+20>>2]=HEAP32[$self$i$sroa$7$i+20>>2]|0;HEAP32[$self$i$sroa$7$0$_7$sroa$4$0$$sroa_cast100$i$sroa_idx$i+24>>2]=HEAP32[$self$i$sroa$7$i+24>>2]|0;HEAP32[$self$i$sroa$7$0$_7$sroa$4$0$$sroa_cast100$i$sroa_idx$i+28>>2]=HEAP32[$self$i$sroa$7$i+28>>2]|0;
      $$sink$i153 = $_6$sroa$4$0$i;
     }
     HEAP32[$450>>2] = $$sink$i153;
     $543 = $$sink$i153;
    } else {
     __ZN72__LT_std__collections__hash__map__HashMap_LT_K_C__u20_V_C__u20_S_GT__GT_6remove17h229702fffc95699cE($_13$i,$21,$$val$i);
     $494 = HEAP32[$_13$i>>2]|0;
     $switch4$i = ($494|0)==(1);
     if ($switch4$i) {
      $$fca$0$load26$i = HEAP32[$$fca$0$gep25$i>>2]|0;
      $$idx$val$i35$i = HEAP32[$$idx$i$i147>>2]|0;
      $496 = ($$idx$val$i35$i>>>0)>($$fca$0$load26$i>>>0);
      if ($496) {
       $$idx1$val$i38$i = HEAP32[$0>>2]|0;
       $497 = (($$idx1$val$i38$i) + ($$fca$0$load26$i<<6)|0);
       dest=$res$i; src=$497; stop=dest+64|0; do { HEAP32[dest>>2]=HEAP32[src>>2]|0; dest=dest+4|0; src=src+4|0; } while ((dest|0) < (stop|0));
       $_4$sroa$3$0$$sroa_idx9$i$i40$i = (((($$idx1$val$i38$i) + ($$fca$0$load26$i<<6)|0)) + 28|0);
       HEAP32[$_4$sroa$3$0$$sroa_idx9$i$i40$i>>2] = 0;
      } else {
       HEAP32[$_27$sroa$0$sroa$4$0$_27$sroa$0$0$$sroa_cast60$sroa_idx146$i>>2] = 0;
      }
      $498 = HEAP32[$23>>2]|0;
      $$idx$val$i46$i = HEAP32[$$idx$i45$i>>2]|0;
      $499 = ($498|0)==($$idx$val$i46$i|0);
      if ($499) {
       __THREW__ = 0;
       invoke_vi(237,($454|0));
       $500 = __THREW__; __THREW__ = 0;
       $501 = $500&1;
       if ($501) {
        label = 140;
        break;
       }
       $$pre$i47$i = HEAP32[$23>>2]|0;
       $504 = $$pre$i47$i;
      } else {
       $504 = $498;
      }
      $502 = HEAP32[$454>>2]|0;
      $503 = (($502) + ($504<<2)|0);
      HEAP32[$503>>2] = $$fca$0$load26$i;
      $505 = HEAP32[$23>>2]|0;
      $506 = (($505) + 1)|0;
      HEAP32[$23>>2] = $506;
      $_27$sroa$0$sroa$4$0$copyload$i = HEAP32[$_27$sroa$0$sroa$4$0$_27$sroa$0$0$$sroa_cast60$sroa_idx146$i>>2]|0;
      ;HEAP32[$self$i49$sroa$0$i>>2]=HEAP32[$res$i>>2]|0;HEAP32[$self$i49$sroa$0$i+4>>2]=HEAP32[$res$i+4>>2]|0;HEAP32[$self$i49$sroa$0$i+8>>2]=HEAP32[$res$i+8>>2]|0;HEAP32[$self$i49$sroa$0$i+12>>2]=HEAP32[$res$i+12>>2]|0;HEAP32[$self$i49$sroa$0$i+16>>2]=HEAP32[$res$i+16>>2]|0;HEAP32[$self$i49$sroa$0$i+20>>2]=HEAP32[$res$i+20>>2]|0;HEAP32[$self$i49$sroa$0$i+24>>2]=HEAP32[$res$i+24>>2]|0;
      ;HEAP32[$self$i49$sroa$6$i>>2]=HEAP32[$_27$sroa$0$sroa$5$0$_27$sroa$0$0$$sroa_cast60$sroa_idx$i>>2]|0;HEAP32[$self$i49$sroa$6$i+4>>2]=HEAP32[$_27$sroa$0$sroa$5$0$_27$sroa$0$0$$sroa_cast60$sroa_idx$i+4>>2]|0;HEAP32[$self$i49$sroa$6$i+8>>2]=HEAP32[$_27$sroa$0$sroa$5$0$_27$sroa$0$0$$sroa_cast60$sroa_idx$i+8>>2]|0;HEAP32[$self$i49$sroa$6$i+12>>2]=HEAP32[$_27$sroa$0$sroa$5$0$_27$sroa$0$0$$sroa_cast60$sroa_idx$i+12>>2]|0;HEAP32[$self$i49$sroa$6$i+16>>2]=HEAP32[$_27$sroa$0$sroa$5$0$_27$sroa$0$0$$sroa_cast60$sroa_idx$i+16>>2]|0;HEAP32[$self$i49$sroa$6$i+20>>2]=HEAP32[$_27$sroa$0$sroa$5$0$_27$sroa$0$0$$sroa_cast60$sroa_idx$i+20>>2]|0;HEAP32[$self$i49$sroa$6$i+24>>2]=HEAP32[$_27$sroa$0$sroa$5$0$_27$sroa$0$0$$sroa_cast60$sroa_idx$i+24>>2]|0;HEAP32[$self$i49$sroa$6$i+28>>2]=HEAP32[$_27$sroa$0$sroa$5$0$_27$sroa$0$0$$sroa_cast60$sroa_idx$i+28>>2]|0;
      $switch3tmp$i51$i = ($_27$sroa$0$sroa$4$0$copyload$i|0)==(0|0);
      if ($switch3tmp$i51$i) {
       $$sink156$i = 0;
      } else {
       HEAP32[$_67>>2] = $$fca$0$load26$i;
       ;HEAP32[$self$i$sroa$0$0$_7$sroa$4$0$$sroa_cast100$i$sroa_idx$i>>2]=HEAP32[$self$i49$sroa$0$i>>2]|0;HEAP32[$self$i$sroa$0$0$_7$sroa$4$0$$sroa_cast100$i$sroa_idx$i+4>>2]=HEAP32[$self$i49$sroa$0$i+4>>2]|0;HEAP32[$self$i$sroa$0$0$_7$sroa$4$0$$sroa_cast100$i$sroa_idx$i+8>>2]=HEAP32[$self$i49$sroa$0$i+8>>2]|0;HEAP32[$self$i$sroa$0$0$_7$sroa$4$0$$sroa_cast100$i$sroa_idx$i+12>>2]=HEAP32[$self$i49$sroa$0$i+12>>2]|0;HEAP32[$self$i$sroa$0$0$_7$sroa$4$0$$sroa_cast100$i$sroa_idx$i+16>>2]=HEAP32[$self$i49$sroa$0$i+16>>2]|0;HEAP32[$self$i$sroa$0$0$_7$sroa$4$0$$sroa_cast100$i$sroa_idx$i+20>>2]=HEAP32[$self$i49$sroa$0$i+20>>2]|0;HEAP32[$self$i$sroa$0$0$_7$sroa$4$0$$sroa_cast100$i$sroa_idx$i+24>>2]=HEAP32[$self$i49$sroa$0$i+24>>2]|0;
       ;HEAP32[$self$i$sroa$7$0$_7$sroa$4$0$$sroa_cast100$i$sroa_idx$i>>2]=HEAP32[$self$i49$sroa$6$i>>2]|0;HEAP32[$self$i$sroa$7$0$_7$sroa$4$0$$sroa_cast100$i$sroa_idx$i+4>>2]=HEAP32[$self$i49$sroa$6$i+4>>2]|0;HEAP32[$self$i$sroa$7$0$_7$sroa$4$0$$sroa_cast100$i$sroa_idx$i+8>>2]=HEAP32[$self$i49$sroa$6$i+8>>2]|0;HEAP32[$self$i$sroa$7$0$_7$sroa$4$0$$sroa_cast100$i$sroa_idx$i+12>>2]=HEAP32[$self$i49$sroa$6$i+12>>2]|0;HEAP32[$self$i$sroa$7$0$_7$sroa$4$0$$sroa_cast100$i$sroa_idx$i+16>>2]=HEAP32[$self$i49$sroa$6$i+16>>2]|0;HEAP32[$self$i$sroa$7$0$_7$sroa$4$0$$sroa_cast100$i$sroa_idx$i+20>>2]=HEAP32[$self$i49$sroa$6$i+20>>2]|0;HEAP32[$self$i$sroa$7$0$_7$sroa$4$0$$sroa_cast100$i$sroa_idx$i+24>>2]=HEAP32[$self$i49$sroa$6$i+24>>2]|0;HEAP32[$self$i$sroa$7$0$_7$sroa$4$0$$sroa_cast100$i$sroa_idx$i+28>>2]=HEAP32[$self$i49$sroa$6$i+28>>2]|0;
       $$sink156$i = $_27$sroa$0$sroa$4$0$copyload$i;
      }
      HEAP32[$450>>2] = $$sink156$i;
      $632 = $$sink156$i;
     } else {
      HEAP32[$450>>2] = 0;
      $632 = 0;
     }
     $543 = $632;
    }
    $switchtmp$i182 = ($543|0)==(0|0);
    L206: do {
     if (!($switchtmp$i182)) {
      $544 = HEAP32[$543>>2]|0;HEAP32[$543>>2] = (($544-1)|0);
      $545 = ($544|0)==(1);
      if ($545) {
       /* fence */;
       __THREW__ = 0;
       invoke_vi(241,($451|0));
       $546 = __THREW__; __THREW__ = 0;
       $547 = $546&1;
       if ($547) {
        label = 188;
        break L179;
       }
      }
      $548 = HEAP32[$452>>2]|0;
      switch ($548|0) {
      case 0:  {
       break;
      }
      case 1:  {
       $571 = HEAP32[$453>>2]|0;
       $572 = HEAP32[$571>>2]|0;
       $573 = (($572) + -1)|0;
       HEAP32[$571>>2] = $573;
       $574 = ($573|0)==(0);
       if (!($574)) {
        break L206;
       }
       $575 = ((($571)) + 12|0);
       __THREW__ = 0;
       invoke_vi(247,($575|0));
       $576 = __THREW__; __THREW__ = 0;
       $577 = $576&1;
       if ($577) {
        label = 188;
        break L179;
       }
       $578 = ((($571)) + 4|0);
       $579 = HEAP32[$578>>2]|0;
       $580 = (($579) + -1)|0;
       HEAP32[$578>>2] = $580;
       $581 = ($580|0)==(0);
       if (!($581)) {
        break L206;
       }
       _free($571);
       break L206;
       break;
      }
      default: {
       break L206;
      }
      }
      $549 = HEAP32[$453>>2]|0;
      $550 = HEAP32[$549>>2]|0;
      $551 = (($550) + -1)|0;
      HEAP32[$549>>2] = $551;
      $552 = ($551|0)==(0);
      if ($552) {
       $553 = ((($549)) + 16|0);
       $554 = HEAP32[$553>>2]|0;
       $555 = HEAP32[$554>>2]|0;HEAP32[$554>>2] = (($555-1)|0);
       $556 = ($555|0)==(1);
       if ($556) {
        /* fence */;
        __THREW__ = 0;
        invoke_vi(241,($553|0));
        $557 = __THREW__; __THREW__ = 0;
        $558 = $557&1;
        if ($558) {
         label = 188;
         break L179;
        }
       }
       $559 = ((($549)) + 172|0);
       $560 = HEAP32[$559>>2]|0;
       $switchtmp$i$i$i$i$i$i214 = ($560|0)==(0|0);
       if (!($switchtmp$i$i$i$i$i$i214)) {
        $$idx1$i$i$i$i$i$i$i216 = ((($549)) + 176|0);
        $$idx1$val$i$i$i$i$i$i$i217 = HEAP32[$$idx1$i$i$i$i$i$i$i216>>2]|0;
        $$idx1$val$val$i$i$i$i$i$i$i218 = HEAP32[$$idx1$val$i$i$i$i$i$i$i217>>2]|0;
        __THREW__ = 0;
        invoke_vi($$idx1$val$val$i$i$i$i$i$i$i218|0,($560|0));
        $561 = __THREW__; __THREW__ = 0;
        $562 = $561&1;
        if ($562) {
         label = 188;
         break L179;
        }
        $563 = HEAP32[$$idx1$i$i$i$i$i$i$i216>>2]|0;
        $564 = ((($563)) + 4|0);
        $565 = HEAP32[$564>>2]|0;
        $566 = ($565|0)==(0);
        if (!($566)) {
         _free($560);
        }
       }
       $$idx3$val$i$i221 = HEAP32[$453>>2]|0;
       $567 = ((($$idx3$val$i$i221)) + 4|0);
       $568 = HEAP32[$567>>2]|0;
       $569 = (($568) + -1)|0;
       HEAP32[$567>>2] = $569;
       $570 = ($569|0)==(0);
       if ($570) {
        _free($549);
       }
      }
     }
    } while(0);
    $582 = HEAP32[$392>>2]|0;
    $583 = ($582|0)==(0);
    if ($583) {
     label = 120;
     break;
    } else {
     $$in = $582;
    }
   }
   if ((label|0) == 120) {
    STACKTOP = sp;return;
   }
   else if ((label|0) == 140) {
    $495 = ___cxa_find_matching_catch_2()|0;
    $507 = tempRet0;
    $508 = HEAP32[$_27$sroa$0$sroa$4$0$_27$sroa$0$0$$sroa_cast60$sroa_idx146$i>>2]|0;
    $switchtmp$i$i161 = ($508|0)==(0|0);
    if ($switchtmp$i$i161) {
     ___resumeException($495|0);
     // unreachable;
    }
    $509 = HEAP32[$508>>2]|0;HEAP32[$508>>2] = (($509-1)|0);
    $510 = ($509|0)==(1);
    if ($510) {
     $511 = ((($res$i)) + 28|0);
     /* fence */;
     __ZN33__LT_alloc__arc__Arc_LT_T_GT__GT_9drop_slow17hb3767c2311d7d383E($511);
    }
    $512 = ((($res$i)) + 52|0);
    $513 = HEAP32[$512>>2]|0;
    switch ($513|0) {
    case 0:  {
     $514 = ((($res$i)) + 56|0);
     $515 = HEAP32[$514>>2]|0;
     $516 = HEAP32[$515>>2]|0;
     $517 = (($516) + -1)|0;
     HEAP32[$515>>2] = $517;
     $518 = ($517|0)==(0);
     if (!($518)) {
      ___resumeException($495|0);
      // unreachable;
     }
     $519 = ((($515)) + 16|0);
     $520 = HEAP32[$519>>2]|0;
     $521 = HEAP32[$520>>2]|0;HEAP32[$520>>2] = (($521-1)|0);
     $522 = ($521|0)==(1);
     if ($522) {
      /* fence */;
      __ZN33__LT_alloc__arc__Arc_LT_T_GT__GT_9drop_slow17hb3767c2311d7d383E($519);
     }
     $523 = ((($515)) + 172|0);
     $524 = HEAP32[$523>>2]|0;
     $switchtmp$i$i$i$i$i$i$i169 = ($524|0)==(0|0);
     if (!($switchtmp$i$i$i$i$i$i$i169)) {
      $$idx1$i$i$i$i$i$i$i$i171 = ((($515)) + 176|0);
      $$idx1$val$i$i$i$i$i$i$i$i172 = HEAP32[$$idx1$i$i$i$i$i$i$i$i171>>2]|0;
      $$idx1$val$val$i$i$i$i$i$i$i$i173 = HEAP32[$$idx1$val$i$i$i$i$i$i$i$i172>>2]|0;
      FUNCTION_TABLE_vi[$$idx1$val$val$i$i$i$i$i$i$i$i173 & 511]($524);
      $525 = HEAP32[$$idx1$i$i$i$i$i$i$i$i171>>2]|0;
      $526 = ((($525)) + 4|0);
      $527 = HEAP32[$526>>2]|0;
      $528 = ($527|0)==(0);
      if (!($528)) {
       _free($524);
      }
     }
     $$idx3$val$i$i$i176 = HEAP32[$514>>2]|0;
     $529 = ((($$idx3$val$i$i$i176)) + 4|0);
     $530 = HEAP32[$529>>2]|0;
     $531 = (($530) + -1)|0;
     HEAP32[$529>>2] = $531;
     $532 = ($531|0)==(0);
     if (!($532)) {
      ___resumeException($495|0);
      // unreachable;
     }
     _free($515);
     ___resumeException($495|0);
     // unreachable;
     break;
    }
    case 1:  {
     $533 = ((($res$i)) + 56|0);
     $534 = HEAP32[$533>>2]|0;
     $535 = HEAP32[$534>>2]|0;
     $536 = (($535) + -1)|0;
     HEAP32[$534>>2] = $536;
     $537 = ($536|0)==(0);
     if (!($537)) {
      ___resumeException($495|0);
      // unreachable;
     }
     $538 = ((($534)) + 12|0);
     __ZN4drop17hd4af0298b60386b8E($538);
     $539 = ((($534)) + 4|0);
     $540 = HEAP32[$539>>2]|0;
     $541 = (($540) + -1)|0;
     HEAP32[$539>>2] = $541;
     $542 = ($541|0)==(0);
     if (!($542)) {
      ___resumeException($495|0);
      // unreachable;
     }
     _free($534);
     ___resumeException($495|0);
     // unreachable;
     break;
    }
    default: {
     ___resumeException($495|0);
     // unreachable;
    }
    }
   }
   else if ((label|0) == 188) {
    $626 = ___cxa_find_matching_catch_2()|0;
    $627 = tempRet0;
    $lpad$phi$index = $626;$lpad$phi$index12 = $627;
    break;
   }
  }
 } while(0);
 $personalityslot$sroa$0$0 = $lpad$phi$index;$personalityslot$sroa$7$0 = $lpad$phi$index12;
 ___resumeException($personalityslot$sroa$0$0|0);
 // unreachable;
}
function __ZN94__LT_std__io__Write__write_fmt__Adaptor_LT__u27_a_C__u20_T_GT__u20_as_u20_core__fmt__Write_GT_9write_str17h2f73293455338b77E($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$idx$i$i = 0, $$idx$val$i$i = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $local_len$sroa$5$0$lcssa$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = HEAP32[$0>>2]|0;
 __ZN39__LT_collections__vec__Vec_LT_T_GT__GT_7reserve17h36095f9d9422ab2dE($3,$2);
 $$idx$i$i = ((($3)) + 8|0);
 $$idx$val$i$i = HEAP32[$$idx$i$i>>2]|0;
 $4 = ($2|0)==(0);
 if ($4) {
  $local_len$sroa$5$0$lcssa$i$i = $$idx$val$i$i;
  HEAP32[$$idx$i$i>>2] = $local_len$sroa$5$0$lcssa$i$i;
  return 0;
 }
 $5 = (($$idx$val$i$i) + ($2))|0;
 $6 = HEAP32[$3>>2]|0;
 $7 = (($6) + ($$idx$val$i$i)|0);
 _memcpy(($7|0),($1|0),($2|0))|0;
 $local_len$sroa$5$0$lcssa$i$i = $5;
 HEAP32[$$idx$i$i>>2] = $local_len$sroa$5$0$lcssa$i$i;
 return 0;
}
function __ZN96__LT_core__fmt__Write__write_fmt__Adapter_LT__u27_a_C__u20_T_GT__u20_as_u20_core__fmt__Write_GT_10write_char17hed751f42a19fae65E($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[$0>>2]|0;
 (__ZN4core3fmt5Write10write_char17h6c9d4222bb591802E($2,$1)|0);
 return 0;
}
function __ZN96__LT_core__fmt__Write__write_fmt__Adapter_LT__u27_a_C__u20_T_GT__u20_as_u20_core__fmt__Write_GT_9write_fmt17hc17bbde3afb5b338E($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $_10$i = 0, $_8$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $_8$i = sp + 24|0;
 $_10$i = sp;
 $2 = HEAP32[$0>>2]|0;
 HEAP32[$_8$i>>2] = $2;
 ;HEAP32[$_10$i>>2]=HEAP32[$1>>2]|0;HEAP32[$_10$i+4>>2]=HEAP32[$1+4>>2]|0;HEAP32[$_10$i+8>>2]=HEAP32[$1+8>>2]|0;HEAP32[$_10$i+12>>2]=HEAP32[$1+12>>2]|0;HEAP32[$_10$i+16>>2]=HEAP32[$1+16>>2]|0;HEAP32[$_10$i+20>>2]=HEAP32[$1+20>>2]|0;
 $3 = (__ZN4core3fmt5write17hdd089a59fed6a1dbE($_8$i,848,$_10$i)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN96__LT_core__fmt__Write__write_fmt__Adapter_LT__u27_a_C__u20_T_GT__u20_as_u20_core__fmt__Write_GT_9write_str17h0aaca7dec6d4e3a8E($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$idx$i$i$i = 0, $$idx$val$i$i$i = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $local_len$sroa$5$0$lcssa$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = HEAP32[$0>>2]|0;
 $4 = HEAP32[$3>>2]|0;
 __ZN39__LT_collections__vec__Vec_LT_T_GT__GT_7reserve17h36095f9d9422ab2dE($4,$2);
 $$idx$i$i$i = ((($4)) + 8|0);
 $$idx$val$i$i$i = HEAP32[$$idx$i$i$i>>2]|0;
 $5 = ($2|0)==(0);
 if ($5) {
  $local_len$sroa$5$0$lcssa$i$i$i = $$idx$val$i$i$i;
  HEAP32[$$idx$i$i$i>>2] = $local_len$sroa$5$0$lcssa$i$i$i;
  return 0;
 }
 $6 = (($$idx$val$i$i$i) + ($2))|0;
 $7 = HEAP32[$4>>2]|0;
 $8 = (($7) + ($$idx$val$i$i$i)|0);
 _memcpy(($8|0),($1|0),($2|0))|0;
 $local_len$sroa$5$0$lcssa$i$i$i = $6;
 HEAP32[$$idx$i$i$i>>2] = $local_len$sroa$5$0$lcssa$i$i$i;
 return 0;
}
function __ZN12physics_test8interval11rust_caller17hed3f8a5d0fff365dE($0) {
 $0 = $0|0;
 var $$idx$i = 0, $$idx$val$i = 0, $$idx$val$i22$i = 0, $$idx15$i = 0, $$idx15$val$i = 0, $$idx16$val$i = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0;
 var $40 = 0, $41 = 0, $42 = 0, $43 = 0.0, $44 = 0.0, $45 = 0.0, $46 = 0.0, $47 = 0.0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0;
 var $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $8 = 0, $9 = 0, $_1$sroa$4$0$$sroa_idx3$i$i = 0, $_1$sroa$4$0$$sroa_idx3$i$i42 = 0, $_1$sroa$5$0$$sroa_idx5$i$i = 0, $_1$sroa$5$0$$sroa_idx5$i$i43 = 0, $_10$i$i = 0;
 var $_10$i$i39 = 0, $_17$sroa$0$0$iter$sroa$6$0$i$i = 0, $_17$sroa$0$0$iter$sroa$6$083$i$i = 0, $_23$i$i = 0, $_23$idx$val$i$i = 0, $_23$idx31$i$i = 0, $_23$idx31$val$i$i = 0, $_29$i$i$sroa$0$0$copyload = 0, $_29$i$i$sroa$4$0$copyload = 0, $_29$i$i$sroa$6$0$copyload = 0, $_30$i$i$sroa$4$0$$sroa_idx72 = 0, $_30$i$i$sroa$5$0$$sroa_idx74 = 0, $_30$i$i$sroa$6$0$$sroa_idx76 = 0, $_30$i$i$sroa$7$0$$sroa_idx78 = 0, $_30$i$i$sroa$8$0$$sroa_idx80 = 0, $_35$i$i = 0, $_59$i$i$sroa$0$0$copyload = 0, $_59$i$i$sroa$4$0$copyload = 0, $_59$i$i$sroa$6$0$copyload = 0, $_60$i$i$sroa$4$0$$sroa_idx54 = 0;
 var $_60$i$i$sroa$5$0$$sroa_idx56 = 0, $_60$i$i$sroa$659$0$$sroa_idx61 = 0, $_60$i$i$sroa$7$0$$sroa_idx63 = 0, $_65$i$i = 0, $_68$i$i = 0, $_71$i$i = 0, $_8$i$i = 0, $_8$i$i38 = 0, $cond$i$i$i$i = 0, $cond$i$i$i$i$i = 0, $cond$i$i$i28$i = 0, $eh$lpad$body$i$index11Z2D = 0, $eh$lpad$body$i$indexZ2D = 0, $id$i$i = 0, $iter$sroa$0$0$$i$i = 0, $iter$sroa$0$0$84$i$i = 0, $iter$sroa$0$082$i$i = 0, $iter$sroa$0$082$i$i$phi = 0, $iter$sroa$6$0$$i$i = 0, $iter$sroa$6$0$85$i$i = 0;
 var $lpad$phi$i$i$index = 0, $lpad$phi$i$i$index2 = 0, $not$$i$i$i$i$i$i = 0, $not$$i$i$i$i$i$i$i = 0, $not$$i$i$i$i$i$i46 = 0, $not$$i$i$i$i$i33$i$i = 0, $not$$i$i$i$i$i36$i$i = 0, $not$$i$i$i$i$i40$i$i = 0, $output$i = 0, $output$i40 = 0, $personalityslot$sroa$0$0$i$i = 0, $personalityslot$sroa$0$1$i = 0, $personalityslot$sroa$6$1$i = 0, $personalityslot$sroa$7$0$i$i = 0, $switch2$i$i$i = 0, $switchtmp$i$i = 0, $switchtmp71$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(144|0);
 $_8$i$i38 = sp + 128|0;
 $_10$i$i39 = sp + 104|0;
 $output$i40 = sp + 88|0;
 $_8$i$i = sp + 80|0;
 $_10$i$i = sp + 56|0;
 $output$i = sp + 40|0;
 $id$i$i = sp + 140|0;
 $_23$i$i = sp + 24|0;
 $_35$i$i = sp + 16|0;
 $_65$i$i = sp;
 $_68$i$i = sp + 136|0;
 $_71$i$i = sp + 132|0;
 $$idx16$val$i = HEAP32[$0>>2]|0;
 $1 = ((($$idx16$val$i)) + 8|0);
 $$idx15$i = ((($0)) + 4|0);
 $$idx15$val$i = HEAP32[$$idx15$i>>2]|0;
 $2 = ((($$idx15$val$i)) + 8|0);
 $3 = HEAP32[$2>>2]|0;
 $cond$i$i$i$i = ($3|0)==(0);
 if (!($cond$i$i$i$i)) {
  __ZN4core6result13unwrap_failed17he96585155b596c01E();
  // unreachable;
 }
 HEAP32[$2>>2] = -1;
 $$idx$i = ((($0)) + 8|0);
 $$idx$val$i = HEAP32[$$idx$i>>2]|0;
 $4 = ((($$idx$val$i)) + 8|0);
 $5 = HEAP32[$4>>2]|0;
 $cond$i$i$i28$i = ($5|0)==(-1);
 if ($cond$i$i$i28$i) {
  __THREW__ = 0;
  invoke_v(221);
  $6 = __THREW__; __THREW__ = 0;
  $7 = ___cxa_find_matching_catch_2()|0;
  $8 = tempRet0;
  $personalityslot$sroa$0$1$i = $7;$personalityslot$sroa$6$1$i = $8;
  HEAP32[$2>>2] = 0;
  ___resumeException($personalityslot$sroa$0$1$i|0);
  // unreachable;
 }
 $9 = ((($$idx15$val$i)) + 16|0);
 $10 = (($5) + 1)|0;
 HEAP32[$4>>2] = $10;
 $11 = ((($$idx$val$i)) + 12|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = ((($$idx$val$i)) + 20|0);
 $14 = HEAP32[$13>>2]|0;
 __THREW__ = 0;
 invoke_vi(279,($9|0));
 $15 = __THREW__; __THREW__ = 0;
 $16 = $15&1;
 do {
  if ($16) {
   label = 32;
  } else {
   $17 = (($12) + ($14<<2)|0);
   $18 = ($14|0)==(0);
   if ($18) {
    $68 = HEAP32[$4>>2]|0;
    $69 = (($68) + -1)|0;
    HEAP32[$4>>2] = $69;
    HEAP32[$2>>2] = 0;
    STACKTOP = sp;return;
   }
   $19 = ((($12)) + 4|0);
   $20 = $id$i$i;
   $21 = ((($_35$i$i)) + 4|0);
   $_23$idx31$i$i = ((($_23$i$i)) + 4|0);
   $22 = $_68$i$i;
   $23 = $_71$i$i;
   $24 = ((($_65$i$i)) + 4|0);
   $25 = ((($_65$i$i)) + 8|0);
   $26 = ((($_65$i$i)) + 12|0);
   $_1$sroa$4$0$$sroa_idx3$i$i = ((($output$i)) + 4|0);
   $_1$sroa$5$0$$sroa_idx5$i$i = ((($output$i)) + 8|0);
   $_30$i$i$sroa$4$0$$sroa_idx72 = ((($_10$i$i)) + 4|0);
   $_30$i$i$sroa$5$0$$sroa_idx74 = ((($_10$i$i)) + 8|0);
   $_30$i$i$sroa$6$0$$sroa_idx76 = ((($_10$i$i)) + 12|0);
   $_30$i$i$sroa$7$0$$sroa_idx78 = ((($_10$i$i)) + 16|0);
   $_30$i$i$sroa$8$0$$sroa_idx80 = ((($_10$i$i)) + 20|0);
   $_1$sroa$4$0$$sroa_idx3$i$i42 = ((($output$i40)) + 4|0);
   $_1$sroa$5$0$$sroa_idx5$i$i43 = ((($output$i40)) + 8|0);
   $_60$i$i$sroa$4$0$$sroa_idx54 = ((($_10$i$i39)) + 4|0);
   $_60$i$i$sroa$5$0$$sroa_idx56 = ((($_10$i$i39)) + 8|0);
   $_60$i$i$sroa$659$0$$sroa_idx61 = ((($_10$i$i39)) + 16|0);
   $_60$i$i$sroa$7$0$$sroa_idx63 = ((($_10$i$i39)) + 20|0);
   $_17$sroa$0$0$iter$sroa$6$083$i$i = 0;$iter$sroa$0$0$84$i$i = $19;$iter$sroa$0$082$i$i = $12;$iter$sroa$6$0$85$i$i = 1;
   while(1) {
    HEAP32[$id$i$i>>2] = $_17$sroa$0$0$iter$sroa$6$083$i$i;
    HEAP32[$_35$i$i>>2] = $20;
    HEAP32[$21>>2] = (264);
    HEAP32[$output$i>>2] = 1;
    HEAP32[$_1$sroa$4$0$$sroa_idx3$i$i>>2] = 0;
    HEAP32[$_1$sroa$5$0$$sroa_idx5$i$i>>2] = 0;
    HEAP32[$_8$i$i>>2] = $output$i;
    HEAP32[$_10$i$i>>2] = 5120;
    HEAP32[$_30$i$i$sroa$4$0$$sroa_idx72>>2] = 1;
    HEAP32[$_30$i$i$sroa$5$0$$sroa_idx74>>2] = 5084;
    HEAP32[$_30$i$i$sroa$6$0$$sroa_idx76>>2] = 1;
    HEAP32[$_30$i$i$sroa$7$0$$sroa_idx78>>2] = $_35$i$i;
    HEAP32[$_30$i$i$sroa$8$0$$sroa_idx80>>2] = 1;
    __THREW__ = 0;
    (invoke_iiii(244,($_8$i$i|0),(1864|0),($_10$i$i|0))|0);
    $27 = __THREW__; __THREW__ = 0;
    $28 = $27&1;
    if ($28) {
     label = 11;
     break;
    }
    $_29$i$i$sroa$0$0$copyload = HEAP32[$output$i>>2]|0;
    $_29$i$i$sroa$4$0$copyload = HEAP32[$_1$sroa$4$0$$sroa_idx3$i$i>>2]|0;
    $_29$i$i$sroa$6$0$copyload = HEAP32[$_1$sroa$5$0$$sroa_idx5$i$i>>2]|0;
    __THREW__ = 0;
    invoke_viiii(280,($_23$i$i|0),($1|0),($_29$i$i$sroa$0$0$copyload|0),($_29$i$i$sroa$6$0$copyload|0));
    $33 = __THREW__; __THREW__ = 0;
    $34 = $33&1;
    if ($34) {
     label = 27;
     break;
    }
    $_23$idx$val$i$i = HEAP32[$_23$i$i>>2]|0;
    $switch2$i$i$i = ($_23$idx$val$i$i|0)==(0);
    if ($switch2$i$i$i) {
     label = 15;
     break;
    }
    $_23$idx31$val$i$i = HEAP32[$_23$idx31$i$i>>2]|0;
    $not$$i$i$i$i$i40$i$i = ($_29$i$i$sroa$4$0$copyload|0)==(0);
    if (!($not$$i$i$i$i$i40$i$i)) {
     _free($_29$i$i$sroa$0$0$copyload);
    }
    $$idx$val$i22$i = HEAP32[$iter$sroa$0$082$i$i>>2]|0;
    $38 = ((($$idx$val$i22$i)) + 8|0);
    $39 = HEAP32[$38>>2]|0;
    $cond$i$i$i$i$i = ($39|0)==(-1);
    if ($cond$i$i$i$i$i) {
     label = 19;
     break;
    }
    $41 = ((($$idx$val$i22$i)) + 36|0);
    $42 = ((($$idx$val$i22$i)) + 40|0);
    $43 = +HEAPF32[$41>>2];
    $44 = +HEAPF32[$42>>2];
    $45 = $43 + -20.0;
    HEAPF32[$_68$i$i>>2] = $45;
    $46 = 600.0 - $44;
    $47 = $46 + -20.0;
    HEAPF32[$_71$i$i>>2] = $47;
    HEAP32[$_65$i$i>>2] = $22;
    HEAP32[$24>>2] = (281);
    HEAP32[$25>>2] = $23;
    HEAP32[$26>>2] = (281);
    HEAP32[$output$i40>>2] = 1;
    HEAP32[$_1$sroa$4$0$$sroa_idx3$i$i42>>2] = 0;
    HEAP32[$_1$sroa$5$0$$sroa_idx5$i$i43>>2] = 0;
    HEAP32[$_8$i$i38>>2] = $output$i40;
    HEAP32[$_10$i$i39>>2] = 5128;
    HEAP32[$_60$i$i$sroa$4$0$$sroa_idx54>>2] = 3;
    HEAP32[$_60$i$i$sroa$5$0$$sroa_idx56>>2] = 0;
    HEAP32[$_60$i$i$sroa$659$0$$sroa_idx61>>2] = $_65$i$i;
    HEAP32[$_60$i$i$sroa$7$0$$sroa_idx63>>2] = 2;
    __THREW__ = 0;
    (invoke_iiii(244,($_8$i$i38|0),(1864|0),($_10$i$i39|0))|0);
    $48 = __THREW__; __THREW__ = 0;
    $49 = $48&1;
    if ($49) {
     label = 21;
     break;
    }
    $_59$i$i$sroa$0$0$copyload = HEAP32[$output$i40>>2]|0;
    $_59$i$i$sroa$4$0$copyload = HEAP32[$_1$sroa$4$0$$sroa_idx3$i$i42>>2]|0;
    $_59$i$i$sroa$6$0$copyload = HEAP32[$_1$sroa$5$0$$sroa_idx5$i$i43>>2]|0;
    __THREW__ = 0;
    invoke_viii(282,($_23$idx31$val$i$i|0),($_59$i$i$sroa$0$0$copyload|0),($_59$i$i$sroa$6$0$copyload|0));
    $54 = __THREW__; __THREW__ = 0;
    $55 = $54&1;
    if ($55) {
     label = 30;
     break;
    }
    $not$$i$i$i$i$i36$i$i = ($_59$i$i$sroa$4$0$copyload|0)==(0);
    if (!($not$$i$i$i$i$i36$i$i)) {
     _free($_59$i$i$sroa$0$0$copyload);
    }
    $56 = ($iter$sroa$0$0$84$i$i|0)==($17|0);
    $57 = ((($iter$sroa$0$0$84$i$i)) + 4|0);
    $_17$sroa$0$0$iter$sroa$6$0$i$i = $56 ? $_17$sroa$0$0$iter$sroa$6$083$i$i : $iter$sroa$6$0$85$i$i;
    $iter$sroa$0$0$$i$i = $56 ? $iter$sroa$0$0$84$i$i : $57;
    $58 = $56&1;
    $59 = $58 ^ 1;
    $iter$sroa$6$0$$i$i = (($59) + ($iter$sroa$6$0$85$i$i))|0;
    $switchtmp71$i$i = ($iter$sroa$0$0$84$i$i|0)==(0|0);
    $switchtmp$i$i = $56 | $switchtmp71$i$i;
    if ($switchtmp$i$i) {
     label = 34;
     break;
    } else {
     $iter$sroa$0$082$i$i$phi = $iter$sroa$0$0$84$i$i;$_17$sroa$0$0$iter$sroa$6$083$i$i = $_17$sroa$0$0$iter$sroa$6$0$i$i;$iter$sroa$0$0$84$i$i = $iter$sroa$0$0$$i$i;$iter$sroa$6$0$85$i$i = $iter$sroa$6$0$$i$i;$iter$sroa$0$082$i$i = $iter$sroa$0$082$i$i$phi;
    }
   }
   if ((label|0) == 11) {
    $29 = ___cxa_find_matching_catch_2()|0;
    $30 = tempRet0;
    $31 = HEAP32[$_1$sroa$4$0$$sroa_idx3$i$i>>2]|0;
    $not$$i$i$i$i$i$i = ($31|0)==(0);
    if ($not$$i$i$i$i$i$i) {
     $eh$lpad$body$i$index11Z2D = $30;$eh$lpad$body$i$indexZ2D = $29;
     break;
    }
    $32 = HEAP32[$output$i>>2]|0;
    _free($32);
    $eh$lpad$body$i$index11Z2D = $30;$eh$lpad$body$i$indexZ2D = $29;
    break;
   }
   else if ((label|0) == 15) {
    __THREW__ = 0;
    invoke_vi(220,(6500|0));
    $35 = __THREW__; __THREW__ = 0;
    $36 = ___cxa_find_matching_catch_2()|0;
    $37 = tempRet0;
    $lpad$phi$i$i$index = $36;$lpad$phi$i$i$index2 = $37;
    label = 28;
   }
   else if ((label|0) == 19) {
    __THREW__ = 0;
    invoke_v(221);
    $40 = __THREW__; __THREW__ = 0;
    label = 32;
    break;
   }
   else if ((label|0) == 21) {
    $50 = ___cxa_find_matching_catch_2()|0;
    $51 = tempRet0;
    $52 = HEAP32[$_1$sroa$4$0$$sroa_idx3$i$i42>>2]|0;
    $not$$i$i$i$i$i$i46 = ($52|0)==(0);
    if ($not$$i$i$i$i$i$i46) {
     $eh$lpad$body$i$index11Z2D = $51;$eh$lpad$body$i$indexZ2D = $50;
     break;
    }
    $53 = HEAP32[$output$i40>>2]|0;
    _free($53);
    $eh$lpad$body$i$index11Z2D = $51;$eh$lpad$body$i$indexZ2D = $50;
    break;
   }
   else if ((label|0) == 27) {
    $60 = ___cxa_find_matching_catch_2()|0;
    $61 = tempRet0;
    $lpad$phi$i$i$index = $60;$lpad$phi$i$i$index2 = $61;
    label = 28;
   }
   else if ((label|0) == 30) {
    $62 = ___cxa_find_matching_catch_2()|0;
    $63 = tempRet0;
    $not$$i$i$i$i$i$i$i = ($_59$i$i$sroa$4$0$copyload|0)==(0);
    if ($not$$i$i$i$i$i$i$i) {
     $personalityslot$sroa$0$0$i$i = $62;$personalityslot$sroa$7$0$i$i = $63;
    } else {
     _free($_59$i$i$sroa$0$0$copyload);
     $personalityslot$sroa$0$0$i$i = $62;$personalityslot$sroa$7$0$i$i = $63;
    }
   }
   else if ((label|0) == 34) {
    $68 = HEAP32[$4>>2]|0;
    $69 = (($68) + -1)|0;
    HEAP32[$4>>2] = $69;
    HEAP32[$2>>2] = 0;
    STACKTOP = sp;return;
   }
   if ((label|0) == 28) {
    $not$$i$i$i$i$i33$i$i = ($_29$i$i$sroa$4$0$copyload|0)==(0);
    if ($not$$i$i$i$i$i33$i$i) {
     $personalityslot$sroa$0$0$i$i = $lpad$phi$i$i$index;$personalityslot$sroa$7$0$i$i = $lpad$phi$i$i$index2;
    } else {
     _free($_29$i$i$sroa$0$0$copyload);
     $personalityslot$sroa$0$0$i$i = $lpad$phi$i$i$index;$personalityslot$sroa$7$0$i$i = $lpad$phi$i$i$index2;
    }
   }
   $eh$lpad$body$i$index11Z2D = $personalityslot$sroa$7$0$i$i;$eh$lpad$body$i$indexZ2D = $personalityslot$sroa$0$0$i$i;
  }
 } while(0);
 if ((label|0) == 32) {
  $64 = ___cxa_find_matching_catch_2()|0;
  $65 = tempRet0;
  $eh$lpad$body$i$index11Z2D = $65;$eh$lpad$body$i$indexZ2D = $64;
 }
 $66 = HEAP32[$4>>2]|0;
 $67 = (($66) + -1)|0;
 HEAP32[$4>>2] = $67;
 $personalityslot$sroa$0$1$i = $eh$lpad$body$i$indexZ2D;$personalityslot$sroa$6$1$i = $eh$lpad$body$i$index11Z2D;
 HEAP32[$2>>2] = 0;
 ___resumeException($personalityslot$sroa$0$1$i|0);
 // unreachable;
}
function __ZN12physics_test8add_ball17h9cf94cccb50ca975E($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = +$3;
 $4 = +$4;
 var $$idx = 0, $$idx$i = 0, $$idx$i$i = 0, $$idx$val = 0, $$idx$val$i = 0, $$idx$val$i$i = 0.0, $$idx$val$i$i$i$i$i = 0, $$idx$val$i$i$i$i15$i = 0, $$idx$val$i$i72 = 0, $$idx$val$i11$i = 0, $$idx1$i$i = 0, $$idx1$i$i$i$i$i$i$i = 0, $$idx1$val$i$i = 0.0, $$idx1$val$i$i$i$i$i$i$i = 0, $$idx1$val$val$i$i$i$i$i$i$i = 0, $$idx5$val$i$i = 0, $$idx5$val$i13$i = 0, $$pre$i = 0, $10 = 0, $100 = 0;
 var $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0.0;
 var $21 = 0.0, $22 = 0.0, $23 = 0.0, $24 = 0.0, $25 = 0.0, $26 = 0.0, $27 = 0.0, $28 = 0.0, $29 = 0.0, $30 = 0.0, $31 = 0.0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;
 var $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0;
 var $96 = 0, $97 = 0, $98 = 0, $99 = 0, $_1$sroa$4$0$$sroa_idx3$i$i = 0, $_1$sroa$5$0$$sroa_idx5$i$i = 0, $_10$i$i = 0, $_15$i = 0, $_16$sroa$0$0$$sroa_idx$i = 0, $_16$sroa$4$0$$sroa_idx10$i = 0, $_16$sroa$5$0$$sroa_idx12$i = 0, $_16$sroa$6$0$$sroa_idx14$i = 0, $_24 = 0, $_36$sroa$0$0$copyload = 0, $_36$sroa$4$0$copyload = 0, $_36$sroa$6$0$copyload = 0, $_37$sroa$4$0$$sroa_idx79 = 0, $_37$sroa$5$0$$sroa_idx81 = 0, $_37$sroa$6$0$$sroa_idx83 = 0, $_37$sroa$7$0$$sroa_idx85 = 0;
 var $_37$sroa$8$0$$sroa_idx87 = 0, $_42 = 0, $_5$sroa$0$0$$sroa_idx$i$i$i$i$i = 0, $_5$sroa$0$0$copyload$i$i$i$i$i = 0.0, $_5$sroa$4$0$$sroa_idx2$i$i$i$i$i = 0, $_5$sroa$4$0$copyload$i$i$i$i$i = 0.0, $_5$sroa$5$0$$sroa_idx4$i$i$i$i$i = 0, $_5$sroa$5$0$copyload$i$i$i$i$i = 0.0, $_5$sroa$6$0$$sroa_idx6$i$i$i$i$i = 0, $_5$sroa$6$0$copyload$i$i$i$i$i = 0.0, $_8$i$i = 0, $arena$i = 0, $eh$lpad$body$index6Z2D = 0, $eh$lpad$body$indexZ2D = 0, $id = 0, $not$$i$i$i$i$i = 0, $not$$i$i$i$i$i$i = 0, $not$$i$i$i$i$i43 = 0, $not$$i$i$i$i$i74 = 0, $not$$i$i$i$i19$i = 0;
 var $output$i = 0, $personalityslot$sroa$0$0 = 0, $personalityslot$sroa$6$0 = 0, $rigid_body = 0, $switchtmp$i$i$i$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 432|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(432|0);
 $arena$i = sp + 416|0;
 $_8$i$i = sp + 408|0;
 $_10$i$i = sp + 384|0;
 $output$i = sp + 368|0;
 $_15$i = sp + 344|0;
 $rigid_body = sp + 176|0;
 $_24 = sp + 8|0;
 $id = sp + 428|0;
 $_42 = sp;
 $5 = (_malloc(4)|0);
 $6 = ($5|0)==(0|0);
 do {
  if ($6) {
   __THREW__ = 0;
   invoke_v(210);
   $7 = __THREW__; __THREW__ = 0;
  } else {
   HEAPF32[$5>>2] = 20.0;
   $8 = (_malloc(16)|0);
   $9 = ($8|0)==(0|0);
   if ($9) {
    __THREW__ = 0;
    invoke_v(210);
    $10 = __THREW__; __THREW__ = 0;
    break;
   }
   $11 = $5;
   HEAP32[$8>>2] = 1;
   $12 = ((($8)) + 4|0);
   HEAP32[$12>>2] = 1;
   $13 = ((($8)) + 8|0);
   HEAP32[$13>>2] = $11;
   $14 = ((($8)) + 12|0);
   HEAP32[$14>>2] = (928);
   $15 = $8;
   HEAP32[$_15$i>>2] = 1;
   $_16$sroa$0$0$$sroa_idx$i = ((($_15$i)) + 4|0);
   HEAPF32[$_16$sroa$0$0$$sroa_idx$i>>2] = 1256.6370849609375;
   $_16$sroa$4$0$$sroa_idx10$i = ((($_15$i)) + 8|0);
   HEAP32[$_16$sroa$4$0$$sroa_idx10$i>>2] = 0;
   $_16$sroa$5$0$$sroa_idx12$i = ((($_15$i)) + 12|0);
   HEAP32[$_16$sroa$5$0$$sroa_idx12$i>>2] = 0;
   $_16$sroa$6$0$$sroa_idx14$i = ((($_15$i)) + 16|0);
   HEAPF32[$_16$sroa$6$0$$sroa_idx14$i>>2] = 251327.421875;
   __THREW__ = 0;
   invoke_viiid(283,($rigid_body|0),($15|0),($_15$i|0),0.5);
   $16 = __THREW__; __THREW__ = 0;
   $17 = $16&1;
   if (!($17)) {
    $18 = ((($rigid_body)) + 24|0);
    $19 = ((($rigid_body)) + 28|0);
    $20 = +HEAPF32[$18>>2];
    $21 = +HEAPF32[$19>>2];
    $22 = $20 + $3;
    $23 = $21 + $4;
    HEAPF32[$18>>2] = $22;
    HEAPF32[$19>>2] = $23;
    $$idx$i$i = ((($rigid_body)) + 56|0);
    $$idx$val$i$i = +HEAPF32[$$idx$i$i>>2];
    $$idx1$i$i = ((($rigid_body)) + 60|0);
    $$idx1$val$i$i = +HEAPF32[$$idx1$i$i>>2];
    $_5$sroa$0$0$$sroa_idx$i$i$i$i$i = ((($rigid_body)) + 8|0);
    $_5$sroa$0$0$copyload$i$i$i$i$i = +HEAPF32[$_5$sroa$0$0$$sroa_idx$i$i$i$i$i>>2];
    $_5$sroa$4$0$$sroa_idx2$i$i$i$i$i = ((($rigid_body)) + 12|0);
    $_5$sroa$4$0$copyload$i$i$i$i$i = +HEAPF32[$_5$sroa$4$0$$sroa_idx2$i$i$i$i$i>>2];
    $_5$sroa$5$0$$sroa_idx4$i$i$i$i$i = ((($rigid_body)) + 16|0);
    $_5$sroa$5$0$copyload$i$i$i$i$i = +HEAPF32[$_5$sroa$5$0$$sroa_idx4$i$i$i$i$i>>2];
    $_5$sroa$6$0$$sroa_idx6$i$i$i$i$i = ((($rigid_body)) + 20|0);
    $_5$sroa$6$0$copyload$i$i$i$i$i = +HEAPF32[$_5$sroa$6$0$$sroa_idx6$i$i$i$i$i>>2];
    $24 = $$idx$val$i$i * $_5$sroa$0$0$copyload$i$i$i$i$i;
    $25 = $$idx1$val$i$i * $_5$sroa$5$0$copyload$i$i$i$i$i;
    $26 = $24 + $25;
    $27 = $$idx$val$i$i * $_5$sroa$4$0$copyload$i$i$i$i$i;
    $28 = $$idx1$val$i$i * $_5$sroa$6$0$copyload$i$i$i$i$i;
    $29 = $27 + $28;
    $30 = $22 + $26;
    $31 = $23 + $29;
    $32 = ((($rigid_body)) + 64|0);
    HEAPF32[$32>>2] = $30;
    $33 = ((($rigid_body)) + 68|0);
    HEAPF32[$33>>2] = $31;
    _memcpy(($_24|0),($rigid_body|0),168)|0;
    __THREW__ = 0;
    $34 = (invoke_iii(284,($2|0),($_24|0))|0);
    $35 = __THREW__; __THREW__ = 0;
    $36 = $35&1;
    L8: do {
     if ($36) {
      label = 40;
     } else {
      $$idx = ((($1)) + 8|0);
      $$idx$val = HEAP32[$$idx>>2]|0;
      HEAP32[$id>>2] = $$idx$val;
      $37 = $34;
      $$idx$i = ((($1)) + 4|0);
      $$idx$val$i = HEAP32[$$idx$i>>2]|0;
      $38 = ($$idx$val|0)==($$idx$val$i|0);
      do {
       if ($38) {
        __THREW__ = 0;
        invoke_vi(242,($1|0));
        $63 = __THREW__; __THREW__ = 0;
        $64 = $63&1;
        if (!($64)) {
         $$pre$i = HEAP32[$$idx>>2]|0;
         $67 = $$pre$i;
         break;
        }
        $39 = ___cxa_find_matching_catch_2()|0;
        $40 = tempRet0;
        $41 = HEAP32[$37>>2]|0;
        $42 = (($41) + -1)|0;
        HEAP32[$37>>2] = $42;
        $43 = ($42|0)==(0);
        if (!($43)) {
         $eh$lpad$body$index6Z2D = $40;$eh$lpad$body$indexZ2D = $39;
         break L8;
        }
        $44 = ((($37)) + 16|0);
        $45 = HEAP32[$44>>2]|0;
        $46 = HEAP32[$45>>2]|0;HEAP32[$45>>2] = (($46-1)|0);
        $47 = ($46|0)==(1);
        if ($47) {
         /* fence */;
         __THREW__ = 0;
         invoke_vi(241,($44|0));
         $48 = __THREW__; __THREW__ = 0;
         $49 = $48&1;
         if ($49) {
          label = 40;
          break L8;
         }
        }
        $50 = ((($37)) + 172|0);
        $51 = HEAP32[$50>>2]|0;
        $switchtmp$i$i$i$i$i$i = ($51|0)==(0|0);
        if (!($switchtmp$i$i$i$i$i$i)) {
         $$idx1$i$i$i$i$i$i$i = ((($37)) + 176|0);
         $$idx1$val$i$i$i$i$i$i$i = HEAP32[$$idx1$i$i$i$i$i$i$i>>2]|0;
         $$idx1$val$val$i$i$i$i$i$i$i = HEAP32[$$idx1$val$i$i$i$i$i$i$i>>2]|0;
         __THREW__ = 0;
         invoke_vi($$idx1$val$val$i$i$i$i$i$i$i|0,($51|0));
         $52 = __THREW__; __THREW__ = 0;
         $53 = $52&1;
         if ($53) {
          label = 40;
          break L8;
         }
         $54 = HEAP32[$$idx1$i$i$i$i$i$i$i>>2]|0;
         $55 = ((($54)) + 4|0);
         $56 = HEAP32[$55>>2]|0;
         $57 = ($56|0)==(0);
         if (!($57)) {
          _free($51);
         }
        }
        $58 = ((($37)) + 4|0);
        $59 = HEAP32[$58>>2]|0;
        $60 = (($59) + -1)|0;
        HEAP32[$58>>2] = $60;
        $61 = ($60|0)==(0);
        if (!($61)) {
         $eh$lpad$body$index6Z2D = $40;$eh$lpad$body$indexZ2D = $39;
         break L8;
        }
        $62 = $34;
        _free($62);
        $eh$lpad$body$index6Z2D = $40;$eh$lpad$body$indexZ2D = $39;
        break L8;
       } else {
        $67 = $$idx$val;
       }
      } while(0);
      $65 = HEAP32[$1>>2]|0;
      $66 = (($65) + ($67<<2)|0);
      HEAP32[$66>>2] = $34;
      $68 = HEAP32[$$idx>>2]|0;
      $69 = (($68) + 1)|0;
      HEAP32[$$idx>>2] = $69;
      $70 = $id;
      HEAP32[$_42>>2] = $70;
      $71 = ((($_42)) + 4|0);
      HEAP32[$71>>2] = (264);
      HEAP32[$output$i>>2] = 1;
      $_1$sroa$4$0$$sroa_idx3$i$i = ((($output$i)) + 4|0);
      HEAP32[$_1$sroa$4$0$$sroa_idx3$i$i>>2] = 0;
      $_1$sroa$5$0$$sroa_idx5$i$i = ((($output$i)) + 8|0);
      HEAP32[$_1$sroa$5$0$$sroa_idx5$i$i>>2] = 0;
      HEAP32[$_8$i$i>>2] = $output$i;
      HEAP32[$_10$i$i>>2] = 5068;
      $_37$sroa$4$0$$sroa_idx79 = ((($_10$i$i)) + 4|0);
      HEAP32[$_37$sroa$4$0$$sroa_idx79>>2] = 2;
      $_37$sroa$5$0$$sroa_idx81 = ((($_10$i$i)) + 8|0);
      HEAP32[$_37$sroa$5$0$$sroa_idx81>>2] = 5084;
      $_37$sroa$6$0$$sroa_idx83 = ((($_10$i$i)) + 12|0);
      HEAP32[$_37$sroa$6$0$$sroa_idx83>>2] = 1;
      $_37$sroa$7$0$$sroa_idx85 = ((($_10$i$i)) + 16|0);
      HEAP32[$_37$sroa$7$0$$sroa_idx85>>2] = $_42;
      $_37$sroa$8$0$$sroa_idx87 = ((($_10$i$i)) + 20|0);
      HEAP32[$_37$sroa$8$0$$sroa_idx87>>2] = 1;
      __THREW__ = 0;
      (invoke_iiii(244,($_8$i$i|0),(1864|0),($_10$i$i|0))|0);
      $72 = __THREW__; __THREW__ = 0;
      $73 = $72&1;
      if ($73) {
       $74 = ___cxa_find_matching_catch_2()|0;
       $75 = tempRet0;
       $76 = HEAP32[$_1$sroa$4$0$$sroa_idx3$i$i>>2]|0;
       $not$$i$i$i$i$i$i = ($76|0)==(0);
       if ($not$$i$i$i$i$i$i) {
        $eh$lpad$body$index6Z2D = $75;$eh$lpad$body$indexZ2D = $74;
        break;
       }
       $77 = HEAP32[$output$i>>2]|0;
       _free($77);
       $eh$lpad$body$index6Z2D = $75;$eh$lpad$body$indexZ2D = $74;
       break;
      }
      $_36$sroa$0$0$copyload = HEAP32[$output$i>>2]|0;
      $_36$sroa$4$0$copyload = HEAP32[$_1$sroa$4$0$$sroa_idx3$i$i>>2]|0;
      $_36$sroa$6$0$copyload = HEAP32[$_1$sroa$5$0$$sroa_idx5$i$i>>2]|0;
      HEAP32[$arena$i>>2] = 1;
      $78 = ((($arena$i)) + 4|0);
      HEAP32[$78>>2] = 0;
      $79 = ((($arena$i)) + 8|0);
      HEAP32[$79>>2] = 0;
      $80 = HEAP32[$0>>2]|0;
      __THREW__ = 0;
      $81 = (invoke_iiii(285,($_36$sroa$0$0$copyload|0),($_36$sroa$6$0$copyload|0),($arena$i|0))|0);
      $82 = __THREW__; __THREW__ = 0;
      $83 = $82&1;
      if ($83) {
       $95 = ___cxa_find_matching_catch_2()|0;
       $96 = tempRet0;
       $$idx$val$i$i72 = HEAP32[$arena$i>>2]|0;
       $$idx5$val$i$i = HEAP32[$79>>2]|0;
       $97 = (($$idx$val$i$i72) + ($$idx5$val$i$i<<3)|0);
       $98 = ($$idx5$val$i$i|0)==(0);
       if (!($98)) {
        $99 = $$idx$val$i$i72;
        while(1) {
         $$idx$val$i$i$i$i$i = HEAP32[$99>>2]|0;
         HEAP8[$$idx$val$i$i$i$i$i>>0] = 0;
         $100 = ((($99)) + 4|0);
         $101 = HEAP32[$100>>2]|0;
         $102 = ($101|0)==(0);
         if (!($102)) {
          $103 = HEAP32[$99>>2]|0;
          _free($103);
         }
         $104 = ((($99)) + 8|0);
         $105 = ($104|0)==($97|0);
         if ($105) {
          break;
         } else {
          $99 = $104;
         }
        }
       }
       $106 = HEAP32[$78>>2]|0;
       $not$$i$i$i$i$i74 = ($106|0)==(0);
       if (!($not$$i$i$i$i$i74)) {
        _free($$idx$val$i$i72);
       }
       $not$$i$i$i$i$i = ($_36$sroa$4$0$copyload|0)==(0);
       if ($not$$i$i$i$i$i) {
        $personalityslot$sroa$0$0 = $95;$personalityslot$sroa$6$0 = $96;
        ___resumeException($personalityslot$sroa$0$0|0);
        // unreachable;
       }
       _free($_36$sroa$0$0$copyload);
       $personalityslot$sroa$0$0 = $95;$personalityslot$sroa$6$0 = $96;
       ___resumeException($personalityslot$sroa$0$0|0);
       // unreachable;
      } else {
       $84 = _emscripten_asm_const_iii(0, ($80|0), ($81|0))|0;
       $$idx$val$i11$i = HEAP32[$arena$i>>2]|0;
       $$idx5$val$i13$i = HEAP32[$79>>2]|0;
       $85 = (($$idx$val$i11$i) + ($$idx5$val$i13$i<<3)|0);
       $86 = ($$idx5$val$i13$i|0)==(0);
       if (!($86)) {
        $87 = $$idx$val$i11$i;
        while(1) {
         $$idx$val$i$i$i$i15$i = HEAP32[$87>>2]|0;
         HEAP8[$$idx$val$i$i$i$i15$i>>0] = 0;
         $88 = ((($87)) + 4|0);
         $89 = HEAP32[$88>>2]|0;
         $90 = ($89|0)==(0);
         if (!($90)) {
          $91 = HEAP32[$87>>2]|0;
          _free($91);
         }
         $92 = ((($87)) + 8|0);
         $93 = ($92|0)==($85|0);
         if ($93) {
          break;
         } else {
          $87 = $92;
         }
        }
       }
       $94 = HEAP32[$78>>2]|0;
       $not$$i$i$i$i19$i = ($94|0)==(0);
       if (!($not$$i$i$i$i19$i)) {
        _free($$idx$val$i11$i);
       }
       $not$$i$i$i$i$i43 = ($_36$sroa$4$0$copyload|0)==(0);
       if ($not$$i$i$i$i$i43) {
        STACKTOP = sp;return;
       }
       _free($_36$sroa$0$0$copyload);
       STACKTOP = sp;return;
      }
     }
    } while(0);
    if ((label|0) == 40) {
     $109 = ___cxa_find_matching_catch_2()|0;
     $110 = tempRet0;
     $eh$lpad$body$index6Z2D = $110;$eh$lpad$body$indexZ2D = $109;
    }
    $personalityslot$sroa$0$0 = $eh$lpad$body$indexZ2D;$personalityslot$sroa$6$0 = $eh$lpad$body$index6Z2D;
    ___resumeException($personalityslot$sroa$0$0|0);
    // unreachable;
   }
  }
 } while(0);
 $107 = ___cxa_find_matching_catch_2()|0;
 $108 = tempRet0;
 $personalityslot$sroa$0$0 = $107;$personalityslot$sroa$6$0 = $108;
 ___resumeException($personalityslot$sroa$0$0|0);
 // unreachable;
}
function __ZN12physics_test8download17h6f62d93dd292f3b4E($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$$i$i = 0, $$fca$0$gep$i$i$i = 0, $$fca$0$load$i$i$i = 0, $$idx$val$i$i = 0, $$idx$val$i$i$i = 0, $$idx$val$i$i$i$i$i = 0, $$idx$val$i$i$i$i17$i = 0, $$idx$val$i101$i$i = 0, $$idx$val$i107$i$i = 0, $$idx$val$i13$i = 0, $$idx$val$i44$i$i = 0, $$idx$val$i56$i$i = 0, $$idx$val$i65$i$i = 0, $$idx$val$i71$i$i = 0, $$idx$val$i80$i$i = 0, $$idx$val$i89$i$i = 0, $$idx$val$i95$i$i = 0, $$idx5$val$i$i = 0, $$idx5$val$i15$i = 0, $$masked$i$i = 0;
 var $$masked36$i$i = 0, $$masked37$i$i = 0, $$pre$i$i$i = 0, $$pre$i102$i$i = 0, $$pre$i108$i$i = 0, $$pre$i45$i$i = 0, $$pre$i57$i$i = 0, $$pre$i66$i$i = 0, $$pre$i72$i$i = 0, $$pre$i81$i$i = 0, $$pre$i90$i$i = 0, $$pre$i96$i$i = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0;
 var $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0;
 var $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0;
 var $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0;
 var $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0;
 var $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0;
 var $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0;
 var $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0;
 var $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0;
 var $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0;
 var $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0;
 var $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0;
 var $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $_1$sroa$4$0$$sroa_idx3$i$i = 0, $_1$sroa$5$0$$sroa_idx5$i$i = 0, $_10$i$i = 0, $_10$i$i$i = 0, $_181$sroa$0$0$$sroa_idx$pre$phi$i$iZZZZZZ2D = 0, $_181$sroa$0$0$copyload$i$i = 0, $_181$sroa$4$0$copyload$i$i = 0, $_181$sroa$5$0$copyload$i$i = 0, $_23$sroa$0$0$copyload = 0, $_23$sroa$4$0$copyload = 0, $_23$sroa$6$0$copyload = 0, $_24$sroa$4$0$$sroa_idx72 = 0, $_24$sroa$5$0$$sroa_idx74 = 0, $_24$sroa$677$0$$sroa_idx79 = 0, $_24$sroa$7$0$$sroa_idx81 = 0;
 var $_29 = 0, $_3$i$i$i = 0, $_46 = 0, $_46$idx$val = 0, $_46$idx18 = 0, $_46$idx18$val = 0, $_6$i$i = 0, $_6$sroa$0$sroa$4$0$_6$sroa$0$0$$sroa_cast14$sroa_idx66$i$i$i = 0, $_6$sroa$0$sroa$5$0$_6$sroa$0$0$$sroa_cast14$sroa_idx68$i$i$i = 0, $_8$i$i = 0, $arena$i = 0, $data = 0, $e$sroa$4$0$$sroa_idx71$i$i$i = 0, $e$sroa$5$0$$sroa_idx73$i$i$i = 0, $e$sroa$6$0$$sroa_idx75$i$i$i = 0, $eh$lpad$body48$index10Z2D = 0, $eh$lpad$body48$indexZ2D = 0, $i$0149$i$i = 0, $lpad$phi$i$i$index = 0, $lpad$phi$i$i$index3 = 0;
 var $not$$i$i$i$i$i = 0, $not$$i$i$i$i$i$i = 0, $not$$i$i$i$i$i$i45 = 0, $not$$i$i$i$i$i22 = 0, $not$$i$i$i$i$i25 = 0, $not$$i$i$i$i$i28 = 0, $not$$i$i$i$i$i41 = 0, $not$$i$i$i$i21$i = 0, $output$i = 0, $personalityslot$sroa$0$136 = 0, $personalityslot$sroa$0$137 = 0, $personalityslot$sroa$6$134 = 0, $personalityslot$sroa$6$135 = 0, $ptr$0$i$i$i$i = 0, $raw$i$i = 0, $switch$i$i$i = 0, $switch2$i31 = 0, $trunc$i$i = 0, $trunc$i$i$clear = 0, dest = 0;
 var label = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(224|0);
 $_8$i$i = sp + 216|0;
 $_10$i$i = sp + 192|0;
 $output$i = sp + 176|0;
 $_3$i$i$i = sp + 160|0;
 $_10$i$i$i = sp + 144|0;
 $_6$i$i = sp + 72|0;
 $raw$i$i = sp + 56|0;
 $arena$i = sp + 40|0;
 $data = sp + 24|0;
 $_29 = sp + 16|0;
 $_46 = sp;
 HEAP32[$arena$i>>2] = 1;
 $5 = ((($arena$i)) + 4|0);
 HEAP32[$5>>2] = 0;
 $6 = ((($arena$i)) + 8|0);
 HEAP32[$6>>2] = 0;
 __THREW__ = 0;
 $7 = (invoke_iiii(285,(12837|0),1,($arena$i|0))|0);
 $8 = __THREW__; __THREW__ = 0;
 $9 = $8&1;
 if ($9) {
  $10 = ___cxa_find_matching_catch_2()|0;
  $23 = tempRet0;
  $$idx$val$i$i = HEAP32[$arena$i>>2]|0;
  $$idx5$val$i$i = HEAP32[$6>>2]|0;
  $24 = (($$idx$val$i$i) + ($$idx5$val$i$i<<3)|0);
  $25 = ($$idx5$val$i$i|0)==(0);
  if (!($25)) {
   $26 = $$idx$val$i$i;
   while(1) {
    $$idx$val$i$i$i$i$i = HEAP32[$26>>2]|0;
    HEAP8[$$idx$val$i$i$i$i$i>>0] = 0;
    $27 = ((($26)) + 4|0);
    $28 = HEAP32[$27>>2]|0;
    $29 = ($28|0)==(0);
    if (!($29)) {
     $30 = HEAP32[$26>>2]|0;
     _free($30);
    }
    $31 = ((($26)) + 8|0);
    $32 = ($31|0)==($24|0);
    if ($32) {
     break;
    } else {
     $26 = $31;
    }
   }
  }
  $33 = HEAP32[$5>>2]|0;
  $not$$i$i$i$i$i41 = ($33|0)==(0);
  if ($not$$i$i$i$i$i41) {
   ___resumeException($10|0);
   // unreachable;
  }
  _free($$idx$val$i$i);
  ___resumeException($10|0);
  // unreachable;
 }
 $11 = _emscripten_asm_const_ii(1, ($7|0))|0;
 $$idx$val$i13$i = HEAP32[$arena$i>>2]|0;
 $$idx5$val$i15$i = HEAP32[$6>>2]|0;
 $12 = (($$idx$val$i13$i) + ($$idx5$val$i15$i<<3)|0);
 $13 = ($$idx5$val$i15$i|0)==(0);
 if (!($13)) {
  $14 = $$idx$val$i13$i;
  while(1) {
   $$idx$val$i$i$i$i17$i = HEAP32[$14>>2]|0;
   HEAP8[$$idx$val$i$i$i$i17$i>>0] = 0;
   $15 = ((($14)) + 4|0);
   $16 = HEAP32[$15>>2]|0;
   $17 = ($16|0)==(0);
   if (!($17)) {
    $18 = HEAP32[$14>>2]|0;
    _free($18);
   }
   $19 = ((($14)) + 8|0);
   $20 = ($19|0)==($12|0);
   if ($20) {
    break;
   } else {
    $14 = $19;
   }
  }
 }
 $21 = HEAP32[$5>>2]|0;
 $not$$i$i$i$i21$i = ($21|0)==(0);
 if (!($not$$i$i$i$i21$i)) {
  _free($$idx$val$i13$i);
 }
 $22 = ($11|0)<(0);
 if ($22) {
  __ZN4core9panicking5panic17ha7507e8e32961bfeE(6500);
  // unreachable;
 }
 dest=$_6$i$i; src=13831; stop=dest+64|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
 $34 = ((($_6$i$i)) + 64|0);
 HEAP8[$34>>0] = 0;
 $35 = (($4>>>0) % 3)&-1;
 $36 = (($4) - ($35))|0;
 $37 = $36 << 2;
 $38 = (($37>>>0) / 3)&-1;
 $39 = ($35|0)==(0);
 $$$i$i = $39 ? 4 : 0;
 $40 = (($38) + ($$$i$i))|0;
 $41 = ($40|0)<(0);
 do {
  if ($41) {
   __THREW__ = 0;
   invoke_vi(220,(6432|0));
   $42 = __THREW__; __THREW__ = 0;
  } else {
   $43 = ($40|0)==(0);
   if ($43) {
    $ptr$0$i$i$i$i = (1);
   } else {
    $44 = (_malloc($40)|0);
    $45 = ($44|0)==(0|0);
    if ($45) {
     __THREW__ = 0;
     invoke_v(210);
     $46 = __THREW__; __THREW__ = 0;
     break;
    } else {
     $ptr$0$i$i$i$i = $44;
    }
   }
   $47 = $ptr$0$i$i$i$i;
   HEAP32[$raw$i$i>>2] = $47;
   $48 = ((($raw$i$i)) + 4|0);
   HEAP32[$48>>2] = $40;
   $49 = ((($raw$i$i)) + 8|0);
   HEAP32[$49>>2] = 0;
   $50 = ($36|0)==(0);
   L35: do {
    if ($50) {
     $126 = 0;
     label = 24;
    } else {
     $58 = 0;$i$0149$i$i = 0;
     while(1) {
      $51 = ($i$0149$i$i>>>0)<($4>>>0);
      if (!($51)) {
       label = 81;
       break;
      }
      $52 = (($3) + ($i$0149$i$i)|0);
      $53 = HEAP8[$52>>0]|0;
      $54 = ($53&255) >>> 2;
      $55 = $54&255;
      $56 = (($_6$i$i) + ($55)|0);
      $57 = HEAP8[$56>>0]|0;
      $$idx$val$i$i$i = HEAP32[$48>>2]|0;
      $59 = ($58|0)==($$idx$val$i$i$i|0);
      if ($59) {
       __THREW__ = 0;
       invoke_vi(286,($raw$i$i|0));
       $60 = __THREW__; __THREW__ = 0;
       $61 = $60&1;
       if ($61) {
        label = 74;
        break;
       }
       $$pre$i$i$i = HEAP32[$49>>2]|0;
       $64 = $$pre$i$i$i;
      } else {
       $64 = $58;
      }
      $62 = HEAP32[$raw$i$i>>2]|0;
      $63 = (($62) + ($64)|0);
      HEAP8[$63>>0] = $57;
      $65 = HEAP32[$49>>2]|0;
      $66 = (($65) + 1)|0;
      HEAP32[$49>>2] = $66;
      $67 = (($i$0149$i$i) + 1)|0;
      $68 = ($67>>>0)<($4>>>0);
      if (!($68)) {
       label = 30;
       break;
      }
      $70 = (($3) + ($67)|0);
      $71 = ($53 << 4)&255;
      $$masked36$i$i = $71 & 48;
      $72 = HEAP8[$70>>0]|0;
      $73 = ($72&255) >>> 4;
      $74 = $$masked36$i$i | $73;
      $75 = $74&255;
      $76 = (($_6$i$i) + ($75)|0);
      $77 = HEAP8[$76>>0]|0;
      $$idx$val$i44$i$i = HEAP32[$48>>2]|0;
      $78 = ($66|0)==($$idx$val$i44$i$i|0);
      if ($78) {
       __THREW__ = 0;
       invoke_vi(286,($raw$i$i|0));
       $79 = __THREW__; __THREW__ = 0;
       $80 = $79&1;
       if ($80) {
        label = 74;
        break;
       }
       $$pre$i45$i$i = HEAP32[$49>>2]|0;
       $83 = $$pre$i45$i$i;
      } else {
       $83 = $66;
      }
      $81 = HEAP32[$raw$i$i>>2]|0;
      $82 = (($81) + ($83)|0);
      HEAP8[$82>>0] = $77;
      $84 = HEAP32[$49>>2]|0;
      $85 = (($84) + 1)|0;
      HEAP32[$49>>2] = $85;
      $86 = (($i$0149$i$i) + 2)|0;
      $87 = ($86>>>0)<($4>>>0);
      if (!($87)) {
       label = 35;
       break;
      }
      $89 = (($3) + ($86)|0);
      $90 = ($72 << 2)&255;
      $$masked37$i$i = $90 & 60;
      $91 = HEAP8[$89>>0]|0;
      $92 = ($91&255) >>> 6;
      $93 = $$masked37$i$i | $92;
      $94 = $93&255;
      $95 = (($_6$i$i) + ($94)|0);
      $96 = HEAP8[$95>>0]|0;
      $$idx$val$i56$i$i = HEAP32[$48>>2]|0;
      $97 = ($85|0)==($$idx$val$i56$i$i|0);
      if ($97) {
       __THREW__ = 0;
       invoke_vi(286,($raw$i$i|0));
       $98 = __THREW__; __THREW__ = 0;
       $99 = $98&1;
       if ($99) {
        label = 74;
        break;
       }
       $$pre$i57$i$i = HEAP32[$49>>2]|0;
       $102 = $$pre$i57$i$i;
      } else {
       $102 = $85;
      }
      $100 = HEAP32[$raw$i$i>>2]|0;
      $101 = (($100) + ($102)|0);
      HEAP8[$101>>0] = $96;
      $103 = HEAP32[$49>>2]|0;
      $104 = (($103) + 1)|0;
      HEAP32[$49>>2] = $104;
      $105 = $91 & 63;
      $106 = $105&255;
      $107 = (($_6$i$i) + ($106)|0);
      $108 = HEAP8[$107>>0]|0;
      $$idx$val$i65$i$i = HEAP32[$48>>2]|0;
      $109 = ($104|0)==($$idx$val$i65$i$i|0);
      if ($109) {
       __THREW__ = 0;
       invoke_vi(286,($raw$i$i|0));
       $110 = __THREW__; __THREW__ = 0;
       $111 = $110&1;
       if ($111) {
        label = 74;
        break;
       }
       $$pre$i66$i$i = HEAP32[$49>>2]|0;
       $114 = $$pre$i66$i$i;
      } else {
       $114 = $104;
      }
      $112 = HEAP32[$raw$i$i>>2]|0;
      $113 = (($112) + ($114)|0);
      HEAP8[$113>>0] = $108;
      $115 = HEAP32[$49>>2]|0;
      $116 = (($115) + 1)|0;
      HEAP32[$49>>2] = $116;
      $117 = (($i$0149$i$i) + 3)|0;
      $118 = ($117>>>0)<($36>>>0);
      if ($118) {
       $58 = $116;$i$0149$i$i = $117;
      } else {
       $126 = $116;
       label = 24;
       break L35;
      }
     }
     if ((label|0) == 30) {
      __THREW__ = 0;
      invoke_viiiii(214,(14021|0),99,524,($67|0),($4|0));
      $69 = __THREW__; __THREW__ = 0;
      label = 75;
      break;
     }
     else if ((label|0) == 35) {
      __THREW__ = 0;
      invoke_viiiii(214,(14021|0),99,524,($86|0),($4|0));
      $88 = __THREW__; __THREW__ = 0;
      label = 75;
      break;
     }
     else if ((label|0) == 74) {
      $217 = ___cxa_find_matching_catch_2()|0;
      $218 = tempRet0;
      $lpad$phi$i$i$index = $217;$lpad$phi$i$i$index3 = $218;
      break;
     }
     else if ((label|0) == 81) {
      __THREW__ = 0;
      invoke_viiiii(214,(13895|0),83,164,($i$0149$i$i|0),($4|0));
      $227 = __THREW__; __THREW__ = 0;
      label = 75;
      break;
     }
    }
   } while(0);
   L63: do {
    if ((label|0) == 24) {
     $trunc$i$i = $35&255;
     $trunc$i$i$clear = $trunc$i$i & 3;
     switch ($trunc$i$i$clear<<24>>24) {
     case 2:  {
      $119 = ($36>>>0)<($4>>>0);
      if (!($119)) {
       __THREW__ = 0;
       invoke_viiiii(214,(13895|0),83,173,($36|0),($4|0));
       $226 = __THREW__; __THREW__ = 0;
       label = 75;
       break L63;
      }
      $120 = (($3) + ($36)|0);
      $121 = HEAP8[$120>>0]|0;
      $122 = ($121&255) >>> 2;
      $123 = $122&255;
      $124 = (($_6$i$i) + ($123)|0);
      $125 = HEAP8[$124>>0]|0;
      $$idx$val$i71$i$i = HEAP32[$48>>2]|0;
      $127 = ($126|0)==($$idx$val$i71$i$i|0);
      if ($127) {
       __THREW__ = 0;
       invoke_vi(286,($raw$i$i|0));
       $128 = __THREW__; __THREW__ = 0;
       $129 = $128&1;
       if ($129) {
        label = 75;
        break L63;
       }
       $$pre$i72$i$i = HEAP32[$49>>2]|0;
       $132 = $$pre$i72$i$i;
      } else {
       $132 = $126;
      }
      $130 = HEAP32[$raw$i$i>>2]|0;
      $131 = (($130) + ($132)|0);
      HEAP8[$131>>0] = $125;
      $133 = HEAP32[$49>>2]|0;
      $134 = (($133) + 1)|0;
      HEAP32[$49>>2] = $134;
      $135 = (($36) + 1)|0;
      $136 = ($135>>>0)<($4>>>0);
      if (!($136)) {
       __THREW__ = 0;
       invoke_viiiii(214,(14021|0),99,524,($135|0),($4|0));
       $137 = __THREW__; __THREW__ = 0;
       label = 75;
       break L63;
      }
      $138 = (($3) + ($135)|0);
      $139 = ($121 << 4)&255;
      $$masked$i$i = $139 & 48;
      $140 = HEAP8[$138>>0]|0;
      $141 = ($140&255) >>> 4;
      $142 = $$masked$i$i | $141;
      $143 = $142&255;
      $144 = (($_6$i$i) + ($143)|0);
      $145 = HEAP8[$144>>0]|0;
      $$idx$val$i80$i$i = HEAP32[$48>>2]|0;
      $146 = ($134|0)==($$idx$val$i80$i$i|0);
      if ($146) {
       __THREW__ = 0;
       invoke_vi(286,($raw$i$i|0));
       $147 = __THREW__; __THREW__ = 0;
       $148 = $147&1;
       if ($148) {
        label = 75;
        break L63;
       }
       $$pre$i81$i$i = HEAP32[$49>>2]|0;
       $151 = $$pre$i81$i$i;
      } else {
       $151 = $134;
      }
      $149 = HEAP32[$raw$i$i>>2]|0;
      $150 = (($149) + ($151)|0);
      HEAP8[$150>>0] = $145;
      $152 = HEAP32[$49>>2]|0;
      $153 = (($152) + 1)|0;
      HEAP32[$49>>2] = $153;
      $154 = ($140 << 2)&255;
      $155 = $154 & 60;
      $156 = $155&255;
      $157 = (($_6$i$i) + ($156)|0);
      $158 = HEAP8[$157>>0]|0;
      $$idx$val$i89$i$i = HEAP32[$48>>2]|0;
      $159 = ($153|0)==($$idx$val$i89$i$i|0);
      if ($159) {
       __THREW__ = 0;
       invoke_vi(286,($raw$i$i|0));
       $160 = __THREW__; __THREW__ = 0;
       $161 = $160&1;
       if ($161) {
        label = 75;
        break L63;
       }
       $$pre$i90$i$i = HEAP32[$49>>2]|0;
       $164 = $$pre$i90$i$i;
      } else {
       $164 = $153;
      }
      $162 = HEAP32[$raw$i$i>>2]|0;
      $163 = (($162) + ($164)|0);
      HEAP8[$163>>0] = $158;
      $165 = HEAP32[$49>>2]|0;
      $166 = (($165) + 1)|0;
      HEAP32[$49>>2] = $166;
      $257 = $166;
      break;
     }
     case 1:  {
      $167 = ($36>>>0)<($4>>>0);
      if (!($167)) {
       __THREW__ = 0;
       invoke_viiiii(214,(13895|0),83,177,($36|0),($4|0));
       $225 = __THREW__; __THREW__ = 0;
       label = 75;
       break L63;
      }
      $168 = (($3) + ($36)|0);
      $169 = HEAP8[$168>>0]|0;
      $170 = ($169&255) >>> 2;
      $171 = $170&255;
      $172 = (($_6$i$i) + ($171)|0);
      $173 = HEAP8[$172>>0]|0;
      $$idx$val$i95$i$i = HEAP32[$48>>2]|0;
      $174 = ($126|0)==($$idx$val$i95$i$i|0);
      if ($174) {
       __THREW__ = 0;
       invoke_vi(286,($raw$i$i|0));
       $175 = __THREW__; __THREW__ = 0;
       $176 = $175&1;
       if ($176) {
        label = 75;
        break L63;
       }
       $$pre$i96$i$i = HEAP32[$49>>2]|0;
       $179 = $$pre$i96$i$i;
      } else {
       $179 = $126;
      }
      $177 = HEAP32[$raw$i$i>>2]|0;
      $178 = (($177) + ($179)|0);
      HEAP8[$178>>0] = $173;
      $180 = HEAP32[$49>>2]|0;
      $181 = (($180) + 1)|0;
      HEAP32[$49>>2] = $181;
      $182 = ($169 << 4)&255;
      $183 = $182 & 48;
      $184 = $183&255;
      $185 = (($_6$i$i) + ($184)|0);
      $186 = HEAP8[$185>>0]|0;
      $$idx$val$i101$i$i = HEAP32[$48>>2]|0;
      $187 = ($181|0)==($$idx$val$i101$i$i|0);
      if ($187) {
       __THREW__ = 0;
       invoke_vi(286,($raw$i$i|0));
       $188 = __THREW__; __THREW__ = 0;
       $189 = $188&1;
       if ($189) {
        label = 75;
        break L63;
       }
       $$pre$i102$i$i = HEAP32[$49>>2]|0;
       $192 = $$pre$i102$i$i;
      } else {
       $192 = $181;
      }
      $190 = HEAP32[$raw$i$i>>2]|0;
      $191 = (($190) + ($192)|0);
      HEAP8[$191>>0] = $186;
      $193 = HEAP32[$49>>2]|0;
      $194 = (($193) + 1)|0;
      HEAP32[$49>>2] = $194;
      $257 = $194;
      break;
     }
     default: {
      $257 = $126;
     }
     }
     $195 = $35 ^ 3;
     $196 = (($195>>>0) % 3)&-1;
     $197 = ($196|0)==(0);
     L98: do {
      if ($197) {
       $_181$sroa$0$0$$sroa_idx$pre$phi$i$iZZZZZZ2D = $raw$i$i;$_181$sroa$5$0$copyload$i$i = $257;
      } else {
       $198 = $257;$208 = 1;
       while(1) {
        $$idx$val$i107$i$i = HEAP32[$48>>2]|0;
        $199 = ($198|0)==($$idx$val$i107$i$i|0);
        if ($199) {
         __THREW__ = 0;
         invoke_vi(286,($raw$i$i|0));
         $200 = __THREW__; __THREW__ = 0;
         $201 = $200&1;
         if ($201) {
          break;
         }
         $$pre$i108$i$i = HEAP32[$49>>2]|0;
         $205 = $$pre$i108$i$i;
        } else {
         $205 = $198;
        }
        $203 = HEAP32[$raw$i$i>>2]|0;
        $204 = (($203) + ($205)|0);
        HEAP8[$204>>0] = 61;
        $206 = HEAP32[$49>>2]|0;
        $207 = (($206) + 1)|0;
        HEAP32[$49>>2] = $207;
        $209 = ($208>>>0)<($196>>>0);
        $210 = (($208) + 1)|0;
        if ($209) {
         $198 = $207;$208 = $210;
        } else {
         $_181$sroa$0$0$$sroa_idx$pre$phi$i$iZZZZZZ2D = $raw$i$i;$_181$sroa$5$0$copyload$i$i = $207;
         break L98;
        }
       }
       $215 = ___cxa_find_matching_catch_2()|0;
       $216 = tempRet0;
       $lpad$phi$i$i$index = $215;$lpad$phi$i$i$index3 = $216;
       break L63;
      }
     } while(0);
     $_181$sroa$0$0$copyload$i$i = HEAP32[$_181$sroa$0$0$$sroa_idx$pre$phi$i$iZZZZZZ2D>>2]|0;
     $_181$sroa$4$0$copyload$i$i = HEAP32[$48>>2]|0;
     __ZN4core3str9from_utf817hf86f38bfbc8504d1E($_3$i$i$i,$_181$sroa$0$0$copyload$i$i,$_181$sroa$5$0$copyload$i$i);
     $202 = HEAP32[$_3$i$i$i>>2]|0;
     $switch$i$i$i = ($202|0)==(1);
     if ($switch$i$i$i) {
      $$fca$0$gep$i$i$i = ((($_3$i$i$i)) + 4|0);
      $$fca$0$load$i$i$i = HEAP32[$$fca$0$gep$i$i$i>>2]|0;
      $211 = $_181$sroa$0$0$copyload$i$i;
      HEAP32[$_10$i$i$i>>2] = $211;
      $e$sroa$4$0$$sroa_idx71$i$i$i = ((($_10$i$i$i)) + 4|0);
      HEAP32[$e$sroa$4$0$$sroa_idx71$i$i$i>>2] = $_181$sroa$4$0$copyload$i$i;
      $e$sroa$5$0$$sroa_idx73$i$i$i = ((($_10$i$i$i)) + 8|0);
      HEAP32[$e$sroa$5$0$$sroa_idx73$i$i$i>>2] = $_181$sroa$5$0$copyload$i$i;
      $e$sroa$6$0$$sroa_idx75$i$i$i = ((($_10$i$i$i)) + 12|0);
      HEAP32[$e$sroa$6$0$$sroa_idx75$i$i$i>>2] = $$fca$0$load$i$i$i;
      __THREW__ = 0;
      invoke_vi(287,($_10$i$i$i|0));
      $212 = __THREW__; __THREW__ = 0;
      $213 = ___cxa_find_matching_catch_2()|0;
      $214 = tempRet0;
      $personalityslot$sroa$0$136 = $213;$personalityslot$sroa$6$134 = $214;
      ___resumeException($personalityslot$sroa$0$136|0);
      // unreachable;
     }
     $228 = $_181$sroa$0$0$copyload$i$i;
     HEAP32[$data>>2] = $228;
     $_6$sroa$0$sroa$4$0$_6$sroa$0$0$$sroa_cast14$sroa_idx66$i$i$i = ((($data)) + 4|0);
     HEAP32[$_6$sroa$0$sroa$4$0$_6$sroa$0$0$$sroa_cast14$sroa_idx66$i$i$i>>2] = $_181$sroa$4$0$copyload$i$i;
     $_6$sroa$0$sroa$5$0$_6$sroa$0$0$$sroa_cast14$sroa_idx68$i$i$i = ((($data)) + 8|0);
     HEAP32[$_6$sroa$0$sroa$5$0$_6$sroa$0$0$$sroa_cast14$sroa_idx68$i$i$i>>2] = $_181$sroa$5$0$copyload$i$i;
     $229 = $data;
     HEAP32[$_29>>2] = $229;
     $230 = ((($_29)) + 4|0);
     HEAP32[$230>>2] = (288);
     HEAP32[$output$i>>2] = 1;
     $_1$sroa$4$0$$sroa_idx3$i$i = ((($output$i)) + 4|0);
     HEAP32[$_1$sroa$4$0$$sroa_idx3$i$i>>2] = 0;
     $_1$sroa$5$0$$sroa_idx5$i$i = ((($output$i)) + 8|0);
     HEAP32[$_1$sroa$5$0$$sroa_idx5$i$i>>2] = 0;
     HEAP32[$_8$i$i>>2] = $output$i;
     HEAP32[$_10$i$i>>2] = 5152;
     $_24$sroa$4$0$$sroa_idx72 = ((($_10$i$i)) + 4|0);
     HEAP32[$_24$sroa$4$0$$sroa_idx72>>2] = 1;
     $_24$sroa$5$0$$sroa_idx74 = ((($_10$i$i)) + 8|0);
     HEAP32[$_24$sroa$5$0$$sroa_idx74>>2] = 0;
     $_24$sroa$677$0$$sroa_idx79 = ((($_10$i$i)) + 16|0);
     HEAP32[$_24$sroa$677$0$$sroa_idx79>>2] = $_29;
     $_24$sroa$7$0$$sroa_idx81 = ((($_10$i$i)) + 20|0);
     HEAP32[$_24$sroa$7$0$$sroa_idx81>>2] = 1;
     __THREW__ = 0;
     (invoke_iiii(244,($_8$i$i|0),(1864|0),($_10$i$i|0))|0);
     $231 = __THREW__; __THREW__ = 0;
     $232 = $231&1;
     do {
      if ($232) {
       $233 = ___cxa_find_matching_catch_2()|0;
       $234 = tempRet0;
       $235 = HEAP32[$_1$sroa$4$0$$sroa_idx3$i$i>>2]|0;
       $not$$i$i$i$i$i$i45 = ($235|0)==(0);
       if ($not$$i$i$i$i$i$i45) {
        $eh$lpad$body48$index10Z2D = $234;$eh$lpad$body48$indexZ2D = $233;
        label = 100;
       } else {
        $236 = HEAP32[$output$i>>2]|0;
        _free($236);
        $eh$lpad$body48$index10Z2D = $234;$eh$lpad$body48$indexZ2D = $233;
        label = 100;
       }
      } else {
       $_23$sroa$0$0$copyload = HEAP32[$output$i>>2]|0;
       $_23$sroa$4$0$copyload = HEAP32[$_1$sroa$4$0$$sroa_idx3$i$i>>2]|0;
       $_23$sroa$6$0$copyload = HEAP32[$_1$sroa$5$0$$sroa_idx5$i$i>>2]|0;
       __THREW__ = 0;
       invoke_viiiii(289,($11|0),(12838|0),4,($_23$sroa$0$0$copyload|0),($_23$sroa$6$0$copyload|0));
       $237 = __THREW__; __THREW__ = 0;
       $238 = $237&1;
       if ($238) {
        $255 = ___cxa_find_matching_catch_2()|0;
        $256 = tempRet0;
        $not$$i$i$i$i$i = ($_23$sroa$4$0$copyload|0)==(0);
        if ($not$$i$i$i$i$i) {
         $personalityslot$sroa$0$137 = $255;$personalityslot$sroa$6$135 = $256;
         break;
        }
        _free($_23$sroa$0$0$copyload);
        $personalityslot$sroa$0$137 = $255;$personalityslot$sroa$6$135 = $256;
        break;
       }
       $not$$i$i$i$i$i28 = ($_23$sroa$4$0$copyload|0)==(0);
       if (!($not$$i$i$i$i$i28)) {
        _free($_23$sroa$0$0$copyload);
       }
       __THREW__ = 0;
       invoke_viiiii(289,($11|0),(12842|0),8,($1|0),($2|0));
       $239 = __THREW__; __THREW__ = 0;
       $240 = $239&1;
       do {
        if (!($240)) {
         __THREW__ = 0;
         invoke_viii(282,($11|0),(12850|0),14);
         $241 = __THREW__; __THREW__ = 0;
         $242 = $241&1;
         if (!($242)) {
          __THREW__ = 0;
          invoke_viiii(280,($_46|0),($0|0),(12864|0),4);
          $243 = __THREW__; __THREW__ = 0;
          $244 = $243&1;
          if (!($244)) {
           $_46$idx$val = HEAP32[$_46>>2]|0;
           $switch2$i31 = ($_46$idx$val|0)==(0);
           if ($switch2$i31) {
            __THREW__ = 0;
            invoke_vi(220,(6500|0));
            $245 = __THREW__; __THREW__ = 0;
            break;
           }
           $_46$idx18 = ((($_46)) + 4|0);
           $_46$idx18$val = HEAP32[$_46$idx18>>2]|0;
           $246 = _emscripten_asm_const_iii(2, ($_46$idx18$val|0), ($11|0))|0;
           $247 = _emscripten_asm_const_ii(3, ($11|0))|0;
           $248 = _emscripten_asm_const_iii(4, ($_46$idx18$val|0), ($11|0))|0;
           $249 = HEAP32[$_6$sroa$0$sroa$4$0$_6$sroa$0$0$$sroa_cast14$sroa_idx66$i$i$i>>2]|0;
           $not$$i$i$i$i$i25 = ($249|0)==(0);
           if ($not$$i$i$i$i$i25) {
            STACKTOP = sp;return;
           }
           $250 = HEAP32[$data>>2]|0;
           _free($250);
           STACKTOP = sp;return;
          }
         }
        }
       } while(0);
       $253 = ___cxa_find_matching_catch_2()|0;
       $254 = tempRet0;
       $eh$lpad$body48$index10Z2D = $254;$eh$lpad$body48$indexZ2D = $253;
       label = 100;
      }
     } while(0);
     if ((label|0) == 100) {
      $personalityslot$sroa$0$137 = $eh$lpad$body48$indexZ2D;$personalityslot$sroa$6$135 = $eh$lpad$body48$index10Z2D;
     }
     $251 = HEAP32[$_6$sroa$0$sroa$4$0$_6$sroa$0$0$$sroa_cast14$sroa_idx66$i$i$i>>2]|0;
     $not$$i$i$i$i$i22 = ($251|0)==(0);
     if ($not$$i$i$i$i$i22) {
      $personalityslot$sroa$0$136 = $personalityslot$sroa$0$137;$personalityslot$sroa$6$134 = $personalityslot$sroa$6$135;
      ___resumeException($personalityslot$sroa$0$136|0);
      // unreachable;
     }
     $252 = HEAP32[$data>>2]|0;
     _free($252);
     $personalityslot$sroa$0$136 = $personalityslot$sroa$0$137;$personalityslot$sroa$6$134 = $personalityslot$sroa$6$135;
     ___resumeException($personalityslot$sroa$0$136|0);
     // unreachable;
    }
   } while(0);
   if ((label|0) == 75) {
    $219 = ___cxa_find_matching_catch_2()|0;
    $220 = tempRet0;
    $lpad$phi$i$i$index = $219;$lpad$phi$i$i$index3 = $220;
   }
   $221 = HEAP32[$48>>2]|0;
   $not$$i$i$i$i$i$i = ($221|0)==(0);
   if ($not$$i$i$i$i$i$i) {
    $personalityslot$sroa$0$136 = $lpad$phi$i$i$index;$personalityslot$sroa$6$134 = $lpad$phi$i$i$index3;
    ___resumeException($personalityslot$sroa$0$136|0);
    // unreachable;
   }
   $222 = HEAP32[$raw$i$i>>2]|0;
   _free($222);
   $personalityslot$sroa$0$136 = $lpad$phi$i$i$index;$personalityslot$sroa$6$134 = $lpad$phi$i$i$index3;
   ___resumeException($personalityslot$sroa$0$136|0);
   // unreachable;
  }
 } while(0);
 $223 = ___cxa_find_matching_catch_2()|0;
 $224 = tempRet0;
 $personalityslot$sroa$0$136 = $223;$personalityslot$sroa$6$134 = $224;
 ___resumeException($personalityslot$sroa$0$136|0);
 // unreachable;
}
function __ZN12physics_test4main17h4f69150419e136eaE() {
 var $$arith = 0, $$fca$0$0$0$0$load155 = 0, $$idx$i$i$i = 0, $$idx$i18$i = 0, $$idx$i29$i = 0, $$idx$val$i$i$i$i = 0, $$idx$val$i$i$i$i$i = 0, $$idx$val$i$i$i$i$i$i$i = 0, $$idx$val$i$i$i$i$i218 = 0, $$idx$val$i$i$i$i$i252 = 0, $$idx$val$i$i$i$i10$i = 0, $$idx$val$i$i$i$i21$i = 0, $$idx$val$i$i$i$i23$i = 0, $$idx$val$i$i$i$i269 = 0, $$idx$val$i$i$i$i34$i = 0, $$idx$val$i$i$i147$i$i = 0, $$idx$val$i$i$i67$i$i$i$i = 0, $$idx$val$i$i216 = 0, $$idx$val$i$i248 = 0, $$idx$val$i$i588 = 0;
 var $$idx$val$i$i611 = 0, $$idx$val$i$i635 = 0, $$idx$val$i$i658 = 0, $$idx$val$i$i93$i = 0.0, $$idx$val$i17$i = 0, $$idx$val$i19$i = 0, $$idx$val$i220 = 0, $$idx$val$i260 = 0, $$idx$val$i299 = 0, $$idx$val$i30$i = 0, $$idx$val$i6$i = 0, $$idx1$i$i$i = 0, $$idx1$i$i$i$i$i$i$i = 0, $$idx1$i$i$i$i$i$i$i$i = 0, $$idx1$i$i$i$i$i$i$i72$i = 0, $$idx1$i$i$i$i$i$i$i99$i = 0, $$idx1$i7$i$i$i$i = 0, $$idx1$val$i$i$i = 0.0, $$idx1$val$i$i$i$i$i$i$i = 0, $$idx1$val$i$i$i$i$i$i$i$i = 0;
 var $$idx1$val$i$i$i$i$i$i$i100$i = 0, $$idx1$val$i$i$i$i$i$i$i73$i = 0, $$idx1$val$i8$i$i$i$i = 0, $$idx1$val$val$i$i$i = 0, $$idx1$val$val$i$i$i$i = 0, $$idx1$val$val$i$i$i$i$i$i$i = 0, $$idx1$val$val$i$i$i$i$i$i$i$i = 0, $$idx1$val$val$i$i$i$i$i$i$i101$i = 0, $$idx1$val$val$i$i$i$i$i$i$i74$i = 0, $$idx1$val$val$i9$i$i$i$i = 0, $$idx2$val$i$i = 0, $$idx2$val$i$i$i$i = 0, $$idx2$val$i$i$i$i$i = 0, $$idx2$val$i$i$i$i$i$i$i = 0, $$idx2$val$i$i$i$i$i278 = 0, $$idx2$val$i$i$i$i273 = 0, $$idx2$val$i$i$i69$i$i$i$i = 0, $$idx3$val$i$i = 0, $$idx3$val$i$i$i$i = 0, $$idx3$val$i$i$i$i$i = 0;
 var $$idx3$val$i$i$i$i$i$i$i = 0, $$idx3$val$i$i$i$i$i277 = 0, $$idx3$val$i$i$i$i272 = 0, $$idx3$val$i$i$i68$i$i$i$i = 0, $$idx5$val$i = 0, $$idx5$val$i$i = 0, $$idx5$val$i$i249 = 0, $$idx5$val$i$i590 = 0, $$idx5$val$i$i613 = 0, $$idx5$val$i$i637 = 0, $$idx5$val$i19$i = 0, $$idx5$val$i8$i = 0, $$overflow = 0, $$pre = 0, $$pre$i$i = 0, $$pre$i$i$i = 0, $$pre$i$i$i$i$i = 0, $$pre$i$i$i150$i$i = 0, $$pre$i$i266 = 0, $$pre332$i$i$i = 0;
 var $$pre773 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0;
 var $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0;
 var $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0;
 var $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0;
 var $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0;
 var $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0;
 var $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0;
 var $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0;
 var $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0;
 var $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0;
 var $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0;
 var $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0;
 var $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0;
 var $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0;
 var $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0;
 var $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0;
 var $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0;
 var $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0;
 var $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0;
 var $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0;
 var $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0;
 var $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0;
 var $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0;
 var $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0;
 var $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0;
 var $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0;
 var $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0;
 var $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $6 = 0, $60 = 0, $600 = 0;
 var $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0, $619 = 0;
 var $62 = 0, $620 = 0.0, $621 = 0.0, $622 = 0.0, $623 = 0.0, $624 = 0.0, $625 = 0.0, $626 = 0.0, $627 = 0.0, $628 = 0.0, $629 = 0.0, $63 = 0, $630 = 0.0, $631 = 0.0, $632 = 0, $633 = 0, $634 = 0, $635 = 0, $636 = 0, $637 = 0;
 var $638 = 0, $639 = 0, $64 = 0, $640 = 0, $641 = 0, $642 = 0, $643 = 0, $644 = 0, $645 = 0, $646 = 0, $647 = 0, $648 = 0, $649 = 0, $65 = 0, $650 = 0, $651 = 0, $652 = 0, $653 = 0, $654 = 0, $655 = 0;
 var $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0, $661 = 0, $662 = 0, $663 = 0, $664 = 0, $665 = 0, $666 = 0, $667 = 0, $668 = 0, $669 = 0, $67 = 0, $670 = 0, $671 = 0, $672 = 0, $673 = 0;
 var $674 = 0, $675 = 0, $676 = 0, $677 = 0, $678 = 0, $679 = 0, $68 = 0, $680 = 0, $681 = 0, $682 = 0, $683 = 0, $684 = 0, $685 = 0, $686 = 0, $687 = 0, $688 = 0, $689 = 0, $69 = 0, $690 = 0, $691 = 0;
 var $692 = 0, $693 = 0, $694 = 0, $695 = 0, $696 = 0, $697 = 0, $698 = 0, $699 = 0, $7 = 0, $70 = 0, $700 = 0, $701 = 0, $702 = 0, $703 = 0, $704 = 0, $705 = 0, $706 = 0, $707 = 0, $708 = 0, $709 = 0;
 var $71 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0, $714 = 0, $715 = 0, $716 = 0, $717 = 0, $718 = 0, $719 = 0, $72 = 0, $720 = 0, $721 = 0, $722 = 0, $723 = 0, $724 = 0, $725 = 0, $726 = 0, $727 = 0;
 var $728 = 0, $729 = 0, $73 = 0, $730 = 0, $731 = 0, $732 = 0, $733 = 0, $734 = 0, $735 = 0, $736 = 0, $737 = 0, $738 = 0, $739 = 0, $74 = 0, $740 = 0, $741 = 0, $742 = 0, $743 = 0, $744 = 0, $745 = 0;
 var $746 = 0, $747 = 0, $748 = 0, $749 = 0, $75 = 0, $750 = 0, $751 = 0, $752 = 0, $753 = 0, $754 = 0, $755 = 0, $756 = 0, $757 = 0, $758 = 0, $759 = 0, $76 = 0, $760 = 0, $761 = 0, $762 = 0, $763 = 0;
 var $764 = 0, $765 = 0, $766 = 0, $767 = 0, $768 = 0, $769 = 0, $77 = 0, $770 = 0, $771 = 0, $772 = 0, $773 = 0, $774 = 0, $775 = 0, $776 = 0, $777 = 0, $778 = 0, $779 = 0, $78 = 0, $780 = 0, $781 = 0;
 var $782 = 0, $783 = 0, $784 = 0, $785 = 0, $786 = 0, $787 = 0, $788 = 0, $789 = 0, $79 = 0, $790 = 0, $791 = 0, $792 = 0, $793 = 0, $794 = 0, $795 = 0, $796 = 0, $797 = 0, $798 = 0, $799 = 0, $8 = 0;
 var $80 = 0, $800 = 0, $801 = 0, $802 = 0, $803 = 0, $804 = 0, $805 = 0, $806 = 0, $807 = 0, $808 = 0, $809 = 0, $81 = 0, $810 = 0, $811 = 0, $812 = 0, $813 = 0, $814 = 0, $815 = 0, $816 = 0, $817 = 0;
 var $818 = 0, $819 = 0, $82 = 0, $820 = 0, $821 = 0, $822 = 0, $823 = 0, $824 = 0, $825 = 0, $826 = 0, $827 = 0, $828 = 0, $829 = 0, $83 = 0, $830 = 0, $831 = 0, $832 = 0, $833 = 0, $834 = 0, $835 = 0;
 var $836 = 0, $837 = 0, $838 = 0, $839 = 0, $84 = 0, $840 = 0, $841 = 0, $842 = 0, $843 = 0, $844 = 0, $845 = 0, $846 = 0, $847 = 0, $848 = 0, $849 = 0, $85 = 0, $850 = 0, $851 = 0, $852 = 0, $853 = 0;
 var $854 = 0, $855 = 0, $856 = 0, $857 = 0, $858 = 0, $859 = 0, $86 = 0, $860 = 0, $861 = 0, $862 = 0, $863 = 0, $864 = 0, $865 = 0, $866 = 0, $867 = 0, $868 = 0, $869 = 0, $87 = 0, $870 = 0, $871 = 0;
 var $872 = 0, $873 = 0, $874 = 0, $875 = 0, $876 = 0, $877 = 0, $878 = 0, $879 = 0, $88 = 0, $880 = 0, $881 = 0, $882 = 0, $883 = 0, $884 = 0, $885 = 0, $886 = 0, $887 = 0, $888 = 0, $889 = 0, $89 = 0;
 var $890 = 0, $891 = 0, $892 = 0, $893 = 0, $894 = 0, $895 = 0, $896 = 0, $897 = 0, $898 = 0, $899 = 0, $9 = 0, $90 = 0, $900 = 0, $901 = 0, $902 = 0, $903 = 0, $904 = 0, $905 = 0, $906 = 0, $907 = 0;
 var $908 = 0, $909 = 0, $91 = 0, $910 = 0, $911 = 0, $912 = 0, $913 = 0, $914 = 0, $915 = 0, $916 = 0, $917 = 0, $918 = 0, $919 = 0, $92 = 0, $920 = 0, $921 = 0, $922 = 0, $923 = 0, $924 = 0, $925 = 0;
 var $926 = 0, $927 = 0, $928 = 0, $929 = 0, $93 = 0, $930 = 0, $931 = 0, $932 = 0, $933 = 0, $934 = 0, $935 = 0, $936 = 0, $937 = 0, $938 = 0, $939 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0;
 var $99 = 0, $_1$i$i$i$sroa$11$0$$sroa_idx716 = 0, $_1$i$i$i$sroa$13$0$$sroa_idx718 = 0, $_1$i$i$i$sroa$14$0$$sroa_idx720 = 0, $_1$i$i$i$sroa$14$20$copyload = 0, $_1$i$i$i$sroa$16$0$$sroa_idx723 = 0, $_1$i$i$i$sroa$16$20$$sroa_idx724 = 0, $_1$i$i$i$sroa$16$20$copyload = 0, $_1$i$i$i$sroa$17$0$$sroa_idx726 = 0, $_1$i$i$i$sroa$17$20$$sroa_idx727 = 0, $_1$i$i$i$sroa$17$20$copyload = 0, $_1$i$i$i$sroa$17728$0$$sroa_idx730 = 0, $_1$i$i$i$sroa$17728$32$copyload = 0, $_1$i$i$i$sroa$19$0$$sroa_idx733 = 0, $_1$i$i$i$sroa$19$32$$sroa_idx734 = 0, $_1$i$i$i$sroa$19$32$copyload = 0, $_1$i$i$i$sroa$20$0$$sroa_idx736 = 0, $_1$i$i$i$sroa$20$32$$sroa_idx737 = 0, $_1$i$i$i$sroa$20$32$copyload = 0, $_1$i$i$i$sroa$20738$0$$sroa_idx740 = 0;
 var $_1$i$i$i$sroa$4$0$$sroa_idx709 = 0, $_1$i$i$i$sroa$8$0$$sroa_idx713 = 0, $_1$sroa$10$0$$sroa_idx33$i$i$i = 0, $_1$sroa$4$0$$sroa_idx16$i$i$i = 0, $_1$sroa$4$0$$sroa_idx7$i$i$i$i$i = 0, $_1$sroa$5$0$$sroa_idx19$i$i$i = 0, $_1$sroa$5$0$$sroa_idx9$i$i$i$i$i = 0, $_1$sroa$6$0$$sroa_idx21$i$i$i = 0, $_1$sroa$7$0$$sroa_idx23$i$i$i = 0, $_1$sroa$8$0$$sroa_idx$i$i$i = 0, $_1$sroa$8$i$i$i = 0, $_1$sroa$9$0$$sroa_idx$i$i$i = 0, $_1$sroa$9$i$i$i = 0, $_10$i = 0, $_10$i$i = 0, $_10$i$i$i$i = 0, $_10$i58$i = 0, $_10$i84$i = 0, $_10$sroa$0$0$$sroa_idx$i = 0, $_10$sroa$10$20$copyload132$i$i$i$i = 0;
 var $_10$sroa$12$20$$sroa_idx79$i$i$i$i = 0, $_10$sroa$12$20$copyload$i$i$i$i = 0, $_10$sroa$13$20$$sroa_idx82$i$i$i$i = 0, $_10$sroa$13$20$copyload$i$i$i$i = 0, $_10$sroa$1383$32$copyload133$i$i$i$i = 0, $_10$sroa$15$32$$sroa_idx89$i$i$i$i = 0, $_10$sroa$15$32$copyload$i$i$i$i = 0, $_10$sroa$16$32$$sroa_idx92$i$i$i$i = 0, $_10$sroa$16$32$copyload$i$i$i$i = 0, $_10$sroa$4$0$$sroa_idx$i = 0, $_10$sroa$5$0$$sroa_idx$i = 0, $_10$sroa$5$0$$sroa_idx$i$i = 0, $_10$sroa$6$0$$sroa_idx$i = 0, $_10$sroa$6$0$$sroa_idx$i$i = 0, $_12$i$i$i$i$i = 0, $_12$i4$i$i$i$i = 0, $_13$i$i$i$i = 0, $_13$i$i$i$i$i = 0, $_13$i$i$i$i$i$i = 0, $_13$i$i$i170$i$i = 0;
 var $_13$i$i15$i$i$i = 0, $_13$i$i233$i$i = 0, $_13$sroa$27$i$i$i = 0, $_13$sroa$4$0$$sroa_idx3$i$i$i$i$i$i$i$i$i$i = 0, $_13$sroa$5$0$$sroa_idx5$i$i$i$i$i$i$i$i$i$i = 0, $_13$sroa$6$i$i$i = 0, $_13$sroa$8$sroa$0$i$i$i = 0, $_14 = 0, $_14$idx$val = 0, $_14$idx167 = 0, $_14$idx167$val = 0, $_14$idx168 = 0, $_14$idx168$val466 = 0, $_15$0$idx1$phi$trans$insert$i$i$i$i$i$i$i$i$i = 0, $_15$0$in$phi$trans$insert$i$i$i$i$i$i$i$i$i = 0, $_15$i$i$i$i = 0, $_16$i = 0, $_16$sroa$0$0$$sroa_idx$i212$i$i = 0, $_17$i$i$i$i = 0, $_17$i$i$i$i$i = 0;
 var $_17$i$i$i$i$i$i = 0, $_17$i$i$i171$i$i = 0, $_17$i$i16$i$i$i = 0, $_17$i$i234$i$i = 0, $_17$sroa$5$0$$sroa_idx53$i$i$i = 0, $_18$sroa$7$0$$sroa_idx49$i$i$i = 0, $_19$sroa$0$0$$sroa_idx$i$i$i = 0, $_19$sroa$10$0$$sroa_idx$i$i$i = 0, $_19$sroa$10$i$i$i = 0, $_19$sroa$11$0$$sroa_idx37$i$i$i = 0, $_19$sroa$12$0$$sroa_idx39$i$i$i = 0, $_19$sroa$4$0$$sroa_idx16$i$i$i = 0, $_19$sroa$5$0$$sroa_idx18$i$i$i = 0, $_19$sroa$6$0$$sroa_idx$i$i$i = 0, $_19$sroa$6$i$i$i = 0, $_19$sroa$7$0$$sroa_idx25$i$i$i = 0, $_19$sroa$8$0$$sroa_idx28$i$i$i = 0, $_19$sroa$9$0$$sroa_idx30$i$i$i = 0, $_22$i$i$i$sroa$10$0$$sroa_idx681 = 0, $_22$i$i$i$sroa$7$0$$sroa_idx678 = 0;
 var $_22$sroa$0$0$$sroa_idx$i$i$i$i$i = 0, $_22$sroa$0$0$$sroa_idx$i$i$i155$i$i = 0, $_22$sroa$4$0$$sroa_idx27$i$i$i$i$i = 0, $_22$sroa$4$0$$sroa_idx27$i$i$i156$i$i = 0, $_22$sroa$5$0$$sroa_idx28$i$i$i = 0, $_22$sroa$5$0$$sroa_idx29$i$i$i$i$i = 0, $_22$sroa$5$0$$sroa_idx29$i$i$i157$i$i = 0, $_22$sroa$6$0$$sroa_idx31$i$i$i$i$i = 0, $_22$sroa$6$0$$sroa_idx31$i$i$i158$i$i = 0, $_22$sroa$7$0$$sroa_idx33$i$i$i$i$i = 0, $_22$sroa$7$0$$sroa_idx33$i$i$i159$i$i = 0, $_23$i$i$i$sroa$0$0$$sroa_idx = 0, $_23$i$i$i$sroa$10$0$$sroa_idx673 = 0, $_23$i$i$i$sroa$7$0$$sroa_idx670 = 0, $_24$i$i$i = 0, $_29$i = 0, $_30$sroa$0$0$$sroa_idx$i$i$i = 0, $_30$sroa$4$0$$sroa_idx314$i$i$i = 0, $_30$sroa$5$0$$sroa_idx316$i$i$i = 0, $_31$sroa$5$0$$sroa_idx45$i$i$i = 0;
 var $_32$sroa$5$0$$sroa_idx41$i$i$i = 0, $_4 = 0, $_4$idx$val = 0, $_4$idx171 = 0, $_4$idx171$val = 0, $_4$idx172 = 0, $_4$idx172$val = 0, $_4$sroa$10$0$$sroa_idx58$i$i$i = 0, $_4$sroa$4$0$$sroa_idx$i$i$i = 0, $_4$sroa$4$0$$sroa_idx11$i$i$i = 0, $_4$sroa$4$i$i$i = 0, $_4$sroa$5$0$$sroa_idx13$i$i$i = 0, $_4$sroa$5$0$$sroa_idx44$i$i$i = 0, $_4$sroa$6$0$$sroa_idx$i$i$i = 0, $_4$sroa$6$i$i$i = 0, $_4$sroa$7$0$$sroa_idx$i$i$i = 0, $_4$sroa$7$i$i$i = 0, $_4$sroa$8$0$$sroa_idx54$i$i$i = 0, $_4$sroa$9$0$$sroa_idx56$i$i$i = 0, $_43$sroa$0$0$copyload = 0;
 var $_43$sroa$4$0$copyload = 0, $_43$sroa$5$0$copyload = 0, $_45$sroa$4 = 0, $_45$sroa$4$8$$sroa_idx = 0, $_5$sroa$0$0$$sroa_idx$i$i$i$i$i$i = 0, $_5$sroa$0$0$copyload$i$i$i$i$i$i = 0.0, $_5$sroa$0$0$copyload36$i$i$i$i = 0, $_5$sroa$10$i$i$i$i = 0, $_5$sroa$4$0$$sroa_idx2$i$i$i$i$i$i = 0, $_5$sroa$4$0$copyload$i$i$i$i$i$i = 0.0, $_5$sroa$5$0$$sroa_idx39$i$i$i$i = 0, $_5$sroa$5$0$$sroa_idx4$i$i$i$i$i$i = 0, $_5$sroa$5$0$copyload$i$i$i$i$i$i = 0.0, $_5$sroa$5$0$copyload40$i$i$i$i = 0, $_5$sroa$541$0$$sroa_idx45$i$i$i$i = 0, $_5$sroa$541$0$copyload47$i$i$i$i = 0, $_5$sroa$6$0$$sroa_idx6$i$i$i$i$i$i = 0, $_5$sroa$6$0$copyload$i$i$i$i$i$i = 0.0, $_51$i$i = 0, $_52$i$i = 0;
 var $_54$sroa$0$0$$sroa_idx$i$i = 0, $_54$sroa$10$0$$sroa_idx309$i$i = 0, $_54$sroa$11$0$$sroa_idx311$i$i = 0, $_54$sroa$12$0$$sroa_idx313$i$i = 0, $_54$sroa$4$0$$sroa_idx292$i$i = 0, $_54$sroa$5$0$$sroa_idx295$i$i = 0, $_54$sroa$6$0$$sroa_idx297$i$i = 0, $_54$sroa$7$0$$sroa_idx299$i$i = 0, $_54$sroa$8$0$$sroa_idx$i$i = 0, $_54$sroa$8$i$i = 0, $_54$sroa$9$0$$sroa_idx$i$i = 0, $_54$sroa$9$i$i = 0, $_56$sroa$0$0$$sroa_idx$i$i = 0, $_56$sroa$4$0$$sroa_idx385$i$i = 0, $_56$sroa$5$0$$sroa_idx387$i$i = 0, $_7$i$i$i$i = 0, $_8$sroa$0$0$copyload22$i$i$i$i = 0, $_8$sroa$0$sroa$0$0$_8$sroa$0$0$$sroa_cast13$sroa_idx$i$i$i$i = 0, $_8$sroa$0$sroa$10$0$_8$sroa$0$0$$sroa_cast13$sroa_idx50$i$i$i$i = 0, $_8$sroa$0$sroa$11$0$_8$sroa$0$0$$sroa_cast13$sroa_idx52$i$i$i$i = 0;
 var $_8$sroa$0$sroa$4$0$_8$sroa$0$0$$sroa_cast13$sroa_idx39$i$i$i$i = 0, $_8$sroa$0$sroa$5$0$_8$sroa$0$0$$sroa_cast13$sroa_idx41$i$i$i$i = 0, $_8$sroa$0$sroa$6$0$_8$sroa$0$0$$sroa_cast13$sroa_idx43$i$i$i$i = 0, $_8$sroa$0$sroa$7$0$_8$sroa$0$0$$sroa_cast13$sroa_idx45$i$i$i$i = 0, $_8$sroa$0$sroa$9$0$_8$sroa$0$0$$sroa_cast13$sroa_idx48$i$i$i$i = 0, $_8$sroa$5$0$$sroa_idx25$i$i$i$i = 0, $_8$sroa$5$0$copyload26$i$i$i$i = 0, $_8$sroa$527$0$$sroa_idx31$i$i$i$i = 0, $_8$sroa$527$0$copyload33$i$i$i$i = 0, $_9 = 0, $_9$i$i$i$i$i = 0, $_9$idx$val = 0, $_9$idx169 = 0, $_9$idx169$val = 0, $_9$idx170 = 0, $_9$idx170$val465 = 0, $_9$sroa$0$0$$sroa_idx$i$i$i$i = 0, $_9$sroa$10$0$$sroa_idx11$i$i$i$i = 0, $_9$sroa$7$0$$sroa_idx8$i$i$i$i = 0, $arena$i = 0;
 var $arena$i236 = 0, $arg2$i$i$i$i = 0, $arg7$i$i$i$i = 0, $balls = 0, $balls1 = 0, $body = 0, $ccd$i$i = 0, $cond$i$i$i$i221 = 0, $cond$i$i$i$i261 = 0, $correction_mode$i$sroa$4$0$_22$sroa$0$0$$sroa_cast21$i$sroa_idx428$i$i = 0, $cworld$i$i = 0, $document = 0, $eh$lpad$body$i$i$i$index2Z2D = 0, $eh$lpad$body$i$i$i$indexZ2D = 0, $eh$lpad$body$i$i$index17Z2D = 0, $eh$lpad$body$i$i$indexZ2D = 0, $eh$lpad$body$i$index68Z2D = 0, $eh$lpad$body$i$indexZ2D = 0, $eh$lpad$body$i198$i$i$index12Z2D = 0, $eh$lpad$body$i198$i$i$indexZ2D = 0;
 var $eh$lpad$body$i288$index73Z2D = 0, $eh$lpad$body$i288$indexZ2D = 0, $eh$lpad$body114$i$i$index35Z2D = 0, $eh$lpad$body114$i$i$indexZ2D = 0, $eh$lpad$body130$i$i$index42Z2D = 0, $eh$lpad$body130$i$i$indexZ2D = 0, $eh$lpad$body200$i$i$index28Z2D = 0, $eh$lpad$body200$i$i$indexZ2D = 0, $eh$lpad$body220$i$i$index22Z2D = 0, $eh$lpad$body220$i$i$indexZ2D = 0, $eh$lpad$body5$i$i$i$index7Z2D = 0, $eh$lpad$body5$i$i$i$indexZ2D = 0, $eh$lpad$body608$index58Z2D = 0, $eh$lpad$body608$indexZ2D = 0, $extract$t154405 = 0, $joints$i$i = 0, $lpad$thr_comm$split$lp$sink$i$index48ZZ2D = 0, $lpad$thr_comm$split$lp$sink$i$indexZZ2D = 0, $narrow_phase$i$i$i = 0, $nf$i$i = 0;
 var $not$$i$i$i$i = 0, $not$$i$i$i$i$i = 0, $not$$i$i$i$i$i$i$i$i = 0, $not$$i$i$i$i$i$i$i$i$i = 0, $not$$i$i$i$i$i$i$i$i$i$i = 0, $not$$i$i$i$i$i$i$i17$i$i$i = 0, $not$$i$i$i$i$i$i$i191$i$i = 0, $not$$i$i$i$i$i$i$i23$i$i$i = 0, $not$$i$i$i$i$i$i210$i$i = 0, $not$$i$i$i$i$i$i230$i$i = 0, $not$$i$i$i$i$i$i254$i$i = 0, $not$$i$i$i$i$i$i269$i$i = 0, $not$$i$i$i$i$i$i275$i$i = 0, $not$$i$i$i$i$i$i36$i$i$i = 0, $not$$i$i$i$i$i256 = 0, $not$$i$i$i$i$i595 = 0, $not$$i$i$i$i$i618 = 0, $not$$i$i$i$i$i642 = 0, $not$$i$i$i$i1$i = 0, $not$$i$i$i$i1$i$i$i$i = 0;
 var $not$$i$i$i$i1$i$i271$i$i = 0, $not$$i$i$i$i1$i$i277$i$i = 0, $not$$i$i$i$i1$i602 = 0, $not$$i$i$i$i1$i625 = 0, $not$$i$i$i$i1$i649 = 0, $not$$i$i$i$i14$i = 0, $not$$i$i$i$i25$i = 0, $not$$i$i$i$i4$i = 0, $not$$i$i$i$i4$i605 = 0, $not$$i$i$i$i4$i628 = 0, $not$$i$i$i$i4$i652 = 0, $not$$i$i$i6$i = 0, $not$$i$i$i6$i$i598 = 0, $not$$i$i$i6$i$i621 = 0, $not$$i$i$i6$i$i645 = 0, $objects$i$i$i = 0, $personalityslot$sroa$0$0$i$i$i = 0, $personalityslot$sroa$0$0$i$i$i$i = 0, $personalityslot$sroa$0$0$i$i$i$i$i = 0, $personalityslot$sroa$0$0$i$i$i$i$i$i = 0;
 var $personalityslot$sroa$0$0$i$i$i179$i$i = 0, $personalityslot$sroa$0$0$i$i226$i$i = 0, $personalityslot$sroa$0$0$i$i24$i$i$i = 0, $personalityslot$sroa$0$0$i$i242$i$i = 0, $personalityslot$sroa$0$034$i = 0, $personalityslot$sroa$0$0397 = 0, $personalityslot$sroa$0$042$i = 0, $personalityslot$sroa$0$053$i$i$i$i = 0, $personalityslot$sroa$0$055$i$i$i$i = 0, $personalityslot$sroa$0$1$i$i$i$i = 0, $personalityslot$sroa$0$1$i$i$i$i$i$i = 0, $personalityslot$sroa$0$1$i$i$i172$i$i = 0, $personalityslot$sroa$0$1$i$i17$i$i$i = 0, $personalityslot$sroa$0$1$i$i222$i$i = 0, $personalityslot$sroa$0$1$i$i235$i$i = 0, $personalityslot$sroa$0$1403 = 0, $personalityslot$sroa$0$3$i$i = 0, $personalityslot$sroa$0$3420 = 0, $personalityslot$sroa$0$3421 = 0, $personalityslot$sroa$0$5$ph$i$i = 0;
 var $personalityslot$sroa$0$5300$ph$ph310334$i$i$i = 0, $personalityslot$sroa$0$5424448 = 0, $personalityslot$sroa$0$7$ph$i$i = 0, $personalityslot$sroa$0$7441$i$i = 0, $personalityslot$sroa$12$0396 = 0, $personalityslot$sroa$12$1402 = 0, $personalityslot$sroa$12$3418 = 0, $personalityslot$sroa$12$3419 = 0, $personalityslot$sroa$12$5422449 = 0, $personalityslot$sroa$14$0$i$i$i = 0, $personalityslot$sroa$14$5298$ph$ph311333$i$i$i = 0, $personalityslot$sroa$15$3$i$i = 0, $personalityslot$sroa$15$5$ph$i$i = 0, $personalityslot$sroa$15$7$ph$i$i = 0, $personalityslot$sroa$15$7439$i$i = 0, $personalityslot$sroa$5$052$i$i$i$i = 0, $personalityslot$sroa$5$054$i$i$i$i = 0, $personalityslot$sroa$6$0$i$i$i$i = 0, $personalityslot$sroa$6$032$i = 0, $personalityslot$sroa$6$040$i = 0;
 var $personalityslot$sroa$6$1$i$i$i$i = 0, $personalityslot$sroa$7$0$i$i$i$i = 0, $personalityslot$sroa$7$0$i$i$i$i$i = 0, $personalityslot$sroa$7$0$i$i$i$i$i$i = 0, $personalityslot$sroa$7$0$i$i$i180$i$i = 0, $personalityslot$sroa$7$0$i$i243$i$i = 0, $personalityslot$sroa$7$0$i$i25$i$i$i = 0, $personalityslot$sroa$7$1$i$i$i$i = 0, $personalityslot$sroa$7$1$i$i$i$i$i$i = 0, $personalityslot$sroa$7$1$i$i$i173$i$i = 0, $personalityslot$sroa$7$1$i$i18$i$i$i = 0, $personalityslot$sroa$7$1$i$i236$i$i = 0, $plane3$i = 0, $solver$i$i = 0, $switch2$i = 0, $switch2$i174 = 0, $switch2$i178 = 0, $switch2tmp$i$i$i$i$i$i$i$i$i$i = 0, $switchtmp$i$i$i$i$i = 0, $switchtmp$i$i$i$i$i$i = 0;
 var $switchtmp$i$i$i$i$i$i$i = 0, $switchtmp$i$i$i$i$i$i70$i = 0, $switchtmp$i$i$i$i$i$i97$i = 0, $switchtmp$i$i20$i$i$i = 0, $tmp_ret$i$i$i$i$i$i$i$i$i$i = 0, $value$i$sroa$0$0$$sroa_idx = 0, $value$i$sroa$0$0$$sroa_idx$i$i = 0, $value$i$sroa$13$0$$sroa_idx$i$i = 0, $value$i$sroa$4 = 0, $value$i$sroa$4$0$$sroa_idx$i$i = 0, $value$i$sroa$4$0$$sroa_raw_idx = 0, $value$i$sroa$5$0$$sroa_idx$i$i = 0, $value$i$sroa$9$0$$sroa_idx$i$i = 0, $world = 0, $world$i = 0, $x$i$i$i = 0, $x$i$i$sroa$4$0$$sroa_idx = 0, $x$i$i$sroa$5$0$$sroa_idx = 0, $x$i$i207$sroa$4$0$$sroa_idx = 0, $x$i$i207$sroa$5$0$$sroa_idx = 0;
 var $x$i$i207$sroa$6$0$$sroa_idx = 0, $x$i$sroa$10$0$$sroa_idx$i$i$i = 0, $x$i$sroa$15$0$$sroa_idx$i$i$i = 0, $x$i$sroa$19$0$$sroa_idx$i$i$i = 0, $x$i$sroa$21$0$$sroa_idx$i$i$i = 0, $x$i$sroa$22$0$$sroa_idx$i$i$i = 0, $x$i$sroa$23$0$$sroa_idx$i$i$i = 0, $x$i$sroa$24$0$$sroa_idx$i$i$i = 0, $x$i$sroa$25$0$$sroa_idx$i$i$i = 0, $x$i$sroa$26$0$$sroa_idx$i$i$i = 0, $x$i$sroa$27$0$$sroa_idx$i$i$i = 0, $x$i$sroa$28$0$$sroa_idx$i$i$i = 0, $x$i$sroa$29$0$$sroa_idx$i$i$i = 0, $x$i$sroa$30$0$$sroa_idx$i$i$i = 0, $x$i$sroa$31$0$$sroa_idx$i$i$i = 0, $x$i$sroa$32$0$$sroa_idx$i$i$i = 0, $x$i$sroa$33$0$$sroa_idx$i$i$i = 0, $x$i$sroa$34$0$$sroa_idx$i$i$i = 0, $x$i$sroa$35$0$$sroa_idx$i$i$i = 0, $x$i$sroa$36$0$$sroa_idx$i$i$i = 0;
 var $x$i$sroa$37$0$$sroa_idx$i$i$i = 0, $x$i$sroa$38$0$$sroa_raw_idx$i$i$i = 0, $x$i$sroa$39$0$$sroa_raw_idx$i$i$i = 0, $x$i$sroa$39$i$i$i = 0, $x$i$sroa$4$0$$sroa_idx$i$i$i = 0, $x$i$sroa$40$0$$sroa_idx$i$i$i = 0, $x$i$sroa$41$0$$sroa_idx$i$i$i = 0, $x$i$sroa$45$0$$sroa_idx$i$i$i = 0, $x$i$sroa$49$0$$sroa_idx$i$i$i = 0, $x$i$sroa$5$0$$sroa_idx$i$i$i = 0, $x$i$sroa$53$0$$sroa_idx$i$i$i = 0, $x$i$sroa$54$0$$sroa_idx$i$i$i = 0, $x$i$sroa$6$0$$sroa_raw_idx$i$i$i = 0, $x$i$sroa$6$i$i$i = 0, $x$i$sroa$8$0$$sroa_idx$i$i$i = 0, $x$i$sroa$9$0$$sroa_raw_idx$i$i$i = 0, $x$i$sroa$9$i$i$i = 0, $x$i10$i$i$i = 0, dest = 0, label = 0;
 var sp = 0, src = 0, stop = 0, temp_Float32x4_ptr = 0, temp_Int32x4_ptr = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 5168|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(5168|0);
 $arena$i236 = sp + 3840|0;
 $arena$i = sp + 3824|0;
 $value$i$sroa$4 = sp + 4556|0;
 $_10$i84$i = sp + 3800|0;
 $_10$i58$i = sp + 3776|0;
 $_10$i$i = sp + 3752|0;
 $_13$i$i233$i$i = sp + 3736|0;
 $_17$i$i234$i$i = sp + 3720|0;
 $_13$i$i$i$i = sp + 3704|0;
 $_17$i$i$i$i = sp + 3688|0;
 $_12$i4$i$i$i$i = sp + 3672|0;
 $_12$i$i$i$i$i = sp + 3656|0;
 $_10$i$i$i$i = sp + 3640|0;
 $_15$i$i$i$i = sp + 3624|0;
 $arg2$i$i$i$i = sp + 3616|0;
 $arg7$i$i$i$i = sp + 3608|0;
 $_19$sroa$6$i$i$i = sp + 3592|0;
 $_19$sroa$10$i$i$i = sp + 3576|0;
 $_9$i$i$i$i$i = sp + 3560|0;
 $_13$i$i15$i$i$i = sp + 3544|0;
 $_17$i$i16$i$i$i = sp + 3528|0;
 $_13$i$i$i170$i$i = sp + 3512|0;
 $_17$i$i$i171$i$i = sp + 3496|0;
 $_4$sroa$4$i$i$i = sp + 3480|0;
 $_4$sroa$6$i$i$i = sp + 3464|0;
 $_4$sroa$7$i$i$i = sp + 3448|0;
 $_13$i$i$i$i$i = sp + 3432|0;
 $_17$i$i$i$i$i = sp + 3416|0;
 $_1$sroa$8$i$i$i = sp + 3400|0;
 $_1$sroa$9$i$i$i = sp + 3384|0;
 $x$i$i$i = sp + 3256|0;
 $x$i10$i$i$i = sp + 3128|0;
 $x$i$sroa$6$i$i$i = sp + 4536|0;
 $x$i$sroa$9$i$i$i = sp + 4516|0;
 $x$i$sroa$39$i$i$i = sp + 5163|0;
 $_13$i$i$i$i$i$i = sp + 3112|0;
 $_17$i$i$i$i$i$i = sp + 3096|0;
 $_5$sroa$10$i$i$i$i = sp + 4496|0;
 $tmp_ret$i$i$i$i$i$i$i$i$i$i = sp + 3080|0;
 $_7$i$i$i$i = sp + 3064|0;
 $objects$i$i$i = sp + 3000|0;
 $_13$sroa$6$i$i$i = sp + 4476|0;
 $_13$sroa$8$sroa$0$i$i$i = sp + 4456|0;
 $_13$sroa$27$i$i$i = sp + 5160|0;
 $narrow_phase$i$i$i = sp + 2872|0;
 $_24$i$i$i = sp + 2808|0;
 $cworld$i$i = sp + 2648|0;
 $nf$i$i = sp + 2520|0;
 $ccd$i$i = sp + 2448|0;
 $joints$i$i = sp + 2336|0;
 $solver$i$i = sp + 2208|0;
 $_51$i$i = sp + 2048|0;
 $_52$i$i = sp + 1992|0;
 $_54$sroa$8$i$i = sp + 1976|0;
 $_54$sroa$9$i$i = sp + 1960|0;
 $world$i = sp + 1360|0;
 $_10$i = sp + 1192|0;
 $_16$i = sp + 1024|0;
 $plane3$i = sp + 856|0;
 $_29$i = sp + 688|0;
 $document = sp + 680|0;
 $body = sp + 672|0;
 $_4 = sp + 656|0;
 $_9 = sp + 640|0;
 $_14 = sp + 624|0;
 $balls = sp + 608|0;
 $world = sp + 8|0;
 $balls1 = sp;
 $_45$sroa$4 = sp + 3852|0;
 $0 = _emscripten_asm_const_i(5)|0;
 $1 = (_malloc(24)|0);
 $2 = ($1|0)==(0|0);
 if ($2) {
  __THREW__ = 0;
  invoke_v(210);
  $3 = __THREW__; __THREW__ = 0;
  $4 = ___cxa_find_matching_catch_2()|0;
  $5 = tempRet0;
  $personalityslot$sroa$0$3420 = $4;$personalityslot$sroa$12$3418 = $5;
  ___resumeException($personalityslot$sroa$0$3420|0);
  // unreachable;
 }
 temp_Int32x4_ptr = $1;SIMD_Int32x4_store(HEAPU8, temp_Int32x4_ptr, SIMD_Int32x4(1,1,0,1));
 $_10$sroa$5$0$$sroa_idx$i$i = ((($1)) + 16|0);
 HEAP32[$_10$sroa$5$0$$sroa_idx$i$i>>2] = 0;
 $_10$sroa$6$0$$sroa_idx$i$i = ((($1)) + 20|0);
 HEAP32[$_10$sroa$6$0$$sroa_idx$i$i>>2] = 0;
 $6 = $1;
 HEAP32[$document>>2] = $6;
 __THREW__ = 0;
 invoke_viiii(280,($_4|0),($document|0),(12864|0),4);
 $7 = __THREW__; __THREW__ = 0;
 $8 = $7&1;
 L5: do {
  if ($8) {
   label = 394;
  } else {
   $_4$idx$val = HEAP32[$_4>>2]|0;
   $switch2$i = ($_4$idx$val|0)==(0);
   if ($switch2$i) {
    __THREW__ = 0;
    invoke_vi(220,(6500|0));
    $9 = __THREW__; __THREW__ = 0;
    label = 394;
    break;
   }
   $_4$idx172 = ((($_4)) + 8|0);
   $_4$idx172$val = HEAP32[$_4$idx172>>2]|0;
   $_4$idx171 = ((($_4)) + 4|0);
   $_4$idx171$val = HEAP32[$_4$idx171>>2]|0;
   HEAP32[$body>>2] = $_4$idx171$val;
   $10 = ((($body)) + 4|0);
   HEAP32[$10>>2] = $_4$idx172$val;
   __THREW__ = 0;
   invoke_viiii(280,($_9|0),($document|0),(12868|0),6);
   $11 = __THREW__; __THREW__ = 0;
   $12 = $11&1;
   if ($12) {
    label = 394;
   } else {
    $_9$idx$val = HEAP32[$_9>>2]|0;
    $_9$idx169 = ((($_9)) + 4|0);
    $_9$idx169$val = HEAP32[$_9$idx169>>2]|0;
    $_9$idx170 = ((($_9)) + 8|0);
    $_9$idx170$val465 = HEAP32[$_9$idx170>>2]|0;
    $switch2$i174 = ($_9$idx$val|0)==(0);
    if ($switch2$i174) {
     __THREW__ = 0;
     invoke_vi(220,(6500|0));
     $13 = __THREW__; __THREW__ = 0;
     label = 394;
     break;
    }
    __THREW__ = 0;
    invoke_viiii(280,($_14|0),($document|0),(12874|0),9);
    $14 = __THREW__; __THREW__ = 0;
    $15 = $14&1;
    if ($15) {
     label = 394;
    } else {
     $_14$idx$val = HEAP32[$_14>>2]|0;
     $_14$idx167 = ((($_14)) + 4|0);
     $_14$idx167$val = HEAP32[$_14$idx167>>2]|0;
     $_14$idx168 = ((($_14)) + 8|0);
     $_14$idx168$val466 = HEAP32[$_14$idx168>>2]|0;
     $switch2$i178 = ($_14$idx$val|0)==(0);
     if ($switch2$i178) {
      __THREW__ = 0;
      invoke_vi(220,(6500|0));
      $16 = __THREW__; __THREW__ = 0;
      label = 394;
      break;
     }
     HEAP32[$balls>>2] = 1;
     $17 = ((($balls)) + 4|0);
     HEAP32[$17>>2] = 0;
     $18 = ((($balls)) + 8|0);
     HEAP32[$18>>2] = 0;
     HEAP32[$_7$i$i$i$i>>2] = 1;
     $_1$sroa$4$0$$sroa_idx7$i$i$i$i$i = ((($_7$i$i$i$i)) + 4|0);
     HEAP32[$_1$sroa$4$0$$sroa_idx7$i$i$i$i$i>>2] = 0;
     $_1$sroa$5$0$$sroa_idx9$i$i$i$i$i = ((($_7$i$i$i$i)) + 8|0);
     HEAP32[$_1$sroa$5$0$$sroa_idx9$i$i$i$i$i>>2] = 0;
     __THREW__ = 0;
     $19 = (invoke_i(290)|0);
     $20 = __THREW__; __THREW__ = 0;
     $21 = $20&1;
     L18: do {
      if ($21) {
       label = 20;
      } else {
       $switch2tmp$i$i$i$i$i$i$i$i$i$i = ($19|0)==(0|0);
       if ($switch2tmp$i$i$i$i$i$i$i$i$i$i) {
        __THREW__ = 0;
        invoke_vii(219,(11189|0),57);
        $22 = __THREW__; __THREW__ = 0;
        label = 20;
        break;
       }
       $23 = $19;
       $24 = $23;
       $25 = HEAP32[$24>>2]|0;
       $26 = (($23) + 4)|0;
       $27 = $26;
       $28 = HEAP32[$27>>2]|0;
       $29 = ($25|0)==(1);
       $30 = ($28|0)==(0);
       $31 = $29 & $30;
       if ($31) {
        $_15$0$in$phi$trans$insert$i$i$i$i$i$i$i$i$i = ((($19)) + 8|0);
        $32 = $_15$0$in$phi$trans$insert$i$i$i$i$i$i$i$i$i;
        $33 = $32;
        $34 = HEAP32[$33>>2]|0;
        $35 = (($32) + 4)|0;
        $36 = $35;
        $37 = HEAP32[$36>>2]|0;
        $_15$0$idx1$phi$trans$insert$i$i$i$i$i$i$i$i$i = ((($19)) + 16|0);
        $38 = $_15$0$idx1$phi$trans$insert$i$i$i$i$i$i$i$i$i;
        $39 = $38;
        $40 = HEAP32[$39>>2]|0;
        $41 = (($38) + 4)|0;
        $42 = $41;
        $43 = HEAP32[$42>>2]|0;
        $77 = $34;$80 = $37;$83 = $40;$86 = $43;
       } else {
        __THREW__ = 0;
        invoke_vi(291,($tmp_ret$i$i$i$i$i$i$i$i$i$i|0));
        $44 = __THREW__; __THREW__ = 0;
        $45 = $44&1;
        if ($45) {
         label = 20;
         break;
        }
        $46 = ((($tmp_ret$i$i$i$i$i$i$i$i$i$i)) + 8|0);
        $47 = $tmp_ret$i$i$i$i$i$i$i$i$i$i;
        $48 = $47;
        $49 = HEAP32[$48>>2]|0;
        $50 = (($47) + 4)|0;
        $51 = $50;
        $52 = HEAP32[$51>>2]|0;
        $53 = $46;
        $54 = $53;
        $55 = HEAP32[$54>>2]|0;
        $56 = (($53) + 4)|0;
        $57 = $56;
        $58 = HEAP32[$57>>2]|0;
        $59 = $19;
        $60 = $59;
        HEAP32[$60>>2] = 1;
        $61 = (($59) + 4)|0;
        $62 = $61;
        HEAP32[$62>>2] = 0;
        $_13$sroa$4$0$$sroa_idx3$i$i$i$i$i$i$i$i$i$i = ((($19)) + 8|0);
        $63 = $_13$sroa$4$0$$sroa_idx3$i$i$i$i$i$i$i$i$i$i;
        $64 = $63;
        HEAP32[$64>>2] = $49;
        $65 = (($63) + 4)|0;
        $66 = $65;
        HEAP32[$66>>2] = $52;
        $_13$sroa$5$0$$sroa_idx5$i$i$i$i$i$i$i$i$i$i = ((($19)) + 16|0);
        $67 = $_13$sroa$5$0$$sroa_idx5$i$i$i$i$i$i$i$i$i$i;
        $68 = $67;
        HEAP32[$68>>2] = $55;
        $69 = (($67) + 4)|0;
        $70 = $69;
        HEAP32[$70>>2] = $58;
        $77 = $49;$80 = $52;$83 = $55;$86 = $58;
       }
       ;HEAP32[$objects$i$i$i>>2]=HEAP32[$_7$i$i$i$i>>2]|0;HEAP32[$objects$i$i$i+4>>2]=HEAP32[$_7$i$i$i$i+4>>2]|0;HEAP32[$objects$i$i$i+8>>2]=HEAP32[$_7$i$i$i$i+8>>2]|0;
       $_8$sroa$0$sroa$0$0$_8$sroa$0$0$$sroa_cast13$sroa_idx$i$i$i$i = ((($objects$i$i$i)) + 16|0);
       $75 = $_8$sroa$0$sroa$0$0$_8$sroa$0$0$$sroa_cast13$sroa_idx$i$i$i$i;
       $76 = $75;
       HEAP32[$76>>2] = $77;
       $78 = (($75) + 4)|0;
       $79 = $78;
       HEAP32[$79>>2] = $80;
       $_8$sroa$0$sroa$4$0$_8$sroa$0$0$$sroa_cast13$sroa_idx39$i$i$i$i = ((($objects$i$i$i)) + 24|0);
       $81 = $_8$sroa$0$sroa$4$0$_8$sroa$0$0$$sroa_cast13$sroa_idx39$i$i$i$i;
       $82 = $81;
       HEAP32[$82>>2] = $83;
       $84 = (($81) + 4)|0;
       $85 = $84;
       HEAP32[$85>>2] = $86;
       $_8$sroa$0$sroa$5$0$_8$sroa$0$0$$sroa_cast13$sroa_idx41$i$i$i$i = ((($objects$i$i$i)) + 32|0);
       HEAP32[$_8$sroa$0$sroa$5$0$_8$sroa$0$0$$sroa_cast13$sroa_idx41$i$i$i$i>>2] = 0;
       $_8$sroa$0$sroa$6$0$_8$sroa$0$0$$sroa_cast13$sroa_idx43$i$i$i$i = ((($objects$i$i$i)) + 36|0);
       HEAP32[$_8$sroa$0$sroa$6$0$_8$sroa$0$0$$sroa_cast13$sroa_idx43$i$i$i$i>>2] = 0;
       $_8$sroa$0$sroa$7$0$_8$sroa$0$0$$sroa_cast13$sroa_idx45$i$i$i$i = ((($objects$i$i$i)) + 40|0);
       HEAP32[$_8$sroa$0$sroa$7$0$_8$sroa$0$0$$sroa_cast13$sroa_idx45$i$i$i$i>>2] = (1);
       $_8$sroa$0$sroa$9$0$_8$sroa$0$0$$sroa_cast13$sroa_idx48$i$i$i$i = ((($objects$i$i$i)) + 48|0);
       HEAP32[$_8$sroa$0$sroa$9$0$_8$sroa$0$0$$sroa_cast13$sroa_idx48$i$i$i$i>>2] = 1;
       $_8$sroa$0$sroa$10$0$_8$sroa$0$0$$sroa_cast13$sroa_idx50$i$i$i$i = ((($objects$i$i$i)) + 52|0);
       HEAP32[$_8$sroa$0$sroa$10$0$_8$sroa$0$0$$sroa_cast13$sroa_idx50$i$i$i$i>>2] = 0;
       $_8$sroa$0$sroa$11$0$_8$sroa$0$0$$sroa_cast13$sroa_idx52$i$i$i$i = ((($objects$i$i$i)) + 56|0);
       HEAP32[$_8$sroa$0$sroa$11$0$_8$sroa$0$0$$sroa_cast13$sroa_idx52$i$i$i$i>>2] = 0;
       $87 = (_malloc(512)|0);
       $88 = ($87|0)==(0|0);
       L28: do {
        if ($88) {
         __THREW__ = 0;
         invoke_v(210);
         $89 = __THREW__; __THREW__ = 0;
         $90 = ___cxa_find_matching_catch_2()|0;
         $91 = tempRet0;
         $personalityslot$sroa$0$1$i$i$i$i$i$i = $90;$personalityslot$sroa$7$1$i$i$i$i$i$i = $91;
         label = 23;
        } else {
         $92 = $87;
         __THREW__ = 0;
         invoke_vii(211,($_13$i$i$i$i$i$i|0),32);
         $93 = __THREW__; __THREW__ = 0;
         $94 = $93&1;
         do {
          if ($94) {
           $97 = ___cxa_find_matching_catch_2()|0;
           $98 = tempRet0;
           $personalityslot$sroa$0$0$i$i$i$i$i$i = $97;$personalityslot$sroa$7$0$i$i$i$i$i$i = $98;
          } else {
           __THREW__ = 0;
           invoke_vii(211,($_17$i$i$i$i$i$i|0),32);
           $95 = __THREW__; __THREW__ = 0;
           $96 = $95&1;
           if ($96) {
            $99 = ___cxa_find_matching_catch_2()|0;
            $100 = tempRet0;
            $101 = ((($_13$i$i$i$i$i$i)) + 4|0);
            $102 = HEAP32[$101>>2]|0;
            $not$$i$i$i$i$i$i$i$i$i$i = ($102|0)==(0);
            if ($not$$i$i$i$i$i$i$i$i$i$i) {
             $personalityslot$sroa$0$0$i$i$i$i$i$i = $99;$personalityslot$sroa$7$0$i$i$i$i$i$i = $100;
             break;
            }
            $103 = HEAP32[$_13$i$i$i$i$i$i>>2]|0;
            _free($103);
            $personalityslot$sroa$0$0$i$i$i$i$i$i = $99;$personalityslot$sroa$7$0$i$i$i$i$i$i = $100;
            break;
           }
           $_10$sroa$10$20$copyload132$i$i$i$i = HEAP32[$_13$i$i$i$i$i$i>>2]|0;
           $_10$sroa$12$20$$sroa_idx79$i$i$i$i = ((($_13$i$i$i$i$i$i)) + 4|0);
           $_10$sroa$12$20$copyload$i$i$i$i = HEAP32[$_10$sroa$12$20$$sroa_idx79$i$i$i$i>>2]|0;
           $_10$sroa$13$20$$sroa_idx82$i$i$i$i = ((($_13$i$i$i$i$i$i)) + 8|0);
           $_10$sroa$13$20$copyload$i$i$i$i = HEAP32[$_10$sroa$13$20$$sroa_idx82$i$i$i$i>>2]|0;
           $_10$sroa$1383$32$copyload133$i$i$i$i = HEAP32[$_17$i$i$i$i$i$i>>2]|0;
           $_10$sroa$15$32$$sroa_idx89$i$i$i$i = ((($_17$i$i$i$i$i$i)) + 4|0);
           $_10$sroa$15$32$copyload$i$i$i$i = HEAP32[$_10$sroa$15$32$$sroa_idx89$i$i$i$i>>2]|0;
           $_10$sroa$16$32$$sroa_idx92$i$i$i$i = ((($_17$i$i$i$i$i$i)) + 8|0);
           $_10$sroa$16$32$copyload$i$i$i$i = HEAP32[$_10$sroa$16$32$$sroa_idx92$i$i$i$i>>2]|0;
           ;HEAP32[$_13$sroa$6$i$i$i>>2]=HEAP32[$_5$sroa$10$i$i$i$i>>2]|0;HEAP32[$_13$sroa$6$i$i$i+4>>2]=HEAP32[$_5$sroa$10$i$i$i$i+4>>2]|0;HEAP32[$_13$sroa$6$i$i$i+8>>2]=HEAP32[$_5$sroa$10$i$i$i$i+8>>2]|0;HEAP32[$_13$sroa$6$i$i$i+12>>2]=HEAP32[$_5$sroa$10$i$i$i$i+12>>2]|0;HEAP32[$_13$sroa$6$i$i$i+16>>2]=HEAP32[$_5$sroa$10$i$i$i$i+16>>2]|0;
           ;HEAP32[$x$i$sroa$6$i$i$i>>2]=HEAP32[$_13$sroa$6$i$i$i>>2]|0;HEAP32[$x$i$sroa$6$i$i$i+4>>2]=HEAP32[$_13$sroa$6$i$i$i+4>>2]|0;HEAP32[$x$i$sroa$6$i$i$i+8>>2]=HEAP32[$_13$sroa$6$i$i$i+8>>2]|0;HEAP32[$x$i$sroa$6$i$i$i+12>>2]=HEAP32[$_13$sroa$6$i$i$i+12>>2]|0;HEAP32[$x$i$sroa$6$i$i$i+16>>2]=HEAP32[$_13$sroa$6$i$i$i+16>>2]|0;
           ;HEAP32[$x$i$sroa$9$i$i$i>>2]=HEAP32[$_13$sroa$8$sroa$0$i$i$i>>2]|0;HEAP32[$x$i$sroa$9$i$i$i+4>>2]=HEAP32[$_13$sroa$8$sroa$0$i$i$i+4>>2]|0;HEAP32[$x$i$sroa$9$i$i$i+8>>2]=HEAP32[$_13$sroa$8$sroa$0$i$i$i+8>>2]|0;HEAP32[$x$i$sroa$9$i$i$i+12>>2]=HEAP32[$_13$sroa$8$sroa$0$i$i$i+12>>2]|0;HEAP32[$x$i$sroa$9$i$i$i+16>>2]=HEAP32[$_13$sroa$8$sroa$0$i$i$i+16>>2]|0;
           ;HEAP8[$x$i$sroa$39$i$i$i>>0]=HEAP8[$_13$sroa$27$i$i$i>>0]|0;HEAP8[$x$i$sroa$39$i$i$i+1>>0]=HEAP8[$_13$sroa$27$i$i$i+1>>0]|0;HEAP8[$x$i$sroa$39$i$i$i+2>>0]=HEAP8[$_13$sroa$27$i$i$i+2>>0]|0;
           $104 = (_malloc(248)|0);
           $105 = ($104|0)==(0|0);
           if ($105) {
            __THREW__ = 0;
            invoke_v(210);
            $106 = __THREW__; __THREW__ = 0;
            $107 = ___cxa_find_matching_catch_2()|0;
            $108 = tempRet0;
            $eh$lpad$body5$i$i$i$index7Z2D = $108;$eh$lpad$body5$i$i$i$indexZ2D = $107;
            label = 43;
            break L28;
           }
           HEAP32[$104>>2] = 1;
           $x$i$sroa$4$0$$sroa_idx$i$i$i = ((($104)) + 4|0);
           HEAP32[$x$i$sroa$4$0$$sroa_idx$i$i$i>>2] = 0;
           $x$i$sroa$5$0$$sroa_idx$i$i$i = ((($104)) + 8|0);
           HEAP32[$x$i$sroa$5$0$$sroa_idx$i$i$i>>2] = 0;
           $x$i$sroa$6$0$$sroa_raw_idx$i$i$i = ((($104)) + 12|0);
           ;HEAP32[$x$i$sroa$6$0$$sroa_raw_idx$i$i$i>>2]=HEAP32[$x$i$sroa$6$i$i$i>>2]|0;HEAP32[$x$i$sroa$6$0$$sroa_raw_idx$i$i$i+4>>2]=HEAP32[$x$i$sroa$6$i$i$i+4>>2]|0;HEAP32[$x$i$sroa$6$0$$sroa_raw_idx$i$i$i+8>>2]=HEAP32[$x$i$sroa$6$i$i$i+8>>2]|0;HEAP32[$x$i$sroa$6$0$$sroa_raw_idx$i$i$i+12>>2]=HEAP32[$x$i$sroa$6$i$i$i+12>>2]|0;HEAP32[$x$i$sroa$6$0$$sroa_raw_idx$i$i$i+16>>2]=HEAP32[$x$i$sroa$6$i$i$i+16>>2]|0;
           $x$i$sroa$8$0$$sroa_idx$i$i$i = ((($104)) + 40|0);
           HEAP32[$x$i$sroa$8$0$$sroa_idx$i$i$i>>2] = 0;
           $x$i$sroa$9$0$$sroa_raw_idx$i$i$i = ((($104)) + 44|0);
           ;HEAP32[$x$i$sroa$9$0$$sroa_raw_idx$i$i$i>>2]=HEAP32[$x$i$sroa$9$i$i$i>>2]|0;HEAP32[$x$i$sroa$9$0$$sroa_raw_idx$i$i$i+4>>2]=HEAP32[$x$i$sroa$9$i$i$i+4>>2]|0;HEAP32[$x$i$sroa$9$0$$sroa_raw_idx$i$i$i+8>>2]=HEAP32[$x$i$sroa$9$i$i$i+8>>2]|0;HEAP32[$x$i$sroa$9$0$$sroa_raw_idx$i$i$i+12>>2]=HEAP32[$x$i$sroa$9$i$i$i+12>>2]|0;HEAP32[$x$i$sroa$9$0$$sroa_raw_idx$i$i$i+16>>2]=HEAP32[$x$i$sroa$9$i$i$i+16>>2]|0;
           $x$i$sroa$10$0$$sroa_idx$i$i$i = ((($104)) + 64|0);
           temp_Int32x4_ptr = $x$i$sroa$10$0$$sroa_idx$i$i$i;SIMD_Int32x4_store(HEAPU8, temp_Int32x4_ptr, SIMD_Int32x4(1,0,0,0));
           $x$i$sroa$15$0$$sroa_idx$i$i$i = ((($104)) + 88|0);
           temp_Int32x4_ptr = $x$i$sroa$15$0$$sroa_idx$i$i$i;SIMD_Int32x4_store(HEAPU8, temp_Int32x4_ptr, SIMD_Int32x4(0,1,0,0));
           $x$i$sroa$19$0$$sroa_idx$i$i$i = ((($104)) + 104|0);
           HEAP32[$x$i$sroa$19$0$$sroa_idx$i$i$i>>2] = 0;
           $x$i$sroa$21$0$$sroa_idx$i$i$i = ((($104)) + 116|0);
           HEAP32[$x$i$sroa$21$0$$sroa_idx$i$i$i>>2] = 0;
           $x$i$sroa$22$0$$sroa_idx$i$i$i = ((($104)) + 120|0);
           HEAP32[$x$i$sroa$22$0$$sroa_idx$i$i$i>>2] = 0;
           $x$i$sroa$23$0$$sroa_idx$i$i$i = ((($104)) + 124|0);
           HEAP32[$x$i$sroa$23$0$$sroa_idx$i$i$i>>2] = $92;
           $x$i$sroa$24$0$$sroa_idx$i$i$i = ((($104)) + 128|0);
           HEAP32[$x$i$sroa$24$0$$sroa_idx$i$i$i>>2] = 32;
           $x$i$sroa$25$0$$sroa_idx$i$i$i = ((($104)) + 132|0);
           HEAP32[$x$i$sroa$25$0$$sroa_idx$i$i$i>>2] = 0;
           $x$i$sroa$26$0$$sroa_idx$i$i$i = ((($104)) + 136|0);
           HEAP32[$x$i$sroa$26$0$$sroa_idx$i$i$i>>2] = 31;
           $x$i$sroa$27$0$$sroa_idx$i$i$i = ((($104)) + 140|0);
           HEAP32[$x$i$sroa$27$0$$sroa_idx$i$i$i>>2] = $_10$sroa$10$20$copyload132$i$i$i$i;
           $x$i$sroa$28$0$$sroa_idx$i$i$i = ((($104)) + 144|0);
           HEAP32[$x$i$sroa$28$0$$sroa_idx$i$i$i>>2] = $_10$sroa$12$20$copyload$i$i$i$i;
           $x$i$sroa$29$0$$sroa_idx$i$i$i = ((($104)) + 148|0);
           HEAP32[$x$i$sroa$29$0$$sroa_idx$i$i$i>>2] = $_10$sroa$13$20$copyload$i$i$i$i;
           $x$i$sroa$30$0$$sroa_idx$i$i$i = ((($104)) + 152|0);
           HEAP32[$x$i$sroa$30$0$$sroa_idx$i$i$i>>2] = $_10$sroa$1383$32$copyload133$i$i$i$i;
           $x$i$sroa$31$0$$sroa_idx$i$i$i = ((($104)) + 156|0);
           HEAP32[$x$i$sroa$31$0$$sroa_idx$i$i$i>>2] = $_10$sroa$15$32$copyload$i$i$i$i;
           $x$i$sroa$32$0$$sroa_idx$i$i$i = ((($104)) + 160|0);
           HEAP32[$x$i$sroa$32$0$$sroa_idx$i$i$i>>2] = $_10$sroa$16$32$copyload$i$i$i$i;
           $x$i$sroa$33$0$$sroa_idx$i$i$i = ((($104)) + 164|0);
           HEAP32[$x$i$sroa$33$0$$sroa_idx$i$i$i>>2] = 0;
           $x$i$sroa$34$0$$sroa_idx$i$i$i = ((($104)) + 168|0);
           HEAP32[$x$i$sroa$34$0$$sroa_idx$i$i$i>>2] = 32;
           $x$i$sroa$35$0$$sroa_idx$i$i$i = ((($104)) + 172|0);
           HEAP32[$x$i$sroa$35$0$$sroa_idx$i$i$i>>2] = 22;
           $x$i$sroa$36$0$$sroa_idx$i$i$i = ((($104)) + 176|0);
           HEAPF32[$x$i$sroa$36$0$$sroa_idx$i$i$i>>2] = 0.019999999552965164;
           $x$i$sroa$37$0$$sroa_idx$i$i$i = ((($104)) + 180|0);
           HEAP32[$x$i$sroa$37$0$$sroa_idx$i$i$i>>2] = 0;
           $x$i$sroa$38$0$$sroa_raw_idx$i$i$i = ((($104)) + 184|0);
           HEAP8[$x$i$sroa$38$0$$sroa_raw_idx$i$i$i>>0] = 0;
           $x$i$sroa$39$0$$sroa_raw_idx$i$i$i = ((($104)) + 185|0);
           ;HEAP8[$x$i$sroa$39$0$$sroa_raw_idx$i$i$i>>0]=HEAP8[$x$i$sroa$39$i$i$i>>0]|0;HEAP8[$x$i$sroa$39$0$$sroa_raw_idx$i$i$i+1>>0]=HEAP8[$x$i$sroa$39$i$i$i+1>>0]|0;HEAP8[$x$i$sroa$39$0$$sroa_raw_idx$i$i$i+2>>0]=HEAP8[$x$i$sroa$39$i$i$i+2>>0]|0;
           $x$i$sroa$40$0$$sroa_idx$i$i$i = ((($104)) + 188|0);
           HEAP32[$x$i$sroa$40$0$$sroa_idx$i$i$i>>2] = 1;
           $x$i$sroa$41$0$$sroa_idx$i$i$i = ((($104)) + 192|0);
           temp_Int32x4_ptr = $x$i$sroa$41$0$$sroa_idx$i$i$i;SIMD_Int32x4_store(HEAPU8, temp_Int32x4_ptr, SIMD_Int32x4(0,0,1,0));
           $x$i$sroa$45$0$$sroa_idx$i$i$i = ((($104)) + 208|0);
           temp_Int32x4_ptr = $x$i$sroa$45$0$$sroa_idx$i$i$i;SIMD_Int32x4_store(HEAPU8, temp_Int32x4_ptr, SIMD_Int32x4(0,1,0,0));
           $x$i$sroa$49$0$$sroa_idx$i$i$i = ((($104)) + 224|0);
           temp_Int32x4_ptr = $x$i$sroa$49$0$$sroa_idx$i$i$i;SIMD_Int32x4_store(HEAPU8, temp_Int32x4_ptr, SIMD_Int32x4(1,0,0,1));
           $x$i$sroa$53$0$$sroa_idx$i$i$i = ((($104)) + 240|0);
           HEAP32[$x$i$sroa$53$0$$sroa_idx$i$i$i>>2] = 0;
           $x$i$sroa$54$0$$sroa_idx$i$i$i = ((($104)) + 244|0);
           HEAP32[$x$i$sroa$54$0$$sroa_idx$i$i$i>>2] = 0;
           $109 = $104;
           __THREW__ = 0;
           invoke_vi(293,($narrow_phase$i$i$i|0));
           $110 = __THREW__; __THREW__ = 0;
           $111 = $110&1;
           if ($111) {
            $119 = ___cxa_find_matching_catch_2()|0;
            $120 = tempRet0;
            __ZN4drop17ha4e743f99a9d3e06E($104);
            _free($104);
            $$pre$i$i$i = HEAP32[$_8$sroa$0$sroa$7$0$_8$sroa$0$0$$sroa_cast13$sroa_idx45$i$i$i$i>>2]|0;
            __THREW__ = 0;
            invoke_vi(292,($objects$i$i$i|0));
            $121 = __THREW__; __THREW__ = 0;
            $122 = $121&1;
            if ($122) {
             label = 184;
             break L28;
            }
            $switchtmp$i$i$i$i$i = ($$pre$i$i$i|0)==(0|0);
            if ($switchtmp$i$i$i$i$i) {
             $personalityslot$sroa$0$0$i$i$i = $119;$personalityslot$sroa$14$0$i$i$i = $120;
             label = 21;
             break L18;
            }
            $$pre332$i$i$i = HEAP32[$_8$sroa$0$sroa$5$0$_8$sroa$0$0$$sroa_cast13$sroa_idx41$i$i$i$i>>2]|0;
            $123 = ($$pre332$i$i$i|0)==(0);
            if ($123) {
             $personalityslot$sroa$0$5300$ph$ph310334$i$i$i = $119;$personalityslot$sroa$14$5298$ph$ph311333$i$i$i = $120;
             break L28;
            }
            _free($$pre$i$i$i);
            $personalityslot$sroa$0$5300$ph$ph310334$i$i$i = $119;$personalityslot$sroa$14$5298$ph$ph311333$i$i$i = $120;
            break L28;
           }
           dest=$_24$i$i$i; src=$objects$i$i$i; stop=dest+64|0; do { HEAP32[dest>>2]=HEAP32[src>>2]|0; dest=dest+4|0; src=src+4|0; } while ((dest|0) < (stop|0));
           dest=$x$i10$i$i$i; src=$narrow_phase$i$i$i; stop=dest+128|0; do { HEAP32[dest>>2]=HEAP32[src>>2]|0; dest=dest+4|0; src=src+4|0; } while ((dest|0) < (stop|0));
           $112 = (_malloc(128)|0);
           $113 = ($112|0)==(0|0);
           if ($113) {
            __THREW__ = 0;
            invoke_v(210);
            $114 = __THREW__; __THREW__ = 0;
            $115 = ___cxa_find_matching_catch_2()|0;
            $116 = tempRet0;
            __ZN4drop17ha4e743f99a9d3e06E($104);
            _free($104);
            __THREW__ = 0;
            invoke_vi(292,($_24$i$i$i|0));
            $117 = __THREW__; __THREW__ = 0;
            $118 = $117&1;
            if ($118) {
             label = 184;
             break L28;
            }
            $128 = ((($_24$i$i$i)) + 40|0);
            $129 = HEAP32[$128>>2]|0;
            $switchtmp$i$i20$i$i$i = ($129|0)==(0|0);
            if ($switchtmp$i$i20$i$i$i) {
             $personalityslot$sroa$0$0$i$i$i = $115;$personalityslot$sroa$14$0$i$i$i = $116;
             label = 21;
             break L18;
            }
            $130 = ((($_24$i$i$i)) + 32|0);
            $131 = HEAP32[$130>>2]|0;
            $132 = ($131|0)==(0);
            if (!($132)) {
             _free($129);
            }
            $133 = ((($_24$i$i$i)) + 52|0);
            $134 = HEAP32[$133>>2]|0;
            $not$$i$i$i$i$i$i$i23$i$i$i = ($134|0)==(0);
            if ($not$$i$i$i$i$i$i$i23$i$i$i) {
             $personalityslot$sroa$0$0$i$i$i = $115;$personalityslot$sroa$14$0$i$i$i = $116;
             label = 21;
             break L18;
            }
            $135 = ((($_24$i$i$i)) + 48|0);
            $136 = HEAP32[$135>>2]|0;
            _free($136);
            $personalityslot$sroa$0$0$i$i$i = $115;$personalityslot$sroa$14$0$i$i$i = $116;
            label = 21;
            break L18;
           }
           dest=$112; src=$x$i10$i$i$i; stop=dest+128|0; do { HEAP32[dest>>2]=HEAP32[src>>2]|0; dest=dest+4|0; src=src+4|0; } while ((dest|0) < (stop|0));
           $139 = $112;
           dest=$cworld$i$i; src=$_24$i$i$i; stop=dest+64|0; do { HEAP32[dest>>2]=HEAP32[src>>2]|0; dest=dest+4|0; src=src+4|0; } while ((dest|0) < (stop|0));
           $140 = ((($cworld$i$i)) + 64|0);
           HEAP32[$140>>2] = $109;
           $141 = ((($cworld$i$i)) + 68|0);
           HEAP32[$141>>2] = (1072);
           $142 = ((($cworld$i$i)) + 72|0);
           HEAP32[$142>>2] = $139;
           $143 = ((($cworld$i$i)) + 76|0);
           $144 = ((($cworld$i$i)) + 80|0);
           $_22$i$i$i$sroa$7$0$$sroa_idx678 = ((($cworld$i$i)) + 84|0);
           $_22$i$i$i$sroa$10$0$$sroa_idx681 = ((($cworld$i$i)) + 88|0);
           temp_Int32x4_ptr = $143;SIMD_Int32x4_store(HEAPU8, temp_Int32x4_ptr, SIMD_Int32x4((816),1,0,0));
           $_23$i$i$i$sroa$0$0$$sroa_idx = ((($cworld$i$i)) + 92|0);
           HEAP32[$_23$i$i$i$sroa$0$0$$sroa_idx>>2] = 1;
           $_23$i$i$i$sroa$7$0$$sroa_idx670 = ((($cworld$i$i)) + 96|0);
           HEAP32[$_23$i$i$i$sroa$7$0$$sroa_idx670>>2] = 0;
           $_23$i$i$i$sroa$10$0$$sroa_idx673 = ((($cworld$i$i)) + 100|0);
           HEAP32[$_23$i$i$i$sroa$10$0$$sroa_idx673>>2] = 0;
           $_30$sroa$0$0$$sroa_idx$i$i$i = ((($cworld$i$i)) + 104|0);
           $_30$sroa$4$0$$sroa_idx314$i$i$i = ((($cworld$i$i)) + 108|0);
           $_30$sroa$5$0$$sroa_idx316$i$i$i = ((($cworld$i$i)) + 112|0);
           temp_Int32x4_ptr = $_30$sroa$0$0$$sroa_idx$i$i$i;SIMD_Int32x4_store(HEAPU8, temp_Int32x4_ptr, SIMD_Int32x4(1,0,0,1));
           $_31$sroa$5$0$$sroa_idx45$i$i$i = ((($cworld$i$i)) + 120|0);
           temp_Int32x4_ptr = $_31$sroa$5$0$$sroa_idx45$i$i$i;SIMD_Int32x4_store(HEAPU8, temp_Int32x4_ptr, SIMD_Int32x4(0,0,1,0));
           $_32$sroa$5$0$$sroa_idx41$i$i$i = ((($cworld$i$i)) + 136|0);
           temp_Int32x4_ptr = $_32$sroa$5$0$$sroa_idx41$i$i$i;SIMD_Int32x4_store(HEAPU8, temp_Int32x4_ptr, SIMD_Int32x4(0,1,0,0));
           $145 = ((($cworld$i$i)) + 152|0);
           HEAP32[$145>>2] = 0;
           __THREW__ = 0;
           invoke_vi(293,($nf$i$i|0));
           $146 = __THREW__; __THREW__ = 0;
           $147 = $146&1;
           L56: do {
            if ($147) {
             $429 = ___cxa_find_matching_catch_2()|0;
             $430 = tempRet0;
             $personalityslot$sroa$0$5$ph$i$i = $429;$personalityslot$sroa$15$5$ph$i$i = $430;
             label = 159;
            } else {
             dest=$x$i$i$i; src=$nf$i$i; stop=dest+128|0; do { HEAP32[dest>>2]=HEAP32[src>>2]|0; dest=dest+4|0; src=src+4|0; } while ((dest|0) < (stop|0));
             $148 = (_malloc(128)|0);
             $149 = ($148|0)==(0|0);
             do {
              if ($149) {
               __THREW__ = 0;
               invoke_v(210);
               $150 = __THREW__; __THREW__ = 0;
               label = 185;
              } else {
               dest=$148; src=$x$i$i$i; stop=dest+128|0; do { HEAP32[dest>>2]=HEAP32[src>>2]|0; dest=dest+4|0; src=src+4|0; } while ((dest|0) < (stop|0));
               $151 = $148;
               $152 = HEAP32[$142>>2]|0;
               $153 = HEAP32[$143>>2]|0;
               HEAP32[$142>>2] = $151;
               HEAP32[$143>>2] = (816);
               $154 = ((($cworld$i$i)) + 64|0);
               __THREW__ = 0;
               invoke_vi(138,($104|0));
               $155 = __THREW__; __THREW__ = 0;
               $156 = $155&1;
               if ($156) {
                $157 = ___cxa_find_matching_catch_2()|0;
                $158 = tempRet0;
                $$idx1$val$val$i$i$i$i = HEAP32[$153>>2]|0;
                __THREW__ = 0;
                invoke_vi($$idx1$val$val$i$i$i$i|0,($152|0));
                $159 = __THREW__; __THREW__ = 0;
                $160 = $159&1;
                if ($160) {
                 label = 185;
                 break;
                }
                $161 = ((($153)) + 4|0);
                $162 = HEAP32[$161>>2]|0;
                $163 = ($162|0)==(0);
                if ($163) {
                 $eh$lpad$body114$i$i$index35Z2D = $158;$eh$lpad$body114$i$i$indexZ2D = $157;
                 break;
                }
                _free($152);
                $eh$lpad$body114$i$i$index35Z2D = $158;$eh$lpad$body114$i$i$indexZ2D = $157;
                break;
               }
               $$idx1$val$val$i$i$i = HEAP32[$153>>2]|0;
               __THREW__ = 0;
               invoke_vi($$idx1$val$val$i$i$i|0,($152|0));
               $164 = __THREW__; __THREW__ = 0;
               $165 = $164&1;
               if ($165) {
                label = 185;
                break;
               }
               $166 = ((($153)) + 4|0);
               $167 = HEAP32[$166>>2]|0;
               $168 = ($167|0)==(0);
               if (!($168)) {
                _free($152);
               }
               $169 = (_malloc(768)|0);
               $170 = ($169|0)==(0|0);
               if ($170) {
                __THREW__ = 0;
                invoke_v(210);
                $171 = __THREW__; __THREW__ = 0;
                $172 = ___cxa_find_matching_catch_2()|0;
                $173 = tempRet0;
                $personalityslot$sroa$0$5$ph$i$i = $172;$personalityslot$sroa$15$5$ph$i$i = $173;
                label = 159;
                break L56;
               }
               $174 = $169;
               __THREW__ = 0;
               invoke_vii(211,($_13$i$i$i$i$i|0),32);
               $175 = __THREW__; __THREW__ = 0;
               $176 = $175&1;
               do {
                if ($176) {
                 $179 = ___cxa_find_matching_catch_2()|0;
                 $180 = tempRet0;
                 $personalityslot$sroa$0$0$i$i$i$i$i = $179;$personalityslot$sroa$7$0$i$i$i$i$i = $180;
                } else {
                 __THREW__ = 0;
                 invoke_vii(211,($_17$i$i$i$i$i|0),32);
                 $177 = __THREW__; __THREW__ = 0;
                 $178 = $177&1;
                 if ($178) {
                  $181 = ___cxa_find_matching_catch_2()|0;
                  $182 = tempRet0;
                  $183 = ((($_13$i$i$i$i$i)) + 4|0);
                  $184 = HEAP32[$183>>2]|0;
                  $not$$i$i$i$i$i$i$i$i$i = ($184|0)==(0);
                  if ($not$$i$i$i$i$i$i$i$i$i) {
                   $personalityslot$sroa$0$0$i$i$i$i$i = $181;$personalityslot$sroa$7$0$i$i$i$i$i = $182;
                   break;
                  }
                  $185 = HEAP32[$_13$i$i$i$i$i>>2]|0;
                  _free($185);
                  $personalityslot$sroa$0$0$i$i$i$i$i = $181;$personalityslot$sroa$7$0$i$i$i$i$i = $182;
                  break;
                 }
                 ;HEAP32[$_1$sroa$8$i$i$i>>2]=HEAP32[$_13$i$i$i$i$i>>2]|0;HEAP32[$_1$sroa$8$i$i$i+4>>2]=HEAP32[$_13$i$i$i$i$i+4>>2]|0;HEAP32[$_1$sroa$8$i$i$i+8>>2]=HEAP32[$_13$i$i$i$i$i+8>>2]|0;
                 ;HEAP32[$_1$sroa$9$i$i$i>>2]=HEAP32[$_17$i$i$i$i$i>>2]|0;HEAP32[$_1$sroa$9$i$i$i+4>>2]=HEAP32[$_17$i$i$i$i$i+4>>2]|0;HEAP32[$_1$sroa$9$i$i$i+8>>2]=HEAP32[$_17$i$i$i$i$i+8>>2]|0;
                 HEAP32[$ccd$i$i>>2] = 0;
                 $_1$sroa$4$0$$sroa_idx16$i$i$i = ((($ccd$i$i)) + 4|0);
                 HEAP32[$_1$sroa$4$0$$sroa_idx16$i$i$i>>2] = $174;
                 $_1$sroa$5$0$$sroa_idx19$i$i$i = ((($ccd$i$i)) + 8|0);
                 HEAP32[$_1$sroa$5$0$$sroa_idx19$i$i$i>>2] = 32;
                 $_1$sroa$6$0$$sroa_idx21$i$i$i = ((($ccd$i$i)) + 12|0);
                 HEAP32[$_1$sroa$6$0$$sroa_idx21$i$i$i>>2] = 0;
                 $_1$sroa$7$0$$sroa_idx23$i$i$i = ((($ccd$i$i)) + 16|0);
                 HEAP32[$_1$sroa$7$0$$sroa_idx23$i$i$i>>2] = 31;
                 $_1$sroa$8$0$$sroa_idx$i$i$i = ((($ccd$i$i)) + 20|0);
                 ;HEAP32[$_1$sroa$8$0$$sroa_idx$i$i$i>>2]=HEAP32[$_1$sroa$8$i$i$i>>2]|0;HEAP32[$_1$sroa$8$0$$sroa_idx$i$i$i+4>>2]=HEAP32[$_1$sroa$8$i$i$i+4>>2]|0;HEAP32[$_1$sroa$8$0$$sroa_idx$i$i$i+8>>2]=HEAP32[$_1$sroa$8$i$i$i+8>>2]|0;
                 $_1$sroa$9$0$$sroa_idx$i$i$i = ((($ccd$i$i)) + 32|0);
                 ;HEAP32[$_1$sroa$9$0$$sroa_idx$i$i$i>>2]=HEAP32[$_1$sroa$9$i$i$i>>2]|0;HEAP32[$_1$sroa$9$0$$sroa_idx$i$i$i+4>>2]=HEAP32[$_1$sroa$9$i$i$i+4>>2]|0;HEAP32[$_1$sroa$9$0$$sroa_idx$i$i$i+8>>2]=HEAP32[$_1$sroa$9$i$i$i+8>>2]|0;
                 $_1$sroa$10$0$$sroa_idx33$i$i$i = ((($ccd$i$i)) + 44|0);
                 temp_Int32x4_ptr = $_1$sroa$10$0$$sroa_idx33$i$i$i;SIMD_Int32x4_store(HEAPU8, temp_Int32x4_ptr, SIMD_Int32x4(0,32,22,1));
                 $_4$sroa$4$0$$sroa_idx11$i$i$i = ((($ccd$i$i)) + 60|0);
                 HEAP32[$_4$sroa$4$0$$sroa_idx11$i$i$i>>2] = 0;
                 $_4$sroa$5$0$$sroa_idx13$i$i$i = ((($ccd$i$i)) + 64|0);
                 HEAP32[$_4$sroa$5$0$$sroa_idx13$i$i$i>>2] = 0;
                 $186 = (_malloc(52)|0);
                 $187 = ($186|0)==(0|0);
                 do {
                  if ($187) {
                   __THREW__ = 0;
                   invoke_v(210);
                   $188 = __THREW__; __THREW__ = 0;
                   $189 = ___cxa_find_matching_catch_2()|0;
                   $190 = tempRet0;
                   $personalityslot$sroa$0$7441$i$i = $189;$personalityslot$sroa$15$7439$i$i = $190;
                  } else {
                   $191 = ((($186)) + 4|0);
                   HEAP32[$191>>2] = 1;
                   $value$i$sroa$0$0$$sroa_idx$i$i = ((($186)) + 8|0);
                   HEAP32[$value$i$sroa$0$0$$sroa_idx$i$i>>2] = 0;
                   $value$i$sroa$4$0$$sroa_idx$i$i = ((($186)) + 12|0);
                   HEAPF32[$value$i$sroa$4$0$$sroa_idx$i$i>>2] = 0.0099999997764825821;
                   $value$i$sroa$5$0$$sroa_idx$i$i = ((($186)) + 16|0);
                   temp_Int32x4_ptr = $value$i$sroa$5$0$$sroa_idx$i$i;SIMD_Int32x4_store(HEAPU8, temp_Int32x4_ptr, SIMD_Int32x4(1,0,0,1));
                   $value$i$sroa$9$0$$sroa_idx$i$i = ((($186)) + 32|0);
                   temp_Int32x4_ptr = $value$i$sroa$9$0$$sroa_idx$i$i;SIMD_Int32x4_store(HEAPU8, temp_Int32x4_ptr, SIMD_Int32x4(0,0,1,0));
                   $value$i$sroa$13$0$$sroa_idx$i$i = ((($186)) + 48|0);
                   HEAP32[$value$i$sroa$13$0$$sroa_idx$i$i>>2] = 0;
                   $192 = $186;
                   HEAP32[$186>>2] = 2;
                   $193 = (_malloc(4)|0);
                   $194 = ($193|0)==(0|0);
                   L84: do {
                    if ($194) {
                     __THREW__ = 0;
                     invoke_v(210);
                     $195 = __THREW__; __THREW__ = 0;
                     label = 188;
                    } else {
                     HEAP32[$193>>2] = $186;
                     $196 = (_malloc(52)|0);
                     $197 = ($196|0)==(0|0);
                     L87: do {
                      if ($197) {
                       __THREW__ = 0;
                       invoke_v(210);
                       $198 = __THREW__; __THREW__ = 0;
                       $199 = ___cxa_find_matching_catch_2()|0;
                       $200 = tempRet0;
                       $201 = HEAP32[$193>>2]|0;
                       $202 = HEAP32[$201>>2]|0;
                       $203 = (($202) + -1)|0;
                       HEAP32[$201>>2] = $203;
                       $$idx$val$i$i$i67$i$i$i$i = HEAP32[$193>>2]|0;
                       $204 = HEAP32[$$idx$val$i$i$i67$i$i$i$i>>2]|0;
                       $205 = ($204|0)==(0);
                       do {
                        if ($205) {
                         $231 = ((($201)) + 12|0);
                         __THREW__ = 0;
                         invoke_vi(295,($231|0));
                         $232 = __THREW__; __THREW__ = 0;
                         $233 = $232&1;
                         if ($233) {
                          label = 188;
                          break L84;
                         }
                         $$idx3$val$i$i$i68$i$i$i$i = HEAP32[$193>>2]|0;
                         $234 = ((($$idx3$val$i$i$i68$i$i$i$i)) + 4|0);
                         $235 = HEAP32[$234>>2]|0;
                         $236 = (($235) + -1)|0;
                         HEAP32[$234>>2] = $236;
                         $$idx2$val$i$i$i69$i$i$i$i = HEAP32[$193>>2]|0;
                         $237 = ((($$idx2$val$i$i$i69$i$i$i$i)) + 4|0);
                         $238 = HEAP32[$237>>2]|0;
                         $239 = ($238|0)==(0);
                         if (!($239)) {
                          break;
                         }
                         _free($201);
                        }
                       } while(0);
                       _free($193);
                       $personalityslot$sroa$0$053$i$i$i$i = $199;$personalityslot$sroa$5$052$i$i$i$i = $200;
                      } else {
                       dest=$196; src=11289; stop=dest+52|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
                       $206 = HEAP32[$_22$i$i$i$sroa$10$0$$sroa_idx681>>2]|0;
                       $$idx$val$i$i$i$i$i = HEAP32[$_22$i$i$i$sroa$7$0$$sroa_idx678>>2]|0;
                       $207 = ($206|0)==($$idx$val$i$i$i$i$i|0);
                       do {
                        if ($207) {
                         __THREW__ = 0;
                         invoke_vi(294,($144|0));
                         $208 = __THREW__; __THREW__ = 0;
                         $209 = $208&1;
                         if (!($209)) {
                          $$pre$i$i$i$i$i = HEAP32[$_22$i$i$i$sroa$10$0$$sroa_idx681>>2]|0;
                          $227 = $$pre$i$i$i$i$i;
                          break;
                         }
                         $210 = ___cxa_find_matching_catch_2()|0;
                         $211 = tempRet0;
                         _free($196);
                         $212 = HEAP32[$193>>2]|0;
                         $213 = HEAP32[$212>>2]|0;
                         $214 = (($213) + -1)|0;
                         HEAP32[$212>>2] = $214;
                         $$idx$val$i$i$i$i$i$i$i = HEAP32[$193>>2]|0;
                         $215 = HEAP32[$$idx$val$i$i$i$i$i$i$i>>2]|0;
                         $216 = ($215|0)==(0);
                         do {
                          if ($216) {
                           $217 = ((($212)) + 12|0);
                           __THREW__ = 0;
                           invoke_vi(295,($217|0));
                           $218 = __THREW__; __THREW__ = 0;
                           $219 = $218&1;
                           if ($219) {
                            $240 = ___cxa_find_matching_catch_2()|0;
                            $241 = tempRet0;
                            $personalityslot$sroa$0$053$i$i$i$i = $240;$personalityslot$sroa$5$052$i$i$i$i = $241;
                            break L87;
                           }
                           $$idx3$val$i$i$i$i$i$i$i = HEAP32[$193>>2]|0;
                           $220 = ((($$idx3$val$i$i$i$i$i$i$i)) + 4|0);
                           $221 = HEAP32[$220>>2]|0;
                           $222 = (($221) + -1)|0;
                           HEAP32[$220>>2] = $222;
                           $$idx2$val$i$i$i$i$i$i$i = HEAP32[$193>>2]|0;
                           $223 = ((($$idx2$val$i$i$i$i$i$i$i)) + 4|0);
                           $224 = HEAP32[$223>>2]|0;
                           $225 = ($224|0)==(0);
                           if (!($225)) {
                            break;
                           }
                           _free($212);
                          }
                         } while(0);
                         _free($193);
                         $personalityslot$sroa$0$053$i$i$i$i = $210;$personalityslot$sroa$5$052$i$i$i$i = $211;
                         break L87;
                        } else {
                         $227 = $206;
                        }
                       } while(0);
                       $226 = HEAP32[$144>>2]|0;
                       $_22$sroa$0$0$$sroa_idx$i$i$i$i$i = (($226) + (($227*20)|0)|0);
                       HEAP32[$_22$sroa$0$0$$sroa_idx$i$i$i$i$i>>2] = $196;
                       $_22$sroa$4$0$$sroa_idx27$i$i$i$i$i = (((($226) + (($227*20)|0)|0)) + 4|0);
                       HEAP32[$_22$sroa$4$0$$sroa_idx27$i$i$i$i$i>>2] = 52;
                       $_22$sroa$5$0$$sroa_idx29$i$i$i$i$i = (((($226) + (($227*20)|0)|0)) + 8|0);
                       HEAP32[$_22$sroa$5$0$$sroa_idx29$i$i$i$i$i>>2] = 52;
                       $_22$sroa$6$0$$sroa_idx31$i$i$i$i$i = (((($226) + (($227*20)|0)|0)) + 12|0);
                       HEAP32[$_22$sroa$6$0$$sroa_idx31$i$i$i$i$i>>2] = $193;
                       $_22$sroa$7$0$$sroa_idx33$i$i$i$i$i = (((($226) + (($227*20)|0)|0)) + 16|0);
                       HEAP32[$_22$sroa$7$0$$sroa_idx33$i$i$i$i$i>>2] = 1032;
                       $228 = (($227) + 1)|0;
                       HEAP32[$_22$i$i$i$sroa$10$0$$sroa_idx681>>2] = $228;
                       $$pre = HEAP32[$_30$sroa$0$0$$sroa_idx$i$i$i>>2]|0;
                       $$pre773 = HEAP32[$_30$sroa$5$0$$sroa_idx316$i$i$i>>2]|0;
                       $229 = (($$pre) + (($$pre773*20)|0)|0);
                       $230 = ($$pre773|0)==(0);
                       L108: do {
                        if ($230) {
                         label = 91;
                        } else {
                         $243 = $$pre;
                         while(1) {
                          $242 = ((($243)) + 20|0);
                          $244 = HEAP32[$243>>2]|0;
                          $245 = ((($243)) + 8|0);
                          $246 = HEAP32[$245>>2]|0;
                          $247 = ($246|0)==(60);
                          if ($247) {
                           $253 = ($244|0)==(11341|0);
                           if ($253) {
                            break;
                           }
                           $254 = (_memcmp(11341,$244,60)|0);
                           $255 = ($254|0)==(0);
                           if ($255) {
                            break;
                           }
                          }
                          $256 = ($242|0)==($229|0);
                          if ($256) {
                           label = 91;
                           break L108;
                          } else {
                           $243 = $242;
                          }
                         }
                         $257 = ((($243)) + 12|0);
                         $258 = HEAP32[$257>>2]|0;
                         $$idx1$i7$i$i$i$i = ((($243)) + 16|0);
                         $$idx1$val$i8$i$i$i$i = HEAP32[$$idx1$i7$i$i$i$i>>2]|0;
                         $$idx1$val$val$i9$i$i$i$i = HEAP32[$$idx1$val$i8$i$i$i$i>>2]|0;
                         __THREW__ = 0;
                         invoke_vi($$idx1$val$val$i9$i$i$i$i|0,($258|0));
                         $259 = __THREW__; __THREW__ = 0;
                         $260 = $259&1;
                         if ($260) {
                          $274 = ___cxa_find_matching_catch_2()|0;
                          $275 = tempRet0;
                          HEAP32[$257>>2] = 1;
                          HEAP32[$$idx1$i7$i$i$i$i>>2] = (1056);
                          $personalityslot$sroa$0$055$i$i$i$i = $274;$personalityslot$sroa$5$054$i$i$i$i = $275;
                          label = 89;
                          break;
                         }
                         $261 = HEAP32[$$idx1$i7$i$i$i$i>>2]|0;
                         $262 = ((($261)) + 4|0);
                         $263 = HEAP32[$262>>2]|0;
                         $264 = ($263|0)==(0);
                         if (!($264)) {
                          _free($258);
                         }
                         HEAP32[$257>>2] = 1;
                         HEAP32[$$idx1$i7$i$i$i$i>>2] = (1056);
                        }
                       } while(0);
                       L122: do {
                        if ((label|0) == 91) {
                         $248 = (_malloc(60)|0);
                         $249 = ($248|0)==(0|0);
                         if ($249) {
                          __THREW__ = 0;
                          invoke_v(210);
                          $250 = __THREW__; __THREW__ = 0;
                          $251 = ___cxa_find_matching_catch_2()|0;
                          $252 = tempRet0;
                          $personalityslot$sroa$0$055$i$i$i$i = $251;$personalityslot$sroa$5$054$i$i$i$i = $252;
                          label = 89;
                          break;
                         }
                         dest=$248; src=11341; stop=dest+60|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
                         $265 = HEAP32[$_30$sroa$5$0$$sroa_idx316$i$i$i>>2]|0;
                         $$idx$val$i$i$i147$i$i = HEAP32[$_30$sroa$4$0$$sroa_idx314$i$i$i>>2]|0;
                         $266 = ($265|0)==($$idx$val$i$i$i147$i$i|0);
                         do {
                          if ($266) {
                           __THREW__ = 0;
                           invoke_vi(296,($_30$sroa$0$0$$sroa_idx$i$i$i|0));
                           $267 = __THREW__; __THREW__ = 0;
                           $268 = $267&1;
                           if ($268) {
                            $269 = ___cxa_find_matching_catch_2()|0;
                            $270 = tempRet0;
                            _free($248);
                            $personalityslot$sroa$0$055$i$i$i$i = $269;$personalityslot$sroa$5$054$i$i$i$i = $270;
                            label = 89;
                            break L122;
                           } else {
                            $$pre$i$i$i150$i$i = HEAP32[$_30$sroa$5$0$$sroa_idx316$i$i$i>>2]|0;
                            $272 = $$pre$i$i$i150$i$i;
                            break;
                           }
                          } else {
                           $272 = $265;
                          }
                         } while(0);
                         $271 = HEAP32[$_30$sroa$0$0$$sroa_idx$i$i$i>>2]|0;
                         $_22$sroa$0$0$$sroa_idx$i$i$i155$i$i = (($271) + (($272*20)|0)|0);
                         HEAP32[$_22$sroa$0$0$$sroa_idx$i$i$i155$i$i>>2] = $248;
                         $_22$sroa$4$0$$sroa_idx27$i$i$i156$i$i = (((($271) + (($272*20)|0)|0)) + 4|0);
                         HEAP32[$_22$sroa$4$0$$sroa_idx27$i$i$i156$i$i>>2] = 60;
                         $_22$sroa$5$0$$sroa_idx29$i$i$i157$i$i = (((($271) + (($272*20)|0)|0)) + 8|0);
                         HEAP32[$_22$sroa$5$0$$sroa_idx29$i$i$i157$i$i>>2] = 60;
                         $_22$sroa$6$0$$sroa_idx31$i$i$i158$i$i = (((($271) + (($272*20)|0)|0)) + 12|0);
                         HEAP32[$_22$sroa$6$0$$sroa_idx31$i$i$i158$i$i>>2] = (1);
                         $_22$sroa$7$0$$sroa_idx33$i$i$i159$i$i = (((($271) + (($272*20)|0)|0)) + 16|0);
                         HEAP32[$_22$sroa$7$0$$sroa_idx33$i$i$i159$i$i>>2] = 1056;
                         $273 = (($272) + 1)|0;
                         HEAP32[$_30$sroa$5$0$$sroa_idx316$i$i$i>>2] = $273;
                        }
                       } while(0);
                       if ((label|0) == 89) {
                        $eh$lpad$body130$i$i$index42Z2D = $personalityslot$sroa$5$054$i$i$i$i;$eh$lpad$body130$i$i$indexZ2D = $personalityslot$sroa$0$055$i$i$i$i;
                        label = 189;
                        break L84;
                       }
                       $276 = HEAP32[$154>>2]|0;
                       $277 = HEAP32[$141>>2]|0;
                       $278 = ((($277)) + 24|0);
                       $279 = HEAP32[$278>>2]|0;
                       __THREW__ = 0;
                       invoke_vi($279|0,($276|0));
                       $280 = __THREW__; __THREW__ = 0;
                       $281 = $280&1;
                       if ($281) {
                        label = 188;
                        break L84;
                       }
                       $282 = (_malloc(1408)|0);
                       $283 = ($282|0)==(0|0);
                       L137: do {
                        if ($283) {
                         __THREW__ = 0;
                         invoke_v(210);
                         $284 = __THREW__; __THREW__ = 0;
                         $285 = ___cxa_find_matching_catch_2()|0;
                         $286 = tempRet0;
                         $personalityslot$sroa$0$1$i$i$i172$i$i = $285;$personalityslot$sroa$7$1$i$i$i173$i$i = $286;
                         label = 108;
                        } else {
                         $287 = $282;
                         __THREW__ = 0;
                         invoke_vii(211,($_13$i$i$i170$i$i|0),32);
                         $288 = __THREW__; __THREW__ = 0;
                         $289 = $288&1;
                         do {
                          if ($289) {
                           $292 = ___cxa_find_matching_catch_2()|0;
                           $293 = tempRet0;
                           $personalityslot$sroa$0$0$i$i$i179$i$i = $292;$personalityslot$sroa$7$0$i$i$i180$i$i = $293;
                          } else {
                           __THREW__ = 0;
                           invoke_vii(211,($_17$i$i$i171$i$i|0),32);
                           $290 = __THREW__; __THREW__ = 0;
                           $291 = $290&1;
                           if ($291) {
                            $294 = ___cxa_find_matching_catch_2()|0;
                            $295 = tempRet0;
                            $296 = ((($_13$i$i$i170$i$i)) + 4|0);
                            $297 = HEAP32[$296>>2]|0;
                            $not$$i$i$i$i$i$i$i191$i$i = ($297|0)==(0);
                            if ($not$$i$i$i$i$i$i$i191$i$i) {
                             $personalityslot$sroa$0$0$i$i$i179$i$i = $294;$personalityslot$sroa$7$0$i$i$i180$i$i = $295;
                             break;
                            }
                            $298 = HEAP32[$_13$i$i$i170$i$i>>2]|0;
                            _free($298);
                            $personalityslot$sroa$0$0$i$i$i179$i$i = $294;$personalityslot$sroa$7$0$i$i$i180$i$i = $295;
                            break;
                           }
                           $_1$i$i$i$sroa$14$20$copyload = HEAP32[$_13$i$i$i170$i$i>>2]|0;
                           $_1$i$i$i$sroa$16$20$$sroa_idx724 = ((($_13$i$i$i170$i$i)) + 4|0);
                           $_1$i$i$i$sroa$16$20$copyload = HEAP32[$_1$i$i$i$sroa$16$20$$sroa_idx724>>2]|0;
                           $_1$i$i$i$sroa$17$20$$sroa_idx727 = ((($_13$i$i$i170$i$i)) + 8|0);
                           $_1$i$i$i$sroa$17$20$copyload = HEAP32[$_1$i$i$i$sroa$17$20$$sroa_idx727>>2]|0;
                           $_1$i$i$i$sroa$17728$32$copyload = HEAP32[$_17$i$i$i171$i$i>>2]|0;
                           $_1$i$i$i$sroa$19$32$$sroa_idx734 = ((($_17$i$i$i171$i$i)) + 4|0);
                           $_1$i$i$i$sroa$19$32$copyload = HEAP32[$_1$i$i$i$sroa$19$32$$sroa_idx734>>2]|0;
                           $_1$i$i$i$sroa$20$32$$sroa_idx737 = ((($_17$i$i$i171$i$i)) + 8|0);
                           $_1$i$i$i$sroa$20$32$copyload = HEAP32[$_1$i$i$i$sroa$20$32$$sroa_idx737>>2]|0;
                           $299 = (_malloc(512)|0);
                           $300 = ($299|0)==(0|0);
                           do {
                            if ($300) {
                             __THREW__ = 0;
                             invoke_v(210);
                             $301 = __THREW__; __THREW__ = 0;
                             $302 = ___cxa_find_matching_catch_2()|0;
                             $303 = tempRet0;
                             $personalityslot$sroa$0$1$i$i17$i$i$i = $302;$personalityslot$sroa$7$1$i$i18$i$i$i = $303;
                             label = 117;
                            } else {
                             $306 = $299;
                             HEAP32[$_9$i$i$i$i$i>>2] = $306;
                             $307 = ((($_9$i$i$i$i$i)) + 4|0);
                             HEAP32[$307>>2] = 32;
                             $308 = ((($_9$i$i$i$i$i)) + 8|0);
                             HEAP32[$308>>2] = 0;
                             __THREW__ = 0;
                             invoke_vii(211,($_13$i$i15$i$i$i|0),32);
                             $309 = __THREW__; __THREW__ = 0;
                             $310 = $309&1;
                             do {
                              if ($310) {
                               $313 = ___cxa_find_matching_catch_2()|0;
                               $314 = tempRet0;
                               $personalityslot$sroa$0$0$i$i24$i$i$i = $313;$personalityslot$sroa$7$0$i$i25$i$i$i = $314;
                              } else {
                               __THREW__ = 0;
                               invoke_vii(211,($_17$i$i16$i$i$i|0),32);
                               $311 = __THREW__; __THREW__ = 0;
                               $312 = $311&1;
                               if ($312) {
                                $315 = ___cxa_find_matching_catch_2()|0;
                                $316 = tempRet0;
                                $317 = ((($_13$i$i15$i$i$i)) + 4|0);
                                $318 = HEAP32[$317>>2]|0;
                                $not$$i$i$i$i$i$i36$i$i$i = ($318|0)==(0);
                                if ($not$$i$i$i$i$i$i36$i$i$i) {
                                 $personalityslot$sroa$0$0$i$i24$i$i$i = $315;$personalityslot$sroa$7$0$i$i25$i$i$i = $316;
                                 break;
                                }
                                $319 = HEAP32[$_13$i$i15$i$i$i>>2]|0;
                                _free($319);
                                $personalityslot$sroa$0$0$i$i24$i$i$i = $315;$personalityslot$sroa$7$0$i$i25$i$i$i = $316;
                                break;
                               }
                               ;HEAP32[$_4$sroa$4$i$i$i>>2]=HEAP32[$_9$i$i$i$i$i>>2]|0;HEAP32[$_4$sroa$4$i$i$i+4>>2]=HEAP32[$_9$i$i$i$i$i+4>>2]|0;HEAP32[$_4$sroa$4$i$i$i+8>>2]=HEAP32[$_9$i$i$i$i$i+8>>2]|0;
                               ;HEAP32[$_4$sroa$6$i$i$i>>2]=HEAP32[$_13$i$i15$i$i$i>>2]|0;HEAP32[$_4$sroa$6$i$i$i+4>>2]=HEAP32[$_13$i$i15$i$i$i+4>>2]|0;HEAP32[$_4$sroa$6$i$i$i+8>>2]=HEAP32[$_13$i$i15$i$i$i+8>>2]|0;
                               ;HEAP32[$_4$sroa$7$i$i$i>>2]=HEAP32[$_17$i$i16$i$i$i>>2]|0;HEAP32[$_4$sroa$7$i$i$i+4>>2]=HEAP32[$_17$i$i16$i$i$i+4>>2]|0;HEAP32[$_4$sroa$7$i$i$i+8>>2]=HEAP32[$_17$i$i16$i$i$i+8>>2]|0;
                               HEAP32[$joints$i$i>>2] = 0;
                               $_1$i$i$i$sroa$4$0$$sroa_idx709 = ((($joints$i$i)) + 4|0);
                               HEAP32[$_1$i$i$i$sroa$4$0$$sroa_idx709>>2] = $287;
                               $_1$i$i$i$sroa$8$0$$sroa_idx713 = ((($joints$i$i)) + 8|0);
                               HEAP32[$_1$i$i$i$sroa$8$0$$sroa_idx713>>2] = 32;
                               $_1$i$i$i$sroa$11$0$$sroa_idx716 = ((($joints$i$i)) + 12|0);
                               HEAP32[$_1$i$i$i$sroa$11$0$$sroa_idx716>>2] = 0;
                               $_1$i$i$i$sroa$13$0$$sroa_idx718 = ((($joints$i$i)) + 16|0);
                               HEAP32[$_1$i$i$i$sroa$13$0$$sroa_idx718>>2] = 31;
                               $_1$i$i$i$sroa$14$0$$sroa_idx720 = ((($joints$i$i)) + 20|0);
                               HEAP32[$_1$i$i$i$sroa$14$0$$sroa_idx720>>2] = $_1$i$i$i$sroa$14$20$copyload;
                               $_1$i$i$i$sroa$16$0$$sroa_idx723 = ((($joints$i$i)) + 24|0);
                               HEAP32[$_1$i$i$i$sroa$16$0$$sroa_idx723>>2] = $_1$i$i$i$sroa$16$20$copyload;
                               $_1$i$i$i$sroa$17$0$$sroa_idx726 = ((($joints$i$i)) + 28|0);
                               HEAP32[$_1$i$i$i$sroa$17$0$$sroa_idx726>>2] = $_1$i$i$i$sroa$17$20$copyload;
                               $_1$i$i$i$sroa$17728$0$$sroa_idx730 = ((($joints$i$i)) + 32|0);
                               HEAP32[$_1$i$i$i$sroa$17728$0$$sroa_idx730>>2] = $_1$i$i$i$sroa$17728$32$copyload;
                               $_1$i$i$i$sroa$19$0$$sroa_idx733 = ((($joints$i$i)) + 36|0);
                               HEAP32[$_1$i$i$i$sroa$19$0$$sroa_idx733>>2] = $_1$i$i$i$sroa$19$32$copyload;
                               $_1$i$i$i$sroa$20$0$$sroa_idx736 = ((($joints$i$i)) + 40|0);
                               HEAP32[$_1$i$i$i$sroa$20$0$$sroa_idx736>>2] = $_1$i$i$i$sroa$20$32$copyload;
                               $_1$i$i$i$sroa$20738$0$$sroa_idx740 = ((($joints$i$i)) + 44|0);
                               temp_Int32x4_ptr = $_1$i$i$i$sroa$20738$0$$sroa_idx740;SIMD_Int32x4_store(HEAPU8, temp_Int32x4_ptr, SIMD_Int32x4(0,32,22,0));
                               $_4$sroa$4$0$$sroa_idx$i$i$i = ((($joints$i$i)) + 60|0);
                               ;HEAP32[$_4$sroa$4$0$$sroa_idx$i$i$i>>2]=HEAP32[$_4$sroa$4$i$i$i>>2]|0;HEAP32[$_4$sroa$4$0$$sroa_idx$i$i$i+4>>2]=HEAP32[$_4$sroa$4$i$i$i+4>>2]|0;HEAP32[$_4$sroa$4$0$$sroa_idx$i$i$i+8>>2]=HEAP32[$_4$sroa$4$i$i$i+8>>2]|0;
                               $_4$sroa$5$0$$sroa_idx44$i$i$i = ((($joints$i$i)) + 72|0);
                               HEAP32[$_4$sroa$5$0$$sroa_idx44$i$i$i>>2] = 31;
                               $_4$sroa$6$0$$sroa_idx$i$i$i = ((($joints$i$i)) + 76|0);
                               ;HEAP32[$_4$sroa$6$0$$sroa_idx$i$i$i>>2]=HEAP32[$_4$sroa$6$i$i$i>>2]|0;HEAP32[$_4$sroa$6$0$$sroa_idx$i$i$i+4>>2]=HEAP32[$_4$sroa$6$i$i$i+4>>2]|0;HEAP32[$_4$sroa$6$0$$sroa_idx$i$i$i+8>>2]=HEAP32[$_4$sroa$6$i$i$i+8>>2]|0;
                               $_4$sroa$7$0$$sroa_idx$i$i$i = ((($joints$i$i)) + 88|0);
                               ;HEAP32[$_4$sroa$7$0$$sroa_idx$i$i$i>>2]=HEAP32[$_4$sroa$7$i$i$i>>2]|0;HEAP32[$_4$sroa$7$0$$sroa_idx$i$i$i+4>>2]=HEAP32[$_4$sroa$7$i$i$i+4>>2]|0;HEAP32[$_4$sroa$7$0$$sroa_idx$i$i$i+8>>2]=HEAP32[$_4$sroa$7$i$i$i+8>>2]|0;
                               $_4$sroa$8$0$$sroa_idx54$i$i$i = ((($joints$i$i)) + 100|0);
                               HEAP32[$_4$sroa$8$0$$sroa_idx54$i$i$i>>2] = 0;
                               $_4$sroa$9$0$$sroa_idx56$i$i$i = ((($joints$i$i)) + 104|0);
                               HEAP32[$_4$sroa$9$0$$sroa_idx56$i$i$i>>2] = 32;
                               $_4$sroa$10$0$$sroa_idx58$i$i$i = ((($joints$i$i)) + 108|0);
                               HEAP32[$_4$sroa$10$0$$sroa_idx58$i$i$i>>2] = 22;
                               __THREW__ = 0;
                               invoke_vii(257,($_12$i$i$i$i$i|0),64);
                               $322 = __THREW__; __THREW__ = 0;
                               $323 = $322&1;
                               if ($323) {
                                $433 = ___cxa_find_matching_catch_2()|0;
                                $434 = tempRet0;
                                $eh$lpad$body220$i$i$index22Z2D = $434;$eh$lpad$body220$i$i$indexZ2D = $433;
                               } else {
                                $_5$sroa$0$0$copyload36$i$i$i$i = HEAP32[$_12$i$i$i$i$i>>2]|0;
                                $_5$sroa$5$0$$sroa_idx39$i$i$i$i = ((($_12$i$i$i$i$i)) + 4|0);
                                $_5$sroa$5$0$copyload40$i$i$i$i = HEAP32[$_5$sroa$5$0$$sroa_idx39$i$i$i$i>>2]|0;
                                $_5$sroa$541$0$$sroa_idx45$i$i$i$i = ((($_12$i$i$i$i$i)) + 8|0);
                                $_5$sroa$541$0$copyload47$i$i$i$i = HEAP32[$_5$sroa$541$0$$sroa_idx45$i$i$i$i>>2]|0;
                                __THREW__ = 0;
                                invoke_vii(257,($_12$i4$i$i$i$i|0),64);
                                $324 = __THREW__; __THREW__ = 0;
                                $325 = $324&1;
                                do {
                                 if ($325) {
                                  $334 = ___cxa_find_matching_catch_2()|0;
                                  $335 = tempRet0;
                                  $personalityslot$sroa$0$0$i$i$i$i = $334;$personalityslot$sroa$6$0$i$i$i$i = $335;
                                 } else {
                                  $_8$sroa$0$0$copyload22$i$i$i$i = HEAP32[$_12$i4$i$i$i$i>>2]|0;
                                  $_8$sroa$5$0$$sroa_idx25$i$i$i$i = ((($_12$i4$i$i$i$i)) + 4|0);
                                  $_8$sroa$5$0$copyload26$i$i$i$i = HEAP32[$_8$sroa$5$0$$sroa_idx25$i$i$i$i>>2]|0;
                                  $_8$sroa$527$0$$sroa_idx31$i$i$i$i = ((($_12$i4$i$i$i$i)) + 8|0);
                                  $_8$sroa$527$0$copyload33$i$i$i$i = HEAP32[$_8$sroa$527$0$$sroa_idx31$i$i$i$i>>2]|0;
                                  HEAP32[$arg2$i$i$i$i>>2] = 0;
                                  $326 = ((($arg2$i$i$i$i)) + 4|0);
                                  HEAP32[$326>>2] = 2;
                                  __THREW__ = 0;
                                  invoke_vii(223,($_10$i$i$i$i|0),($arg2$i$i$i$i|0));
                                  $327 = __THREW__; __THREW__ = 0;
                                  $328 = $327&1;
                                  do {
                                   if ($328) {
                                    $336 = ___cxa_find_matching_catch_2()|0;
                                    $337 = tempRet0;
                                    $personalityslot$sroa$0$1$i$i$i$i = $336;$personalityslot$sroa$6$1$i$i$i$i = $337;
                                   } else {
                                    HEAP32[$arg7$i$i$i$i>>2] = 0;
                                    $329 = ((($arg7$i$i$i$i)) + 4|0);
                                    HEAP32[$329>>2] = 2;
                                    __THREW__ = 0;
                                    invoke_vii(223,($_15$i$i$i$i|0),($arg7$i$i$i$i|0));
                                    $330 = __THREW__; __THREW__ = 0;
                                    $331 = $330&1;
                                    if ($331) {
                                     $338 = ___cxa_find_matching_catch_2()|0;
                                     $339 = tempRet0;
                                     $340 = ((($_10$i$i$i$i)) + 4|0);
                                     $341 = HEAP32[$340>>2]|0;
                                     $not$$i$i$i$i$i$i210$i$i = ($341|0)==(0);
                                     if ($not$$i$i$i$i$i$i210$i$i) {
                                      $personalityslot$sroa$0$1$i$i$i$i = $338;$personalityslot$sroa$6$1$i$i$i$i = $339;
                                      break;
                                     }
                                     $342 = HEAP32[$_10$i$i$i$i>>2]|0;
                                     _free($342);
                                     $personalityslot$sroa$0$1$i$i$i$i = $338;$personalityslot$sroa$6$1$i$i$i$i = $339;
                                     break;
                                    }
                                    ;HEAP32[$_19$sroa$6$i$i$i>>2]=HEAP32[$_10$i$i$i$i>>2]|0;HEAP32[$_19$sroa$6$i$i$i+4>>2]=HEAP32[$_10$i$i$i$i+4>>2]|0;HEAP32[$_19$sroa$6$i$i$i+8>>2]=HEAP32[$_10$i$i$i$i+8>>2]|0;
                                    ;HEAP32[$_19$sroa$10$i$i$i>>2]=HEAP32[$_15$i$i$i$i>>2]|0;HEAP32[$_19$sroa$10$i$i$i+4>>2]=HEAP32[$_15$i$i$i$i+4>>2]|0;HEAP32[$_19$sroa$10$i$i$i+8>>2]=HEAP32[$_15$i$i$i$i+8>>2]|0;
                                    HEAP32[$solver$i$i>>2] = 1;
                                    $correction_mode$i$sroa$4$0$_22$sroa$0$0$$sroa_cast21$i$sroa_idx428$i$i = ((($solver$i$i)) + 4|0);
                                    temp_Float32x4_ptr = $correction_mode$i$sroa$4$0$_22$sroa$0$0$$sroa_cast21$i$sroa_idx428$i$i;SIMD_Float32x4_store(HEAPU8, temp_Float32x4_ptr, SIMD_Float32x4(Math_fround(0.20000000298023224),Math_fround(0.20000000298023224),Math_fround(0.079999998211860657),Math_fround(0.40000000596046448)));
                                    $_22$sroa$5$0$$sroa_idx28$i$i$i = ((($solver$i$i)) + 20|0);
                                    HEAPF32[$_22$sroa$5$0$$sroa_idx28$i$i$i>>2] = 1.0;
                                    $_19$sroa$0$0$$sroa_idx$i$i$i = ((($solver$i$i)) + 24|0);
                                    HEAP32[$_19$sroa$0$0$$sroa_idx$i$i$i>>2] = $_5$sroa$0$0$copyload36$i$i$i$i;
                                    $_19$sroa$4$0$$sroa_idx16$i$i$i = ((($solver$i$i)) + 28|0);
                                    HEAP32[$_19$sroa$4$0$$sroa_idx16$i$i$i>>2] = $_5$sroa$5$0$copyload40$i$i$i$i;
                                    $_19$sroa$5$0$$sroa_idx18$i$i$i = ((($solver$i$i)) + 32|0);
                                    HEAP32[$_19$sroa$5$0$$sroa_idx18$i$i$i>>2] = $_5$sroa$541$0$copyload47$i$i$i$i;
                                    $_19$sroa$6$0$$sroa_idx$i$i$i = ((($solver$i$i)) + 36|0);
                                    ;HEAP32[$_19$sroa$6$0$$sroa_idx$i$i$i>>2]=HEAP32[$_19$sroa$6$i$i$i>>2]|0;HEAP32[$_19$sroa$6$0$$sroa_idx$i$i$i+4>>2]=HEAP32[$_19$sroa$6$i$i$i+4>>2]|0;HEAP32[$_19$sroa$6$0$$sroa_idx$i$i$i+8>>2]=HEAP32[$_19$sroa$6$i$i$i+8>>2]|0;
                                    $_19$sroa$7$0$$sroa_idx25$i$i$i = ((($solver$i$i)) + 48|0);
                                    HEAP32[$_19$sroa$7$0$$sroa_idx25$i$i$i>>2] = $_8$sroa$0$0$copyload22$i$i$i$i;
                                    $_19$sroa$8$0$$sroa_idx28$i$i$i = ((($solver$i$i)) + 52|0);
                                    HEAP32[$_19$sroa$8$0$$sroa_idx28$i$i$i>>2] = $_8$sroa$5$0$copyload26$i$i$i$i;
                                    $_19$sroa$9$0$$sroa_idx30$i$i$i = ((($solver$i$i)) + 56|0);
                                    HEAP32[$_19$sroa$9$0$$sroa_idx30$i$i$i>>2] = $_8$sroa$527$0$copyload33$i$i$i$i;
                                    $_19$sroa$10$0$$sroa_idx$i$i$i = ((($solver$i$i)) + 60|0);
                                    ;HEAP32[$_19$sroa$10$0$$sroa_idx$i$i$i>>2]=HEAP32[$_19$sroa$10$i$i$i>>2]|0;HEAP32[$_19$sroa$10$0$$sroa_idx$i$i$i+4>>2]=HEAP32[$_19$sroa$10$i$i$i+4>>2]|0;HEAP32[$_19$sroa$10$0$$sroa_idx$i$i$i+8>>2]=HEAP32[$_19$sroa$10$i$i$i+8>>2]|0;
                                    $_19$sroa$11$0$$sroa_idx37$i$i$i = ((($solver$i$i)) + 72|0);
                                    HEAPF32[$_19$sroa$11$0$$sroa_idx37$i$i$i>>2] = 0.10000000149011612;
                                    $_19$sroa$12$0$$sroa_idx39$i$i$i = ((($solver$i$i)) + 76|0);
                                    HEAP32[$_19$sroa$12$0$$sroa_idx39$i$i$i>>2] = 2;
                                    $343 = ((($solver$i$i)) + 80|0);
                                    HEAP32[$343>>2] = 10;
                                    $344 = ((($solver$i$i)) + 84|0);
                                    HEAP32[$344>>2] = 10;
                                    $_16$sroa$0$0$$sroa_idx$i212$i$i = ((($solver$i$i)) + 88|0);
                                    temp_Int32x4_ptr = $_16$sroa$0$0$$sroa_idx$i212$i$i;SIMD_Int32x4_store(HEAPU8, temp_Int32x4_ptr, SIMD_Int32x4(1,0,0,1));
                                    $_17$sroa$5$0$$sroa_idx53$i$i$i = ((($solver$i$i)) + 104|0);
                                    temp_Int32x4_ptr = $_17$sroa$5$0$$sroa_idx53$i$i$i;SIMD_Int32x4_store(HEAPU8, temp_Int32x4_ptr, SIMD_Int32x4(0,0,1,0));
                                    $_18$sroa$7$0$$sroa_idx49$i$i$i = ((($solver$i$i)) + 120|0);
                                    HEAP32[$_18$sroa$7$0$$sroa_idx49$i$i$i>>2] = 0;
                                    _memcpy(($_51$i$i|0),($cworld$i$i|0),160)|0;
                                    $345 = (_malloc(256)|0);
                                    $346 = ($345|0)==(0|0);
                                    L170: do {
                                     if ($346) {
                                      __THREW__ = 0;
                                      invoke_v(210);
                                      $347 = __THREW__; __THREW__ = 0;
                                      $348 = ___cxa_find_matching_catch_2()|0;
                                      $349 = tempRet0;
                                      $personalityslot$sroa$0$1$i$i222$i$i = $348;$personalityslot$sroa$7$1$i$i$i$i = $349;
                                      label = 191;
                                     } else {
                                      $350 = $345;
                                      __THREW__ = 0;
                                      invoke_vii(211,($_13$i$i$i$i|0),32);
                                      $351 = __THREW__; __THREW__ = 0;
                                      $352 = $351&1;
                                      do {
                                       if ($352) {
                                        $355 = ___cxa_find_matching_catch_2()|0;
                                        $356 = tempRet0;
                                        $personalityslot$sroa$0$0$i$i226$i$i = $355;$personalityslot$sroa$7$0$i$i$i$i = $356;
                                       } else {
                                        __THREW__ = 0;
                                        invoke_vii(211,($_17$i$i$i$i|0),32);
                                        $353 = __THREW__; __THREW__ = 0;
                                        $354 = $353&1;
                                        if ($354) {
                                         $357 = ___cxa_find_matching_catch_2()|0;
                                         $358 = tempRet0;
                                         $359 = ((($_13$i$i$i$i)) + 4|0);
                                         $360 = HEAP32[$359>>2]|0;
                                         $not$$i$i$i$i$i$i230$i$i = ($360|0)==(0);
                                         if ($not$$i$i$i$i$i$i230$i$i) {
                                          $personalityslot$sroa$0$0$i$i226$i$i = $357;$personalityslot$sroa$7$0$i$i$i$i = $358;
                                          break;
                                         }
                                         $361 = HEAP32[$_13$i$i$i$i>>2]|0;
                                         _free($361);
                                         $personalityslot$sroa$0$0$i$i226$i$i = $357;$personalityslot$sroa$7$0$i$i$i$i = $358;
                                         break;
                                        }
                                        HEAP32[$_52$i$i>>2] = 0;
                                        $_9$sroa$0$0$$sroa_idx$i$i$i$i = ((($_52$i$i)) + 4|0);
                                        HEAP32[$_9$sroa$0$0$$sroa_idx$i$i$i$i>>2] = $350;
                                        $_9$sroa$7$0$$sroa_idx8$i$i$i$i = ((($_52$i$i)) + 8|0);
                                        HEAP32[$_9$sroa$7$0$$sroa_idx8$i$i$i$i>>2] = 32;
                                        $_9$sroa$10$0$$sroa_idx11$i$i$i$i = ((($_52$i$i)) + 12|0);
                                        HEAP32[$_9$sroa$10$0$$sroa_idx11$i$i$i$i>>2] = 0;
                                        $362 = ((($_52$i$i)) + 16|0);
                                        HEAP32[$362>>2] = 31;
                                        $363 = ((($_52$i$i)) + 20|0);
                                        ;HEAP32[$363>>2]=HEAP32[$_13$i$i$i$i>>2]|0;HEAP32[$363+4>>2]=HEAP32[$_13$i$i$i$i+4>>2]|0;HEAP32[$363+8>>2]=HEAP32[$_13$i$i$i$i+8>>2]|0;
                                        $364 = ((($_52$i$i)) + 32|0);
                                        ;HEAP32[$364>>2]=HEAP32[$_17$i$i$i$i>>2]|0;HEAP32[$364+4>>2]=HEAP32[$_17$i$i$i$i+4>>2]|0;HEAP32[$364+8>>2]=HEAP32[$_17$i$i$i$i+8>>2]|0;
                                        $365 = ((($_52$i$i)) + 44|0);
                                        HEAP32[$365>>2] = 0;
                                        $366 = ((($_52$i$i)) + 48|0);
                                        HEAP32[$366>>2] = 32;
                                        $367 = ((($_52$i$i)) + 52|0);
                                        HEAP32[$367>>2] = 22;
                                        $368 = (_malloc(256)|0);
                                        $369 = ($368|0)==(0|0);
                                        if ($369) {
                                         __THREW__ = 0;
                                         invoke_v(210);
                                         $370 = __THREW__; __THREW__ = 0;
                                         $371 = ___cxa_find_matching_catch_2()|0;
                                         $372 = tempRet0;
                                         $personalityslot$sroa$0$1$i$i235$i$i = $371;$personalityslot$sroa$7$1$i$i236$i$i = $372;
                                        } else {
                                         $373 = $368;
                                         __THREW__ = 0;
                                         invoke_vii(211,($_13$i$i233$i$i|0),32);
                                         $374 = __THREW__; __THREW__ = 0;
                                         $375 = $374&1;
                                         do {
                                          if ($375) {
                                           $378 = ___cxa_find_matching_catch_2()|0;
                                           $379 = tempRet0;
                                           $personalityslot$sroa$0$0$i$i242$i$i = $378;$personalityslot$sroa$7$0$i$i243$i$i = $379;
                                          } else {
                                           __THREW__ = 0;
                                           invoke_vii(211,($_17$i$i234$i$i|0),32);
                                           $376 = __THREW__; __THREW__ = 0;
                                           $377 = $376&1;
                                           if ($377) {
                                            $380 = ___cxa_find_matching_catch_2()|0;
                                            $381 = tempRet0;
                                            $382 = ((($_13$i$i233$i$i)) + 4|0);
                                            $383 = HEAP32[$382>>2]|0;
                                            $not$$i$i$i$i$i$i254$i$i = ($383|0)==(0);
                                            if ($not$$i$i$i$i$i$i254$i$i) {
                                             $personalityslot$sroa$0$0$i$i242$i$i = $380;$personalityslot$sroa$7$0$i$i243$i$i = $381;
                                             break;
                                            }
                                            $384 = HEAP32[$_13$i$i233$i$i>>2]|0;
                                            _free($384);
                                            $personalityslot$sroa$0$0$i$i242$i$i = $380;$personalityslot$sroa$7$0$i$i243$i$i = $381;
                                            break;
                                           }
                                           ;HEAP32[$_54$sroa$8$i$i>>2]=HEAP32[$_13$i$i233$i$i>>2]|0;HEAP32[$_54$sroa$8$i$i+4>>2]=HEAP32[$_13$i$i233$i$i+4>>2]|0;HEAP32[$_54$sroa$8$i$i+8>>2]=HEAP32[$_13$i$i233$i$i+8>>2]|0;
                                           ;HEAP32[$_54$sroa$9$i$i>>2]=HEAP32[$_17$i$i234$i$i>>2]|0;HEAP32[$_54$sroa$9$i$i+4>>2]=HEAP32[$_17$i$i234$i$i+4>>2]|0;HEAP32[$_54$sroa$9$i$i+8>>2]=HEAP32[$_17$i$i234$i$i+8>>2]|0;
                                           _memcpy(($world$i|0),($_51$i$i|0),160)|0;
                                           $509 = ((($world$i)) + 160|0);
                                           dest=$509; src=$_52$i$i; stop=dest+56|0; do { HEAP32[dest>>2]=HEAP32[src>>2]|0; dest=dest+4|0; src=src+4|0; } while ((dest|0) < (stop|0));
                                           $_54$sroa$0$0$$sroa_idx$i$i = ((($world$i)) + 216|0);
                                           HEAP32[$_54$sroa$0$0$$sroa_idx$i$i>>2] = 0;
                                           $_54$sroa$4$0$$sroa_idx292$i$i = ((($world$i)) + 220|0);
                                           HEAP32[$_54$sroa$4$0$$sroa_idx292$i$i>>2] = $373;
                                           $_54$sroa$5$0$$sroa_idx295$i$i = ((($world$i)) + 224|0);
                                           HEAP32[$_54$sroa$5$0$$sroa_idx295$i$i>>2] = 32;
                                           $_54$sroa$6$0$$sroa_idx297$i$i = ((($world$i)) + 228|0);
                                           HEAP32[$_54$sroa$6$0$$sroa_idx297$i$i>>2] = 0;
                                           $_54$sroa$7$0$$sroa_idx299$i$i = ((($world$i)) + 232|0);
                                           HEAP32[$_54$sroa$7$0$$sroa_idx299$i$i>>2] = 31;
                                           $_54$sroa$8$0$$sroa_idx$i$i = ((($world$i)) + 236|0);
                                           ;HEAP32[$_54$sroa$8$0$$sroa_idx$i$i>>2]=HEAP32[$_54$sroa$8$i$i>>2]|0;HEAP32[$_54$sroa$8$0$$sroa_idx$i$i+4>>2]=HEAP32[$_54$sroa$8$i$i+4>>2]|0;HEAP32[$_54$sroa$8$0$$sroa_idx$i$i+8>>2]=HEAP32[$_54$sroa$8$i$i+8>>2]|0;
                                           $_54$sroa$9$0$$sroa_idx$i$i = ((($world$i)) + 248|0);
                                           ;HEAP32[$_54$sroa$9$0$$sroa_idx$i$i>>2]=HEAP32[$_54$sroa$9$i$i>>2]|0;HEAP32[$_54$sroa$9$0$$sroa_idx$i$i+4>>2]=HEAP32[$_54$sroa$9$i$i+4>>2]|0;HEAP32[$_54$sroa$9$0$$sroa_idx$i$i+8>>2]=HEAP32[$_54$sroa$9$i$i+8>>2]|0;
                                           $_54$sroa$10$0$$sroa_idx309$i$i = ((($world$i)) + 260|0);
                                           HEAP32[$_54$sroa$10$0$$sroa_idx309$i$i>>2] = 0;
                                           $_54$sroa$11$0$$sroa_idx311$i$i = ((($world$i)) + 264|0);
                                           HEAP32[$_54$sroa$11$0$$sroa_idx311$i$i>>2] = 32;
                                           $_54$sroa$12$0$$sroa_idx313$i$i = ((($world$i)) + 268|0);
                                           HEAP32[$_54$sroa$12$0$$sroa_idx313$i$i>>2] = 22;
                                           $_56$sroa$0$0$$sroa_idx$i$i = ((($world$i)) + 272|0);
                                           $_56$sroa$4$0$$sroa_idx385$i$i = ((($world$i)) + 276|0);
                                           $_56$sroa$5$0$$sroa_idx387$i$i = ((($world$i)) + 280|0);
                                           HEAPF32[$_56$sroa$5$0$$sroa_idx387$i$i>>2] = 0.0;
                                           $510 = ((($world$i)) + 284|0);
                                           HEAP32[$510>>2] = $192;
                                           $511 = ((($world$i)) + 288|0);
                                           dest=$511; src=$ccd$i$i; stop=dest+68|0; do { HEAP32[dest>>2]=HEAP32[src>>2]|0; dest=dest+4|0; src=src+4|0; } while ((dest|0) < (stop|0));
                                           $512 = ((($world$i)) + 356|0);
                                           dest=$512; src=$joints$i$i; stop=dest+112|0; do { HEAP32[dest>>2]=HEAP32[src>>2]|0; dest=dest+4|0; src=src+4|0; } while ((dest|0) < (stop|0));
                                           $513 = ((($world$i)) + 468|0);
                                           dest=$513; src=$solver$i$i; stop=dest+124|0; do { HEAP32[dest>>2]=HEAP32[src>>2]|0; dest=dest+4|0; src=src+4|0; } while ((dest|0) < (stop|0));
                                           $514 = ((($world$i)) + 592|0);
                                           HEAPF32[$514>>2] = 0.019999999552965164;
                                           HEAP32[$_56$sroa$0$0$$sroa_idx$i$i>>2] = 0;
                                           HEAP32[$_56$sroa$4$0$$sroa_idx385$i$i>>2] = -1027329229;
                                           $515 = (_malloc(8)|0);
                                           $516 = ($515|0)==(0|0);
                                           L190: do {
                                            if ($516) {
                                             __THREW__ = 0;
                                             invoke_v(210);
                                             $517 = __THREW__; __THREW__ = 0;
                                             label = 282;
                                            } else {
                                             $518 = $515;
                                             $519 = $518;
                                             HEAP32[$519>>2] = 0;
                                             $520 = (($518) + 4)|0;
                                             $521 = $520;
                                             HEAP32[$521>>2] = 1065353216;
                                             $522 = (_malloc(16)|0);
                                             $523 = ($522|0)==(0|0);
                                             if ($523) {
                                              __THREW__ = 0;
                                              invoke_v(210);
                                              $524 = __THREW__; __THREW__ = 0;
                                              label = 282;
                                              break;
                                             }
                                             $525 = $515;
                                             HEAP32[$522>>2] = 1;
                                             $526 = ((($522)) + 4|0);
                                             HEAP32[$526>>2] = 1;
                                             $527 = ((($522)) + 8|0);
                                             HEAP32[$527>>2] = $525;
                                             $528 = ((($522)) + 12|0);
                                             HEAP32[$528>>2] = (872);
                                             $529 = $522;
                                             HEAP32[$_10$i$i>>2] = 0;
                                             __THREW__ = 0;
                                             invoke_viiid(283,($_10$i|0),($529|0),($_10$i$i|0),0.60000002384185791);
                                             $530 = __THREW__; __THREW__ = 0;
                                             $531 = $530&1;
                                             if ($531) {
                                              label = 282;
                                              break;
                                             }
                                             __THREW__ = 0;
                                             $532 = (invoke_iii(284,($world$i|0),($_10$i|0))|0);
                                             $533 = __THREW__; __THREW__ = 0;
                                             $534 = $533&1;
                                             if ($534) {
                                              label = 282;
                                              break;
                                             }
                                             $535 = $532;
                                             $536 = HEAP32[$535>>2]|0;
                                             $537 = (($536) + -1)|0;
                                             HEAP32[$535>>2] = $537;
                                             $538 = ($537|0)==(0);
                                             do {
                                              if ($538) {
                                               $539 = ((($535)) + 16|0);
                                               $540 = HEAP32[$539>>2]|0;
                                               $541 = HEAP32[$540>>2]|0;HEAP32[$540>>2] = (($541-1)|0);
                                               $542 = ($541|0)==(1);
                                               if ($542) {
                                                /* fence */;
                                                __THREW__ = 0;
                                                invoke_vi(241,($539|0));
                                                $543 = __THREW__; __THREW__ = 0;
                                                $544 = $543&1;
                                                if ($544) {
                                                 label = 282;
                                                 break L190;
                                                }
                                               }
                                               $545 = ((($535)) + 172|0);
                                               $546 = HEAP32[$545>>2]|0;
                                               $switchtmp$i$i$i$i$i$i$i = ($546|0)==(0|0);
                                               do {
                                                if (!($switchtmp$i$i$i$i$i$i$i)) {
                                                 $$idx1$i$i$i$i$i$i$i$i = ((($535)) + 176|0);
                                                 $$idx1$val$i$i$i$i$i$i$i$i = HEAP32[$$idx1$i$i$i$i$i$i$i$i>>2]|0;
                                                 $$idx1$val$val$i$i$i$i$i$i$i$i = HEAP32[$$idx1$val$i$i$i$i$i$i$i$i>>2]|0;
                                                 __THREW__ = 0;
                                                 invoke_vi($$idx1$val$val$i$i$i$i$i$i$i$i|0,($546|0));
                                                 $547 = __THREW__; __THREW__ = 0;
                                                 $548 = $547&1;
                                                 if ($548) {
                                                  label = 282;
                                                  break L190;
                                                 }
                                                 $549 = HEAP32[$$idx1$i$i$i$i$i$i$i$i>>2]|0;
                                                 $550 = ((($549)) + 4|0);
                                                 $551 = HEAP32[$550>>2]|0;
                                                 $552 = ($551|0)==(0);
                                                 if ($552) {
                                                  break;
                                                 }
                                                 _free($546);
                                                }
                                               } while(0);
                                               $553 = ((($535)) + 4|0);
                                               $554 = HEAP32[$553>>2]|0;
                                               $555 = (($554) + -1)|0;
                                               HEAP32[$553>>2] = $555;
                                               $556 = ($555|0)==(0);
                                               if (!($556)) {
                                                break;
                                               }
                                               $557 = $532;
                                               _free($557);
                                              }
                                             } while(0);
                                             $558 = (_malloc(8)|0);
                                             $559 = ($558|0)==(0|0);
                                             if ($559) {
                                              __THREW__ = 0;
                                              invoke_v(210);
                                              $560 = __THREW__; __THREW__ = 0;
                                              label = 282;
                                              break;
                                             }
                                             $561 = $558;
                                             $562 = $561;
                                             HEAP32[$562>>2] = 1065353216;
                                             $563 = (($561) + 4)|0;
                                             $564 = $563;
                                             HEAP32[$564>>2] = 0;
                                             $565 = (_malloc(16)|0);
                                             $566 = ($565|0)==(0|0);
                                             if ($566) {
                                              __THREW__ = 0;
                                              invoke_v(210);
                                              $567 = __THREW__; __THREW__ = 0;
                                              label = 282;
                                              break;
                                             }
                                             $568 = $558;
                                             HEAP32[$565>>2] = 1;
                                             $569 = ((($565)) + 4|0);
                                             HEAP32[$569>>2] = 1;
                                             $570 = ((($565)) + 8|0);
                                             HEAP32[$570>>2] = $568;
                                             $571 = ((($565)) + 12|0);
                                             HEAP32[$571>>2] = (872);
                                             $572 = $565;
                                             HEAP32[$_10$i58$i>>2] = 0;
                                             __THREW__ = 0;
                                             invoke_viiid(283,($_16$i|0),($572|0),($_10$i58$i|0),0.60000002384185791);
                                             $573 = __THREW__; __THREW__ = 0;
                                             $574 = $573&1;
                                             if ($574) {
                                              label = 282;
                                              break;
                                             }
                                             __THREW__ = 0;
                                             $575 = (invoke_iii(284,($world$i|0),($_16$i|0))|0);
                                             $576 = __THREW__; __THREW__ = 0;
                                             $577 = $576&1;
                                             if ($577) {
                                              label = 282;
                                              break;
                                             }
                                             $578 = $575;
                                             $579 = HEAP32[$578>>2]|0;
                                             $580 = (($579) + -1)|0;
                                             HEAP32[$578>>2] = $580;
                                             $581 = ($580|0)==(0);
                                             do {
                                              if ($581) {
                                               $582 = ((($578)) + 16|0);
                                               $583 = HEAP32[$582>>2]|0;
                                               $584 = HEAP32[$583>>2]|0;HEAP32[$583>>2] = (($584-1)|0);
                                               $585 = ($584|0)==(1);
                                               if ($585) {
                                                /* fence */;
                                                __THREW__ = 0;
                                                invoke_vi(241,($582|0));
                                                $586 = __THREW__; __THREW__ = 0;
                                                $587 = $586&1;
                                                if ($587) {
                                                 label = 282;
                                                 break L190;
                                                }
                                               }
                                               $588 = ((($578)) + 172|0);
                                               $589 = HEAP32[$588>>2]|0;
                                               $switchtmp$i$i$i$i$i$i70$i = ($589|0)==(0|0);
                                               do {
                                                if (!($switchtmp$i$i$i$i$i$i70$i)) {
                                                 $$idx1$i$i$i$i$i$i$i72$i = ((($578)) + 176|0);
                                                 $$idx1$val$i$i$i$i$i$i$i73$i = HEAP32[$$idx1$i$i$i$i$i$i$i72$i>>2]|0;
                                                 $$idx1$val$val$i$i$i$i$i$i$i74$i = HEAP32[$$idx1$val$i$i$i$i$i$i$i73$i>>2]|0;
                                                 __THREW__ = 0;
                                                 invoke_vi($$idx1$val$val$i$i$i$i$i$i$i74$i|0,($589|0));
                                                 $590 = __THREW__; __THREW__ = 0;
                                                 $591 = $590&1;
                                                 if ($591) {
                                                  label = 282;
                                                  break L190;
                                                 }
                                                 $592 = HEAP32[$$idx1$i$i$i$i$i$i$i72$i>>2]|0;
                                                 $593 = ((($592)) + 4|0);
                                                 $594 = HEAP32[$593>>2]|0;
                                                 $595 = ($594|0)==(0);
                                                 if ($595) {
                                                  break;
                                                 }
                                                 _free($589);
                                                }
                                               } while(0);
                                               $596 = ((($578)) + 4|0);
                                               $597 = HEAP32[$596>>2]|0;
                                               $598 = (($597) + -1)|0;
                                               HEAP32[$596>>2] = $598;
                                               $599 = ($598|0)==(0);
                                               if (!($599)) {
                                                break;
                                               }
                                               $600 = $575;
                                               _free($600);
                                              }
                                             } while(0);
                                             $601 = (_malloc(8)|0);
                                             $602 = ($601|0)==(0|0);
                                             L230: do {
                                              if ($602) {
                                               __THREW__ = 0;
                                               invoke_v(210);
                                               $603 = __THREW__; __THREW__ = 0;
                                              } else {
                                               $604 = $601;
                                               $605 = $604;
                                               HEAP32[$605>>2] = -1082130432;
                                               $606 = (($604) + 4)|0;
                                               $607 = $606;
                                               HEAP32[$607>>2] = 0;
                                               $608 = (_malloc(16)|0);
                                               $609 = ($608|0)==(0|0);
                                               if ($609) {
                                                __THREW__ = 0;
                                                invoke_v(210);
                                                $610 = __THREW__; __THREW__ = 0;
                                                break;
                                               }
                                               $611 = $601;
                                               HEAP32[$608>>2] = 1;
                                               $612 = ((($608)) + 4|0);
                                               HEAP32[$612>>2] = 1;
                                               $613 = ((($608)) + 8|0);
                                               HEAP32[$613>>2] = $611;
                                               $614 = ((($608)) + 12|0);
                                               HEAP32[$614>>2] = (872);
                                               $615 = $608;
                                               HEAP32[$_10$i84$i>>2] = 0;
                                               __THREW__ = 0;
                                               invoke_viiid(283,($plane3$i|0),($615|0),($_10$i84$i|0),0.60000002384185791);
                                               $616 = __THREW__; __THREW__ = 0;
                                               $617 = $616&1;
                                               if ($617) {
                                                break;
                                               }
                                               $618 = ((($plane3$i)) + 24|0);
                                               $619 = ((($plane3$i)) + 28|0);
                                               $620 = +HEAPF32[$618>>2];
                                               $621 = +HEAPF32[$619>>2];
                                               $622 = $620 + 600.0;
                                               $623 = $621 + 0.0;
                                               HEAPF32[$618>>2] = $622;
                                               HEAPF32[$619>>2] = $623;
                                               $$idx$i$i$i = ((($plane3$i)) + 56|0);
                                               $$idx$val$i$i93$i = +HEAPF32[$$idx$i$i$i>>2];
                                               $$idx1$i$i$i = ((($plane3$i)) + 60|0);
                                               $$idx1$val$i$i$i = +HEAPF32[$$idx1$i$i$i>>2];
                                               $_5$sroa$0$0$$sroa_idx$i$i$i$i$i$i = ((($plane3$i)) + 8|0);
                                               $_5$sroa$0$0$copyload$i$i$i$i$i$i = +HEAPF32[$_5$sroa$0$0$$sroa_idx$i$i$i$i$i$i>>2];
                                               $_5$sroa$4$0$$sroa_idx2$i$i$i$i$i$i = ((($plane3$i)) + 12|0);
                                               $_5$sroa$4$0$copyload$i$i$i$i$i$i = +HEAPF32[$_5$sroa$4$0$$sroa_idx2$i$i$i$i$i$i>>2];
                                               $_5$sroa$5$0$$sroa_idx4$i$i$i$i$i$i = ((($plane3$i)) + 16|0);
                                               $_5$sroa$5$0$copyload$i$i$i$i$i$i = +HEAPF32[$_5$sroa$5$0$$sroa_idx4$i$i$i$i$i$i>>2];
                                               $_5$sroa$6$0$$sroa_idx6$i$i$i$i$i$i = ((($plane3$i)) + 20|0);
                                               $_5$sroa$6$0$copyload$i$i$i$i$i$i = +HEAPF32[$_5$sroa$6$0$$sroa_idx6$i$i$i$i$i$i>>2];
                                               $624 = $$idx$val$i$i93$i * $_5$sroa$0$0$copyload$i$i$i$i$i$i;
                                               $625 = $$idx1$val$i$i$i * $_5$sroa$5$0$copyload$i$i$i$i$i$i;
                                               $626 = $624 + $625;
                                               $627 = $$idx$val$i$i93$i * $_5$sroa$4$0$copyload$i$i$i$i$i$i;
                                               $628 = $$idx1$val$i$i$i * $_5$sroa$6$0$copyload$i$i$i$i$i$i;
                                               $629 = $627 + $628;
                                               $630 = $622 + $626;
                                               $631 = $623 + $629;
                                               $632 = ((($plane3$i)) + 64|0);
                                               HEAPF32[$632>>2] = $630;
                                               $633 = ((($plane3$i)) + 68|0);
                                               HEAPF32[$633>>2] = $631;
                                               _memcpy(($_29$i|0),($plane3$i|0),168)|0;
                                               __THREW__ = 0;
                                               $634 = (invoke_iii(284,($world$i|0),($_29$i|0))|0);
                                               $635 = __THREW__; __THREW__ = 0;
                                               $636 = $635&1;
                                               if ($636) {
                                                break;
                                               }
                                               $637 = $634;
                                               $638 = HEAP32[$637>>2]|0;
                                               $639 = (($638) + -1)|0;
                                               HEAP32[$637>>2] = $639;
                                               $640 = ($639|0)==(0);
                                               do {
                                                if ($640) {
                                                 $641 = ((($637)) + 16|0);
                                                 $642 = HEAP32[$641>>2]|0;
                                                 $643 = HEAP32[$642>>2]|0;HEAP32[$642>>2] = (($643-1)|0);
                                                 $644 = ($643|0)==(1);
                                                 if ($644) {
                                                  /* fence */;
                                                  __THREW__ = 0;
                                                  invoke_vi(241,($641|0));
                                                  $645 = __THREW__; __THREW__ = 0;
                                                  $646 = $645&1;
                                                  if ($646) {
                                                   break L230;
                                                  }
                                                 }
                                                 $647 = ((($637)) + 172|0);
                                                 $648 = HEAP32[$647>>2]|0;
                                                 $switchtmp$i$i$i$i$i$i97$i = ($648|0)==(0|0);
                                                 do {
                                                  if (!($switchtmp$i$i$i$i$i$i97$i)) {
                                                   $$idx1$i$i$i$i$i$i$i99$i = ((($637)) + 176|0);
                                                   $$idx1$val$i$i$i$i$i$i$i100$i = HEAP32[$$idx1$i$i$i$i$i$i$i99$i>>2]|0;
                                                   $$idx1$val$val$i$i$i$i$i$i$i101$i = HEAP32[$$idx1$val$i$i$i$i$i$i$i100$i>>2]|0;
                                                   __THREW__ = 0;
                                                   invoke_vi($$idx1$val$val$i$i$i$i$i$i$i101$i|0,($648|0));
                                                   $649 = __THREW__; __THREW__ = 0;
                                                   $650 = $649&1;
                                                   if ($650) {
                                                    break L230;
                                                   }
                                                   $651 = HEAP32[$$idx1$i$i$i$i$i$i$i99$i>>2]|0;
                                                   $652 = ((($651)) + 4|0);
                                                   $653 = HEAP32[$652>>2]|0;
                                                   $654 = ($653|0)==(0);
                                                   if ($654) {
                                                    break;
                                                   }
                                                   _free($648);
                                                  }
                                                 } while(0);
                                                 $655 = ((($637)) + 4|0);
                                                 $656 = HEAP32[$655>>2]|0;
                                                 $657 = (($656) + -1)|0;
                                                 HEAP32[$655>>2] = $657;
                                                 $658 = ($657|0)==(0);
                                                 if (!($658)) {
                                                  break;
                                                 }
                                                 $659 = $634;
                                                 _free($659);
                                                }
                                               } while(0);
                                               _memcpy(($world|0),($world$i|0),600)|0;
                                               __THREW__ = 0;
                                               invoke_viiidd(213,($body|0),($balls|0),($world|0),101.0,350.0);
                                               $668 = __THREW__; __THREW__ = 0;
                                               $669 = $668&1;
                                               do {
                                                if (!($669)) {
                                                 __THREW__ = 0;
                                                 invoke_viiidd(213,($body|0),($balls|0),($world|0),102.0,500.0);
                                                 $670 = __THREW__; __THREW__ = 0;
                                                 $671 = $670&1;
                                                 if ($671) {
                                                  break;
                                                 }
                                                 __THREW__ = 0;
                                                 invoke_viiidd(213,($body|0),($balls|0),($world|0),100.0,550.0);
                                                 $672 = __THREW__; __THREW__ = 0;
                                                 $673 = $672&1;
                                                 if ($673) {
                                                  break;
                                                 }
                                                 $_43$sroa$0$0$copyload = HEAP32[$balls>>2]|0;
                                                 $_43$sroa$4$0$copyload = HEAP32[$17>>2]|0;
                                                 $_43$sroa$5$0$copyload = HEAP32[$18>>2]|0;
                                                 $674 = (_malloc(24)|0);
                                                 $675 = ($674|0)==(0|0);
                                                 if ($675) {
                                                  __THREW__ = 0;
                                                  invoke_v(210);
                                                  $676 = __THREW__; __THREW__ = 0;
                                                  $677 = ___cxa_find_matching_catch_2()|0;
                                                  $678 = tempRet0;
                                                  __ZN4drop17h2f30a22cc85f591fE($world);
                                                  $personalityslot$sroa$0$3421 = $677;$personalityslot$sroa$12$3419 = $678;
                                                  break L5;
                                                 }
                                                 HEAP32[$674>>2] = 1;
                                                 $679 = ((($674)) + 4|0);
                                                 HEAP32[$679>>2] = 1;
                                                 $_10$sroa$0$0$$sroa_idx$i = ((($674)) + 8|0);
                                                 HEAP32[$_10$sroa$0$0$$sroa_idx$i>>2] = 0;
                                                 $_10$sroa$4$0$$sroa_idx$i = ((($674)) + 12|0);
                                                 HEAP32[$_10$sroa$4$0$$sroa_idx$i>>2] = $_43$sroa$0$0$copyload;
                                                 $_10$sroa$5$0$$sroa_idx$i = ((($674)) + 16|0);
                                                 HEAP32[$_10$sroa$5$0$$sroa_idx$i>>2] = $_43$sroa$4$0$copyload;
                                                 $_10$sroa$6$0$$sroa_idx$i = ((($674)) + 20|0);
                                                 HEAP32[$_10$sroa$6$0$$sroa_idx$i>>2] = $_43$sroa$5$0$copyload;
                                                 $680 = $674;
                                                 HEAP32[$balls1>>2] = $680;
                                                 $_45$sroa$4$8$$sroa_idx = ((($_45$sroa$4)) + 4|0);
                                                 _memcpy(($_45$sroa$4$8$$sroa_idx|0),($world|0),600)|0;
                                                 _memcpy(($value$i$sroa$4|0),($_45$sroa$4|0),604)|0;
                                                 $681 = (_malloc(616)|0);
                                                 $682 = ($681|0)==(0|0);
                                                 if ($682) {
                                                  __THREW__ = 0;
                                                  invoke_v(210);
                                                  $683 = __THREW__; __THREW__ = 0;
                                                  $684 = ___cxa_find_matching_catch_2()|0;
                                                  $685 = tempRet0;
                                                  __ZN4drop17hab695909c806641cE($balls1);
                                                  $personalityslot$sroa$0$3421 = $684;$personalityslot$sroa$12$3419 = $685;
                                                  break L5;
                                                 }
                                                 HEAP32[$681>>2] = 1;
                                                 $686 = ((($681)) + 4|0);
                                                 HEAP32[$686>>2] = 1;
                                                 $value$i$sroa$0$0$$sroa_idx = ((($681)) + 8|0);
                                                 HEAP32[$value$i$sroa$0$0$$sroa_idx>>2] = 0;
                                                 $value$i$sroa$4$0$$sroa_raw_idx = ((($681)) + 12|0);
                                                 _memcpy(($value$i$sroa$4$0$$sroa_raw_idx|0),($value$i$sroa$4|0),604)|0;
                                                 $687 = $681;
                                                 $$fca$0$0$0$0$load155 = HEAP32[$document>>2]|0;
                                                 $688 = (_malloc(12)|0);
                                                 $689 = ($688|0)==(0|0);
                                                 do {
                                                  if ($689) {
                                                   __THREW__ = 0;
                                                   invoke_v(210);
                                                   $690 = __THREW__; __THREW__ = 0;
                                                   $691 = ___cxa_find_matching_catch_2()|0;
                                                   $692 = tempRet0;
                                                   $personalityslot$sroa$0$0397 = $691;$personalityslot$sroa$12$0396 = $692;
                                                  } else {
                                                   $695 = ((($688)) + 4|0);
                                                   HEAP32[$695>>2] = 1;
                                                   $696 = ((($688)) + 8|0);
                                                   HEAP32[$696>>2] = $$fca$0$0$0$0$load155;
                                                   $697 = $688;
                                                   HEAP32[$674>>2] = 2;
                                                   HEAP32[$681>>2] = 2;
                                                   HEAP32[$688>>2] = 2;
                                                   $698 = (_malloc(12)|0);
                                                   $699 = ($698|0)==(0|0);
                                                   L263: do {
                                                    if ($699) {
                                                     __THREW__ = 0;
                                                     invoke_v(210);
                                                     $700 = __THREW__; __THREW__ = 0;
                                                     $701 = ___cxa_find_matching_catch_2()|0;
                                                     $702 = tempRet0;
                                                     $extract$t154405 = 1;$personalityslot$sroa$0$1403 = $701;$personalityslot$sroa$12$1402 = $702;
                                                    } else {
                                                     HEAP32[$698>>2] = $697;
                                                     $x$i$i$sroa$4$0$$sroa_idx = ((($698)) + 4|0);
                                                     HEAP32[$x$i$i$sroa$4$0$$sroa_idx>>2] = $687;
                                                     $x$i$i$sroa$5$0$$sroa_idx = ((($698)) + 8|0);
                                                     HEAP32[$x$i$i$sroa$5$0$$sroa_idx>>2] = $680;
                                                     $703 = $698;
                                                     $704 = _emscripten_asm_const_iiii(6, 33, ($703|0), ((302)|0))|0;
                                                     $705 = HEAP32[$674>>2]|0;
                                                     $$arith = (($705) + 1)|0;
                                                     $$overflow = ($705>>>0)>(4294967294);
                                                     if ($$overflow) {
                                                      _llvm_trap();
                                                      // unreachable;
                                                     }
                                                     HEAP32[$674>>2] = $$arith;
                                                     $706 = HEAP32[$body>>2]|0;
                                                     $707 = HEAP32[$10>>2]|0;
                                                     $708 = (_malloc(16)|0);
                                                     $709 = ($708|0)==(0|0);
                                                     if ($709) {
                                                      __THREW__ = 0;
                                                      invoke_v(210);
                                                      $710 = __THREW__; __THREW__ = 0;
                                                      $711 = ___cxa_find_matching_catch_2()|0;
                                                      $712 = tempRet0;
                                                      $extract$t154405 = 0;$personalityslot$sroa$0$1403 = $711;$personalityslot$sroa$12$1402 = $712;
                                                      break;
                                                     }
                                                     HEAP32[$708>>2] = $706;
                                                     $x$i$i207$sroa$4$0$$sroa_idx = ((($708)) + 4|0);
                                                     HEAP32[$x$i$i207$sroa$4$0$$sroa_idx>>2] = $707;
                                                     $x$i$i207$sroa$5$0$$sroa_idx = ((($708)) + 8|0);
                                                     HEAP32[$x$i$i207$sroa$5$0$$sroa_idx>>2] = $674;
                                                     $x$i$i207$sroa$6$0$$sroa_idx = ((($708)) + 12|0);
                                                     HEAP32[$x$i$i207$sroa$6$0$$sroa_idx>>2] = $687;
                                                     HEAP32[$arena$i>>2] = 1;
                                                     $713 = ((($arena$i)) + 4|0);
                                                     HEAP32[$713>>2] = 0;
                                                     $714 = ((($arena$i)) + 8|0);
                                                     HEAP32[$714>>2] = 0;
                                                     __THREW__ = 0;
                                                     $715 = (invoke_iiii(285,(12883|0),5,($arena$i|0))|0);
                                                     $716 = __THREW__; __THREW__ = 0;
                                                     $717 = $716&1;
                                                     do {
                                                      if ($717) {
                                                       $776 = ___cxa_find_matching_catch_2()|0;
                                                       $777 = tempRet0;
                                                       $$idx$val$i6$i = HEAP32[$arena$i>>2]|0;
                                                       $$idx5$val$i8$i = HEAP32[$714>>2]|0;
                                                       $778 = (($$idx$val$i6$i) + ($$idx5$val$i8$i<<3)|0);
                                                       $779 = ($$idx5$val$i8$i|0)==(0);
                                                       if (!($779)) {
                                                        $780 = $$idx$val$i6$i;
                                                        while(1) {
                                                         $$idx$val$i$i$i$i10$i = HEAP32[$780>>2]|0;
                                                         HEAP8[$$idx$val$i$i$i$i10$i>>0] = 0;
                                                         $781 = ((($780)) + 4|0);
                                                         $782 = HEAP32[$781>>2]|0;
                                                         $783 = ($782|0)==(0);
                                                         if (!($783)) {
                                                          $784 = HEAP32[$780>>2]|0;
                                                          _free($784);
                                                         }
                                                         $785 = ((($780)) + 8|0);
                                                         $786 = ($785|0)==($778|0);
                                                         if ($786) {
                                                          break;
                                                         } else {
                                                          $780 = $785;
                                                         }
                                                        }
                                                       }
                                                       $787 = HEAP32[$713>>2]|0;
                                                       $not$$i$i$i$i14$i = ($787|0)==(0);
                                                       if ($not$$i$i$i$i14$i) {
                                                        $personalityslot$sroa$0$034$i = $776;$personalityslot$sroa$6$032$i = $777;
                                                        break;
                                                       }
                                                       _free($$idx$val$i6$i);
                                                       $personalityslot$sroa$0$034$i = $776;$personalityslot$sroa$6$032$i = $777;
                                                      } else {
                                                       $718 = $708;
                                                       $719 = $_9$idx170$val465;
                                                       $720 = _emscripten_asm_const_iiiiii(7, ($_9$idx169$val|0), ($715|0), ($718|0), ((303)|0), ($719|0))|0;
                                                       $$idx$val$i$i216 = HEAP32[$arena$i>>2]|0;
                                                       $$idx5$val$i$i = HEAP32[$714>>2]|0;
                                                       $721 = (($$idx$val$i$i216) + ($$idx5$val$i$i<<3)|0);
                                                       $722 = ($$idx5$val$i$i|0)==(0);
                                                       if (!($722)) {
                                                        $723 = $$idx$val$i$i216;
                                                        while(1) {
                                                         $$idx$val$i$i$i$i$i218 = HEAP32[$723>>2]|0;
                                                         HEAP8[$$idx$val$i$i$i$i$i218>>0] = 0;
                                                         $724 = ((($723)) + 4|0);
                                                         $725 = HEAP32[$724>>2]|0;
                                                         $726 = ($725|0)==(0);
                                                         if (!($726)) {
                                                          $727 = HEAP32[$723>>2]|0;
                                                          _free($727);
                                                         }
                                                         $728 = ((($723)) + 8|0);
                                                         $729 = ($728|0)==($721|0);
                                                         if ($729) {
                                                          break;
                                                         } else {
                                                          $723 = $728;
                                                         }
                                                        }
                                                       }
                                                       $730 = HEAP32[$713>>2]|0;
                                                       $not$$i$i$i$i$i = ($730|0)==(0);
                                                       if (!($not$$i$i$i$i$i)) {
                                                        _free($$idx$val$i$i216);
                                                       }
                                                       $$idx$val$i220 = HEAP32[$_9$idx170$val465>>2]|0;
                                                       $731 = ((($$idx$val$i220)) + 8|0);
                                                       $732 = HEAP32[$731>>2]|0;
                                                       $cond$i$i$i$i221 = ($732|0)==(0);
                                                       if (!($cond$i$i$i$i221)) {
                                                        __THREW__ = 0;
                                                        invoke_v(212);
                                                        $733 = __THREW__; __THREW__ = 0;
                                                        $734 = ___cxa_find_matching_catch_2()|0;
                                                        $735 = tempRet0;
                                                        $personalityslot$sroa$0$034$i = $734;$personalityslot$sroa$6$032$i = $735;
                                                        break;
                                                       }
                                                       HEAP32[$731>>2] = -1;
                                                       $736 = ((($$idx$val$i220)) + 12|0);
                                                       $737 = ((($$idx$val$i220)) + 20|0);
                                                       $738 = HEAP32[$737>>2]|0;
                                                       $$idx$i18$i = ((($$idx$val$i220)) + 16|0);
                                                       $$idx$val$i19$i = HEAP32[$$idx$i18$i>>2]|0;
                                                       $739 = ($738|0)==($$idx$val$i19$i|0);
                                                       do {
                                                        if ($739) {
                                                         __THREW__ = 0;
                                                         invoke_vi(304,($736|0));
                                                         $740 = __THREW__; __THREW__ = 0;
                                                         $741 = $740&1;
                                                         if (!($741)) {
                                                          $$pre$i$i = HEAP32[$737>>2]|0;
                                                          $792 = $$pre$i$i;
                                                          break;
                                                         }
                                                         $742 = ___cxa_find_matching_catch_2()|0;
                                                         $743 = tempRet0;
                                                         __THREW__ = 0;
                                                         invoke_vi(305,($x$i$i207$sroa$5$0$$sroa_idx|0));
                                                         $744 = __THREW__; __THREW__ = 0;
                                                         $745 = $744&1;
                                                         L301: do {
                                                          if ($745) {
                                                           label = 330;
                                                          } else {
                                                           $746 = HEAP32[$x$i$i207$sroa$6$0$$sroa_idx>>2]|0;
                                                           $747 = HEAP32[$746>>2]|0;
                                                           $748 = (($747) + -1)|0;
                                                           HEAP32[$746>>2] = $748;
                                                           $$idx$val$i$i$i$i = HEAP32[$x$i$i207$sroa$6$0$$sroa_idx>>2]|0;
                                                           $749 = HEAP32[$$idx$val$i$i$i$i>>2]|0;
                                                           $750 = ($749|0)==(0);
                                                           do {
                                                            if ($750) {
                                                             $751 = ((($746)) + 16|0);
                                                             __THREW__ = 0;
                                                             invoke_vi(301,($751|0));
                                                             $752 = __THREW__; __THREW__ = 0;
                                                             $753 = $752&1;
                                                             if ($753) {
                                                              label = 330;
                                                              break L301;
                                                             }
                                                             $$idx3$val$i$i$i$i = HEAP32[$x$i$i207$sroa$6$0$$sroa_idx>>2]|0;
                                                             $754 = ((($$idx3$val$i$i$i$i)) + 4|0);
                                                             $755 = HEAP32[$754>>2]|0;
                                                             $756 = (($755) + -1)|0;
                                                             HEAP32[$754>>2] = $756;
                                                             $$idx2$val$i$i$i$i = HEAP32[$x$i$i207$sroa$6$0$$sroa_idx>>2]|0;
                                                             $757 = ((($$idx2$val$i$i$i$i)) + 4|0);
                                                             $758 = HEAP32[$757>>2]|0;
                                                             $759 = ($758|0)==(0);
                                                             if (!($759)) {
                                                              break;
                                                             }
                                                             _free($746);
                                                            }
                                                           } while(0);
                                                           _free($708);
                                                           $eh$lpad$body$i$index68Z2D = $743;$eh$lpad$body$i$indexZ2D = $742;
                                                          }
                                                         } while(0);
                                                         if ((label|0) == 330) {
                                                          $788 = ___cxa_find_matching_catch_2()|0;
                                                          $789 = tempRet0;
                                                          $eh$lpad$body$i$index68Z2D = $789;$eh$lpad$body$i$indexZ2D = $788;
                                                         }
                                                         HEAP32[$731>>2] = 0;
                                                         $extract$t154405 = 0;$personalityslot$sroa$0$1403 = $eh$lpad$body$i$indexZ2D;$personalityslot$sroa$12$1402 = $eh$lpad$body$i$index68Z2D;
                                                         break L263;
                                                        } else {
                                                         $792 = $738;
                                                        }
                                                       } while(0);
                                                       $790 = HEAP32[$736>>2]|0;
                                                       $791 = (($790) + ($792<<3)|0);
                                                       HEAP32[$791>>2] = $708;
                                                       $793 = (((($790) + ($792<<3)|0)) + 4|0);
                                                       HEAP32[$793>>2] = 8;
                                                       $794 = HEAP32[$737>>2]|0;
                                                       $795 = (($794) + 1)|0;
                                                       HEAP32[$737>>2] = $795;
                                                       HEAP32[$731>>2] = 0;
                                                       $796 = (_malloc(8)|0);
                                                       $797 = ($796|0)==(0|0);
                                                       if ($797) {
                                                        __THREW__ = 0;
                                                        invoke_v(210);
                                                        $798 = __THREW__; __THREW__ = 0;
                                                        $799 = ___cxa_find_matching_catch_2()|0;
                                                        $800 = tempRet0;
                                                        $personalityslot$sroa$0$3420 = $799;$personalityslot$sroa$12$3418 = $800;
                                                        ___resumeException($personalityslot$sroa$0$3420|0);
                                                        // unreachable;
                                                       }
                                                       HEAP32[$796>>2] = $680;
                                                       $801 = ((($796)) + 4|0);
                                                       HEAP32[$801>>2] = $697;
                                                       HEAP32[$arena$i236>>2] = 1;
                                                       $802 = ((($arena$i236)) + 4|0);
                                                       HEAP32[$802>>2] = 0;
                                                       $803 = ((($arena$i236)) + 8|0);
                                                       HEAP32[$803>>2] = 0;
                                                       __THREW__ = 0;
                                                       $804 = (invoke_iiii(285,(12883|0),5,($arena$i236|0))|0);
                                                       $805 = __THREW__; __THREW__ = 0;
                                                       $806 = $805&1;
                                                       do {
                                                        if ($806) {
                                                         $865 = ___cxa_find_matching_catch_2()|0;
                                                         $866 = tempRet0;
                                                         $$idx$val$i17$i = HEAP32[$arena$i236>>2]|0;
                                                         $$idx5$val$i19$i = HEAP32[$803>>2]|0;
                                                         $867 = (($$idx$val$i17$i) + ($$idx5$val$i19$i<<3)|0);
                                                         $868 = ($$idx5$val$i19$i|0)==(0);
                                                         if (!($868)) {
                                                          $869 = $$idx$val$i17$i;
                                                          while(1) {
                                                           $$idx$val$i$i$i$i21$i = HEAP32[$869>>2]|0;
                                                           HEAP8[$$idx$val$i$i$i$i21$i>>0] = 0;
                                                           $870 = ((($869)) + 4|0);
                                                           $871 = HEAP32[$870>>2]|0;
                                                           $872 = ($871|0)==(0);
                                                           if (!($872)) {
                                                            $873 = HEAP32[$869>>2]|0;
                                                            _free($873);
                                                           }
                                                           $874 = ((($869)) + 8|0);
                                                           $875 = ($874|0)==($867|0);
                                                           if ($875) {
                                                            break;
                                                           } else {
                                                            $869 = $874;
                                                           }
                                                          }
                                                         }
                                                         $876 = HEAP32[$802>>2]|0;
                                                         $not$$i$i$i$i25$i = ($876|0)==(0);
                                                         if ($not$$i$i$i$i25$i) {
                                                          $personalityslot$sroa$0$042$i = $865;$personalityslot$sroa$6$040$i = $866;
                                                          break;
                                                         }
                                                         _free($$idx$val$i17$i);
                                                         $personalityslot$sroa$0$042$i = $865;$personalityslot$sroa$6$040$i = $866;
                                                        } else {
                                                         $807 = $796;
                                                         $808 = $_14$idx168$val466;
                                                         $809 = _emscripten_asm_const_iiiiii(7, ($_14$idx167$val|0), ($804|0), ($807|0), ((306)|0), ($808|0))|0;
                                                         $$idx$val$i$i248 = HEAP32[$arena$i236>>2]|0;
                                                         $$idx5$val$i$i249 = HEAP32[$803>>2]|0;
                                                         $810 = (($$idx$val$i$i248) + ($$idx5$val$i$i249<<3)|0);
                                                         $811 = ($$idx5$val$i$i249|0)==(0);
                                                         if (!($811)) {
                                                          $812 = $$idx$val$i$i248;
                                                          while(1) {
                                                           $$idx$val$i$i$i$i$i252 = HEAP32[$812>>2]|0;
                                                           HEAP8[$$idx$val$i$i$i$i$i252>>0] = 0;
                                                           $813 = ((($812)) + 4|0);
                                                           $814 = HEAP32[$813>>2]|0;
                                                           $815 = ($814|0)==(0);
                                                           if (!($815)) {
                                                            $816 = HEAP32[$812>>2]|0;
                                                            _free($816);
                                                           }
                                                           $817 = ((($812)) + 8|0);
                                                           $818 = ($817|0)==($810|0);
                                                           if ($818) {
                                                            break;
                                                           } else {
                                                            $812 = $817;
                                                           }
                                                          }
                                                         }
                                                         $819 = HEAP32[$802>>2]|0;
                                                         $not$$i$i$i$i$i256 = ($819|0)==(0);
                                                         if (!($not$$i$i$i$i$i256)) {
                                                          _free($$idx$val$i$i248);
                                                         }
                                                         $$idx$val$i260 = HEAP32[$_14$idx168$val466>>2]|0;
                                                         $820 = ((($$idx$val$i260)) + 8|0);
                                                         $821 = HEAP32[$820>>2]|0;
                                                         $cond$i$i$i$i261 = ($821|0)==(0);
                                                         if (!($cond$i$i$i$i261)) {
                                                          __THREW__ = 0;
                                                          invoke_v(212);
                                                          $822 = __THREW__; __THREW__ = 0;
                                                          $823 = ___cxa_find_matching_catch_2()|0;
                                                          $824 = tempRet0;
                                                          $personalityslot$sroa$0$042$i = $823;$personalityslot$sroa$6$040$i = $824;
                                                          break;
                                                         }
                                                         HEAP32[$820>>2] = -1;
                                                         $825 = ((($$idx$val$i260)) + 12|0);
                                                         $826 = ((($$idx$val$i260)) + 20|0);
                                                         $827 = HEAP32[$826>>2]|0;
                                                         $$idx$i29$i = ((($$idx$val$i260)) + 16|0);
                                                         $$idx$val$i30$i = HEAP32[$$idx$i29$i>>2]|0;
                                                         $828 = ($827|0)==($$idx$val$i30$i|0);
                                                         if (!($828)) {
                                                          $881 = $827;
                                                          $879 = HEAP32[$825>>2]|0;
                                                          $880 = (($879) + ($881<<3)|0);
                                                          HEAP32[$880>>2] = $796;
                                                          $882 = (((($879) + ($881<<3)|0)) + 4|0);
                                                          HEAP32[$882>>2] = 32;
                                                          $883 = HEAP32[$826>>2]|0;
                                                          $884 = (($883) + 1)|0;
                                                          HEAP32[$826>>2] = $884;
                                                          HEAP32[$820>>2] = 0;
                                                          _emscripten_set_main_loop((308|0),0,1);
                                                          STACKTOP = sp;return;
                                                         }
                                                         __THREW__ = 0;
                                                         invoke_vi(304,($825|0));
                                                         $829 = __THREW__; __THREW__ = 0;
                                                         $830 = $829&1;
                                                         if (!($830)) {
                                                          $$pre$i$i266 = HEAP32[$826>>2]|0;
                                                          $881 = $$pre$i$i266;
                                                          $879 = HEAP32[$825>>2]|0;
                                                          $880 = (($879) + ($881<<3)|0);
                                                          HEAP32[$880>>2] = $796;
                                                          $882 = (((($879) + ($881<<3)|0)) + 4|0);
                                                          HEAP32[$882>>2] = 32;
                                                          $883 = HEAP32[$826>>2]|0;
                                                          $884 = (($883) + 1)|0;
                                                          HEAP32[$826>>2] = $884;
                                                          HEAP32[$820>>2] = 0;
                                                          _emscripten_set_main_loop((308|0),0,1);
                                                          STACKTOP = sp;return;
                                                         }
                                                         $831 = ___cxa_find_matching_catch_2()|0;
                                                         $832 = tempRet0;
                                                         __THREW__ = 0;
                                                         invoke_vi(305,($796|0));
                                                         $833 = __THREW__; __THREW__ = 0;
                                                         $834 = $833&1;
                                                         L347: do {
                                                          if ($834) {
                                                           label = 364;
                                                          } else {
                                                           $835 = HEAP32[$801>>2]|0;
                                                           $836 = HEAP32[$835>>2]|0;
                                                           $837 = (($836) + -1)|0;
                                                           HEAP32[$835>>2] = $837;
                                                           $$idx$val$i$i$i$i269 = HEAP32[$801>>2]|0;
                                                           $838 = HEAP32[$$idx$val$i$i$i$i269>>2]|0;
                                                           $839 = ($838|0)==(0);
                                                           do {
                                                            if ($839) {
                                                             $840 = ((($835)) + 8|0);
                                                             __THREW__ = 0;
                                                             invoke_vi(307,($840|0));
                                                             $841 = __THREW__; __THREW__ = 0;
                                                             $842 = $841&1;
                                                             if ($842) {
                                                              label = 364;
                                                              break L347;
                                                             }
                                                             $$idx3$val$i$i$i$i272 = HEAP32[$801>>2]|0;
                                                             $843 = ((($$idx3$val$i$i$i$i272)) + 4|0);
                                                             $844 = HEAP32[$843>>2]|0;
                                                             $845 = (($844) + -1)|0;
                                                             HEAP32[$843>>2] = $845;
                                                             $$idx2$val$i$i$i$i273 = HEAP32[$801>>2]|0;
                                                             $846 = ((($$idx2$val$i$i$i$i273)) + 4|0);
                                                             $847 = HEAP32[$846>>2]|0;
                                                             $848 = ($847|0)==(0);
                                                             if (!($848)) {
                                                              break;
                                                             }
                                                             _free($835);
                                                            }
                                                           } while(0);
                                                           _free($796);
                                                           $eh$lpad$body$i288$index73Z2D = $832;$eh$lpad$body$i288$indexZ2D = $831;
                                                          }
                                                         } while(0);
                                                         if ((label|0) == 364) {
                                                          $877 = ___cxa_find_matching_catch_2()|0;
                                                          $878 = tempRet0;
                                                          $eh$lpad$body$i288$index73Z2D = $878;$eh$lpad$body$i288$indexZ2D = $877;
                                                         }
                                                         HEAP32[$820>>2] = 0;
                                                         $personalityslot$sroa$0$3420 = $eh$lpad$body$i288$indexZ2D;$personalityslot$sroa$12$3418 = $eh$lpad$body$i288$index73Z2D;
                                                         ___resumeException($personalityslot$sroa$0$3420|0);
                                                         // unreachable;
                                                        }
                                                       } while(0);
                                                       __THREW__ = 0;
                                                       invoke_vi(305,($796|0));
                                                       $849 = __THREW__; __THREW__ = 0;
                                                       $850 = $849&1;
                                                       L359: do {
                                                        if (!($850)) {
                                                         $851 = HEAP32[$801>>2]|0;
                                                         $852 = HEAP32[$851>>2]|0;
                                                         $853 = (($852) + -1)|0;
                                                         HEAP32[$851>>2] = $853;
                                                         $$idx$val$i$i$i$i34$i = HEAP32[$801>>2]|0;
                                                         $854 = HEAP32[$$idx$val$i$i$i$i34$i>>2]|0;
                                                         $855 = ($854|0)==(0);
                                                         do {
                                                          if ($855) {
                                                           $856 = ((($851)) + 8|0);
                                                           __THREW__ = 0;
                                                           invoke_vi(307,($856|0));
                                                           $857 = __THREW__; __THREW__ = 0;
                                                           $858 = $857&1;
                                                           if ($858) {
                                                            break L359;
                                                           }
                                                           $$idx3$val$i$i$i$i$i277 = HEAP32[$801>>2]|0;
                                                           $859 = ((($$idx3$val$i$i$i$i$i277)) + 4|0);
                                                           $860 = HEAP32[$859>>2]|0;
                                                           $861 = (($860) + -1)|0;
                                                           HEAP32[$859>>2] = $861;
                                                           $$idx2$val$i$i$i$i$i278 = HEAP32[$801>>2]|0;
                                                           $862 = ((($$idx2$val$i$i$i$i$i278)) + 4|0);
                                                           $863 = HEAP32[$862>>2]|0;
                                                           $864 = ($863|0)==(0);
                                                           if (!($864)) {
                                                            break;
                                                           }
                                                           _free($851);
                                                          }
                                                         } while(0);
                                                         _free($796);
                                                         $personalityslot$sroa$0$3420 = $personalityslot$sroa$0$042$i;$personalityslot$sroa$12$3418 = $personalityslot$sroa$6$040$i;
                                                         ___resumeException($personalityslot$sroa$0$3420|0);
                                                         // unreachable;
                                                        }
                                                       } while(0);
                                                       $919 = ___cxa_find_matching_catch_2()|0;
                                                       $920 = tempRet0;
                                                       $personalityslot$sroa$0$3420 = $919;$personalityslot$sroa$12$3418 = $920;
                                                       ___resumeException($personalityslot$sroa$0$3420|0);
                                                       // unreachable;
                                                      }
                                                     } while(0);
                                                     __THREW__ = 0;
                                                     invoke_vi(305,($x$i$i207$sroa$5$0$$sroa_idx|0));
                                                     $760 = __THREW__; __THREW__ = 0;
                                                     $761 = $760&1;
                                                     L370: do {
                                                      if (!($761)) {
                                                       $762 = HEAP32[$x$i$i207$sroa$6$0$$sroa_idx>>2]|0;
                                                       $763 = HEAP32[$762>>2]|0;
                                                       $764 = (($763) + -1)|0;
                                                       HEAP32[$762>>2] = $764;
                                                       $$idx$val$i$i$i$i23$i = HEAP32[$x$i$i207$sroa$6$0$$sroa_idx>>2]|0;
                                                       $765 = HEAP32[$$idx$val$i$i$i$i23$i>>2]|0;
                                                       $766 = ($765|0)==(0);
                                                       do {
                                                        if ($766) {
                                                         $767 = ((($762)) + 16|0);
                                                         __THREW__ = 0;
                                                         invoke_vi(301,($767|0));
                                                         $768 = __THREW__; __THREW__ = 0;
                                                         $769 = $768&1;
                                                         if ($769) {
                                                          break L370;
                                                         }
                                                         $$idx3$val$i$i$i$i$i = HEAP32[$x$i$i207$sroa$6$0$$sroa_idx>>2]|0;
                                                         $770 = ((($$idx3$val$i$i$i$i$i)) + 4|0);
                                                         $771 = HEAP32[$770>>2]|0;
                                                         $772 = (($771) + -1)|0;
                                                         HEAP32[$770>>2] = $772;
                                                         $$idx2$val$i$i$i$i$i = HEAP32[$x$i$i207$sroa$6$0$$sroa_idx>>2]|0;
                                                         $773 = ((($$idx2$val$i$i$i$i$i)) + 4|0);
                                                         $774 = HEAP32[$773>>2]|0;
                                                         $775 = ($774|0)==(0);
                                                         if (!($775)) {
                                                          break;
                                                         }
                                                         _free($762);
                                                        }
                                                       } while(0);
                                                       _free($708);
                                                       $extract$t154405 = 0;$personalityslot$sroa$0$1403 = $personalityslot$sroa$0$034$i;$personalityslot$sroa$12$1402 = $personalityslot$sroa$6$032$i;
                                                       break L263;
                                                      }
                                                     } while(0);
                                                     $693 = ___cxa_find_matching_catch_2()|0;
                                                     $694 = tempRet0;
                                                     $extract$t154405 = 0;$personalityslot$sroa$0$1403 = $693;$personalityslot$sroa$12$1402 = $694;
                                                    }
                                                   } while(0);
                                                   $928 = HEAP32[$688>>2]|0;
                                                   $929 = (($928) + -1)|0;
                                                   HEAP32[$688>>2] = $929;
                                                   $930 = ($929|0)==(0);
                                                   do {
                                                    if ($930) {
                                                     __ZN4drop17h95af9e8f1e83bb49E($696);
                                                     $931 = HEAP32[$695>>2]|0;
                                                     $932 = (($931) + -1)|0;
                                                     HEAP32[$695>>2] = $932;
                                                     $933 = ($932|0)==(0);
                                                     if (!($933)) {
                                                      break;
                                                     }
                                                     _free($688);
                                                    }
                                                   } while(0);
                                                   if ($extract$t154405) {
                                                    $personalityslot$sroa$0$0397 = $personalityslot$sroa$0$1403;$personalityslot$sroa$12$0396 = $personalityslot$sroa$12$1402;
                                                    break;
                                                   }
                                                   __ZN4drop17hab695909c806641cE($balls1);
                                                   $personalityslot$sroa$0$3420 = $personalityslot$sroa$0$1403;$personalityslot$sroa$12$3418 = $personalityslot$sroa$12$1402;
                                                   ___resumeException($personalityslot$sroa$0$3420|0);
                                                   // unreachable;
                                                  }
                                                 } while(0);
                                                 $921 = HEAP32[$681>>2]|0;
                                                 $922 = (($921) + -1)|0;
                                                 HEAP32[$681>>2] = $922;
                                                 $923 = ($922|0)==(0);
                                                 do {
                                                  if ($923) {
                                                   $924 = ((($681)) + 16|0);
                                                   __ZN4drop17h2f30a22cc85f591fE($924);
                                                   $925 = HEAP32[$686>>2]|0;
                                                   $926 = (($925) + -1)|0;
                                                   HEAP32[$686>>2] = $926;
                                                   $927 = ($926|0)==(0);
                                                   if (!($927)) {
                                                    break;
                                                   }
                                                   _free($681);
                                                  }
                                                 } while(0);
                                                 __ZN4drop17hab695909c806641cE($balls1);
                                                 $personalityslot$sroa$0$3420 = $personalityslot$sroa$0$0397;$personalityslot$sroa$12$3418 = $personalityslot$sroa$12$0396;
                                                 ___resumeException($personalityslot$sroa$0$3420|0);
                                                 // unreachable;
                                                }
                                               } while(0);
                                               $936 = ___cxa_find_matching_catch_2()|0;
                                               $937 = tempRet0;
                                               __ZN4drop17h2f30a22cc85f591fE($world);
                                               $personalityslot$sroa$0$5424448 = $936;$personalityslot$sroa$12$5422449 = $937;
                                               break L18;
                                              }
                                             } while(0);
                                             $666 = ___cxa_find_matching_catch_2()|0;
                                             $667 = tempRet0;
                                             $lpad$thr_comm$split$lp$sink$i$index48ZZ2D = $667;$lpad$thr_comm$split$lp$sink$i$indexZZ2D = $666;
                                            }
                                           } while(0);
                                           if ((label|0) == 282) {
                                            $664 = ___cxa_find_matching_catch_2()|0;
                                            $665 = tempRet0;
                                            $lpad$thr_comm$split$lp$sink$i$index48ZZ2D = $665;$lpad$thr_comm$split$lp$sink$i$indexZZ2D = $664;
                                           }
                                           __THREW__ = 0;
                                           invoke_vi(301,($world$i|0));
                                           $660 = __THREW__; __THREW__ = 0;
                                           $661 = $660&1;
                                           if (!($661)) {
                                            $personalityslot$sroa$0$5424448 = $lpad$thr_comm$split$lp$sink$i$indexZZ2D;$personalityslot$sroa$12$5422449 = $lpad$thr_comm$split$lp$sink$i$index48ZZ2D;
                                            break L18;
                                           }
                                           $938 = ___cxa_find_matching_catch_2()|0;
                                           $939 = tempRet0;
                                           $personalityslot$sroa$0$5424448 = $938;$personalityslot$sroa$12$5422449 = $939;
                                           break L18;
                                          }
                                         } while(0);
                                         _free($368);
                                         $personalityslot$sroa$0$1$i$i235$i$i = $personalityslot$sroa$0$0$i$i242$i$i;$personalityslot$sroa$7$1$i$i236$i$i = $personalityslot$sroa$7$0$i$i243$i$i;
                                        }
                                        __ZN4drop17h7b660c5166a4b0b3E($solver$i$i);
                                        $$idx$val$i$i635 = HEAP32[$_1$i$i$i$sroa$4$0$$sroa_idx709>>2]|0;
                                        $$idx5$val$i$i637 = HEAP32[$_1$i$i$i$sroa$11$0$$sroa_idx716>>2]|0;
                                        $471 = (($$idx$val$i$i635) + (($$idx5$val$i$i637*44)|0)|0);
                                        $472 = ($$idx5$val$i$i637|0)==(0);
                                        L399: do {
                                         if (!($472)) {
                                          $474 = $$idx$val$i$i635;
                                          while(1) {
                                           $473 = ((($474)) + 4|0);
                                           __THREW__ = 0;
                                           invoke_vi(254,($473|0));
                                           $475 = __THREW__; __THREW__ = 0;
                                           $476 = $475&1;
                                           if ($476) {
                                            break;
                                           }
                                           $477 = ((($474)) + 44|0);
                                           $478 = ($477|0)==($471|0);
                                           if ($478) {
                                            break L399;
                                           } else {
                                            $474 = $477;
                                           }
                                          }
                                          $481 = ___cxa_find_matching_catch_2()|0;
                                          $482 = tempRet0;
                                          $483 = HEAP32[$_1$i$i$i$sroa$8$0$$sroa_idx713>>2]|0;
                                          $not$$i$i$i6$i$i645 = ($483|0)==(0);
                                          if ($not$$i$i$i6$i$i645) {
                                           $eh$lpad$body608$index58Z2D = $482;$eh$lpad$body608$indexZ2D = $481;
                                           break L56;
                                          }
                                          $484 = HEAP32[$_1$i$i$i$sroa$4$0$$sroa_idx709>>2]|0;
                                          _free($484);
                                          $eh$lpad$body608$index58Z2D = $482;$eh$lpad$body608$indexZ2D = $481;
                                          break L56;
                                         }
                                        } while(0);
                                        $479 = HEAP32[$_1$i$i$i$sroa$8$0$$sroa_idx713>>2]|0;
                                        $not$$i$i$i$i$i642 = ($479|0)==(0);
                                        if (!($not$$i$i$i$i$i642)) {
                                         $480 = HEAP32[$_1$i$i$i$sroa$4$0$$sroa_idx709>>2]|0;
                                         _free($480);
                                        }
                                        $485 = HEAP32[$_1$i$i$i$sroa$16$0$$sroa_idx723>>2]|0;
                                        $not$$i$i$i$i1$i649 = ($485|0)==(0);
                                        if (!($not$$i$i$i$i1$i649)) {
                                         $486 = HEAP32[$_1$i$i$i$sroa$14$0$$sroa_idx720>>2]|0;
                                         _free($486);
                                        }
                                        $487 = HEAP32[$_1$i$i$i$sroa$19$0$$sroa_idx733>>2]|0;
                                        $not$$i$i$i$i4$i652 = ($487|0)==(0);
                                        if (!($not$$i$i$i$i4$i652)) {
                                         $488 = HEAP32[$_1$i$i$i$sroa$17728$0$$sroa_idx730>>2]|0;
                                         _free($488);
                                        }
                                        __THREW__ = 0;
                                        invoke_vi(297,($_4$sroa$4$0$$sroa_idx$i$i$i|0));
                                        $489 = __THREW__; __THREW__ = 0;
                                        $490 = $489&1;
                                        if ($490) {
                                         label = 280;
                                         break L56;
                                        }
                                        $491 = ((($joints$i$i)) + 80|0);
                                        $492 = HEAP32[$491>>2]|0;
                                        $not$$i$i$i$i$i$i$i$i = ($492|0)==(0);
                                        if (!($not$$i$i$i$i$i$i$i$i)) {
                                         $493 = HEAP32[$_4$sroa$6$0$$sroa_idx$i$i$i>>2]|0;
                                         _free($493);
                                        }
                                        $494 = ((($joints$i$i)) + 92|0);
                                        $495 = HEAP32[$494>>2]|0;
                                        $not$$i$i$i$i1$i$i$i$i = ($495|0)==(0);
                                        if (!($not$$i$i$i$i1$i$i$i$i)) {
                                         $496 = HEAP32[$_4$sroa$7$0$$sroa_idx$i$i$i>>2]|0;
                                         _free($496);
                                        }
                                        $497 = HEAP32[$186>>2]|0;
                                        $498 = (($497) + -1)|0;
                                        HEAP32[$186>>2] = $498;
                                        $499 = ($498|0)==(0);
                                        do {
                                         if ($499) {
                                          __THREW__ = 0;
                                          invoke_vi(295,($value$i$sroa$4$0$$sroa_idx$i$i|0));
                                          $500 = __THREW__; __THREW__ = 0;
                                          $501 = $500&1;
                                          if ($501) {
                                           label = 280;
                                           break L56;
                                          }
                                          $502 = HEAP32[$191>>2]|0;
                                          $503 = (($502) + -1)|0;
                                          HEAP32[$191>>2] = $503;
                                          $504 = ($503|0)==(0);
                                          if (!($504)) {
                                           break;
                                          }
                                          _free($186);
                                         }
                                        } while(0);
                                        __THREW__ = 0;
                                        invoke_vi(299,($ccd$i$i|0));
                                        $505 = __THREW__; __THREW__ = 0;
                                        $506 = $505&1;
                                        if ($506) {
                                         label = 280;
                                         break L56;
                                        }
                                        __THREW__ = 0;
                                        invoke_vi(300,($_52$i$i|0));
                                        $507 = __THREW__; __THREW__ = 0;
                                        $508 = $507&1;
                                        if ($508) {
                                         label = 280;
                                         break L56;
                                        } else {
                                         $personalityslot$sroa$0$3$i$i = $personalityslot$sroa$0$1$i$i235$i$i;$personalityslot$sroa$15$3$i$i = $personalityslot$sroa$7$1$i$i236$i$i;
                                         break L170;
                                        }
                                       }
                                      } while(0);
                                      _free($345);
                                      $personalityslot$sroa$0$1$i$i222$i$i = $personalityslot$sroa$0$0$i$i226$i$i;$personalityslot$sroa$7$1$i$i$i$i = $personalityslot$sroa$7$0$i$i$i$i;
                                      label = 191;
                                     }
                                    } while(0);
                                    if ((label|0) == 191) {
                                     __ZN4drop17h7b660c5166a4b0b3E($solver$i$i);
                                     $$idx$val$i$i611 = HEAP32[$_1$i$i$i$sroa$4$0$$sroa_idx709>>2]|0;
                                     $$idx5$val$i$i613 = HEAP32[$_1$i$i$i$sroa$11$0$$sroa_idx716>>2]|0;
                                     $435 = (($$idx$val$i$i611) + (($$idx5$val$i$i613*44)|0)|0);
                                     $436 = ($$idx5$val$i$i613|0)==(0);
                                     L431: do {
                                      if (!($436)) {
                                       $438 = $$idx$val$i$i611;
                                       while(1) {
                                        $437 = ((($438)) + 4|0);
                                        __THREW__ = 0;
                                        invoke_vi(254,($437|0));
                                        $439 = __THREW__; __THREW__ = 0;
                                        $440 = $439&1;
                                        if ($440) {
                                         break;
                                        }
                                        $441 = ((($438)) + 44|0);
                                        $442 = ($441|0)==($435|0);
                                        if ($442) {
                                         break L431;
                                        } else {
                                         $438 = $441;
                                        }
                                       }
                                       $445 = ___cxa_find_matching_catch_2()|0;
                                       $446 = tempRet0;
                                       $447 = HEAP32[$_1$i$i$i$sroa$8$0$$sroa_idx713>>2]|0;
                                       $not$$i$i$i6$i$i621 = ($447|0)==(0);
                                       if ($not$$i$i$i6$i$i621) {
                                        $eh$lpad$body608$index58Z2D = $446;$eh$lpad$body608$indexZ2D = $445;
                                        break L56;
                                       }
                                       $448 = HEAP32[$_1$i$i$i$sroa$4$0$$sroa_idx709>>2]|0;
                                       _free($448);
                                       $eh$lpad$body608$index58Z2D = $446;$eh$lpad$body608$indexZ2D = $445;
                                       break L56;
                                      }
                                     } while(0);
                                     $443 = HEAP32[$_1$i$i$i$sroa$8$0$$sroa_idx713>>2]|0;
                                     $not$$i$i$i$i$i618 = ($443|0)==(0);
                                     if (!($not$$i$i$i$i$i618)) {
                                      $444 = HEAP32[$_1$i$i$i$sroa$4$0$$sroa_idx709>>2]|0;
                                      _free($444);
                                     }
                                     $449 = HEAP32[$_1$i$i$i$sroa$16$0$$sroa_idx723>>2]|0;
                                     $not$$i$i$i$i1$i625 = ($449|0)==(0);
                                     if (!($not$$i$i$i$i1$i625)) {
                                      $450 = HEAP32[$_1$i$i$i$sroa$14$0$$sroa_idx720>>2]|0;
                                      _free($450);
                                     }
                                     $451 = HEAP32[$_1$i$i$i$sroa$19$0$$sroa_idx733>>2]|0;
                                     $not$$i$i$i$i4$i628 = ($451|0)==(0);
                                     if (!($not$$i$i$i$i4$i628)) {
                                      $452 = HEAP32[$_1$i$i$i$sroa$17728$0$$sroa_idx730>>2]|0;
                                      _free($452);
                                     }
                                     __THREW__ = 0;
                                     invoke_vi(297,($_4$sroa$4$0$$sroa_idx$i$i$i|0));
                                     $453 = __THREW__; __THREW__ = 0;
                                     $454 = $453&1;
                                     if ($454) {
                                      label = 280;
                                      break L56;
                                     }
                                     $455 = ((($joints$i$i)) + 80|0);
                                     $456 = HEAP32[$455>>2]|0;
                                     $not$$i$i$i$i$i$i275$i$i = ($456|0)==(0);
                                     if (!($not$$i$i$i$i$i$i275$i$i)) {
                                      $457 = HEAP32[$_4$sroa$6$0$$sroa_idx$i$i$i>>2]|0;
                                      _free($457);
                                     }
                                     $458 = ((($joints$i$i)) + 92|0);
                                     $459 = HEAP32[$458>>2]|0;
                                     $not$$i$i$i$i1$i$i277$i$i = ($459|0)==(0);
                                     if (!($not$$i$i$i$i1$i$i277$i$i)) {
                                      $460 = HEAP32[$_4$sroa$7$0$$sroa_idx$i$i$i>>2]|0;
                                      _free($460);
                                     }
                                     $461 = HEAP32[$186>>2]|0;
                                     $462 = (($461) + -1)|0;
                                     HEAP32[$186>>2] = $462;
                                     $463 = ($462|0)==(0);
                                     do {
                                      if ($463) {
                                       __THREW__ = 0;
                                       invoke_vi(295,($value$i$sroa$4$0$$sroa_idx$i$i|0));
                                       $464 = __THREW__; __THREW__ = 0;
                                       $465 = $464&1;
                                       if ($465) {
                                        label = 280;
                                        break L56;
                                       }
                                       $466 = HEAP32[$191>>2]|0;
                                       $467 = (($466) + -1)|0;
                                       HEAP32[$191>>2] = $467;
                                       $468 = ($467|0)==(0);
                                       if (!($468)) {
                                        break;
                                       }
                                       _free($186);
                                      }
                                     } while(0);
                                     __THREW__ = 0;
                                     invoke_vi(299,($ccd$i$i|0));
                                     $469 = __THREW__; __THREW__ = 0;
                                     $470 = $469&1;
                                     if ($470) {
                                      label = 280;
                                      break L56;
                                     } else {
                                      $personalityslot$sroa$0$3$i$i = $personalityslot$sroa$0$1$i$i222$i$i;$personalityslot$sroa$15$3$i$i = $personalityslot$sroa$7$1$i$i$i$i;
                                     }
                                    }
                                    __THREW__ = 0;
                                    invoke_vi(298,($_51$i$i|0));
                                    $423 = __THREW__; __THREW__ = 0;
                                    $424 = $423&1;
                                    if ($424) {
                                     label = 280;
                                     break L56;
                                    } else {
                                     $personalityslot$sroa$0$5424448 = $personalityslot$sroa$0$3$i$i;$personalityslot$sroa$12$5422449 = $personalityslot$sroa$15$3$i$i;
                                     break L18;
                                    }
                                   }
                                  } while(0);
                                  $333 = ($_8$sroa$0$0$copyload22$i$i$i$i|0)==(0);
                                  if ($333) {
                                   $personalityslot$sroa$0$0$i$i$i$i = $personalityslot$sroa$0$1$i$i$i$i;$personalityslot$sroa$6$0$i$i$i$i = $personalityslot$sroa$6$1$i$i$i$i;
                                   break;
                                  }
                                  _free($_8$sroa$527$0$copyload33$i$i$i$i);
                                  $personalityslot$sroa$0$0$i$i$i$i = $personalityslot$sroa$0$1$i$i$i$i;$personalityslot$sroa$6$0$i$i$i$i = $personalityslot$sroa$6$1$i$i$i$i;
                                 }
                                } while(0);
                                $332 = ($_5$sroa$0$0$copyload36$i$i$i$i|0)==(0);
                                if (!($332)) {
                                 _free($_5$sroa$541$0$copyload47$i$i$i$i);
                                }
                                $eh$lpad$body220$i$i$index22Z2D = $personalityslot$sroa$6$0$i$i$i$i;$eh$lpad$body220$i$i$indexZ2D = $personalityslot$sroa$0$0$i$i$i$i;
                               }
                               $$idx$val$i$i588 = HEAP32[$_1$i$i$i$sroa$4$0$$sroa_idx709>>2]|0;
                               $$idx5$val$i$i590 = HEAP32[$_1$i$i$i$sroa$11$0$$sroa_idx716>>2]|0;
                               $397 = (($$idx$val$i$i588) + (($$idx5$val$i$i590*44)|0)|0);
                               $398 = ($$idx5$val$i$i590|0)==(0);
                               L467: do {
                                if (!($398)) {
                                 $400 = $$idx$val$i$i588;
                                 while(1) {
                                  $399 = ((($400)) + 4|0);
                                  __THREW__ = 0;
                                  invoke_vi(254,($399|0));
                                  $401 = __THREW__; __THREW__ = 0;
                                  $402 = $401&1;
                                  if ($402) {
                                   break;
                                  }
                                  $403 = ((($400)) + 44|0);
                                  $404 = ($403|0)==($397|0);
                                  if ($404) {
                                   break L467;
                                  } else {
                                   $400 = $403;
                                  }
                                 }
                                 $407 = ___cxa_find_matching_catch_2()|0;
                                 $408 = tempRet0;
                                 $409 = HEAP32[$_1$i$i$i$sroa$8$0$$sroa_idx713>>2]|0;
                                 $not$$i$i$i6$i$i598 = ($409|0)==(0);
                                 if ($not$$i$i$i6$i$i598) {
                                  $eh$lpad$body608$index58Z2D = $408;$eh$lpad$body608$indexZ2D = $407;
                                  break L56;
                                 }
                                 $410 = HEAP32[$_1$i$i$i$sroa$4$0$$sroa_idx709>>2]|0;
                                 _free($410);
                                 $eh$lpad$body608$index58Z2D = $408;$eh$lpad$body608$indexZ2D = $407;
                                 break L56;
                                }
                               } while(0);
                               $405 = HEAP32[$_1$i$i$i$sroa$8$0$$sroa_idx713>>2]|0;
                               $not$$i$i$i$i$i595 = ($405|0)==(0);
                               if (!($not$$i$i$i$i$i595)) {
                                $406 = HEAP32[$_1$i$i$i$sroa$4$0$$sroa_idx709>>2]|0;
                                _free($406);
                               }
                               $411 = HEAP32[$_1$i$i$i$sroa$16$0$$sroa_idx723>>2]|0;
                               $not$$i$i$i$i1$i602 = ($411|0)==(0);
                               if (!($not$$i$i$i$i1$i602)) {
                                $412 = HEAP32[$_1$i$i$i$sroa$14$0$$sroa_idx720>>2]|0;
                                _free($412);
                               }
                               $413 = HEAP32[$_1$i$i$i$sroa$19$0$$sroa_idx733>>2]|0;
                               $not$$i$i$i$i4$i605 = ($413|0)==(0);
                               if (!($not$$i$i$i$i4$i605)) {
                                $414 = HEAP32[$_1$i$i$i$sroa$17728$0$$sroa_idx730>>2]|0;
                                _free($414);
                               }
                               __THREW__ = 0;
                               invoke_vi(297,($_4$sroa$4$0$$sroa_idx$i$i$i|0));
                               $415 = __THREW__; __THREW__ = 0;
                               $416 = $415&1;
                               if ($416) {
                                label = 280;
                                break L56;
                               }
                               $417 = ((($joints$i$i)) + 80|0);
                               $418 = HEAP32[$417>>2]|0;
                               $not$$i$i$i$i$i$i269$i$i = ($418|0)==(0);
                               if (!($not$$i$i$i$i$i$i269$i$i)) {
                                $419 = HEAP32[$_4$sroa$6$0$$sroa_idx$i$i$i>>2]|0;
                                _free($419);
                               }
                               $420 = ((($joints$i$i)) + 92|0);
                               $421 = HEAP32[$420>>2]|0;
                               $not$$i$i$i$i1$i$i271$i$i = ($421|0)==(0);
                               if ($not$$i$i$i$i1$i$i271$i$i) {
                                $personalityslot$sroa$0$7$ph$i$i = $eh$lpad$body220$i$i$indexZ2D;$personalityslot$sroa$15$7$ph$i$i = $eh$lpad$body220$i$i$index22Z2D;
                                break L84;
                               }
                               $422 = HEAP32[$_4$sroa$7$0$$sroa_idx$i$i$i>>2]|0;
                               _free($422);
                               $personalityslot$sroa$0$7$ph$i$i = $eh$lpad$body220$i$i$indexZ2D;$personalityslot$sroa$15$7$ph$i$i = $eh$lpad$body220$i$i$index22Z2D;
                               break L84;
                              }
                             } while(0);
                             __THREW__ = 0;
                             invoke_vi(297,($_9$i$i$i$i$i|0));
                             $304 = __THREW__; __THREW__ = 0;
                             $305 = $304&1;
                             if (!($305)) {
                              $personalityslot$sroa$0$1$i$i17$i$i$i = $personalityslot$sroa$0$0$i$i24$i$i$i;$personalityslot$sroa$7$1$i$i18$i$i$i = $personalityslot$sroa$7$0$i$i25$i$i$i;
                              label = 117;
                              break;
                             }
                             $320 = ___cxa_find_matching_catch_2()|0;
                             $321 = tempRet0;
                             $eh$lpad$body$i198$i$i$index12Z2D = $321;$eh$lpad$body$i198$i$i$indexZ2D = $320;
                            }
                           } while(0);
                           if ((label|0) == 117) {
                            $eh$lpad$body$i198$i$i$index12Z2D = $personalityslot$sroa$7$1$i$i18$i$i$i;$eh$lpad$body$i198$i$i$indexZ2D = $personalityslot$sroa$0$1$i$i17$i$i$i;
                           }
                           _free($282);
                           $not$$i$i$i$i1$i = ($_1$i$i$i$sroa$16$20$copyload|0)==(0);
                           if (!($not$$i$i$i$i1$i)) {
                            _free($_1$i$i$i$sroa$14$20$copyload);
                           }
                           $not$$i$i$i$i4$i = ($_1$i$i$i$sroa$19$32$copyload|0)==(0);
                           if ($not$$i$i$i$i4$i) {
                            $eh$lpad$body200$i$i$index28Z2D = $eh$lpad$body$i198$i$i$index12Z2D;$eh$lpad$body200$i$i$indexZ2D = $eh$lpad$body$i198$i$i$indexZ2D;
                            break L137;
                           }
                           _free($_1$i$i$i$sroa$17728$32$copyload);
                           $eh$lpad$body200$i$i$index28Z2D = $eh$lpad$body$i198$i$i$index12Z2D;$eh$lpad$body200$i$i$indexZ2D = $eh$lpad$body$i198$i$i$indexZ2D;
                           break L137;
                          }
                         } while(0);
                         _free($282);
                         $personalityslot$sroa$0$1$i$i$i172$i$i = $personalityslot$sroa$0$0$i$i$i179$i$i;$personalityslot$sroa$7$1$i$i$i173$i$i = $personalityslot$sroa$7$0$i$i$i180$i$i;
                         label = 108;
                        }
                       } while(0);
                       if ((label|0) == 108) {
                        $eh$lpad$body200$i$i$index28Z2D = $personalityslot$sroa$7$1$i$i$i173$i$i;$eh$lpad$body200$i$i$indexZ2D = $personalityslot$sroa$0$1$i$i$i172$i$i;
                       }
                       $personalityslot$sroa$0$7$ph$i$i = $eh$lpad$body200$i$i$indexZ2D;$personalityslot$sroa$15$7$ph$i$i = $eh$lpad$body200$i$i$index28Z2D;
                       break L84;
                      }
                     } while(0);
                     $eh$lpad$body130$i$i$index42Z2D = $personalityslot$sroa$5$052$i$i$i$i;$eh$lpad$body130$i$i$indexZ2D = $personalityslot$sroa$0$053$i$i$i$i;
                     label = 189;
                    }
                   } while(0);
                   if ((label|0) == 188) {
                    $431 = ___cxa_find_matching_catch_2()|0;
                    $432 = tempRet0;
                    $eh$lpad$body130$i$i$index42Z2D = $432;$eh$lpad$body130$i$i$indexZ2D = $431;
                    label = 189;
                   }
                   if ((label|0) == 189) {
                    $personalityslot$sroa$0$7$ph$i$i = $eh$lpad$body130$i$i$indexZ2D;$personalityslot$sroa$15$7$ph$i$i = $eh$lpad$body130$i$i$index42Z2D;
                   }
                   $389 = HEAP32[$186>>2]|0;
                   $390 = (($389) + -1)|0;
                   HEAP32[$186>>2] = $390;
                   $391 = ($390|0)==(0);
                   if (!($391)) {
                    $personalityslot$sroa$0$7441$i$i = $personalityslot$sroa$0$7$ph$i$i;$personalityslot$sroa$15$7439$i$i = $personalityslot$sroa$15$7$ph$i$i;
                    break;
                   }
                   __THREW__ = 0;
                   invoke_vi(295,($value$i$sroa$4$0$$sroa_idx$i$i|0));
                   $392 = __THREW__; __THREW__ = 0;
                   $393 = $392&1;
                   if ($393) {
                    label = 280;
                    break L56;
                   }
                   $394 = HEAP32[$191>>2]|0;
                   $395 = (($394) + -1)|0;
                   HEAP32[$191>>2] = $395;
                   $396 = ($395|0)==(0);
                   if (!($396)) {
                    $personalityslot$sroa$0$7441$i$i = $personalityslot$sroa$0$7$ph$i$i;$personalityslot$sroa$15$7439$i$i = $personalityslot$sroa$15$7$ph$i$i;
                    break;
                   }
                   _free($186);
                   $personalityslot$sroa$0$7441$i$i = $personalityslot$sroa$0$7$ph$i$i;$personalityslot$sroa$15$7439$i$i = $personalityslot$sroa$15$7$ph$i$i;
                  }
                 } while(0);
                 __THREW__ = 0;
                 invoke_vi(299,($ccd$i$i|0));
                 $387 = __THREW__; __THREW__ = 0;
                 $388 = $387&1;
                 if ($388) {
                  label = 280;
                  break L56;
                 } else {
                  $personalityslot$sroa$0$5$ph$i$i = $personalityslot$sroa$0$7441$i$i;$personalityslot$sroa$15$5$ph$i$i = $personalityslot$sroa$15$7439$i$i;
                  label = 159;
                  break L56;
                 }
                }
               } while(0);
               _free($169);
               $personalityslot$sroa$0$5$ph$i$i = $personalityslot$sroa$0$0$i$i$i$i$i;$personalityslot$sroa$15$5$ph$i$i = $personalityslot$sroa$7$0$i$i$i$i$i;
               label = 159;
               break L56;
              }
             } while(0);
             if ((label|0) == 185) {
              $427 = ___cxa_find_matching_catch_2()|0;
              $428 = tempRet0;
              $eh$lpad$body114$i$i$index35Z2D = $428;$eh$lpad$body114$i$i$indexZ2D = $427;
             }
             $personalityslot$sroa$0$5$ph$i$i = $eh$lpad$body114$i$i$indexZ2D;$personalityslot$sroa$15$5$ph$i$i = $eh$lpad$body114$i$i$index35Z2D;
             label = 159;
            }
           } while(0);
           if ((label|0) == 159) {
            __THREW__ = 0;
            invoke_vi(298,($cworld$i$i|0));
            $385 = __THREW__; __THREW__ = 0;
            $386 = $385&1;
            if ($386) {
             label = 280;
            } else {
             $personalityslot$sroa$0$5424448 = $personalityslot$sroa$0$5$ph$i$i;$personalityslot$sroa$12$5422449 = $personalityslot$sroa$15$5$ph$i$i;
             break L18;
            }
           }
           if ((label|0) == 280) {
            $662 = ___cxa_find_matching_catch_2()|0;
            $663 = tempRet0;
            $eh$lpad$body608$index58Z2D = $663;$eh$lpad$body608$indexZ2D = $662;
           }
           $personalityslot$sroa$0$5424448 = $eh$lpad$body608$indexZ2D;$personalityslot$sroa$12$5422449 = $eh$lpad$body608$index58Z2D;
           break L18;
          }
         } while(0);
         _free($87);
         $personalityslot$sroa$0$1$i$i$i$i$i$i = $personalityslot$sroa$0$0$i$i$i$i$i$i;$personalityslot$sroa$7$1$i$i$i$i$i$i = $personalityslot$sroa$7$0$i$i$i$i$i$i;
         label = 23;
        }
       } while(0);
       if ((label|0) == 23) {
        $eh$lpad$body5$i$i$i$index7Z2D = $personalityslot$sroa$7$1$i$i$i$i$i$i;$eh$lpad$body5$i$i$i$indexZ2D = $personalityslot$sroa$0$1$i$i$i$i$i$i;
        label = 43;
       }
       if ((label|0) == 43) {
        __THREW__ = 0;
        invoke_vi(292,($objects$i$i$i|0));
        $126 = __THREW__; __THREW__ = 0;
        $127 = $126&1;
        if ($127) {
         label = 184;
        } else {
         $personalityslot$sroa$0$5300$ph$ph310334$i$i$i = $eh$lpad$body5$i$i$i$indexZ2D;$personalityslot$sroa$14$5298$ph$ph311333$i$i$i = $eh$lpad$body5$i$i$i$index7Z2D;
        }
       }
       if ((label|0) == 184) {
        $425 = ___cxa_find_matching_catch_2()|0;
        $426 = tempRet0;
        $eh$lpad$body$i$i$index17Z2D = $426;$eh$lpad$body$i$i$indexZ2D = $425;
        label = 160;
        break;
       }
       $124 = HEAP32[$_8$sroa$0$sroa$10$0$_8$sroa$0$0$$sroa_cast13$sroa_idx50$i$i$i$i>>2]|0;
       $not$$i$i$i$i$i$i$i17$i$i$i = ($124|0)==(0);
       if ($not$$i$i$i$i$i$i$i17$i$i$i) {
        $personalityslot$sroa$0$0$i$i$i = $personalityslot$sroa$0$5300$ph$ph310334$i$i$i;$personalityslot$sroa$14$0$i$i$i = $personalityslot$sroa$14$5298$ph$ph311333$i$i$i;
        label = 21;
       } else {
        $125 = HEAP32[$_8$sroa$0$sroa$9$0$_8$sroa$0$0$$sroa_cast13$sroa_idx48$i$i$i$i>>2]|0;
        _free($125);
        $personalityslot$sroa$0$0$i$i$i = $personalityslot$sroa$0$5300$ph$ph310334$i$i$i;$personalityslot$sroa$14$0$i$i$i = $personalityslot$sroa$14$5298$ph$ph311333$i$i$i;
        label = 21;
       }
      }
     } while(0);
     if ((label|0) == 20) {
      $71 = ___cxa_find_matching_catch_2()|0;
      $72 = tempRet0;
      __THREW__ = 0;
      invoke_vi(292,($_7$i$i$i$i|0));
      $73 = __THREW__; __THREW__ = 0;
      $74 = $73&1;
      if ($74) {
       $137 = ___cxa_find_matching_catch_2()|0;
       $138 = tempRet0;
       $eh$lpad$body$i$i$i$index2Z2D = $138;$eh$lpad$body$i$i$i$indexZ2D = $137;
      } else {
       $eh$lpad$body$i$i$i$index2Z2D = $72;$eh$lpad$body$i$i$i$indexZ2D = $71;
      }
      $personalityslot$sroa$0$0$i$i$i = $eh$lpad$body$i$i$i$indexZ2D;$personalityslot$sroa$14$0$i$i$i = $eh$lpad$body$i$i$i$index2Z2D;
      label = 21;
     }
     if ((label|0) == 21) {
      $eh$lpad$body$i$i$index17Z2D = $personalityslot$sroa$14$0$i$i$i;$eh$lpad$body$i$i$indexZ2D = $personalityslot$sroa$0$0$i$i$i;
      label = 160;
     }
     if ((label|0) == 160) {
      $personalityslot$sroa$0$5424448 = $eh$lpad$body$i$i$indexZ2D;$personalityslot$sroa$12$5422449 = $eh$lpad$body$i$i$index17Z2D;
     }
     $$idx$val$i299 = HEAP32[$balls>>2]|0;
     $$idx5$val$i = HEAP32[$18>>2]|0;
     $885 = (($$idx$val$i299) + ($$idx5$val$i<<2)|0);
     $886 = ($$idx5$val$i|0)==(0);
     L539: do {
      if (!($886)) {
       $888 = $$idx$val$i299;
       while(1) {
        $887 = HEAP32[$888>>2]|0;
        $889 = HEAP32[$887>>2]|0;
        $890 = (($889) + -1)|0;
        HEAP32[$887>>2] = $890;
        $$idx$val$i$i658 = HEAP32[$888>>2]|0;
        $891 = HEAP32[$$idx$val$i$i658>>2]|0;
        $892 = ($891|0)==(0);
        if ($892) {
         $893 = ((($887)) + 16|0);
         $894 = HEAP32[$893>>2]|0;
         $895 = HEAP32[$894>>2]|0;HEAP32[$894>>2] = (($895-1)|0);
         $896 = ($895|0)==(1);
         if ($896) {
          /* fence */;
          __THREW__ = 0;
          invoke_vi(241,($893|0));
          $897 = __THREW__; __THREW__ = 0;
          $898 = $897&1;
          if ($898) {
           break;
          }
         }
         $899 = ((($887)) + 172|0);
         $900 = HEAP32[$899>>2]|0;
         $switchtmp$i$i$i$i$i$i = ($900|0)==(0|0);
         if (!($switchtmp$i$i$i$i$i$i)) {
          $$idx1$i$i$i$i$i$i$i = ((($887)) + 176|0);
          $$idx1$val$i$i$i$i$i$i$i = HEAP32[$$idx1$i$i$i$i$i$i$i>>2]|0;
          $$idx1$val$val$i$i$i$i$i$i$i = HEAP32[$$idx1$val$i$i$i$i$i$i$i>>2]|0;
          __THREW__ = 0;
          invoke_vi($$idx1$val$val$i$i$i$i$i$i$i|0,($900|0));
          $901 = __THREW__; __THREW__ = 0;
          $902 = $901&1;
          if ($902) {
           break;
          }
          $903 = HEAP32[$$idx1$i$i$i$i$i$i$i>>2]|0;
          $904 = ((($903)) + 4|0);
          $905 = HEAP32[$904>>2]|0;
          $906 = ($905|0)==(0);
          if (!($906)) {
           _free($900);
          }
         }
         $$idx3$val$i$i = HEAP32[$888>>2]|0;
         $907 = ((($$idx3$val$i$i)) + 4|0);
         $908 = HEAP32[$907>>2]|0;
         $909 = (($908) + -1)|0;
         HEAP32[$907>>2] = $909;
         $$idx2$val$i$i = HEAP32[$888>>2]|0;
         $910 = ((($$idx2$val$i$i)) + 4|0);
         $911 = HEAP32[$910>>2]|0;
         $912 = ($911|0)==(0);
         if ($912) {
          _free($887);
         }
        }
        $913 = ((($888)) + 4|0);
        $914 = ($913|0)==($885|0);
        if ($914) {
         break L539;
        } else {
         $888 = $913;
        }
       }
       $916 = ___cxa_find_matching_catch_2()|0;
       $917 = tempRet0;
       $918 = HEAP32[$17>>2]|0;
       $not$$i$i$i6$i = ($918|0)==(0);
       if ($not$$i$i$i6$i) {
        ___resumeException($916|0);
        // unreachable;
       }
       _free($$idx$val$i299);
       ___resumeException($916|0);
       // unreachable;
      }
     } while(0);
     $915 = HEAP32[$17>>2]|0;
     $not$$i$i$i$i = ($915|0)==(0);
     if ($not$$i$i$i$i) {
      $personalityslot$sroa$0$3421 = $personalityslot$sroa$0$5424448;$personalityslot$sroa$12$3419 = $personalityslot$sroa$12$5422449;
     } else {
      _free($$idx$val$i299);
      $personalityslot$sroa$0$3421 = $personalityslot$sroa$0$5424448;$personalityslot$sroa$12$3419 = $personalityslot$sroa$12$5422449;
     }
    }
   }
  }
 } while(0);
 if ((label|0) == 394) {
  $934 = ___cxa_find_matching_catch_2()|0;
  $935 = tempRet0;
  $personalityslot$sroa$0$3421 = $934;$personalityslot$sroa$12$3419 = $935;
 }
 __ZN4drop17h95af9e8f1e83bb49E($document);
 $personalityslot$sroa$0$3420 = $personalityslot$sroa$0$3421;$personalityslot$sroa$12$3418 = $personalityslot$sroa$12$3419;
 ___resumeException($personalityslot$sroa$0$3420|0);
 // unreachable;
}
function __ZN12physics_test4main28__u7b__u7b_closure_u7d__u7d_17hc0196a83acba1e3cE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$idx = 0, $$idx$val = 0, $$idx15 = 0, $$idx15$val = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $cond$i$i$i = 0, $cond$i$i$i20 = 0, $personalityslot$sroa$0$1 = 0;
 var $personalityslot$sroa$6$1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $$idx = ((($0)) + 8|0);
 $$idx$val = HEAP32[$$idx>>2]|0;
 $2 = ((($$idx$val)) + 8|0);
 $3 = HEAP32[$2>>2]|0;
 $cond$i$i$i = ($3|0)==(0);
 if (!($cond$i$i$i)) {
  __ZN4core6result13unwrap_failed17he96585155b596c01E();
  // unreachable;
 }
 HEAP32[$2>>2] = -1;
 $$idx15 = ((($0)) + 12|0);
 $$idx15$val = HEAP32[$$idx15>>2]|0;
 $4 = ((($$idx15$val)) + 8|0);
 $5 = HEAP32[$4>>2]|0;
 $cond$i$i$i20 = ($5|0)==(0);
 if (!($cond$i$i$i20)) {
  __THREW__ = 0;
  invoke_v(212);
  $6 = __THREW__; __THREW__ = 0;
  $7 = ___cxa_find_matching_catch_2()|0;
  $8 = tempRet0;
  $personalityslot$sroa$0$1 = $7;$personalityslot$sroa$6$1 = $8;
  HEAP32[$2>>2] = 0;
  ___resumeException($personalityslot$sroa$0$1|0);
  // unreachable;
 }
 $9 = ((($$idx$val)) + 12|0);
 HEAP32[$4>>2] = -1;
 $10 = ((($$idx15$val)) + 16|0);
 __THREW__ = 0;
 invoke_viiidd(213,($0|0),($9|0),($10|0),300.0,550.0);
 $11 = __THREW__; __THREW__ = 0;
 $12 = $11&1;
 if (!($12)) {
  HEAP32[$4>>2] = 0;
  HEAP32[$2>>2] = 0;
  return;
 }
 $13 = ___cxa_find_matching_catch_2()|0;
 $14 = tempRet0;
 HEAP32[$4>>2] = 0;
 $personalityslot$sroa$0$1 = $13;$personalityslot$sroa$6$1 = $14;
 HEAP32[$2>>2] = 0;
 ___resumeException($personalityslot$sroa$0$1|0);
 // unreachable;
}
function __ZN12physics_test4main28__u7b__u7b_closure_u7d__u7d_17hf927d76feac1da6bE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$$i$i$i$i = 0, $$$i$pn$i$i$i = 0, $$arith = 0, $$idx$i$i$i$i$i$i189$i$i = 0, $$idx$i$i10$i$i$i$i = 0, $$idx$i7$i$i$i$i = 0, $$idx$val = 0, $$idx$val$i$i$i$i$i$i$i = 0, $$idx$val$i$i$i$i$i$i$i$i = 0, $$idx$val$i$i$i$i$i$i161$i$i = 0, $$idx$val$i$i$i$i$i$i190$i$i = 0, $$idx$val$i$i$i$i$i$i214$i$i = 0, $$idx$val$i$i$i$i$i10$i$i$i = 0, $$idx$val$i$i$i$i$i141$i$i = 0, $$idx$val$i$i$i$i$i164$i$i = 0, $$idx$val$i$i$i$i$i20$i$i$i = 0, $$idx$val$i$i$i$i$i217$i$i = 0, $$idx$val$i$i$i$i$i28$i$i$i = 0, $$idx$val$i$i$i$i$i38$i$i$i = 0, $$idx$val$i$i$i$i$i46$i$i$i = 0;
 var $$idx$val$i$i$i$i$i66$i$i$i = 0, $$idx$val$i$i$i$i$i76$i$i$i = 0, $$idx$val$i$i$i$i107$i$i$i = 0, $$idx$val$i$i$i$i111$i$i = 0, $$idx$val$i$i$i$i148$i$i$i = 0, $$idx$val$i$i$i$i191$i$i$i = 0, $$idx$val$i$i$i$i40$i$i$i = 0, $$idx$val$i$i$i$i57$i$i$i = 0, $$idx$val$i$i$i$i74$i$i$i = 0, $$idx$val$i$i$i$i90$i$i$i = 0, $$idx$val$i$i11$i$i$i$i = 0, $$idx$val$i31 = 0, $$idx$val$i8$i$i$i$i = 0, $$idx22$val = 0, $$idx23 = 0, $$idx23$val = 0, $$in$i$i = 0, $$in114$i$us$i = 0, $$not$i$i = 0, $$not115$i$i = 0;
 var $$overflow = 0, $$sroa_idx = 0, $$sroa_idx304 = 0, $$sroa_idx319 = 0, $$sroa_idx321 = 0, $$val$i$i$i = 0.0, $$val$us$i$us$i = 0.0, $$val$us$i$us$i$i$i = 0.0, $$val11$us$i$us$i = 0.0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0;
 var $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0;
 var $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0;
 var $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0;
 var $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0;
 var $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0;
 var $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0;
 var $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0;
 var $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0;
 var $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0;
 var $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0.0, $280 = 0, $281 = 0, $282 = 0.0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0.0;
 var $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0.0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0;
 var $308 = 0, $309 = 0, $31 = 0.0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0.0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0;
 var $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0.0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0.0, $340 = 0, $341 = 0, $342 = 0, $343 = 0;
 var $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0.0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0;
 var $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0.0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0.0;
 var $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $4 = 0, $40 = 0.0, $41 = 0, $42 = 0.0, $43 = 0.0, $44 = 0.0, $45 = 0.0, $46 = 0.0;
 var $47 = 0, $48 = 0, $49 = 0.0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0.0, $55 = 0.0, $56 = 0, $57 = 0, $58 = 0.0, $59 = 0.0, $6 = 0, $60 = 0.0, $61 = 0, $62 = 0, $63 = 0.0, $64 = 0.0;
 var $65 = 0.0, $66 = 0.0, $67 = 0.0, $68 = 0.0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0.0, $74 = 0.0, $75 = 0.0, $76 = 0.0, $77 = 0, $78 = 0, $79 = 0.0, $8 = 0, $80 = 0, $81 = 0, $82 = 0;
 var $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0.0, $97 = 0, $98 = 0, $99 = 0, $_0$0$sroa$speculated$i$i$i$i$i$i$i$i = 0, $_0$0$sroa$speculated$i$i$us$i$us$i$i$i = 0;
 var $_0$0$sroa$speculated$i75$i$i = 0, $_0$0$sroa$speculated$i84$i$i = 0, $_10$i$i = 0, $_10$sroa$0$0$$sroa_idx$i$i$i$i$i$i$i = 0, $_10$sroa$4$0$$sroa_idx$i$i$i$i$i$i$i = 0, $_10$sroa$5$0$$sroa_idx$i$i$i$i$i$i$i = 0, $_10$sroa$9$0$$sroa_idx$i$i$i$i$i$i$i = 0, $_101$i$i$i = 0, $_103$i$i$i = 0, $_11$sroa$10$0$ph$i$i = 0.0, $_13$i$i$i = 0, $_13$sroa$4$0$$sroa_idx65$i$i$i$i$i$i = 0, $_13$sroa$5$0$$sroa_idx67$i$i$i$i$i$i = 0, $_15$sroa$17$i$i$i = 0, $_15$sroa$26$i$i$i = 0, $_163$i$i$i = 0, $_165$i$i$i = 0, $_21$sroa$12$0$i$i = 0, $_21$sroa$12$8$copyload$i$i = 0, $_21$sroa$19$8$$sroa_raw_idx$i$i = 0;
 var $_21$sroa$19$i$i = 0, $_21$sroa$19734$0$i$i = 0, $_21$sroa$19734$8$$sroa_idx$i$i = 0, $_21$sroa$19734$8$copyload$i$i = 0, $_21$sroa$22$0$i$i = 0, $_21$sroa$22$8$$sroa_idx750$i$i = 0, $_21$sroa$22$8$copyload$i$i = 0, $_21$sroa$25$8$$sroa_raw_idx$i$i = 0, $_21$sroa$25$i$i = 0, $_25$sroa$4$0$$sroa_idx112$i$i$i$i$i$i$i$i$i = 0, $_25$sroa$5$0$$sroa_idx114$i$i$i$i$i$i$i$i$i = 0, $_39$sroa$0$0$i = 0, $_39$sroa$13$8$$sroa_raw_idx$i = 0, $_39$sroa$13$i = 0, $_39$sroa$17$0$i = 0, $_39$sroa$17$8$$sroa_idx$i = 0, $_39$sroa$17$8$copyload$i = 0, $_39$sroa$19$0$i = 0, $_39$sroa$19$8$$sroa_idx102$i = 0, $_39$sroa$19$8$copyload$i = 0;
 var $_39$sroa$21$8$$sroa_raw_idx$i = 0, $_39$sroa$21$i = 0, $_39$sroa$8$0$i = 0, $_39$sroa$8$8$copyload$i = 0, $_44$i$i = 0, $_5$sroa$0$sroa$0$0$copyload = 0, $_5$sroa$0$sroa$4$0$copyload = 0, $_5$sroa$0$sroa$5$0$copyload = 0, $_5$sroa$4$12$copyload = 0, $_5$sroa$6$12$copyload = 0, $_5$sroa$7$12$copyload = 0, $_6$sroa$0$0$$sroa_idx$i$i$i$i = 0, $_6$sroa$0$0$$sroa_idx$i163$i$i$i = 0, $_6$sroa$4$0$$sroa_idx16$i$i$i$i$i = 0, $_74$sroa$14$i$i = 0, $_74$sroa$21$i$i = 0, $brmerge$i$i = 0, $buffer$i$i$i$i = 0, $buffer4$i$i$i$i = 0, $cond$i$i$i = 0;
 var $cond$i$i$i$i = 0, $e$sroa$4$0$$sroa_idx$i$i = 0, $e$sroa$5$0$$sroa_idx$i$i = 0, $e$sroa$6$0$$sroa_idx$i$i = 0, $e$sroa$7$0$$sroa_raw_idx$i$i = 0, $eh$lpad$body68$i$index8Z2D = 0, $eh$lpad$body68$i$indexZ2D = 0, $iter$sroa$0$0$ph$i59$i$i$i = 0, $iter$sroa$0$0$us$i$us$i$i$i = 0, $iter$sroa$5$0$i1035$i$i = 0, $iter$sroa$5$0$ph$i60$i$i$i = 0, $iter$sroa$5$0$us$i$us$i$i$i = 0, $local_len$sroa$5$0$$i$i$i$i$i$i = 0, $local_len$sroa$5$0$lcssa$i$i$i$i$i$i = 0, $local_len$sroa$5$0$lcssa$i$i$i$i$i$i$i$i = 0, $lpad$phi$i$i$i$i$index = 0, $lpad$phi$i$i$i$i$index2 = 0, $max$0$i1036$i$i = 0.0, $max$1$i$i$i = 0.0, $maybe_value$sroa$0$0$copyload47$i$i$i$i$i$i = 0;
 var $maybe_value$sroa$12$0$$sroa_idx50$i$i$i$i$i$i = 0, $maybe_value$sroa$12$0$copyload51$i$i$i$i$i$i = 0, $maybe_value$sroa$16$0$$sroa_idx57$i$i$i$i$i$i = 0, $maybe_value$sroa$16$0$copyload58$i$i$i$i$i$i = 0, $not$$$i$i$i$i$i$i$i = 0, $not$$$i$i$i$i$i$us$i$us$i$i$i = 0, $not$$i$i$i$i = 0, $not$$i$i$i$i$i = 0, $not$$i$i$i$i$i67$i = 0, $not$$i$i$i$i24 = 0, $not$$i$i$i$i27 = 0, $not$$i$i$i$i36 = 0, $not$$i$i$i$i38$i = 0, $notlhs$i$i$i$i$i$i = 0, $notlhs$i$i$i$i$us$i$us$i$i$i = 0, $notrhs$i$i$i$i$i$i = 0, $notrhs$i$i$i$i$us$i$us$i$i$i = 0, $or$cond$i$i$i$i = 0, $or$cond$i$i$us$i$us$i$i$i = 0, $or$cond$i$i188$i$i = 0;
 var $p3s$i = 0, $personalityslot$sroa$0$0$i$i$i$i = 0, $personalityslot$sroa$0$1193$i = 0, $personalityslot$sroa$0$1194$i = 0, $personalityslot$sroa$0$2108 = 0, $personalityslot$sroa$0$6347$i$i$i$i = 0, $personalityslot$sroa$12$0$i$i$i$i = 0, $personalityslot$sroa$12$6346$i$i$i$i = 0, $personalityslot$sroa$7$2106 = 0, $personalityslot$sroa$8$1191$i = 0, $personalityslot$sroa$8$1192$i = 0, $pool$i$i$i$i = 0, $ptr$0$i$i$i$i$i66$i = 0, $self$sroa$7$i$i = 0, $self$sroa$9$i$i = 0, $simgeo$i = 0, $switch2tmp$i$i$us$i$us$i = 0, $switch2tmp$i$i$us$i$us$i$i$i = 0, $switch2tmp$i$i34$us$i$us$i = 0, $switch46$i$i$i = 0;
 var $switch4tmp$i$i$i = 0, $switch53$i$i$i = 0, $switchtmp$i$i$i$i = 0, $switchtmp$i$i$i$i$i$i$i$i = 0, $switchtmp$i$i$i$i15$i$i$i$i = 0, $switchtmp$i$i$i$i187$i$i = 0, $switchtmp$i$i$i$i19$i$i$i$i = 0, $switchtmp$us$i$us$i$i$i = 0, $t$i$i$i$i$i = 0, $writer$i$i = 0, $writer$i$i$i = 0, $writer$val$val$i$i$i$i = 0, $x1$0$us$i$us$i$i$i = 0, dest = 0, label = 0, sp = 0, stop = 0, temp_Int32x4_ptr = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 336|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(336|0);
 $t$i$i$i$i$i = sp + 240|0;
 $pool$i$i$i$i = sp + 232|0;
 $buffer$i$i$i$i = sp + 216|0;
 $buffer4$i$i$i$i = sp + 200|0;
 $writer$i$i$i = sp + 316|0;
 $_13$i$i$i = sp + 168|0;
 $_101$i$i$i = sp + 152|0;
 $_103$i$i$i = sp + 128|0;
 $_163$i$i$i = sp + 112|0;
 $_165$i$i$i = sp + 88|0;
 $_15$sroa$17$i$i$i = sp + 332|0;
 $_15$sroa$26$i$i$i = sp + 304|0;
 $writer$i$i = sp + 300|0;
 $_21$sroa$19$i$i = sp + 329|0;
 $_21$sroa$25$i$i = sp + 288|0;
 $_44$i$i = sp + 56|0;
 $_74$sroa$14$i$i = sp + 326|0;
 $_74$sroa$21$i$i = sp + 276|0;
 $self$sroa$7$i$i = sp + 323|0;
 $self$sroa$9$i$i = sp + 264|0;
 $_10$i$i = sp + 32|0;
 $p3s$i = sp + 16|0;
 $simgeo$i = sp;
 $_39$sroa$13$i = sp + 320|0;
 $_39$sroa$21$i = sp + 252|0;
 $$idx$val = HEAP32[$0>>2]|0;
 $2 = ((($$idx$val)) + 8|0);
 $3 = HEAP32[$2>>2]|0;
 $cond$i$i$i = ($3|0)==(-1);
 if ($cond$i$i$i) {
  __THREW__ = 0;
  invoke_v(221);
  $4 = __THREW__; __THREW__ = 0;
  $5 = ___cxa_find_matching_catch_2()|0;
  $6 = tempRet0;
  $personalityslot$sroa$0$2108 = $5;$personalityslot$sroa$7$2106 = $6;
  ___resumeException($personalityslot$sroa$0$2108|0);
  // unreachable;
 }
 $7 = (($3) + 1)|0;
 HEAP32[$2>>2] = $7;
 $8 = ((($$idx$val)) + 12|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = ((($$idx$val)) + 20|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = (_malloc(2880000)|0);
 $13 = ($12|0)==(0|0);
 if ($13) {
  __THREW__ = 0;
  invoke_v(210);
  $14 = __THREW__; __THREW__ = 0;
  $15 = ___cxa_find_matching_catch_2()|0;
  $16 = tempRet0;
  $personalityslot$sroa$0$1193$i = $15;$personalityslot$sroa$8$1191$i = $16;
 } else {
  $17 = (($9) + ($11<<2)|0);
  $18 = ($11|0)==(0);
  _memset(($12|0),0,2880000)|0;
  L8: do {
   if ($18) {
    label = 23;
   } else {
    $20 = $9;
    L9: while(1) {
     $19 = ((($20)) + 4|0);
     $$idx$val$i31 = HEAP32[$20>>2]|0;
     $21 = ((($$idx$val$i31)) + 8|0);
     $22 = HEAP32[$21>>2]|0;
     $cond$i$i$i$i = ($22|0)==(-1);
     if ($cond$i$i$i$i) {
      label = 8;
      break;
     }
     $26 = ((($$idx$val$i31)) + 36|0);
     $27 = ((($$idx$val$i31)) + 40|0);
     $28 = +HEAPF32[$26>>2];
     $29 = +HEAPF32[$27>>2];
     $30 = $28 + -20.0;
     $31 = $29 + -20.0;
     $32 = $30 + -1.0;
     $33 = $31 + -1.0;
     $34 = (+Math_floor((+$32)));
     $35 = (+_fmaxf($34,0.0));
     $36 = (~~(($35))>>>0);
     $37 = (+Math_floor((+$33)));
     $38 = (+_fmaxf($37,0.0));
     $39 = (~~(($38))>>>0);
     $40 = (+_fmaxf(-21.0,0.0));
     $41 = (~~(($40))>>>0);
     $42 = $28 + 20.0;
     $43 = $29 + 20.0;
     $44 = $42 + 1.0;
     $45 = $43 + 1.0;
     $46 = (+Math_ceil((+$44)));
     $47 = (~~(($46))>>>0);
     $48 = ($47>>>0)<(600);
     $_0$0$sroa$speculated$i84$i$i = $48 ? $47 : 600;
     $49 = (+Math_ceil((+$45)));
     $50 = (~~(($49))>>>0);
     $51 = ($50>>>0)<(600);
     $_0$0$sroa$speculated$i75$i$i = $51 ? $50 : 600;
     $52 = ($36>>>0)<($_0$0$sroa$speculated$i84$i$i>>>0);
     if ($52) {
      $$not$i$i = ($39>>>0)>=($_0$0$sroa$speculated$i75$i$i>>>0);
      $$not115$i$i = ($41|0)!=(0);
      $brmerge$i$i = $$not115$i$i | $$not$i$i;
      $54 = (+($41>>>0));
      $55 = $54 * $54;
      if (!($brmerge$i$i)) {
       $$in$i$i = $36;
       while(1) {
        $56 = (($$in$i$i) + 1)|0;
        $58 = (+($$in$i$i>>>0));
        $59 = $58 - $28;
        $60 = $59 * $59;
        $61 = ($$in$i$i*600)|0;
        $$in114$i$us$i = $39;
        while(1) {
         $62 = (($$in114$i$us$i) + 1)|0;
         $63 = (+($$in114$i$us$i>>>0));
         $64 = $63 - $29;
         $65 = $64 * $64;
         $66 = $60 + $65;
         $67 = $55 + $66;
         $68 = (+Math_sqrt((+$67)));
         $69 = $68 < 20.0;
         if ($69) {
          $77 = (($$in114$i$us$i) + ($61))|0;
          $78 = (($12) + ($77<<3)|0);
          $switch2tmp$i$i34$us$i$us$i = ($78|0)==(0|0);
          if ($switch2tmp$i$i34$us$i$us$i) {
           label = 21;
           break L9;
          }
          $$val$us$i$us$i = +HEAPF64[$78>>3];
          $79 = (+_fmax($$val$us$i$us$i,1.0));
          HEAPF64[$78>>3] = $79;
         } else {
          $70 = $68 < 21.0;
          if ($70) {
           $71 = (($$in114$i$us$i) + ($61))|0;
           $72 = (($12) + ($71<<3)|0);
           $switch2tmp$i$i$us$i$us$i = ($72|0)==(0|0);
           if ($switch2tmp$i$i$us$i$us$i) {
            label = 22;
            break L9;
           }
           $73 = $68 + -20.0;
           $74 = 1.0 - $73;
           $75 = $74;
           $$val11$us$i$us$i = +HEAPF64[$72>>3];
           $76 = (+_fmax($$val11$us$i$us$i,$75));
           HEAPF64[$72>>3] = $76;
          }
         }
         $80 = ($62>>>0)<($_0$0$sroa$speculated$i75$i$i>>>0);
         if ($80) {
          $$in114$i$us$i = $62;
         } else {
          break;
         }
        }
        $57 = ($56>>>0)<($_0$0$sroa$speculated$i84$i$i>>>0);
        if ($57) {
         $$in$i$i = $56;
        } else {
         break;
        }
       }
      }
     }
     $53 = ($19|0)==($17|0);
     if ($53) {
      label = 23;
      break L8;
     } else {
      $20 = $19;
     }
    }
    if ((label|0) == 8) {
     __THREW__ = 0;
     invoke_v(221);
     $23 = __THREW__; __THREW__ = 0;
     $24 = ___cxa_find_matching_catch_2()|0;
     $25 = tempRet0;
     $personalityslot$sroa$0$1194$i = $24;$personalityslot$sroa$8$1192$i = $25;
     break;
    }
    else if ((label|0) == 21) {
     __THREW__ = 0;
     invoke_v(309);
     $81 = __THREW__; __THREW__ = 0;
     $82 = ___cxa_find_matching_catch_2()|0;
     $83 = tempRet0;
     $personalityslot$sroa$0$1194$i = $82;$personalityslot$sroa$8$1192$i = $83;
     break;
    }
    else if ((label|0) == 22) {
     __THREW__ = 0;
     invoke_v(309);
     $84 = __THREW__; __THREW__ = 0;
     $85 = ___cxa_find_matching_catch_2()|0;
     $86 = tempRet0;
     $personalityslot$sroa$0$1194$i = $85;$personalityslot$sroa$8$1192$i = $86;
     break;
    }
   }
  } while(0);
  if ((label|0) == 23) {
   HEAP32[$p3s$i>>2] = 1;
   $87 = ((($p3s$i)) + 4|0);
   HEAP32[$87>>2] = 0;
   $88 = ((($p3s$i)) + 8|0);
   HEAP32[$88>>2] = 0;
   HEAP32[$simgeo$i>>2] = 1;
   $89 = ((($simgeo$i)) + 4|0);
   HEAP32[$89>>2] = 0;
   $90 = ((($simgeo$i)) + 8|0);
   HEAP32[$90>>2] = 0;
   HEAP32[$writer$i$i>>2] = $p3s$i;
   $91 = ((($12)) + 2880000|0);
   $iter$sroa$5$0$i1035$i$i = $12;$max$0$i1036$i$i = 1.0;
   while(1) {
    $92 = ((($iter$sroa$5$0$i1035$i$i)) + 8|0);
    $switch4tmp$i$i$i = ($iter$sroa$5$0$i1035$i$i|0)==(0|0);
    if ($switch4tmp$i$i$i) {
     $_11$sroa$10$0$ph$i$i = $max$0$i1036$i$i;
     label = 30;
     break;
    }
    $$val$i$i$i = +HEAPF64[$iter$sroa$5$0$i1035$i$i>>3];
    $93 = ($$val$i$i$i != $$val$i$i$i) | (0.0 != 0.0);
    if (!($93)) {
     $notlhs$i$i$i$i$i$i = $$val$i$i$i != inf;
     $notrhs$i$i$i$i$i$i = $$val$i$i$i != -inf;
     $not$$$i$i$i$i$i$i$i = $notrhs$i$i$i$i$i$i & $notlhs$i$i$i$i$i$i;
     if ($not$$$i$i$i$i$i$i$i) {
      $94 = $$val$i$i$i >= -3.4028234663852886E+38;
      $95 = $$val$i$i$i <= 3.4028234663852886E+38;
      $or$cond$i$i$i$i = $94 & $95;
      if (!($or$cond$i$i$i$i)) {
       label = 29;
       break;
      }
     }
    }
    $96 = $$val$i$i$i;
    $97 = $96 > $max$0$i1036$i$i;
    $max$1$i$i$i = $97 ? $96 : $max$0$i1036$i$i;
    $98 = ($92|0)==($91|0);
    if ($98) {
     $_11$sroa$10$0$ph$i$i = $max$1$i$i$i;
     label = 30;
     break;
    } else {
     $iter$sroa$5$0$i1035$i$i = $92;$max$0$i1036$i$i = $max$1$i$i$i;
    }
   }
   L40: do {
    if ((label|0) == 29) {
     ;HEAP8[$_39$sroa$13$i>>0]=HEAP8[$_15$sroa$17$i$i$i>>0]|0;HEAP8[$_39$sroa$13$i+1>>0]=HEAP8[$_15$sroa$17$i$i$i+1>>0]|0;HEAP8[$_39$sroa$13$i+2>>0]=HEAP8[$_15$sroa$17$i$i$i+2>>0]|0;
     ;HEAP32[$_39$sroa$21$i>>2]=HEAP32[$_15$sroa$26$i$i$i>>2]|0;HEAP32[$_39$sroa$21$i+4>>2]=HEAP32[$_15$sroa$26$i$i$i+4>>2]|0;HEAP32[$_39$sroa$21$i+8>>2]=HEAP32[$_15$sroa$26$i$i$i+8>>2]|0;
     $_39$sroa$0$0$i = 1;$_39$sroa$17$0$i = 0;$_39$sroa$19$0$i = 0;$_39$sroa$8$0$i = 3;
     label = 127;
    }
    else if ((label|0) == 30) {
     HEAP32[$writer$i$i$i>>2] = $simgeo$i;
     __THREW__ = 0;
     invoke_viiii(310,($_13$i$i$i|0),($writer$i$i$i|0),1,0);
     $99 = __THREW__; __THREW__ = 0;
     $100 = $99&1;
     L42: do {
      if (!($100)) {
       $103 = $_13$i$i$i;
       $104 = $103;
       $105 = HEAP32[$104>>2]|0;
       $106 = (($103) + 4)|0;
       $107 = $106;
       $108 = HEAP32[$107>>2]|0;
       $109 = ($105|0)==(1);
       $110 = ($108|0)==(0);
       $111 = $109 & $110;
       do {
        if ($111) {
         $112 = ((($_13$i$i$i)) + 8|0);
         $_21$sroa$12$8$copyload$i$i = HEAP8[$112>>0]|0;
         $_21$sroa$19$8$$sroa_raw_idx$i$i = ((($_13$i$i$i)) + 9|0);
         ;HEAP8[$_21$sroa$19$i$i>>0]=HEAP8[$_21$sroa$19$8$$sroa_raw_idx$i$i>>0]|0;HEAP8[$_21$sroa$19$i$i+1>>0]=HEAP8[$_21$sroa$19$8$$sroa_raw_idx$i$i+1>>0]|0;HEAP8[$_21$sroa$19$i$i+2>>0]=HEAP8[$_21$sroa$19$8$$sroa_raw_idx$i$i+2>>0]|0;
         $_21$sroa$19734$8$$sroa_idx$i$i = ((($112)) + 4|0);
         $_21$sroa$19734$8$copyload$i$i = HEAP32[$_21$sroa$19734$8$$sroa_idx$i$i>>2]|0;
         $_21$sroa$22$8$$sroa_idx750$i$i = ((($_13$i$i$i)) + 16|0);
         $_21$sroa$22$8$copyload$i$i = HEAP32[$_21$sroa$22$8$$sroa_idx750$i$i>>2]|0;
         $_21$sroa$25$8$$sroa_raw_idx$i$i = ((($_13$i$i$i)) + 20|0);
         ;HEAP32[$_21$sroa$25$i$i>>2]=HEAP32[$_21$sroa$25$8$$sroa_raw_idx$i$i>>2]|0;HEAP32[$_21$sroa$25$i$i+4>>2]=HEAP32[$_21$sroa$25$8$$sroa_raw_idx$i$i+4>>2]|0;HEAP32[$_21$sroa$25$i$i+8>>2]=HEAP32[$_21$sroa$25$8$$sroa_raw_idx$i$i+8>>2]|0;
         $_21$sroa$12$0$i$i = $_21$sroa$12$8$copyload$i$i;$_21$sroa$19734$0$i$i = $_21$sroa$19734$8$copyload$i$i;$_21$sroa$22$0$i$i = $_21$sroa$22$8$copyload$i$i;
        } else {
         __THREW__ = 0;
         invoke_vii(311,($simgeo$i|0),4);
         $113 = __THREW__; __THREW__ = 0;
         $114 = $113&1;
         if ($114) {
          break L42;
         }
         $$idx$val$i$i$i$i$i$i$i = HEAP32[$90>>2]|0;
         $115 = (($$idx$val$i$i$i$i$i$i$i) + 4)|0;
         $116 = HEAP32[$simgeo$i>>2]|0;
         $117 = (($116) + ($$idx$val$i$i$i$i$i$i$i)|0);
         HEAP8[$117>>0]=600&255;HEAP8[$117+1>>0]=(600>>8)&255;HEAP8[$117+2>>0]=(600>>16)&255;HEAP8[$117+3>>0]=600>>24;
         HEAP32[$90>>2] = $115;
         __THREW__ = 0;
         invoke_vii(311,($simgeo$i|0),4);
         $118 = __THREW__; __THREW__ = 0;
         $119 = $118&1;
         if ($119) {
          break L42;
         }
         $$idx$val$i$i$i$i40$i$i$i = HEAP32[$90>>2]|0;
         $120 = (($$idx$val$i$i$i$i40$i$i$i) + 4)|0;
         $121 = HEAP32[$simgeo$i>>2]|0;
         $122 = (($121) + ($$idx$val$i$i$i$i40$i$i$i)|0);
         HEAP8[$122>>0]=600&255;HEAP8[$122+1>>0]=(600>>8)&255;HEAP8[$122+2>>0]=(600>>16)&255;HEAP8[$122+3>>0]=600>>24;
         HEAP32[$90>>2] = $120;
         __THREW__ = 0;
         invoke_vii(311,($simgeo$i|0),4);
         $123 = __THREW__; __THREW__ = 0;
         $124 = $123&1;
         if ($124) {
          break L42;
         }
         $$idx$val$i$i$i$i57$i$i$i = HEAP32[$90>>2]|0;
         $125 = (($$idx$val$i$i$i$i57$i$i$i) + 4)|0;
         $126 = HEAP32[$simgeo$i>>2]|0;
         $127 = (($126) + ($$idx$val$i$i$i$i57$i$i$i)|0);
         HEAP8[$127>>0]=1&255;HEAP8[$127+1>>0]=(1>>8)&255;HEAP8[$127+2>>0]=(1>>16)&255;HEAP8[$127+3>>0]=1>>24;
         HEAP32[$90>>2] = $125;
         __THREW__ = 0;
         invoke_vii(311,($simgeo$i|0),4);
         $128 = __THREW__; __THREW__ = 0;
         $129 = $128&1;
         if ($129) {
          break L42;
         }
         $$idx$val$i$i$i$i74$i$i$i = HEAP32[$90>>2]|0;
         $130 = (($$idx$val$i$i$i$i74$i$i$i) + 4)|0;
         $131 = HEAP32[$simgeo$i>>2]|0;
         $132 = (($131) + ($$idx$val$i$i$i$i74$i$i$i)|0);
         HEAP8[$132>>0]=1065353216&255;HEAP8[$132+1>>0]=(1065353216>>8)&255;HEAP8[$132+2>>0]=(1065353216>>16)&255;HEAP8[$132+3>>0]=1065353216>>24;
         HEAP32[$90>>2] = $130;
         __THREW__ = 0;
         invoke_vii(311,($simgeo$i|0),4);
         $133 = __THREW__; __THREW__ = 0;
         $134 = $133&1;
         if ($134) {
          break L42;
         }
         $$idx$val$i$i$i$i90$i$i$i = HEAP32[$90>>2]|0;
         $135 = (($$idx$val$i$i$i$i90$i$i$i) + 4)|0;
         $136 = HEAP32[$simgeo$i>>2]|0;
         $137 = (($136) + ($$idx$val$i$i$i$i90$i$i$i)|0);
         HEAP8[$137>>0]=1065353216&255;HEAP8[$137+1>>0]=(1065353216>>8)&255;HEAP8[$137+2>>0]=(1065353216>>16)&255;HEAP8[$137+3>>0]=1065353216>>24;
         HEAP32[$90>>2] = $135;
         __THREW__ = 0;
         invoke_vii(311,($simgeo$i|0),4);
         $138 = __THREW__; __THREW__ = 0;
         $139 = $138&1;
         if ($139) {
          break L42;
         }
         $$idx$val$i$i$i$i107$i$i$i = HEAP32[$90>>2]|0;
         $140 = (($$idx$val$i$i$i$i107$i$i$i) + 4)|0;
         $141 = HEAP32[$simgeo$i>>2]|0;
         $142 = (($141) + ($$idx$val$i$i$i$i107$i$i$i)|0);
         HEAP8[$142>>0]=1065353216&255;HEAP8[$142+1>>0]=(1065353216>>8)&255;HEAP8[$142+2>>0]=(1065353216>>16)&255;HEAP8[$142+3>>0]=1065353216>>24;
         HEAP32[$90>>2] = $140;
         __THREW__ = 0;
         invoke_vii(311,($simgeo$i|0),28);
         $143 = __THREW__; __THREW__ = 0;
         $144 = $143&1;
         if ($144) {
          break L42;
         }
         $$idx$val$i$i$i$i111$i$i = HEAP32[$90>>2]|0;
         $145 = (($$idx$val$i$i$i$i111$i$i) + 28)|0;
         $146 = HEAP32[$simgeo$i>>2]|0;
         $147 = (($146) + ($$idx$val$i$i$i$i111$i$i)|0);
         dest=$147; stop=dest+28|0; do { HEAP8[dest>>0]=0|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
         HEAP32[$90>>2] = $145;
         HEAP32[$_103$i$i$i>>2] = (5240);
         $148 = ((($_103$i$i$i)) + 4|0);
         HEAP32[$148>>2] = 1;
         $_6$sroa$0$0$$sroa_idx$i$i$i$i = ((($_103$i$i$i)) + 8|0);
         HEAP32[$_6$sroa$0$0$$sroa_idx$i$i$i$i>>2] = 0;
         $149 = ((($_103$i$i$i)) + 16|0);
         HEAP32[$149>>2] = 26744;
         $150 = ((($_103$i$i$i)) + 20|0);
         HEAP32[$150>>2] = 0;
         __THREW__ = 0;
         invoke_viii(312,($_101$i$i$i|0),($simgeo$i|0),($_103$i$i$i|0));
         $151 = __THREW__; __THREW__ = 0;
         $152 = $151&1;
         if ($152) {
          break L42;
         }
         $153 = HEAP32[$_101$i$i$i>>2]|0;
         $switch46$i$i$i = ($153|0)==(1);
         if ($switch46$i$i$i) {
          $$sroa_idx319 = ((($_101$i$i$i)) + 4|0);
          $154 = HEAP32[$$sroa_idx319>>2]|0;
          $$sroa_idx321 = ((($_101$i$i$i)) + 8|0);
          $155 = HEAP32[$$sroa_idx321>>2]|0;
          $_21$sroa$12$0$i$i = 0;$_21$sroa$19734$0$i$i = $154;$_21$sroa$22$0$i$i = $155;
          break;
         }
         __THREW__ = 0;
         invoke_vii(311,($simgeo$i|0),4);
         $156 = __THREW__; __THREW__ = 0;
         $157 = $156&1;
         if ($157) {
          break L42;
         }
         $$idx$val$i$i$i$i148$i$i$i = HEAP32[$90>>2]|0;
         $158 = (($$idx$val$i$i$i$i148$i$i$i) + 4)|0;
         $159 = HEAP32[$simgeo$i>>2]|0;
         $160 = (($159) + ($$idx$val$i$i$i$i148$i$i$i)|0);
         HEAP8[$160>>0]=0&255;HEAP8[$160+1>>0]=(0>>8)&255;HEAP8[$160+2>>0]=(0>>16)&255;HEAP8[$160+3>>0]=0>>24;
         HEAP32[$90>>2] = $158;
         HEAP32[$_165$i$i$i>>2] = (5248);
         $161 = ((($_165$i$i$i)) + 4|0);
         HEAP32[$161>>2] = 1;
         $_6$sroa$0$0$$sroa_idx$i163$i$i$i = ((($_165$i$i$i)) + 8|0);
         HEAP32[$_6$sroa$0$0$$sroa_idx$i163$i$i$i>>2] = 0;
         $162 = ((($_165$i$i$i)) + 16|0);
         HEAP32[$162>>2] = 26744;
         $163 = ((($_165$i$i$i)) + 20|0);
         HEAP32[$163>>2] = 0;
         __THREW__ = 0;
         invoke_viii(312,($_163$i$i$i|0),($simgeo$i|0),($_165$i$i$i|0));
         $164 = __THREW__; __THREW__ = 0;
         $165 = $164&1;
         if ($165) {
          break L42;
         }
         $166 = HEAP32[$_163$i$i$i>>2]|0;
         $switch53$i$i$i = ($166|0)==(1);
         if ($switch53$i$i$i) {
          $$sroa_idx = ((($_163$i$i$i)) + 4|0);
          $167 = HEAP32[$$sroa_idx>>2]|0;
          $$sroa_idx304 = ((($_163$i$i$i)) + 8|0);
          $168 = HEAP32[$$sroa_idx304>>2]|0;
          $_21$sroa$12$0$i$i = 0;$_21$sroa$19734$0$i$i = $167;$_21$sroa$22$0$i$i = $168;
          break;
         }
         __THREW__ = 0;
         invoke_vii(311,($simgeo$i|0),4);
         $169 = __THREW__; __THREW__ = 0;
         $170 = $169&1;
         if ($170) {
          break L42;
         }
         $$idx$val$i$i$i$i191$i$i$i = HEAP32[$90>>2]|0;
         $172 = (($$idx$val$i$i$i$i191$i$i$i) + 4)|0;
         $173 = HEAP32[$simgeo$i>>2]|0;
         $174 = (($173) + ($$idx$val$i$i$i$i191$i$i$i)|0);
         HEAP8[$174>>0]=0&255;HEAP8[$174+1>>0]=(0>>8)&255;HEAP8[$174+2>>0]=(0>>16)&255;HEAP8[$174+3>>0]=0>>24;
         HEAP32[$90>>2] = $172;
         __THREW__ = 0;
         invoke_viiii(310,($_44$i$i|0),($writer$i$i|0),4,0);
         $175 = __THREW__; __THREW__ = 0;
         $176 = $175&1;
         if ($176) {
          label = 134;
          break L40;
         }
         $177 = $_44$i$i;
         $178 = $177;
         $179 = HEAP32[$178>>2]|0;
         $180 = (($177) + 4)|0;
         $181 = $180;
         $182 = HEAP32[$181>>2]|0;
         $183 = ($179|0)==(1);
         $184 = ($182|0)==(0);
         $185 = $183 & $184;
         if ($185) {
          $186 = ((($_44$i$i)) + 8|0);
          $_39$sroa$8$8$copyload$i = HEAP8[$186>>0]|0;
          $_39$sroa$13$8$$sroa_raw_idx$i = ((($_44$i$i)) + 9|0);
          ;HEAP8[$_39$sroa$13$i>>0]=HEAP8[$_39$sroa$13$8$$sroa_raw_idx$i>>0]|0;HEAP8[$_39$sroa$13$i+1>>0]=HEAP8[$_39$sroa$13$8$$sroa_raw_idx$i+1>>0]|0;HEAP8[$_39$sroa$13$i+2>>0]=HEAP8[$_39$sroa$13$8$$sroa_raw_idx$i+2>>0]|0;
          $_39$sroa$17$8$$sroa_idx$i = ((($186)) + 4|0);
          $_39$sroa$17$8$copyload$i = HEAP32[$_39$sroa$17$8$$sroa_idx$i>>2]|0;
          $_39$sroa$19$8$$sroa_idx102$i = ((($_44$i$i)) + 16|0);
          $_39$sroa$19$8$copyload$i = HEAP32[$_39$sroa$19$8$$sroa_idx102$i>>2]|0;
          $_39$sroa$21$8$$sroa_raw_idx$i = ((($_44$i$i)) + 20|0);
          ;HEAP32[$_39$sroa$21$i>>2]=HEAP32[$_39$sroa$21$8$$sroa_raw_idx$i>>2]|0;HEAP32[$_39$sroa$21$i+4>>2]=HEAP32[$_39$sroa$21$8$$sroa_raw_idx$i+4>>2]|0;HEAP32[$_39$sroa$21$i+8>>2]=HEAP32[$_39$sroa$21$8$$sroa_raw_idx$i+8>>2]|0;
          $_39$sroa$0$0$i = 1;$_39$sroa$17$0$i = $_39$sroa$17$8$copyload$i;$_39$sroa$19$0$i = $_39$sroa$19$8$copyload$i;$_39$sroa$8$0$i = $_39$sroa$8$8$copyload$i;
          label = 127;
          break L40;
         }
         __THREW__ = 0;
         invoke_vii(311,($p3s$i|0),4);
         $187 = __THREW__; __THREW__ = 0;
         $188 = $187&1;
         if ($188) {
          label = 134;
          break L40;
         }
         $$idx$val$i$i$i$i$i$i$i$i = HEAP32[$88>>2]|0;
         $189 = (($$idx$val$i$i$i$i$i$i$i$i) + 4)|0;
         $190 = HEAP32[$p3s$i>>2]|0;
         $191 = (($190) + ($$idx$val$i$i$i$i$i$i$i$i)|0);
         HEAPF32[tempDoublePtr>>2]=0.0;HEAP8[$191>>0]=HEAP8[tempDoublePtr>>0];HEAP8[$191+1>>0]=HEAP8[tempDoublePtr+1>>0];HEAP8[$191+2>>0]=HEAP8[tempDoublePtr+2>>0];HEAP8[$191+3>>0]=HEAP8[tempDoublePtr+3>>0];
         HEAP32[$88>>2] = $189;
         __THREW__ = 0;
         invoke_vii(311,($p3s$i|0),4);
         $192 = __THREW__; __THREW__ = 0;
         $193 = $192&1;
         if ($193) {
          label = 134;
          break L40;
         }
         $$idx$val$i$i$i$i$i66$i$i$i = HEAP32[$88>>2]|0;
         $194 = (($$idx$val$i$i$i$i$i66$i$i$i) + 4)|0;
         $195 = HEAP32[$p3s$i>>2]|0;
         $196 = (($195) + ($$idx$val$i$i$i$i$i66$i$i$i)|0);
         HEAPF32[tempDoublePtr>>2]=0.0;HEAP8[$196>>0]=HEAP8[tempDoublePtr>>0];HEAP8[$196+1>>0]=HEAP8[tempDoublePtr+1>>0];HEAP8[$196+2>>0]=HEAP8[tempDoublePtr+2>>0];HEAP8[$196+3>>0]=HEAP8[tempDoublePtr+3>>0];
         HEAP32[$88>>2] = $194;
         __THREW__ = 0;
         invoke_vii(311,($p3s$i|0),24);
         $197 = __THREW__; __THREW__ = 0;
         $198 = $197&1;
         if ($198) {
          label = 134;
          break L40;
         }
         $$idx$val$i$i$i$i$i141$i$i = HEAP32[$88>>2]|0;
         $199 = (($$idx$val$i$i$i$i$i141$i$i) + 24)|0;
         $200 = HEAP32[$p3s$i>>2]|0;
         $201 = (($200) + ($$idx$val$i$i$i$i$i141$i$i)|0);
         dest=$201; stop=dest+24|0; do { HEAP8[dest>>0]=0|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
         HEAP32[$88>>2] = $199;
         __THREW__ = 0;
         invoke_vii(311,($p3s$i|0),8);
         $202 = __THREW__; __THREW__ = 0;
         $203 = $202&1;
         if ($203) {
          label = 134;
          break L40;
         }
         $$idx$val$i$i$i$i$i$i161$i$i = HEAP32[$88>>2]|0;
         $204 = (($$idx$val$i$i$i$i$i$i161$i$i) + 8)|0;
         $205 = HEAP32[$p3s$i>>2]|0;
         $206 = (($205) + ($$idx$val$i$i$i$i$i$i161$i$i)|0);
         $207 = $206;
         $208 = $207;
         HEAP8[$208>>0]=1440064&255;HEAP8[$208+1>>0]=(1440064>>8)&255;HEAP8[$208+2>>0]=(1440064>>16)&255;HEAP8[$208+3>>0]=1440064>>24;
         $209 = (($207) + 4)|0;
         $210 = $209;
         HEAP8[$210>>0]=0&255;HEAP8[$210+1>>0]=(0>>8)&255;HEAP8[$210+2>>0]=(0>>16)&255;HEAP8[$210+3>>0]=0>>24;
         HEAP32[$88>>2] = $204;
         __THREW__ = 0;
         invoke_vii(311,($p3s$i|0),8);
         $211 = __THREW__; __THREW__ = 0;
         $212 = $211&1;
         if ($212) {
          label = 134;
          break L40;
         }
         $$idx$val$i$i$i$i$i20$i$i$i = HEAP32[$88>>2]|0;
         $213 = (($$idx$val$i$i$i$i$i20$i$i$i) + 8)|0;
         $214 = HEAP32[$p3s$i>>2]|0;
         $215 = (($214) + ($$idx$val$i$i$i$i$i20$i$i$i)|0);
         $216 = $215;
         $217 = $216;
         HEAP8[$217>>0]=0&255;HEAP8[$217+1>>0]=(0>>8)&255;HEAP8[$217+2>>0]=(0>>16)&255;HEAP8[$217+3>>0]=0>>24;
         $218 = (($216) + 4)|0;
         $219 = $218;
         HEAP8[$219>>0]=0&255;HEAP8[$219+1>>0]=(0>>8)&255;HEAP8[$219+2>>0]=(0>>16)&255;HEAP8[$219+3>>0]=0>>24;
         HEAP32[$88>>2] = $213;
         __THREW__ = 0;
         invoke_vii(311,($p3s$i|0),4);
         $220 = __THREW__; __THREW__ = 0;
         $221 = $220&1;
         if ($221) {
          label = 134;
          break L40;
         }
         $$idx$val$i$i$i$i$i38$i$i$i = HEAP32[$88>>2]|0;
         $222 = (($$idx$val$i$i$i$i$i38$i$i$i) + 4)|0;
         $223 = HEAP32[$p3s$i>>2]|0;
         $224 = (($223) + ($$idx$val$i$i$i$i$i38$i$i$i)|0);
         HEAPF32[tempDoublePtr>>2]=0.0;HEAP8[$224>>0]=HEAP8[tempDoublePtr>>0];HEAP8[$224+1>>0]=HEAP8[tempDoublePtr+1>>0];HEAP8[$224+2>>0]=HEAP8[tempDoublePtr+2>>0];HEAP8[$224+3>>0]=HEAP8[tempDoublePtr+3>>0];
         HEAP32[$88>>2] = $222;
         __THREW__ = 0;
         invoke_vii(311,($p3s$i|0),12);
         $225 = __THREW__; __THREW__ = 0;
         $226 = $225&1;
         if ($226) {
          label = 134;
          break L40;
         }
         $$idx$val$i$i$i$i$i164$i$i = HEAP32[$88>>2]|0;
         $227 = (($$idx$val$i$i$i$i$i164$i$i) + 12)|0;
         $228 = HEAP32[$p3s$i>>2]|0;
         $229 = (($228) + ($$idx$val$i$i$i$i$i164$i$i)|0);
         dest=$229; stop=dest+12|0; do { HEAP8[dest>>0]=0|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
         HEAP32[$88>>2] = $227;
         $230 = (_malloc(12)|0);
         $231 = ($230|0)==(0|0);
         L75: do {
          if ($231) {
           __THREW__ = 0;
           invoke_v(210);
           $232 = __THREW__; __THREW__ = 0;
           label = 111;
          } else {
           HEAP32[$230>>2] = (1);
           $_25$sroa$4$0$$sroa_idx112$i$i$i$i$i$i$i$i$i = ((($230)) + 4|0);
           HEAP32[$_25$sroa$4$0$$sroa_idx112$i$i$i$i$i$i$i$i$i>>2] = 0;
           $_25$sroa$5$0$$sroa_idx114$i$i$i$i$i$i$i$i$i = ((($230)) + 8|0);
           HEAP32[$_25$sroa$5$0$$sroa_idx114$i$i$i$i$i$i$i$i$i>>2] = 0;
           $233 = (_malloc(36)|0);
           $234 = ($233|0)==(0|0);
           if ($234) {
            __THREW__ = 0;
            invoke_v(210);
            $235 = __THREW__; __THREW__ = 0;
            label = 111;
            break;
           }
           $238 = $230;
           HEAP32[$233>>2] = 1;
           $239 = ((($233)) + 4|0);
           HEAP32[$239>>2] = 1;
           $_10$sroa$0$0$$sroa_idx$i$i$i$i$i$i$i = ((($233)) + 8|0);
           $_10$sroa$4$0$$sroa_idx$i$i$i$i$i$i$i = ((($233)) + 12|0);
           HEAP32[$_10$sroa$4$0$$sroa_idx$i$i$i$i$i$i$i>>2] = $238;
           $_10$sroa$5$0$$sroa_idx$i$i$i$i$i$i$i = ((($233)) + 16|0);
           temp_Int32x4_ptr = $_10$sroa$5$0$$sroa_idx$i$i$i$i$i$i$i;SIMD_Int32x4_store(HEAPU8, temp_Int32x4_ptr, SIMD_Int32x4(1,1,-1,1));
           $_10$sroa$9$0$$sroa_idx$i$i$i$i$i$i$i = ((($233)) + 32|0);
           HEAP32[$_10$sroa$9$0$$sroa_idx$i$i$i$i$i$i$i>>2] = (688);
           $240 = $233;
           HEAP32[$pool$i$i$i$i>>2] = $240;
           $_6$sroa$4$0$$sroa_idx16$i$i$i$i$i = ((($buffer$i$i$i$i)) + 12|0);
           $$idx$i7$i$i$i$i = ((($buffer$i$i$i$i)) + 8|0);
           $$idx$i$i10$i$i$i$i = ((($buffer$i$i$i$i)) + 4|0);
           $241 = ((($buffer4$i$i$i$i)) + 8|0);
           HEAP32[$_10$sroa$0$0$$sroa_idx$i$i$i$i$i$i$i>>2] = -1;
           $242 = ((($233)) + 20|0);
           HEAP32[$242>>2] = 0;
           $maybe_value$sroa$0$0$copyload47$i$i$i$i$i$i = HEAP32[$230>>2]|0;
           $switchtmp$i$i$i$i187$i$i = ($maybe_value$sroa$0$0$copyload47$i$i$i$i$i$i|0)==(0|0);
           if ($switchtmp$i$i$i$i187$i$i) {
            __ZN39__LT_F_u20_as_u20_lifeguard__Supply_GT_3get17hde2ca2719c6fc1caE($t$i$i$i$i$i,(1));
           } else {
            $_13$sroa$5$0$$sroa_idx67$i$i$i$i$i$i = ((($t$i$i$i$i$i)) + 8|0);
            $_13$sroa$4$0$$sroa_idx65$i$i$i$i$i$i = ((($t$i$i$i$i$i)) + 4|0);
            $maybe_value$sroa$16$0$$sroa_idx57$i$i$i$i$i$i = ((($230)) + 8|0);
            $maybe_value$sroa$16$0$copyload58$i$i$i$i$i$i = HEAP32[$maybe_value$sroa$16$0$$sroa_idx57$i$i$i$i$i$i>>2]|0;
            $maybe_value$sroa$12$0$$sroa_idx50$i$i$i$i$i$i = ((($230)) + 4|0);
            $maybe_value$sroa$12$0$copyload51$i$i$i$i$i$i = HEAP32[$maybe_value$sroa$12$0$$sroa_idx50$i$i$i$i$i$i>>2]|0;
            HEAP32[$t$i$i$i$i$i>>2] = $maybe_value$sroa$0$0$copyload47$i$i$i$i$i$i;
            HEAP32[$_13$sroa$4$0$$sroa_idx65$i$i$i$i$i$i>>2] = $maybe_value$sroa$12$0$copyload51$i$i$i$i$i$i;
            HEAP32[$_13$sroa$5$0$$sroa_idx67$i$i$i$i$i$i>>2] = $maybe_value$sroa$16$0$copyload58$i$i$i$i$i$i;
           }
           HEAP32[$_10$sroa$0$0$$sroa_idx$i$i$i$i$i$i$i>>2] = 0;
           ;HEAP32[$buffer$i$i$i$i>>2]=HEAP32[$t$i$i$i$i$i>>2]|0;HEAP32[$buffer$i$i$i$i+4>>2]=HEAP32[$t$i$i$i$i$i+4>>2]|0;HEAP32[$buffer$i$i$i$i+8>>2]=HEAP32[$t$i$i$i$i$i+8>>2]|0;
           HEAP32[$_6$sroa$4$0$$sroa_idx16$i$i$i$i$i>>2] = $_10$sroa$0$0$$sroa_idx$i$i$i$i$i$i$i;
           $243 = HEAP32[$buffer$i$i$i$i>>2]|0;
           $switchtmp$i$i$i$i$i$i$i$i = ($243|0)==(0|0);
           L85: do {
            if ($switchtmp$i$i$i$i$i$i$i$i) {
             __THREW__ = 0;
             invoke_viii(225,(12535|0),43,(5268|0));
             $244 = __THREW__; __THREW__ = 0;
             label = 112;
            } else {
             $$idx$val$i8$i$i$i$i = HEAP32[$$idx$i7$i$i$i$i>>2]|0;
             $245 = ($$idx$val$i8$i$i$i$i>>>0)<(1440000);
             do {
              if ($245) {
               $246 = (1440000 - ($$idx$val$i8$i$i$i$i))|0;
               $$idx$val$i$i11$i$i$i$i = HEAP32[$$idx$i$i10$i$i$i$i>>2]|0;
               $247 = (($$idx$val$i$i11$i$i$i$i) - ($$idx$val$i8$i$i$i$i))|0;
               $248 = ($247>>>0)<($246>>>0);
               do {
                if ($248) {
                 $$arith = (($$idx$val$i8$i$i$i$i) + ($246))|0;
                 $$overflow = ($$arith>>>0)<($$idx$val$i8$i$i$i$i>>>0);
                 if ($$overflow) {
                  __THREW__ = 0;
                  invoke_vii(219,(11172|0),17);
                  $249 = __THREW__; __THREW__ = 0;
                  label = 112;
                  break L85;
                 }
                 $250 = $$idx$val$i$i11$i$i$i$i << 1;
                 $251 = ($$arith>>>0)>=($250>>>0);
                 $_0$0$sroa$speculated$i$i$i$i$i$i$i$i = $251 ? $$arith : $250;
                 $252 = ($_0$0$sroa$speculated$i$i$i$i$i$i$i$i|0)<(0);
                 if ($252) {
                  __THREW__ = 0;
                  invoke_vi(220,(6432|0));
                  $253 = __THREW__; __THREW__ = 0;
                  label = 112;
                  break L85;
                 }
                 $254 = ($$idx$val$i$i11$i$i$i$i|0)==(0);
                 if ($254) {
                  $255 = (_malloc($_0$0$sroa$speculated$i$i$i$i$i$i$i$i)|0);
                  $ptr$0$i$i$i$i$i66$i = $255;
                 } else {
                  $256 = (_realloc($243,$_0$0$sroa$speculated$i$i$i$i$i$i$i$i)|0);
                  $ptr$0$i$i$i$i$i66$i = $256;
                 }
                 $257 = ($ptr$0$i$i$i$i$i66$i|0)==(0|0);
                 if ($257) {
                  __THREW__ = 0;
                  invoke_v(210);
                  $258 = __THREW__; __THREW__ = 0;
                  label = 112;
                  break L85;
                 } else {
                  HEAP32[$buffer$i$i$i$i>>2] = $ptr$0$i$i$i$i$i66$i;
                  HEAP32[$$idx$i$i10$i$i$i$i>>2] = $_0$0$sroa$speculated$i$i$i$i$i$i$i$i;
                  break;
                 }
                }
               } while(0);
               $259 = ($246>>>0)>(1);
               $260 = (($246) + -1)|0;
               $261 = $259 ? $260 : 0;
               $not$$i$i$i$i$i67$i = ($246|0)!=(0);
               $262 = $not$$i$i$i$i$i67$i&1;
               $local_len$sroa$5$0$lcssa$i$i$i$i$i$i = (($261) + ($$idx$val$i8$i$i$i$i))|0;
               $local_len$sroa$5$0$$i$i$i$i$i$i = (($local_len$sroa$5$0$lcssa$i$i$i$i$i$i) + ($262))|0;
               HEAP32[$$idx$i7$i$i$i$i>>2] = $local_len$sroa$5$0$$i$i$i$i$i$i;
              } else {
               $263 = ($$idx$val$i8$i$i$i$i|0)==(1440000);
               if ($263) {
                break;
               }
               HEAP32[$$idx$i7$i$i$i$i>>2] = 1440000;
              }
             } while(0);
             ;HEAP32[$buffer4$i$i$i$i>>2]=HEAP32[$buffer$i$i$i$i>>2]|0;HEAP32[$buffer4$i$i$i$i+4>>2]=HEAP32[$buffer$i$i$i$i+4>>2]|0;HEAP32[$buffer4$i$i$i$i+8>>2]=HEAP32[$buffer$i$i$i$i+8>>2]|0;HEAP32[$buffer4$i$i$i$i+12>>2]=HEAP32[$buffer$i$i$i$i+12>>2]|0;
             $264 = HEAP32[$buffer4$i$i$i$i>>2]|0;
             $switchtmp$i$i$i$i15$i$i$i$i = ($264|0)==(0|0);
             do {
              if ($switchtmp$i$i$i$i15$i$i$i$i) {
               __THREW__ = 0;
               invoke_viii(225,(12535|0),43,(5268|0));
               $265 = __THREW__; __THREW__ = 0;
               label = 116;
              } else {
               $266 = $264;
               $267 = HEAP32[$241>>2]|0;
               $$$i$pn$i$i$i = 0;$276 = 0;$385 = 0;$386 = 0;$iter$sroa$0$0$ph$i59$i$i$i = $266;$iter$sroa$5$0$ph$i60$i$i$i = $267;
               L112: while(1) {
                $387 = $385;$388 = $386;$iter$sroa$0$0$us$i$us$i$i$i = $iter$sroa$0$0$ph$i59$i$i$i;$iter$sroa$5$0$us$i$us$i$i$i = $iter$sroa$5$0$ph$i60$i$i$i;$x1$0$us$i$us$i$i$i = 0;
                while(1) {
                 $268 = ($iter$sroa$5$0$us$i$us$i$i$i|0)==(0);
                 if ($268) {
                  $323 = $387;$325 = $388;
                  break L112;
                 }
                 $269 = ($iter$sroa$5$0$us$i$us$i$i$i>>>0)>(4);
                 $_0$0$sroa$speculated$i$i$us$i$us$i$i$i = $269 ? 4 : $iter$sroa$5$0$us$i$us$i$i$i;
                 $270 = $iter$sroa$0$0$us$i$us$i$i$i;
                 $271 = (($270) + ($_0$0$sroa$speculated$i$i$us$i$us$i$i$i)|0);
                 $272 = (($iter$sroa$5$0$us$i$us$i$i$i) - ($_0$0$sroa$speculated$i$i$us$i$us$i$i$i))|0;
                 $273 = $271;
                 $switchtmp$us$i$us$i$i$i = ($iter$sroa$0$0$us$i$us$i$i$i|0)==(0);
                 if ($switchtmp$us$i$us$i$i$i) {
                  $323 = $387;$325 = $388;
                  break L112;
                 }
                 $274 = ($x1$0$us$i$us$i$i$i*600)|0;
                 $275 = (($274) + ($276))|0;
                 $277 = (($12) + ($275<<3)|0);
                 $switch2tmp$i$i$us$i$us$i$i$i = ($277|0)==(0|0);
                 if ($switch2tmp$i$i$us$i$us$i$i$i) {
                  label = 103;
                  break L112;
                 }
                 $$val$us$i$us$i$i$i = +HEAPF64[$277>>3];
                 $278 = ($$val$us$i$us$i$i$i != $$val$us$i$us$i$i$i) | (0.0 != 0.0);
                 do {
                  if ($278) {
                   label = 97;
                  } else {
                   $notlhs$i$i$i$i$us$i$us$i$i$i = $$val$us$i$us$i$i$i != inf;
                   $notrhs$i$i$i$i$us$i$us$i$i$i = $$val$us$i$us$i$i$i != -inf;
                   $not$$$i$i$i$i$i$us$i$us$i$i$i = $notrhs$i$i$i$i$us$i$us$i$i$i & $notlhs$i$i$i$i$us$i$us$i$i$i;
                   if (!($not$$$i$i$i$i$i$us$i$us$i$i$i)) {
                    label = 97;
                    break;
                   }
                   $279 = $$val$us$i$us$i$i$i >= -3.4028234663852886E+38;
                   $280 = $$val$us$i$us$i$i$i <= 3.4028234663852886E+38;
                   $or$cond$i$i$us$i$us$i$i$i = $279 & $280;
                   if ($or$cond$i$i$us$i$us$i$i$i) {
                    label = 97;
                    break;
                   }
                   ;HEAP8[$_15$sroa$17$i$i$i>>0]=HEAP8[$self$sroa$7$i$i>>0]|0;HEAP8[$_15$sroa$17$i$i$i+1>>0]=HEAP8[$self$sroa$7$i$i+1>>0]|0;HEAP8[$_15$sroa$17$i$i$i+2>>0]=HEAP8[$self$sroa$7$i$i+2>>0]|0;
                   ;HEAP32[$_15$sroa$26$i$i$i>>2]=HEAP32[$self$sroa$9$i$i>>2]|0;HEAP32[$_15$sroa$26$i$i$i+4>>2]=HEAP32[$self$sroa$9$i$i+4>>2]|0;HEAP32[$_15$sroa$26$i$i$i+8>>2]=HEAP32[$self$sroa$9$i$i+8>>2]|0;
                   $389 = 1;$390 = 0;
                  }
                 } while(0);
                 if ((label|0) == 97) {
                  label = 0;
                  $281 = ($_0$0$sroa$speculated$i$i$us$i$us$i$i$i>>>0)<(4);
                  if ($281) {
                   label = 104;
                   break L112;
                  }
                  $282 = $$val$us$i$us$i$i$i;
                  $283 = $iter$sroa$0$0$us$i$us$i$i$i;
                  HEAPF32[tempDoublePtr>>2]=$282;HEAP8[$283>>0]=HEAP8[tempDoublePtr>>0];HEAP8[$283+1>>0]=HEAP8[tempDoublePtr+1>>0];HEAP8[$283+2>>0]=HEAP8[tempDoublePtr+2>>0];HEAP8[$283+3>>0]=HEAP8[tempDoublePtr+3>>0];
                  $389 = $387;$390 = $388;
                 }
                 $284 = (($x1$0$us$i$us$i$i$i) + 1)|0;
                 $285 = ($284>>>0)<(600);
                 if ($285) {
                  $387 = $389;$388 = $390;$iter$sroa$0$0$us$i$us$i$i$i = $273;$iter$sroa$5$0$us$i$us$i$i$i = $272;$x1$0$us$i$us$i$i$i = $284;
                 } else {
                  break;
                 }
                }
                $291 = (($$$i$pn$i$i$i) + 1)|0;
                $292 = ($291>>>0)<(600);
                $293 = $292&1;
                $294 = $293 ^ 1;
                $$$i$i$i$i = $292 ? $291 : 0;
                $295 = (($294) + ($$$i$i$i$i))|0;
                if ($292) {
                 $$$i$pn$i$i$i = $291;$276 = $295;$385 = $389;$386 = $390;$iter$sroa$0$0$ph$i59$i$i$i = $273;$iter$sroa$5$0$ph$i60$i$i$i = $272;
                } else {
                 label = 100;
                 break;
                }
               }
               if ((label|0) == 100) {
                $286 = ($272|0)==(0);
                $switchtmp$i$i$i$i = ($271|0)==(0|0);
                $or$cond$i$i188$i$i = $switchtmp$i$i$i$i | $286;
                if ($or$cond$i$i188$i$i) {
                 $323 = $389;$325 = $390;
                } else {
                 label = 103;
                }
               }
               else if ((label|0) == 104) {
                __THREW__ = 0;
                invoke_viii(225,(11763|0),32,(5280|0));
                $290 = __THREW__; __THREW__ = 0;
                label = 116;
                break;
               }
               if ((label|0) == 103) {
                __THREW__ = 0;
                invoke_v(309);
                $289 = __THREW__; __THREW__ = 0;
                label = 116;
                break;
               }
               $287 = HEAP32[$buffer4$i$i$i$i>>2]|0;
               $switchtmp$i$i$i$i19$i$i$i$i = ($287|0)==(0|0);
               if ($switchtmp$i$i$i$i19$i$i$i$i) {
                __THREW__ = 0;
                invoke_viii(225,(12535|0),43,(5256|0));
                $288 = __THREW__; __THREW__ = 0;
                label = 116;
                break;
               }
               $296 = HEAP32[$241>>2]|0;
               $writer$val$val$i$i$i$i = HEAP32[$writer$i$i>>2]|0;
               __THREW__ = 0;
               invoke_vii(311,($writer$val$val$i$i$i$i|0),($296|0));
               $297 = __THREW__; __THREW__ = 0;
               $298 = $297&1;
               if ($298) {
                $317 = ___cxa_find_matching_catch_2()|0;
                $318 = tempRet0;
                $lpad$phi$i$i$i$i$index = $317;$lpad$phi$i$i$i$i$index2 = $318;
                break;
               }
               $$idx$i$i$i$i$i$i189$i$i = ((($writer$val$val$i$i$i$i)) + 8|0);
               $$idx$val$i$i$i$i$i$i190$i$i = HEAP32[$$idx$i$i$i$i$i$i189$i$i>>2]|0;
               $299 = ($296|0)==(0);
               if ($299) {
                $local_len$sroa$5$0$lcssa$i$i$i$i$i$i$i$i = $$idx$val$i$i$i$i$i$i190$i$i;
               } else {
                $300 = (($$idx$val$i$i$i$i$i$i190$i$i) + ($296))|0;
                $301 = HEAP32[$writer$val$val$i$i$i$i>>2]|0;
                $302 = (($301) + ($$idx$val$i$i$i$i$i$i190$i$i)|0);
                _memcpy(($302|0),($287|0),($296|0))|0;
                $local_len$sroa$5$0$lcssa$i$i$i$i$i$i$i$i = $300;
               }
               HEAP32[$$idx$i$i$i$i$i$i189$i$i>>2] = $local_len$sroa$5$0$lcssa$i$i$i$i$i$i$i$i;
               __THREW__ = 0;
               invoke_vi(314,($buffer4$i$i$i$i|0));
               $303 = __THREW__; __THREW__ = 0;
               $304 = $303&1;
               if ($304) {
                $313 = ___cxa_find_matching_catch_2()|0;
                $314 = tempRet0;
                $personalityslot$sroa$0$6347$i$i$i$i = $313;$personalityslot$sroa$12$6346$i$i$i$i = $314;
                break L85;
               }
               ;HEAP8[$_74$sroa$14$i$i>>0]=HEAP8[$_15$sroa$17$i$i$i>>0]|0;HEAP8[$_74$sroa$14$i$i+1>>0]=HEAP8[$_15$sroa$17$i$i$i+1>>0]|0;HEAP8[$_74$sroa$14$i$i+2>>0]=HEAP8[$_15$sroa$17$i$i$i+2>>0]|0;
               ;HEAP32[$_74$sroa$21$i$i>>2]=HEAP32[$_15$sroa$26$i$i$i>>2]|0;HEAP32[$_74$sroa$21$i$i+4>>2]=HEAP32[$_15$sroa$26$i$i$i+4>>2]|0;HEAP32[$_74$sroa$21$i$i+8>>2]=HEAP32[$_15$sroa$26$i$i$i+8>>2]|0;
               __THREW__ = 0;
               invoke_vi(313,($pool$i$i$i$i|0));
               $236 = __THREW__; __THREW__ = 0;
               $237 = $236&1;
               if ($237) {
                $315 = ___cxa_find_matching_catch_2()|0;
                $316 = tempRet0;
                $personalityslot$sroa$0$0$i$i$i$i = $315;$personalityslot$sroa$12$0$i$i$i$i = $316;
                break L75;
               }
               $324 = ($323|0)==(1);
               $326 = ($325|0)==(0);
               $327 = $324 & $326;
               if ($327) {
                ;HEAP8[$_39$sroa$13$i>>0]=HEAP8[$_74$sroa$14$i$i>>0]|0;HEAP8[$_39$sroa$13$i+1>>0]=HEAP8[$_74$sroa$14$i$i+1>>0]|0;HEAP8[$_39$sroa$13$i+2>>0]=HEAP8[$_74$sroa$14$i$i+2>>0]|0;
                ;HEAP32[$_39$sroa$21$i>>2]=HEAP32[$_74$sroa$21$i$i>>2]|0;HEAP32[$_39$sroa$21$i+4>>2]=HEAP32[$_74$sroa$21$i$i+4>>2]|0;HEAP32[$_39$sroa$21$i+8>>2]=HEAP32[$_74$sroa$21$i$i+8>>2]|0;
                $_39$sroa$0$0$i = 1;$_39$sroa$17$0$i = 0;$_39$sroa$19$0$i = 0;$_39$sroa$8$0$i = 3;
                label = 127;
                break L40;
               }
               __THREW__ = 0;
               invoke_vii(311,($writer$val$val$i$i$i$i|0),4);
               $328 = __THREW__; __THREW__ = 0;
               $329 = $328&1;
               if ($329) {
                label = 134;
                break L40;
               }
               $$idx$val$i$i$i$i$i$i214$i$i = HEAP32[$$idx$i$i$i$i$i$i189$i$i>>2]|0;
               $330 = (($$idx$val$i$i$i$i$i$i214$i$i) + 4)|0;
               $331 = HEAP32[$writer$val$val$i$i$i$i>>2]|0;
               $332 = (($331) + ($$idx$val$i$i$i$i$i$i214$i$i)|0);
               HEAPF32[tempDoublePtr>>2]=0.0;HEAP8[$332>>0]=HEAP8[tempDoublePtr>>0];HEAP8[$332+1>>0]=HEAP8[tempDoublePtr+1>>0];HEAP8[$332+2>>0]=HEAP8[tempDoublePtr+2>>0];HEAP8[$332+3>>0]=HEAP8[tempDoublePtr+3>>0];
               HEAP32[$$idx$i$i$i$i$i$i189$i$i>>2] = $330;
               __THREW__ = 0;
               invoke_vii(311,($writer$val$val$i$i$i$i|0),4);
               $333 = __THREW__; __THREW__ = 0;
               $334 = $333&1;
               if ($334) {
                label = 134;
                break L40;
               }
               $$idx$val$i$i$i$i$i10$i$i$i = HEAP32[$$idx$i$i$i$i$i$i189$i$i>>2]|0;
               $335 = (($$idx$val$i$i$i$i$i10$i$i$i) + 4)|0;
               $336 = HEAP32[$writer$val$val$i$i$i$i>>2]|0;
               $337 = (($336) + ($$idx$val$i$i$i$i$i10$i$i$i)|0);
               HEAPF32[tempDoublePtr>>2]=$_11$sroa$10$0$ph$i$i;HEAP8[$337>>0]=HEAP8[tempDoublePtr>>0];HEAP8[$337+1>>0]=HEAP8[tempDoublePtr+1>>0];HEAP8[$337+2>>0]=HEAP8[tempDoublePtr+2>>0];HEAP8[$337+3>>0]=HEAP8[tempDoublePtr+3>>0];
               HEAP32[$$idx$i$i$i$i$i$i189$i$i>>2] = $335;
               __THREW__ = 0;
               invoke_vii(311,($writer$val$val$i$i$i$i|0),4);
               $338 = __THREW__; __THREW__ = 0;
               $339 = $338&1;
               if ($339) {
                label = 134;
                break L40;
               }
               $$idx$val$i$i$i$i$i28$i$i$i = HEAP32[$$idx$i$i$i$i$i$i189$i$i>>2]|0;
               $340 = (($$idx$val$i$i$i$i$i28$i$i$i) + 4)|0;
               $341 = HEAP32[$writer$val$val$i$i$i$i>>2]|0;
               $342 = (($341) + ($$idx$val$i$i$i$i$i28$i$i$i)|0);
               HEAPF32[tempDoublePtr>>2]=0.0;HEAP8[$342>>0]=HEAP8[tempDoublePtr>>0];HEAP8[$342+1>>0]=HEAP8[tempDoublePtr+1>>0];HEAP8[$342+2>>0]=HEAP8[tempDoublePtr+2>>0];HEAP8[$342+3>>0]=HEAP8[tempDoublePtr+3>>0];
               HEAP32[$$idx$i$i$i$i$i$i189$i$i>>2] = $340;
               __THREW__ = 0;
               invoke_vii(311,($writer$val$val$i$i$i$i|0),4);
               $343 = __THREW__; __THREW__ = 0;
               $344 = $343&1;
               if ($344) {
                label = 134;
                break L40;
               }
               $$idx$val$i$i$i$i$i46$i$i$i = HEAP32[$$idx$i$i$i$i$i$i189$i$i>>2]|0;
               $345 = (($$idx$val$i$i$i$i$i46$i$i$i) + 4)|0;
               $346 = HEAP32[$writer$val$val$i$i$i$i>>2]|0;
               $347 = (($346) + ($$idx$val$i$i$i$i$i46$i$i$i)|0);
               HEAPF32[tempDoublePtr>>2]=$_11$sroa$10$0$ph$i$i;HEAP8[$347>>0]=HEAP8[tempDoublePtr>>0];HEAP8[$347+1>>0]=HEAP8[tempDoublePtr+1>>0];HEAP8[$347+2>>0]=HEAP8[tempDoublePtr+2>>0];HEAP8[$347+3>>0]=HEAP8[tempDoublePtr+3>>0];
               HEAP32[$$idx$i$i$i$i$i$i189$i$i>>2] = $345;
               __THREW__ = 0;
               invoke_vii(311,($writer$val$val$i$i$i$i|0),8);
               $348 = __THREW__; __THREW__ = 0;
               $349 = $348&1;
               if ($349) {
                label = 134;
                break L40;
               }
               $$idx$val$i$i$i$i$i217$i$i = HEAP32[$$idx$i$i$i$i$i$i189$i$i>>2]|0;
               $350 = (($$idx$val$i$i$i$i$i217$i$i) + 8)|0;
               $351 = HEAP32[$writer$val$val$i$i$i$i>>2]|0;
               $352 = (($351) + ($$idx$val$i$i$i$i$i217$i$i)|0);
               $353 = $352;
               $354 = $353;
               HEAP8[$354>>0]=0&255;HEAP8[$354+1>>0]=(0>>8)&255;HEAP8[$354+2>>0]=(0>>16)&255;HEAP8[$354+3>>0]=0>>24;
               $355 = (($353) + 4)|0;
               $356 = $355;
               HEAP8[$356>>0]=0&255;HEAP8[$356+1>>0]=(0>>8)&255;HEAP8[$356+2>>0]=(0>>16)&255;HEAP8[$356+3>>0]=0>>24;
               HEAP32[$$idx$i$i$i$i$i$i189$i$i>>2] = $350;
               __THREW__ = 0;
               invoke_vii(311,($writer$val$val$i$i$i$i|0),8);
               $357 = __THREW__; __THREW__ = 0;
               $358 = $357&1;
               if ($358) {
                label = 134;
                break L40;
               }
               $$idx$val$i$i$i$i$i76$i$i$i = HEAP32[$$idx$i$i$i$i$i$i189$i$i>>2]|0;
               $359 = (($$idx$val$i$i$i$i$i76$i$i$i) + 8)|0;
               $360 = HEAP32[$writer$val$val$i$i$i$i>>2]|0;
               $361 = (($360) + ($$idx$val$i$i$i$i$i76$i$i$i)|0);
               $362 = $361;
               $363 = $362;
               HEAP8[$363>>0]=1440064&255;HEAP8[$363+1>>0]=(1440064>>8)&255;HEAP8[$363+2>>0]=(1440064>>16)&255;HEAP8[$363+3>>0]=1440064>>24;
               $364 = (($362) + 4)|0;
               $365 = $364;
               HEAP8[$365>>0]=0&255;HEAP8[$365+1>>0]=(0>>8)&255;HEAP8[$365+2>>0]=(0>>16)&255;HEAP8[$365+3>>0]=0>>24;
               HEAP32[$$idx$i$i$i$i$i$i189$i$i>>2] = $359;
               $_39$sroa$0$0$i = 0;$_39$sroa$17$0$i = 0;$_39$sroa$19$0$i = 0;$_39$sroa$8$0$i = 0;
               label = 127;
               break L40;
              }
             } while(0);
             if ((label|0) == 116) {
              $319 = ___cxa_find_matching_catch_2()|0;
              $320 = tempRet0;
              $lpad$phi$i$i$i$i$index = $319;$lpad$phi$i$i$i$i$index2 = $320;
             }
             __THREW__ = 0;
             invoke_vi(314,($buffer4$i$i$i$i|0));
             $321 = __THREW__; __THREW__ = 0;
             $322 = $321&1;
             if ($322) {
              label = 134;
              break L40;
             } else {
              $personalityslot$sroa$0$6347$i$i$i$i = $lpad$phi$i$i$i$i$index;$personalityslot$sroa$12$6346$i$i$i$i = $lpad$phi$i$i$i$i$index2;
             }
            }
           } while(0);
           if ((label|0) == 112) {
            $309 = ___cxa_find_matching_catch_2()|0;
            $310 = tempRet0;
            __THREW__ = 0;
            invoke_vi(314,($buffer$i$i$i$i|0));
            $311 = __THREW__; __THREW__ = 0;
            $312 = $311&1;
            if ($312) {
             label = 134;
             break L40;
            } else {
             $personalityslot$sroa$0$6347$i$i$i$i = $309;$personalityslot$sroa$12$6346$i$i$i$i = $310;
            }
           }
           __THREW__ = 0;
           invoke_vi(313,($pool$i$i$i$i|0));
           $305 = __THREW__; __THREW__ = 0;
           $306 = $305&1;
           if ($306) {
            label = 134;
            break L40;
           } else {
            $personalityslot$sroa$0$0$i$i$i$i = $personalityslot$sroa$0$6347$i$i$i$i;$personalityslot$sroa$12$0$i$i$i$i = $personalityslot$sroa$12$6346$i$i$i$i;
           }
          }
         } while(0);
         if ((label|0) == 111) {
          $307 = ___cxa_find_matching_catch_2()|0;
          $308 = tempRet0;
          $personalityslot$sroa$0$0$i$i$i$i = $307;$personalityslot$sroa$12$0$i$i$i$i = $308;
         }
         $eh$lpad$body68$i$index8Z2D = $personalityslot$sroa$12$0$i$i$i$i;$eh$lpad$body68$i$indexZ2D = $personalityslot$sroa$0$0$i$i$i$i;
         break L40;
        }
       } while(0);
       ;HEAP8[$_39$sroa$13$i>>0]=HEAP8[$_21$sroa$19$i$i>>0]|0;HEAP8[$_39$sroa$13$i+1>>0]=HEAP8[$_21$sroa$19$i$i+1>>0]|0;HEAP8[$_39$sroa$13$i+2>>0]=HEAP8[$_21$sroa$19$i$i+2>>0]|0;
       $171 = $_21$sroa$22$0$i$i;
       ;HEAP32[$_39$sroa$21$i>>2]=HEAP32[$_21$sroa$25$i$i>>2]|0;HEAP32[$_39$sroa$21$i+4>>2]=HEAP32[$_21$sroa$25$i$i+4>>2]|0;HEAP32[$_39$sroa$21$i+8>>2]=HEAP32[$_21$sroa$25$i$i+8>>2]|0;
       $_39$sroa$0$0$i = 1;$_39$sroa$17$0$i = $_21$sroa$19734$0$i$i;$_39$sroa$19$0$i = $171;$_39$sroa$8$0$i = $_21$sroa$12$0$i$i;
       label = 127;
       break L40;
      }
     } while(0);
     $101 = ___cxa_find_matching_catch_2()|0;
     $102 = tempRet0;
     $eh$lpad$body68$i$index8Z2D = $102;$eh$lpad$body68$i$indexZ2D = $101;
    }
   } while(0);
   do {
    if ((label|0) == 127) {
     ;HEAP8[$self$sroa$7$i$i>>0]=HEAP8[$_39$sroa$13$i>>0]|0;HEAP8[$self$sroa$7$i$i+1>>0]=HEAP8[$_39$sroa$13$i+1>>0]|0;HEAP8[$self$sroa$7$i$i+2>>0]=HEAP8[$_39$sroa$13$i+2>>0]|0;
     ;HEAP32[$self$sroa$9$i$i>>2]=HEAP32[$_39$sroa$21$i>>2]|0;HEAP32[$self$sroa$9$i$i+4>>2]=HEAP32[$_39$sroa$21$i+4>>2]|0;HEAP32[$self$sroa$9$i$i+8>>2]=HEAP32[$_39$sroa$21$i+8>>2]|0;
     if ($_39$sroa$0$0$i) {
      HEAP8[$_10$i$i>>0] = $_39$sroa$8$0$i;
      $e$sroa$4$0$$sroa_idx$i$i = ((($_10$i$i)) + 1|0);
      ;HEAP8[$e$sroa$4$0$$sroa_idx$i$i>>0]=HEAP8[$self$sroa$7$i$i>>0]|0;HEAP8[$e$sroa$4$0$$sroa_idx$i$i+1>>0]=HEAP8[$self$sroa$7$i$i+1>>0]|0;HEAP8[$e$sroa$4$0$$sroa_idx$i$i+2>>0]=HEAP8[$self$sroa$7$i$i+2>>0]|0;
      $e$sroa$5$0$$sroa_idx$i$i = ((($_10$i$i)) + 4|0);
      HEAP32[$e$sroa$5$0$$sroa_idx$i$i>>2] = $_39$sroa$17$0$i;
      $e$sroa$6$0$$sroa_idx$i$i = ((($_10$i$i)) + 8|0);
      HEAP32[$e$sroa$6$0$$sroa_idx$i$i>>2] = $_39$sroa$19$0$i;
      $e$sroa$7$0$$sroa_raw_idx$i$i = ((($_10$i$i)) + 12|0);
      ;HEAP32[$e$sroa$7$0$$sroa_raw_idx$i$i>>2]=HEAP32[$self$sroa$9$i$i>>2]|0;HEAP32[$e$sroa$7$0$$sroa_raw_idx$i$i+4>>2]=HEAP32[$self$sroa$9$i$i+4>>2]|0;HEAP32[$e$sroa$7$0$$sroa_raw_idx$i$i+8>>2]=HEAP32[$self$sroa$9$i$i+8>>2]|0;
      __THREW__ = 0;
      invoke_vi(315,($_10$i$i|0));
      $366 = __THREW__; __THREW__ = 0;
      label = 134;
      break;
     }
     $_5$sroa$0$sroa$0$0$copyload = HEAP32[$p3s$i>>2]|0;
     $_5$sroa$0$sroa$4$0$copyload = HEAP32[$87>>2]|0;
     $_5$sroa$0$sroa$5$0$copyload = HEAP32[$88>>2]|0;
     $_5$sroa$4$12$copyload = HEAP32[$simgeo$i>>2]|0;
     $_5$sroa$6$12$copyload = HEAP32[$89>>2]|0;
     $_5$sroa$7$12$copyload = HEAP32[$90>>2]|0;
     _free($12);
     $373 = HEAP32[$2>>2]|0;
     $374 = (($373) + -1)|0;
     HEAP32[$2>>2] = $374;
     $$idx23 = ((($0)) + 4|0);
     $$idx23$val = HEAP32[$$idx23>>2]|0;
     $375 = ((($$idx23$val)) + 8|0);
     __THREW__ = 0;
     invoke_viiiii(316,($375|0),(12888|0),14,($_5$sroa$4$12$copyload|0),($_5$sroa$7$12$copyload|0));
     $376 = __THREW__; __THREW__ = 0;
     $377 = $376&1;
     if (!($377)) {
      $$idx22$val = HEAP32[$$idx23>>2]|0;
      $378 = ((($$idx22$val)) + 8|0);
      __THREW__ = 0;
      invoke_viiiii(316,($378|0),(12902|0),18,($_5$sroa$0$sroa$0$0$copyload|0),($_5$sroa$0$sroa$5$0$copyload|0));
      $379 = __THREW__; __THREW__ = 0;
      $380 = $379&1;
      if (!($380)) {
       $not$$i$i$i$i36 = ($_5$sroa$6$12$copyload|0)==(0);
       if (!($not$$i$i$i$i36)) {
        _free($_5$sroa$4$12$copyload);
       }
       $not$$i$i$i$i27 = ($_5$sroa$0$sroa$4$0$copyload|0)==(0);
       if ($not$$i$i$i$i27) {
        STACKTOP = sp;return;
       }
       _free($_5$sroa$0$sroa$0$0$copyload);
       STACKTOP = sp;return;
      }
     }
     $381 = ___cxa_find_matching_catch_2()|0;
     $382 = tempRet0;
     $not$$i$i$i$i = ($_5$sroa$6$12$copyload|0)==(0);
     if (!($not$$i$i$i$i)) {
      _free($_5$sroa$4$12$copyload);
     }
     $not$$i$i$i$i24 = ($_5$sroa$0$sroa$4$0$copyload|0)==(0);
     if ($not$$i$i$i$i24) {
      $personalityslot$sroa$0$2108 = $381;$personalityslot$sroa$7$2106 = $382;
      ___resumeException($personalityslot$sroa$0$2108|0);
      // unreachable;
     }
     _free($_5$sroa$0$sroa$0$0$copyload);
     $personalityslot$sroa$0$2108 = $381;$personalityslot$sroa$7$2106 = $382;
     ___resumeException($personalityslot$sroa$0$2108|0);
     // unreachable;
    }
   } while(0);
   if ((label|0) == 134) {
    $371 = ___cxa_find_matching_catch_2()|0;
    $372 = tempRet0;
    $eh$lpad$body68$i$index8Z2D = $372;$eh$lpad$body68$i$indexZ2D = $371;
   }
   $369 = HEAP32[$89>>2]|0;
   $not$$i$i$i$i$i = ($369|0)==(0);
   if (!($not$$i$i$i$i$i)) {
    $370 = HEAP32[$simgeo$i>>2]|0;
    _free($370);
   }
   $367 = HEAP32[$87>>2]|0;
   $not$$i$i$i$i38$i = ($367|0)==(0);
   if ($not$$i$i$i$i38$i) {
    $personalityslot$sroa$0$1194$i = $eh$lpad$body68$i$indexZ2D;$personalityslot$sroa$8$1192$i = $eh$lpad$body68$i$index8Z2D;
   } else {
    $368 = HEAP32[$p3s$i>>2]|0;
    _free($368);
    $personalityslot$sroa$0$1194$i = $eh$lpad$body68$i$indexZ2D;$personalityslot$sroa$8$1192$i = $eh$lpad$body68$i$index8Z2D;
   }
  }
  _free($12);
  $personalityslot$sroa$0$1193$i = $personalityslot$sroa$0$1194$i;$personalityslot$sroa$8$1191$i = $personalityslot$sroa$8$1192$i;
 }
 $383 = HEAP32[$2>>2]|0;
 $384 = (($383) + -1)|0;
 HEAP32[$2>>2] = $384;
 $personalityslot$sroa$0$2108 = $personalityslot$sroa$0$1193$i;$personalityslot$sroa$7$2106 = $personalityslot$sroa$8$1191$i;
 ___resumeException($personalityslot$sroa$0$2108|0);
 // unreachable;
}
function __ZN4core3ops6FnOnce9call_once17h3929904ffbef0c3cE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$idx$i = 0, $$idx$val$i = 0, $$idx15$i = 0, $$idx15$val$i = 0, $$idx3$val$i$i$i7 = 0, $$pre = 0, $$pre$phiZ2D = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, $cond$i$i$i$i = 0, $cond$i$i$i20$i = 0, $eh$lpad$body$index2Z2D = 0, $eh$lpad$body$indexZ2D = 0, $personalityslot$sroa$0$1$i = 0, $personalityslot$sroa$6$1$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $$idx$i = ((($0)) + 8|0);
 $$idx$val$i = HEAP32[$$idx$i>>2]|0;
 $2 = ((($$idx$val$i)) + 8|0);
 $3 = HEAP32[$2>>2]|0;
 $cond$i$i$i$i = ($3|0)==(0);
 if ($cond$i$i$i$i) {
  HEAP32[$2>>2] = -1;
  $$idx15$i = ((($0)) + 12|0);
  $$idx15$val$i = HEAP32[$$idx15$i>>2]|0;
  $7 = ((($$idx15$val$i)) + 8|0);
  $8 = HEAP32[$7>>2]|0;
  $cond$i$i$i20$i = ($8|0)==(0);
  do {
   if ($cond$i$i$i20$i) {
    $12 = ((($$idx$val$i)) + 12|0);
    HEAP32[$7>>2] = -1;
    $13 = ((($$idx15$val$i)) + 16|0);
    __THREW__ = 0;
    invoke_viiidd(213,($0|0),($12|0),($13|0),300.0,550.0);
    $14 = __THREW__; __THREW__ = 0;
    $15 = $14&1;
    if ($15) {
     $16 = ___cxa_find_matching_catch_2()|0;
     $17 = tempRet0;
     HEAP32[$7>>2] = 0;
     $personalityslot$sroa$0$1$i = $16;$personalityslot$sroa$6$1$i = $17;
     break;
    }
    HEAP32[$7>>2] = 0;
    HEAP32[$2>>2] = 0;
    $18 = ((($0)) + 8|0);
    __ZN4drop17hab695909c806641cE($18);
    $19 = HEAP32[$$idx15$val$i>>2]|0;
    $20 = (($19) + -1)|0;
    HEAP32[$$idx15$val$i>>2] = $20;
    $21 = ($20|0)==(0);
    if (!($21)) {
     return;
    }
    __ZN4drop17h2f30a22cc85f591fE($13);
    $22 = ((($$idx15$val$i)) + 4|0);
    $23 = HEAP32[$22>>2]|0;
    $24 = (($23) + -1)|0;
    HEAP32[$22>>2] = $24;
    $25 = ($24|0)==(0);
    if (!($25)) {
     return;
    }
    _free($$idx15$val$i);
    return;
   } else {
    __THREW__ = 0;
    invoke_v(212);
    $9 = __THREW__; __THREW__ = 0;
    $10 = ___cxa_find_matching_catch_2()|0;
    $11 = tempRet0;
    $personalityslot$sroa$0$1$i = $10;$personalityslot$sroa$6$1$i = $11;
   }
  } while(0);
  HEAP32[$2>>2] = 0;
  $$pre$phiZ2D = $$idx15$i;$eh$lpad$body$index2Z2D = $personalityslot$sroa$6$1$i;$eh$lpad$body$indexZ2D = $personalityslot$sroa$0$1$i;
 } else {
  __THREW__ = 0;
  invoke_v(212);
  $4 = __THREW__; __THREW__ = 0;
  $5 = ___cxa_find_matching_catch_2()|0;
  $6 = tempRet0;
  $$pre = ((($0)) + 12|0);
  $$pre$phiZ2D = $$pre;$eh$lpad$body$index2Z2D = $6;$eh$lpad$body$indexZ2D = $5;
 }
 $26 = ((($0)) + 8|0);
 __ZN4drop17hab695909c806641cE($26);
 $27 = HEAP32[$$pre$phiZ2D>>2]|0;
 $28 = HEAP32[$27>>2]|0;
 $29 = (($28) + -1)|0;
 HEAP32[$27>>2] = $29;
 $30 = ($29|0)==(0);
 if (!($30)) {
  ___resumeException($eh$lpad$body$indexZ2D|0);
  // unreachable;
 }
 $31 = ((($27)) + 16|0);
 __ZN4drop17h2f30a22cc85f591fE($31);
 $$idx3$val$i$i$i7 = HEAP32[$$pre$phiZ2D>>2]|0;
 $32 = ((($$idx3$val$i$i$i7)) + 4|0);
 $33 = HEAP32[$32>>2]|0;
 $34 = (($33) + -1)|0;
 HEAP32[$32>>2] = $34;
 $35 = ($34|0)==(0);
 if (!($35)) {
  ___resumeException($eh$lpad$body$indexZ2D|0);
  // unreachable;
 }
 _free($27);
 ___resumeException($eh$lpad$body$indexZ2D|0);
 // unreachable;
}
function __ZN4core3ops6FnOnce9call_once17h2ed3ece209af4df9E($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 __THREW__ = 0;
 invoke_vii(5,($0|0),($1|0));
 $2 = __THREW__; __THREW__ = 0;
 $3 = $2&1;
 if ($3) {
  $14 = ___cxa_find_matching_catch_2()|0;
  $15 = tempRet0;
  __ZN4drop17hab695909c806641cE($0);
  $16 = ((($0)) + 4|0);
  $17 = HEAP32[$16>>2]|0;
  $18 = HEAP32[$17>>2]|0;
  $19 = (($18) + -1)|0;
  HEAP32[$17>>2] = $19;
  $20 = ($19|0)==(0);
  if (!($20)) {
   ___resumeException($14|0);
   // unreachable;
  }
  $21 = ((($17)) + 8|0);
  __ZN4drop17h95af9e8f1e83bb49E($21);
  $22 = ((($17)) + 4|0);
  $23 = HEAP32[$22>>2]|0;
  $24 = (($23) + -1)|0;
  HEAP32[$22>>2] = $24;
  $25 = ($24|0)==(0);
  if (!($25)) {
   ___resumeException($14|0);
   // unreachable;
  }
  _free($17);
  ___resumeException($14|0);
  // unreachable;
 } else {
  __ZN4drop17hab695909c806641cE($0);
  $4 = ((($0)) + 4|0);
  $5 = HEAP32[$4>>2]|0;
  $6 = HEAP32[$5>>2]|0;
  $7 = (($6) + -1)|0;
  HEAP32[$5>>2] = $7;
  $8 = ($7|0)==(0);
  if (!($8)) {
   return;
  }
  $9 = ((($5)) + 8|0);
  __ZN4drop17h95af9e8f1e83bb49E($9);
  $10 = ((($5)) + 4|0);
  $11 = HEAP32[$10>>2]|0;
  $12 = (($11) + -1)|0;
  HEAP32[$10>>2] = $12;
  $13 = ($12|0)==(0);
  if (!($13)) {
   return;
  }
  _free($5);
  return;
 }
}
function __ZN155__LT_ncollide_pipeline__narrow_phase__contact_generator__composite_shape_shape_contact_generator__CompositeShapeShapeContactGenerator_LT_P_C__u20_M_GT__GT_9do_update28__u7b__u7b_closure_u7d__u7d_28__u7b__u7b_closure_u7d__u7d_17h915e8b12cbfc71d7E($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$idx1$i$i = 0, $$idx1$i$i12 = 0, $$idx1$val$i$i = 0, $$idx1$val$i$i13 = 0, $$idx1$val$val$i$i = 0, $$idx1$val$val$i$i14 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0;
 var $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $_13 = 0;
 var $_6 = 0, $personalityslot$sroa$0$0 = 0, $personalityslot$sroa$5$0 = 0, $switchtmp$i = 0, $switchtmp$i11 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $_6 = sp + 8|0;
 $_13 = sp;
 $4 = HEAP32[$0>>2]|0;
 $5 = HEAP8[$4>>0]|0;
 $6 = ($5<<24>>24)==(0);
 if ($6) {
  $28 = ((($0)) + 8|0);
  $29 = HEAP32[$28>>2]|0;
  $30 = HEAP32[$29>>2]|0;
  $31 = ((($29)) + 4|0);
  $32 = HEAP32[$31>>2]|0;
  $33 = ((($0)) + 12|0);
  $34 = HEAP32[$33>>2]|0;
  $35 = HEAP32[$34>>2]|0;
  $36 = ((($34)) + 4|0);
  $37 = HEAP32[$36>>2]|0;
  $38 = ((($32)) + 12|0);
  $39 = HEAP32[$38>>2]|0;
  FUNCTION_TABLE_viiiiii[$39 & 255]($_13,$30,$2,$3,$35,$37);
  $40 = ((($0)) + 4|0);
  $41 = HEAP32[$40>>2]|0;
  $42 = HEAP32[$41>>2]|0;
  $switchtmp$i11 = ($42|0)==(0|0);
  do {
   if (!($switchtmp$i11)) {
    $$idx1$i$i12 = ((($41)) + 4|0);
    $$idx1$val$i$i13 = HEAP32[$$idx1$i$i12>>2]|0;
    $$idx1$val$val$i$i14 = HEAP32[$$idx1$val$i$i13>>2]|0;
    __THREW__ = 0;
    invoke_vi($$idx1$val$val$i$i14|0,($42|0));
    $43 = __THREW__; __THREW__ = 0;
    $44 = $43&1;
    if ($44) {
     $71 = ___cxa_find_matching_catch_2()|0;
     $72 = tempRet0;
     $73 = HEAP32[$40>>2]|0;
     $74 = $_13;
     $75 = $74;
     $76 = HEAP32[$75>>2]|0;
     $77 = (($74) + 4)|0;
     $78 = $77;
     $79 = HEAP32[$78>>2]|0;
     $80 = $73;
     $81 = $80;
     HEAP32[$81>>2] = $76;
     $82 = (($80) + 4)|0;
     $83 = $82;
     HEAP32[$83>>2] = $79;
     $personalityslot$sroa$0$0 = $71;$personalityslot$sroa$5$0 = $72;
     ___resumeException($personalityslot$sroa$0$0|0);
     // unreachable;
    } else {
     $45 = HEAP32[$$idx1$i$i12>>2]|0;
     $46 = ((($45)) + 4|0);
     $47 = HEAP32[$46>>2]|0;
     $48 = ($47|0)==(0);
     if ($48) {
      break;
     }
     _free($42);
     break;
    }
   }
  } while(0);
  $60 = HEAP32[$40>>2]|0;
  $61 = $_13;
  $62 = $61;
  $63 = HEAP32[$62>>2]|0;
  $64 = (($61) + 4)|0;
  $65 = $64;
  $66 = HEAP32[$65>>2]|0;
  $67 = $60;
  $68 = $67;
  HEAP32[$68>>2] = $63;
  $69 = (($67) + 4)|0;
  $70 = $69;
  HEAP32[$70>>2] = $66;
  STACKTOP = sp;return;
 } else {
  $7 = ((($0)) + 8|0);
  $8 = HEAP32[$7>>2]|0;
  $9 = HEAP32[$8>>2]|0;
  $10 = ((($8)) + 4|0);
  $11 = HEAP32[$10>>2]|0;
  $12 = ((($0)) + 12|0);
  $13 = HEAP32[$12>>2]|0;
  $14 = HEAP32[$13>>2]|0;
  $15 = ((($13)) + 4|0);
  $16 = HEAP32[$15>>2]|0;
  $17 = ((($11)) + 12|0);
  $18 = HEAP32[$17>>2]|0;
  FUNCTION_TABLE_viiiiii[$18 & 255]($_6,$9,$14,$16,$2,$3);
  $19 = ((($0)) + 4|0);
  $20 = HEAP32[$19>>2]|0;
  $21 = HEAP32[$20>>2]|0;
  $switchtmp$i = ($21|0)==(0|0);
  do {
   if (!($switchtmp$i)) {
    $$idx1$i$i = ((($20)) + 4|0);
    $$idx1$val$i$i = HEAP32[$$idx1$i$i>>2]|0;
    $$idx1$val$val$i$i = HEAP32[$$idx1$val$i$i>>2]|0;
    __THREW__ = 0;
    invoke_vi($$idx1$val$val$i$i|0,($21|0));
    $22 = __THREW__; __THREW__ = 0;
    $23 = $22&1;
    if ($23) {
     $84 = ___cxa_find_matching_catch_2()|0;
     $85 = tempRet0;
     $86 = HEAP32[$19>>2]|0;
     $87 = $_6;
     $88 = $87;
     $89 = HEAP32[$88>>2]|0;
     $90 = (($87) + 4)|0;
     $91 = $90;
     $92 = HEAP32[$91>>2]|0;
     $93 = $86;
     $94 = $93;
     HEAP32[$94>>2] = $89;
     $95 = (($93) + 4)|0;
     $96 = $95;
     HEAP32[$96>>2] = $92;
     $personalityslot$sroa$0$0 = $84;$personalityslot$sroa$5$0 = $85;
     ___resumeException($personalityslot$sroa$0$0|0);
     // unreachable;
    } else {
     $24 = HEAP32[$$idx1$i$i>>2]|0;
     $25 = ((($24)) + 4|0);
     $26 = HEAP32[$25>>2]|0;
     $27 = ($26|0)==(0);
     if ($27) {
      break;
     }
     _free($21);
     break;
    }
   }
  } while(0);
  $49 = HEAP32[$19>>2]|0;
  $50 = $_6;
  $51 = $50;
  $52 = HEAP32[$51>>2]|0;
  $53 = (($50) + 4)|0;
  $54 = $53;
  $55 = HEAP32[$54>>2]|0;
  $56 = $49;
  $57 = $56;
  HEAP32[$57>>2] = $52;
  $58 = (($56) + 4)|0;
  $59 = $58;
  HEAP32[$59>>2] = $55;
  STACKTOP = sp;return;
 }
}
function __ZN4core3ops6FnOnce9call_once17h8b02f948a131fd6cE($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZN155__LT_ncollide_pipeline__narrow_phase__contact_generator__composite_shape_shape_contact_generator__CompositeShapeShapeContactGenerator_LT_P_C__u20_M_GT__GT_9do_update28__u7b__u7b_closure_u7d__u7d_28__u7b__u7b_closure_u7d__u7d_17h915e8b12cbfc71d7E($0,$1,$2,$3);
 return;
}
function __ZN155__LT_ncollide_pipeline__narrow_phase__contact_generator__composite_shape_shape_contact_generator__CompositeShapeShapeContactGenerator_LT_P_C__u20_M_GT__GT_9do_update28__u7b__u7b_closure_u7d__u7d_17h109faf5f35e89f2dE($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0.0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = HEAP32[$0>>2]|0;
 $5 = HEAP8[$4>>0]|0;
 $6 = ($5<<24>>24)==(0);
 $7 = ((($0)) + 4|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = HEAP32[$8>>2]|0;
 $10 = ((($9)) + 4|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = ((($9)) + 8|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = ((($0)) + 8|0);
 $15 = HEAP32[$14>>2]|0;
 $16 = HEAP32[$15>>2]|0;
 $17 = ((($15)) + 4|0);
 $18 = HEAP32[$17>>2]|0;
 $19 = ((($0)) + 12|0);
 $20 = HEAP32[$19>>2]|0;
 $21 = HEAP32[$20>>2]|0;
 $22 = ((($0)) + 16|0);
 $23 = HEAP32[$22>>2]|0;
 $24 = HEAP32[$23>>2]|0;
 $25 = ((($23)) + 4|0);
 $26 = HEAP32[$25>>2]|0;
 $27 = ((($0)) + 20|0);
 $28 = HEAP32[$27>>2]|0;
 $29 = +HEAPF32[$28>>2];
 $30 = ((($13)) + 12|0);
 $31 = HEAP32[$30>>2]|0;
 if ($6) {
  $33 = (FUNCTION_TABLE_iiiiiiiiiid[$31 & 127]($11,$16,$18,$1,$2,$3,$21,$24,$26,$29)|0);
  if ($33) {
   return;
  } else {
   __ZN3std9panicking11begin_panic17h9936a195de5ffc4dE(10447,46,5328);
   // unreachable;
  }
 } else {
  $32 = (FUNCTION_TABLE_iiiiiiiiiid[$31 & 127]($11,$16,$18,$21,$24,$26,$1,$2,$3,$29)|0);
  if ($32) {
   return;
  } else {
   __ZN3std9panicking11begin_panic17h9936a195de5ffc4dE(10447,46,5316);
   // unreachable;
  }
 }
}
function __ZN4core3ops6FnOnce9call_once17h42ae18aa328e973dE($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0.0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = HEAP32[$0>>2]|0;
 $5 = HEAP8[$4>>0]|0;
 $6 = ($5<<24>>24)==(0);
 $7 = ((($0)) + 4|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = HEAP32[$8>>2]|0;
 $10 = ((($9)) + 4|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = ((($9)) + 8|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = ((($0)) + 8|0);
 $15 = HEAP32[$14>>2]|0;
 $16 = HEAP32[$15>>2]|0;
 $17 = ((($15)) + 4|0);
 $18 = HEAP32[$17>>2]|0;
 $19 = ((($0)) + 12|0);
 $20 = HEAP32[$19>>2]|0;
 $21 = HEAP32[$20>>2]|0;
 $22 = ((($0)) + 16|0);
 $23 = HEAP32[$22>>2]|0;
 $24 = HEAP32[$23>>2]|0;
 $25 = ((($23)) + 4|0);
 $26 = HEAP32[$25>>2]|0;
 $27 = ((($0)) + 20|0);
 $28 = HEAP32[$27>>2]|0;
 $29 = +HEAPF32[$28>>2];
 $30 = ((($13)) + 12|0);
 $31 = HEAP32[$30>>2]|0;
 if ($6) {
  $33 = (FUNCTION_TABLE_iiiiiiiiiid[$31 & 127]($11,$16,$18,$1,$2,$3,$21,$24,$26,$29)|0);
  if ($33) {
   return;
  } else {
   __ZN3std9panicking11begin_panic17h9936a195de5ffc4dE(10447,46,5328);
   // unreachable;
  }
 } else {
  $32 = (FUNCTION_TABLE_iiiiiiiiiid[$31 & 127]($11,$16,$18,$21,$24,$26,$1,$2,$3,$29)|0);
  if ($32) {
   return;
  } else {
   __ZN3std9panicking11begin_panic17h9936a195de5ffc4dE(10447,46,5316);
   // unreachable;
  }
 }
}
function __ZN158__LT_ncollide_pipeline__narrow_phase__proximity_detector__composite_shape_shape_proximity_detector__CompositeShapeShapeProximityDetector_LT_P_C__u20_M_GT__GT_9do_update28__u7b__u7b_closure_u7d__u7d_17hc9b4327fb79d2f85E($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0.0, $25 = 0, $26 = 0, $27 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = HEAP32[$0>>2]|0;
 $5 = HEAP32[$4>>2]|0;
 $6 = HEAP32[$5>>2]|0;
 $7 = ((($5)) + 4|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ((($0)) + 4|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = HEAP32[$10>>2]|0;
 $12 = ((($10)) + 4|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = ((($0)) + 8|0);
 $15 = HEAP32[$14>>2]|0;
 $16 = HEAP32[$15>>2]|0;
 $17 = ((($0)) + 12|0);
 $18 = HEAP32[$17>>2]|0;
 $19 = HEAP32[$18>>2]|0;
 $20 = ((($18)) + 4|0);
 $21 = HEAP32[$20>>2]|0;
 $22 = ((($0)) + 16|0);
 $23 = HEAP32[$22>>2]|0;
 $24 = +HEAPF32[$23>>2];
 $25 = ((($8)) + 12|0);
 $26 = HEAP32[$25>>2]|0;
 $27 = (FUNCTION_TABLE_iiiiiiiiiid[$26 & 127]($6,$11,$13,$1,$2,$3,$16,$19,$21,$24)|0);
 if ($27) {
  return;
 } else {
  __ZN3std9panicking11begin_panic17h9936a195de5ffc4dE(10493,30,5340);
  // unreachable;
 }
}
function __ZN4core3ops6FnOnce9call_once17ha755e5aaccf250e5E($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0.0, $25 = 0, $26 = 0, $27 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = HEAP32[$0>>2]|0;
 $5 = HEAP32[$4>>2]|0;
 $6 = HEAP32[$5>>2]|0;
 $7 = ((($5)) + 4|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ((($0)) + 4|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = HEAP32[$10>>2]|0;
 $12 = ((($10)) + 4|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = ((($0)) + 8|0);
 $15 = HEAP32[$14>>2]|0;
 $16 = HEAP32[$15>>2]|0;
 $17 = ((($0)) + 12|0);
 $18 = HEAP32[$17>>2]|0;
 $19 = HEAP32[$18>>2]|0;
 $20 = ((($18)) + 4|0);
 $21 = HEAP32[$20>>2]|0;
 $22 = ((($0)) + 16|0);
 $23 = HEAP32[$22>>2]|0;
 $24 = +HEAPF32[$23>>2];
 $25 = ((($8)) + 12|0);
 $26 = HEAP32[$25>>2]|0;
 $27 = (FUNCTION_TABLE_iiiiiiiiiid[$26 & 127]($6,$11,$13,$1,$2,$3,$16,$19,$21,$24)|0);
 if ($27) {
  return;
 } else {
  __ZN3std9panicking11begin_panic17h9936a195de5ffc4dE(10493,30,5340);
  // unreachable;
 }
}
function __ZN158__LT_ncollide_pipeline__narrow_phase__proximity_detector__composite_shape_shape_proximity_detector__CompositeShapeShapeProximityDetector_LT_P_C__u20_M_GT__GT_9do_update28__u7b__u7b_closure_u7d__u7d_17ha887088640c0decfE($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0.0, $26 = 0, $27 = 0, $28 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = HEAP32[$0>>2]|0;
 $5 = HEAP32[$4>>2]|0;
 $6 = ((($5)) + 4|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ((($5)) + 8|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = ((($0)) + 4|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = HEAP32[$11>>2]|0;
 $13 = ((($11)) + 4|0);
 $14 = HEAP32[$13>>2]|0;
 $15 = ((($0)) + 8|0);
 $16 = HEAP32[$15>>2]|0;
 $17 = HEAP32[$16>>2]|0;
 $18 = ((($0)) + 12|0);
 $19 = HEAP32[$18>>2]|0;
 $20 = HEAP32[$19>>2]|0;
 $21 = ((($19)) + 4|0);
 $22 = HEAP32[$21>>2]|0;
 $23 = ((($0)) + 16|0);
 $24 = HEAP32[$23>>2]|0;
 $25 = +HEAPF32[$24>>2];
 $26 = ((($9)) + 12|0);
 $27 = HEAP32[$26>>2]|0;
 $28 = (FUNCTION_TABLE_iiiiiiiiiid[$27 & 127]($7,$12,$14,$1,$2,$3,$17,$20,$22,$25)|0);
 if ($28) {
  return;
 } else {
  __ZN3std9panicking11begin_panic17h9936a195de5ffc4dE(10493,30,5352);
  // unreachable;
 }
}
function __ZN4core3ops6FnOnce9call_once17h3b6dd91b7af942bbE($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0.0, $26 = 0, $27 = 0, $28 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = HEAP32[$0>>2]|0;
 $5 = HEAP32[$4>>2]|0;
 $6 = ((($5)) + 4|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ((($5)) + 8|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = ((($0)) + 4|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = HEAP32[$11>>2]|0;
 $13 = ((($11)) + 4|0);
 $14 = HEAP32[$13>>2]|0;
 $15 = ((($0)) + 8|0);
 $16 = HEAP32[$15>>2]|0;
 $17 = HEAP32[$16>>2]|0;
 $18 = ((($0)) + 12|0);
 $19 = HEAP32[$18>>2]|0;
 $20 = HEAP32[$19>>2]|0;
 $21 = ((($19)) + 4|0);
 $22 = HEAP32[$21>>2]|0;
 $23 = ((($0)) + 16|0);
 $24 = HEAP32[$23>>2]|0;
 $25 = +HEAPF32[$24>>2];
 $26 = ((($9)) + 12|0);
 $27 = HEAP32[$26>>2]|0;
 $28 = (FUNCTION_TABLE_iiiiiiiiiid[$27 & 127]($7,$12,$14,$1,$2,$3,$17,$20,$22,$25)|0);
 if ($28) {
  return;
 } else {
  __ZN3std9panicking11begin_panic17h9936a195de5ffc4dE(10493,30,5352);
  // unreachable;
 }
}
function __ZN158__LT_ncollide_pipeline__narrow_phase__proximity_detector__composite_shape_shape_proximity_detector__CompositeShapeShapeProximityDetector_LT_P_C__u20_M_GT__GT_9do_update28__u7b__u7b_closure_u7d__u7d_28__u7b__u7b_closure_u7d__u7d_17h0216b7e993dddb0bE($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$idx1$i$i = 0, $$idx1$val$i$i = 0, $$idx1$val$val$i$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $_5 = 0, $switchtmp$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $_5 = sp;
 $4 = ((($0)) + 4|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = HEAP32[$5>>2]|0;
 $7 = ((($5)) + 4|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ((($0)) + 8|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = HEAP32[$10>>2]|0;
 $12 = ((($10)) + 4|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = ((($8)) + 12|0);
 $15 = HEAP32[$14>>2]|0;
 FUNCTION_TABLE_viiiiii[$15 & 255]($_5,$6,$2,$3,$11,$13);
 $16 = HEAP32[$0>>2]|0;
 $17 = HEAP32[$16>>2]|0;
 $switchtmp$i = ($17|0)==(0|0);
 if (!($switchtmp$i)) {
  $$idx1$i$i = ((($16)) + 4|0);
  $$idx1$val$i$i = HEAP32[$$idx1$i$i>>2]|0;
  $$idx1$val$val$i$i = HEAP32[$$idx1$val$i$i>>2]|0;
  __THREW__ = 0;
  invoke_vi($$idx1$val$val$i$i|0,($17|0));
  $18 = __THREW__; __THREW__ = 0;
  $19 = $18&1;
  if ($19) {
   $35 = ___cxa_find_matching_catch_2()|0;
   $36 = tempRet0;
   $37 = HEAP32[$0>>2]|0;
   $38 = $_5;
   $39 = $38;
   $40 = HEAP32[$39>>2]|0;
   $41 = (($38) + 4)|0;
   $42 = $41;
   $43 = HEAP32[$42>>2]|0;
   $44 = $37;
   $45 = $44;
   HEAP32[$45>>2] = $40;
   $46 = (($44) + 4)|0;
   $47 = $46;
   HEAP32[$47>>2] = $43;
   ___resumeException($35|0);
   // unreachable;
  }
  $20 = HEAP32[$$idx1$i$i>>2]|0;
  $21 = ((($20)) + 4|0);
  $22 = HEAP32[$21>>2]|0;
  $23 = ($22|0)==(0);
  if (!($23)) {
   _free($17);
  }
 }
 $24 = HEAP32[$0>>2]|0;
 $25 = $_5;
 $26 = $25;
 $27 = HEAP32[$26>>2]|0;
 $28 = (($25) + 4)|0;
 $29 = $28;
 $30 = HEAP32[$29>>2]|0;
 $31 = $24;
 $32 = $31;
 HEAP32[$32>>2] = $27;
 $33 = (($31) + 4)|0;
 $34 = $33;
 HEAP32[$34>>2] = $30;
 STACKTOP = sp;return;
}
function __ZN4core3ops6FnOnce9call_once17hf9fe9ab36a54eb32E($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$idx1$i$i$i = 0, $$idx1$val$i$i$i = 0, $$idx1$val$val$i$i$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $_5$i = 0, $switchtmp$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $_5$i = sp;
 $4 = ((($0)) + 4|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = HEAP32[$5>>2]|0;
 $7 = ((($5)) + 4|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ((($0)) + 8|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = HEAP32[$10>>2]|0;
 $12 = ((($10)) + 4|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = ((($8)) + 12|0);
 $15 = HEAP32[$14>>2]|0;
 FUNCTION_TABLE_viiiiii[$15 & 255]($_5$i,$6,$2,$3,$11,$13);
 $16 = HEAP32[$0>>2]|0;
 $17 = HEAP32[$16>>2]|0;
 $switchtmp$i$i = ($17|0)==(0|0);
 if (!($switchtmp$i$i)) {
  $$idx1$i$i$i = ((($16)) + 4|0);
  $$idx1$val$i$i$i = HEAP32[$$idx1$i$i$i>>2]|0;
  $$idx1$val$val$i$i$i = HEAP32[$$idx1$val$i$i$i>>2]|0;
  __THREW__ = 0;
  invoke_vi($$idx1$val$val$i$i$i|0,($17|0));
  $18 = __THREW__; __THREW__ = 0;
  $19 = $18&1;
  if ($19) {
   $24 = ___cxa_find_matching_catch_2()|0;
   $25 = tempRet0;
   $26 = $_5$i;
   $27 = $26;
   $28 = HEAP32[$27>>2]|0;
   $29 = (($26) + 4)|0;
   $30 = $29;
   $31 = HEAP32[$30>>2]|0;
   $32 = $16;
   $33 = $32;
   HEAP32[$33>>2] = $28;
   $34 = (($32) + 4)|0;
   $35 = $34;
   HEAP32[$35>>2] = $31;
   ___resumeException($24|0);
   // unreachable;
  }
  $20 = HEAP32[$$idx1$i$i$i>>2]|0;
  $21 = ((($20)) + 4|0);
  $22 = HEAP32[$21>>2]|0;
  $23 = ($22|0)==(0);
  if (!($23)) {
   _free($17);
  }
 }
 $36 = $_5$i;
 $37 = $36;
 $38 = HEAP32[$37>>2]|0;
 $39 = (($36) + 4)|0;
 $40 = $39;
 $41 = HEAP32[$40>>2]|0;
 $42 = $16;
 $43 = $42;
 HEAP32[$43>>2] = $38;
 $44 = (($42) + 4)|0;
 $45 = $44;
 HEAP32[$45>>2] = $41;
 STACKTOP = sp;return;
}
function __ZN158__LT_ncollide_pipeline__narrow_phase__proximity_detector__composite_shape_shape_proximity_detector__CompositeShapeShapeProximityDetector_LT_P_C__u20_M_GT__GT_9do_update28__u7b__u7b_closure_u7d__u7d_17h9a9b9a5e39c2a85bE($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0.0, $25 = 0, $26 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = HEAP32[$0>>2]|0;
 $5 = HEAP32[$4>>2]|0;
 $6 = HEAP32[$5>>2]|0;
 $7 = ((($5)) + 4|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ((($0)) + 4|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = HEAP32[$10>>2]|0;
 $12 = ((($10)) + 4|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = ((($0)) + 8|0);
 $15 = HEAP32[$14>>2]|0;
 $16 = HEAP32[$15>>2]|0;
 $17 = ((($0)) + 12|0);
 $18 = HEAP32[$17>>2]|0;
 $19 = HEAP32[$18>>2]|0;
 $20 = ((($18)) + 4|0);
 $21 = HEAP32[$20>>2]|0;
 $22 = ((($0)) + 16|0);
 $23 = HEAP32[$22>>2]|0;
 $24 = +HEAPF32[$23>>2];
 $25 = ((($8)) + 12|0);
 $26 = HEAP32[$25>>2]|0;
 (FUNCTION_TABLE_iiiiiiiiiid[$26 & 127]($6,$11,$13,$1,$2,$3,$16,$19,$21,$24)|0);
 return;
}
function __ZN4core3ops6FnOnce9call_once17hed46e902f423fd92E($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0.0, $25 = 0, $26 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = HEAP32[$0>>2]|0;
 $5 = HEAP32[$4>>2]|0;
 $6 = HEAP32[$5>>2]|0;
 $7 = ((($5)) + 4|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ((($0)) + 4|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = HEAP32[$10>>2]|0;
 $12 = ((($10)) + 4|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = ((($0)) + 8|0);
 $15 = HEAP32[$14>>2]|0;
 $16 = HEAP32[$15>>2]|0;
 $17 = ((($0)) + 12|0);
 $18 = HEAP32[$17>>2]|0;
 $19 = HEAP32[$18>>2]|0;
 $20 = ((($18)) + 4|0);
 $21 = HEAP32[$20>>2]|0;
 $22 = ((($0)) + 16|0);
 $23 = HEAP32[$22>>2]|0;
 $24 = +HEAPF32[$23>>2];
 $25 = ((($8)) + 12|0);
 $26 = HEAP32[$25>>2]|0;
 (FUNCTION_TABLE_iiiiiiiiiid[$26 & 127]($6,$11,$13,$1,$2,$3,$16,$19,$21,$24)|0);
 return;
}
function __ZN413__LT_ncollide_geometry__query__time_of_impact_internal__composite_shape_against_shape__CompositeShapeAgainstAnyTOICostFn_LT__u27_a_C__u20_P_C__u20_M_C__u20_G1_GT__u20_as_u20_ncollide_geometry__partitioning__bvt_cost_fn__BVTCostFn_LT__LT__LT_P_u20_as_u20_ncollide_math__Point_GT___Vect_u20_as_u20_ncollide_math__Vector_GT___Scalar_C__u20_usize_C__u20_ncollide_geometry__bounding_volume__aabb__AABB_LT_P_GT__GT__GT_14compute_b_cost28__u7b__u7b_closure_u7d__u7d_17h0250216dcf5df515E($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$sink$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $_6$sroa$4$0$$sroa_idx = 0, $_6$sroa$5$0$$sroa_idx = 0, $_7 = 0, $not$switch2$i = 0;
 var $self$sroa$0$0$copyload$i = 0, $self$sroa$6$0$copyload17$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $_7 = sp;
 $4 = ((($0)) + 4|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = HEAP32[$5>>2]|0;
 $7 = ((($6)) + 36|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ((($6)) + 48|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = ((($6)) + 52|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = ((($6)) + 56|0);
 $14 = HEAP32[$13>>2]|0;
 $15 = ((($6)) + 60|0);
 $16 = HEAP32[$15>>2]|0;
 __ZN17ncollide_geometry5query23time_of_impact_internal19shape_against_shape19shape_against_shape17h7395edb4f4a16d88E($_7,$1,$8,$2,$3,$10,$12,$14,$16);
 $self$sroa$0$0$copyload$i = HEAP32[$_7>>2]|0;
 $17 = ((($_7)) + 4|0);
 $self$sroa$6$0$copyload17$i = HEAP32[$17>>2]|0;
 $not$switch2$i = ($self$sroa$0$0$copyload$i|0)!=(0);
 $$sink$i = $not$switch2$i&1;
 $18 = HEAP32[$0>>2]|0;
 HEAP32[$18>>2] = $$sink$i;
 $_6$sroa$4$0$$sroa_idx = ((($18)) + 4|0);
 HEAP32[$_6$sroa$4$0$$sroa_idx>>2] = $self$sroa$6$0$copyload17$i;
 $_6$sroa$5$0$$sroa_idx = ((($18)) + 8|0);
 HEAP32[$_6$sroa$5$0$$sroa_idx>>2] = $self$sroa$6$0$copyload17$i;
 STACKTOP = sp;return;
}
function __ZN4core3ops6FnOnce9call_once17h01a266083a3fadf5E($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$sink$i$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $_6$sroa$4$0$$sroa_idx$i = 0, $_6$sroa$5$0$$sroa_idx$i = 0, $_7$i = 0, $not$switch2$i$i = 0;
 var $self$sroa$0$0$copyload$i$i = 0, $self$sroa$6$0$copyload17$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $_7$i = sp;
 $4 = ((($0)) + 4|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = HEAP32[$5>>2]|0;
 $7 = ((($6)) + 36|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ((($6)) + 48|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = ((($6)) + 52|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = ((($6)) + 56|0);
 $14 = HEAP32[$13>>2]|0;
 $15 = ((($6)) + 60|0);
 $16 = HEAP32[$15>>2]|0;
 __ZN17ncollide_geometry5query23time_of_impact_internal19shape_against_shape19shape_against_shape17h7395edb4f4a16d88E($_7$i,$1,$8,$2,$3,$10,$12,$14,$16);
 $self$sroa$0$0$copyload$i$i = HEAP32[$_7$i>>2]|0;
 $17 = ((($_7$i)) + 4|0);
 $self$sroa$6$0$copyload17$i$i = HEAP32[$17>>2]|0;
 $not$switch2$i$i = ($self$sroa$0$0$copyload$i$i|0)!=(0);
 $$sink$i$i = $not$switch2$i$i&1;
 $18 = HEAP32[$0>>2]|0;
 HEAP32[$18>>2] = $$sink$i$i;
 $_6$sroa$4$0$$sroa_idx$i = ((($18)) + 4|0);
 HEAP32[$_6$sroa$4$0$$sroa_idx$i>>2] = $self$sroa$6$0$copyload17$i$i;
 $_6$sroa$5$0$$sroa_idx$i = ((($18)) + 8|0);
 HEAP32[$_6$sroa$5$0$$sroa_idx$i>>2] = $self$sroa$6$0$copyload17$i$i;
 STACKTOP = sp;return;
}
function __ZN93__LT_ncollide_pipeline__world__collision_world__CollisionWorld_LT_P_C__u20_M_C__u20_T_GT__GT_19perform_broad_phase28__u7b__u7b_closure_u7d__u7d_17hb5254994298a4b0aE($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$idx$i$i = 0, $$idx$i$i$i = 0, $$idx$i$i$i$i = 0, $$idx$val = 0, $$idx$val$i$i = 0, $$idx$val$i$i$i = 0, $$idx$val$i$i$i$i = 0, $$idx1$i$i = 0, $$idx1$val = 0, $$idx1$val$i$i = 0, $$idx1$val$i$i$i$i = 0, $$idx2$i$i = 0, $$idx2$val$i$i = 0, $$idx21$i$i$i = 0, $$idx21$val$i$i$i = 0, $$idx3$i$i = 0, $$idx3$val$i$i = 0, $10 = 0, $11 = 0, $12 = 0;
 var $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0;
 var $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $_0$0$off0$i = 0, $_8$sroa$0$0$i$i = 0, $or$cond$i$i = 0, $or$cond$i$i$i = 0, $or$cond$i17$i = 0;
 var $switch2tmp$i$i$i = 0, $switch2tmp$i$i16$i = 0, $switchtmp$i$i$i$i = 0, $switchtmp$i$i$i15$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = HEAP32[$0>>2]|0;
 $4 = HEAP32[$3>>2]|0;
 $5 = ((($0)) + 4|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = HEAP32[$6>>2]|0;
 $$idx$val = HEAP32[$1>>2]|0;
 $$idx1$val = HEAP32[$2>>2]|0;
 $$idx$i$i$i$i = ((($7)) + 8|0);
 $$idx$val$i$i$i$i = HEAP32[$$idx$i$i$i$i>>2]|0;
 $8 = ($$idx$val$i$i$i$i>>>0)>($$idx$val>>>0);
 if (!($8)) {
  __ZN4core6option13expect_failed17hc1eeb48c0c4a1725E(10432,15);
  // unreachable;
 }
 $$idx1$val$i$i$i$i = HEAP32[$7>>2]|0;
 $9 = (($$idx1$val$i$i$i$i) + ($$idx$val<<6)|0);
 $10 = (((($$idx1$val$i$i$i$i) + ($$idx$val<<6)|0)) + 28|0);
 $11 = HEAP32[$10>>2]|0;
 $switchtmp$i$i$i$i = ($11|0)==(0|0);
 $switch2tmp$i$i$i = ($9|0)==(0|0);
 $or$cond$i$i = $switchtmp$i$i$i$i | $switch2tmp$i$i$i;
 if ($or$cond$i$i) {
  __ZN4core6option13expect_failed17hc1eeb48c0c4a1725E(10432,15);
  // unreachable;
 }
 $12 = ($$idx$val$i$i$i$i>>>0)>($$idx1$val>>>0);
 if (!($12)) {
  __ZN4core6option13expect_failed17hc1eeb48c0c4a1725E(10432,15);
  // unreachable;
 }
 $13 = (($$idx1$val$i$i$i$i) + ($$idx1$val<<6)|0);
 $14 = (((($$idx1$val$i$i$i$i) + ($$idx1$val<<6)|0)) + 28|0);
 $15 = HEAP32[$14>>2]|0;
 $switchtmp$i$i$i15$i = ($15|0)==(0|0);
 $switch2tmp$i$i16$i = ($13|0)==(0|0);
 $or$cond$i17$i = $switch2tmp$i$i16$i | $switchtmp$i$i$i15$i;
 if ($or$cond$i17$i) {
  __ZN4core6option13expect_failed17hc1eeb48c0c4a1725E(10432,15);
  // unreachable;
 }
 $16 = ($$idx$val|0)==($$idx1$val|0);
 if ($16) {
  $$idx3$i$i = (((($$idx1$val$i$i$i$i) + ($$idx$val<<6)|0)) + 36|0);
  $$idx3$val$i$i = HEAP32[$$idx3$i$i>>2]|0;
  $31 = ($$idx3$val$i$i|0)<(0);
  if (!($31)) {
   $_0$0$off0$i = 0;
   return ($_0$0$off0$i|0);
  }
 } else {
  $$idx$i$i = (((($$idx1$val$i$i$i$i) + ($$idx$val<<6)|0)) + 32|0);
  $$idx$val$i$i = HEAP32[$$idx$i$i>>2]|0;
  $$idx1$i$i = (((($$idx1$val$i$i$i$i) + ($$idx$val<<6)|0)) + 36|0);
  $$idx1$val$i$i = HEAP32[$$idx1$i$i>>2]|0;
  $17 = (((($$idx1$val$i$i$i$i) + ($$idx1$val<<6)|0)) + 40|0);
  $18 = HEAP32[$17>>2]|0;
  $19 = $18 & $$idx$val$i$i;
  $20 = ($19|0)==(0);
  if (!($20)) {
   $_0$0$off0$i = 0;
   return ($_0$0$off0$i|0);
  }
  $$idx2$i$i = (((($$idx1$val$i$i$i$i) + ($$idx$val<<6)|0)) + 40|0);
  $$idx2$val$i$i = HEAP32[$$idx2$i$i>>2]|0;
  $28 = (((($$idx1$val$i$i$i$i) + ($$idx1$val<<6)|0)) + 32|0);
  $26 = HEAP32[$28>>2]|0;
  $29 = $26 & $$idx2$val$i$i;
  $30 = ($29|0)==(0);
  if (!($30)) {
   $_0$0$off0$i = 0;
   return ($_0$0$off0$i|0);
  }
  $21 = (((($$idx1$val$i$i$i$i) + ($$idx1$val<<6)|0)) + 36|0);
  $22 = HEAP32[$21>>2]|0;
  $23 = $22 & $$idx$val$i$i;
  $24 = ($23|0)==(0);
  $25 = $26 & $$idx1$val$i$i;
  $27 = ($25|0)==(0);
  $or$cond$i$i$i = $27 | $24;
  if ($or$cond$i$i$i) {
   $_0$0$off0$i = 0;
   return ($_0$0$off0$i|0);
  }
 }
 $32 = HEAP32[$4>>2]|0;
 $33 = ((($4)) + 8|0);
 $34 = HEAP32[$33>>2]|0;
 $35 = (($32) + (($34*20)|0)|0);
 $_8$sroa$0$0$i$i = $32;
 while(1) {
  $36 = ($_8$sroa$0$0$i$i|0)==($35|0);
  if ($36) {
   $_0$0$off0$i = 1;
   label = 15;
   break;
  }
  $37 = ((($_8$sroa$0$0$i$i)) + 20|0);
  $$idx$i$i$i = ((($_8$sroa$0$0$i$i)) + 12|0);
  $$idx$val$i$i$i = HEAP32[$$idx$i$i$i>>2]|0;
  $$idx21$i$i$i = ((($_8$sroa$0$0$i$i)) + 16|0);
  $$idx21$val$i$i$i = HEAP32[$$idx21$i$i$i>>2]|0;
  $38 = ((($$idx21$val$i$i$i)) + 12|0);
  $39 = HEAP32[$38>>2]|0;
  $40 = (FUNCTION_TABLE_iiii[$39 & 511]($$idx$val$i$i$i,$9,$13)|0);
  if ($40) {
   $_8$sroa$0$0$i$i = $37;
  } else {
   $_0$0$off0$i = 0;
   label = 15;
   break;
  }
 }
 if ((label|0) == 15) {
  return ($_0$0$off0$i|0);
 }
 return (0)|0;
}
function __ZN4core3ops6FnOnce9call_once17hf1a3069639f5857aE($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = (__ZN93__LT_ncollide_pipeline__world__collision_world__CollisionWorld_LT_P_C__u20_M_C__u20_T_GT__GT_19perform_broad_phase28__u7b__u7b_closure_u7d__u7d_17hb5254994298a4b0aE($0,$1,$2)|0);
 return ($3|0);
}
function __ZN93__LT_ncollide_pipeline__world__collision_world__CollisionWorld_LT_P_C__u20_M_C__u20_T_GT__GT_19perform_broad_phase28__u7b__u7b_closure_u7d__u7d_17h7702b17a9e6bc1c5E($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = HEAP32[$0>>2]|0;
 $5 = HEAP32[$4>>2]|0;
 $6 = HEAP32[$5>>2]|0;
 $7 = ((($5)) + 4|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ((($0)) + 4|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = HEAP32[$10>>2]|0;
 $12 = ((($0)) + 8|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = HEAP32[$13>>2]|0;
 $15 = ((($0)) + 12|0);
 $16 = HEAP32[$15>>2]|0;
 $17 = HEAP32[$16>>2]|0;
 $18 = ((($8)) + 16|0);
 $19 = HEAP32[$18>>2]|0;
 FUNCTION_TABLE_viiiiiii[$19 & 127]($6,$11,$14,$17,$1,$2,$3);
 return;
}
function __ZN4core3ops6FnOnce9call_once17hdc56eaabcc8f2270E($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = HEAP32[$0>>2]|0;
 $5 = HEAP32[$4>>2]|0;
 $6 = HEAP32[$5>>2]|0;
 $7 = ((($5)) + 4|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ((($0)) + 4|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = HEAP32[$10>>2]|0;
 $12 = ((($0)) + 8|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = HEAP32[$13>>2]|0;
 $15 = ((($0)) + 12|0);
 $16 = HEAP32[$15>>2]|0;
 $17 = HEAP32[$16>>2]|0;
 $18 = ((($8)) + 16|0);
 $19 = HEAP32[$18>>2]|0;
 FUNCTION_TABLE_viiiiiii[$19 & 127]($6,$11,$14,$17,$1,$2,$3);
 return;
}
function _main($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$$i = 0, $$$i$i$i$i$i$i = 0, $$$i$i$i$i$i$i$i = 0, $$$i$i$i$i$i$i$i$i$i = 0, $$$i$i$i$i$i$i$i$i$i$i = 0, $$arith = 0, $$arith43 = 0, $$arith47 = 0, $$arith51 = 0, $$arith55 = 0, $$cast$i$i$i = 0, $$fca$0$0$0$0$load17$i$i = 0, $$fca$0$0$insert$fca$0$0$gep$i$i = 0, $$overflow = 0, $$overflow44 = 0, $$overflow48 = 0, $$overflow52 = 0, $$overflow56 = 0, $$pre$i$i$i = 0, $$pre$i$i$i$i = 0;
 var $$pre$i$i$i$i$i$i$i$i$i = 0, $$pre$i$i$i$i$i$i$i$i$i$i = 0, $$pre$i$i$i$i$i$i57$i$i$i = 0, $$pre$i$i60$i = 0, $$pre$i27$i$i = 0, $$pre$phi$i$i$i$i$i$i$i$i$iZ2D = 0, $$pre$phi$i$i$i$iZ2D = 0, $$pre$phi$i$i$iZ2D = 0, $$pre$phi$i42$i$iZ2D = 0, $$pre3$i$i$i$i = 0, $$pre3$i$i$i$i$i$i$i$i$i = 0, $$pre3$i$i$i$i$i$i$i$i$i$i = 0, $$pre3$i$i$i$i$i$i53$i$i$i = 0, $$sink$in$phi$trans$insert$i$i$i$i = 0, $$sink$in$phi$trans$insert$i$i$i$i$i$i$i$i$i = 0, $$sink$in$phi$trans$insert$i$i$i$i$i$i$i$i$i$i = 0, $$sink$in$phi$trans$insert$i$i$i$i$i$i55$i$i$i = 0, $$sroa_idx$i$i$i$i = 0, $$unpack$unpack$unpack$unpack38$i$i$i$i = 0, $10 = 0;
 var $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0;
 var $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0;
 var $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0;
 var $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0;
 var $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0;
 var $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0;
 var $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0;
 var $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0;
 var $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0;
 var $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0;
 var $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0;
 var $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0;
 var $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0;
 var $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0;
 var $_0$0$sroa$speculated$i$i$i$i$i = 0, $_10$i$i$i$i = 0, $_10$i$i$i42$i = 0, $_10$i$i22$i$i = 0, $_10$i32$i$i$i = 0, $_10$sroa_cast27$i$i$i$i$hi = 0, $_10$sroa_cast27$i44$i$i$i$hi = 0, $_10$sroa_raw_idx$i$i$i$i = 0, $_10$sroa_raw_idx$i42$i$i$i = 0, $_10$sroa_raw_idx26$i$i$i$i = 0, $_10$sroa_raw_idx26$i43$i$i$i = 0, $_11$sroa$4$0$$sroa_idx49$i$i = 0, $_12$i$i$i = 0, $_25$sroa$4$0$$sroa_idx98$i$i$i$i$i = 0, $_25$sroa$5$0$$sroa_idx100$i$i$i$i$i = 0, $_27$sroa$4$0$$sroa_idx$i$i$i = 0, $_27$sroa$5$0$$sroa_idx$i$i$i = 0, $_31$sroa$0$0$$sroa_idx$i$i$i$i$i$i = 0, $_31$sroa$4$0$$sroa_idx46$i$i$i$i$i$i = 0, $_31$sroa$5$0$$sroa_idx48$i$i$i$i$i$i = 0;
 var $_4$i$i$i$i = 0, $_5$sroa$4$0$$sroa_idx28$i$i$i$i = 0, $_6$i$i$i$i$i$i = 0, $_6$sroa$4$0$$sroa_idx23$i$i$i = 0, $_7$i$i$i$i$i = 0, $args$sroa$0$0$i$i$i = 0, $args$sroa$7$0$i$i$i = 0, $args$sroa$9$0$copyload38$i$i$i = 0, $args$sroa$9$0$i$i$i = 0, $argv$i$i$i = 0, $cond$i$i$i$i$i = 0, $cond$i$i$i$i$i$i$i = 0, $cond$i$i$i$i$i43$i$i = 0, $cond$i$i$i32$i$i = 0, $eh$lpad$body$i$index33Z2D = 0, $eh$lpad$body$i$indexZ2D = 0, $eh$lpad$body64$i$index23Z2D = 0, $eh$lpad$body64$i$indexZ2D = 0, $element$sroa$6$0$$sroa_idx36$i$i$i$i$i$i = 0, $element$sroa$6$0$$sroa_idx87$i$i$i$i$i = 0;
 var $element$sroa$6$0$copyload$i$i$i$i$i = 0, $element$sroa$6$0$copyload$i$i$i$i$i$i = 0, $element$sroa$7$0$$sroa_idx41$i$i$i$i$i$i = 0, $element$sroa$7$0$$sroa_idx92$i$i$i$i$i = 0, $element$sroa$7$0$copyload$i$i$i$i$i = 0, $element$sroa$7$0$copyload$i$i$i$i$i$i = 0, $f$i$i$i = 0, $f$i$i11$i = 0, $iterator$i$i$i$i$i = 0, $iterator$i$i$i$i$i$i = 0, $lpad$phi$i$i$index = 0, $lpad$phi$i$i$index18 = 0, $lpad$phi$index = 0, $lpad$phi$index13 = 0, $lpad$thr_comm$split$lp$sink$i$i$i$index5ZZ2D = 0, $lpad$thr_comm$split$lp$sink$i$i$i$indexZZ2D = 0, $node$i$i = 0, $not$$i$i$i$i$i$i$i = 0, $not$$i$i$i$i$i$i$i$i$i$i = 0, $not$$i$i$i$i$i$i$i50$i$i$i$i$i = 0;
 var $not$$i$i$i$i$i48$i$i$i$i$i = 0, $not$$i$i$i$i38$i$i$i$i$i = 0, $not$$i$i$i$i54$i$i$i$i$i = 0, $not$switch$i$i$i$i$i = 0, $not$switch$i$i$i38$i$i = 0, $or$cond$i$i$i$i$i = 0, $or$cond$i$i132$i$i$i = 0, $personalityslot$sroa$0$0$i = 0, $personalityslot$sroa$0$0$i$i = 0, $personalityslot$sroa$0$0$i$i$i$i$i$i = 0, $personalityslot$sroa$0$0106$i$i$i$i$i = 0, $personalityslot$sroa$0$015$i$i$i = 0, $personalityslot$sroa$0$1104$i$i$i = 0, $personalityslot$sroa$5$0$i = 0, $personalityslot$sroa$5$014$i$i$i = 0, $personalityslot$sroa$6$0$i$i$i$i$i$i = 0, $personalityslot$sroa$6$1102$i$i$i = 0, $personalityslot$sroa$7$0$i$i = 0, $personalityslot$sroa$7$0105$i$i$i$i$i = 0, $phitmp$i$i$i = 0;
 var $ptr$0$i$i$i = 0, $ptr$0$i$i$i$i$i$i$i = 0, $res$sroa$0$0$i = 0, $res$sroa$7$0$i = 0, $state$0$i$i = 0, $state$1$i$i = 0, $success = 0, $success59 = 0, $success62 = 0, $success65 = 0, $switch$i$i$i = 0, $switch$i$i$i$i$i = 0, $switch$i$i$i$i$i$i$i$i$i$i = 0, $switch$i$i$i$i$i$i$i$i$i$i$i = 0, $switch$i$i$i$i$i$i$i51$i$i$i = 0, $switch$i25$i$i = 0, $switch2tmp$i$i$i$i = 0, $switch2tmp$i$i$i$i$i$i = 0, $switch2tmp$i$i$i$i$i$i$i$i$i$i$i = 0, $switch2tmp$i$i$i$i$i$i$i$i$i$i$i$i = 0;
 var $switch2tmp$i$i$i$i$i$i$i$i48$i$i$i = 0, $switch2tmp$i$i23$i$i = 0, $switch3tmp$i$i$i$i = 0, $switch3tmp$i$i$i$i$i = 0, $switchtmp$i$i = 0, $switchtmp$i$i$i$i = 0, $switchtmp$i$i$i$i$i = 0, $switchtmp$i$i$i$i$i$i = 0, $switchtmp$i$i$i$i$i$i$i$i = 0, $switchtmp$i$i$i$i$i$i34$i$i = 0, $switchtmp$i$i$i$i16$i = 0, $switchtmp$i$i$i$i45$i = 0, $switchtmp$i$i37$i$i = 0, $switchtmp$i$i41$i$i = 0, $switchtmp$i23$i = 0, $switchtmp$i39$i$i$i$i = 0, $switchtmp$i47$i$i$i$i$i = 0, $thread$i$i = 0, $thread$i$i$i = 0, $value$i$sroa$0$0$_13$sroa$4$0$$sroa_cast4$i$sroa_idx$i$i$i = 0;
 var $value$i$sroa$0$0$_13$sroa$4$0$$sroa_cast4$i$sroa_idx$i29$i$i = 0, $value$i$sroa$49$0$_13$sroa$4$0$$sroa_cast4$i$sroa_idx$i$i$i = 0, $value$i$sroa$49$0$_13$sroa$4$0$$sroa_cast4$i$sroa_idx$i30$i$i = 0, $vector$i$i$i$i$i$sroa$0$0 = 0, $vector$i$i$i$i$i$sroa$0$1 = 0, $vector$i$i$i$i$i$sroa$0$2 = 0, $vector$i$i$i$i$i$sroa$9$0 = 0, $vector$i$i$i$i$i$sroa$9$1 = 0, $vector$i$i$i$i$i$sroa$9$2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(224|0);
 $_10$i32$i$i$i = sp + 208|0;
 $_10$i$i$i42$i = sp + 200|0;
 $thread$i$i$i = sp + 192|0;
 $node$i$i = sp + 176|0;
 $_4$i$i$i$i = sp + 160|0;
 $_10$i$i22$i$i = sp + 136|0;
 $f$i$i11$i = sp + 120|0;
 $_12$i$i$i = sp + 104|0;
 $_10$i$i$i$i = sp + 80|0;
 $thread$i$i = sp + 72|0;
 $f$i$i$i = sp + 64|0;
 $iterator$i$i$i$i$i$i = sp + 48|0;
 $_6$i$i$i$i$i$i = sp + 32|0;
 $iterator$i$i$i$i$i = sp + 16|0;
 $_7$i$i$i$i$i = sp;
 $argv$i$i$i = sp + 216|0;
 HEAP32[1613] = (317);
 $2 = (_malloc(4)|0);
 $3 = ($2|0)==(0|0);
 L1: do {
  if ($3) {
   __THREW__ = 0;
   invoke_v(210);
   $4 = __THREW__; __THREW__ = 0;
   label = 199;
  } else {
   HEAP8[$2>>0]=1852399981&255;HEAP8[$2+1>>0]=(1852399981>>8)&255;HEAP8[$2+2>>0]=(1852399981>>16)&255;HEAP8[$2+3>>0]=1852399981>>24;
   __THREW__ = 0;
   $5 = (invoke_iiii(318,($2|0),4,4)|0);
   $6 = __THREW__; __THREW__ = 0;
   $7 = $6&1;
   if ($7) {
    label = 199;
   } else {
    $8 = $5;
    HEAP32[$thread$i$i>>2] = $8;
    __THREW__ = 0;
    $9 = (invoke_i(319)|0);
    $10 = __THREW__; __THREW__ = 0;
    $11 = $10&1;
    L5: do {
     if (!($11)) {
      $switch2tmp$i$i$i$i = ($9|0)==(0|0);
      if ($switch2tmp$i$i$i$i) {
       __THREW__ = 0;
       invoke_vii(219,(18366|0),57);
       $12 = __THREW__; __THREW__ = 0;
       break;
      }
      $13 = HEAP32[$9>>2]|0;
      $switch$i$i$i = ($13|0)==(1);
      do {
       if ($switch$i$i$i) {
        $$pre$i$i$i = ((($9)) + 4|0);
        $$pre$phi$i$i$iZ2D = $$pre$i$i$i;
       } else {
        ;HEAP32[$_10$i$i$i$i>>2]=HEAP32[$9>>2]|0;HEAP32[$_10$i$i$i$i+4>>2]=HEAP32[$9+4>>2]|0;HEAP32[$_10$i$i$i$i+8>>2]=HEAP32[$9+8>>2]|0;HEAP32[$_10$i$i$i$i+12>>2]=HEAP32[$9+12>>2]|0;HEAP32[$_10$i$i$i$i+16>>2]=HEAP32[$9+16>>2]|0;
        HEAP32[$9>>2] = 1;
        $value$i$sroa$0$0$_13$sroa$4$0$$sroa_cast4$i$sroa_idx$i$i$i = ((($9)) + 4|0);
        HEAP32[$value$i$sroa$0$0$_13$sroa$4$0$$sroa_cast4$i$sroa_idx$i$i$i>>2] = 0;
        $value$i$sroa$49$0$_13$sroa$4$0$$sroa_cast4$i$sroa_idx$i$i$i = ((($9)) + 16|0);
        HEAP32[$value$i$sroa$49$0$_13$sroa$4$0$$sroa_cast4$i$sroa_idx$i$i$i>>2] = 0;
        $14 = HEAP32[$_10$i$i$i$i>>2]|0;
        $cond$i$i$i$i$i = ($14|0)==(1);
        if ($cond$i$i$i$i$i) {
         $15 = ((($_10$i$i$i$i)) + 16|0);
         $16 = HEAP32[$15>>2]|0;
         $switchtmp$i$i$i$i$i$i$i$i = ($16|0)==(0|0);
         if (!($switchtmp$i$i$i$i$i$i$i$i)) {
          $17 = HEAP32[$16>>2]|0;HEAP32[$16>>2] = (($17-1)|0);
          $18 = ($17|0)==(1);
          if ($18) {
           /* fence */;
           __ZN33__LT_alloc__arc__Arc_LT_T_GT__GT_9drop_slow17h7ac40ae25c424b1dE_1335($15);
          }
         }
        }
        $19 = HEAP32[$9>>2]|0;
        $not$switch$i$i$i$i$i = ($19|0)==(1);
        if ($not$switch$i$i$i$i$i) {
         $$pre$phi$i$i$iZ2D = $value$i$sroa$0$0$_13$sroa$4$0$$sroa_cast4$i$sroa_idx$i$i$i;
         break;
        } else {
         __THREW__ = 0;
         invoke_vi(220,(6500|0));
         $20 = __THREW__; __THREW__ = 0;
         break L5;
        }
       }
      } while(0);
      $21 = HEAP32[$$pre$phi$i$i$iZ2D>>2]|0;
      $cond$i$i$i$i$i$i$i = ($21|0)==(-1);
      if ($cond$i$i$i$i$i$i$i) {
       __THREW__ = 0;
       invoke_v(320);
       $22 = __THREW__; __THREW__ = 0;
       break;
      }
      $23 = ((($9)) + 16|0);
      $24 = HEAP32[$23>>2]|0;
      $25 = ($24|0)==(0|0);
      if (!($25)) {
       __THREW__ = 0;
       invoke_viii(321,(20618|0),38,(6348|0));
       $26 = __THREW__; __THREW__ = 0;
       break;
      }
      $$fca$0$0$0$0$load17$i$i = HEAP32[$thread$i$i>>2]|0;
      $27 = $f$i$i11$i;
      $28 = $27;
      HEAP32[$28>>2] = 0;
      $29 = (($27) + 4)|0;
      $30 = $29;
      HEAP32[$30>>2] = 0;
      $_11$sroa$4$0$$sroa_idx49$i$i = ((($f$i$i11$i)) + 8|0);
      HEAP32[$_11$sroa$4$0$$sroa_idx49$i$i>>2] = $$fca$0$0$0$0$load17$i$i;
      $31 = $$fca$0$0$0$0$load17$i$i;
      __THREW__ = 0;
      $32 = (invoke_i(319)|0);
      $33 = __THREW__; __THREW__ = 0;
      $34 = $33&1;
      L28: do {
       if ($34) {
        label = 39;
       } else {
        $switch2tmp$i$i23$i$i = ($32|0)==(0|0);
        if ($switch2tmp$i$i23$i$i) {
         __THREW__ = 0;
         invoke_vii(219,(18366|0),57);
         $35 = __THREW__; __THREW__ = 0;
         label = 39;
         break;
        }
        ;HEAP32[$_12$i$i$i>>2]=HEAP32[$f$i$i11$i>>2]|0;HEAP32[$_12$i$i$i+4>>2]=HEAP32[$f$i$i11$i+4>>2]|0;HEAP32[$_12$i$i$i+8>>2]=HEAP32[$f$i$i11$i+8>>2]|0;
        $36 = HEAP32[$32>>2]|0;
        $switch$i25$i$i = ($36|0)==(1);
        do {
         if ($switch$i25$i$i) {
          $$pre$i27$i$i = ((($32)) + 4|0);
          $$pre$phi$i42$i$iZ2D = $$pre$i27$i$i;
         } else {
          ;HEAP32[$_10$i$i22$i$i>>2]=HEAP32[$32>>2]|0;HEAP32[$_10$i$i22$i$i+4>>2]=HEAP32[$32+4>>2]|0;HEAP32[$_10$i$i22$i$i+8>>2]=HEAP32[$32+8>>2]|0;HEAP32[$_10$i$i22$i$i+12>>2]=HEAP32[$32+12>>2]|0;HEAP32[$_10$i$i22$i$i+16>>2]=HEAP32[$32+16>>2]|0;
          HEAP32[$32>>2] = 1;
          $value$i$sroa$0$0$_13$sroa$4$0$$sroa_cast4$i$sroa_idx$i29$i$i = ((($32)) + 4|0);
          HEAP32[$value$i$sroa$0$0$_13$sroa$4$0$$sroa_cast4$i$sroa_idx$i29$i$i>>2] = 0;
          $value$i$sroa$49$0$_13$sroa$4$0$$sroa_cast4$i$sroa_idx$i30$i$i = ((($32)) + 16|0);
          HEAP32[$value$i$sroa$49$0$_13$sroa$4$0$$sroa_cast4$i$sroa_idx$i30$i$i>>2] = 0;
          $37 = HEAP32[$_10$i$i22$i$i>>2]|0;
          $cond$i$i$i32$i$i = ($37|0)==(1);
          if ($cond$i$i$i32$i$i) {
           $38 = ((($_10$i$i22$i$i)) + 16|0);
           $39 = HEAP32[$38>>2]|0;
           $switchtmp$i$i$i$i$i$i34$i$i = ($39|0)==(0|0);
           if (!($switchtmp$i$i$i$i$i$i34$i$i)) {
            $40 = HEAP32[$39>>2]|0;HEAP32[$39>>2] = (($40-1)|0);
            $41 = ($40|0)==(1);
            if ($41) {
             /* fence */;
             __ZN33__LT_alloc__arc__Arc_LT_T_GT__GT_9drop_slow17h7ac40ae25c424b1dE_1335($38);
            }
           }
          }
          $42 = HEAP32[$32>>2]|0;
          $not$switch$i$i$i38$i$i = ($42|0)==(1);
          if ($not$switch$i$i$i38$i$i) {
           $$pre$phi$i42$i$iZ2D = $value$i$sroa$0$0$_13$sroa$4$0$$sroa_cast4$i$sroa_idx$i29$i$i;
           break;
          }
          __THREW__ = 0;
          invoke_vi(220,(6500|0));
          $43 = __THREW__; __THREW__ = 0;
          $44 = ___cxa_find_matching_catch_2()|0;
          $45 = tempRet0;
          $46 = ((($_12$i$i$i)) + 8|0);
          $47 = HEAP32[$46>>2]|0;
          $48 = HEAP32[$47>>2]|0;HEAP32[$47>>2] = (($48-1)|0);
          $49 = ($48|0)==(1);
          if (!($49)) {
           $personalityslot$sroa$0$015$i$i$i = $44;$personalityslot$sroa$5$014$i$i$i = $45;
           break L28;
          }
          /* fence */;
          __ZN33__LT_alloc__arc__Arc_LT_T_GT__GT_9drop_slow17h7ac40ae25c424b1dE_1335($46);
          $personalityslot$sroa$0$015$i$i$i = $44;$personalityslot$sroa$5$014$i$i$i = $45;
          break L28;
         }
        } while(0);
        $50 = $_12$i$i$i;
        $51 = $50;
        $52 = HEAP32[$51>>2]|0;
        $53 = (($50) + 4)|0;
        $54 = $53;
        $55 = HEAP32[$54>>2]|0;
        $56 = ((($_12$i$i$i)) + 8|0);
        $$unpack$unpack$unpack$unpack38$i$i$i$i = HEAP32[$56>>2]|0;
        $57 = $_4$i$i$i$i;
        $58 = $57;
        HEAP32[$58>>2] = $52;
        $59 = (($57) + 4)|0;
        $60 = $59;
        HEAP32[$60>>2] = $55;
        $_5$sroa$4$0$$sroa_idx28$i$i$i$i = ((($_4$i$i$i$i)) + 8|0);
        HEAP32[$_5$sroa$4$0$$sroa_idx28$i$i$i$i>>2] = $$unpack$unpack$unpack$unpack38$i$i$i$i;
        $61 = HEAP32[$$pre$phi$i42$i$iZ2D>>2]|0;
        $cond$i$i$i$i$i43$i$i = ($61|0)==(0);
        $62 = $$unpack$unpack$unpack$unpack38$i$i$i$i;
        if (!($cond$i$i$i$i$i43$i$i)) {
         __THREW__ = 0;
         invoke_v(322);
         $63 = __THREW__; __THREW__ = 0;
         $64 = ___cxa_find_matching_catch_2()|0;
         $65 = tempRet0;
         $switchtmp$i$i$i$i16$i = ($$unpack$unpack$unpack$unpack38$i$i$i$i|0)==(0);
         if (!($switchtmp$i$i$i$i16$i)) {
          $71 = HEAP32[$62>>2]|0;HEAP32[$62>>2] = (($71-1)|0);
          $72 = ($71|0)==(1);
          if ($72) {
           $73 = ((($_4$i$i$i$i)) + 8|0);
           /* fence */;
           __ZN33__LT_alloc__arc__Arc_LT_T_GT__GT_9drop_slow17h7ac40ae25c424b1dE_1335($73);
          }
         }
         $personalityslot$sroa$0$015$i$i$i = $64;$personalityslot$sroa$5$014$i$i$i = $65;
         break;
        }
        HEAP32[$$pre$phi$i42$i$iZ2D>>2] = -1;
        $66 = ((($32)) + 8|0);
        $67 = ((($32)) + 16|0);
        $68 = HEAP32[$67>>2]|0;
        $switchtmp$i39$i$i$i$i = ($68|0)==(0|0);
        if (!($switchtmp$i39$i$i$i$i)) {
         $69 = HEAP32[$68>>2]|0;HEAP32[$68>>2] = (($69-1)|0);
         $70 = ($69|0)==(1);
         if ($70) {
          /* fence */;
          __ZN33__LT_alloc__arc__Arc_LT_T_GT__GT_9drop_slow17h7ac40ae25c424b1dE_1335($67);
         }
        }
        ;HEAP32[$66>>2]=HEAP32[$_4$i$i$i$i>>2]|0;HEAP32[$66+4>>2]=HEAP32[$_4$i$i$i$i+4>>2]|0;HEAP32[$66+8>>2]=HEAP32[$_4$i$i$i$i+8>>2]|0;
        HEAP32[$$pre$phi$i42$i$iZ2D>>2] = 0;
        HEAP32[$argv$i$i$i>>2] = $1;
        HEAP32[$iterator$i$i$i$i$i>>2] = 0;
        $_6$sroa$4$0$$sroa_idx23$i$i$i = ((($iterator$i$i$i$i$i)) + 4|0);
        HEAP32[$_6$sroa$4$0$$sroa_idx23$i$i$i>>2] = $0;
        $83 = ((($iterator$i$i$i$i$i)) + 8|0);
        HEAP32[$83>>2] = $argv$i$i$i;
        __THREW__ = 0;
        invoke_vii(323,($_7$i$i$i$i$i|0),($iterator$i$i$i$i$i|0));
        $84 = __THREW__; __THREW__ = 0;
        $85 = $84&1;
        L57: do {
         if ($85) {
          $86 = ___cxa_find_matching_catch_2()|0;
          $87 = tempRet0;
          $personalityslot$sroa$0$0106$i$i$i$i$i = $86;$personalityslot$sroa$7$0105$i$i$i$i$i = $87;
         } else {
          $88 = HEAP32[$_7$i$i$i$i$i>>2]|0;
          $switchtmp$i$i$i$i$i = ($88|0)==(0|0);
          L60: do {
           if ($switchtmp$i$i$i$i$i) {
            $args$sroa$0$0$i$i$i = 1;$args$sroa$7$0$i$i$i = 0;$args$sroa$9$0$i$i$i = 0;
           } else {
            $element$sroa$6$0$$sroa_idx87$i$i$i$i$i = ((($_7$i$i$i$i$i)) + 4|0);
            $element$sroa$6$0$copyload$i$i$i$i$i = HEAP32[$element$sroa$6$0$$sroa_idx87$i$i$i$i$i>>2]|0;
            $element$sroa$7$0$$sroa_idx92$i$i$i$i$i = ((($_7$i$i$i$i$i)) + 8|0);
            $element$sroa$7$0$copyload$i$i$i$i$i = HEAP32[$element$sroa$7$0$$sroa_idx92$i$i$i$i$i>>2]|0;
            $89 = HEAP32[$iterator$i$i$i$i$i>>2]|0;
            $90 = HEAP32[$_6$sroa$4$0$$sroa_idx23$i$i$i>>2]|0;
            $91 = ($90|0)>($89|0);
            $92 = (($90) - ($89))|0;
            $$$i$i$i$i$i$i$i$i$i = $91 ? $92 : 0;
            $$arith47 = (($$$i$i$i$i$i$i$i$i$i) + 1)|0;
            $$overflow48 = ($$$i$i$i$i$i$i$i$i$i>>>0)>(4294967294);
            $$$i$i$i$i$i$i = $$overflow48 ? -1 : $$arith47;
            $$arith55 = ($$$i$i$i$i$i$i*12)|0;
            $$overflow56 = ($$$i$i$i$i$i$i>>>0)>(357913941);
            L63: do {
             if ($$overflow56) {
              __THREW__ = 0;
              invoke_vii(219,(19331|0),17);
              $93 = __THREW__; __THREW__ = 0;
             } else {
              $94 = ($$arith55|0)<(0);
              if ($94) {
               __THREW__ = 0;
               invoke_vi(220,(6432|0));
               $95 = __THREW__; __THREW__ = 0;
               break;
              }
              $96 = ($$arith55|0)==(0);
              do {
               if ($96) {
                $ptr$0$i$i$i$i$i$i$i = (1);
               } else {
                $97 = (_malloc($$arith55)|0);
                $98 = ($97|0)==(0|0);
                if (!($98)) {
                 $ptr$0$i$i$i$i$i$i$i = $97;
                 break;
                }
                __THREW__ = 0;
                invoke_v(210);
                $99 = __THREW__; __THREW__ = 0;
                break L63;
               }
              } while(0);
              $100 = $ptr$0$i$i$i$i$i$i$i;
              HEAP32[$ptr$0$i$i$i$i$i$i$i>>2] = $88;
              $_25$sroa$4$0$$sroa_idx98$i$i$i$i$i = ((($ptr$0$i$i$i$i$i$i$i)) + 4|0);
              HEAP32[$_25$sroa$4$0$$sroa_idx98$i$i$i$i$i>>2] = $element$sroa$6$0$copyload$i$i$i$i$i;
              $_25$sroa$5$0$$sroa_idx100$i$i$i$i$i = ((($ptr$0$i$i$i$i$i$i$i)) + 8|0);
              HEAP32[$_25$sroa$5$0$$sroa_idx100$i$i$i$i$i>>2] = $element$sroa$7$0$copyload$i$i$i$i$i;
              ;HEAP32[$iterator$i$i$i$i$i$i>>2]=HEAP32[$iterator$i$i$i$i$i>>2]|0;HEAP32[$iterator$i$i$i$i$i$i+4>>2]=HEAP32[$iterator$i$i$i$i$i+4>>2]|0;HEAP32[$iterator$i$i$i$i$i$i+8>>2]=HEAP32[$iterator$i$i$i$i$i+8>>2]|0;
              $element$sroa$6$0$$sroa_idx36$i$i$i$i$i$i = ((($_6$i$i$i$i$i$i)) + 4|0);
              $element$sroa$7$0$$sroa_idx41$i$i$i$i$i$i = ((($_6$i$i$i$i$i$i)) + 8|0);
              $101 = ((($iterator$i$i$i$i$i$i)) + 4|0);
              $342 = $ptr$0$i$i$i$i$i$i$i;$args$sroa$9$0$copyload38$i$i$i = 1;$vector$i$i$i$i$i$sroa$0$0 = $100;$vector$i$i$i$i$i$sroa$9$0 = $$$i$i$i$i$i$i;
              while(1) {
               __THREW__ = 0;
               invoke_vii(323,($_6$i$i$i$i$i$i|0),($iterator$i$i$i$i$i$i|0));
               $102 = __THREW__; __THREW__ = 0;
               $103 = $102&1;
               if ($103) {
                label = 78;
                break;
               }
               $104 = HEAP32[$_6$i$i$i$i$i$i>>2]|0;
               $switchtmp$i47$i$i$i$i$i = ($104|0)==(0|0);
               if ($switchtmp$i47$i$i$i$i$i) {
                label = 79;
                break;
               }
               $element$sroa$6$0$copyload$i$i$i$i$i$i = HEAP32[$element$sroa$6$0$$sroa_idx36$i$i$i$i$i$i>>2]|0;
               $element$sroa$7$0$copyload$i$i$i$i$i$i = HEAP32[$element$sroa$7$0$$sroa_idx41$i$i$i$i$i$i>>2]|0;
               $105 = ($vector$i$i$i$i$i$sroa$9$0|0)==($args$sroa$9$0$copyload38$i$i$i|0);
               if ($105) {
                $106 = HEAP32[$iterator$i$i$i$i$i$i>>2]|0;
                $107 = HEAP32[$101>>2]|0;
                $108 = ($107|0)>($106|0);
                $109 = (($107) - ($106))|0;
                $$$i$i$i$i$i$i$i$i$i$i = $108 ? $109 : 0;
                $$arith43 = (($$$i$i$i$i$i$i$i$i$i$i) + 1)|0;
                $$overflow44 = ($$$i$i$i$i$i$i$i$i$i$i>>>0)>(4294967294);
                $$$i$i$i$i$i$i$i = $$overflow44 ? -1 : $$arith43;
                $110 = (($vector$i$i$i$i$i$sroa$9$0) - ($args$sroa$9$0$copyload38$i$i$i))|0;
                $111 = ($110>>>0)<($$$i$i$i$i$i$i$i>>>0);
                if ($111) {
                 $$arith = (($args$sroa$9$0$copyload38$i$i$i) + ($$$i$i$i$i$i$i$i))|0;
                 $$overflow = ($$arith>>>0)<($args$sroa$9$0$copyload38$i$i$i>>>0);
                 if ($$overflow) {
                  label = 63;
                  break;
                 }
                 $113 = $vector$i$i$i$i$i$sroa$9$0 << 1;
                 $114 = ($$arith>>>0)>=($113>>>0);
                 $_0$0$sroa$speculated$i$i$i$i$i = $114 ? $$arith : $113;
                 $$arith51 = ($_0$0$sroa$speculated$i$i$i$i$i*12)|0;
                 $$overflow52 = ($_0$0$sroa$speculated$i$i$i$i$i>>>0)>(357913941);
                 if ($$overflow52) {
                  label = 65;
                  break;
                 }
                 $116 = ($$arith51|0)<(0);
                 if ($116) {
                  label = 67;
                  break;
                 }
                 $118 = ($vector$i$i$i$i$i$sroa$9$0|0)==(0);
                 if ($118) {
                  $119 = (_malloc($$arith51)|0);
                  $ptr$0$i$i$i = $119;
                 } else {
                  $120 = $vector$i$i$i$i$i$sroa$0$0;
                  $121 = (_realloc($120,$$arith51)|0);
                  $ptr$0$i$i$i = $121;
                 }
                 $122 = ($ptr$0$i$i$i|0)==(0|0);
                 if ($122) {
                  label = 72;
                  break;
                 }
                 $124 = $ptr$0$i$i$i;
                 $vector$i$i$i$i$i$sroa$0$1 = $124;$vector$i$i$i$i$i$sroa$9$1 = $_0$0$sroa$speculated$i$i$i$i$i;
                } else {
                 $vector$i$i$i$i$i$sroa$0$1 = $vector$i$i$i$i$i$sroa$0$0;$vector$i$i$i$i$i$sroa$9$1 = $vector$i$i$i$i$i$sroa$9$0;
                }
                $125 = $vector$i$i$i$i$i$sroa$0$1;
                $126 = $125;$vector$i$i$i$i$i$sroa$0$2 = $vector$i$i$i$i$i$sroa$0$1;$vector$i$i$i$i$i$sroa$9$2 = $vector$i$i$i$i$i$sroa$9$1;
               } else {
                $126 = $342;$vector$i$i$i$i$i$sroa$0$2 = $vector$i$i$i$i$i$sroa$0$0;$vector$i$i$i$i$i$sroa$9$2 = $vector$i$i$i$i$i$sroa$9$0;
               }
               $_31$sroa$0$0$$sroa_idx$i$i$i$i$i$i = (($126) + (($args$sroa$9$0$copyload38$i$i$i*12)|0)|0);
               HEAP32[$_31$sroa$0$0$$sroa_idx$i$i$i$i$i$i>>2] = $104;
               $_31$sroa$4$0$$sroa_idx46$i$i$i$i$i$i = (((($126) + (($args$sroa$9$0$copyload38$i$i$i*12)|0)|0)) + 4|0);
               HEAP32[$_31$sroa$4$0$$sroa_idx46$i$i$i$i$i$i>>2] = $element$sroa$6$0$copyload$i$i$i$i$i$i;
               $_31$sroa$5$0$$sroa_idx48$i$i$i$i$i$i = (((($126) + (($args$sroa$9$0$copyload38$i$i$i*12)|0)|0)) + 8|0);
               HEAP32[$_31$sroa$5$0$$sroa_idx48$i$i$i$i$i$i>>2] = $element$sroa$7$0$copyload$i$i$i$i$i$i;
               $127 = (($args$sroa$9$0$copyload38$i$i$i) + 1)|0;
               $342 = $126;$args$sroa$9$0$copyload38$i$i$i = $127;$vector$i$i$i$i$i$sroa$0$0 = $vector$i$i$i$i$i$sroa$0$2;$vector$i$i$i$i$i$sroa$9$0 = $vector$i$i$i$i$i$sroa$9$2;
              }
              if ((label|0) == 63) {
               __THREW__ = 0;
               invoke_vii(219,(19331|0),17);
               $112 = __THREW__; __THREW__ = 0;
               label = 76;
              }
              else if ((label|0) == 65) {
               __THREW__ = 0;
               invoke_vii(219,(19331|0),17);
               $115 = __THREW__; __THREW__ = 0;
               label = 76;
              }
              else if ((label|0) == 67) {
               __THREW__ = 0;
               invoke_vi(220,(6432|0));
               $117 = __THREW__; __THREW__ = 0;
               label = 76;
              }
              else if ((label|0) == 72) {
               __THREW__ = 0;
               invoke_v(210);
               $123 = __THREW__; __THREW__ = 0;
               label = 76;
              }
              else if ((label|0) == 78) {
               $130 = ___cxa_find_matching_catch_2()|0;
               $131 = tempRet0;
               $personalityslot$sroa$0$0$i$i$i$i$i$i = $130;$personalityslot$sroa$6$0$i$i$i$i$i$i = $131;
              }
              else if ((label|0) == 79) {
               $args$sroa$0$0$i$i$i = $vector$i$i$i$i$i$sroa$0$0;$args$sroa$7$0$i$i$i = $vector$i$i$i$i$i$sroa$9$0;$args$sroa$9$0$i$i$i = $args$sroa$9$0$copyload38$i$i$i;
               break L60;
              }
              do {
               if ((label|0) == 76) {
                $128 = ___cxa_find_matching_catch_2()|0;
                $129 = tempRet0;
                $not$$i$i$i$i$i48$i$i$i$i$i = ($element$sroa$6$0$copyload$i$i$i$i$i$i|0)==(0);
                if ($not$$i$i$i$i$i48$i$i$i$i$i) {
                 $personalityslot$sroa$0$0$i$i$i$i$i$i = $128;$personalityslot$sroa$6$0$i$i$i$i$i$i = $129;
                 break;
                }
                _free($104);
                $personalityslot$sroa$0$0$i$i$i$i$i$i = $128;$personalityslot$sroa$6$0$i$i$i$i$i$i = $129;
               }
              } while(0);
              $132 = $vector$i$i$i$i$i$sroa$0$0;
              $133 = (($132) + (($args$sroa$9$0$copyload38$i$i$i*12)|0)|0);
              $134 = ($args$sroa$9$0$copyload38$i$i$i|0)==(0);
              $135 = $vector$i$i$i$i$i$sroa$0$0;
              if (!($134)) {
               $137 = $132;
               while(1) {
                $136 = ((($137)) + 4|0);
                $138 = HEAP32[$136>>2]|0;
                $not$$i$i$i$i$i$i$i50$i$i$i$i$i = ($138|0)==(0);
                if (!($not$$i$i$i$i$i$i$i50$i$i$i$i$i)) {
                 $139 = HEAP32[$137>>2]|0;
                 _free($139);
                }
                $140 = ((($137)) + 12|0);
                $141 = ($140|0)==($133|0);
                if ($141) {
                 break;
                } else {
                 $137 = $140;
                }
               }
              }
              $not$$i$i$i$i54$i$i$i$i$i = ($vector$i$i$i$i$i$sroa$9$0|0)==(0);
              if ($not$$i$i$i$i54$i$i$i$i$i) {
               $personalityslot$sroa$0$0106$i$i$i$i$i = $personalityslot$sroa$0$0$i$i$i$i$i$i;$personalityslot$sroa$7$0105$i$i$i$i$i = $personalityslot$sroa$6$0$i$i$i$i$i$i;
               break L57;
              }
              _free($135);
              $personalityslot$sroa$0$0106$i$i$i$i$i = $personalityslot$sroa$0$0$i$i$i$i$i$i;$personalityslot$sroa$7$0105$i$i$i$i$i = $personalityslot$sroa$6$0$i$i$i$i$i$i;
              break L57;
             }
            } while(0);
            $142 = ___cxa_find_matching_catch_2()|0;
            $143 = tempRet0;
            $not$$i$i$i$i38$i$i$i$i$i = ($element$sroa$6$0$copyload$i$i$i$i$i|0)==(0);
            if ($not$$i$i$i$i38$i$i$i$i$i) {
             $personalityslot$sroa$0$0106$i$i$i$i$i = $142;$personalityslot$sroa$7$0105$i$i$i$i$i = $143;
             break L57;
            }
            _free($88);
            $personalityslot$sroa$0$0106$i$i$i$i$i = $142;$personalityslot$sroa$7$0105$i$i$i$i$i = $143;
            break L57;
           }
          } while(0);
          (_pthread_mutex_lock(((26680)|0))|0);
          $144 = HEAP32[6683]|0;
          $145 = ($144|0)==(0|0);
          if (!($145)) {
           __THREW__ = 0;
           invoke_viii(321,(20771|0),34,(6360|0));
           $146 = __THREW__; __THREW__ = 0;
           $147 = ___cxa_find_matching_catch_2()|0;
           $148 = tempRet0;
           $149 = $args$sroa$0$0$i$i$i;
           $150 = (($149) + (($args$sroa$9$0$i$i$i*12)|0)|0);
           $151 = ($args$sroa$9$0$i$i$i|0)==(0);
           if (!($151)) {
            $156 = $149;
            while(1) {
             $155 = ((($156)) + 4|0);
             $157 = HEAP32[$155>>2]|0;
             $not$$i$i$i$i$i$i$i$i$i$i = ($157|0)==(0);
             if (!($not$$i$i$i$i$i$i$i$i$i$i)) {
              $158 = HEAP32[$156>>2]|0;
              _free($158);
             }
             $159 = ((($156)) + 12|0);
             $160 = ($159|0)==($150|0);
             if ($160) {
              break;
             } else {
              $156 = $159;
             }
            }
           }
           $not$$i$i$i$i$i$i$i = ($args$sroa$7$0$i$i$i|0)==(0);
           if ($not$$i$i$i$i$i$i$i) {
            $eh$lpad$body$i$index33Z2D = $148;$eh$lpad$body$i$indexZ2D = $147;
            break L1;
           }
           $161 = $args$sroa$0$0$i$i$i;
           _free($161);
           $eh$lpad$body$i$index33Z2D = $148;$eh$lpad$body$i$indexZ2D = $147;
           break L1;
          }
          $152 = (_malloc(12)|0);
          $153 = ($152|0)==(0|0);
          if ($153) {
           __THREW__ = 0;
           invoke_v(210);
           $154 = __THREW__; __THREW__ = 0;
           label = 199;
           break L1;
          }
          HEAP32[$152>>2] = $args$sroa$0$0$i$i$i;
          $_27$sroa$4$0$$sroa_idx$i$i$i = ((($152)) + 4|0);
          HEAP32[$_27$sroa$4$0$$sroa_idx$i$i$i>>2] = $args$sroa$7$0$i$i$i;
          $_27$sroa$5$0$$sroa_idx$i$i$i = ((($152)) + 8|0);
          HEAP32[$_27$sroa$5$0$$sroa_idx$i$i$i>>2] = $args$sroa$9$0$i$i$i;
          HEAP32[6683] = $152;
          (_pthread_mutex_unlock(((26680)|0))|0);
          __THREW__ = 0;
          invoke_v(324);
          $162 = __THREW__; __THREW__ = 0;
          $163 = $162&1;
          L127: do {
           if ($163) {
            $164 = ___cxa_find_matching_catch_3(0|0)|0;
            $165 = tempRet0;
            $166 = ($164|0)==(0|0);
            if ($166) {
             __ZN4core9panicking5panic17ha7507e8e32961bfeE(6372);
             // unreachable;
            }
            $167 = HEAP32[$164>>2]|0;
            $$sroa_idx$i$i$i$i = ((($164)) + 4|0);
            $168 = HEAP32[$$sroa_idx$i$i$i$i>>2]|0;
            ___cxa_free_exception(($164|0));
            __THREW__ = 0;
            $169 = (invoke_i(325)|0);
            $170 = __THREW__; __THREW__ = 0;
            $171 = $170&1;
            do {
             if (!($171)) {
              $switch2tmp$i$i$i$i$i$i = ($169|0)==(0|0);
              if ($switch2tmp$i$i$i$i$i$i) {
               __THREW__ = 0;
               invoke_vii(219,(18366|0),57);
               $172 = __THREW__; __THREW__ = 0;
               break;
              }
              $173 = HEAP32[$169>>2]|0;
              $switch$i$i$i$i$i = ($173|0)==(1);
              if ($switch$i$i$i$i$i) {
               $$sink$in$phi$trans$insert$i$i$i$i = ((($169)) + 4|0);
               $$pre$i$i$i$i = HEAP32[$$sink$in$phi$trans$insert$i$i$i$i>>2]|0;
               $phitmp$i$i$i = (($$pre$i$i$i$i) + -1)|0;
               $$pre$phi$i$i$i$iZ2D = $$sink$in$phi$trans$insert$i$i$i$i;$178 = $phitmp$i$i$i;
              } else {
               $174 = $169;
               $175 = $174;
               HEAP32[$175>>2] = 1;
               $176 = (($174) + 4)|0;
               $177 = $176;
               HEAP32[$177>>2] = 0;
               $$pre3$i$i$i$i = ((($169)) + 4|0);
               $$pre$phi$i$i$i$iZ2D = $$pre3$i$i$i$i;$178 = -1;
              }
              HEAP32[$$pre$phi$i$i$i$iZ2D>>2] = $178;
              $res$sroa$0$0$i = $167;$res$sroa$7$0$i = $168;
              break L127;
             }
            } while(0);
            $340 = ___cxa_find_matching_catch_2()|0;
            $341 = tempRet0;
            $personalityslot$sroa$0$0$i = $340;$personalityslot$sroa$5$0$i = $341;
            ___resumeException($personalityslot$sroa$0$0$i|0);
            // unreachable;
           } else {
            $res$sroa$0$0$i = 0;$res$sroa$7$0$i = 0;
           }
          } while(0);
          $179 = HEAP32[6685]|0;
          $180 = ($179|0)==(3);
          do {
           if (!($180)) {
            HEAP8[$f$i$i$i>>0] = 1;
            $181 = HEAP32[6685]|0;
            $$fca$0$0$insert$fca$0$0$gep$i$i = ((($node$i$i)) + 4|0);
            $182 = ((($node$i$i)) + 8|0);
            $183 = $node$i$i;
            $184 = $183 | 2;
            $state$0$i$i = $181;
            L146: while(1) {
             switch ($state$0$i$i|0) {
             case 3:  {
              label = 189;
              break L146;
              break;
             }
             case 1:  {
              label = 113;
              break L146;
              break;
             }
             case 0:  {
              $185 = HEAP32[6685]|0;if (($185|0) == 0) HEAP32[6685] = 2;
              $success = ($185|0)==(0);
              if ($success) {
               label = 114;
               break L146;
              } else {
               $state$0$i$i = $185;
               continue L146;
              }
              break;
             }
             default: {
             }
             }
             $186 = $state$0$i$i & 3;
             $187 = ($186|0)==(2);
             if (!($187)) {
              label = 117;
              break;
             }
             __THREW__ = 0;
             $194 = (invoke_i(319)|0);
             $195 = __THREW__; __THREW__ = 0;
             $196 = $195&1;
             if ($196) {
              label = 184;
              break;
             }
             $switchtmp$i$i$i$i45$i = ($194|0)==(0|0);
             if ($switchtmp$i$i$i$i45$i) {
              label = 122;
              break;
             }
             __THREW__ = 0;
             $197 = (invoke_i(328)|0);
             $198 = __THREW__; __THREW__ = 0;
             $199 = $198&1;
             if ($199) {
              label = 184;
              break;
             }
             $switch3tmp$i$i$i$i = ($197|0)==(0);
             if ($switch3tmp$i$i$i$i) {
              label = 122;
              break;
             }
             HEAP32[$node$i$i>>2] = $197;
             HEAP8[$$fca$0$0$insert$fca$0$0$gep$i$i>>0] = 0;
             HEAP32[$182>>2] = 0;
             $state$1$i$i = $state$0$i$i;
             while(1) {
              $203 = $state$1$i$i & 3;
              $204 = ($203|0)==(2);
              if (!($204)) {
               label = 125;
               break;
              }
              $208 = $state$1$i$i & -4;
              $209 = $208;
              HEAP32[$182>>2] = $209;
              $210 = HEAP32[6685]|0;if (($210|0) == ($state$1$i$i|0)) HEAP32[6685] = $184;
              $success59 = ($210|0)==($state$1$i$i|0);
              if ($success59) {
               break;
              } else {
               $state$1$i$i = $210;
              }
             }
             if ((label|0) == 125) {
              label = 0;
              $205 = HEAP32[$node$i$i>>2]|0;
              $switchtmp$i$i37$i$i = ($205|0)==(0|0);
              do {
               if (!($switchtmp$i$i37$i$i)) {
                $206 = HEAP32[$205>>2]|0;HEAP32[$205>>2] = (($206-1)|0);
                $207 = ($206|0)==(1);
                if (!($207)) {
                 break;
                }
                /* fence */;
                __ZN33__LT_alloc__arc__Arc_LT_T_GT__GT_9drop_slow17h7ac40ae25c424b1dE_1335($node$i$i);
               }
              } while(0);
              $state$0$i$i = $state$1$i$i;
              continue;
             }
             while(1) {
              $211 = HEAP8[$$fca$0$0$insert$fca$0$0$gep$i$i>>0]|0;
              $212 = ($211<<24>>24)==(0);
              if (!($212)) {
               break;
              }
              __THREW__ = 0;
              $213 = (invoke_i(319)|0);
              $214 = __THREW__; __THREW__ = 0;
              $215 = $214&1;
              if ($215) {
               label = 169;
               break L146;
              }
              $switchtmp$i$i$i$i$i$i = ($213|0)==(0|0);
              if ($switchtmp$i$i$i$i$i$i) {
               label = 134;
               break L146;
              }
              __THREW__ = 0;
              $216 = (invoke_i(328)|0);
              $217 = __THREW__; __THREW__ = 0;
              $218 = $217&1;
              if ($218) {
               label = 169;
               break L146;
              }
              $switch3tmp$i$i$i$i$i = ($216|0)==(0);
              if ($switch3tmp$i$i$i$i$i) {
               label = 134;
               break L146;
              }
              HEAP32[$thread$i$i$i>>2] = $216;
              $$cast$i$i$i = $216;
              $223 = ((($$cast$i$i$i)) + 24|0);
              $224 = HEAP32[$223>>2]|0;
              (_pthread_mutex_lock(($224|0))|0);
              __THREW__ = 0;
              $225 = (invoke_i(325)|0);
              $226 = __THREW__; __THREW__ = 0;
              $227 = $226&1;
              if ($227) {
               label = 174;
               break L146;
              }
              $switch2tmp$i$i$i$i$i$i$i$i$i$i$i = ($225|0)==(0|0);
              if ($switch2tmp$i$i$i$i$i$i$i$i$i$i$i) {
               label = 138;
               break L146;
              }
              $229 = HEAP32[$225>>2]|0;
              $switch$i$i$i$i$i$i$i$i$i$i = ($229|0)==(1);
              if ($switch$i$i$i$i$i$i$i$i$i$i) {
               $$sink$in$phi$trans$insert$i$i$i$i$i$i$i$i$i = ((($225)) + 4|0);
               $$pre$i$i$i$i$i$i$i$i$i = HEAP32[$$sink$in$phi$trans$insert$i$i$i$i$i$i$i$i$i>>2]|0;
               $$pre$phi$i$i$i$i$i$i$i$i$iZ2D = $$sink$in$phi$trans$insert$i$i$i$i$i$i$i$i$i;$234 = $$pre$i$i$i$i$i$i$i$i$i;
              } else {
               $230 = $225;
               $231 = $230;
               HEAP32[$231>>2] = 1;
               $232 = (($230) + 4)|0;
               $233 = $232;
               HEAP32[$233>>2] = 0;
               $$pre3$i$i$i$i$i$i$i$i$i = ((($225)) + 4|0);
               $$pre$phi$i$i$i$i$i$i$i$i$iZ2D = $$pre3$i$i$i$i$i$i$i$i$i;$234 = 0;
              }
              HEAP32[$$pre$phi$i$i$i$i$i$i$i$i$iZ2D>>2] = $234;
              $235 = ($234|0)!=(0);
              $236 = ((($$cast$i$i$i)) + 28|0);
              $237 = HEAP8[$236>>0]|0;
              $238 = ($237<<24>>24)==(0);
              if (!($238)) {
               label = 143;
               break L146;
              }
              $242 = ((($$cast$i$i$i)) + 29|0);
              $243 = HEAP8[$242>>0]|0;
              $244 = ($243<<24>>24)==(0);
              L179: do {
               if ($244) {
                $245 = HEAP32[$223>>2]|0;
                $246 = $245;
                $247 = ((($$cast$i$i$i)) + 36|0);
                $248 = HEAP32[$247>>2]|0;if (($248|0) == 0) HEAP32[$247>>2] = $246;
                $success62 = ($248|0)==(0);
                $249 = ($248|0)==($246|0);
                $or$cond$i$i132$i$i$i = $success62 | $249;
                if ($or$cond$i$i132$i$i$i) {
                 $255 = $$cast$i$i$i;$257 = $245;
                } else {
                 label = 147;
                 break L146;
                }
                while(1) {
                 $254 = ((($255)) + 32|0);
                 $256 = HEAP32[$254>>2]|0;
                 (_pthread_cond_wait(($256|0),($257|0))|0);
                 $258 = HEAP8[$236>>0]|0;
                 $259 = ($258<<24>>24)==(0);
                 if (!($259)) {
                  label = 156;
                  break L146;
                 }
                 $296 = HEAP8[$242>>0]|0;
                 $297 = ($296<<24>>24)==(0);
                 if (!($297)) {
                  break L179;
                 }
                 $$pre$i$i60$i = HEAP32[$thread$i$i$i>>2]|0;
                 $298 = HEAP32[$223>>2]|0;
                 $299 = $298;
                 $300 = ((($$pre$i$i60$i)) + 36|0);
                 $301 = HEAP32[$300>>2]|0;if (($301|0) == 0) HEAP32[$300>>2] = $299;
                 $success65 = ($301|0)==(0);
                 $302 = ($301|0)==($299|0);
                 $or$cond$i$i$i$i$i = $success65 | $302;
                 if ($or$cond$i$i$i$i$i) {
                  $255 = $$pre$i$i60$i;$257 = $298;
                 } else {
                  label = 147;
                  break L146;
                 }
                }
               }
              } while(0);
              HEAP8[$242>>0] = 0;
              do {
               if (!($235)) {
                __THREW__ = 0;
                $273 = (invoke_i(325)|0);
                $274 = __THREW__; __THREW__ = 0;
                $275 = $274&1;
                if ($275) {
                 label = 171;
                 break L146;
                }
                $switch2tmp$i$i$i$i$i$i$i$i48$i$i$i = ($273|0)==(0|0);
                if ($switch2tmp$i$i$i$i$i$i$i$i48$i$i$i) {
                 label = 160;
                 break L146;
                }
                $279 = HEAP32[$273>>2]|0;
                $switch$i$i$i$i$i$i$i51$i$i$i = ($279|0)==(1);
                if (!($switch$i$i$i$i$i$i$i51$i$i$i)) {
                 $280 = $273;
                 $281 = $280;
                 HEAP32[$281>>2] = 1;
                 $282 = (($280) + 4)|0;
                 $283 = $282;
                 HEAP32[$283>>2] = 0;
                 $$pre3$i$i$i$i$i$i53$i$i$i = ((($273)) + 4|0);
                 HEAP32[$$pre3$i$i$i$i$i$i53$i$i$i>>2] = 0;
                 break;
                }
                $$sink$in$phi$trans$insert$i$i$i$i$i$i55$i$i$i = ((($273)) + 4|0);
                $$pre$i$i$i$i$i$i57$i$i$i = HEAP32[$$sink$in$phi$trans$insert$i$i$i$i$i$i55$i$i$i>>2]|0;
                $284 = ($$pre$i$i$i$i$i$i57$i$i$i|0)==(0);
                if ($284) {
                 break;
                }
                HEAP8[$236>>0] = 1;
               }
              } while(0);
              $285 = HEAP32[$223>>2]|0;
              (_pthread_mutex_unlock(($285|0))|0);
              $286 = HEAP32[$thread$i$i$i>>2]|0;
              $287 = HEAP32[$286>>2]|0;HEAP32[$286>>2] = (($287-1)|0);
              $288 = ($287|0)==(1);
              if ($288) {
               /* fence */;
               __ZN33__LT_alloc__arc__Arc_LT_T_GT__GT_9drop_slow17h7ac40ae25c424b1dE_1335($thread$i$i$i);
              }
             }
             $307 = HEAP32[6685]|0;
             $308 = HEAP32[$node$i$i>>2]|0;
             $switchtmp$i$i41$i$i = ($308|0)==(0|0);
             do {
              if (!($switchtmp$i$i41$i$i)) {
               $309 = HEAP32[$308>>2]|0;HEAP32[$308>>2] = (($309-1)|0);
               $310 = ($309|0)==(1);
               if (!($310)) {
                break;
               }
               /* fence */;
               __ZN33__LT_alloc__arc__Arc_LT_T_GT__GT_9drop_slow17h7ac40ae25c424b1dE_1335($node$i$i);
              }
             } while(0);
             $state$0$i$i = $307;
            }
            L203:             switch (label|0) {
             case 113: {
              __THREW__ = 0;
              invoke_viii(321,(20273|0),42,(6296|0));
              $188 = __THREW__; __THREW__ = 0;
              label = 195;
              break;
             }
             case 114: {
              __THREW__ = 0;
              invoke_vii(326,($f$i$i$i|0),0);
              $189 = __THREW__; __THREW__ = 0;
              $190 = $189&1;
              if ($190) {
               $317 = ___cxa_find_matching_catch_2()|0;
               $318 = tempRet0;
               __THREW__ = 0;
               invoke_vii(327,1,(26740|0));
               $319 = __THREW__; __THREW__ = 0;
               $320 = $319&1;
               if ($320) {
                label = 195;
                break;
               }
               $personalityslot$sroa$0$0$i$i = $317;$personalityslot$sroa$7$0$i$i = $318;
               label = 115;
               break;
              } else {
               __THREW__ = 0;
               invoke_vii(327,0,(26740|0));
               $191 = __THREW__; __THREW__ = 0;
               $192 = $191&1;
               if (!($192)) {
                label = 189;
                break;
               }
               $315 = ___cxa_find_matching_catch_2()|0;
               $316 = tempRet0;
               $personalityslot$sroa$0$0$i$i = $315;$personalityslot$sroa$7$0$i$i = $316;
               label = 115;
               break;
              }
              break;
             }
             case 117: {
              __THREW__ = 0;
              invoke_viii(321,(20315|0),47,(6308|0));
              $193 = __THREW__; __THREW__ = 0;
              label = 195;
              break;
             }
             case 122: {
              __THREW__ = 0;
              invoke_vii(219,(19995|0),94);
              $200 = __THREW__; __THREW__ = 0;
              $201 = ___cxa_find_matching_catch_2()|0;
              $202 = tempRet0;
              $lpad$phi$i$i$index = $201;$lpad$phi$i$i$index18 = $202;
              label = 185;
              break;
             }
             case 134: {
              __THREW__ = 0;
              invoke_vii(219,(19995|0),94);
              $219 = __THREW__; __THREW__ = 0;
              $220 = ___cxa_find_matching_catch_2()|0;
              $221 = tempRet0;
              $lpad$phi$index = $220;$lpad$phi$index13 = $221;
              label = 170;
              break;
             }
             case 138: {
              __THREW__ = 0;
              invoke_vii(219,(18366|0),57);
              $228 = __THREW__; __THREW__ = 0;
              label = 175;
              break;
             }
             case 143: {
              $239 = $223;
              $240 = $235&1;
              HEAP32[$_10$i$i$i42$i>>2] = $239;
              $_10$sroa_raw_idx$i$i$i$i = ((($_10$i$i$i42$i)) + 4|0);
              HEAP8[$_10$sroa_raw_idx$i$i$i$i>>0] = $240;
              $_10$sroa_raw_idx26$i$i$i$i = ((($_10$i$i$i42$i)) + 5|0);
              HEAP8[$_10$sroa_raw_idx26$i$i$i$i>>0]=0&255;HEAP8[$_10$sroa_raw_idx26$i$i$i$i+1>>0]=0>>8;
              $_10$sroa_cast27$i$i$i$i$hi = ((($_10$sroa_raw_idx26$i$i$i$i)) + 2|0);
              HEAP8[$_10$sroa_cast27$i$i$i$i$hi>>0] = 0;
              __THREW__ = 0;
              invoke_vi(329,($_10$i$i$i42$i|0));
              $241 = __THREW__; __THREW__ = 0;
              label = 175;
              break;
             }
             case 147: {
              __THREW__ = 0;
              invoke_viii(321,(20089|0),54,(6284|0));
              $251 = __THREW__; __THREW__ = 0;
              $252 = ___cxa_find_matching_catch_2()|0;
              $253 = tempRet0;
              do {
               if (!($235)) {
                __THREW__ = 0;
                $260 = (invoke_i(325)|0);
                $261 = __THREW__; __THREW__ = 0;
                $262 = $261&1;
                if ($262) {
                 label = 175;
                 break L203;
                }
                $switch2tmp$i$i$i$i$i$i$i$i$i$i$i$i = ($260|0)==(0|0);
                if ($switch2tmp$i$i$i$i$i$i$i$i$i$i$i$i) {
                 __THREW__ = 0;
                 invoke_vii(219,(18366|0),57);
                 $263 = __THREW__; __THREW__ = 0;
                 label = 175;
                 break L203;
                }
                $264 = HEAP32[$260>>2]|0;
                $switch$i$i$i$i$i$i$i$i$i$i$i = ($264|0)==(1);
                if (!($switch$i$i$i$i$i$i$i$i$i$i$i)) {
                 $265 = $260;
                 $266 = $265;
                 HEAP32[$266>>2] = 1;
                 $267 = (($265) + 4)|0;
                 $268 = $267;
                 HEAP32[$268>>2] = 0;
                 $$pre3$i$i$i$i$i$i$i$i$i$i = ((($260)) + 4|0);
                 HEAP32[$$pre3$i$i$i$i$i$i$i$i$i$i>>2] = 0;
                 break;
                }
                $$sink$in$phi$trans$insert$i$i$i$i$i$i$i$i$i$i = ((($260)) + 4|0);
                $$pre$i$i$i$i$i$i$i$i$i$i = HEAP32[$$sink$in$phi$trans$insert$i$i$i$i$i$i$i$i$i$i>>2]|0;
                $269 = ($$pre$i$i$i$i$i$i$i$i$i$i|0)==(0);
                if ($269) {
                 break;
                }
                HEAP8[$236>>0] = 1;
               }
              } while(0);
              $250 = HEAP32[$223>>2]|0;
              (_pthread_mutex_unlock(($250|0))|0);
              $lpad$thr_comm$split$lp$sink$i$i$i$index5ZZ2D = $253;$lpad$thr_comm$split$lp$sink$i$i$i$indexZZ2D = $252;
              label = 167;
              break;
             }
             case 156: {
              $270 = $223;
              $271 = $235&1;
              HEAP32[$_10$i32$i$i$i>>2] = $270;
              $_10$sroa_raw_idx$i42$i$i$i = ((($_10$i32$i$i$i)) + 4|0);
              HEAP8[$_10$sroa_raw_idx$i42$i$i$i>>0] = $271;
              $_10$sroa_raw_idx26$i43$i$i$i = ((($_10$i32$i$i$i)) + 5|0);
              HEAP8[$_10$sroa_raw_idx26$i43$i$i$i>>0]=0&255;HEAP8[$_10$sroa_raw_idx26$i43$i$i$i+1>>0]=0>>8;
              $_10$sroa_cast27$i44$i$i$i$hi = ((($_10$sroa_raw_idx26$i43$i$i$i)) + 2|0);
              HEAP8[$_10$sroa_cast27$i44$i$i$i$hi>>0] = 0;
              __THREW__ = 0;
              invoke_vi(329,($_10$i32$i$i$i|0));
              $272 = __THREW__; __THREW__ = 0;
              label = 175;
              break;
             }
             case 160: {
              __THREW__ = 0;
              invoke_vii(219,(18366|0),57);
              $276 = __THREW__; __THREW__ = 0;
              $277 = ___cxa_find_matching_catch_2()|0;
              $278 = tempRet0;
              $lpad$thr_comm$split$lp$sink$i$i$i$index5ZZ2D = $278;$lpad$thr_comm$split$lp$sink$i$i$i$indexZZ2D = $277;
              label = 167;
              break;
             }
             case 169: {
              $292 = ___cxa_find_matching_catch_2()|0;
              $293 = tempRet0;
              $lpad$phi$index = $292;$lpad$phi$index13 = $293;
              label = 170;
              break;
             }
             case 171: {
              $294 = ___cxa_find_matching_catch_2()|0;
              $295 = tempRet0;
              $lpad$thr_comm$split$lp$sink$i$i$i$index5ZZ2D = $295;$lpad$thr_comm$split$lp$sink$i$i$i$indexZZ2D = $294;
              label = 167;
              break;
             }
             case 174: {
              $303 = ___cxa_find_matching_catch_2()|0;
              $304 = tempRet0;
              $lpad$thr_comm$split$lp$sink$i$i$i$index5ZZ2D = $304;$lpad$thr_comm$split$lp$sink$i$i$i$indexZZ2D = $303;
              label = 167;
              break;
             }
             case 184: {
              $313 = ___cxa_find_matching_catch_2()|0;
              $314 = tempRet0;
              $lpad$phi$i$i$index = $313;$lpad$phi$i$i$index18 = $314;
              label = 185;
              break;
             }
            }
            if ((label|0) == 170) {
             $personalityslot$sroa$0$1104$i$i$i = $lpad$phi$index;$personalityslot$sroa$6$1102$i$i$i = $lpad$phi$index13;
             label = 135;
            }
            else if ((label|0) == 175) {
             $305 = ___cxa_find_matching_catch_2()|0;
             $306 = tempRet0;
             $lpad$thr_comm$split$lp$sink$i$i$i$index5ZZ2D = $306;$lpad$thr_comm$split$lp$sink$i$i$i$indexZZ2D = $305;
             label = 167;
            }
            else if ((label|0) == 185) {
             $personalityslot$sroa$0$0$i$i = $lpad$phi$i$i$index;$personalityslot$sroa$7$0$i$i = $lpad$phi$i$i$index18;
             label = 115;
            }
            else if ((label|0) == 189) {
             break;
            }
            else if ((label|0) == 195) {
             $330 = ___cxa_find_matching_catch_2()|0;
             $331 = tempRet0;
             $eh$lpad$body64$i$index23Z2D = $331;$eh$lpad$body64$i$indexZ2D = $330;
            }
            do {
             if ((label|0) == 167) {
              $289 = HEAP32[$thread$i$i$i>>2]|0;
              $290 = HEAP32[$289>>2]|0;HEAP32[$289>>2] = (($290-1)|0);
              $291 = ($290|0)==(1);
              if (!($291)) {
               $personalityslot$sroa$0$1104$i$i$i = $lpad$thr_comm$split$lp$sink$i$i$i$indexZZ2D;$personalityslot$sroa$6$1102$i$i$i = $lpad$thr_comm$split$lp$sink$i$i$i$index5ZZ2D;
               label = 135;
               break;
              }
              /* fence */;
              __ZN33__LT_alloc__arc__Arc_LT_T_GT__GT_9drop_slow17h7ac40ae25c424b1dE_1335($thread$i$i$i);
              $personalityslot$sroa$0$1104$i$i$i = $lpad$thr_comm$split$lp$sink$i$i$i$indexZZ2D;$personalityslot$sroa$6$1102$i$i$i = $lpad$thr_comm$split$lp$sink$i$i$i$index5ZZ2D;
              label = 135;
             }
            } while(0);
            do {
             if ((label|0) == 135) {
              $222 = HEAP32[$node$i$i>>2]|0;
              $switchtmp$i$i$i$i = ($222|0)==(0|0);
              if ($switchtmp$i$i$i$i) {
               $personalityslot$sroa$0$0$i$i = $personalityslot$sroa$0$1104$i$i$i;$personalityslot$sroa$7$0$i$i = $personalityslot$sroa$6$1102$i$i$i;
               label = 115;
               break;
              }
              $311 = HEAP32[$222>>2]|0;HEAP32[$222>>2] = (($311-1)|0);
              $312 = ($311|0)==(1);
              if (!($312)) {
               $personalityslot$sroa$0$0$i$i = $personalityslot$sroa$0$1104$i$i$i;$personalityslot$sroa$7$0$i$i = $personalityslot$sroa$6$1102$i$i$i;
               label = 115;
               break;
              }
              /* fence */;
              __ZN33__LT_alloc__arc__Arc_LT_T_GT__GT_9drop_slow17h7ac40ae25c424b1dE_1335($node$i$i);
              $personalityslot$sroa$0$0$i$i = $personalityslot$sroa$0$1104$i$i$i;$personalityslot$sroa$7$0$i$i = $personalityslot$sroa$6$1102$i$i$i;
              label = 115;
             }
            } while(0);
            if ((label|0) == 115) {
             $eh$lpad$body64$i$index23Z2D = $personalityslot$sroa$7$0$i$i;$eh$lpad$body64$i$indexZ2D = $personalityslot$sroa$0$0$i$i;
            }
            $switchtmp$i$i = ($res$sroa$0$0$i|0)==(0|0);
            if ($switchtmp$i$i) {
             $personalityslot$sroa$0$0$i = $eh$lpad$body64$i$indexZ2D;$personalityslot$sroa$5$0$i = $eh$lpad$body64$i$index23Z2D;
             ___resumeException($personalityslot$sroa$0$0$i|0);
             // unreachable;
            }
            $332 = $res$sroa$7$0$i;
            $333 = HEAP32[$332>>2]|0;
            FUNCTION_TABLE_vi[$333 & 511]($res$sroa$0$0$i);
            $334 = $res$sroa$7$0$i;
            $335 = ((($334)) + 4|0);
            $336 = HEAP32[$335>>2]|0;
            $337 = ($336|0)==(0);
            if ($337) {
             $personalityslot$sroa$0$0$i = $eh$lpad$body64$i$indexZ2D;$personalityslot$sroa$5$0$i = $eh$lpad$body64$i$index23Z2D;
             ___resumeException($personalityslot$sroa$0$0$i|0);
             // unreachable;
            }
            _free($res$sroa$0$0$i);
            $personalityslot$sroa$0$0$i = $eh$lpad$body64$i$indexZ2D;$personalityslot$sroa$5$0$i = $eh$lpad$body64$i$index23Z2D;
            ___resumeException($personalityslot$sroa$0$0$i|0);
            // unreachable;
           }
          } while(0);
          $321 = ($res$sroa$0$0$i|0)!=(0|0);
          $switchtmp$i23$i = ($res$sroa$0$0$i|0)==(0|0);
          if ($switchtmp$i23$i) {
           $$$i = $321 ? 101 : 0;
           STACKTOP = sp;return ($$$i|0);
          }
          $322 = $res$sroa$7$0$i;
          $323 = HEAP32[$322>>2]|0;
          __THREW__ = 0;
          invoke_vi($323|0,($res$sroa$0$0$i|0));
          $324 = __THREW__; __THREW__ = 0;
          $325 = $324&1;
          if ($325) {
           label = 199;
           break L1;
          }
          $326 = $res$sroa$7$0$i;
          $327 = ((($326)) + 4|0);
          $328 = HEAP32[$327>>2]|0;
          $329 = ($328|0)==(0);
          if ($329) {
           $$$i = $321 ? 101 : 0;
           STACKTOP = sp;return ($$$i|0);
          }
          _free($res$sroa$0$0$i);
          $$$i = $321 ? 101 : 0;
          STACKTOP = sp;return ($$$i|0);
         }
        } while(0);
        $eh$lpad$body$i$index33Z2D = $personalityslot$sroa$7$0105$i$i$i$i$i;$eh$lpad$body$i$indexZ2D = $personalityslot$sroa$0$0106$i$i$i$i$i;
        break L1;
       }
      } while(0);
      if ((label|0) == 39) {
       $74 = ___cxa_find_matching_catch_2()|0;
       $75 = tempRet0;
       $76 = HEAP32[$31>>2]|0;HEAP32[$31>>2] = (($76-1)|0);
       $77 = ($76|0)==(1);
       if ($77) {
        /* fence */;
        __ZN33__LT_alloc__arc__Arc_LT_T_GT__GT_9drop_slow17h7ac40ae25c424b1dE_1335($_11$sroa$4$0$$sroa_idx49$i$i);
        $personalityslot$sroa$0$015$i$i$i = $74;$personalityslot$sroa$5$014$i$i$i = $75;
       } else {
        $personalityslot$sroa$0$015$i$i$i = $74;$personalityslot$sroa$5$014$i$i$i = $75;
       }
      }
      $eh$lpad$body$i$index33Z2D = $personalityslot$sroa$5$014$i$i$i;$eh$lpad$body$i$indexZ2D = $personalityslot$sroa$0$015$i$i$i;
      break L1;
     }
    } while(0);
    $78 = ___cxa_find_matching_catch_2()|0;
    $79 = tempRet0;
    $80 = HEAP32[$thread$i$i>>2]|0;
    $81 = HEAP32[$80>>2]|0;HEAP32[$80>>2] = (($81-1)|0);
    $82 = ($81|0)==(1);
    if ($82) {
     /* fence */;
     __ZN33__LT_alloc__arc__Arc_LT_T_GT__GT_9drop_slow17h7ac40ae25c424b1dE_1335($thread$i$i);
     $eh$lpad$body$i$index33Z2D = $79;$eh$lpad$body$i$indexZ2D = $78;
    } else {
     $eh$lpad$body$i$index33Z2D = $79;$eh$lpad$body$i$indexZ2D = $78;
    }
   }
  }
 } while(0);
 if ((label|0) == 199) {
  $338 = ___cxa_find_matching_catch_2()|0;
  $339 = tempRet0;
  $eh$lpad$body$i$index33Z2D = $339;$eh$lpad$body$i$indexZ2D = $338;
 }
 $personalityslot$sroa$0$0$i = $eh$lpad$body$i$indexZ2D;$personalityslot$sroa$5$0$i = $eh$lpad$body$i$index33Z2D;
 ___resumeException($personalityslot$sroa$0$0$i|0);
 // unreachable;
 return (0)|0;
}
function __ZN10nphysics2d5utils10union_find4find17h4abf05ed08368b3fE($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($0>>>0)<($2>>>0);
 if (!($3)) {
  __ZN4core9panicking18panic_bounds_check17hd14a5808e41829e9E(13731,100,32,$0,$2);
  // unreachable;
 }
 $4 = (($1) + ($0<<3)|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ($5|0)==($0|0);
 if ($6) {
  $8 = $0;
  return ($8|0);
 }
 $7 = (__ZN10nphysics2d5utils10union_find4find17h4abf05ed08368b3fE($5,$1,$2)|0);
 HEAP32[$4>>2] = $7;
 $8 = $7;
 return ($8|0);
}
function __ZN40__LT_alloc__raw_vec__RawVec_LT_T_GT__GT_6double17h1f4ae0daeff98f24E($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $_14$sroa$0$0 = 0, $_14$sroa$5$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 4|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)==(0);
 do {
  if ($3) {
   $8 = (_malloc(4)|0);
   $_14$sroa$0$0 = 4;$_14$sroa$5$0 = $8;
  } else {
   $4 = $2 << 1;
   $5 = ($4|0)<(0);
   if ($5) {
    __ZN4core9panicking5panic17ha7507e8e32961bfeE(6432);
    // unreachable;
   } else {
    $6 = HEAP32[$0>>2]|0;
    $7 = (_realloc($6,$4)|0);
    $_14$sroa$0$0 = $4;$_14$sroa$5$0 = $7;
    break;
   }
  }
 } while(0);
 $9 = ($_14$sroa$5$0|0)==(0|0);
 if ($9) {
  __ZN5alloc3oom3oom17hb253cf665793f59eE();
  // unreachable;
 } else {
  HEAP32[$0>>2] = $_14$sroa$5$0;
  HEAP32[$1>>2] = $_14$sroa$0$0;
  return;
 }
}
function __ZN4core6result13unwrap_failed17hc81d4112c1ba050aE($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $_12 = 0, $_6$sroa$0$0$$sroa_idx$i = 0, $_7 = 0, $error = 0, $msg = 0;
 var $not$$i$i$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $msg = sp + 56|0;
 $error = sp + 40|0;
 $_7 = sp + 16|0;
 $_12 = sp;
 HEAP32[$msg>>2] = 13978;
 $1 = ((($msg)) + 4|0);
 HEAP32[$1>>2] = 43;
 ;HEAP32[$error>>2]=HEAP32[$0>>2]|0;HEAP32[$error+4>>2]=HEAP32[$0+4>>2]|0;HEAP32[$error+8>>2]=HEAP32[$0+8>>2]|0;HEAP32[$error+12>>2]=HEAP32[$0+12>>2]|0;
 $2 = $msg;
 $3 = $error;
 HEAP32[$_12>>2] = $2;
 $4 = ((($_12)) + 4|0);
 HEAP32[$4>>2] = (330);
 $5 = ((($_12)) + 8|0);
 HEAP32[$5>>2] = $3;
 $6 = ((($_12)) + 12|0);
 HEAP32[$6>>2] = (331);
 HEAP32[$_7>>2] = (6520);
 $7 = ((($_7)) + 4|0);
 HEAP32[$7>>2] = 2;
 $_6$sroa$0$0$$sroa_idx$i = ((($_7)) + 8|0);
 HEAP32[$_6$sroa$0$0$$sroa_idx$i>>2] = 0;
 $8 = ((($_7)) + 16|0);
 HEAP32[$8>>2] = $_12;
 $9 = ((($_7)) + 20|0);
 HEAP32[$9>>2] = 2;
 __THREW__ = 0;
 invoke_viiii(272,($_7|0),(22324|0),100,799);
 $10 = __THREW__; __THREW__ = 0;
 $11 = ___cxa_find_matching_catch_2()|0;
 $12 = tempRet0;
 $13 = ((($error)) + 4|0);
 $14 = HEAP32[$13>>2]|0;
 $not$$i$i$i$i$i = ($14|0)==(0);
 if ($not$$i$i$i$i$i) {
  ___resumeException($11|0);
  // unreachable;
 }
 $15 = HEAP32[$error>>2]|0;
 _free($15);
 ___resumeException($11|0);
 // unreachable;
}
function __ZN55__LT__RF__u27_a_u20_T_u20_as_u20_core__fmt__Display_GT_3fmt17h0070a87612600aa5E_961($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[$0>>2]|0;
 $3 = ((($0)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (__ZN4core3fmt9Formatter3pad17hd3e8d63fceae72f6E($1,$2,$4)|0);
 return ($5|0);
}
function __ZN59__LT__RF__u27_a_u20_str_u20_as_u20_webplatform__Interop_GT_6as_int17h18f0c7625a65b539E($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$arith = 0, $$idx$i = 0, $$idx$val$i = 0, $$overflow = 0, $$pre = 0, $$pre$i = 0, $$pre$i$i$i = 0, $$pre35 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0;
 var $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0;
 var $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $7 = 0, $8 = 0, $9 = 0, $_10$i = 0, $_14$i$sroa$4$0$$sroa_idx24 = 0, $_14$i$sroa$5$0$$sroa_idx26 = 0, $_9$i$i$sroa$0$0$copyload = 0, $_9$i$i$sroa$4$0$copyload = 0, $e$sroa$4$0$$sroa_idx49$i = 0, $e$sroa$5$0$$sroa_idx51$i = 0, $e$sroa$6$0$$sroa_idx53$i = 0, $local_len$sroa$5$0$lcssa$i$i$i$i$i = 0, $not$$i$i$i$i$i$i = 0;
 var $not$$i$i$i$i$i$i$i = 0, $not$$i$i$i$i15$i$i$i = 0, $ptr$0$i$i$i$i = 0, $ptr$0$i$i$i$i$i$i = 0, $ptr$0$i$i$i$i$i$i37 = 0, $self$sroa$0$sroa$0$0$i$i$i = 0, $self$sroa$0$sroa$10$0$i$i$i = 0, $v$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $v$i$i = sp + 16|0;
 $_10$i = sp;
 $3 = ($1|0)<(0);
 if ($3) {
  __ZN4core9panicking5panic17ha7507e8e32961bfeE(6432);
  // unreachable;
 }
 $4 = ($1|0)==(0);
 do {
  if ($4) {
   $local_len$sroa$5$0$lcssa$i$i$i$i$i = 0;$ptr$0$i$i$i$i$i$i37 = (1);
  } else {
   $5 = (_malloc($1)|0);
   $6 = ($5|0)==(0|0);
   if ($6) {
    __ZN5alloc3oom3oom17hb253cf665793f59eE();
    // unreachable;
   } else {
    $ptr$0$i$i$i$i$i$i = $5;
    _memcpy(($ptr$0$i$i$i$i$i$i|0),($0|0),($1|0))|0;
    $local_len$sroa$5$0$lcssa$i$i$i$i$i = $1;$ptr$0$i$i$i$i$i$i37 = $ptr$0$i$i$i$i$i$i;
    break;
   }
  }
 } while(0);
 $7 = (_memchr($ptr$0$i$i$i$i$i$i37,0,$local_len$sroa$5$0$lcssa$i$i$i$i$i)|0);
 $8 = ($7|0)==(0|0);
 if (!($8)) {
  $44 = $7;
  $45 = $ptr$0$i$i$i$i$i$i37;
  $46 = (($44) - ($45))|0;
  HEAP32[$_10$i>>2] = $46;
  $e$sroa$4$0$$sroa_idx49$i = ((($_10$i)) + 4|0);
  HEAP32[$e$sroa$4$0$$sroa_idx49$i>>2] = $45;
  $e$sroa$5$0$$sroa_idx51$i = ((($_10$i)) + 8|0);
  HEAP32[$e$sroa$5$0$$sroa_idx51$i>>2] = $1;
  $e$sroa$6$0$$sroa_idx53$i = ((($_10$i)) + 12|0);
  HEAP32[$e$sroa$6$0$$sroa_idx53$i>>2] = $local_len$sroa$5$0$lcssa$i$i$i$i$i;
  __ZN4core6result13unwrap_failed17hb8469db32514b7f1E($_10$i);
  // unreachable;
 }
 HEAP32[$v$i$i>>2] = $ptr$0$i$i$i$i$i$i37;
 $_14$i$sroa$4$0$$sroa_idx24 = ((($v$i$i)) + 4|0);
 HEAP32[$_14$i$sroa$4$0$$sroa_idx24>>2] = $1;
 $_14$i$sroa$5$0$$sroa_idx26 = ((($v$i$i)) + 8|0);
 HEAP32[$_14$i$sroa$5$0$$sroa_idx26>>2] = $local_len$sroa$5$0$lcssa$i$i$i$i$i;
 $9 = ($local_len$sroa$5$0$lcssa$i$i$i$i$i|0)==($1|0);
 do {
  if ($9) {
   $$arith = (($1) + 1)|0;
   $$overflow = ($1>>>0)>(4294967294);
   if ($$overflow) {
    __THREW__ = 0;
    invoke_vii(219,(19331|0),17);
    $10 = __THREW__; __THREW__ = 0;
    break;
   }
   $11 = ($$arith|0)<(0);
   if ($11) {
    __THREW__ = 0;
    invoke_vi(220,(6432|0));
    $12 = __THREW__; __THREW__ = 0;
    break;
   }
   if ($4) {
    $13 = (_malloc($$arith)|0);
    $ptr$0$i$i$i$i = $13;
   } else {
    $14 = (_realloc($ptr$0$i$i$i$i$i$i37,$$arith)|0);
    $ptr$0$i$i$i$i = $14;
   }
   $15 = ($ptr$0$i$i$i$i|0)==(0|0);
   if ($15) {
    __THREW__ = 0;
    invoke_v(210);
    $16 = __THREW__; __THREW__ = 0;
    break;
   } else {
    HEAP32[$v$i$i>>2] = $ptr$0$i$i$i$i;
    HEAP32[$_14$i$sroa$4$0$$sroa_idx24>>2] = $$arith;
    $$pre = HEAP32[$_14$i$sroa$5$0$$sroa_idx26>>2]|0;
    $17 = $$pre;$19 = $$arith;$64 = $ptr$0$i$i$i$i;
    label = 19;
    break;
   }
  } else {
   $17 = $local_len$sroa$5$0$lcssa$i$i$i$i$i;$19 = $1;$64 = $ptr$0$i$i$i$i$i$i37;
   label = 19;
  }
 } while(0);
 do {
  if ((label|0) == 19) {
   $18 = ($17|0)==($19|0);
   if ($18) {
    __THREW__ = 0;
    invoke_vi(332,($v$i$i|0));
    $21 = __THREW__; __THREW__ = 0;
    $22 = $21&1;
    if ($22) {
     break;
    }
    $$pre$i$i$i = HEAP32[$_14$i$sroa$5$0$$sroa_idx26>>2]|0;
    $$pre35 = HEAP32[$v$i$i>>2]|0;
    $24 = $$pre35;$25 = $$pre$i$i$i;
   } else {
    $24 = $64;$25 = $17;
   }
   $23 = (($24) + ($25)|0);
   HEAP8[$23>>0] = 0;
   $26 = (($25) + 1)|0;
   HEAP32[$_14$i$sroa$5$0$$sroa_idx26>>2] = $26;
   $_9$i$i$sroa$0$0$copyload = HEAP32[$v$i$i>>2]|0;
   $_9$i$i$sroa$4$0$copyload = HEAP32[$_14$i$sroa$4$0$$sroa_idx24>>2]|0;
   $27 = ($_9$i$i$sroa$4$0$copyload>>>0)<($26>>>0);
   L34: do {
    if ($27) {
     __THREW__ = 0;
     invoke_vi(220,(6412|0));
     $28 = __THREW__; __THREW__ = 0;
    } else {
     $29 = ($26|0)==(0);
     do {
      if ($29) {
       $not$$i$i$i$i$i$i$i = ($_9$i$i$sroa$4$0$copyload|0)==(0);
       if ($not$$i$i$i$i$i$i$i) {
        $self$sroa$0$sroa$0$0$i$i$i = 1;$self$sroa$0$sroa$10$0$i$i$i = 0;
       } else {
        $30 = $_9$i$i$sroa$0$0$copyload;
        _free($30);
        $self$sroa$0$sroa$0$0$i$i$i = 1;$self$sroa$0$sroa$10$0$i$i$i = 0;
       }
      } else {
       $31 = ($_9$i$i$sroa$4$0$copyload|0)==($26|0);
       if ($31) {
        $self$sroa$0$sroa$0$0$i$i$i = $_9$i$i$sroa$0$0$copyload;$self$sroa$0$sroa$10$0$i$i$i = $26;
       } else {
        $32 = $_9$i$i$sroa$0$0$copyload;
        $33 = (_realloc($32,$26)|0);
        $34 = ($33|0)==(0|0);
        if ($34) {
         __THREW__ = 0;
         invoke_v(210);
         $35 = __THREW__; __THREW__ = 0;
         break L34;
        } else {
         $36 = $33;
         $self$sroa$0$sroa$0$0$i$i$i = $36;$self$sroa$0$sroa$10$0$i$i$i = $26;
         break;
        }
       }
      }
     } while(0);
     $47 = ((($2)) + 8|0);
     $48 = HEAP32[$47>>2]|0;
     $$idx$i = ((($2)) + 4|0);
     $$idx$val$i = HEAP32[$$idx$i>>2]|0;
     $49 = ($48|0)==($$idx$val$i|0);
     if (!($49)) {
      $57 = $48;
      $55 = HEAP32[$2>>2]|0;
      $56 = (($55) + ($57<<3)|0);
      $58 = $56;
      $59 = $58;
      HEAP32[$59>>2] = $self$sroa$0$sroa$0$0$i$i$i;
      $60 = (($58) + 4)|0;
      $61 = $60;
      HEAP32[$61>>2] = $self$sroa$0$sroa$10$0$i$i$i;
      $62 = HEAP32[$47>>2]|0;
      $63 = (($62) + 1)|0;
      HEAP32[$47>>2] = $63;
      STACKTOP = sp;return ($self$sroa$0$sroa$0$0$i$i$i|0);
     }
     __THREW__ = 0;
     invoke_vi(333,($2|0));
     $50 = __THREW__; __THREW__ = 0;
     $51 = $50&1;
     if (!($51)) {
      $$pre$i = HEAP32[$47>>2]|0;
      $57 = $$pre$i;
      $55 = HEAP32[$2>>2]|0;
      $56 = (($55) + ($57<<3)|0);
      $58 = $56;
      $59 = $58;
      HEAP32[$59>>2] = $self$sroa$0$sroa$0$0$i$i$i;
      $60 = (($58) + 4)|0;
      $61 = $60;
      HEAP32[$61>>2] = $self$sroa$0$sroa$10$0$i$i$i;
      $62 = HEAP32[$47>>2]|0;
      $63 = (($62) + 1)|0;
      HEAP32[$47>>2] = $63;
      STACKTOP = sp;return ($self$sroa$0$sroa$0$0$i$i$i|0);
     }
     $43 = ___cxa_find_matching_catch_2()|0;
     $52 = tempRet0;
     $53 = $self$sroa$0$sroa$0$0$i$i$i;
     HEAP8[$53>>0] = 0;
     $54 = ($self$sroa$0$sroa$10$0$i$i$i|0)==(0);
     if ($54) {
      ___resumeException($43|0);
      // unreachable;
     }
     _free($53);
     ___resumeException($43|0);
     // unreachable;
    }
   } while(0);
   $37 = ___cxa_find_matching_catch_2()|0;
   $38 = tempRet0;
   $not$$i$i$i$i15$i$i$i = ($_9$i$i$sroa$4$0$copyload|0)==(0);
   if ($not$$i$i$i$i15$i$i$i) {
    ___resumeException($37|0);
    // unreachable;
   }
   $39 = $_9$i$i$sroa$0$0$copyload;
   _free($39);
   ___resumeException($37|0);
   // unreachable;
  }
 } while(0);
 $20 = ___cxa_find_matching_catch_2()|0;
 $40 = tempRet0;
 $41 = HEAP32[$_14$i$sroa$4$0$$sroa_idx24>>2]|0;
 $not$$i$i$i$i$i$i = ($41|0)==(0);
 if ($not$$i$i$i$i$i$i) {
  ___resumeException($20|0);
  // unreachable;
 }
 $42 = HEAP32[$v$i$i>>2]|0;
 _free($42);
 ___resumeException($20|0);
 // unreachable;
 return (0)|0;
}
function __ZN4core6result13unwrap_failed17hb8469db32514b7f1E($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $_12 = 0, $_6$sroa$0$0$$sroa_idx$i = 0, $_7 = 0, $error = 0;
 var $msg = 0, $not$$i$i$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $msg = sp + 56|0;
 $error = sp + 40|0;
 $_7 = sp + 16|0;
 $_12 = sp;
 HEAP32[$msg>>2] = 14120;
 $1 = ((($msg)) + 4|0);
 HEAP32[$1>>2] = 43;
 ;HEAP32[$error>>2]=HEAP32[$0>>2]|0;HEAP32[$error+4>>2]=HEAP32[$0+4>>2]|0;HEAP32[$error+8>>2]=HEAP32[$0+8>>2]|0;HEAP32[$error+12>>2]=HEAP32[$0+12>>2]|0;
 $2 = $msg;
 $3 = $error;
 HEAP32[$_12>>2] = $2;
 $4 = ((($_12)) + 4|0);
 HEAP32[$4>>2] = (334);
 $5 = ((($_12)) + 8|0);
 HEAP32[$5>>2] = $3;
 $6 = ((($_12)) + 12|0);
 HEAP32[$6>>2] = (335);
 HEAP32[$_7>>2] = (6520);
 $7 = ((($_7)) + 4|0);
 HEAP32[$7>>2] = 2;
 $_6$sroa$0$0$$sroa_idx$i = ((($_7)) + 8|0);
 HEAP32[$_6$sroa$0$0$$sroa_idx$i>>2] = 0;
 $8 = ((($_7)) + 16|0);
 HEAP32[$8>>2] = $_12;
 $9 = ((($_7)) + 20|0);
 HEAP32[$9>>2] = 2;
 __THREW__ = 0;
 invoke_viiii(272,($_7|0),(22324|0),100,799);
 $10 = __THREW__; __THREW__ = 0;
 $11 = ___cxa_find_matching_catch_2()|0;
 $12 = tempRet0;
 $13 = ((($error)) + 8|0);
 $14 = HEAP32[$13>>2]|0;
 $not$$i$i$i$i$i = ($14|0)==(0);
 if ($not$$i$i$i$i$i) {
  ___resumeException($11|0);
  // unreachable;
 }
 $15 = ((($error)) + 4|0);
 $16 = HEAP32[$15>>2]|0;
 _free($16);
 ___resumeException($11|0);
 // unreachable;
}
function __ZN40__LT_alloc__raw_vec__RawVec_LT_T_GT__GT_6double17h00ec6d54a8cde794E($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $_14$sroa$0$0 = 0, $_14$sroa$5$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 4|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)==(0);
 do {
  if ($3) {
   $9 = (_malloc(32)|0);
   $_14$sroa$0$0 = 4;$_14$sroa$5$0 = $9;
  } else {
   $4 = $2 << 4;
   $5 = ($4|0)<(0);
   if ($5) {
    __ZN4core9panicking5panic17ha7507e8e32961bfeE(6432);
    // unreachable;
   } else {
    $6 = $2 << 1;
    $7 = HEAP32[$0>>2]|0;
    $8 = (_realloc($7,$4)|0);
    $_14$sroa$0$0 = $6;$_14$sroa$5$0 = $8;
    break;
   }
  }
 } while(0);
 $10 = ($_14$sroa$5$0|0)==(0|0);
 if ($10) {
  __ZN5alloc3oom3oom17hb253cf665793f59eE();
  // unreachable;
 } else {
  HEAP32[$0>>2] = $_14$sroa$5$0;
  HEAP32[$1>>2] = $_14$sroa$0$0;
  return;
 }
}
function __ZN55__LT__RF__u27_a_u20_T_u20_as_u20_core__fmt__Display_GT_3fmt17h0070a87612600aa5E_970($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[$0>>2]|0;
 $3 = ((($0)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (__ZN4core3fmt9Formatter3pad17hd3e8d63fceae72f6E($1,$2,$4)|0);
 return ($5|0);
}
function __ZN11webplatform8HtmlNode12prop_set_str17hebad5dd26c6e20aaE($$0$0$val,$0,$1,$2,$3) {
 $$0$0$val = $$0$0$val|0;
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$idx$val$i = 0, $$idx$val$i$i$i$i = 0, $$idx$val$i$i$i$i15 = 0, $$idx$val$i11 = 0, $$idx5$val$i = 0, $$idx5$val$i13 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $arena = 0, $not$$i$i$i$i = 0, $not$$i$i$i$i19 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $arena = sp;
 HEAP32[$arena>>2] = 1;
 $4 = ((($arena)) + 4|0);
 HEAP32[$4>>2] = 0;
 $5 = ((($arena)) + 8|0);
 HEAP32[$5>>2] = 0;
 __THREW__ = 0;
 $6 = (invoke_iiii(285,($0|0),($1|0),($arena|0))|0);
 $7 = __THREW__; __THREW__ = 0;
 $8 = $7&1;
 if (!($8)) {
  __THREW__ = 0;
  $10 = (invoke_iiii(285,($2|0),($3|0),($arena|0))|0);
  $11 = __THREW__; __THREW__ = 0;
  $12 = $11&1;
  if (!($12)) {
   $13 = _emscripten_asm_const_iiii(8, ($$0$0$val|0), ($6|0), ($10|0))|0;
   $$idx$val$i11 = HEAP32[$arena>>2]|0;
   $$idx5$val$i13 = HEAP32[$5>>2]|0;
   $14 = (($$idx$val$i11) + ($$idx5$val$i13<<3)|0);
   $15 = ($$idx5$val$i13|0)==(0);
   if (!($15)) {
    $16 = $$idx$val$i11;
    while(1) {
     $$idx$val$i$i$i$i15 = HEAP32[$16>>2]|0;
     HEAP8[$$idx$val$i$i$i$i15>>0] = 0;
     $17 = ((($16)) + 4|0);
     $18 = HEAP32[$17>>2]|0;
     $19 = ($18|0)==(0);
     if (!($19)) {
      $20 = HEAP32[$16>>2]|0;
      _free($20);
     }
     $21 = ((($16)) + 8|0);
     $22 = ($21|0)==($14|0);
     if ($22) {
      break;
     } else {
      $16 = $21;
     }
    }
   }
   $23 = HEAP32[$4>>2]|0;
   $not$$i$i$i$i19 = ($23|0)==(0);
   if ($not$$i$i$i$i19) {
    STACKTOP = sp;return;
   }
   _free($$idx$val$i11);
   STACKTOP = sp;return;
  }
 }
 $9 = ___cxa_find_matching_catch_2()|0;
 $24 = tempRet0;
 $$idx$val$i = HEAP32[$arena>>2]|0;
 $$idx5$val$i = HEAP32[$5>>2]|0;
 $25 = (($$idx$val$i) + ($$idx5$val$i<<3)|0);
 $26 = ($$idx5$val$i|0)==(0);
 if (!($26)) {
  $27 = $$idx$val$i;
  while(1) {
   $$idx$val$i$i$i$i = HEAP32[$27>>2]|0;
   HEAP8[$$idx$val$i$i$i$i>>0] = 0;
   $28 = ((($27)) + 4|0);
   $29 = HEAP32[$28>>2]|0;
   $30 = ($29|0)==(0);
   if (!($30)) {
    $31 = HEAP32[$27>>2]|0;
    _free($31);
   }
   $32 = ((($27)) + 8|0);
   $33 = ($32|0)==($25|0);
   if ($33) {
    break;
   } else {
    $27 = $32;
   }
  }
 }
 $34 = HEAP32[$4>>2]|0;
 $not$$i$i$i$i = ($34|0)==(0);
 if ($not$$i$i$i$i) {
  ___resumeException($9|0);
  // unreachable;
 }
 _free($$idx$val$i);
 ___resumeException($9|0);
 // unreachable;
}
function __ZN11webplatform8HtmlNode9set_style17hac26dda67a9d1b10E($$0$0$val,$0,$1) {
 $$0$0$val = $$0$0$val|0;
 $0 = $0|0;
 $1 = $1|0;
 var $$idx$val$i = 0, $$idx$val$i$i$i$i = 0, $$idx$val$i$i$i$i15 = 0, $$idx$val$i11 = 0, $$idx5$val$i = 0, $$idx5$val$i13 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $arena = 0, $not$$i$i$i$i = 0, $not$$i$i$i$i19 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $arena = sp;
 HEAP32[$arena>>2] = 1;
 $2 = ((($arena)) + 4|0);
 HEAP32[$2>>2] = 0;
 $3 = ((($arena)) + 8|0);
 HEAP32[$3>>2] = 0;
 __THREW__ = 0;
 $4 = (invoke_iiii(285,($0|0),($1|0),($arena|0))|0);
 $5 = __THREW__; __THREW__ = 0;
 $6 = $5&1;
 if ($6) {
  $7 = ___cxa_find_matching_catch_2()|0;
  $19 = tempRet0;
  $$idx$val$i = HEAP32[$arena>>2]|0;
  $$idx5$val$i = HEAP32[$3>>2]|0;
  $20 = (($$idx$val$i) + ($$idx5$val$i<<3)|0);
  $21 = ($$idx5$val$i|0)==(0);
  if (!($21)) {
   $22 = $$idx$val$i;
   while(1) {
    $$idx$val$i$i$i$i = HEAP32[$22>>2]|0;
    HEAP8[$$idx$val$i$i$i$i>>0] = 0;
    $23 = ((($22)) + 4|0);
    $24 = HEAP32[$23>>2]|0;
    $25 = ($24|0)==(0);
    if (!($25)) {
     $26 = HEAP32[$22>>2]|0;
     _free($26);
    }
    $27 = ((($22)) + 8|0);
    $28 = ($27|0)==($20|0);
    if ($28) {
     break;
    } else {
     $22 = $27;
    }
   }
  }
  $29 = HEAP32[$2>>2]|0;
  $not$$i$i$i$i = ($29|0)==(0);
  if ($not$$i$i$i$i) {
   ___resumeException($7|0);
   // unreachable;
  }
  _free($$idx$val$i);
  ___resumeException($7|0);
  // unreachable;
 } else {
  $8 = _emscripten_asm_const_iii(9, ($$0$0$val|0), ($4|0))|0;
  $$idx$val$i11 = HEAP32[$arena>>2]|0;
  $$idx5$val$i13 = HEAP32[$3>>2]|0;
  $9 = (($$idx$val$i11) + ($$idx5$val$i13<<3)|0);
  $10 = ($$idx5$val$i13|0)==(0);
  if (!($10)) {
   $11 = $$idx$val$i11;
   while(1) {
    $$idx$val$i$i$i$i15 = HEAP32[$11>>2]|0;
    HEAP8[$$idx$val$i$i$i$i15>>0] = 0;
    $12 = ((($11)) + 4|0);
    $13 = HEAP32[$12>>2]|0;
    $14 = ($13|0)==(0);
    if (!($14)) {
     $15 = HEAP32[$11>>2]|0;
     _free($15);
    }
    $16 = ((($11)) + 8|0);
    $17 = ($16|0)==($9|0);
    if ($17) {
     break;
    } else {
     $11 = $16;
    }
   }
  }
  $18 = HEAP32[$2>>2]|0;
  $not$$i$i$i$i19 = ($18|0)==(0);
  if ($not$$i$i$i$i19) {
   STACKTOP = sp;return;
  }
  _free($$idx$val$i11);
  STACKTOP = sp;return;
 }
}
function __ZN11webplatform8Document13element_query17h56233c3923e1d99aE($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$idx$val$i = 0, $$idx$val$i$i$i$i = 0, $$idx$val$i$i$i$i17 = 0, $$idx$val$i13 = 0, $$idx5$val$i = 0, $$idx5$val$i15 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $arena = 0, $not$$i$i$i$i = 0, $not$$i$i$i$i21 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $arena = sp;
 HEAP32[$arena>>2] = 1;
 $4 = ((($arena)) + 4|0);
 HEAP32[$4>>2] = 0;
 $5 = ((($arena)) + 8|0);
 HEAP32[$5>>2] = 0;
 __THREW__ = 0;
 $6 = (invoke_iiii(285,($2|0),($3|0),($arena|0))|0);
 $7 = __THREW__; __THREW__ = 0;
 $8 = $7&1;
 if ($8) {
  $9 = ___cxa_find_matching_catch_2()|0;
  $24 = tempRet0;
  $$idx$val$i = HEAP32[$arena>>2]|0;
  $$idx5$val$i = HEAP32[$5>>2]|0;
  $25 = (($$idx$val$i) + ($$idx5$val$i<<3)|0);
  $26 = ($$idx5$val$i|0)==(0);
  if (!($26)) {
   $27 = $$idx$val$i;
   while(1) {
    $$idx$val$i$i$i$i = HEAP32[$27>>2]|0;
    HEAP8[$$idx$val$i$i$i$i>>0] = 0;
    $28 = ((($27)) + 4|0);
    $29 = HEAP32[$28>>2]|0;
    $30 = ($29|0)==(0);
    if (!($30)) {
     $31 = HEAP32[$27>>2]|0;
     _free($31);
    }
    $32 = ((($27)) + 8|0);
    $33 = ($32|0)==($25|0);
    if ($33) {
     break;
    } else {
     $27 = $32;
    }
   }
  }
  $34 = HEAP32[$4>>2]|0;
  $not$$i$i$i$i = ($34|0)==(0);
  if ($not$$i$i$i$i) {
   ___resumeException($9|0);
   // unreachable;
  }
  _free($$idx$val$i);
  ___resumeException($9|0);
  // unreachable;
 }
 $10 = _emscripten_asm_const_ii(10, ($6|0))|0;
 $$idx$val$i13 = HEAP32[$arena>>2]|0;
 $$idx5$val$i15 = HEAP32[$5>>2]|0;
 $11 = (($$idx$val$i13) + ($$idx5$val$i15<<3)|0);
 $12 = ($$idx5$val$i15|0)==(0);
 if (!($12)) {
  $13 = $$idx$val$i13;
  while(1) {
   $$idx$val$i$i$i$i17 = HEAP32[$13>>2]|0;
   HEAP8[$$idx$val$i$i$i$i17>>0] = 0;
   $14 = ((($13)) + 4|0);
   $15 = HEAP32[$14>>2]|0;
   $16 = ($15|0)==(0);
   if (!($16)) {
    $17 = HEAP32[$13>>2]|0;
    _free($17);
   }
   $18 = ((($13)) + 8|0);
   $19 = ($18|0)==($11|0);
   if ($19) {
    break;
   } else {
    $13 = $18;
   }
  }
 }
 $20 = HEAP32[$4>>2]|0;
 $not$$i$i$i$i21 = ($20|0)==(0);
 if (!($not$$i$i$i$i21)) {
  _free($$idx$val$i13);
 }
 $21 = ($10|0)<(0);
 if ($21) {
  HEAP32[$0>>2] = 0;
  STACKTOP = sp;return;
 } else {
  HEAP32[$0>>2] = 1;
  $22 = ((($0)) + 4|0);
  HEAP32[$22>>2] = $10;
  $23 = ((($0)) + 8|0);
  HEAP32[$23>>2] = $1;
  STACKTOP = sp;return;
 }
}
function __ZN11webplatform9leavemebe17hf7606b14a8babc2cE() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 _emscripten_pause_main_loop();
 return;
}
function __ZN54__LT_pace_files__Error_u20_as_u20_core__fmt__Debug_GT_3fmt17hc43c03545dc8a637E($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$pre$i104 = 0, $$pre$i123 = 0, $$pre$i47 = 0, $$pre$i66 = 0, $$pre$i85 = 0, $$repack$i115 = 0, $$repack$i39 = 0, $$repack$i58 = 0, $$repack$i77 = 0, $$repack$i96 = 0, $$unpack$i113 = 0, $$unpack$i132 = 0, $$unpack$i56 = 0, $$unpack$i75 = 0, $$unpack$i94 = 0, $$unpack$pre$i117 = 0, $$unpack$pre$i41 = 0, $$unpack$pre$i60 = 0, $$unpack$pre$i79 = 0, $$unpack$pre$i98 = 0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0;
 var $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0;
 var $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0;
 var $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0;
 var $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0;
 var $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0;
 var $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $_0$sroa$0$0 = 0, $_0$sroa$0$0$i$i111 = 0, $_0$sroa$0$0$i$i130 = 0;
 var $_0$sroa$0$0$i$i54 = 0, $_0$sroa$0$0$i$i73 = 0, $_0$sroa$0$0$i$i92 = 0, $_22 = 0, $_33 = 0, $_44 = 0, $_70 = 0, $_81 = 0, $_87 = 0, $builder = 0, $builder1 = 0, $builder2 = 0, $builder6 = 0, $builder7 = 0, $not$switch4$i$i$i$i102 = 0, $not$switch4$i$i$i$i121 = 0, $not$switch4$i$i$i$i45 = 0, $not$switch4$i$i$i$i64 = 0, $not$switch4$i$i$i$i83 = 0, $not$switch4$i19$i$i$i108 = 0;
 var $not$switch4$i19$i$i$i127 = 0, $not$switch4$i19$i$i$i51 = 0, $not$switch4$i19$i$i$i70 = 0, $not$switch4$i19$i$i$i89 = 0, $or$cond = 0, $or$cond138 = 0, $or$cond140 = 0, $or$cond142 = 0, $or$cond144 = 0, $switch4$i$i118 = 0, $switch4$i$i42 = 0, $switch4$i$i61 = 0, $switch4$i$i80 = 0, $switch4$i$i99 = 0, $trunc = 0, $trunc$clear = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(112|0);
 $builder = sp + 64|0;
 $_22 = sp + 100|0;
 $builder1 = sp + 48|0;
 $_33 = sp + 96|0;
 $builder2 = sp + 32|0;
 $_44 = sp + 92|0;
 $builder6 = sp + 16|0;
 $_70 = sp + 88|0;
 $builder7 = sp;
 $_81 = sp + 84|0;
 $_87 = sp + 80|0;
 $trunc = HEAP8[$0>>0]|0;
 $trunc$clear = $trunc & 7;
 switch ($trunc$clear<<24>>24) {
 case 0:  {
  $23 = ((($0)) + 4|0);
  $24 = ((($1)) + 28|0);
  $25 = HEAP32[$24>>2]|0;
  $26 = ((($1)) + 32|0);
  $27 = HEAP32[$26>>2]|0;
  $28 = ((($27)) + 12|0);
  $29 = HEAP32[$28>>2]|0;
  $30 = (FUNCTION_TABLE_iiii[$29 & 511]($25,14878,2)|0);
  HEAP32[$builder>>2] = $1;
  $$repack$i39 = ((($builder)) + 4|0);
  HEAP8[$$repack$i39>>0] = $30;
  $31 = ((($builder)) + 8|0);
  HEAP32[$31>>2] = 0;
  $32 = ((($builder)) + 12|0);
  HEAP8[$32>>0] = 0;
  HEAP32[$_22>>2] = $23;
  (__ZN4core3fmt8builders10DebugTuple5field17h7aa2b38aabb11517E($builder,$_22,1120)|0);
  $33 = HEAP32[$31>>2]|0;
  $34 = ($33|0)==(0);
  $$unpack$pre$i41 = HEAP8[$$repack$i39>>0]|0;
  if ($34) {
   $$unpack$i56 = $$unpack$pre$i41;
  } else {
   $switch4$i$i42 = ($$unpack$pre$i41<<24>>24)==(0);
   do {
    if ($switch4$i$i42) {
     $35 = HEAP32[$builder>>2]|0;
     $36 = HEAP32[$35>>2]|0;
     $37 = $36 & 4;
     $38 = ($37|0)==(0);
     if ($38) {
      $46 = $33;
     } else {
      $39 = ((($35)) + 28|0);
      $40 = HEAP32[$39>>2]|0;
      $41 = ((($35)) + 32|0);
      $42 = HEAP32[$41>>2]|0;
      $43 = ((($42)) + 12|0);
      $44 = HEAP32[$43>>2]|0;
      $45 = (FUNCTION_TABLE_iiii[$44 & 511]($40,24042,1)|0);
      $not$switch4$i$i$i$i45 = ($45<<24>>24)==(0);
      if (!($not$switch4$i$i$i$i45)) {
       $_0$sroa$0$0$i$i54 = 1;
       break;
      }
      $$pre$i47 = HEAP32[$31>>2]|0;
      $46 = $$pre$i47;
     }
     $47 = ($46|0)!=(1);
     $48 = HEAP8[$32>>0]|0;
     $49 = ($48<<24>>24)==(0);
     $or$cond = $47 | $49;
     if (!($or$cond)) {
      $50 = HEAP32[$builder>>2]|0;
      $51 = ((($50)) + 28|0);
      $52 = HEAP32[$51>>2]|0;
      $53 = ((($50)) + 32|0);
      $54 = HEAP32[$53>>2]|0;
      $55 = ((($54)) + 12|0);
      $56 = HEAP32[$55>>2]|0;
      $57 = (FUNCTION_TABLE_iiii[$56 & 511]($52,18783,1)|0);
      $not$switch4$i19$i$i$i51 = ($57<<24>>24)==(0);
      if (!($not$switch4$i19$i$i$i51)) {
       $_0$sroa$0$0$i$i54 = 1;
       break;
      }
     }
     $58 = HEAP32[$builder>>2]|0;
     $59 = ((($58)) + 28|0);
     $60 = HEAP32[$59>>2]|0;
     $61 = ((($58)) + 32|0);
     $62 = HEAP32[$61>>2]|0;
     $63 = ((($62)) + 12|0);
     $64 = HEAP32[$63>>2]|0;
     $65 = (FUNCTION_TABLE_iiii[$64 & 511]($60,24043,1)|0);
     $_0$sroa$0$0$i$i54 = $65;
    } else {
     $_0$sroa$0$0$i$i54 = 1;
    }
   } while(0);
   HEAP8[$$repack$i39>>0] = $_0$sroa$0$0$i$i54;
   $$unpack$i56 = $_0$sroa$0$0$i$i54;
  }
  $_0$sroa$0$0 = $$unpack$i56;
  STACKTOP = sp;return ($_0$sroa$0$0|0);
  break;
 }
 case 1:  {
  $66 = ((($0)) + 1|0);
  $67 = ((($1)) + 28|0);
  $68 = HEAP32[$67>>2]|0;
  $69 = ((($1)) + 32|0);
  $70 = HEAP32[$69>>2]|0;
  $71 = ((($70)) + 12|0);
  $72 = HEAP32[$71>>2]|0;
  $73 = (FUNCTION_TABLE_iiii[$72 & 511]($68,14880,8)|0);
  HEAP32[$builder1>>2] = $1;
  $$repack$i58 = ((($builder1)) + 4|0);
  HEAP8[$$repack$i58>>0] = $73;
  $74 = ((($builder1)) + 8|0);
  HEAP32[$74>>2] = 0;
  $75 = ((($builder1)) + 12|0);
  HEAP8[$75>>0] = 0;
  HEAP32[$_33>>2] = $66;
  (__ZN4core3fmt8builders10DebugTuple5field17h7aa2b38aabb11517E($builder1,$_33,1136)|0);
  $76 = HEAP32[$74>>2]|0;
  $77 = ($76|0)==(0);
  $$unpack$pre$i60 = HEAP8[$$repack$i58>>0]|0;
  if ($77) {
   $$unpack$i75 = $$unpack$pre$i60;
  } else {
   $switch4$i$i61 = ($$unpack$pre$i60<<24>>24)==(0);
   do {
    if ($switch4$i$i61) {
     $78 = HEAP32[$builder1>>2]|0;
     $79 = HEAP32[$78>>2]|0;
     $80 = $79 & 4;
     $81 = ($80|0)==(0);
     if ($81) {
      $89 = $76;
     } else {
      $82 = ((($78)) + 28|0);
      $83 = HEAP32[$82>>2]|0;
      $84 = ((($78)) + 32|0);
      $85 = HEAP32[$84>>2]|0;
      $86 = ((($85)) + 12|0);
      $87 = HEAP32[$86>>2]|0;
      $88 = (FUNCTION_TABLE_iiii[$87 & 511]($83,24042,1)|0);
      $not$switch4$i$i$i$i64 = ($88<<24>>24)==(0);
      if (!($not$switch4$i$i$i$i64)) {
       $_0$sroa$0$0$i$i73 = 1;
       break;
      }
      $$pre$i66 = HEAP32[$74>>2]|0;
      $89 = $$pre$i66;
     }
     $90 = ($89|0)!=(1);
     $91 = HEAP8[$75>>0]|0;
     $92 = ($91<<24>>24)==(0);
     $or$cond138 = $90 | $92;
     if (!($or$cond138)) {
      $93 = HEAP32[$builder1>>2]|0;
      $94 = ((($93)) + 28|0);
      $95 = HEAP32[$94>>2]|0;
      $96 = ((($93)) + 32|0);
      $97 = HEAP32[$96>>2]|0;
      $98 = ((($97)) + 12|0);
      $99 = HEAP32[$98>>2]|0;
      $100 = (FUNCTION_TABLE_iiii[$99 & 511]($95,18783,1)|0);
      $not$switch4$i19$i$i$i70 = ($100<<24>>24)==(0);
      if (!($not$switch4$i19$i$i$i70)) {
       $_0$sroa$0$0$i$i73 = 1;
       break;
      }
     }
     $101 = HEAP32[$builder1>>2]|0;
     $102 = ((($101)) + 28|0);
     $103 = HEAP32[$102>>2]|0;
     $104 = ((($101)) + 32|0);
     $105 = HEAP32[$104>>2]|0;
     $106 = ((($105)) + 12|0);
     $107 = HEAP32[$106>>2]|0;
     $108 = (FUNCTION_TABLE_iiii[$107 & 511]($103,24043,1)|0);
     $_0$sroa$0$0$i$i73 = $108;
    } else {
     $_0$sroa$0$0$i$i73 = 1;
    }
   } while(0);
   HEAP8[$$repack$i58>>0] = $_0$sroa$0$0$i$i73;
   $$unpack$i75 = $_0$sroa$0$0$i$i73;
  }
  $_0$sroa$0$0 = $$unpack$i75;
  STACKTOP = sp;return ($_0$sroa$0$0|0);
  break;
 }
 case 2:  {
  $109 = ((($0)) + 1|0);
  $110 = ((($1)) + 28|0);
  $111 = HEAP32[$110>>2]|0;
  $112 = ((($1)) + 32|0);
  $113 = HEAP32[$112>>2]|0;
  $114 = ((($113)) + 12|0);
  $115 = HEAP32[$114>>2]|0;
  $116 = (FUNCTION_TABLE_iiii[$115 & 511]($111,14888,5)|0);
  HEAP32[$builder2>>2] = $1;
  $$repack$i77 = ((($builder2)) + 4|0);
  HEAP8[$$repack$i77>>0] = $116;
  $117 = ((($builder2)) + 8|0);
  HEAP32[$117>>2] = 0;
  $118 = ((($builder2)) + 12|0);
  HEAP8[$118>>0] = 0;
  HEAP32[$_44>>2] = $109;
  (__ZN4core3fmt8builders10DebugTuple5field17h7aa2b38aabb11517E($builder2,$_44,1152)|0);
  $119 = HEAP32[$117>>2]|0;
  $120 = ($119|0)==(0);
  $$unpack$pre$i79 = HEAP8[$$repack$i77>>0]|0;
  if ($120) {
   $$unpack$i94 = $$unpack$pre$i79;
  } else {
   $switch4$i$i80 = ($$unpack$pre$i79<<24>>24)==(0);
   do {
    if ($switch4$i$i80) {
     $121 = HEAP32[$builder2>>2]|0;
     $122 = HEAP32[$121>>2]|0;
     $123 = $122 & 4;
     $124 = ($123|0)==(0);
     if ($124) {
      $132 = $119;
     } else {
      $125 = ((($121)) + 28|0);
      $126 = HEAP32[$125>>2]|0;
      $127 = ((($121)) + 32|0);
      $128 = HEAP32[$127>>2]|0;
      $129 = ((($128)) + 12|0);
      $130 = HEAP32[$129>>2]|0;
      $131 = (FUNCTION_TABLE_iiii[$130 & 511]($126,24042,1)|0);
      $not$switch4$i$i$i$i83 = ($131<<24>>24)==(0);
      if (!($not$switch4$i$i$i$i83)) {
       $_0$sroa$0$0$i$i92 = 1;
       break;
      }
      $$pre$i85 = HEAP32[$117>>2]|0;
      $132 = $$pre$i85;
     }
     $133 = ($132|0)!=(1);
     $134 = HEAP8[$118>>0]|0;
     $135 = ($134<<24>>24)==(0);
     $or$cond140 = $133 | $135;
     if (!($or$cond140)) {
      $136 = HEAP32[$builder2>>2]|0;
      $137 = ((($136)) + 28|0);
      $138 = HEAP32[$137>>2]|0;
      $139 = ((($136)) + 32|0);
      $140 = HEAP32[$139>>2]|0;
      $141 = ((($140)) + 12|0);
      $142 = HEAP32[$141>>2]|0;
      $143 = (FUNCTION_TABLE_iiii[$142 & 511]($138,18783,1)|0);
      $not$switch4$i19$i$i$i89 = ($143<<24>>24)==(0);
      if (!($not$switch4$i19$i$i$i89)) {
       $_0$sroa$0$0$i$i92 = 1;
       break;
      }
     }
     $144 = HEAP32[$builder2>>2]|0;
     $145 = ((($144)) + 28|0);
     $146 = HEAP32[$145>>2]|0;
     $147 = ((($144)) + 32|0);
     $148 = HEAP32[$147>>2]|0;
     $149 = ((($148)) + 12|0);
     $150 = HEAP32[$149>>2]|0;
     $151 = (FUNCTION_TABLE_iiii[$150 & 511]($146,24043,1)|0);
     $_0$sroa$0$0$i$i92 = $151;
    } else {
     $_0$sroa$0$0$i$i92 = 1;
    }
   } while(0);
   HEAP8[$$repack$i77>>0] = $_0$sroa$0$0$i$i92;
   $$unpack$i94 = $_0$sroa$0$0$i$i92;
  }
  $_0$sroa$0$0 = $$unpack$i94;
  STACKTOP = sp;return ($_0$sroa$0$0|0);
  break;
 }
 case 3:  {
  $2 = ((($1)) + 28|0);
  $3 = HEAP32[$2>>2]|0;
  $4 = ((($1)) + 32|0);
  $5 = HEAP32[$4>>2]|0;
  $6 = ((($5)) + 12|0);
  $7 = HEAP32[$6>>2]|0;
  $8 = (FUNCTION_TABLE_iiii[$7 & 511]($3,14858,4)|0);
  $_0$sroa$0$0 = $8;
  STACKTOP = sp;return ($_0$sroa$0$0|0);
  break;
 }
 case 4:  {
  $9 = ((($1)) + 28|0);
  $10 = HEAP32[$9>>2]|0;
  $11 = ((($1)) + 32|0);
  $12 = HEAP32[$11>>2]|0;
  $13 = ((($12)) + 12|0);
  $14 = HEAP32[$13>>2]|0;
  $15 = (FUNCTION_TABLE_iiii[$14 & 511]($10,14862,5)|0);
  $_0$sroa$0$0 = $15;
  STACKTOP = sp;return ($_0$sroa$0$0|0);
  break;
 }
 case 5:  {
  $16 = ((($1)) + 28|0);
  $17 = HEAP32[$16>>2]|0;
  $18 = ((($1)) + 32|0);
  $19 = HEAP32[$18>>2]|0;
  $20 = ((($19)) + 12|0);
  $21 = HEAP32[$20>>2]|0;
  $22 = (FUNCTION_TABLE_iiii[$21 & 511]($17,14867,11)|0);
  $_0$sroa$0$0 = $22;
  STACKTOP = sp;return ($_0$sroa$0$0|0);
  break;
 }
 case 6:  {
  $152 = ((($0)) + 8|0);
  $153 = ((($1)) + 28|0);
  $154 = HEAP32[$153>>2]|0;
  $155 = ((($1)) + 32|0);
  $156 = HEAP32[$155>>2]|0;
  $157 = ((($156)) + 12|0);
  $158 = HEAP32[$157>>2]|0;
  $159 = (FUNCTION_TABLE_iiii[$158 & 511]($154,14893,18)|0);
  HEAP32[$builder6>>2] = $1;
  $$repack$i96 = ((($builder6)) + 4|0);
  HEAP8[$$repack$i96>>0] = $159;
  $160 = ((($builder6)) + 8|0);
  HEAP32[$160>>2] = 0;
  $161 = ((($builder6)) + 12|0);
  HEAP8[$161>>0] = 0;
  HEAP32[$_70>>2] = $152;
  (__ZN4core3fmt8builders10DebugTuple5field17h7aa2b38aabb11517E($builder6,$_70,1168)|0);
  $162 = HEAP32[$160>>2]|0;
  $163 = ($162|0)==(0);
  $$unpack$pre$i98 = HEAP8[$$repack$i96>>0]|0;
  if ($163) {
   $$unpack$i113 = $$unpack$pre$i98;
  } else {
   $switch4$i$i99 = ($$unpack$pre$i98<<24>>24)==(0);
   do {
    if ($switch4$i$i99) {
     $164 = HEAP32[$builder6>>2]|0;
     $165 = HEAP32[$164>>2]|0;
     $166 = $165 & 4;
     $167 = ($166|0)==(0);
     if ($167) {
      $175 = $162;
     } else {
      $168 = ((($164)) + 28|0);
      $169 = HEAP32[$168>>2]|0;
      $170 = ((($164)) + 32|0);
      $171 = HEAP32[$170>>2]|0;
      $172 = ((($171)) + 12|0);
      $173 = HEAP32[$172>>2]|0;
      $174 = (FUNCTION_TABLE_iiii[$173 & 511]($169,24042,1)|0);
      $not$switch4$i$i$i$i102 = ($174<<24>>24)==(0);
      if (!($not$switch4$i$i$i$i102)) {
       $_0$sroa$0$0$i$i111 = 1;
       break;
      }
      $$pre$i104 = HEAP32[$160>>2]|0;
      $175 = $$pre$i104;
     }
     $176 = ($175|0)!=(1);
     $177 = HEAP8[$161>>0]|0;
     $178 = ($177<<24>>24)==(0);
     $or$cond142 = $176 | $178;
     if (!($or$cond142)) {
      $179 = HEAP32[$builder6>>2]|0;
      $180 = ((($179)) + 28|0);
      $181 = HEAP32[$180>>2]|0;
      $182 = ((($179)) + 32|0);
      $183 = HEAP32[$182>>2]|0;
      $184 = ((($183)) + 12|0);
      $185 = HEAP32[$184>>2]|0;
      $186 = (FUNCTION_TABLE_iiii[$185 & 511]($181,18783,1)|0);
      $not$switch4$i19$i$i$i108 = ($186<<24>>24)==(0);
      if (!($not$switch4$i19$i$i$i108)) {
       $_0$sroa$0$0$i$i111 = 1;
       break;
      }
     }
     $187 = HEAP32[$builder6>>2]|0;
     $188 = ((($187)) + 28|0);
     $189 = HEAP32[$188>>2]|0;
     $190 = ((($187)) + 32|0);
     $191 = HEAP32[$190>>2]|0;
     $192 = ((($191)) + 12|0);
     $193 = HEAP32[$192>>2]|0;
     $194 = (FUNCTION_TABLE_iiii[$193 & 511]($189,24043,1)|0);
     $_0$sroa$0$0$i$i111 = $194;
    } else {
     $_0$sroa$0$0$i$i111 = 1;
    }
   } while(0);
   HEAP8[$$repack$i96>>0] = $_0$sroa$0$0$i$i111;
   $$unpack$i113 = $_0$sroa$0$0$i$i111;
  }
  $_0$sroa$0$0 = $$unpack$i113;
  STACKTOP = sp;return ($_0$sroa$0$0|0);
  break;
 }
 case 7:  {
  $195 = ((($0)) + 8|0);
  $196 = ((($0)) + 16|0);
  $197 = ((($1)) + 28|0);
  $198 = HEAP32[$197>>2]|0;
  $199 = ((($1)) + 32|0);
  $200 = HEAP32[$199>>2]|0;
  $201 = ((($200)) + 12|0);
  $202 = HEAP32[$201>>2]|0;
  $203 = (FUNCTION_TABLE_iiii[$202 & 511]($198,14911,13)|0);
  HEAP32[$builder7>>2] = $1;
  $$repack$i115 = ((($builder7)) + 4|0);
  HEAP8[$$repack$i115>>0] = $203;
  $204 = ((($builder7)) + 8|0);
  HEAP32[$204>>2] = 0;
  $205 = ((($builder7)) + 12|0);
  HEAP8[$205>>0] = 0;
  HEAP32[$_81>>2] = $195;
  (__ZN4core3fmt8builders10DebugTuple5field17h7aa2b38aabb11517E($builder7,$_81,1168)|0);
  HEAP32[$_87>>2] = $196;
  (__ZN4core3fmt8builders10DebugTuple5field17h7aa2b38aabb11517E($builder7,$_87,1168)|0);
  $206 = HEAP32[$204>>2]|0;
  $207 = ($206|0)==(0);
  $$unpack$pre$i117 = HEAP8[$$repack$i115>>0]|0;
  if ($207) {
   $$unpack$i132 = $$unpack$pre$i117;
  } else {
   $switch4$i$i118 = ($$unpack$pre$i117<<24>>24)==(0);
   do {
    if ($switch4$i$i118) {
     $208 = HEAP32[$builder7>>2]|0;
     $209 = HEAP32[$208>>2]|0;
     $210 = $209 & 4;
     $211 = ($210|0)==(0);
     if ($211) {
      $219 = $206;
     } else {
      $212 = ((($208)) + 28|0);
      $213 = HEAP32[$212>>2]|0;
      $214 = ((($208)) + 32|0);
      $215 = HEAP32[$214>>2]|0;
      $216 = ((($215)) + 12|0);
      $217 = HEAP32[$216>>2]|0;
      $218 = (FUNCTION_TABLE_iiii[$217 & 511]($213,24042,1)|0);
      $not$switch4$i$i$i$i121 = ($218<<24>>24)==(0);
      if (!($not$switch4$i$i$i$i121)) {
       $_0$sroa$0$0$i$i130 = 1;
       break;
      }
      $$pre$i123 = HEAP32[$204>>2]|0;
      $219 = $$pre$i123;
     }
     $220 = ($219|0)!=(1);
     $221 = HEAP8[$205>>0]|0;
     $222 = ($221<<24>>24)==(0);
     $or$cond144 = $220 | $222;
     if (!($or$cond144)) {
      $223 = HEAP32[$builder7>>2]|0;
      $224 = ((($223)) + 28|0);
      $225 = HEAP32[$224>>2]|0;
      $226 = ((($223)) + 32|0);
      $227 = HEAP32[$226>>2]|0;
      $228 = ((($227)) + 12|0);
      $229 = HEAP32[$228>>2]|0;
      $230 = (FUNCTION_TABLE_iiii[$229 & 511]($225,18783,1)|0);
      $not$switch4$i19$i$i$i127 = ($230<<24>>24)==(0);
      if (!($not$switch4$i19$i$i$i127)) {
       $_0$sroa$0$0$i$i130 = 1;
       break;
      }
     }
     $231 = HEAP32[$builder7>>2]|0;
     $232 = ((($231)) + 28|0);
     $233 = HEAP32[$232>>2]|0;
     $234 = ((($231)) + 32|0);
     $235 = HEAP32[$234>>2]|0;
     $236 = ((($235)) + 12|0);
     $237 = HEAP32[$236>>2]|0;
     $238 = (FUNCTION_TABLE_iiii[$237 & 511]($233,24043,1)|0);
     $_0$sroa$0$0$i$i130 = $238;
    } else {
     $_0$sroa$0$0$i$i130 = 1;
    }
   } while(0);
   HEAP8[$$repack$i115>>0] = $_0$sroa$0$0$i$i130;
   $$unpack$i132 = $_0$sroa$0$0$i$i130;
  }
  $_0$sroa$0$0 = $$unpack$i132;
  STACKTOP = sp;return ($_0$sroa$0$0|0);
  break;
 }
 default: {
  // unreachable;
 }
 }
 return (0)|0;
}
function __ZN4drop17ha5d17962d3aa9debE($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZN53__LT__RF__u27_a_u20_T_u20_as_u20_core__fmt__Debug_GT_3fmt17h13b7344db08713a1E($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[$0>>2]|0;
 $3 = $2;
 $4 = $3;
 $5 = HEAP32[$4>>2]|0;
 $6 = (($3) + 4)|0;
 $7 = $6;
 $8 = HEAP32[$7>>2]|0;
 $9 = (__ZN4core3fmt3num52__LT_impl_u20_core__fmt__Display_u20_for_u20_u64_GT_3fmt17h8ca345cb2ba0eaafE($5,$8,$1)|0);
 return ($9|0);
}
function __ZN53__LT__RF__u27_a_u20_T_u20_as_u20_core__fmt__Debug_GT_3fmt17h5c0e9ca3a4b8aea6E($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$fca$1$gep$i = 0, $$idx$val$i = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $_0$sroa$0$0$i$i = 0, $_0$sroa$7$0$i$i = 0, $_11$i = 0, $_14$i = 0, $_17$i = 0, $_6$i$sroa$4$0$$sroa_idx3 = 0, $_6$i$sroa$5$0$$sroa_idx5 = 0;
 var $_6$i$sroa$68$0$$sroa_idx10 = 0, $_6$i$sroa$7$0$$sroa_idx12 = 0, $_7$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $_7$i$i = sp + 24|0;
 $_11$i = sp + 8|0;
 $_14$i = sp + 48|0;
 $_17$i = sp;
 $2 = HEAP32[$0>>2]|0;
 $$idx$val$i = HEAP8[$2>>0]|0;
 HEAP8[$_14$i>>0] = $$idx$val$i;
 switch ($$idx$val$i<<24>>24) {
 case 0:  {
  $_0$sroa$0$0$i$i = 17440;$_0$sroa$7$0$i$i = 19;
  break;
 }
 case 1:  {
  $_0$sroa$0$0$i$i = 17414;$_0$sroa$7$0$i$i = 26;
  break;
 }
 case 2:  {
  $_0$sroa$0$0$i$i = 17377;$_0$sroa$7$0$i$i = 37;
  break;
 }
 case 3:  {
  $_0$sroa$0$0$i$i = 17355;$_0$sroa$7$0$i$i = 22;
  break;
 }
 case 4:  {
  $_0$sroa$0$0$i$i = 17334;$_0$sroa$7$0$i$i = 21;
  break;
 }
 case 5:  {
  $_0$sroa$0$0$i$i = 17302;$_0$sroa$7$0$i$i = 32;
  break;
 }
 default: {
  // unreachable;
 }
 }
 HEAP32[$_17$i>>2] = $_0$sroa$0$0$i$i;
 $$fca$1$gep$i = ((($_17$i)) + 4|0);
 HEAP32[$$fca$1$gep$i>>2] = $_0$sroa$7$0$i$i;
 $3 = $_14$i;
 $4 = $_17$i;
 HEAP32[$_11$i>>2] = $3;
 $5 = ((($_11$i)) + 4|0);
 HEAP32[$5>>2] = (336);
 $6 = ((($_11$i)) + 8|0);
 HEAP32[$6>>2] = $4;
 $7 = ((($_11$i)) + 12|0);
 HEAP32[$7>>2] = (337);
 $8 = ((($1)) + 28|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = ((($1)) + 32|0);
 $11 = HEAP32[$10>>2]|0;
 HEAP32[$_7$i$i>>2] = 5700;
 $_6$i$sroa$4$0$$sroa_idx3 = ((($_7$i$i)) + 4|0);
 HEAP32[$_6$i$sroa$4$0$$sroa_idx3>>2] = 2;
 $_6$i$sroa$5$0$$sroa_idx5 = ((($_7$i$i)) + 8|0);
 HEAP32[$_6$i$sroa$5$0$$sroa_idx5>>2] = 0;
 $_6$i$sroa$68$0$$sroa_idx10 = ((($_7$i$i)) + 16|0);
 HEAP32[$_6$i$sroa$68$0$$sroa_idx10>>2] = $_11$i;
 $_6$i$sroa$7$0$$sroa_idx12 = ((($_7$i$i)) + 20|0);
 HEAP32[$_6$i$sroa$7$0$$sroa_idx12>>2] = 2;
 $12 = (__ZN4core3fmt5write17hdd089a59fed6a1dbE($9,$11,$_7$i$i)|0);
 STACKTOP = sp;return ($12|0);
}
function __ZN53__LT__RF__u27_a_u20_T_u20_as_u20_core__fmt__Debug_GT_3fmt17h7f32dda0d0539f35E($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$repack$i$i$i = 0, $$unpack$i$i = 0, $$unpack$pre$i$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $3 = 0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $_0$sroa$0$0$i$i$i = 0, $_17$i = 0, $builder$i = 0, $switch4$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $builder$i = sp;
 $_17$i = sp + 8|0;
 $2 = HEAP32[$0>>2]|0;
 $3 = ((($1)) + 28|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ((($1)) + 32|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ((($6)) + 12|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = (FUNCTION_TABLE_iiii[$8 & 511]($4,24456,13)|0);
 HEAP32[$builder$i>>2] = $1;
 $$repack$i$i$i = ((($builder$i)) + 4|0);
 HEAP8[$$repack$i$i$i>>0] = $9;
 $10 = ((($builder$i)) + 5|0);
 HEAP8[$10>>0] = 0;
 HEAP32[$_17$i>>2] = $2;
 (__ZN4core3fmt8builders11DebugStruct5field17hfad538a66c3eb971E($builder$i,24445,4,$_17$i,5032)|0);
 $11 = HEAP8[$10>>0]|0;
 $12 = ($11<<24>>24)==(0);
 $$unpack$pre$i$i = HEAP8[$$repack$i$i$i>>0]|0;
 if ($12) {
  $$unpack$i$i = $$unpack$pre$i$i;
  STACKTOP = sp;return ($$unpack$i$i|0);
 }
 $switch4$i$i$i = ($$unpack$pre$i$i<<24>>24)==(0);
 do {
  if ($switch4$i$i$i) {
   $13 = HEAP32[$builder$i>>2]|0;
   $14 = HEAP32[$13>>2]|0;
   $15 = $14 & 4;
   $16 = ($15|0)==(0);
   $17 = ((($13)) + 28|0);
   $18 = HEAP32[$17>>2]|0;
   $19 = ((($13)) + 32|0);
   $20 = HEAP32[$19>>2]|0;
   $21 = ((($20)) + 12|0);
   $22 = HEAP32[$21>>2]|0;
   if ($16) {
    $24 = (FUNCTION_TABLE_iiii[$22 & 511]($18,24334,2)|0);
    $_0$sroa$0$0$i$i$i = $24;
    break;
   } else {
    $23 = (FUNCTION_TABLE_iiii[$22 & 511]($18,24332,2)|0);
    $_0$sroa$0$0$i$i$i = $23;
    break;
   }
  } else {
   $_0$sroa$0$0$i$i$i = 1;
  }
 } while(0);
 HEAP8[$$repack$i$i$i>>0] = $_0$sroa$0$0$i$i$i;
 $$unpack$i$i = $_0$sroa$0$0$i$i$i;
 STACKTOP = sp;return ($$unpack$i$i|0);
}
function __ZN53__LT__RF__u27_a_u20_T_u20_as_u20_core__fmt__Debug_GT_3fmt17hab0151617bf69f5dE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$repack$i$i = 0, $$unpack$i$i = 0, $$unpack$pre$i$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $3 = 0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $_0$sroa$0$0$i$i$i = 0, $_17$i = 0, $builder$i = 0, $switch4$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $builder$i = sp;
 $_17$i = sp + 8|0;
 $2 = HEAP32[$0>>2]|0;
 $3 = ((($1)) + 28|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ((($1)) + 32|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ((($6)) + 12|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = (FUNCTION_TABLE_iiii[$8 & 511]($4,19731,5)|0);
 HEAP32[$builder$i>>2] = $1;
 $$repack$i$i = ((($builder$i)) + 4|0);
 HEAP8[$$repack$i$i>>0] = $9;
 $10 = ((($builder$i)) + 5|0);
 HEAP8[$10>>0] = 0;
 HEAP32[$_17$i>>2] = $2;
 (__ZN4core3fmt8builders11DebugStruct5field17hfad538a66c3eb971E($builder$i,19736,4,$_17$i,1768)|0);
 $11 = HEAP8[$10>>0]|0;
 $12 = ($11<<24>>24)==(0);
 $$unpack$pre$i$i = HEAP8[$$repack$i$i>>0]|0;
 if ($12) {
  $$unpack$i$i = $$unpack$pre$i$i;
  STACKTOP = sp;return ($$unpack$i$i|0);
 }
 $switch4$i$i$i = ($$unpack$pre$i$i<<24>>24)==(0);
 do {
  if ($switch4$i$i$i) {
   $13 = HEAP32[$builder$i>>2]|0;
   $14 = HEAP32[$13>>2]|0;
   $15 = $14 & 4;
   $16 = ($15|0)==(0);
   $17 = ((($13)) + 28|0);
   $18 = HEAP32[$17>>2]|0;
   $19 = ((($13)) + 32|0);
   $20 = HEAP32[$19>>2]|0;
   $21 = ((($20)) + 12|0);
   $22 = HEAP32[$21>>2]|0;
   if ($16) {
    $24 = (FUNCTION_TABLE_iiii[$22 & 511]($18,24334,2)|0);
    $_0$sroa$0$0$i$i$i = $24;
    break;
   } else {
    $23 = (FUNCTION_TABLE_iiii[$22 & 511]($18,24332,2)|0);
    $_0$sroa$0$0$i$i$i = $23;
    break;
   }
  } else {
   $_0$sroa$0$0$i$i$i = 1;
  }
 } while(0);
 HEAP8[$$repack$i$i>>0] = $_0$sroa$0$0$i$i$i;
 $$unpack$i$i = $_0$sroa$0$0$i$i$i;
 STACKTOP = sp;return ($$unpack$i$i|0);
}
function __ZN17ncollide_geometry5query10algorithms15johnson_simplex22KEY_RECURSION_TEMPLATE7__getit17hed102e47d684af7fE() {
 var $$$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $_0$0$i$i$i = 0, $_0$0$i$i3$i = 0, $cond$i$i$i = 0;
 var $cond$i$i1$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[1407]|0;
 $cond$i$i$i = ($0|0)==(0);
 if ($cond$i$i$i) {
  $1 = (__ZN3std10sys_common12thread_local9StaticKey9lazy_init17hfe76ff6b56e2d562E(5628)|0);
  $_0$0$i$i$i = $1;
 } else {
  $_0$0$i$i$i = $0;
 }
 $2 = (_pthread_getspecific(($_0$0$i$i$i|0))|0);
 $3 = ($2|0)==(0|0);
 if (!($3)) {
  $4 = ($2|0)==((1)|0);
  $5 = ((($2)) + 4|0);
  $$$i = $4 ? 0 : $5;
  $15 = $$$i;
  return ($15|0);
 }
 $6 = (_malloc(12)|0);
 $7 = ($6|0)==(0|0);
 if ($7) {
  __ZN5alloc3oom3oom17hb253cf665793f59eE();
  // unreachable;
 }
 HEAP32[$6>>2] = 5628;
 $8 = ((($6)) + 4|0);
 $9 = $8;
 $10 = $9;
 HEAP32[$10>>2] = 0;
 $11 = (($9) + 4)|0;
 $12 = $11;
 HEAP32[$12>>2] = 0;
 $13 = HEAP32[1407]|0;
 $cond$i$i1$i = ($13|0)==(0);
 if ($cond$i$i1$i) {
  $14 = (__ZN3std10sys_common12thread_local9StaticKey9lazy_init17hfe76ff6b56e2d562E(5628)|0);
  $_0$0$i$i3$i = $14;
 } else {
  $_0$0$i$i3$i = $13;
 }
 (_pthread_setspecific(($_0$0$i$i3$i|0),($6|0))|0);
 $15 = $8;
 return ($15|0);
}
function __ZN3std6thread5local2os13destroy_value17hc2a04625cefcd4a6E($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $_0$0$i$i = 0, $_0$0$i$i7 = 0, $cond$i$i = 0;
 var $cond$i$i5 = 0, $switchtmp$i$i$i$i = 0, $switchtmp$i$i$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[$0>>2]|0;
 $2 = HEAP32[$1>>2]|0;
 $cond$i$i = ($2|0)==(0);
 if ($cond$i$i) {
  __THREW__ = 0;
  $3 = (invoke_ii(338,($1|0))|0);
  $4 = __THREW__; __THREW__ = 0;
  $5 = $4&1;
  if ($5) {
   $12 = ___cxa_find_matching_catch_2()|0;
   $13 = tempRet0;
   $14 = ((($0)) + 8|0);
   $15 = HEAP32[$14>>2]|0;
   $switchtmp$i$i$i$i = ($15|0)==(0|0);
   if ($switchtmp$i$i$i$i) {
    _free($0);
    ___resumeException($12|0);
    // unreachable;
   }
   $16 = HEAP32[$15>>2]|0;HEAP32[$15>>2] = (($16-1)|0);
   $17 = ($16|0)==(1);
   if (!($17)) {
    _free($0);
    ___resumeException($12|0);
    // unreachable;
   }
   /* fence */;
   __ZN33__LT_alloc__arc__Arc_LT_T_GT__GT_9drop_slow17h639b296ab3838c06E_1097($14);
   _free($0);
   ___resumeException($12|0);
   // unreachable;
  } else {
   $_0$0$i$i = $3;
  }
 } else {
  $_0$0$i$i = $2;
 }
 (_pthread_setspecific(($_0$0$i$i|0),((1)|0))|0);
 $6 = ((($0)) + 8|0);
 $7 = HEAP32[$6>>2]|0;
 $switchtmp$i$i$i$i$i = ($7|0)==(0|0);
 if (!($switchtmp$i$i$i$i$i)) {
  $8 = HEAP32[$7>>2]|0;HEAP32[$7>>2] = (($8-1)|0);
  $9 = ($8|0)==(1);
  if ($9) {
   /* fence */;
   __ZN33__LT_alloc__arc__Arc_LT_T_GT__GT_9drop_slow17h639b296ab3838c06E_1097($6);
  }
 }
 _free($0);
 $10 = HEAP32[$1>>2]|0;
 $cond$i$i5 = ($10|0)==(0);
 if (!($cond$i$i5)) {
  $_0$0$i$i7 = $10;
  (_pthread_setspecific(($_0$0$i$i7|0),(0|0))|0);
  return;
 }
 $11 = (__ZN3std10sys_common12thread_local9StaticKey9lazy_init17hfe76ff6b56e2d562E($1)|0);
 $_0$0$i$i7 = $11;
 (_pthread_setspecific(($_0$0$i$i7|0),(0|0))|0);
 return;
}
function __ZN33__LT_alloc__arc__Arc_LT_T_GT__GT_9drop_slow17h639b296ab3838c06E_1097($0) {
 $0 = $0|0;
 var $$idx$val$i = 0, $$idx5$i = 0, $$idx5$val$i = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $not$$i$i$i$i = 0, $not$$i$i$i$i$i$i$i$i = 0, $not$$i$i$i$i1$i$i$i$i = 0, $not$$i$i$i$i4$i$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($1)) + 8|0);
 $$idx$val$i = HEAP32[$2>>2]|0;
 $$idx5$i = ((($1)) + 16|0);
 $$idx5$val$i = HEAP32[$$idx5$i>>2]|0;
 $3 = (($$idx$val$i) + (($$idx5$val$i*44)|0)|0);
 $4 = ($$idx5$val$i|0)==(0);
 if (!($4)) {
  $6 = $$idx$val$i;
  while(1) {
   $5 = ((($6)) + 4|0);
   $7 = HEAP32[$5>>2]|0;
   $not$$i$i$i$i$i$i$i$i = ($7|0)==(0);
   if (!($not$$i$i$i$i$i$i$i$i)) {
    $8 = HEAP32[$6>>2]|0;
    _free($8);
   }
   $9 = ((($6)) + 16|0);
   $10 = HEAP32[$9>>2]|0;
   $not$$i$i$i$i1$i$i$i$i = ($10|0)==(0);
   if (!($not$$i$i$i$i1$i$i$i$i)) {
    $11 = ((($6)) + 12|0);
    $12 = HEAP32[$11>>2]|0;
    _free($12);
   }
   $13 = ((($6)) + 28|0);
   $14 = HEAP32[$13>>2]|0;
   $not$$i$i$i$i4$i$i$i$i = ($14|0)==(0);
   if (!($not$$i$i$i$i4$i$i$i$i)) {
    $15 = ((($6)) + 24|0);
    $16 = HEAP32[$15>>2]|0;
    _free($16);
   }
   $17 = ((($6)) + 44|0);
   $18 = ($17|0)==($3|0);
   if ($18) {
    break;
   } else {
    $6 = $17;
   }
  }
 }
 $19 = ((($1)) + 12|0);
 $20 = HEAP32[$19>>2]|0;
 $not$$i$i$i$i = ($20|0)==(0);
 if (!($not$$i$i$i$i)) {
  $21 = HEAP32[$2>>2]|0;
  _free($21);
 }
 $22 = HEAP32[$0>>2]|0;
 $23 = ((($22)) + 4|0);
 $24 = HEAP32[$23>>2]|0;HEAP32[$23>>2] = (($24-1)|0);
 $25 = ($24|0)==(1);
 if (!($25)) {
  return;
 }
 /* fence */;
 _free($1);
 return;
}
function __ZN17ncollide_geometry5query10algorithms15johnson_simplex17RecursionTemplate3new17he26a532eb60d9addE() {
 var $$$i$le$i$i$i$i$i$i$i$i = 0, $$$i$le$i$i$i$i$i$i$i$i$i = 0, $$$i$le$i$i$i$i$i$i$i327$i = 0, $$$i$le$i$i$i$i$i$i$i407$i = 0, $$$i15$i$i$i$i$i$i$i$i = 0, $$$i15$i$i$i$i$i$i$i$i$i = 0, $$$i15$i$i$i$i$i$i$i321$i = 0, $$$i15$i$i$i$i$i$i$i401$i = 0, $$arith = 0, $$arith52 = 0, $$arith56 = 0, $$idx$val$i = 0, $$idx$val$i1 = 0, $$idx$val$i171$i = 0, $$idx$val$i177$i = 0, $$idx$val$i197$i = 0, $$idx$val$i242$i$us = 0, $$idx$val$i248$i = 0, $$idx$val$i261$i = 0, $$idx$val$i275$i = 0;
 var $$idx$val$i281$i = 0, $$idx$val$i344$i = 0, $$idx$val$i350$i = 0, $$idx$val$i356$i = 0, $$idx$val$i371$i = 0, $$idx$val$i424$i = 0, $$idx$val$idx$i24$i$i$i = 0, $$idx$val$idx$val$i$i$i$i = 0, $$idx$val$idx$val$i$i$i$i$i = 0, $$idx$val$idx$val$i$i$i$i$i$i = 0, $$idx$val$idx$val$i$i$i$i459$i = 0, $$idx$val$idx$val$i$i28$i$i$i = 0, $$idx$val$idx$val$i25$i$i$i = 0, $$idx$val$idx$val$i54$i$i$i$i = 0, $$idx$val$idx$val$i80$i$i$i = 0, $$idx$val$idx$val$i80$i$i$i$i = 0, $$idx$val$idx$val$i91$i$i$i$i = 0, $$idx2$val$i$i$i$i$i = 0, $$idx2$val$i$i$i$i$i$i = 0, $$idx2$val$i$i$i$i314$i = 0;
 var $$idx2$val$i$i$i$i394$i = 0, $$idx3$i$i$i$i$i = 0, $$idx3$i$i$i$i$i$i = 0, $$idx3$i$i$i$i315$i = 0, $$idx3$i$i$i$i395$i = 0, $$idx3$val$i$i$i$i$i = 0, $$idx3$val$i$i$i$i$i$i = 0, $$idx3$val$i$i$i$i316$i = 0, $$idx3$val$i$i$i$i396$i = 0, $$idx5$val$i = 0, $$in$i = 0, $$overflow = 0, $$overflow53 = 0, $$overflow57 = 0, $$phi$trans$insert = 0, $$pre$i = 0, $$pre$i$i = 0, $$pre$i172$i = 0, $$pre$i178$i = 0, $$pre$i198$i = 0;
 var $$pre$i243$i$us = 0, $$pre$i249$i = 0, $$pre$i26 = 0, $$pre$i262$i = 0, $$pre$i276$i = 0, $$pre$i282$i = 0, $$pre$i345$i = 0, $$pre$i351$i = 0, $$pre$i357$i = 0, $$pre$i425$i = 0, $$pre1103$i$us = 0, $$pre1104$i = 0, $$pre1105$i = 0, $$pre1108$i = 0, $$pre1110$i = 0, $$pre1112$i = 0, $$val$i$i$i$i$i = 0, $$val$i$i$i$i$i$i = 0, $$val$i$i$i$i$i$i$i$i = 0, $$val$i$i$i$i$i$i$i$i$i = 0;
 var $$val$i$i$i$i$i$i$i324$i = 0, $$val$i$i$i$i$i$i$i404$i = 0, $$val$i$i$i$i458$i = 0, $$val$i$i38$i$i$i = 0, $$val14$i$i$i$i$i$i$i$i = 0, $$val14$i$i$i$i$i$i$i$i$i = 0, $$val14$i$i$i$i$i$i$i325$i = 0, $$val14$i$i$i$i$i$i$i405$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0;
 var $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0;
 var $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0;
 var $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0;
 var $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0;
 var $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0;
 var $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0;
 var $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0;
 var $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0;
 var $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0;
 var $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0;
 var $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0;
 var $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0;
 var $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0;
 var $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0;
 var $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0;
 var $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0;
 var $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0;
 var $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0;
 var $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0;
 var $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0;
 var $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0;
 var $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0;
 var $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0;
 var $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0;
 var $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0;
 var $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0;
 var $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0;
 var $596 = 0, $597 = 0, $598 = 0, $599 = 0, $6 = 0, $60 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0, $612 = 0;
 var $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0, $63 = 0, $630 = 0;
 var $631 = 0, $632 = 0, $633 = 0, $634 = 0, $635 = 0, $636 = 0, $637 = 0, $638 = 0, $639 = 0, $64 = 0, $640 = 0, $641 = 0, $642 = 0, $643 = 0, $644 = 0, $645 = 0, $646 = 0, $647 = 0, $648 = 0, $649 = 0;
 var $65 = 0, $650 = 0, $651 = 0, $652 = 0, $653 = 0, $654 = 0, $655 = 0, $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0, $661 = 0, $662 = 0, $663 = 0, $664 = 0, $665 = 0, $666 = 0, $667 = 0;
 var $668 = 0, $669 = 0, $67 = 0, $670 = 0, $671 = 0, $672 = 0, $673 = 0, $674 = 0, $675 = 0, $676 = 0, $677 = 0, $678 = 0, $679 = 0, $68 = 0, $680 = 0, $681 = 0, $682 = 0, $683 = 0, $684 = 0, $685 = 0;
 var $686 = 0, $687 = 0, $688 = 0, $689 = 0, $69 = 0, $690 = 0, $691 = 0, $692 = 0, $693 = 0, $694 = 0, $695 = 0, $696 = 0, $697 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0;
 var $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0;
 var $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $_0$0$i$i$i$i$i$i$i$i = 0, $_0$0$i$i$i$i$i$i$i$i$i = 0, $_0$0$i$i$i$i$i$i$i329$i = 0, $_0$0$i$i$i$i$i$i$i409$i = 0, $_0$0$i16$i$i$i$i$i$i$i$i = 0, $_0$0$i16$i$i$i$i$i$i$i$i$i = 0, $_0$0$i16$i$i$i$i$i$i$i322$i = 0, $_0$0$i16$i$i$i$i$i$i$i402$i = 0, $_0$0$sroa$speculated$i$i$i$i$i$i$i$i = 0, $_0$0$sroa$speculated$i$i$i$i$i$i$i$i$i = 0, $_0$0$sroa$speculated$i$i$i$i$i$i$i$i$i$i = 0, $_0$0$sroa$speculated$i$i$i$i$i$i$i$i317$i = 0, $_0$0$sroa$speculated$i$i$i$i$i$i$i$i397$i = 0, $_144$sroa$0$0$copyload$i = 0;
 var $_144$sroa$4$0$copyload$i = 0, $_144$sroa$5$0$copyload$i = 0, $_15$sroa$0$0$i$i$i$i$i = 0, $_15$sroa$0$0$i$i$i$i$i$i = 0, $_15$sroa$0$0$i$i$i$i306$i = 0, $_15$sroa$0$0$i$i$i$i386$i = 0, $_15$sroa$0$0$iter$sroa$7$0$i$i$i$i$i = 0, $_15$sroa$0$0$iter$sroa$7$0$i$i$i$i$i$i = 0, $_15$sroa$0$0$iter$sroa$7$0$i$i$i$i309$i = 0, $_15$sroa$0$0$iter$sroa$7$0$i$i$i$i389$i = 0, $_20$sroa$16$24$copyload = 0, $_20$sroa$17$24$copyload = 0, $_22$sroa$10$0$$sroa_idx65$i = 0, $_22$sroa$11$0$$sroa_idx$i = 0, $_22$sroa$4$0$$sroa_idx53$i = 0, $_22$sroa$5$0$$sroa_idx55$i = 0, $_22$sroa$6$0$$sroa_idx57$i = 0, $_22$sroa$7$0$$sroa_idx59$i = 0, $_22$sroa$8$0$$sroa_idx61$i = 0, $_270$sroa$5$0$copyload$i = 0;
 var $_270$sroa$6$0$copyload$i = 0, $_30$sroa$4$0$$sroa_idx19$i$i$i$i$i$i = 0, $_30$sroa$4$0$$sroa_idx19$i$i$i$i$i$i$i = 0, $_30$sroa$4$0$$sroa_idx19$i$i$i47$i$i$i$i = 0, $_30$sroa$4$0$$sroa_idx19$i$i$i73$i$i$i$i = 0, $_30$sroa$4$0$$sroa_idx19$i$i67$i$i$i$i = 0, $_30$sroa$4$0$$sroa_idx19$i$i79$i$i$i$i = 0, $_30$sroa$5$0$$sroa_idx21$i$i$i$i$i$i = 0, $_30$sroa$5$0$$sroa_idx21$i$i$i$i$i$i$i = 0, $_30$sroa$5$0$$sroa_idx21$i$i$i48$i$i$i$i = 0, $_30$sroa$5$0$$sroa_idx21$i$i$i74$i$i$i$i = 0, $_30$sroa$5$0$$sroa_idx21$i$i68$i$i$i$i = 0, $_30$sroa$5$0$$sroa_idx21$i$i80$i$i$i$i = 0, $_39$sroa$4$0$$sroa_idx39$i$i$i$i = 0, $_39$sroa$5$0$$sroa_idx41$i$i$i$i = 0, $_49$sroa$6$0$ph$i$i$i = 0, $_49$sroa$7$0$ph$i$i$i = 0, $_49$sroa$8$0$ph$i$i$i = 0, $_6$sroa$4$i$i = 0, $_6$sroa$4$i296$i = 0;
 var $_6$sroa$4$i376$i = 0, $_7$sroa$5$i$i$i = 0, $cur_parent$sroa$0$0$i$i$i = 0, $cur_parent$sroa$0$0$ph372$i$i$i = 0, $cur_parent$sroa$10$1$i$i$i = 0, $cur_parent$sroa$10$1$ph374$i$i$i = 0, $cur_parent$sroa$13$1$i$i$i = 0, $cur_parent$sroa$13$1$ph$i$i$i = 0, $cur_parent$sroa$16$1$i$i$i = 0, $cur_parent$sroa$16$1$ph375$i$i$i = 0, $cur_parent$sroa$5$1$i$i$i = 0, $cur_parent$sroa$5$1$i$i$i$phi = 0, $cur_parent$sroa$5$1$ph373$i$i$i = 0, $curr$0931$i = 0, $data$i = 0, $determinant_index$0944$i = 0, $determinant_index$1$lcssa$i = 0, $determinant_index$1934$i = 0, $determinant_index$2$lcssa$i = 0, $determinant_index$2919$i = 0;
 var $determinant_index$3590$i = 0, $determinant_index$4$i = 0, $eh$lpad$body$ph$i$index29Z2D = 0, $eh$lpad$body$ph$i$indexZ2D = 0, $eh$lpad$body$ph$sink$index45Z2D = 0, $eh$lpad$body$ph$sink$indexZ2D = 0, $exitcond$i$i$i = 0, $exitcond$i$i$i$i$i = 0, $exitcond$i$i444$i = 0, $exitcond$i$i450$i = 0, $exitcond$i59$i$i$i$i = 0, $exitcond$i85$i$i$i$i = 0, $exitcond$i92$i$i$i$i = 0, $i$05$i$i$i = 0, $i$05$i$i442$i = 0, $i$05$i$i448$i = 0, $ins_edge$sroa$0$0$i$i$i = 0, $ins_edge$sroa$0$0$ph$i$i$i = 0, $ins_k$sroa$0$0$i$i$i = 0, $ins_k$sroa$0$0$ph$i$i$i = 0;
 var $ins_k$sroa$12$0$i$i$i = 0, $ins_k$sroa$12$0$ph$i$i$i = 0, $ins_k$sroa$7$0$i$i$i = 0, $ins_k$sroa$7$0$ph$i$i$i = 0, $ins_v$0$i$i$i = 0, $ins_v$0$ph$i$i$i = 0, $iter$sroa$0$0$$i$i$i$i$i = 0, $iter$sroa$0$0$$i$i$i$i$i$i = 0, $iter$sroa$0$0$$i$i$i$i308$i = 0, $iter$sroa$0$0$$i$i$i$i388$i = 0, $iter$sroa$0$0$i$i$i$i$i = 0, $iter$sroa$0$0$i$i$i$i$i$i = 0, $iter$sroa$0$0$i$i$i$i$i$i$i$i = 0, $iter$sroa$0$0$i$i$i$i$i$i$i$i$i = 0, $iter$sroa$0$0$i$i$i$i$i$i$i319$i = 0, $iter$sroa$0$0$i$i$i$i$i$i$i399$i = 0, $iter$sroa$0$0$i$i$i$i289$i = 0, $iter$sroa$0$0$i$i$i$i305$i = 0, $iter$sroa$0$0$i$i$i$i385$i = 0, $iter$sroa$0$0$i58$i$i$i$i = 0;
 var $iter$sroa$0$0$i84$i$i$i$i = 0, $iter$sroa$0$0141$i$i$i$i$i = 0, $iter$sroa$0$0394 = 0, $iter$sroa$0$0394$phi = 0, $iter$sroa$0$062$i$i$i$i$i = 0, $iter$sroa$0$062$i57$i$i$i$i = 0, $iter$sroa$0$062$i83$i$i$i$i = 0, $iter$sroa$0$0950$i = 0, $iter$sroa$0$0950$i$phi = 0, $iter$sroa$7$0$$i$i$i$i$i = 0, $iter$sroa$7$0$$i$i$i$i$i$i = 0, $iter$sroa$7$0$$i$i$i$i307$i = 0, $iter$sroa$7$0$$i$i$i$i387$i = 0, $iter$sroa$7$0$i$i$i$i$i = 0, $iter$sroa$7$0$i$i$i$i$i$i = 0, $iter$sroa$7$0$i$i$i$i304$i = 0, $iter$sroa$7$0$i$i$i$i384$i = 0, $iter10$sroa$0$0925$i = 0, $iter10$sroa$0$0925$i$phi = 0, $iter12$sroa$0$0903$i = 0;
 var $iter12$sroa$0$0903$i$phi = 0, $iter2$sroa$0$0943$i = 0, $iter4$sroa$0$0917$i = 0, $iter4$sroa$0$0917$i$phi = 0, $iter6$sroa$0$0906$i$us = 0, $iter6$sroa$0$0906$i$us$phi = 0, $iter8$sroa$0$0$in913$i = 0, $k$sroa$0$0$copyload43105$i$i$i$i$i = 0, $k$sroa$0$0$copyload64140$i$i$i$i$i = 0, $k$sroa$5$0$$sroa_idx46$i$i$i$i$i = 0, $k$sroa$5$0$$sroa_idx67$i$i$i$i$i = 0, $k$sroa$5$0$copyload47$i$i$i$i$i = 0, $k$sroa$5$0$copyload68$i$i$i$i$i = 0, $k$sroa$6$0$$sroa_idx50$i$i$i$i$i = 0, $k$sroa$6$0$$sroa_idx71$i$i$i$i$i = 0, $k$sroa$6$0$copyload51$i$i$i$i$i = 0, $k$sroa$6$0$copyload72$i$i$i$i$i = 0, $last_dim_begin$0948$i = 0, $last_dim_begin$0948$i$phi = 0, $last_dim_end$0947$i = 0;
 var $last_num_points$0945$i = 0, $lpad$phi$i$index = 0, $lpad$phi$i$index38 = 0, $lpad$phi628$i$index = 0, $lpad$phi628$i$index11 = 0, $lpad$phi634$i$index = 0, $lpad$phi634$i$index19 = 0, $lpad$phi643$i$index = 0, $lpad$phi643$i$index3 = 0, $map$i = 0, $node$sroa$0$0$i$i$i = 0, $node$sroa$0$0$i$i$i$i = 0, $node$sroa$0$0$i$i298$i = 0, $node$sroa$0$0$i$i378$i = 0, $node$sroa$5$0$in$i$i$i = 0, $node$sroa$5$0$in$i$i$i$i = 0, $node$sroa$5$0$in$i$i299$i = 0, $node$sroa$5$0$in$i$i379$i = 0, $node$sroa$5$0147$i$i$i = 0, $node$sroa$5$0147$i$i$i$i = 0;
 var $node$sroa$5$0147$i$i300$i = 0, $node$sroa$5$0147$i$i380$i = 0, $not$$i$i$i$i = 0, $not$$i$i$i$i$i = 0, $not$$i$i$i$i$i$i = 0, $not$$i$i$i$i$i$i$i = 0, $not$$i$i$i$i$i$i$i$i = 0, $not$$i$i$i$i1$i$i = 0, $not$$i$i$i$i1$i$i$i$i = 0, $not$$i$i$i$i163$i = 0, $not$$i$i$i$i166$i = 0, $not$$i$i$i$i190$i = 0, $not$$i$i$i$i193$i = 0, $not$$i$i$i$i210$i = 0, $not$$i$i$i$i213$i = 0, $not$$i$i$i$i216$i = 0, $not$$i$i$i$i224$i = 0, $not$$i$i$i$i254$i = 0, $not$$i$i$i$i257$i = 0, $not$$i$i$i$i266$i = 0;
 var $not$$i$i$i$i33$i$i$i = 0, $not$$i$i$i$i35$i$i$i$i = 0, $not$$i$i$i$i361$i = 0, $not$$i$i$i$i4$i$i = 0, $not$$i$i$i$i4$i$i$i$i = 0, $not$$i$i$i$i42$i$i$i = 0, $not$$i$i$i$i56$i$i$i$i = 0, $not$not$$i$i$i$i$i = 0, $not$not$$i$i$i$i$i$i = 0, $not$not$$i$i$i$i333$i = 0, $not$not$$i$i$i$i413$i = 0, $num_added$0$lcssa$i = 0, $num_added$0930$i = 0, $num_added$1$lcssa$i = 0, $num_added$1918$i = 0, $num_added$2589$i = 0, $num_added$3$lcssa$i = 0, $num_added$3914$i = 0, $offsets$i = 0, $parent$i = 0;
 var $parent$idx$val$i = 0, $parent$idx$val$pre$i = 0, $parent$idx160$val$i = 0, $personalityslot$sroa$0$0 = 0, $personalityslot$sroa$0$0$i = 0, $personalityslot$sroa$0$5611$i = 0, $personalityslot$sroa$0$5612$i = 0, $personalityslot$sroa$14$0$i = 0, $personalityslot$sroa$14$5609$i = 0, $personalityslot$sroa$14$5610$i = 0, $personalityslot$sroa$5$0 = 0, $ptr$0$i$i$i$i$i = 0, $ptr$0$i$i$i$i$i$i = 0, $pts$i = 0, $pts$idx$val$i = 0, $pts$idx150$val$i = 0, $pts$idx157$val904$i = 0, $pts$idx158$val905$i = 0, $pts$idx162$val$i = 0, $rev_offsets$sroa$11$0602$i = 0;
 var $rev_offsets$sroa$7$0601$i = 0, $self$idx1$val$idx$i$i$i$i$i$i$i = 0, $self$idx1$val$idx$i$i$i$i$i$i$i$i = 0, $self$idx1$val$idx$i$i$i$i$i$i301$i = 0, $self$idx1$val$idx$i$i$i$i$i$i381$i = 0, $self$idx1$val$idx$val$i$i$i$i$i$i$i = 0, $self$idx1$val$idx$val$i$i$i$i$i$i$i$i = 0, $self$idx1$val$idx$val$i$i$i$i$i$i302$i = 0, $self$idx1$val$idx$val$i$i$i$i$i$i382$i = 0, $self$idx1$val$idx$val$i$i$i$i46$i$i$i$i = 0, $self$idx1$val$idx$val$i$i$i$i72$i$i$i$i = 0, $self$idx1$val$idx$val$i$i$i78$i$i$i$i = 0, $self$idx1$val$idx$val$i$i8$i$i$i$i$i = 0, $self$idx1$val$idx$val$i$i8$i$i$i$i$i$i = 0, $self$idx1$val$idx$val$i$i8$i$i49$i$i$i$i = 0, $self$idx1$val$idx$val$i$i8$i$i75$i$i$i$i = 0, $self$idx1$val$idx$val$i$i8$i70$i$i$i$i = 0, $self$idx1$val$idx$val$i$i8$i82$i$i$i$i = 0, $sub_determinants$i = 0, $sub_determinants$idx$val$i = 0;
 var $sublist$i = 0, $switchtmp$i$i$i$i$i = 0, $switchtmp$i$i$i$i$i$i = 0, $switchtmp$i$i$i$i311$i = 0, $switchtmp$i$i$i$i391$i = 0, $switchtmp40$i$i$i$i$i = 0, $switchtmp40$i$i$i$i$i$i = 0, $switchtmp40$i$i$i$i310$i = 0, $switchtmp40$i$i$i$i390$i = 0, $template = 0, $tmp$0$copyload$i$i$i$i = 0, $tmp$0$copyload$i$i$i$i$pre = 0, $tmp$0$copyload$i$i$i443$i = 0, $tmp$0$copyload$i$i$i449$i = 0, $tmp_ret$sroa$0$0$ph$i$i$i$i = 0, $tmp_ret$sroa$0$0$ph$i$i$i$i$i = 0, $tmp_ret$sroa$0$0$ph$i$i$i332$i = 0, $tmp_ret$sroa$0$0$ph$i$i$i412$i = 0, $value$sroa$10$i$sroa$4$0$_22$sroa$11$0$$sroa_cast$i$sroa_idx70 = 0, $value$sroa$10$i$sroa$5$0$_22$sroa$11$0$$sroa_cast$i$sroa_idx72 = 0;
 var $vector$sroa$0$1$i$i$i = 0, $vector$sroa$0$2$i$i$i = 0, $vector$sroa$9$1$i$i$i = 0, $vector$sroa$9$2$i$i$i = 0, $x$i$sroa$0$i$i$i = 0, $x$i$sroa$0$i$i$i$i = 0, $x$i$sroa$0$i$i$i$i$i = 0, $x$i$sroa$0$i$i15$i$i$i = 0, $x$i$sroa$4$0$$sroa_idx$i$i$i = 0, $x$i$sroa$4$0$$sroa_idx$i$i$i$i = 0, $x$i$sroa$4$0$$sroa_idx$i$i$i$i$i = 0, $x$i$sroa$4$0$$sroa_idx$i$i34$i$i$i = 0, $x$i$sroa$6$0$$sroa_idx$i$i$i = 0, $x$i$sroa$6$0$$sroa_idx$i$i$i$i = 0, $x$i$sroa$6$0$$sroa_idx$i$i$i$i$i = 0, $x$i$sroa$6$0$$sroa_idx$i$i36$i$i$i = 0, $x$i$sroa$7$0$$sroa_raw_idx$i$i$i$i = 0, $x$i$sroa$7$0$$sroa_raw_idx$i$i$i$i$i = 0, $x$i$sroa$7$i$i$i$i$i = 0, dest = 0;
 var label = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 896|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(896|0);
 $_6$sroa$4$i376$i = sp + 892|0;
 $_6$sroa$4$i296$i = sp + 888|0;
 $x$i$sroa$0$i$i$i$i = sp + 704|0;
 $x$i$sroa$0$i$i15$i$i$i = sp + 528|0;
 $x$i$sroa$7$i$i$i$i$i = sp + 480|0;
 $x$i$sroa$0$i$i$i$i$i = sp + 304|0;
 $_7$sroa$5$i$i$i = sp + 884|0;
 $_6$sroa$4$i$i = sp + 880|0;
 $x$i$sroa$0$i$i$i = sp + 128|0;
 $pts$i = sp + 112|0;
 $offsets$i = sp + 96|0;
 $sub_determinants$i = sp + 80|0;
 $map$i = sp + 64|0;
 $sublist$i = sp + 48|0;
 $parent$i = sp + 32|0;
 $data$i = sp + 16|0;
 $template = sp;
 $0 = (_malloc(132)|0);
 $1 = ($0|0)==(0|0);
 if ($1) {
  __THREW__ = 0;
  invoke_v(210);
  $2 = __THREW__; __THREW__ = 0;
  $3 = ___cxa_find_matching_catch_2()|0;
  $4 = tempRet0;
  $personalityslot$sroa$0$0 = $3;$personalityslot$sroa$5$0 = $4;
  ___resumeException($personalityslot$sroa$0$0|0);
  // unreachable;
 }
 $5 = $0;
 HEAP32[$template>>2] = $5;
 $6 = ((($template)) + 4|0);
 HEAP32[$6>>2] = 3;
 $7 = ((($template)) + 8|0);
 HEAP32[$7>>2] = 0;
 $8 = ((($pts$i)) + 4|0);
 $9 = ((($pts$i)) + 8|0);
 $10 = ((($offsets$i)) + 4|0);
 $11 = ((($offsets$i)) + 8|0);
 $12 = ((($sub_determinants$i)) + 4|0);
 $13 = ((($sub_determinants$i)) + 8|0);
 $14 = ((($map$i)) + 4|0);
 $15 = ((($map$i)) + 8|0);
 $16 = ((($parent$i)) + 4|0);
 $17 = ((($parent$i)) + 8|0);
 $18 = ((($sublist$i)) + 4|0);
 $19 = ((($sublist$i)) + 8|0);
 $20 = $map$i;
 $665 = 1;$iter$sroa$0$0394 = 0;
 L5: while(1) {
  $26 = (($iter$sroa$0$0394) + 1)|0;
  HEAP32[$pts$i>>2] = 1;
  HEAP32[$8>>2] = 0;
  HEAP32[$9>>2] = 0;
  HEAP32[$offsets$i>>2] = 1;
  HEAP32[$10>>2] = 0;
  HEAP32[$11>>2] = 0;
  HEAP32[$sub_determinants$i>>2] = 1;
  HEAP32[$12>>2] = 0;
  HEAP32[$13>>2] = 0;
  $27 = (($iter$sroa$0$0394) + 2)|0;
  $28 = (_malloc(184)|0);
  $29 = ($28|0)==(0|0);
  if ($29) {
   label = 9;
   break;
  }
  _memcpy(($28|0),($x$i$sroa$0$i$i$i|0),176)|0;
  $x$i$sroa$4$0$$sroa_idx$i$i$i = ((($28)) + 176|0);
  HEAP32[$x$i$sroa$4$0$$sroa_idx$i$i$i>>2] = 0;
  $x$i$sroa$6$0$$sroa_idx$i$i$i = ((($28)) + 182|0);
  HEAP16[$x$i$sroa$6$0$$sroa_idx$i$i$i>>1] = 0;
  $33 = $28;
  HEAP32[$map$i>>2] = $33;
  HEAP32[$14>>2] = 0;
  HEAP32[$15>>2] = 0;
  $43 = 1;$690 = (1);$691 = 1;$692 = 0;$iter$sroa$0$0950$i = 0;
  while(1) {
   if ($691) {
    __THREW__ = 0;
    invoke_vi(339,($pts$i|0));
    $36 = __THREW__; __THREW__ = 0;
    $37 = $36&1;
    if ($37) {
     label = 224;
     break L5;
    }
    $$pre$i172$i = HEAP32[$9>>2]|0;
    $$pre$i = HEAP32[$pts$i>>2]|0;
    $39 = $$pre$i;$40 = $$pre$i172$i;
   } else {
    $39 = $690;$40 = $692;
   }
   $38 = (($39) + ($40<<2)|0);
   HEAP32[$38>>2] = $iter$sroa$0$0950$i;
   $41 = HEAP32[$9>>2]|0;
   $42 = (($41) + 1)|0;
   HEAP32[$9>>2] = $42;
   $44 = ($43>>>0)<($26>>>0);
   $45 = (($43) + 1)|0;
   $$idx$val$i171$i = HEAP32[$8>>2]|0;
   $46 = ($42|0)==($$idx$val$i171$i|0);
   if ($44) {
    $iter$sroa$0$0950$i$phi = $43;$43 = $45;$690 = $39;$691 = $46;$692 = $42;$iter$sroa$0$0950$i = $iter$sroa$0$0950$i$phi;
   } else {
    break;
   }
  }
  if ($46) {
   __THREW__ = 0;
   invoke_vi(339,($pts$i|0));
   $34 = __THREW__; __THREW__ = 0;
   $35 = $34&1;
   if ($35) {
    label = 225;
    break;
   }
   $$pre$i$i = HEAP32[$9>>2]|0;
   $49 = $$pre$i$i;
  } else {
   $49 = $42;
  }
  $47 = HEAP32[$pts$i>>2]|0;
  $48 = (($47) + ($49<<2)|0);
  HEAP32[$48>>2] = 0;
  $50 = (($49) + 1)|0;
  HEAP32[$9>>2] = $50;
  $51 = HEAP32[$11>>2]|0;
  $$idx$val$i177$i = HEAP32[$10>>2]|0;
  $52 = ($51|0)==($$idx$val$i177$i|0);
  if ($52) {
   __THREW__ = 0;
   invoke_vi(339,($offsets$i|0));
   $53 = __THREW__; __THREW__ = 0;
   $54 = $53&1;
   if ($54) {
    label = 225;
    break;
   }
   $$pre$i178$i = HEAP32[$11>>2]|0;
   $57 = $$pre$i178$i;
  } else {
   $57 = $51;
  }
  $55 = HEAP32[$offsets$i>>2]|0;
  $56 = (($55) + ($57<<2)|0);
  HEAP32[$56>>2] = $27;
  $58 = (($57) + 1)|0;
  HEAP32[$11>>2] = $58;
  $462 = 1;$693 = $58;$determinant_index$0944$i = 0;$iter2$sroa$0$0943$i = 0;$last_dim_begin$0948$i = 0;$last_dim_end$0947$i = $27;$last_num_points$0945$i = $26;
  while(1) {
   $59 = ($last_dim_begin$0948$i|0)==($last_dim_end$0947$i|0);
   if ($59) {
    $64 = $693;$determinant_index$1$lcssa$i = $determinant_index$0944$i;$num_added$0$lcssa$i = 0;
   } else {
    $60 = ($last_num_points$0945$i|0)==(0);
    $61 = (($last_num_points$0945$i) + 1)|0;
    $62 = ($61|0)==(0);
    $curr$0931$i = $last_dim_begin$0948$i;$determinant_index$1934$i = $determinant_index$0944$i;$num_added$0930$i = 0;
    while(1) {
     if ($60) {
      $determinant_index$2$lcssa$i = $determinant_index$1934$i;$num_added$1$lcssa$i = $num_added$0930$i;
     } else {
      $391 = 1;$determinant_index$2919$i = $determinant_index$1934$i;$iter4$sroa$0$0917$i = 0;$num_added$1918$i = $num_added$0930$i;
      while(1) {
       HEAP32[$sublist$i>>2] = 1;
       HEAP32[$18>>2] = 0;
       HEAP32[$19>>2] = 0;
       $68 = (($iter4$sroa$0$0917$i) + ($curr$0931$i))|0;
       $pts$idx157$val904$i = HEAP32[$pts$i>>2]|0;
       $pts$idx158$val905$i = HEAP32[$9>>2]|0;
       $69 = ($pts$idx158$val905$i>>>0)>($68>>>0);
       $70 = (($pts$idx157$val904$i) + ($68<<2)|0);
       if ($69) {
        $694 = (1);$77 = 0;$86 = 1;$iter6$sroa$0$0906$i$us = 0;
       } else {
        label = 39;
        break L5;
       }
       while(1) {
        $71 = (($iter6$sroa$0$0906$i$us) + ($curr$0931$i))|0;
        $72 = ($pts$idx158$val905$i>>>0)>($71>>>0);
        if (!($72)) {
         label = 37;
         break L5;
        }
        $73 = HEAP32[$70>>2]|0;
        $74 = (($pts$idx157$val904$i) + ($71<<2)|0);
        $75 = HEAP32[$74>>2]|0;
        $76 = ($73|0)==($75|0);
        if ($76) {
         $695 = $694;$94 = $77;
        } else {
         $$idx$val$i242$i$us = HEAP32[$18>>2]|0;
         $78 = ($77|0)==($$idx$val$i242$i$us|0);
         if ($78) {
          __THREW__ = 0;
          invoke_vi(339,($sublist$i|0));
          $79 = __THREW__; __THREW__ = 0;
          $80 = $79&1;
          if ($80) {
           label = 38;
           break L5;
          }
          $$pre$i243$i$us = HEAP32[$19>>2]|0;
          $$pre1103$i$us = HEAP32[$sublist$i>>2]|0;
          $82 = $$pre1103$i$us;$83 = $$pre$i243$i$us;
         } else {
          $82 = $694;$83 = $77;
         }
         $81 = (($82) + ($83<<2)|0);
         HEAP32[$81>>2] = $75;
         $84 = HEAP32[$19>>2]|0;
         $85 = (($84) + 1)|0;
         HEAP32[$19>>2] = $85;
         $695 = $82;$94 = $85;
        }
        $87 = ($86>>>0)<($last_num_points$0945$i>>>0);
        $88 = (($86) + 1)|0;
        if ($87) {
         $iter6$sroa$0$0906$i$us$phi = $86;$694 = $695;$77 = $94;$86 = $88;$iter6$sroa$0$0906$i$us = $iter6$sroa$0$0906$i$us$phi;
        } else {
         break;
        }
       }
       $93 = HEAP32[$70>>2]|0;
       $$idx$val$i248$i = HEAP32[$18>>2]|0;
       $95 = ($94|0)==($$idx$val$i248$i|0);
       if ($95) {
        __THREW__ = 0;
        invoke_vi(339,($sublist$i|0));
        $96 = __THREW__; __THREW__ = 0;
        $97 = $96&1;
        if ($97) {
         label = 228;
         break L5;
        }
        $$pre$i249$i = HEAP32[$19>>2]|0;
        $100 = $$pre$i249$i;
       } else {
        $100 = $94;
       }
       $98 = HEAP32[$sublist$i>>2]|0;
       $99 = (($98) + ($100<<2)|0);
       HEAP32[$99>>2] = $93;
       $101 = (($100) + 1)|0;
       HEAP32[$19>>2] = $101;
       $102 = HEAP32[$14>>2]|0;
       $103 = HEAP32[$map$i>>2]|0;
       HEAP32[$_6$sroa$4$i$i>>2] = $103;
       $node$sroa$0$0$i$i$i = $102;$node$sroa$5$0$in$i$i$i = $_6$sroa$4$i$i;
       L47: while(1) {
        $node$sroa$5$0147$i$i$i = HEAP32[$node$sroa$5$0$in$i$i$i>>2]|0;
        $self$idx1$val$idx$i$i$i$i$i$i$i = ((($node$sroa$5$0147$i$i$i)) + 182|0);
        $self$idx1$val$idx$val$i$i$i$i$i$i$i = HEAP16[$self$idx1$val$idx$i$i$i$i$i$i$i>>1]|0;
        $104 = $self$idx1$val$idx$val$i$i$i$i$i$i$i&65535;
        $105 = (($node$sroa$5$0147$i$i$i) + (($104*12)|0)|0);
        $_15$sroa$0$0$i$i$i$i$i = 0;$iter$sroa$0$0$i$i$i$i$i = $node$sroa$5$0147$i$i$i;$iter$sroa$7$0$i$i$i$i$i = 0;
        L49: while(1) {
         $106 = ($iter$sroa$0$0$i$i$i$i$i|0)==($105|0);
         $107 = ((($iter$sroa$0$0$i$i$i$i$i)) + 12|0);
         $108 = $106&1;
         $109 = $108 ^ 1;
         $iter$sroa$7$0$$i$i$i$i$i = (($109) + ($iter$sroa$7$0$i$i$i$i$i))|0;
         $iter$sroa$0$0$$i$i$i$i$i = $106 ? $iter$sroa$0$0$i$i$i$i$i : $107;
         $_15$sroa$0$0$iter$sroa$7$0$i$i$i$i$i = $106 ? $_15$sroa$0$0$i$i$i$i$i : $iter$sroa$7$0$i$i$i$i$i;
         $switchtmp40$i$i$i$i$i = ($iter$sroa$0$0$i$i$i$i$i|0)==(0|0);
         $switchtmp$i$i$i$i$i = $106 | $switchtmp40$i$i$i$i$i;
         if ($switchtmp$i$i$i$i$i) {
          $tmp_ret$sroa$0$0$ph$i$i$i$i = $104;
          break;
         }
         $$idx2$val$i$i$i$i$i = HEAP32[$iter$sroa$0$0$i$i$i$i$i>>2]|0;
         $$idx3$i$i$i$i$i = ((($iter$sroa$0$0$i$i$i$i$i)) + 8|0);
         $$idx3$val$i$i$i$i$i = HEAP32[$$idx3$i$i$i$i$i>>2]|0;
         $110 = ($$idx3$val$i$i$i$i$i>>>0)>=($101>>>0);
         $_0$0$sroa$speculated$i$i$i$i$i$i$i$i$i = $110 ? $101 : $$idx3$val$i$i$i$i$i;
         $iter$sroa$0$0$i$i$i$i$i$i$i$i = 0;
         while(1) {
          $111 = ($iter$sroa$0$0$i$i$i$i$i$i$i$i>>>0)<($_0$0$sroa$speculated$i$i$i$i$i$i$i$i$i>>>0);
          if (!($111)) {
           label = 48;
           break;
          }
          $114 = (($iter$sroa$0$0$i$i$i$i$i$i$i$i) + 1)|0;
          $115 = (($98) + ($iter$sroa$0$0$i$i$i$i$i$i$i$i<<2)|0);
          $116 = (($$idx2$val$i$i$i$i$i) + ($iter$sroa$0$0$i$i$i$i$i$i$i$i<<2)|0);
          $$val$i$i$i$i$i$i$i$i = HEAP32[$115>>2]|0;
          $$val14$i$i$i$i$i$i$i$i = HEAP32[$116>>2]|0;
          $117 = ($$val$i$i$i$i$i$i$i$i|0)==($$val14$i$i$i$i$i$i$i$i|0);
          if ($117) {
           $iter$sroa$0$0$i$i$i$i$i$i$i$i = $114;
          } else {
           label = 50;
           break;
          }
         }
         if ((label|0) == 48) {
          label = 0;
          $112 = ($$idx3$val$i$i$i$i$i|0)==($101|0);
          $113 = ($$idx3$val$i$i$i$i$i>>>0)>($101>>>0);
          $$$i15$i$i$i$i$i$i$i$i = $113 ? -1 : 1;
          $_0$0$i16$i$i$i$i$i$i$i$i = $112 ? 0 : $$$i15$i$i$i$i$i$i$i$i;
          $_0$0$i$i$i$i$i$i$i$i = $_0$0$i16$i$i$i$i$i$i$i$i;
         }
         else if ((label|0) == 50) {
          label = 0;
          $118 = ($$val$i$i$i$i$i$i$i$i>>>0)<($$val14$i$i$i$i$i$i$i$i>>>0);
          $$$i$le$i$i$i$i$i$i$i$i = $118 ? -1 : 1;
          $_0$0$i$i$i$i$i$i$i$i = $$$i$le$i$i$i$i$i$i$i$i;
         }
         switch ($_0$0$i$i$i$i$i$i$i$i<<24>>24) {
         case 0:  {
          label = 56;
          break L47;
          break;
         }
         case 1:  {
          $_15$sroa$0$0$i$i$i$i$i = $_15$sroa$0$0$iter$sroa$7$0$i$i$i$i$i;$iter$sroa$0$0$i$i$i$i$i = $iter$sroa$0$0$$i$i$i$i$i;$iter$sroa$7$0$i$i$i$i$i = $iter$sroa$7$0$$i$i$i$i$i;
          break;
         }
         case -1:  {
          $tmp_ret$sroa$0$0$ph$i$i$i$i = $_15$sroa$0$0$iter$sroa$7$0$i$i$i$i$i;
          break L49;
          break;
         }
         default: {
          label = 52;
          break L5;
         }
         }
        }
        $not$not$$i$i$i$i$i = ($node$sroa$0$0$i$i$i|0)==(0);
        if ($not$not$$i$i$i$i$i) {
         label = 54;
         break;
        }
        $121 = (($node$sroa$0$0$i$i$i) + -1)|0;
        $122 = (((($node$sroa$5$0147$i$i$i)) + 184|0) + ($tmp_ret$sroa$0$0$ph$i$i$i$i<<2)|0);
        $node$sroa$0$0$i$i$i = $121;$node$sroa$5$0$in$i$i$i = $122;
       }
       if ((label|0) == 54) {
        label = 0;
        $119 = (($98) + ($101<<2)|0);
        $120 = ($101|0)==(0);
        if ($120) {
         $num_added$3$lcssa$i = $num_added$1918$i;
        } else {
         $131 = $pts$idx158$val905$i;$696 = $pts$idx157$val904$i;$iter8$sroa$0$0$in913$i = $98;$num_added$3914$i = $num_added$1918$i;
         while(1) {
          $129 = ((($iter8$sroa$0$0$in913$i)) + 4|0);
          $130 = HEAP32[$iter8$sroa$0$0$in913$i>>2]|0;
          $$idx$val$i281$i = HEAP32[$8>>2]|0;
          $132 = ($131|0)==($$idx$val$i281$i|0);
          if ($132) {
           __THREW__ = 0;
           invoke_vi(339,($pts$i|0));
           $137 = __THREW__; __THREW__ = 0;
           $138 = $137&1;
           if ($138) {
            label = 227;
            break L5;
           }
           $$pre$i282$i = HEAP32[$9>>2]|0;
           $$pre1104$i = HEAP32[$pts$i>>2]|0;
           $140 = $$pre1104$i;$141 = $$pre$i282$i;
          } else {
           $140 = $696;$141 = $131;
          }
          $139 = (($140) + ($141<<2)|0);
          HEAP32[$139>>2] = $130;
          $142 = HEAP32[$9>>2]|0;
          $143 = (($142) + 1)|0;
          HEAP32[$9>>2] = $143;
          $144 = (($num_added$3914$i) + 1)|0;
          $145 = ($129|0)==($119|0);
          if ($145) {
           $num_added$3$lcssa$i = $144;
           break;
          } else {
           $131 = $143;$696 = $140;$iter8$sroa$0$0$in913$i = $129;$num_added$3914$i = $144;
          }
         }
        }
        $133 = HEAP32[$13>>2]|0;
        $$idx$val$i275$i = HEAP32[$12>>2]|0;
        $134 = ($133|0)==($$idx$val$i275$i|0);
        if ($134) {
         __THREW__ = 0;
         invoke_vi(339,($sub_determinants$i|0));
         $135 = __THREW__; __THREW__ = 0;
         $136 = $135&1;
         if ($136) {
          label = 228;
          break L5;
         }
         $$pre$i276$i = HEAP32[$13>>2]|0;
         $148 = $$pre$i276$i;
        } else {
         $148 = $133;
        }
        $146 = HEAP32[$sub_determinants$i>>2]|0;
        $147 = (($146) + ($148<<2)|0);
        HEAP32[$147>>2] = $determinant_index$2919$i;
        $149 = HEAP32[$13>>2]|0;
        $150 = (($149) + 1)|0;
        HEAP32[$13>>2] = $150;
        $_144$sroa$0$0$copyload$i = HEAP32[$sublist$i>>2]|0;
        $_144$sroa$4$0$copyload$i = HEAP32[$18>>2]|0;
        $_144$sroa$5$0$copyload$i = HEAP32[$19>>2]|0;
        $151 = HEAP32[$14>>2]|0;
        $152 = HEAP32[$map$i>>2]|0;
        HEAP32[$_7$sroa$5$i$i$i>>2] = $152;
        $node$sroa$0$0$i$i$i$i = $151;$node$sroa$5$0$in$i$i$i$i = $_7$sroa$5$i$i$i;
        L75: while(1) {
         $node$sroa$5$0147$i$i$i$i = HEAP32[$node$sroa$5$0$in$i$i$i$i>>2]|0;
         $self$idx1$val$idx$i$i$i$i$i$i$i$i = ((($node$sroa$5$0147$i$i$i$i)) + 182|0);
         $self$idx1$val$idx$val$i$i$i$i$i$i$i$i = HEAP16[$self$idx1$val$idx$i$i$i$i$i$i$i$i>>1]|0;
         $153 = $self$idx1$val$idx$val$i$i$i$i$i$i$i$i&65535;
         $154 = (($node$sroa$5$0147$i$i$i$i) + (($153*12)|0)|0);
         $_15$sroa$0$0$i$i$i$i$i$i = 0;$iter$sroa$0$0$i$i$i$i$i$i = $node$sroa$5$0147$i$i$i$i;$iter$sroa$7$0$i$i$i$i$i$i = 0;
         L77: while(1) {
          $155 = ($iter$sroa$0$0$i$i$i$i$i$i|0)==($154|0);
          $156 = ((($iter$sroa$0$0$i$i$i$i$i$i)) + 12|0);
          $157 = $155&1;
          $158 = $157 ^ 1;
          $iter$sroa$7$0$$i$i$i$i$i$i = (($158) + ($iter$sroa$7$0$i$i$i$i$i$i))|0;
          $iter$sroa$0$0$$i$i$i$i$i$i = $155 ? $iter$sroa$0$0$i$i$i$i$i$i : $156;
          $_15$sroa$0$0$iter$sroa$7$0$i$i$i$i$i$i = $155 ? $_15$sroa$0$0$i$i$i$i$i$i : $iter$sroa$7$0$i$i$i$i$i$i;
          $switchtmp40$i$i$i$i$i$i = ($iter$sroa$0$0$i$i$i$i$i$i|0)==(0|0);
          $switchtmp$i$i$i$i$i$i = $155 | $switchtmp40$i$i$i$i$i$i;
          if ($switchtmp$i$i$i$i$i$i) {
           $tmp_ret$sroa$0$0$ph$i$i$i$i$i = $153;
           break;
          }
          $$idx2$val$i$i$i$i$i$i = HEAP32[$iter$sroa$0$0$i$i$i$i$i$i>>2]|0;
          $$idx3$i$i$i$i$i$i = ((($iter$sroa$0$0$i$i$i$i$i$i)) + 8|0);
          $$idx3$val$i$i$i$i$i$i = HEAP32[$$idx3$i$i$i$i$i$i>>2]|0;
          $159 = ($$idx3$val$i$i$i$i$i$i>>>0)>=($_144$sroa$5$0$copyload$i>>>0);
          $_0$0$sroa$speculated$i$i$i$i$i$i$i$i$i$i = $159 ? $_144$sroa$5$0$copyload$i : $$idx3$val$i$i$i$i$i$i;
          $iter$sroa$0$0$i$i$i$i$i$i$i$i$i = 0;
          while(1) {
           $160 = ($iter$sroa$0$0$i$i$i$i$i$i$i$i$i>>>0)<($_0$0$sroa$speculated$i$i$i$i$i$i$i$i$i$i>>>0);
           if (!($160)) {
            label = 71;
            break;
           }
           $163 = (($iter$sroa$0$0$i$i$i$i$i$i$i$i$i) + 1)|0;
           $164 = (($_144$sroa$0$0$copyload$i) + ($iter$sroa$0$0$i$i$i$i$i$i$i$i$i<<2)|0);
           $165 = (($$idx2$val$i$i$i$i$i$i) + ($iter$sroa$0$0$i$i$i$i$i$i$i$i$i<<2)|0);
           $$val$i$i$i$i$i$i$i$i$i = HEAP32[$164>>2]|0;
           $$val14$i$i$i$i$i$i$i$i$i = HEAP32[$165>>2]|0;
           $166 = ($$val$i$i$i$i$i$i$i$i$i|0)==($$val14$i$i$i$i$i$i$i$i$i|0);
           if ($166) {
            $iter$sroa$0$0$i$i$i$i$i$i$i$i$i = $163;
           } else {
            label = 73;
            break;
           }
          }
          if ((label|0) == 71) {
           label = 0;
           $161 = ($$idx3$val$i$i$i$i$i$i|0)==($_144$sroa$5$0$copyload$i|0);
           $162 = ($$idx3$val$i$i$i$i$i$i>>>0)>($_144$sroa$5$0$copyload$i>>>0);
           $$$i15$i$i$i$i$i$i$i$i$i = $162 ? -1 : 1;
           $_0$0$i16$i$i$i$i$i$i$i$i$i = $161 ? 0 : $$$i15$i$i$i$i$i$i$i$i$i;
           $_0$0$i$i$i$i$i$i$i$i$i = $_0$0$i16$i$i$i$i$i$i$i$i$i;
          }
          else if ((label|0) == 73) {
           label = 0;
           $167 = ($$val$i$i$i$i$i$i$i$i$i>>>0)<($$val14$i$i$i$i$i$i$i$i$i>>>0);
           $$$i$le$i$i$i$i$i$i$i$i$i = $167 ? -1 : 1;
           $_0$0$i$i$i$i$i$i$i$i$i = $$$i$le$i$i$i$i$i$i$i$i$i;
          }
          switch ($_0$0$i$i$i$i$i$i$i$i$i<<24>>24) {
          case 0:  {
           label = 78;
           break L75;
           break;
          }
          case 1:  {
           $_15$sroa$0$0$i$i$i$i$i$i = $_15$sroa$0$0$iter$sroa$7$0$i$i$i$i$i$i;$iter$sroa$0$0$i$i$i$i$i$i = $iter$sroa$0$0$$i$i$i$i$i$i;$iter$sroa$7$0$i$i$i$i$i$i = $iter$sroa$7$0$$i$i$i$i$i$i;
           break;
          }
          case -1:  {
           $tmp_ret$sroa$0$0$ph$i$i$i$i$i = $_15$sroa$0$0$iter$sroa$7$0$i$i$i$i$i$i;
           break L77;
           break;
          }
          default: {
           label = 75;
           break L5;
          }
          }
         }
         $not$not$$i$i$i$i$i$i = ($node$sroa$0$0$i$i$i$i|0)==(0);
         if ($not$not$$i$i$i$i$i$i) {
          label = 80;
          break;
         }
         $168 = (($node$sroa$0$0$i$i$i$i) + -1)|0;
         $169 = (((($node$sroa$5$0147$i$i$i$i)) + 184|0) + ($tmp_ret$sroa$0$0$ph$i$i$i$i$i<<2)|0);
         $node$sroa$0$0$i$i$i$i = $168;$node$sroa$5$0$in$i$i$i$i = $169;
        }
        do {
         if ((label|0) == 78) {
          label = 0;
          $not$$i$i$i$i42$i$i$i = ($_144$sroa$4$0$copyload$i|0)==(0);
          if (!($not$$i$i$i$i42$i$i$i)) {
           _free($_144$sroa$0$0$copyload$i);
          }
          $389 = (((($node$sroa$5$0147$i$i$i$i)) + 132|0) + ($_15$sroa$0$0$iter$sroa$7$0$i$i$i$i$i$i<<2)|0);
          HEAP32[$389>>2] = $determinant_index$2919$i;
         }
         else if ((label|0) == 80) {
          label = 0;
          $170 = $_144$sroa$0$0$copyload$i;
          $171 = HEAP32[$15>>2]|0;
          $172 = (($171) + 1)|0;
          HEAP32[$15>>2] = $172;
          $$idx$val$idx$val$i$i$i$i = HEAP16[$self$idx1$val$idx$i$i$i$i$i$i$i$i>>1]|0;
          $173 = ($$idx$val$idx$val$i$i$i$i&65535)<(11);
          if ($173) {
           $220 = $$idx$val$idx$val$i$i$i$i&65535;
           $221 = (($node$sroa$5$0147$i$i$i$i) + (($tmp_ret$sroa$0$0$ph$i$i$i$i$i*12)|0)|0);
           $222 = (($tmp_ret$sroa$0$0$ph$i$i$i$i$i) + 1)|0;
           $223 = (($node$sroa$5$0147$i$i$i$i) + (($222*12)|0)|0);
           $224 = (($220) - ($tmp_ret$sroa$0$0$ph$i$i$i$i$i))|0;
           $225 = ($224*12)|0;
           _memmove(($223|0),($221|0),($225|0))|0;
           HEAP32[$221>>2] = $170;
           $_30$sroa$4$0$$sroa_idx19$i$i$i$i$i$i = (((($node$sroa$5$0147$i$i$i$i) + (($tmp_ret$sroa$0$0$ph$i$i$i$i$i*12)|0)|0)) + 4|0);
           HEAP32[$_30$sroa$4$0$$sroa_idx19$i$i$i$i$i$i>>2] = $_144$sroa$4$0$copyload$i;
           $_30$sroa$5$0$$sroa_idx21$i$i$i$i$i$i = (((($node$sroa$5$0147$i$i$i$i) + (($tmp_ret$sroa$0$0$ph$i$i$i$i$i*12)|0)|0)) + 8|0);
           HEAP32[$_30$sroa$5$0$$sroa_idx21$i$i$i$i$i$i>>2] = $_144$sroa$5$0$copyload$i;
           $self$idx1$val$idx$val$i$i8$i$i$i$i$i = HEAP16[$self$idx1$val$idx$i$i$i$i$i$i$i$i>>1]|0;
           $226 = $self$idx1$val$idx$val$i$i8$i$i$i$i$i&65535;
           $227 = (((($node$sroa$5$0147$i$i$i$i)) + 132|0) + ($tmp_ret$sroa$0$0$ph$i$i$i$i$i<<2)|0);
           $228 = (((($node$sroa$5$0147$i$i$i$i)) + 132|0) + ($222<<2)|0);
           $229 = (($226) - ($tmp_ret$sroa$0$0$ph$i$i$i$i$i))|0;
           $230 = $229 << 2;
           _memmove(($228|0),($227|0),($230|0))|0;
           HEAP32[$227>>2] = $determinant_index$2919$i;
           $231 = HEAP16[$self$idx1$val$idx$i$i$i$i$i$i$i$i>>1]|0;
           $232 = (($231) + 1)<<16>>16;
           HEAP16[$self$idx1$val$idx$i$i$i$i$i$i$i$i>>1] = $232;
           break;
          }
          $174 = (_malloc(184)|0);
          $175 = ($174|0)==(0|0);
          if ($175) {
           label = 82;
           break L5;
          }
          _memcpy(($174|0),($x$i$sroa$0$i$i$i$i$i|0),176)|0;
          $x$i$sroa$4$0$$sroa_idx$i$i$i$i$i = ((($174)) + 176|0);
          HEAP32[$x$i$sroa$4$0$$sroa_idx$i$i$i$i$i>>2] = 0;
          $x$i$sroa$6$0$$sroa_idx$i$i$i$i$i = ((($174)) + 182|0);
          HEAP16[$x$i$sroa$6$0$$sroa_idx$i$i$i$i$i>>1] = 0;
          $179 = ((($node$sroa$5$0147$i$i$i$i)) + 72|0);
          $k$sroa$0$0$copyload43105$i$i$i$i$i = HEAP32[$179>>2]|0;
          $k$sroa$5$0$$sroa_idx46$i$i$i$i$i = ((($node$sroa$5$0147$i$i$i$i)) + 76|0);
          $k$sroa$5$0$copyload47$i$i$i$i$i = HEAP32[$k$sroa$5$0$$sroa_idx46$i$i$i$i$i>>2]|0;
          $k$sroa$6$0$$sroa_idx50$i$i$i$i$i = ((($node$sroa$5$0147$i$i$i$i)) + 80|0);
          $k$sroa$6$0$copyload51$i$i$i$i$i = HEAP32[$k$sroa$6$0$$sroa_idx50$i$i$i$i$i>>2]|0;
          $180 = ((($node$sroa$5$0147$i$i$i$i)) + 156|0);
          $$val$i$i$i$i$i = HEAP32[$180>>2]|0;
          $$idx$val$idx$val$i$i$i$i$i = HEAP16[$self$idx1$val$idx$i$i$i$i$i$i$i$i>>1]|0;
          $181 = $$idx$val$idx$val$i$i$i$i$i&65535;
          $182 = (($181) + -7)|0;
          $183 = ((($node$sroa$5$0147$i$i$i$i)) + 84|0);
          $184 = ($182*12)|0;
          _memcpy(($174|0),($183|0),($184|0))|0;
          $185 = ((($node$sroa$5$0147$i$i$i$i)) + 160|0);
          $186 = ((($174)) + 132|0);
          $187 = $182 << 2;
          _memcpy(($186|0),($185|0),($187|0))|0;
          HEAP16[$self$idx1$val$idx$i$i$i$i$i$i$i$i>>1] = 6;
          $188 = $182&65535;
          HEAP16[$x$i$sroa$6$0$$sroa_idx$i$i$i$i$i>>1] = $188;
          $189 = ($tmp_ret$sroa$0$0$ph$i$i$i$i$i>>>0)<(7);
          if ($189) {
           $self$idx1$val$idx$val$i$i$i78$i$i$i$i = HEAP16[$self$idx1$val$idx$i$i$i$i$i$i$i$i>>1]|0;
           $190 = $self$idx1$val$idx$val$i$i$i78$i$i$i$i&65535;
           $191 = (($node$sroa$5$0147$i$i$i$i) + (($tmp_ret$sroa$0$0$ph$i$i$i$i$i*12)|0)|0);
           $192 = (($tmp_ret$sroa$0$0$ph$i$i$i$i$i) + 1)|0;
           $193 = (($node$sroa$5$0147$i$i$i$i) + (($192*12)|0)|0);
           $194 = (($190) - ($tmp_ret$sroa$0$0$ph$i$i$i$i$i))|0;
           $195 = ($194*12)|0;
           _memmove(($193|0),($191|0),($195|0))|0;
           HEAP32[$191>>2] = $170;
           $_30$sroa$4$0$$sroa_idx19$i$i79$i$i$i$i = (((($node$sroa$5$0147$i$i$i$i) + (($tmp_ret$sroa$0$0$ph$i$i$i$i$i*12)|0)|0)) + 4|0);
           HEAP32[$_30$sroa$4$0$$sroa_idx19$i$i79$i$i$i$i>>2] = $_144$sroa$4$0$copyload$i;
           $_30$sroa$5$0$$sroa_idx21$i$i80$i$i$i$i = (((($node$sroa$5$0147$i$i$i$i) + (($tmp_ret$sroa$0$0$ph$i$i$i$i$i*12)|0)|0)) + 8|0);
           HEAP32[$_30$sroa$5$0$$sroa_idx21$i$i80$i$i$i$i>>2] = $_144$sroa$5$0$copyload$i;
           $self$idx1$val$idx$val$i$i8$i82$i$i$i$i = HEAP16[$self$idx1$val$idx$i$i$i$i$i$i$i$i>>1]|0;
           $196 = $self$idx1$val$idx$val$i$i8$i82$i$i$i$i&65535;
           $197 = (((($node$sroa$5$0147$i$i$i$i)) + 132|0) + ($tmp_ret$sroa$0$0$ph$i$i$i$i$i<<2)|0);
           $198 = (((($node$sroa$5$0147$i$i$i$i)) + 132|0) + ($192<<2)|0);
           $199 = (($196) - ($tmp_ret$sroa$0$0$ph$i$i$i$i$i))|0;
           $200 = $199 << 2;
           _memmove(($198|0),($197|0),($200|0))|0;
           HEAP32[$197>>2] = $determinant_index$2919$i;
           $201 = HEAP16[$self$idx1$val$idx$i$i$i$i$i$i$i$i>>1]|0;
           $202 = (($201) + 1)<<16>>16;
           HEAP16[$self$idx1$val$idx$i$i$i$i$i$i$i$i>>1] = $202;
          } else {
           $203 = (($tmp_ret$sroa$0$0$ph$i$i$i$i$i) + -7)|0;
           $204 = $182 & 65535;
           $205 = (($174) + (($203*12)|0)|0);
           $206 = (($tmp_ret$sroa$0$0$ph$i$i$i$i$i) + -6)|0;
           $207 = (($174) + (($206*12)|0)|0);
           $208 = (($204) - ($203))|0;
           $209 = ($208*12)|0;
           _memmove(($207|0),($205|0),($209|0))|0;
           HEAP32[$205>>2] = $170;
           $_30$sroa$4$0$$sroa_idx19$i$i67$i$i$i$i = (((($174) + (($203*12)|0)|0)) + 4|0);
           HEAP32[$_30$sroa$4$0$$sroa_idx19$i$i67$i$i$i$i>>2] = $_144$sroa$4$0$copyload$i;
           $_30$sroa$5$0$$sroa_idx21$i$i68$i$i$i$i = (((($174) + (($203*12)|0)|0)) + 8|0);
           HEAP32[$_30$sroa$5$0$$sroa_idx21$i$i68$i$i$i$i>>2] = $_144$sroa$5$0$copyload$i;
           $self$idx1$val$idx$val$i$i8$i70$i$i$i$i = HEAP16[$x$i$sroa$6$0$$sroa_idx$i$i$i$i$i>>1]|0;
           $210 = $self$idx1$val$idx$val$i$i8$i70$i$i$i$i&65535;
           $211 = (((($174)) + 132|0) + ($203<<2)|0);
           $212 = (((($174)) + 132|0) + ($206<<2)|0);
           $213 = (($210) - ($203))|0;
           $214 = $213 << 2;
           _memmove(($212|0),($211|0),($214|0))|0;
           HEAP32[$211>>2] = $determinant_index$2919$i;
           $215 = HEAP16[$x$i$sroa$6$0$$sroa_idx$i$i$i$i$i>>1]|0;
           $216 = (($215) + 1)<<16>>16;
           HEAP16[$x$i$sroa$6$0$$sroa_idx$i$i$i$i$i>>1] = $216;
          }
          $217 = ((($node$sroa$5$0147$i$i$i$i)) + 176|0);
          $218 = HEAP32[$217>>2]|0;
          $219 = ($218|0)==(0|0);
          if ($219) {
           $237 = $node$sroa$5$0147$i$i$i$i;
           $_49$sroa$6$0$ph$i$i$i = 0;$_49$sroa$7$0$ph$i$i$i = 0;$_49$sroa$8$0$ph$i$i$i = 0;$cur_parent$sroa$0$0$ph372$i$i$i = 1;$cur_parent$sroa$10$1$ph374$i$i$i = $237;$cur_parent$sroa$13$1$ph$i$i$i = $20;$cur_parent$sroa$16$1$ph375$i$i$i = 0;$cur_parent$sroa$5$1$ph373$i$i$i = $20;$ins_edge$sroa$0$0$ph$i$i$i = $174;$ins_k$sroa$0$0$ph$i$i$i = $k$sroa$0$0$copyload43105$i$i$i$i$i;$ins_k$sroa$12$0$ph$i$i$i = $k$sroa$6$0$copyload51$i$i$i$i$i;$ins_k$sroa$7$0$ph$i$i$i = $k$sroa$5$0$copyload47$i$i$i$i$i;$ins_v$0$ph$i$i$i = $$val$i$i$i$i$i;
          } else {
           $233 = $218;
           $234 = ((($node$sroa$5$0147$i$i$i$i)) + 180|0);
           $235 = HEAP16[$234>>1]|0;
           $236 = $235&65535;
           $_49$sroa$6$0$ph$i$i$i = 0;$_49$sroa$7$0$ph$i$i$i = 0;$_49$sroa$8$0$ph$i$i$i = 0;$cur_parent$sroa$0$0$ph372$i$i$i = 0;$cur_parent$sroa$10$1$ph374$i$i$i = $233;$cur_parent$sroa$13$1$ph$i$i$i = $20;$cur_parent$sroa$16$1$ph375$i$i$i = $236;$cur_parent$sroa$5$1$ph373$i$i$i = 1;$ins_edge$sroa$0$0$ph$i$i$i = $174;$ins_k$sroa$0$0$ph$i$i$i = $k$sroa$0$0$copyload43105$i$i$i$i$i;$ins_k$sroa$12$0$ph$i$i$i = $k$sroa$6$0$copyload51$i$i$i$i$i;$ins_k$sroa$7$0$ph$i$i$i = $k$sroa$5$0$copyload47$i$i$i$i$i;$ins_v$0$ph$i$i$i = $$val$i$i$i$i$i;
          }
          L102: while(1) {
           $cur_parent$sroa$0$0$i$i$i = $cur_parent$sroa$0$0$ph372$i$i$i;$cur_parent$sroa$10$1$i$i$i = $cur_parent$sroa$10$1$ph374$i$i$i;$cur_parent$sroa$13$1$i$i$i = $cur_parent$sroa$13$1$ph$i$i$i;$cur_parent$sroa$16$1$i$i$i = $cur_parent$sroa$16$1$ph375$i$i$i;$cur_parent$sroa$5$1$i$i$i = $cur_parent$sroa$5$1$ph373$i$i$i;$ins_edge$sroa$0$0$i$i$i = $ins_edge$sroa$0$0$ph$i$i$i;$ins_k$sroa$0$0$i$i$i = $ins_k$sroa$0$0$ph$i$i$i;$ins_k$sroa$12$0$i$i$i = $ins_k$sroa$12$0$ph$i$i$i;$ins_k$sroa$7$0$i$i$i = $ins_k$sroa$7$0$ph$i$i$i;$ins_v$0$i$i$i = $ins_v$0$ph$i$i$i;
           while(1) {
            if ($cur_parent$sroa$0$0$i$i$i) {
             label = 106;
             break L102;
            }
            $238 = $cur_parent$sroa$10$1$i$i$i;
            $239 = $ins_edge$sroa$0$0$i$i$i;
            $$idx$val$idx$i24$i$i$i = ((($238)) + 182|0);
            $$idx$val$idx$val$i25$i$i$i = HEAP16[$$idx$val$idx$i24$i$i$i>>1]|0;
            $240 = ($$idx$val$idx$val$i25$i$i$i&65535)<(11);
            if ($240) {
             label = 94;
             break L102;
            }
            $269 = (_malloc(232)|0);
            $270 = ($269|0)==(0|0);
            if ($270) {
             label = 97;
             break L5;
            }
            _memcpy(($269|0),($x$i$sroa$0$i$i15$i$i$i|0),176)|0;
            $x$i$sroa$4$0$$sroa_idx$i$i34$i$i$i = ((($269)) + 176|0);
            HEAP32[$x$i$sroa$4$0$$sroa_idx$i$i34$i$i$i>>2] = 0;
            $x$i$sroa$6$0$$sroa_idx$i$i36$i$i$i = ((($269)) + 182|0);
            HEAP16[$x$i$sroa$6$0$$sroa_idx$i$i36$i$i$i>>1] = 0;
            $x$i$sroa$7$0$$sroa_raw_idx$i$i$i$i$i = ((($269)) + 184|0);
            dest=$x$i$sroa$7$0$$sroa_raw_idx$i$i$i$i$i; src=$x$i$sroa$7$i$i$i$i$i; stop=dest+48|0; do { HEAP32[dest>>2]=HEAP32[src>>2]|0; dest=dest+4|0; src=src+4|0; } while ((dest|0) < (stop|0));
            $274 = ((($238)) + 72|0);
            $k$sroa$0$0$copyload64140$i$i$i$i$i = HEAP32[$274>>2]|0;
            $k$sroa$5$0$$sroa_idx67$i$i$i$i$i = ((($238)) + 76|0);
            $k$sroa$5$0$copyload68$i$i$i$i$i = HEAP32[$k$sroa$5$0$$sroa_idx67$i$i$i$i$i>>2]|0;
            $k$sroa$6$0$$sroa_idx71$i$i$i$i$i = ((($238)) + 80|0);
            $k$sroa$6$0$copyload72$i$i$i$i$i = HEAP32[$k$sroa$6$0$$sroa_idx71$i$i$i$i$i>>2]|0;
            $275 = ((($238)) + 156|0);
            $$val$i$i38$i$i$i = HEAP32[$275>>2]|0;
            $$idx$val$idx$val$i91$i$i$i$i = HEAP16[$$idx$val$idx$i24$i$i$i>>1]|0;
            $276 = $$idx$val$idx$val$i91$i$i$i$i&65535;
            $277 = (($276) + -6)|0;
            $278 = (($276) + -7)|0;
            $279 = ((($238)) + 84|0);
            $280 = ($278*12)|0;
            _memcpy(($269|0),($279|0),($280|0))|0;
            $281 = ((($238)) + 160|0);
            $282 = ((($269)) + 132|0);
            $283 = $278 << 2;
            _memcpy(($282|0),($281|0),($283|0))|0;
            $284 = ((($238)) + 212|0);
            $285 = $277 << 2;
            _memcpy(($x$i$sroa$7$0$$sroa_raw_idx$i$i$i$i$i|0),($284|0),($285|0))|0;
            HEAP16[$$idx$val$idx$i24$i$i$i>>1] = 6;
            $286 = $278&65535;
            HEAP16[$x$i$sroa$6$0$$sroa_idx$i$i36$i$i$i>>1] = $286;
            $287 = ($277|0)==(0);
            if (!($287)) {
             $iter$sroa$0$0141$i$i$i$i$i = 0;
             while(1) {
              $288 = (($iter$sroa$0$0141$i$i$i$i$i) + 1)|0;
              $289 = $iter$sroa$0$0141$i$i$i$i$i&65535;
              $290 = (((($269)) + 184|0) + ($iter$sroa$0$0141$i$i$i$i$i<<2)|0);
              $291 = HEAP32[$290>>2]|0;
              $292 = ((($291)) + 176|0);
              HEAP32[$292>>2] = $269;
              $293 = ((($291)) + 180|0);
              HEAP16[$293>>1] = $289;
              $exitcond$i92$i$i$i$i = ($288|0)==($277|0);
              if ($exitcond$i92$i$i$i$i) {
               break;
              } else {
               $iter$sroa$0$0141$i$i$i$i$i = $288;
              }
             }
            }
            $294 = ($cur_parent$sroa$16$1$i$i$i>>>0)<(7);
            do {
             if ($294) {
              $self$idx1$val$idx$val$i$i$i$i72$i$i$i$i = HEAP16[$$idx$val$idx$i24$i$i$i>>1]|0;
              $295 = $self$idx1$val$idx$val$i$i$i$i72$i$i$i$i&65535;
              $296 = (($238) + (($cur_parent$sroa$16$1$i$i$i*12)|0)|0);
              $297 = (($cur_parent$sroa$16$1$i$i$i) + 1)|0;
              $298 = (($238) + (($297*12)|0)|0);
              $299 = (($295) - ($cur_parent$sroa$16$1$i$i$i))|0;
              $300 = ($299*12)|0;
              _memmove(($298|0),($296|0),($300|0))|0;
              HEAP32[$296>>2] = $ins_k$sroa$0$0$i$i$i;
              $_30$sroa$4$0$$sroa_idx19$i$i$i73$i$i$i$i = (((($238) + (($cur_parent$sroa$16$1$i$i$i*12)|0)|0)) + 4|0);
              HEAP32[$_30$sroa$4$0$$sroa_idx19$i$i$i73$i$i$i$i>>2] = $ins_k$sroa$7$0$i$i$i;
              $_30$sroa$5$0$$sroa_idx21$i$i$i74$i$i$i$i = (((($238) + (($cur_parent$sroa$16$1$i$i$i*12)|0)|0)) + 8|0);
              HEAP32[$_30$sroa$5$0$$sroa_idx21$i$i$i74$i$i$i$i>>2] = $ins_k$sroa$12$0$i$i$i;
              $self$idx1$val$idx$val$i$i8$i$i75$i$i$i$i = HEAP16[$$idx$val$idx$i24$i$i$i>>1]|0;
              $301 = $self$idx1$val$idx$val$i$i8$i$i75$i$i$i$i&65535;
              $302 = (((($238)) + 132|0) + ($cur_parent$sroa$16$1$i$i$i<<2)|0);
              $303 = (((($238)) + 132|0) + ($297<<2)|0);
              $304 = (($301) - ($cur_parent$sroa$16$1$i$i$i))|0;
              $305 = $304 << 2;
              _memmove(($303|0),($302|0),($305|0))|0;
              HEAP32[$302>>2] = $ins_v$0$i$i$i;
              $306 = HEAP16[$$idx$val$idx$i24$i$i$i>>1]|0;
              $307 = (($306) + 1)<<16>>16;
              HEAP16[$$idx$val$idx$i24$i$i$i>>1] = $307;
              $308 = $cur_parent$sroa$10$1$i$i$i;
              $309 = $307&65535;
              $310 = (((($308)) + 184|0) + ($297<<2)|0);
              $311 = (($cur_parent$sroa$16$1$i$i$i) + 2)|0;
              $312 = (((($308)) + 184|0) + ($311<<2)|0);
              $313 = (($309) - ($297))|0;
              $314 = $313 << 2;
              _memmove(($312|0),($310|0),($314|0))|0;
              HEAP32[$310>>2] = $239;
              $$idx$val$idx$val$i80$i$i$i$i = HEAP16[$$idx$val$idx$i24$i$i$i>>1]|0;
              $315 = $$idx$val$idx$val$i80$i$i$i$i&65535;
              $316 = (($315) + 1)|0;
              $317 = ($297>>>0)<($316>>>0);
              if ($317) {
               $iter$sroa$0$062$i83$i$i$i$i = $297;
              } else {
               break;
              }
              while(1) {
               $318 = $iter$sroa$0$062$i83$i$i$i$i&65535;
               $319 = (((($308)) + 184|0) + ($iter$sroa$0$062$i83$i$i$i$i<<2)|0);
               $320 = HEAP32[$319>>2]|0;
               $321 = ((($320)) + 176|0);
               HEAP32[$321>>2] = $238;
               $322 = ((($320)) + 180|0);
               HEAP16[$322>>1] = $318;
               $iter$sroa$0$0$i84$i$i$i$i = (($iter$sroa$0$062$i83$i$i$i$i) + 1)|0;
               $exitcond$i85$i$i$i$i = ($iter$sroa$0$0$i84$i$i$i$i|0)==($316|0);
               if ($exitcond$i85$i$i$i$i) {
                break;
               } else {
                $iter$sroa$0$062$i83$i$i$i$i = $iter$sroa$0$0$i84$i$i$i$i;
               }
              }
             } else {
              $323 = (($cur_parent$sroa$16$1$i$i$i) + -7)|0;
              $self$idx1$val$idx$val$i$i$i$i46$i$i$i$i = HEAP16[$x$i$sroa$6$0$$sroa_idx$i$i36$i$i$i>>1]|0;
              $324 = $self$idx1$val$idx$val$i$i$i$i46$i$i$i$i&65535;
              $325 = (($269) + (($323*12)|0)|0);
              $326 = (($cur_parent$sroa$16$1$i$i$i) + -6)|0;
              $327 = (($269) + (($326*12)|0)|0);
              $328 = (($324) - ($323))|0;
              $329 = ($328*12)|0;
              _memmove(($327|0),($325|0),($329|0))|0;
              HEAP32[$325>>2] = $ins_k$sroa$0$0$i$i$i;
              $_30$sroa$4$0$$sroa_idx19$i$i$i47$i$i$i$i = (((($269) + (($323*12)|0)|0)) + 4|0);
              HEAP32[$_30$sroa$4$0$$sroa_idx19$i$i$i47$i$i$i$i>>2] = $ins_k$sroa$7$0$i$i$i;
              $_30$sroa$5$0$$sroa_idx21$i$i$i48$i$i$i$i = (((($269) + (($323*12)|0)|0)) + 8|0);
              HEAP32[$_30$sroa$5$0$$sroa_idx21$i$i$i48$i$i$i$i>>2] = $ins_k$sroa$12$0$i$i$i;
              $self$idx1$val$idx$val$i$i8$i$i49$i$i$i$i = HEAP16[$x$i$sroa$6$0$$sroa_idx$i$i36$i$i$i>>1]|0;
              $330 = $self$idx1$val$idx$val$i$i8$i$i49$i$i$i$i&65535;
              $331 = (((($269)) + 132|0) + ($323<<2)|0);
              $332 = (((($269)) + 132|0) + ($326<<2)|0);
              $333 = (($330) - ($323))|0;
              $334 = $333 << 2;
              _memmove(($332|0),($331|0),($334|0))|0;
              HEAP32[$331>>2] = $ins_v$0$i$i$i;
              $335 = HEAP16[$x$i$sroa$6$0$$sroa_idx$i$i36$i$i$i>>1]|0;
              $336 = (($335) + 1)<<16>>16;
              HEAP16[$x$i$sroa$6$0$$sroa_idx$i$i36$i$i$i>>1] = $336;
              $337 = $336&65535;
              $338 = (((($269)) + 184|0) + ($326<<2)|0);
              $339 = (($cur_parent$sroa$16$1$i$i$i) + -5)|0;
              $340 = (((($269)) + 184|0) + ($339<<2)|0);
              $341 = (($337) - ($326))|0;
              $342 = $341 << 2;
              _memmove(($340|0),($338|0),($342|0))|0;
              HEAP32[$338>>2] = $239;
              $$idx$val$idx$val$i54$i$i$i$i = HEAP16[$x$i$sroa$6$0$$sroa_idx$i$i36$i$i$i>>1]|0;
              $343 = $$idx$val$idx$val$i54$i$i$i$i&65535;
              $344 = (($343) + 1)|0;
              $345 = ($326>>>0)<($344>>>0);
              if ($345) {
               $iter$sroa$0$062$i57$i$i$i$i = $326;
              } else {
               break;
              }
              while(1) {
               $346 = $iter$sroa$0$062$i57$i$i$i$i&65535;
               $347 = (((($269)) + 184|0) + ($iter$sroa$0$062$i57$i$i$i$i<<2)|0);
               $348 = HEAP32[$347>>2]|0;
               $349 = ((($348)) + 176|0);
               HEAP32[$349>>2] = $269;
               $350 = ((($348)) + 180|0);
               HEAP16[$350>>1] = $346;
               $iter$sroa$0$0$i58$i$i$i$i = (($iter$sroa$0$062$i57$i$i$i$i) + 1)|0;
               $exitcond$i59$i$i$i$i = ($iter$sroa$0$0$i58$i$i$i$i|0)==($344|0);
               if ($exitcond$i59$i$i$i$i) {
                break;
               } else {
                $iter$sroa$0$062$i57$i$i$i$i = $iter$sroa$0$0$i58$i$i$i$i;
               }
              }
             }
            } while(0);
            $357 = ((($238)) + 176|0);
            $358 = HEAP32[$357>>2]|0;
            $359 = ($358|0)==(0|0);
            if ($359) {
             $cur_parent$sroa$5$1$i$i$i$phi = $cur_parent$sroa$13$1$i$i$i;$cur_parent$sroa$0$0$i$i$i = 1;$cur_parent$sroa$10$1$i$i$i = $_49$sroa$6$0$ph$i$i$i;$cur_parent$sroa$13$1$i$i$i = $_49$sroa$7$0$ph$i$i$i;$cur_parent$sroa$16$1$i$i$i = $_49$sroa$8$0$ph$i$i$i;$ins_edge$sroa$0$0$i$i$i = $269;$ins_k$sroa$0$0$i$i$i = $k$sroa$0$0$copyload64140$i$i$i$i$i;$ins_k$sroa$12$0$i$i$i = $k$sroa$6$0$copyload72$i$i$i$i$i;$ins_k$sroa$7$0$i$i$i = $k$sroa$5$0$copyload68$i$i$i$i$i;$ins_v$0$i$i$i = $$val$i$i38$i$i$i;$cur_parent$sroa$5$1$i$i$i = $cur_parent$sroa$5$1$i$i$i$phi;
            } else {
             break;
            }
           }
           $360 = $358;
           $361 = (($cur_parent$sroa$5$1$i$i$i) + 1)|0;
           $362 = ((($238)) + 180|0);
           $363 = HEAP16[$362>>1]|0;
           $364 = $363&65535;
           $_49$sroa$6$0$ph$i$i$i = $360;$_49$sroa$7$0$ph$i$i$i = $cur_parent$sroa$13$1$i$i$i;$_49$sroa$8$0$ph$i$i$i = $364;$cur_parent$sroa$0$0$ph372$i$i$i = 0;$cur_parent$sroa$10$1$ph374$i$i$i = $360;$cur_parent$sroa$13$1$ph$i$i$i = $cur_parent$sroa$13$1$i$i$i;$cur_parent$sroa$16$1$ph375$i$i$i = $364;$cur_parent$sroa$5$1$ph373$i$i$i = $361;$ins_edge$sroa$0$0$ph$i$i$i = $269;$ins_k$sroa$0$0$ph$i$i$i = $k$sroa$0$0$copyload64140$i$i$i$i$i;$ins_k$sroa$12$0$ph$i$i$i = $k$sroa$6$0$copyload72$i$i$i$i$i;$ins_k$sroa$7$0$ph$i$i$i = $k$sroa$5$0$copyload68$i$i$i$i$i;$ins_v$0$ph$i$i$i = $$val$i$i38$i$i$i;
          }
          if ((label|0) == 94) {
           label = 0;
           $241 = $$idx$val$idx$val$i25$i$i$i&65535;
           $242 = (($238) + (($cur_parent$sroa$16$1$i$i$i*12)|0)|0);
           $243 = (($cur_parent$sroa$16$1$i$i$i) + 1)|0;
           $244 = (($238) + (($243*12)|0)|0);
           $245 = (($241) - ($cur_parent$sroa$16$1$i$i$i))|0;
           $246 = ($245*12)|0;
           _memmove(($244|0),($242|0),($246|0))|0;
           HEAP32[$242>>2] = $ins_k$sroa$0$0$i$i$i;
           $_30$sroa$4$0$$sroa_idx19$i$i$i$i$i$i$i = (((($238) + (($cur_parent$sroa$16$1$i$i$i*12)|0)|0)) + 4|0);
           HEAP32[$_30$sroa$4$0$$sroa_idx19$i$i$i$i$i$i$i>>2] = $ins_k$sroa$7$0$i$i$i;
           $_30$sroa$5$0$$sroa_idx21$i$i$i$i$i$i$i = (((($238) + (($cur_parent$sroa$16$1$i$i$i*12)|0)|0)) + 8|0);
           HEAP32[$_30$sroa$5$0$$sroa_idx21$i$i$i$i$i$i$i>>2] = $ins_k$sroa$12$0$i$i$i;
           $self$idx1$val$idx$val$i$i8$i$i$i$i$i$i = HEAP16[$$idx$val$idx$i24$i$i$i>>1]|0;
           $247 = $self$idx1$val$idx$val$i$i8$i$i$i$i$i$i&65535;
           $248 = (((($238)) + 132|0) + ($cur_parent$sroa$16$1$i$i$i<<2)|0);
           $249 = (((($238)) + 132|0) + ($243<<2)|0);
           $250 = (($247) - ($cur_parent$sroa$16$1$i$i$i))|0;
           $251 = $250 << 2;
           _memmove(($249|0),($248|0),($251|0))|0;
           HEAP32[$248>>2] = $ins_v$0$i$i$i;
           $252 = HEAP16[$$idx$val$idx$i24$i$i$i>>1]|0;
           $253 = (($252) + 1)<<16>>16;
           HEAP16[$$idx$val$idx$i24$i$i$i>>1] = $253;
           $254 = $cur_parent$sroa$10$1$i$i$i;
           $255 = $253&65535;
           $256 = (((($254)) + 184|0) + ($243<<2)|0);
           $257 = (($cur_parent$sroa$16$1$i$i$i) + 2)|0;
           $258 = (((($254)) + 184|0) + ($257<<2)|0);
           $259 = (($255) - ($243))|0;
           $260 = $259 << 2;
           _memmove(($258|0),($256|0),($260|0))|0;
           HEAP32[$256>>2] = $239;
           $$idx$val$idx$val$i$i28$i$i$i = HEAP16[$$idx$val$idx$i24$i$i$i>>1]|0;
           $261 = $$idx$val$idx$val$i$i28$i$i$i&65535;
           $262 = (($261) + 1)|0;
           $263 = ($243>>>0)<($262>>>0);
           if ($263) {
            $iter$sroa$0$062$i$i$i$i$i = $243;
           } else {
            break;
           }
           while(1) {
            $264 = $iter$sroa$0$062$i$i$i$i$i&65535;
            $265 = (((($254)) + 184|0) + ($iter$sroa$0$062$i$i$i$i$i<<2)|0);
            $266 = HEAP32[$265>>2]|0;
            $267 = ((($266)) + 176|0);
            HEAP32[$267>>2] = $238;
            $268 = ((($266)) + 180|0);
            HEAP16[$268>>1] = $264;
            $iter$sroa$0$0$i$i$i$i289$i = (($iter$sroa$0$062$i$i$i$i$i) + 1)|0;
            $exitcond$i$i$i$i$i = ($iter$sroa$0$0$i$i$i$i289$i|0)==($262|0);
            if ($exitcond$i$i$i$i$i) {
             break;
            } else {
             $iter$sroa$0$062$i$i$i$i$i = $iter$sroa$0$0$i$i$i$i289$i;
            }
           }
          }
          else if ((label|0) == 106) {
           label = 0;
           $352 = (_malloc(232)|0);
           $353 = ($352|0)==(0|0);
           if ($353) {
            label = 107;
            break L5;
           }
           $365 = $cur_parent$sroa$5$1$i$i$i;
           _memcpy(($352|0),($x$i$sroa$0$i$i$i$i|0),176)|0;
           $x$i$sroa$4$0$$sroa_idx$i$i$i$i = ((($352)) + 176|0);
           HEAP32[$x$i$sroa$4$0$$sroa_idx$i$i$i$i>>2] = 0;
           $x$i$sroa$6$0$$sroa_idx$i$i$i$i = ((($352)) + 182|0);
           HEAP16[$x$i$sroa$6$0$$sroa_idx$i$i$i$i>>1] = 0;
           $x$i$sroa$7$0$$sroa_raw_idx$i$i$i$i = ((($352)) + 184|0);
           dest=$x$i$sroa$7$0$$sroa_raw_idx$i$i$i$i; src=$x$i$sroa$7$i$i$i$i$i; stop=dest+48|0; do { HEAP32[dest>>2]=HEAP32[src>>2]|0; dest=dest+4|0; src=src+4|0; } while ((dest|0) < (stop|0));
           $366 = $cur_parent$sroa$5$1$i$i$i;
           $367 = HEAP32[$366>>2]|0;
           HEAP32[$x$i$sroa$7$0$$sroa_raw_idx$i$i$i$i>>2] = $367;
           $368 = $cur_parent$sroa$5$1$i$i$i;
           HEAP32[$368>>2] = $352;
           $369 = ((($365)) + 4|0);
           $370 = HEAP32[$369>>2]|0;
           $371 = (($370) + 1)|0;
           HEAP32[$369>>2] = $371;
           $372 = $367;
           $373 = ((($372)) + 176|0);
           HEAP32[$373>>2] = $352;
           $374 = ((($372)) + 180|0);
           HEAP16[$374>>1] = 0;
           $375 = $ins_edge$sroa$0$0$i$i$i;
           $$idx$val$idx$val$i80$i$i$i = HEAP16[$x$i$sroa$6$0$$sroa_idx$i$i$i$i>>1]|0;
           $376 = $$idx$val$idx$val$i80$i$i$i&65535;
           $377 = (($352) + (($376*12)|0)|0);
           HEAP32[$377>>2] = $ins_k$sroa$0$0$i$i$i;
           $_39$sroa$4$0$$sroa_idx39$i$i$i$i = (((($352) + (($376*12)|0)|0)) + 4|0);
           HEAP32[$_39$sroa$4$0$$sroa_idx39$i$i$i$i>>2] = $ins_k$sroa$7$0$i$i$i;
           $_39$sroa$5$0$$sroa_idx41$i$i$i$i = (((($352) + (($376*12)|0)|0)) + 8|0);
           HEAP32[$_39$sroa$5$0$$sroa_idx41$i$i$i$i>>2] = $ins_k$sroa$12$0$i$i$i;
           $378 = (((($352)) + 132|0) + ($376<<2)|0);
           HEAP32[$378>>2] = $ins_v$0$i$i$i;
           $379 = (($376) + 1)|0;
           $380 = (((($352)) + 184|0) + ($379<<2)|0);
           HEAP32[$380>>2] = $375;
           $381 = HEAP16[$x$i$sroa$6$0$$sroa_idx$i$i$i$i>>1]|0;
           $382 = (($381) + 1)<<16>>16;
           HEAP16[$x$i$sroa$6$0$$sroa_idx$i$i$i$i>>1] = $382;
           $383 = $379&65535;
           $384 = (((($352)) + 184|0) + ($379<<2)|0);
           $385 = HEAP32[$384>>2]|0;
           $386 = ((($385)) + 176|0);
           HEAP32[$386>>2] = $352;
           $387 = ((($385)) + 180|0);
           HEAP16[$387>>1] = $383;
           break;
          }
         }
        } while(0);
        $390 = (($determinant_index$2919$i) + 1)|0;
        $determinant_index$3590$i = $390;$num_added$2589$i = $num_added$3$lcssa$i;
       }
       else if ((label|0) == 56) {
        label = 0;
        $123 = (((($node$sroa$5$0147$i$i$i)) + 132|0) + ($_15$sroa$0$0$iter$sroa$7$0$i$i$i$i$i<<2)|0);
        $124 = HEAP32[$123>>2]|0;
        $125 = HEAP32[$13>>2]|0;
        $$idx$val$i261$i = HEAP32[$12>>2]|0;
        $126 = ($125|0)==($$idx$val$i261$i|0);
        if ($126) {
         __THREW__ = 0;
         invoke_vi(339,($sub_determinants$i|0));
         $127 = __THREW__; __THREW__ = 0;
         $128 = $127&1;
         if ($128) {
          label = 228;
          break L5;
         }
         $$pre$i262$i = HEAP32[$13>>2]|0;
         $634 = $$pre$i262$i;
        } else {
         $634 = $125;
        }
        $632 = HEAP32[$sub_determinants$i>>2]|0;
        $633 = (($632) + ($634<<2)|0);
        HEAP32[$633>>2] = $124;
        $635 = HEAP32[$13>>2]|0;
        $636 = (($635) + 1)|0;
        HEAP32[$13>>2] = $636;
        $637 = HEAP32[$18>>2]|0;
        $not$$i$i$i$i213$i = ($637|0)==(0);
        if ($not$$i$i$i$i213$i) {
         $determinant_index$3590$i = $determinant_index$2919$i;$num_added$2589$i = $num_added$1918$i;
        } else {
         _free($98);
         $determinant_index$3590$i = $determinant_index$2919$i;$num_added$2589$i = $num_added$1918$i;
        }
       }
       $392 = ($391>>>0)<($last_num_points$0945$i>>>0);
       $393 = (($391) + 1)|0;
       if ($392) {
        $iter4$sroa$0$0917$i$phi = $391;$391 = $393;$determinant_index$2919$i = $determinant_index$3590$i;$num_added$1918$i = $num_added$2589$i;$iter4$sroa$0$0917$i = $iter4$sroa$0$0917$i$phi;
       } else {
        $determinant_index$2$lcssa$i = $determinant_index$3590$i;$num_added$1$lcssa$i = $num_added$2589$i;
        break;
       }
      }
     }
     HEAP32[$parent$i>>2] = 1;
     HEAP32[$16>>2] = 0;
     HEAP32[$17>>2] = 0;
     if ($62) {
      $448 = (1);$parent$idx$val$i = (1);$parent$idx160$val$i = 0;
     } else {
      $pts$idx150$val$i = HEAP32[$9>>2]|0;
      $pts$idx$val$i = HEAP32[$pts$i>>2]|0;
      $422 = 0;$431 = 1;$697 = (1);$iter10$sroa$0$0925$i = 0;
      while(1) {
       $415 = (($iter10$sroa$0$0925$i) + ($curr$0931$i))|0;
       $416 = ($pts$idx150$val$i>>>0)>($415>>>0);
       if (!($416)) {
        label = 132;
        break L5;
       }
       $420 = (($pts$idx$val$i) + ($415<<2)|0);
       $421 = HEAP32[$420>>2]|0;
       $$idx$val$i344$i = HEAP32[$16>>2]|0;
       $423 = ($422|0)==($$idx$val$i344$i|0);
       if ($423) {
        __THREW__ = 0;
        invoke_vi(339,($parent$i|0));
        $424 = __THREW__; __THREW__ = 0;
        $425 = $424&1;
        if ($425) {
         label = 234;
         break L5;
        }
        $$pre$i345$i = HEAP32[$17>>2]|0;
        $$pre1105$i = HEAP32[$parent$i>>2]|0;
        $427 = $$pre1105$i;$428 = $$pre$i345$i;
       } else {
        $427 = $697;$428 = $422;
       }
       $426 = (($427) + ($428<<2)|0);
       HEAP32[$426>>2] = $421;
       $429 = HEAP32[$17>>2]|0;
       $430 = (($429) + 1)|0;
       HEAP32[$17>>2] = $430;
       $432 = ($431>>>0)<($61>>>0);
       $433 = (($431) + 1)|0;
       if ($432) {
        $iter10$sroa$0$0925$i$phi = $431;$422 = $430;$431 = $433;$697 = $427;$iter10$sroa$0$0925$i = $iter10$sroa$0$0925$i$phi;
       } else {
        break;
       }
      }
      $parent$idx$val$pre$i = HEAP32[$parent$i>>2]|0;
      $448 = $parent$idx$val$pre$i;$parent$idx$val$i = $parent$idx$val$pre$i;$parent$idx160$val$i = $430;
     }
     $394 = HEAP32[$14>>2]|0;
     $395 = HEAP32[$map$i>>2]|0;
     HEAP32[$_6$sroa$4$i296$i>>2] = $395;
     $node$sroa$0$0$i$i298$i = $394;$node$sroa$5$0$in$i$i299$i = $_6$sroa$4$i296$i;
     L152: while(1) {
      $node$sroa$5$0147$i$i300$i = HEAP32[$node$sroa$5$0$in$i$i299$i>>2]|0;
      $self$idx1$val$idx$i$i$i$i$i$i301$i = ((($node$sroa$5$0147$i$i300$i)) + 182|0);
      $self$idx1$val$idx$val$i$i$i$i$i$i302$i = HEAP16[$self$idx1$val$idx$i$i$i$i$i$i301$i>>1]|0;
      $396 = $self$idx1$val$idx$val$i$i$i$i$i$i302$i&65535;
      $397 = (($node$sroa$5$0147$i$i300$i) + (($396*12)|0)|0);
      $_15$sroa$0$0$i$i$i$i306$i = 0;$iter$sroa$0$0$i$i$i$i305$i = $node$sroa$5$0147$i$i300$i;$iter$sroa$7$0$i$i$i$i304$i = 0;
      L154: while(1) {
       $398 = ($iter$sroa$0$0$i$i$i$i305$i|0)==($397|0);
       $399 = ((($iter$sroa$0$0$i$i$i$i305$i)) + 12|0);
       $400 = $398&1;
       $401 = $400 ^ 1;
       $iter$sroa$7$0$$i$i$i$i307$i = (($401) + ($iter$sroa$7$0$i$i$i$i304$i))|0;
       $iter$sroa$0$0$$i$i$i$i308$i = $398 ? $iter$sroa$0$0$i$i$i$i305$i : $399;
       $_15$sroa$0$0$iter$sroa$7$0$i$i$i$i309$i = $398 ? $_15$sroa$0$0$i$i$i$i306$i : $iter$sroa$7$0$i$i$i$i304$i;
       $switchtmp40$i$i$i$i310$i = ($iter$sroa$0$0$i$i$i$i305$i|0)==(0|0);
       $switchtmp$i$i$i$i311$i = $398 | $switchtmp40$i$i$i$i310$i;
       if ($switchtmp$i$i$i$i311$i) {
        $tmp_ret$sroa$0$0$ph$i$i$i332$i = $396;
        break;
       }
       $$idx2$val$i$i$i$i314$i = HEAP32[$iter$sroa$0$0$i$i$i$i305$i>>2]|0;
       $$idx3$i$i$i$i315$i = ((($iter$sroa$0$0$i$i$i$i305$i)) + 8|0);
       $$idx3$val$i$i$i$i316$i = HEAP32[$$idx3$i$i$i$i315$i>>2]|0;
       $402 = ($$idx3$val$i$i$i$i316$i>>>0)>=($parent$idx160$val$i>>>0);
       $_0$0$sroa$speculated$i$i$i$i$i$i$i$i317$i = $402 ? $parent$idx160$val$i : $$idx3$val$i$i$i$i316$i;
       $iter$sroa$0$0$i$i$i$i$i$i$i319$i = 0;
       while(1) {
        $403 = ($iter$sroa$0$0$i$i$i$i$i$i$i319$i>>>0)<($_0$0$sroa$speculated$i$i$i$i$i$i$i$i317$i>>>0);
        if (!($403)) {
         label = 123;
         break;
        }
        $406 = (($iter$sroa$0$0$i$i$i$i$i$i$i319$i) + 1)|0;
        $407 = (($parent$idx$val$i) + ($iter$sroa$0$0$i$i$i$i$i$i$i319$i<<2)|0);
        $408 = (($$idx2$val$i$i$i$i314$i) + ($iter$sroa$0$0$i$i$i$i$i$i$i319$i<<2)|0);
        $$val$i$i$i$i$i$i$i324$i = HEAP32[$407>>2]|0;
        $$val14$i$i$i$i$i$i$i325$i = HEAP32[$408>>2]|0;
        $409 = ($$val$i$i$i$i$i$i$i324$i|0)==($$val14$i$i$i$i$i$i$i325$i|0);
        if ($409) {
         $iter$sroa$0$0$i$i$i$i$i$i$i319$i = $406;
        } else {
         label = 125;
         break;
        }
       }
       if ((label|0) == 123) {
        label = 0;
        $404 = ($$idx3$val$i$i$i$i316$i|0)==($parent$idx160$val$i|0);
        $405 = ($$idx3$val$i$i$i$i316$i>>>0)>($parent$idx160$val$i>>>0);
        $$$i15$i$i$i$i$i$i$i321$i = $405 ? -1 : 1;
        $_0$0$i16$i$i$i$i$i$i$i322$i = $404 ? 0 : $$$i15$i$i$i$i$i$i$i321$i;
        $_0$0$i$i$i$i$i$i$i329$i = $_0$0$i16$i$i$i$i$i$i$i322$i;
       }
       else if ((label|0) == 125) {
        label = 0;
        $410 = ($$val$i$i$i$i$i$i$i324$i>>>0)<($$val14$i$i$i$i$i$i$i325$i>>>0);
        $$$i$le$i$i$i$i$i$i$i327$i = $410 ? -1 : 1;
        $_0$0$i$i$i$i$i$i$i329$i = $$$i$le$i$i$i$i$i$i$i327$i;
       }
       switch ($_0$0$i$i$i$i$i$i$i329$i<<24>>24) {
       case 0:  {
        label = 137;
        break L152;
        break;
       }
       case 1:  {
        $_15$sroa$0$0$i$i$i$i306$i = $_15$sroa$0$0$iter$sroa$7$0$i$i$i$i309$i;$iter$sroa$0$0$i$i$i$i305$i = $iter$sroa$0$0$$i$i$i$i308$i;$iter$sroa$7$0$i$i$i$i304$i = $iter$sroa$7$0$$i$i$i$i307$i;
        break;
       }
       case -1:  {
        $tmp_ret$sroa$0$0$ph$i$i$i332$i = $_15$sroa$0$0$iter$sroa$7$0$i$i$i$i309$i;
        break L154;
        break;
       }
       default: {
        label = 127;
        break L5;
       }
       }
      }
      $not$not$$i$i$i$i333$i = ($node$sroa$0$0$i$i298$i|0)==(0);
      if ($not$not$$i$i$i$i333$i) {
       label = 129;
       break;
      }
      $413 = (($node$sroa$0$0$i$i298$i) + -1)|0;
      $414 = (((($node$sroa$5$0147$i$i300$i)) + 184|0) + ($tmp_ret$sroa$0$0$ph$i$i$i332$i<<2)|0);
      $node$sroa$0$0$i$i298$i = $413;$node$sroa$5$0$in$i$i299$i = $414;
     }
     if ((label|0) == 129) {
      label = 0;
      $411 = HEAP32[$13>>2]|0;
      $$idx$val$i350$i = HEAP32[$12>>2]|0;
      $412 = ($411|0)==($$idx$val$i350$i|0);
      if ($412) {
       __THREW__ = 0;
       invoke_vi(339,($sub_determinants$i|0));
       $438 = __THREW__; __THREW__ = 0;
       $439 = $438&1;
       if ($439) {
        label = 235;
        break L5;
       }
       $$pre$i351$i = HEAP32[$13>>2]|0;
       $451 = $$pre$i351$i;
      } else {
       $451 = $411;
      }
      $449 = HEAP32[$sub_determinants$i>>2]|0;
      $450 = (($449) + ($451<<2)|0);
      HEAP32[$450>>2] = $determinant_index$2$lcssa$i;
      $452 = HEAP32[$13>>2]|0;
      $453 = (($452) + 1)|0;
      HEAP32[$13>>2] = $453;
      $454 = (($determinant_index$2$lcssa$i) + ($iter2$sroa$0$0943$i))|0;
      $determinant_index$4$i = $454;
     }
     else if ((label|0) == 137) {
      label = 0;
      $434 = (((($node$sroa$5$0147$i$i300$i)) + 132|0) + ($_15$sroa$0$0$iter$sroa$7$0$i$i$i$i309$i<<2)|0);
      $435 = HEAP32[$434>>2]|0;
      $436 = HEAP32[$13>>2]|0;
      $$idx$val$i356$i = HEAP32[$12>>2]|0;
      $437 = ($436|0)==($$idx$val$i356$i|0);
      if ($437) {
       __THREW__ = 0;
       invoke_vi(339,($sub_determinants$i|0));
       $440 = __THREW__; __THREW__ = 0;
       $441 = $440&1;
       if ($441) {
        label = 235;
        break L5;
       }
       $$pre$i357$i = HEAP32[$13>>2]|0;
       $444 = $$pre$i357$i;
      } else {
       $444 = $436;
      }
      $442 = HEAP32[$sub_determinants$i>>2]|0;
      $443 = (($442) + ($444<<2)|0);
      HEAP32[$443>>2] = $435;
      $445 = HEAP32[$13>>2]|0;
      $446 = (($445) + 1)|0;
      HEAP32[$13>>2] = $446;
      $determinant_index$4$i = $determinant_index$2$lcssa$i;
     }
     $447 = HEAP32[$16>>2]|0;
     $not$$i$i$i$i361$i = ($447|0)==(0);
     if (!($not$$i$i$i$i361$i)) {
      _free($448);
     }
     $455 = (($curr$0931$i) + ($61))|0;
     $456 = ($455|0)==($last_dim_end$0947$i|0);
     if ($456) {
      break;
     } else {
      $curr$0931$i = $455;$determinant_index$1934$i = $determinant_index$4$i;$num_added$0930$i = $num_added$1$lcssa$i;
     }
    }
    $$pre1108$i = HEAP32[$11>>2]|0;
    $64 = $$pre1108$i;$determinant_index$1$lcssa$i = $determinant_index$4$i;$num_added$0$lcssa$i = $num_added$1$lcssa$i;
   }
   $63 = (($num_added$0$lcssa$i) + ($last_dim_end$0947$i))|0;
   $$idx$val$i197$i = HEAP32[$10>>2]|0;
   $65 = ($64|0)==($$idx$val$i197$i|0);
   if ($65) {
    __THREW__ = 0;
    invoke_vi(339,($offsets$i|0));
    $66 = __THREW__; __THREW__ = 0;
    $67 = $66&1;
    if ($67) {
     label = 223;
     break L5;
    }
    $$pre$i198$i = HEAP32[$11>>2]|0;
    $459 = $$pre$i198$i;
   } else {
    $459 = $64;
   }
   $457 = HEAP32[$offsets$i>>2]|0;
   $458 = (($457) + ($459<<2)|0);
   HEAP32[$458>>2] = $63;
   $460 = (($459) + 1)|0;
   HEAP32[$11>>2] = $460;
   $461 = (($last_num_points$0945$i) + -1)|0;
   $463 = ($462>>>0)<($26>>>0);
   $464 = (($462) + 1)|0;
   if ($463) {
    $last_dim_begin$0948$i$phi = $last_dim_end$0947$i;$462 = $464;$693 = $460;$determinant_index$0944$i = $determinant_index$1$lcssa$i;$iter2$sroa$0$0943$i = 1;$last_dim_end$0947$i = $63;$last_num_points$0945$i = $461;$last_dim_begin$0948$i = $last_dim_begin$0948$i$phi;
   } else {
    $505 = 1;$iter12$sroa$0$0903$i = 0;
    break;
   }
  }
  while(1) {
   $468 = (_malloc(4)|0);
   $469 = ($468|0)==(0|0);
   if ($469) {
    label = 152;
    break L5;
   }
   $471 = (($iter$sroa$0$0394) - ($iter12$sroa$0$0903$i))|0;
   HEAP32[$468>>2] = $471;
   $472 = HEAP32[$14>>2]|0;
   $473 = HEAP32[$map$i>>2]|0;
   HEAP32[$_6$sroa$4$i376$i>>2] = $473;
   $node$sroa$0$0$i$i378$i = $472;$node$sroa$5$0$in$i$i379$i = $_6$sroa$4$i376$i;
   L190: while(1) {
    $node$sroa$5$0147$i$i380$i = HEAP32[$node$sroa$5$0$in$i$i379$i>>2]|0;
    $self$idx1$val$idx$i$i$i$i$i$i381$i = ((($node$sroa$5$0147$i$i380$i)) + 182|0);
    $self$idx1$val$idx$val$i$i$i$i$i$i382$i = HEAP16[$self$idx1$val$idx$i$i$i$i$i$i381$i>>1]|0;
    $474 = $self$idx1$val$idx$val$i$i$i$i$i$i382$i&65535;
    $475 = (($node$sroa$5$0147$i$i380$i) + (($474*12)|0)|0);
    $_15$sroa$0$0$i$i$i$i386$i = 0;$iter$sroa$0$0$i$i$i$i385$i = $node$sroa$5$0147$i$i380$i;$iter$sroa$7$0$i$i$i$i384$i = 0;
    L192: while(1) {
     $476 = ($iter$sroa$0$0$i$i$i$i385$i|0)==($475|0);
     $477 = ((($iter$sroa$0$0$i$i$i$i385$i)) + 12|0);
     $478 = $476&1;
     $479 = $478 ^ 1;
     $iter$sroa$7$0$$i$i$i$i387$i = (($479) + ($iter$sroa$7$0$i$i$i$i384$i))|0;
     $iter$sroa$0$0$$i$i$i$i388$i = $476 ? $iter$sroa$0$0$i$i$i$i385$i : $477;
     $_15$sroa$0$0$iter$sroa$7$0$i$i$i$i389$i = $476 ? $_15$sroa$0$0$i$i$i$i386$i : $iter$sroa$7$0$i$i$i$i384$i;
     $switchtmp40$i$i$i$i390$i = ($iter$sroa$0$0$i$i$i$i385$i|0)==(0|0);
     $switchtmp$i$i$i$i391$i = $476 | $switchtmp40$i$i$i$i390$i;
     if ($switchtmp$i$i$i$i391$i) {
      $tmp_ret$sroa$0$0$ph$i$i$i412$i = $474;
      break;
     }
     $$idx2$val$i$i$i$i394$i = HEAP32[$iter$sroa$0$0$i$i$i$i385$i>>2]|0;
     $$idx3$i$i$i$i395$i = ((($iter$sroa$0$0$i$i$i$i385$i)) + 8|0);
     $$idx3$val$i$i$i$i396$i = HEAP32[$$idx3$i$i$i$i395$i>>2]|0;
     $480 = ($$idx3$val$i$i$i$i396$i|0)!=(0);
     $_0$0$sroa$speculated$i$i$i$i$i$i$i$i397$i = $480&1;
     $iter$sroa$0$0$i$i$i$i$i$i$i399$i = 0;
     while(1) {
      $481 = ($iter$sroa$0$0$i$i$i$i$i$i$i399$i>>>0)<($_0$0$sroa$speculated$i$i$i$i$i$i$i$i397$i>>>0);
      if (!($481)) {
       label = 158;
       break;
      }
      $484 = (($iter$sroa$0$0$i$i$i$i$i$i$i399$i) + 1)|0;
      $485 = (($468) + ($iter$sroa$0$0$i$i$i$i$i$i$i399$i<<2)|0);
      $486 = (($$idx2$val$i$i$i$i394$i) + ($iter$sroa$0$0$i$i$i$i$i$i$i399$i<<2)|0);
      $$val$i$i$i$i$i$i$i404$i = HEAP32[$485>>2]|0;
      $$val14$i$i$i$i$i$i$i405$i = HEAP32[$486>>2]|0;
      $487 = ($$val$i$i$i$i$i$i$i404$i|0)==($$val14$i$i$i$i$i$i$i405$i|0);
      if ($487) {
       $iter$sroa$0$0$i$i$i$i$i$i$i399$i = $484;
      } else {
       label = 160;
       break;
      }
     }
     if ((label|0) == 158) {
      label = 0;
      $482 = ($$idx3$val$i$i$i$i396$i|0)==(1);
      $483 = ($$idx3$val$i$i$i$i396$i>>>0)>(1);
      $$$i15$i$i$i$i$i$i$i401$i = $483 ? -1 : 1;
      $_0$0$i16$i$i$i$i$i$i$i402$i = $482 ? 0 : $$$i15$i$i$i$i$i$i$i401$i;
      $_0$0$i$i$i$i$i$i$i409$i = $_0$0$i16$i$i$i$i$i$i$i402$i;
     }
     else if ((label|0) == 160) {
      label = 0;
      $488 = ($$val$i$i$i$i$i$i$i404$i>>>0)<($$val14$i$i$i$i$i$i$i405$i>>>0);
      $$$i$le$i$i$i$i$i$i$i407$i = $488 ? -1 : 1;
      $_0$0$i$i$i$i$i$i$i409$i = $$$i$le$i$i$i$i$i$i$i407$i;
     }
     switch ($_0$0$i$i$i$i$i$i$i409$i<<24>>24) {
     case 0:  {
      break L190;
      break;
     }
     case 1:  {
      $_15$sroa$0$0$i$i$i$i386$i = $_15$sroa$0$0$iter$sroa$7$0$i$i$i$i389$i;$iter$sroa$0$0$i$i$i$i385$i = $iter$sroa$0$0$$i$i$i$i388$i;$iter$sroa$7$0$i$i$i$i384$i = $iter$sroa$7$0$$i$i$i$i387$i;
      break;
     }
     case -1:  {
      $tmp_ret$sroa$0$0$ph$i$i$i412$i = $_15$sroa$0$0$iter$sroa$7$0$i$i$i$i389$i;
      break L192;
      break;
     }
     default: {
      label = 162;
      break L5;
     }
     }
    }
    $not$not$$i$i$i$i413$i = ($node$sroa$0$0$i$i378$i|0)==(0);
    if ($not$not$$i$i$i$i413$i) {
     label = 164;
     break L5;
    }
    $492 = (($node$sroa$0$0$i$i378$i) + -1)|0;
    $493 = (((($node$sroa$5$0147$i$i380$i)) + 184|0) + ($tmp_ret$sroa$0$0$ph$i$i$i412$i<<2)|0);
    $node$sroa$0$0$i$i378$i = $492;$node$sroa$5$0$in$i$i379$i = $493;
   }
   $494 = (((($node$sroa$5$0147$i$i380$i)) + 132|0) + ($_15$sroa$0$0$iter$sroa$7$0$i$i$i$i389$i<<2)|0);
   $495 = HEAP32[$494>>2]|0;
   $496 = HEAP32[$13>>2]|0;
   $$idx$val$i424$i = HEAP32[$12>>2]|0;
   $497 = ($496|0)==($$idx$val$i424$i|0);
   if ($497) {
    __THREW__ = 0;
    invoke_vi(339,($sub_determinants$i|0));
    $498 = __THREW__; __THREW__ = 0;
    $499 = $498&1;
    if ($499) {
     label = 243;
     break L5;
    }
    $$pre$i425$i = HEAP32[$13>>2]|0;
    $502 = $$pre$i425$i;
   } else {
    $502 = $496;
   }
   $500 = HEAP32[$sub_determinants$i>>2]|0;
   $501 = (($500) + ($502<<2)|0);
   HEAP32[$501>>2] = $495;
   $503 = HEAP32[$13>>2]|0;
   $504 = (($503) + 1)|0;
   HEAP32[$13>>2] = $504;
   _free($468);
   $506 = ($505>>>0)<($26>>>0);
   $507 = (($505) + 1)|0;
   if ($506) {
    $iter12$sroa$0$0903$i$phi = $505;$505 = $507;$iter12$sroa$0$0903$i = $iter12$sroa$0$0903$i$phi;
   } else {
    break;
   }
  }
  $$idx$val$i371$i = HEAP32[$10>>2]|0;
  $465 = ($460|0)==($$idx$val$i371$i|0);
  if ($465) {
   __THREW__ = 0;
   invoke_vi(339,($offsets$i|0));
   $466 = __THREW__; __THREW__ = 0;
   $467 = $466&1;
   if ($467) {
    label = 225;
    break;
   }
   $$pre1110$i = HEAP32[$offsets$i>>2]|0;
   $509 = $$pre1110$i;
  } else {
   $509 = $457;
  }
  $508 = ((($509)) + 4|0);
  $510 = $460 << 2;
  _memmove(($508|0),($509|0),($510|0))|0;
  HEAP32[$509>>2] = 0;
  $511 = (($459) + 2)|0;
  HEAP32[$11>>2] = $511;
  $512 = $511 >>> 1;
  $513 = ($512|0)==(0);
  L214: do {
   if (!($513)) {
    $i$05$i$i$i = 0;$tmp$0$copyload$i$i$i$i = 0;
    while(1) {
     $514 = (($509) + ($i$05$i$i$i<<2)|0);
     $515 = (($460) - ($i$05$i$i$i))|0;
     $516 = (($509) + ($515<<2)|0);
     $517 = HEAP32[$516>>2]|0;
     HEAP32[$514>>2] = $517;
     HEAP32[$516>>2] = $tmp$0$copyload$i$i$i$i;
     $518 = (($i$05$i$i$i) + 1)|0;
     $exitcond$i$i$i = ($518|0)==($512|0);
     if ($exitcond$i$i$i) {
      break L214;
     }
     $$phi$trans$insert = (($509) + ($518<<2)|0);
     $tmp$0$copyload$i$i$i$i$pre = HEAP32[$$phi$trans$insert>>2]|0;
     $i$05$i$i$i = $518;$tmp$0$copyload$i$i$i$i = $tmp$0$copyload$i$i$i$i$pre;
    }
   }
  } while(0);
  $519 = ($511|0)==(0);
  if ($519) {
   label = 200;
   break;
  }
  HEAP32[$11>>2] = $460;
  $520 = (($509) + ($460<<2)|0);
  $521 = $520;
  $522 = ($460|0)==(0);
  if ($522) {
   label = 200;
   break;
  }
  $525 = $508;
  $$val$i$i$i$i458$i = HEAP32[$509>>2]|0;
  $$idx$val$idx$val$i$i$i$i459$i = HEAP32[$9>>2]|0;
  $526 = (($$idx$val$idx$val$i$i$i$i459$i) - ($$val$i$i$i$i458$i))|0;
  $527 = (($521) - ($525))|0;
  $528 = $527 >>> 2;
  $529 = (($528) + 1)|0;
  $$arith56 = $529<<2;
  $$overflow57 = ($529>>>0)>(1073741823);
  if ($$overflow57) {
   label = 177;
   break;
  }
  $531 = ($$arith56|0)<(0);
  if ($531) {
   label = 179;
   break;
  }
  $533 = ($$arith56|0)==(0);
  if ($533) {
   $ptr$0$i$i$i$i$i = (1);
  } else {
   $534 = (_malloc($$arith56)|0);
   $535 = ($534|0)==(0|0);
   if ($535) {
    label = 182;
    break;
   } else {
    $ptr$0$i$i$i$i$i = $534;
   }
  }
  $537 = $ptr$0$i$i$i$i$i;
  HEAP32[$ptr$0$i$i$i$i$i>>2] = $526;
  $538 = ($459|0)==(0);
  if ($538) {
   $$in$i = $537;$pts$idx162$val$i = $$idx$val$idx$val$i$i$i$i459$i;$rev_offsets$sroa$11$0602$i = 1;$rev_offsets$sroa$7$0601$i = $529;
  } else {
   $$idx$val$idx$val$i$i$i$i$i$i = $$idx$val$idx$val$i$i$i$i459$i;$540 = $508;$542 = 1;$vector$sroa$0$1$i$i$i = $537;$vector$sroa$9$1$i$i$i = $529;
   while(1) {
    $539 = ((($540)) + 4|0);
    $$val$i$i$i$i$i$i = HEAP32[$540>>2]|0;
    $541 = (($$idx$val$idx$val$i$i$i$i$i$i) - ($$val$i$i$i$i$i$i))|0;
    $543 = ($542|0)==($vector$sroa$9$1$i$i$i|0);
    if ($543) {
     $544 = $539;
     $545 = (($521) - ($544))|0;
     $546 = $545 >>> 2;
     $547 = (($546) + 1)|0;
     $$arith = (($vector$sroa$9$1$i$i$i) + ($547))|0;
     $$overflow = ($$arith>>>0)<($vector$sroa$9$1$i$i$i>>>0);
     if ($$overflow) {
      label = 186;
      break L5;
     }
     $549 = $vector$sroa$9$1$i$i$i << 1;
     $550 = ($$arith>>>0)>=($549>>>0);
     $_0$0$sroa$speculated$i$i$i$i$i$i$i$i = $550 ? $$arith : $549;
     $$arith52 = $_0$0$sroa$speculated$i$i$i$i$i$i$i$i<<2;
     $$overflow53 = ($_0$0$sroa$speculated$i$i$i$i$i$i$i$i>>>0)>(1073741823);
     if ($$overflow53) {
      label = 188;
      break L5;
     }
     $552 = ($$arith52|0)<(0);
     if ($552) {
      label = 190;
      break L5;
     }
     $554 = ($vector$sroa$9$1$i$i$i|0)==(0);
     if ($554) {
      $555 = (_malloc($$arith52)|0);
      $ptr$0$i$i$i$i$i$i = $555;
     } else {
      $556 = $vector$sroa$0$1$i$i$i;
      $557 = (_realloc($556,$$arith52)|0);
      $ptr$0$i$i$i$i$i$i = $557;
     }
     $558 = ($ptr$0$i$i$i$i$i$i|0)==(0|0);
     if ($558) {
      label = 195;
      break L5;
     }
     $560 = $ptr$0$i$i$i$i$i$i;
     $vector$sroa$0$2$i$i$i = $560;$vector$sroa$9$2$i$i$i = $_0$0$sroa$speculated$i$i$i$i$i$i$i$i;
    } else {
     $vector$sroa$0$2$i$i$i = $vector$sroa$0$1$i$i$i;$vector$sroa$9$2$i$i$i = $vector$sroa$9$1$i$i$i;
    }
    $561 = $vector$sroa$0$2$i$i$i;
    $562 = (($561) + ($542<<2)|0);
    HEAP32[$562>>2] = $541;
    $563 = (($542) + 1)|0;
    $564 = ($539|0)==($520|0);
    $$pre1112$i = HEAP32[$9>>2]|0;
    if ($564) {
     $$in$i = $vector$sroa$0$2$i$i$i;$pts$idx162$val$i = $$pre1112$i;$rev_offsets$sroa$11$0602$i = $563;$rev_offsets$sroa$7$0601$i = $vector$sroa$9$2$i$i$i;
     break;
    } else {
     $$idx$val$idx$val$i$i$i$i$i$i = $$pre1112$i;$540 = $539;$542 = $563;$vector$sroa$0$1$i$i$i = $vector$sroa$0$2$i$i$i;$vector$sroa$9$1$i$i$i = $vector$sroa$9$2$i$i$i;
    }
   }
  }
  $571 = $$in$i;
  $572 = HEAP32[$571>>2]|0;
  $573 = HEAP32[$pts$i>>2]|0;
  $574 = $pts$idx162$val$i >>> 1;
  $575 = ($574|0)==(0);
  if (!($575)) {
   $576 = (($pts$idx162$val$i) + -1)|0;
   $i$05$i$i448$i = 0;
   while(1) {
    $577 = (($573) + ($i$05$i$i448$i<<2)|0);
    $578 = (($576) - ($i$05$i$i448$i))|0;
    $579 = (($573) + ($578<<2)|0);
    $tmp$0$copyload$i$i$i449$i = HEAP32[$577>>2]|0;
    $580 = HEAP32[$579>>2]|0;
    HEAP32[$577>>2] = $580;
    HEAP32[$579>>2] = $tmp$0$copyload$i$i$i449$i;
    $581 = (($i$05$i$i448$i) + 1)|0;
    $exitcond$i$i450$i = ($581|0)==($574|0);
    if ($exitcond$i$i450$i) {
     break;
    } else {
     $i$05$i$i448$i = $581;
    }
   }
  }
  $582 = HEAP32[$sub_determinants$i>>2]|0;
  $583 = HEAP32[$13>>2]|0;
  $584 = $583 >>> 1;
  $585 = ($584|0)==(0);
  if (!($585)) {
   $586 = (($583) + -1)|0;
   $i$05$i$i442$i = 0;
   while(1) {
    $587 = (($582) + ($i$05$i$i442$i<<2)|0);
    $588 = (($586) - ($i$05$i$i442$i))|0;
    $589 = (($582) + ($588<<2)|0);
    $tmp$0$copyload$i$i$i443$i = HEAP32[$587>>2]|0;
    $590 = HEAP32[$589>>2]|0;
    HEAP32[$587>>2] = $590;
    HEAP32[$589>>2] = $tmp$0$copyload$i$i$i443$i;
    $591 = (($i$05$i$i442$i) + 1)|0;
    $exitcond$i$i444$i = ($591|0)==($584|0);
    if ($exitcond$i$i444$i) {
     break;
    } else {
     $i$05$i$i442$i = $591;
    }
   }
  }
  $592 = (($pts$idx162$val$i) - ($26))|0;
  $593 = (($592) + -1)|0;
  $594 = ($pts$idx162$val$i>>>0)>($593>>>0);
  if ($594) {
   HEAP32[$9>>2] = $593;
   $_270$sroa$6$0$copyload$i = $593;
  } else {
   $_270$sroa$6$0$copyload$i = $pts$idx162$val$i;
  }
  $595 = HEAP32[$13>>2]|0;
  $596 = ($595>>>0)>($593>>>0);
  if ($596) {
   HEAP32[$13>>2] = $593;
   $_20$sroa$17$24$copyload = $593;
  } else {
   $_20$sroa$17$24$copyload = $595;
  }
  $597 = $$in$i;
  $_270$sroa$5$0$copyload$i = HEAP32[$8>>2]|0;
  $598 = ($_20$sroa$17$24$copyload|0)==(0);
  if ($598) {
   label = 212;
   break;
  }
  $sub_determinants$idx$val$i = HEAP32[$sub_determinants$i>>2]|0;
  $604 = HEAP32[$sub_determinants$idx$val$i>>2]|0;
  $605 = (($604) + 1)|0;
  $_20$sroa$16$24$copyload = HEAP32[$12>>2]|0;
  __THREW__ = 0;
  invoke_vi(340,($map$i|0));
  $606 = __THREW__; __THREW__ = 0;
  $607 = $606&1;
  if ($607) {
   label = 249;
   break;
  }
  $608 = HEAP32[$10>>2]|0;
  $not$$i$i$i$i266$i = ($608|0)==(0);
  if (!($not$$i$i$i$i266$i)) {
   $609 = HEAP32[$offsets$i>>2]|0;
   _free($609);
  }
  $654 = HEAP32[$7>>2]|0;
  $$idx$val$i = HEAP32[$6>>2]|0;
  $655 = ($654|0)==($$idx$val$i|0);
  if ($655) {
   __THREW__ = 0;
   invoke_vi(341,($template|0));
   $656 = __THREW__; __THREW__ = 0;
   $657 = $656&1;
   if ($657) {
    label = 254;
    break;
   }
   $$pre$i26 = HEAP32[$7>>2]|0;
   $662 = $$pre$i26;
  } else {
   $662 = $654;
  }
  $660 = HEAP32[$template>>2]|0;
  $661 = (($660) + (($662*44)|0)|0);
  HEAP32[$661>>2] = $573;
  $_22$sroa$4$0$$sroa_idx53$i = (((($660) + (($662*44)|0)|0)) + 4|0);
  HEAP32[$_22$sroa$4$0$$sroa_idx53$i>>2] = $_270$sroa$5$0$copyload$i;
  $_22$sroa$5$0$$sroa_idx55$i = (((($660) + (($662*44)|0)|0)) + 8|0);
  HEAP32[$_22$sroa$5$0$$sroa_idx55$i>>2] = $_270$sroa$6$0$copyload$i;
  $_22$sroa$6$0$$sroa_idx57$i = (((($660) + (($662*44)|0)|0)) + 12|0);
  HEAP32[$_22$sroa$6$0$$sroa_idx57$i>>2] = $597;
  $_22$sroa$7$0$$sroa_idx59$i = (((($660) + (($662*44)|0)|0)) + 16|0);
  HEAP32[$_22$sroa$7$0$$sroa_idx59$i>>2] = $rev_offsets$sroa$7$0601$i;
  $_22$sroa$8$0$$sroa_idx61$i = (((($660) + (($662*44)|0)|0)) + 20|0);
  HEAP32[$_22$sroa$8$0$$sroa_idx61$i>>2] = $rev_offsets$sroa$11$0602$i;
  $663 = (((($660) + (($662*44)|0)|0)) + 24|0);
  HEAP32[$663>>2] = $sub_determinants$idx$val$i;
  $_22$sroa$10$0$$sroa_idx65$i = (((($660) + (($662*44)|0)|0)) + 28|0);
  HEAP32[$_22$sroa$10$0$$sroa_idx65$i>>2] = $_20$sroa$16$24$copyload;
  $_22$sroa$11$0$$sroa_idx$i = (((($660) + (($662*44)|0)|0)) + 32|0);
  HEAP32[$_22$sroa$11$0$$sroa_idx$i>>2] = $_20$sroa$17$24$copyload;
  $value$sroa$10$i$sroa$4$0$_22$sroa$11$0$$sroa_cast$i$sroa_idx70 = ((($_22$sroa$11$0$$sroa_idx$i)) + 4|0);
  HEAP32[$value$sroa$10$i$sroa$4$0$_22$sroa$11$0$$sroa_cast$i$sroa_idx70>>2] = $605;
  $value$sroa$10$i$sroa$5$0$_22$sroa$11$0$$sroa_cast$i$sroa_idx72 = ((($_22$sroa$11$0$$sroa_idx$i)) + 8|0);
  HEAP32[$value$sroa$10$i$sroa$5$0$_22$sroa$11$0$$sroa_cast$i$sroa_idx72>>2] = $572;
  $664 = (($662) + 1)|0;
  HEAP32[$7>>2] = $664;
  $666 = ($665>>>0)<(3);
  $667 = (($665) + 1)|0;
  if ($666) {
   $iter$sroa$0$0394$phi = $665;$665 = $667;$iter$sroa$0$0394 = $iter$sroa$0$0394$phi;
  } else {
   label = 5;
   break;
  }
 }
 switch (label|0) {
  case 5: {
   ;HEAP32[$data$i>>2]=HEAP32[$template>>2]|0;HEAP32[$data$i+4>>2]=HEAP32[$template+4>>2]|0;HEAP32[$data$i+8>>2]=HEAP32[$template+8>>2]|0;
   $21 = (_malloc(20)|0);
   $22 = ($21|0)==(0|0);
   if (!($22)) {
    HEAP32[$21>>2] = 1;
    $668 = ((($21)) + 4|0);
    HEAP32[$668>>2] = 1;
    $669 = ((($21)) + 8|0);
    ;HEAP32[$669>>2]=HEAP32[$data$i>>2]|0;HEAP32[$669+4>>2]=HEAP32[$data$i+4>>2]|0;HEAP32[$669+8>>2]=HEAP32[$data$i+8>>2]|0;
    $670 = $21;
    STACKTOP = sp;return ($670|0);
   }
   __THREW__ = 0;
   invoke_v(210);
   $23 = __THREW__; __THREW__ = 0;
   $24 = ___cxa_find_matching_catch_2()|0;
   $25 = tempRet0;
   $personalityslot$sroa$0$0 = $24;$personalityslot$sroa$5$0 = $25;
   ___resumeException($personalityslot$sroa$0$0|0);
   // unreachable;
   break;
  }
  case 9: {
   __THREW__ = 0;
   invoke_v(210);
   $30 = __THREW__; __THREW__ = 0;
   $31 = ___cxa_find_matching_catch_2()|0;
   $32 = tempRet0;
   $personalityslot$sroa$0$5611$i = $31;$personalityslot$sroa$14$5609$i = $32;
   label = 220;
   break;
  }
  case 37: {
   __THREW__ = 0;
   invoke_viiiii(214,(16818|0),104,1349,($71|0),($pts$idx158$val905$i|0));
   $89 = __THREW__; __THREW__ = 0;
   label = 229;
   break;
  }
  case 38: {
   $90 = ___cxa_find_matching_catch_2()|0;
   $91 = tempRet0;
   $lpad$phi628$i$index = $90;$lpad$phi628$i$index11 = $91;
   label = 230;
   break;
  }
  case 39: {
   __THREW__ = 0;
   invoke_viiiii(214,(16818|0),104,1349,($68|0),($pts$idx158$val905$i|0));
   $92 = __THREW__; __THREW__ = 0;
   label = 229;
   break;
  }
  case 52: {
   // unreachable;
   break;
  }
  case 75: {
   // unreachable;
   break;
  }
  case 82: {
   __THREW__ = 0;
   invoke_v(210);
   $176 = __THREW__; __THREW__ = 0;
   $177 = ___cxa_find_matching_catch_2()|0;
   $178 = tempRet0;
   $not$$i$i$i$i56$i$i$i$i = ($_144$sroa$4$0$copyload$i|0)==(0);
   if ($not$$i$i$i$i56$i$i$i$i) {
    $eh$lpad$body$ph$i$index29Z2D = $178;$eh$lpad$body$ph$i$indexZ2D = $177;
    label = 242;
   } else {
    _free($_144$sroa$0$0$copyload$i);
    $eh$lpad$body$ph$i$index29Z2D = $178;$eh$lpad$body$ph$i$indexZ2D = $177;
    label = 242;
   }
   break;
  }
  case 97: {
   __THREW__ = 0;
   invoke_v(210);
   $271 = __THREW__; __THREW__ = 0;
   $272 = ___cxa_find_matching_catch_2()|0;
   $273 = tempRet0;
   $not$$i$i$i$i35$i$i$i$i = ($ins_k$sroa$7$0$i$i$i|0)==(0);
   if ($not$$i$i$i$i35$i$i$i$i) {
    $eh$lpad$body$ph$i$index29Z2D = $273;$eh$lpad$body$ph$i$indexZ2D = $272;
    label = 242;
   } else {
    $351 = $ins_k$sroa$0$0$i$i$i;
    _free($351);
    $eh$lpad$body$ph$i$index29Z2D = $273;$eh$lpad$body$ph$i$indexZ2D = $272;
    label = 242;
   }
   break;
  }
  case 107: {
   __THREW__ = 0;
   invoke_v(210);
   $354 = __THREW__; __THREW__ = 0;
   $355 = ___cxa_find_matching_catch_2()|0;
   $356 = tempRet0;
   $not$$i$i$i$i$i$i$i = ($ins_k$sroa$7$0$i$i$i|0)==(0);
   if ($not$$i$i$i$i$i$i$i) {
    $eh$lpad$body$ph$i$index29Z2D = $356;$eh$lpad$body$ph$i$indexZ2D = $355;
    label = 242;
   } else {
    $388 = $ins_k$sroa$0$0$i$i$i;
    _free($388);
    $eh$lpad$body$ph$i$index29Z2D = $356;$eh$lpad$body$ph$i$indexZ2D = $355;
    label = 242;
   }
   break;
  }
  case 127: {
   // unreachable;
   break;
  }
  case 132: {
   __THREW__ = 0;
   invoke_viiiii(214,(16818|0),104,1349,($415|0),($pts$idx150$val$i|0));
   $417 = __THREW__; __THREW__ = 0;
   $418 = ___cxa_find_matching_catch_2()|0;
   $419 = tempRet0;
   $lpad$phi634$i$index = $418;$lpad$phi634$i$index19 = $419;
   label = 236;
   break;
  }
  case 152: {
   __THREW__ = 0;
   invoke_v(210);
   $470 = __THREW__; __THREW__ = 0;
   label = 272;
   break;
  }
  case 162: {
   // unreachable;
   break;
  }
  case 164: {
   __THREW__ = 0;
   invoke_vi(220,(6500|0));
   $489 = __THREW__; __THREW__ = 0;
   $490 = ___cxa_find_matching_catch_2()|0;
   $491 = tempRet0;
   $lpad$phi$i$index = $490;$lpad$phi$i$index38 = $491;
   label = 244;
   break;
  }
  case 177: {
   __THREW__ = 0;
   invoke_vii(219,(16801|0),17);
   $530 = __THREW__; __THREW__ = 0;
   label = 175;
   break;
  }
  case 179: {
   __THREW__ = 0;
   invoke_vi(220,(6432|0));
   $532 = __THREW__; __THREW__ = 0;
   label = 175;
   break;
  }
  case 182: {
   __THREW__ = 0;
   invoke_v(210);
   $536 = __THREW__; __THREW__ = 0;
   label = 175;
   break;
  }
  case 186: {
   __THREW__ = 0;
   invoke_vii(219,(16801|0),17);
   $548 = __THREW__; __THREW__ = 0;
   label = 198;
   break;
  }
  case 188: {
   __THREW__ = 0;
   invoke_vii(219,(16801|0),17);
   $551 = __THREW__; __THREW__ = 0;
   label = 198;
   break;
  }
  case 190: {
   __THREW__ = 0;
   invoke_vi(220,(6432|0));
   $553 = __THREW__; __THREW__ = 0;
   label = 198;
   break;
  }
  case 195: {
   __THREW__ = 0;
   invoke_v(210);
   $559 = __THREW__; __THREW__ = 0;
   label = 198;
   break;
  }
  case 200: {
   __THREW__ = 0;
   invoke_viiiii(214,(16818|0),104,1349,0,0);
   $568 = __THREW__; __THREW__ = 0;
   $569 = ___cxa_find_matching_catch_2()|0;
   $570 = tempRet0;
   $personalityslot$sroa$0$5612$i = $569;$personalityslot$sroa$14$5610$i = $570;
   label = 222;
   break;
  }
  case 212: {
   __THREW__ = 0;
   invoke_viiiii(214,(16818|0),104,1349,0,0);
   $599 = __THREW__; __THREW__ = 0;
   $600 = ___cxa_find_matching_catch_2()|0;
   $601 = tempRet0;
   __THREW__ = 0;
   invoke_vi(340,($map$i|0));
   $602 = __THREW__; __THREW__ = 0;
   $603 = $602&1;
   if ($603) {
    label = 272;
   } else {
    $646 = HEAP32[$12>>2]|0;
    $not$$i$i$i$i166$i = ($646|0)==(0);
    if (!($not$$i$i$i$i166$i)) {
     $647 = HEAP32[$sub_determinants$i>>2]|0;
     _free($647);
    }
    $648 = HEAP32[$10>>2]|0;
    $not$$i$i$i$i163$i = ($648|0)==(0);
    if (!($not$$i$i$i$i163$i)) {
     $649 = HEAP32[$offsets$i>>2]|0;
     _free($649);
    }
    $not$$i$i$i$i193$i = ($_270$sroa$5$0$copyload$i|0)==(0);
    if (!($not$$i$i$i$i193$i)) {
     _free($573);
    }
    $not$$i$i$i$i190$i = ($rev_offsets$sroa$7$0601$i|0)==(0);
    if ($not$$i$i$i$i190$i) {
     $personalityslot$sroa$0$0$i = $600;$personalityslot$sroa$14$0$i = $601;
     label = 8;
    } else {
     _free($597);
     $personalityslot$sroa$0$0$i = $600;$personalityslot$sroa$14$0$i = $601;
     label = 8;
    }
   }
   break;
  }
  case 223: {
   $618 = ___cxa_find_matching_catch_2()|0;
   $619 = tempRet0;
   $lpad$phi643$i$index = $618;$lpad$phi643$i$index3 = $619;
   label = 226;
   break;
  }
  case 224: {
   $620 = ___cxa_find_matching_catch_2()|0;
   $621 = tempRet0;
   $lpad$phi643$i$index = $620;$lpad$phi643$i$index3 = $621;
   label = 226;
   break;
  }
  case 225: {
   $622 = ___cxa_find_matching_catch_2()|0;
   $623 = tempRet0;
   $lpad$phi643$i$index = $622;$lpad$phi643$i$index3 = $623;
   label = 226;
   break;
  }
  case 227: {
   $624 = ___cxa_find_matching_catch_2()|0;
   $625 = tempRet0;
   $lpad$phi628$i$index = $624;$lpad$phi628$i$index11 = $625;
   label = 230;
   break;
  }
  case 228: {
   $626 = ___cxa_find_matching_catch_2()|0;
   $627 = tempRet0;
   $lpad$phi628$i$index = $626;$lpad$phi628$i$index11 = $627;
   label = 230;
   break;
  }
  case 234: {
   $638 = ___cxa_find_matching_catch_2()|0;
   $639 = tempRet0;
   $lpad$phi634$i$index = $638;$lpad$phi634$i$index19 = $639;
   label = 236;
   break;
  }
  case 235: {
   $640 = ___cxa_find_matching_catch_2()|0;
   $641 = tempRet0;
   $lpad$phi634$i$index = $640;$lpad$phi634$i$index19 = $641;
   label = 236;
   break;
  }
  case 243: {
   $644 = ___cxa_find_matching_catch_2()|0;
   $645 = tempRet0;
   $lpad$phi$i$index = $644;$lpad$phi$i$index38 = $645;
   label = 244;
   break;
  }
  case 249: {
   $650 = ___cxa_find_matching_catch_2()|0;
   $651 = tempRet0;
   $652 = HEAP32[$10>>2]|0;
   $not$$i$i$i$i$i = ($652|0)==(0);
   if ($not$$i$i$i$i$i) {
    $personalityslot$sroa$0$0$i = $650;$personalityslot$sroa$14$0$i = $651;
    label = 8;
   } else {
    $653 = HEAP32[$offsets$i>>2]|0;
    _free($653);
    $personalityslot$sroa$0$0$i = $650;$personalityslot$sroa$14$0$i = $651;
    label = 8;
   }
   break;
  }
  case 254: {
   $658 = ___cxa_find_matching_catch_2()|0;
   $659 = tempRet0;
   $not$$i$i$i$i$i$i = ($_270$sroa$5$0$copyload$i|0)==(0);
   if (!($not$$i$i$i$i$i$i)) {
    _free($573);
   }
   $not$$i$i$i$i1$i$i = ($rev_offsets$sroa$7$0601$i|0)==(0);
   if (!($not$$i$i$i$i1$i$i)) {
    _free($597);
   }
   $not$$i$i$i$i4$i$i = ($_20$sroa$16$24$copyload|0)==(0);
   if ($not$$i$i$i$i4$i$i) {
    $eh$lpad$body$ph$sink$index45Z2D = $659;$eh$lpad$body$ph$sink$indexZ2D = $658;
   } else {
    _free($sub_determinants$idx$val$i);
    $eh$lpad$body$ph$sink$index45Z2D = $659;$eh$lpad$body$ph$sink$indexZ2D = $658;
   }
   break;
  }
 }
 if ((label|0) == 175) {
  $523 = ___cxa_find_matching_catch_2()|0;
  $524 = tempRet0;
  $personalityslot$sroa$0$5612$i = $523;$personalityslot$sroa$14$5610$i = $524;
  label = 222;
 }
 else if ((label|0) == 198) {
  $565 = ___cxa_find_matching_catch_2()|0;
  $566 = tempRet0;
  $not$$i$i$i$i33$i$i$i = ($vector$sroa$9$1$i$i$i|0)==(0);
  if ($not$$i$i$i$i33$i$i$i) {
   $personalityslot$sroa$0$5612$i = $565;$personalityslot$sroa$14$5610$i = $566;
   label = 222;
  } else {
   $567 = $vector$sroa$0$1$i$i$i;
   _free($567);
   $personalityslot$sroa$0$5612$i = $565;$personalityslot$sroa$14$5610$i = $566;
   label = 222;
  }
 }
 else if ((label|0) == 226) {
  $personalityslot$sroa$0$5612$i = $lpad$phi643$i$index;$personalityslot$sroa$14$5610$i = $lpad$phi643$i$index3;
  label = 222;
 }
 else if ((label|0) == 229) {
  $628 = ___cxa_find_matching_catch_2()|0;
  $629 = tempRet0;
  $lpad$phi628$i$index = $628;$lpad$phi628$i$index11 = $629;
  label = 230;
 }
 else if ((label|0) == 236) {
  $642 = HEAP32[$16>>2]|0;
  $not$$i$i$i$i210$i = ($642|0)==(0);
  if ($not$$i$i$i$i210$i) {
   $personalityslot$sroa$0$5612$i = $lpad$phi634$i$index;$personalityslot$sroa$14$5610$i = $lpad$phi634$i$index19;
   label = 222;
  } else {
   $643 = HEAP32[$parent$i>>2]|0;
   _free($643);
   $personalityslot$sroa$0$5612$i = $lpad$phi634$i$index;$personalityslot$sroa$14$5610$i = $lpad$phi634$i$index19;
   label = 222;
  }
 }
 else if ((label|0) == 242) {
  $personalityslot$sroa$0$5612$i = $eh$lpad$body$ph$i$indexZ2D;$personalityslot$sroa$14$5610$i = $eh$lpad$body$ph$i$index29Z2D;
  label = 222;
 }
 else if ((label|0) == 244) {
  _free($468);
  $personalityslot$sroa$0$5612$i = $lpad$phi$i$index;$personalityslot$sroa$14$5610$i = $lpad$phi$i$index38;
  label = 222;
 }
 if ((label|0) == 230) {
  $630 = HEAP32[$18>>2]|0;
  $not$$i$i$i$i216$i = ($630|0)==(0);
  if ($not$$i$i$i$i216$i) {
   $personalityslot$sroa$0$5612$i = $lpad$phi628$i$index;$personalityslot$sroa$14$5610$i = $lpad$phi628$i$index11;
   label = 222;
  } else {
   $631 = HEAP32[$sublist$i>>2]|0;
   _free($631);
   $personalityslot$sroa$0$5612$i = $lpad$phi628$i$index;$personalityslot$sroa$14$5610$i = $lpad$phi628$i$index11;
   label = 222;
  }
 }
 if ((label|0) == 222) {
  __THREW__ = 0;
  invoke_vi(340,($map$i|0));
  $616 = __THREW__; __THREW__ = 0;
  $617 = $616&1;
  if ($617) {
   label = 272;
  } else {
   $personalityslot$sroa$0$5611$i = $personalityslot$sroa$0$5612$i;$personalityslot$sroa$14$5609$i = $personalityslot$sroa$14$5610$i;
   label = 220;
  }
 }
 if ((label|0) == 220) {
  $614 = HEAP32[$12>>2]|0;
  $not$$i$i$i$i224$i = ($614|0)==(0);
  if (!($not$$i$i$i$i224$i)) {
   $615 = HEAP32[$sub_determinants$i>>2]|0;
   _free($615);
  }
  $612 = HEAP32[$10>>2]|0;
  $not$$i$i$i$i254$i = ($612|0)==(0);
  if (!($not$$i$i$i$i254$i)) {
   $613 = HEAP32[$offsets$i>>2]|0;
   _free($613);
  }
  $610 = HEAP32[$8>>2]|0;
  $not$$i$i$i$i257$i = ($610|0)==(0);
  if ($not$$i$i$i$i257$i) {
   $personalityslot$sroa$0$0$i = $personalityslot$sroa$0$5611$i;$personalityslot$sroa$14$0$i = $personalityslot$sroa$14$5609$i;
   label = 8;
  } else {
   $611 = HEAP32[$pts$i>>2]|0;
   _free($611);
   $personalityslot$sroa$0$0$i = $personalityslot$sroa$0$5611$i;$personalityslot$sroa$14$0$i = $personalityslot$sroa$14$5609$i;
   label = 8;
  }
 }
 else if ((label|0) == 272) {
  $688 = ___cxa_find_matching_catch_2()|0;
  $689 = tempRet0;
  $eh$lpad$body$ph$sink$index45Z2D = $689;$eh$lpad$body$ph$sink$indexZ2D = $688;
 }
 if ((label|0) == 8) {
  $eh$lpad$body$ph$sink$index45Z2D = $personalityslot$sroa$14$0$i;$eh$lpad$body$ph$sink$indexZ2D = $personalityslot$sroa$0$0$i;
 }
 $$idx$val$i1 = HEAP32[$template>>2]|0;
 $$idx5$val$i = HEAP32[$7>>2]|0;
 $671 = (($$idx$val$i1) + (($$idx5$val$i*44)|0)|0);
 $672 = ($$idx5$val$i|0)==(0);
 if (!($672)) {
  $674 = $$idx$val$i1;
  while(1) {
   $673 = ((($674)) + 4|0);
   $675 = HEAP32[$673>>2]|0;
   $not$$i$i$i$i$i$i$i$i = ($675|0)==(0);
   if (!($not$$i$i$i$i$i$i$i$i)) {
    $676 = HEAP32[$674>>2]|0;
    _free($676);
   }
   $677 = ((($674)) + 16|0);
   $678 = HEAP32[$677>>2]|0;
   $not$$i$i$i$i1$i$i$i$i = ($678|0)==(0);
   if (!($not$$i$i$i$i1$i$i$i$i)) {
    $679 = ((($674)) + 12|0);
    $680 = HEAP32[$679>>2]|0;
    _free($680);
   }
   $681 = ((($674)) + 28|0);
   $682 = HEAP32[$681>>2]|0;
   $not$$i$i$i$i4$i$i$i$i = ($682|0)==(0);
   if (!($not$$i$i$i$i4$i$i$i$i)) {
    $683 = ((($674)) + 24|0);
    $684 = HEAP32[$683>>2]|0;
    _free($684);
   }
   $685 = ((($674)) + 44|0);
   $686 = ($685|0)==($671|0);
   if ($686) {
    break;
   } else {
    $674 = $685;
   }
  }
 }
 $687 = HEAP32[$6>>2]|0;
 $not$$i$i$i$i = ($687|0)==(0);
 if ($not$$i$i$i$i) {
  $personalityslot$sroa$0$0 = $eh$lpad$body$ph$sink$indexZ2D;$personalityslot$sroa$5$0 = $eh$lpad$body$ph$sink$index45Z2D;
  ___resumeException($personalityslot$sroa$0$0|0);
  // unreachable;
 }
 _free($$idx$val$i1);
 $personalityslot$sroa$0$0 = $eh$lpad$body$ph$sink$indexZ2D;$personalityslot$sroa$5$0 = $eh$lpad$body$ph$sink$index45Z2D;
 ___resumeException($personalityslot$sroa$0$0|0);
 // unreachable;
 return (0)|0;
}
function __ZN40__LT_alloc__raw_vec__RawVec_LT_T_GT__GT_6double17he78dc10a992efc57E_1100($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $_14$sroa$0$0 = 0, $_14$sroa$5$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 4|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)==(0);
 do {
  if ($3) {
   $9 = (_malloc(16)|0);
   $_14$sroa$0$0 = 4;$_14$sroa$5$0 = $9;
  } else {
   $4 = $2 << 3;
   $5 = ($4|0)<(0);
   if ($5) {
    __ZN4core9panicking5panic17ha7507e8e32961bfeE(6432);
    // unreachable;
   } else {
    $6 = $2 << 1;
    $7 = HEAP32[$0>>2]|0;
    $8 = (_realloc($7,$4)|0);
    $_14$sroa$0$0 = $6;$_14$sroa$5$0 = $8;
    break;
   }
  }
 } while(0);
 $10 = ($_14$sroa$5$0|0)==(0|0);
 if ($10) {
  __ZN5alloc3oom3oom17hb253cf665793f59eE();
  // unreachable;
 } else {
  HEAP32[$0>>2] = $_14$sroa$5$0;
  HEAP32[$1>>2] = $_14$sroa$0$0;
  return;
 }
}
function __ZN4drop17h0083edab17cadb7eE($0) {
 $0 = $0|0;
 var $$lcssa$i$i = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, $_11$i = 0, $_5$i$sroa$10$0$$sroa_idx18 = 0, $_5$i$sroa$11$0$$sroa_idx20 = 0, $_5$i$sroa$4$0$$sroa_idx3 = 0, $_5$i$sroa$5$0$$sroa_idx6 = 0, $_5$i$sroa$6$0$$sroa_idx9 = 0, $_5$i$sroa$7$0$$sroa_idx11 = 0, $_5$i$sroa$8$0$$sroa_idx13 = 0, $_5$i$sroa$9$0$$sroa_idx15 = 0, $_6$i$sroa$4$0$$sroa_idx27 = 0, $_6$i$sroa$4$0$copyload = 0, $iter$i = 0, $node$sroa$0$076$i$i = 0, $node$sroa$0$085$i$i = 0, $node$sroa$5$0$i$i = 0, $node$sroa$5$0$lcssa$i64$i = 0, $node$sroa$5$077$i$i = 0, $node$sroa$5$080$i$i = 0, $node$sroa$5$080$lcssa$i$i = 0;
 var $node$sroa$5$08086$i$i = 0, $not$$i$i$i = 0, $not$$i$i$i$i$i$i$i = 0, $not$$i$i23$i = 0, $not$$i75$i$i = 0, $self$idx$val$idx$i$i$i = 0, $self$idx$val$idx$i83$i$i = 0, $self$idx$val$idx$i83$i62$i = 0, $self$idx$val$idx$val$i$i$i = 0, $self$idx$val$idx$val$i84$i$i = 0, $self$idx$val$idx$val$i84$i63$i = 0, $switchtmp$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $iter$i = sp + 16|0;
 $_11$i = sp;
 $1 = $0;
 $2 = $1;
 $3 = HEAP32[$2>>2]|0;
 $4 = (($1) + 4)|0;
 $5 = $4;
 $6 = HEAP32[$5>>2]|0;
 $_6$i$sroa$4$0$$sroa_idx27 = ((($0)) + 8|0);
 $_6$i$sroa$4$0$copyload = HEAP32[$_6$i$sroa$4$0$$sroa_idx27>>2]|0;
 $not$$i75$i$i = ($6|0)==(0);
 if ($not$$i75$i$i) {
  $7 = $3;
  $self$idx$val$idx$i83$i62$i = ((($7)) + 182|0);
  $self$idx$val$idx$val$i84$i63$i = HEAP16[$self$idx$val$idx$i83$i62$i>>1]|0;
  $8 = $self$idx$val$idx$val$i84$i63$i&65535;
  $$lcssa$i$i = $8;$node$sroa$5$0$lcssa$i64$i = $3;$node$sroa$5$080$lcssa$i$i = $7;
 } else {
  $node$sroa$0$076$i$i = $6;$node$sroa$5$077$i$i = $3;
  while(1) {
   $9 = $node$sroa$5$077$i$i;
   $10 = (($node$sroa$0$076$i$i) + -1)|0;
   $11 = ((($9)) + 184|0);
   $node$sroa$5$0$i$i = HEAP32[$11>>2]|0;
   $not$$i$i$i = ($10|0)==(0);
   if ($not$$i$i$i) {
    break;
   } else {
    $node$sroa$0$076$i$i = $10;$node$sroa$5$077$i$i = $node$sroa$5$0$i$i;
   }
  }
  $12 = $3;
  $self$idx$val$idx$i83$i$i = ((($12)) + 182|0);
  $self$idx$val$idx$val$i84$i$i = HEAP16[$self$idx$val$idx$i83$i$i>>1]|0;
  $13 = $self$idx$val$idx$val$i84$i$i&65535;
  $16 = $13;$node$sroa$0$085$i$i = $6;$node$sroa$5$08086$i$i = $12;
  while(1) {
   $14 = (($node$sroa$0$085$i$i) + -1)|0;
   $15 = (((($node$sroa$5$08086$i$i)) + 184|0) + ($16<<2)|0);
   $node$sroa$5$080$i$i = HEAP32[$15>>2]|0;
   $not$$i$i23$i = ($14|0)==(0);
   $self$idx$val$idx$i$i$i = ((($node$sroa$5$080$i$i)) + 182|0);
   $self$idx$val$idx$val$i$i$i = HEAP16[$self$idx$val$idx$i$i$i>>1]|0;
   $17 = $self$idx$val$idx$val$i$i$i&65535;
   if ($not$$i$i23$i) {
    $$lcssa$i$i = $17;$node$sroa$5$0$lcssa$i64$i = $node$sroa$5$0$i$i;$node$sroa$5$080$lcssa$i$i = $node$sroa$5$080$i$i;
    break;
   } else {
    $16 = $17;$node$sroa$0$085$i$i = $14;$node$sroa$5$08086$i$i = $node$sroa$5$080$i$i;
   }
  }
 }
 HEAP32[$iter$i>>2] = 0;
 $_5$i$sroa$4$0$$sroa_idx3 = ((($iter$i)) + 4|0);
 HEAP32[$_5$i$sroa$4$0$$sroa_idx3>>2] = $node$sroa$5$0$lcssa$i64$i;
 $_5$i$sroa$5$0$$sroa_idx6 = ((($iter$i)) + 8|0);
 HEAP32[$_5$i$sroa$5$0$$sroa_idx6>>2] = 0;
 $_5$i$sroa$6$0$$sroa_idx9 = ((($iter$i)) + 12|0);
 HEAP32[$_5$i$sroa$6$0$$sroa_idx9>>2] = 0;
 $_5$i$sroa$7$0$$sroa_idx11 = ((($iter$i)) + 16|0);
 HEAP32[$_5$i$sroa$7$0$$sroa_idx11>>2] = 0;
 $_5$i$sroa$8$0$$sroa_idx13 = ((($iter$i)) + 20|0);
 HEAP32[$_5$i$sroa$8$0$$sroa_idx13>>2] = $node$sroa$5$080$lcssa$i$i;
 $_5$i$sroa$9$0$$sroa_idx15 = ((($iter$i)) + 24|0);
 HEAP32[$_5$i$sroa$9$0$$sroa_idx15>>2] = 0;
 $_5$i$sroa$10$0$$sroa_idx18 = ((($iter$i)) + 28|0);
 HEAP32[$_5$i$sroa$10$0$$sroa_idx18>>2] = $$lcssa$i$i;
 $_5$i$sroa$11$0$$sroa_idx20 = ((($iter$i)) + 32|0);
 HEAP32[$_5$i$sroa$11$0$$sroa_idx20>>2] = $_6$i$sroa$4$0$copyload;
 $18 = ((($_11$i)) + 4|0);
 while(1) {
  __ZN102__LT_collections__btree__map__IntoIter_LT_K_C__u20_V_GT__u20_as_u20_core__iter__iterator__Iterator_GT_4next17h5a5c48f51ede10e7E($_11$i,$iter$i);
  $19 = HEAP32[$_11$i>>2]|0;
  $switchtmp$i = ($19|0)==(0|0);
  if ($switchtmp$i) {
   break;
  }
  $20 = HEAP32[$18>>2]|0;
  $not$$i$i$i$i$i$i$i = ($20|0)==(0);
  if (!($not$$i$i$i$i$i$i$i)) {
   _free($19);
  }
 }
 __ZN4drop17hcbae2324a2b77b00E($iter$i);
 STACKTOP = sp;return;
}
function __ZN40__LT_alloc__raw_vec__RawVec_LT_T_GT__GT_6double17h5720ff43fb8fbbacE($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $_14$sroa$0$0 = 0, $_14$sroa$5$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 4|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)==(0);
 do {
  if ($3) {
   $9 = (_malloc(176)|0);
   $_14$sroa$0$0 = 4;$_14$sroa$5$0 = $9;
  } else {
   $4 = ($2*88)|0;
   $5 = ($4|0)<(0);
   if ($5) {
    __ZN4core9panicking5panic17ha7507e8e32961bfeE(6432);
    // unreachable;
   } else {
    $6 = $2 << 1;
    $7 = HEAP32[$0>>2]|0;
    $8 = (_realloc($7,$4)|0);
    $_14$sroa$0$0 = $6;$_14$sroa$5$0 = $8;
    break;
   }
  }
 } while(0);
 $10 = ($_14$sroa$5$0|0)==(0|0);
 if ($10) {
  __ZN5alloc3oom3oom17hb253cf665793f59eE();
  // unreachable;
 } else {
  HEAP32[$0>>2] = $_14$sroa$5$0;
  HEAP32[$1>>2] = $_14$sroa$0$0;
  return;
 }
}
function __ZN102__LT_collections__btree__map__IntoIter_LT_K_C__u20_V_GT__u20_as_u20_core__iter__iterator__Iterator_GT_4next17h5a5c48f51ede10e7E($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$idx$val$idx$i = 0, $$idx$val$idx$i93 = 0, $$idx$val$idx$i93449 = 0, $$idx$val$idx$val$i = 0, $$idx$val$idx$val$i94 = 0, $$idx$val$idx$val$i94450 = 0, $$lcssa = 0, $$sink$i69$i = 0, $$sink$i69$i148 = 0, $$val = 0, $$val54 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0;
 var $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0;
 var $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $_11$sroa$9$067$i = 0, $_11$sroa$9$067$i149$off32 = 0, $_30$sroa$0$sroa$4$0$_30$sroa$0$0$$sroa_cast322$sroa_idx398 = 0, $_34$sroa$0$sroa$4$0$_34$sroa$0$0$$sroa_cast41$sroa_idx356 = 0, $_34$sroa$0$sroa$5$0$_34$sroa$0$0$$sroa_cast41$sroa_idx358 = 0, $_34$sroa$4$0$$sroa_idx46 = 0;
 var $_57$sroa$4$0$$sroa_idx207 = 0, $_63$sroa$0$sroa$4$0$_63$sroa$0$0$$sroa_cast28$sroa_idx240 = 0, $_63$sroa$0$sroa$5$0$_63$sroa$0$0$$sroa_cast28$sroa_idx242 = 0, $_63$sroa$4$0$$sroa_idx33 = 0, $cur_handle$sroa$0$0$lcssa = 0, $cur_handle$sroa$0$0451 = 0, $cur_handle$sroa$5$0$lcssa = 0, $cur_handle$sroa$5$0452 = 0, $cur_handle$sroa$8$0$off32$lcssa = 0, $handle$sroa$0$0$copyload = 0, $handle$sroa$4$0$$sroa_idx430 = 0, $handle$sroa$4$0$copyload = 0, $handle$sroa$5$0$$sroa_idx432 = 0, $handle$sroa$5$0$copyload = 0, $handle$sroa$6$0$$sroa_idx435 = 0, $handle$sroa$6$0$copyload = 0, $k$sroa$0$0$copyload341447 = 0, $k$sroa$5$0$$sroa_idx344 = 0, $k$sroa$5$0$copyload345 = 0, $k$sroa$6$0$$sroa_idx348 = 0;
 var $k$sroa$6$0$copyload349 = 0, $k3$sroa$0$0$copyload225446 = 0, $k3$sroa$5$0$$sroa_idx228 = 0, $k3$sroa$5$0$copyload229 = 0, $k3$sroa$6$0$$sroa_idx232 = 0, $k3$sroa$6$0$copyload233 = 0, $node$sroa$0$076$i = 0, $node$sroa$5$0$i = 0, $node$sroa$5$0$lcssa$i = 0, $node$sroa$5$077$i = 0, $not$$i$i = 0, $not$$i75$i = 0, $ret$sroa$4$0$i = 0, $ret$sroa$4$0$i150 = 0, $self$sroa$5$i$sroa$5$0$x$0$x$0$$sroa_cast$i$sroa_idx54$i142 = 0, $self$sroa$5$i$sroa$7$0$x$0$x$0$$sroa_cast$i$sroa_idx56$i144 = 0, $self$sroa$5$i$sroa$9$0$x$0$x$0$$sroa_cast$i$sroa_idx58$i146 = 0, $x$0$x$0$x$0$$sroa_cast14$pre$phi$i$i151ZZZZZZZZ2D = 0, $x$i$i130 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $x$i$i130 = sp;
 $2 = ((($1)) + 32|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($3|0)==(0);
 if ($4) {
  HEAP32[$0>>2] = 0;
  STACKTOP = sp;return;
 }
 $5 = (($3) + -1)|0;
 HEAP32[$2>>2] = $5;
 $handle$sroa$0$0$copyload = HEAP32[$1>>2]|0;
 $handle$sroa$4$0$$sroa_idx430 = ((($1)) + 4|0);
 $handle$sroa$4$0$copyload = HEAP32[$handle$sroa$4$0$$sroa_idx430>>2]|0;
 $handle$sroa$5$0$$sroa_idx432 = ((($1)) + 8|0);
 $handle$sroa$5$0$copyload = HEAP32[$handle$sroa$5$0$$sroa_idx432>>2]|0;
 $handle$sroa$6$0$$sroa_idx435 = ((($1)) + 12|0);
 $handle$sroa$6$0$copyload = HEAP32[$handle$sroa$6$0$$sroa_idx435>>2]|0;
 $$idx$val$idx$i = ((($handle$sroa$4$0$copyload)) + 182|0);
 $$idx$val$idx$val$i = HEAP16[$$idx$val$idx$i>>1]|0;
 $6 = $$idx$val$idx$val$i&65535;
 $7 = ($handle$sroa$6$0$copyload>>>0)<($6>>>0);
 if ($7) {
  $19 = $handle$sroa$4$0$copyload;
  $20 = (($handle$sroa$4$0$copyload) + (($handle$sroa$6$0$copyload*12)|0)|0);
  $k$sroa$0$0$copyload341447 = HEAP32[$20>>2]|0;
  $k$sroa$5$0$$sroa_idx344 = (((($handle$sroa$4$0$copyload) + (($handle$sroa$6$0$copyload*12)|0)|0)) + 4|0);
  $k$sroa$5$0$copyload345 = HEAP32[$k$sroa$5$0$$sroa_idx344>>2]|0;
  $k$sroa$6$0$$sroa_idx348 = (((($handle$sroa$4$0$copyload) + (($handle$sroa$6$0$copyload*12)|0)|0)) + 8|0);
  $k$sroa$6$0$copyload349 = HEAP32[$k$sroa$6$0$$sroa_idx348>>2]|0;
  $21 = (((($handle$sroa$4$0$copyload)) + 132|0) + ($handle$sroa$6$0$copyload<<2)|0);
  $$val = HEAP32[$21>>2]|0;
  $22 = (($handle$sroa$6$0$copyload) + 1)|0;
  $_30$sroa$0$sroa$4$0$_30$sroa$0$0$$sroa_cast322$sroa_idx398 = ((($1)) + 4|0);
  HEAP32[$_30$sroa$0$sroa$4$0$_30$sroa$0$0$$sroa_cast322$sroa_idx398>>2] = $19;
  HEAP32[$handle$sroa$6$0$$sroa_idx435>>2] = $22;
  HEAP32[$0>>2] = $k$sroa$0$0$copyload341447;
  $_34$sroa$0$sroa$4$0$_34$sroa$0$0$$sroa_cast41$sroa_idx356 = ((($0)) + 4|0);
  HEAP32[$_34$sroa$0$sroa$4$0$_34$sroa$0$0$$sroa_cast41$sroa_idx356>>2] = $k$sroa$5$0$copyload345;
  $_34$sroa$0$sroa$5$0$_34$sroa$0$0$$sroa_cast41$sroa_idx358 = ((($0)) + 8|0);
  HEAP32[$_34$sroa$0$sroa$5$0$_34$sroa$0$0$$sroa_cast41$sroa_idx358>>2] = $k$sroa$6$0$copyload349;
  $_34$sroa$4$0$$sroa_idx46 = ((($0)) + 12|0);
  HEAP32[$_34$sroa$4$0$$sroa_idx46>>2] = $$val;
  STACKTOP = sp;return;
 }
 $8 = ((($handle$sroa$4$0$copyload)) + 176|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = ($9|0)==(0|0);
 if ($10) {
  $$sink$i69$i148 = $handle$sroa$0$0$copyload;$_11$sroa$9$067$i149$off32 = 0;$ret$sroa$4$0$i150 = 0;$x$0$x$0$x$0$$sroa_cast14$pre$phi$i$i151ZZZZZZZZ2D = $x$i$i130;
 } else {
  $11 = $9;
  $12 = (($handle$sroa$0$0$copyload) + 1)|0;
  $13 = ((($handle$sroa$4$0$copyload)) + 180|0);
  $14 = HEAP16[$13>>1]|0;
  $15 = $14&65535;
  HEAP32[$x$i$i130>>2] = $12;
  $self$sroa$5$i$sroa$5$0$x$0$x$0$$sroa_cast$i$sroa_idx54$i142 = ((($x$i$i130)) + 4|0);
  HEAP32[$self$sroa$5$i$sroa$5$0$x$0$x$0$$sroa_cast$i$sroa_idx54$i142>>2] = $11;
  $self$sroa$5$i$sroa$7$0$x$0$x$0$$sroa_cast$i$sroa_idx56$i144 = ((($x$i$i130)) + 8|0);
  HEAP32[$self$sroa$5$i$sroa$7$0$x$0$x$0$$sroa_cast$i$sroa_idx56$i144>>2] = $handle$sroa$5$0$copyload;
  $self$sroa$5$i$sroa$9$0$x$0$x$0$$sroa_cast$i$sroa_idx58$i146 = ((($x$i$i130)) + 12|0);
  HEAP32[$self$sroa$5$i$sroa$9$0$x$0$x$0$$sroa_cast$i$sroa_idx58$i146>>2] = $15;
  $$sink$i69$i148 = $12;$_11$sroa$9$067$i149$off32 = $15;$ret$sroa$4$0$i150 = $11;$x$0$x$0$x$0$$sroa_cast14$pre$phi$i$i151ZZZZZZZZ2D = $x$i$i130;
 }
 _free($handle$sroa$4$0$copyload);
 $16 = $ret$sroa$4$0$i150;
 $$idx$val$idx$i93449 = ((($16)) + 182|0);
 $$idx$val$idx$val$i94450 = HEAP16[$$idx$val$idx$i93449>>1]|0;
 $17 = $$idx$val$idx$val$i94450&65535;
 $18 = ($_11$sroa$9$067$i149$off32>>>0)<($17>>>0);
 if ($18) {
  $$lcssa = $16;$cur_handle$sroa$0$0$lcssa = $$sink$i69$i148;$cur_handle$sroa$5$0$lcssa = $ret$sroa$4$0$i150;$cur_handle$sroa$8$0$off32$lcssa = $_11$sroa$9$067$i149$off32;
 } else {
  $25 = $16;$cur_handle$sroa$0$0451 = $$sink$i69$i148;$cur_handle$sroa$5$0452 = $ret$sroa$4$0$i150;
  while(1) {
   $23 = $cur_handle$sroa$5$0452;
   $24 = ((($25)) + 176|0);
   $26 = HEAP32[$24>>2]|0;
   $27 = ($26|0)==(0|0);
   if ($27) {
    $$sink$i69$i = $cur_handle$sroa$0$0451;$_11$sroa$9$067$i = 0;$ret$sroa$4$0$i = 0;
   } else {
    $28 = (($cur_handle$sroa$0$0451) + 1)|0;
    $29 = ((($25)) + 180|0);
    $30 = HEAP16[$29>>1]|0;
    $31 = $30&65535;
    $$sink$i69$i = $28;$_11$sroa$9$067$i = $31;$ret$sroa$4$0$i = $26;
   }
   _free($23);
   $32 = $ret$sroa$4$0$i;
   $$idx$val$idx$i93 = ((($ret$sroa$4$0$i)) + 182|0);
   $$idx$val$idx$val$i94 = HEAP16[$$idx$val$idx$i93>>1]|0;
   $33 = $$idx$val$idx$val$i94&65535;
   $34 = ($_11$sroa$9$067$i>>>0)<($33>>>0);
   if ($34) {
    $$lcssa = $ret$sroa$4$0$i;$cur_handle$sroa$0$0$lcssa = $$sink$i69$i;$cur_handle$sroa$5$0$lcssa = $32;$cur_handle$sroa$8$0$off32$lcssa = $_11$sroa$9$067$i;
    break;
   } else {
    $25 = $ret$sroa$4$0$i;$cur_handle$sroa$0$0451 = $$sink$i69$i;$cur_handle$sroa$5$0452 = $32;
   }
  }
 }
 $35 = (($$lcssa) + (($cur_handle$sroa$8$0$off32$lcssa*12)|0)|0);
 $k3$sroa$0$0$copyload225446 = HEAP32[$35>>2]|0;
 $k3$sroa$5$0$$sroa_idx228 = (((($$lcssa) + (($cur_handle$sroa$8$0$off32$lcssa*12)|0)|0)) + 4|0);
 $k3$sroa$5$0$copyload229 = HEAP32[$k3$sroa$5$0$$sroa_idx228>>2]|0;
 $k3$sroa$6$0$$sroa_idx232 = (((($$lcssa) + (($cur_handle$sroa$8$0$off32$lcssa*12)|0)|0)) + 8|0);
 $k3$sroa$6$0$copyload233 = HEAP32[$k3$sroa$6$0$$sroa_idx232>>2]|0;
 $36 = (((($$lcssa)) + 132|0) + ($cur_handle$sroa$8$0$off32$lcssa<<2)|0);
 $$val54 = HEAP32[$36>>2]|0;
 $37 = $cur_handle$sroa$5$0$lcssa;
 $38 = (($cur_handle$sroa$8$0$off32$lcssa) + 1)|0;
 $39 = (($cur_handle$sroa$0$0$lcssa) + -1)|0;
 $40 = (((($37)) + 184|0) + ($38<<2)|0);
 $41 = HEAP32[$40>>2]|0;
 $not$$i75$i = ($39|0)==(0);
 if ($not$$i75$i) {
  $node$sroa$5$0$lcssa$i = $41;
 } else {
  $node$sroa$0$076$i = $39;$node$sroa$5$077$i = $41;
  while(1) {
   $42 = $node$sroa$5$077$i;
   $43 = (($node$sroa$0$076$i) + -1)|0;
   $44 = ((($42)) + 184|0);
   $node$sroa$5$0$i = HEAP32[$44>>2]|0;
   $not$$i$i = ($43|0)==(0);
   if ($not$$i$i) {
    $node$sroa$5$0$lcssa$i = $node$sroa$5$0$i;
    break;
   } else {
    $node$sroa$0$076$i = $43;$node$sroa$5$077$i = $node$sroa$5$0$i;
   }
  }
 }
 HEAP32[$1>>2] = 0;
 $_57$sroa$4$0$$sroa_idx207 = ((($1)) + 4|0);
 HEAP32[$_57$sroa$4$0$$sroa_idx207>>2] = $node$sroa$5$0$lcssa$i;
 HEAP32[$handle$sroa$5$0$$sroa_idx432>>2] = $handle$sroa$5$0$copyload;
 HEAP32[$handle$sroa$6$0$$sroa_idx435>>2] = 0;
 HEAP32[$0>>2] = $k3$sroa$0$0$copyload225446;
 $_63$sroa$0$sroa$4$0$_63$sroa$0$0$$sroa_cast28$sroa_idx240 = ((($0)) + 4|0);
 HEAP32[$_63$sroa$0$sroa$4$0$_63$sroa$0$0$$sroa_cast28$sroa_idx240>>2] = $k3$sroa$5$0$copyload229;
 $_63$sroa$0$sroa$5$0$_63$sroa$0$0$$sroa_cast28$sroa_idx242 = ((($0)) + 8|0);
 HEAP32[$_63$sroa$0$sroa$5$0$_63$sroa$0$0$$sroa_cast28$sroa_idx242>>2] = $k3$sroa$6$0$copyload233;
 $_63$sroa$4$0$$sroa_idx33 = ((($0)) + 12|0);
 HEAP32[$_63$sroa$4$0$$sroa_idx33>>2] = $$val54;
 STACKTOP = sp;return;
}
function __ZN4drop17hcbae2324a2b77b00E($0) {
 $0 = $0|0;
 var $$in$i = 0, $$lcssa = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $16$phi = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, $_15$sroa$0$0$copyload$i = 0, $_15$sroa$4$0$$sroa_idx122$i = 0, $_15$sroa$4$0$copyload$i = 0, $_15$sroa$5$0$$sroa_idx124$i = 0, $_15$sroa$5$0$copyload$i = 0, $_9$i = 0, $not$$i$i$i$i$i$i$i = 0, $ret$sroa$4$0$i30$i = 0, $self$sroa$5$i$sroa$5$0$x$0$x$0$$sroa_cast$i$sroa_idx54$i22$i = 0, $self$sroa$5$i$sroa$7$0$x$0$x$0$$sroa_cast$i$sroa_idx56$i24$i = 0, $self$sroa$5$i$sroa$9$0$x$0$x$0$$sroa_cast$i$sroa_idx58$i26$i = 0, $switch1tmp$i = 0, $switchtmp$i = 0, $switchtmp129$i = 0, $x$0$x$0$x$0$$sroa_cast14$pre$phi$i$i31$iZZZZZZZZ2D = 0, $x$i$i10$i = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $x$i$i10$i = sp + 16|0;
 $_9$i = sp;
 __ZN102__LT_collections__btree__map__IntoIter_LT_K_C__u20_V_GT__u20_as_u20_core__iter__iterator__Iterator_GT_4next17h5a5c48f51ede10e7E($_9$i,$0);
 $1 = HEAP32[$_9$i>>2]|0;
 $switchtmp129$i = ($1|0)==(0|0);
 if (!($switchtmp129$i)) {
  $2 = ((($_9$i)) + 4|0);
  $$in$i = $1;
  while(1) {
   $3 = HEAP32[$2>>2]|0;
   $not$$i$i$i$i$i$i$i = ($3|0)==(0);
   if (!($not$$i$i$i$i$i$i$i)) {
    _free($$in$i);
   }
   __ZN102__LT_collections__btree__map__IntoIter_LT_K_C__u20_V_GT__u20_as_u20_core__iter__iterator__Iterator_GT_4next17h5a5c48f51ede10e7E($_9$i,$0);
   $4 = HEAP32[$_9$i>>2]|0;
   $switchtmp$i = ($4|0)==(0|0);
   if ($switchtmp$i) {
    break;
   } else {
    $$in$i = $4;
   }
  }
 }
 $_15$sroa$4$0$$sroa_idx122$i = ((($0)) + 4|0);
 $_15$sroa$4$0$copyload$i = HEAP32[$_15$sroa$4$0$$sroa_idx122$i>>2]|0;
 $5 = ((($_15$sroa$4$0$copyload$i)) + 176|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ($6|0)==(0|0);
 if ($7) {
  $ret$sroa$4$0$i30$i = 0;$x$0$x$0$x$0$$sroa_cast14$pre$phi$i$i31$iZZZZZZZZ2D = $x$i$i10$i;
 } else {
  $_15$sroa$0$0$copyload$i = HEAP32[$0>>2]|0;
  $_15$sroa$5$0$$sroa_idx124$i = ((($0)) + 8|0);
  $_15$sroa$5$0$copyload$i = HEAP32[$_15$sroa$5$0$$sroa_idx124$i>>2]|0;
  $8 = $6;
  $9 = (($_15$sroa$0$0$copyload$i) + 1)|0;
  $10 = ((($_15$sroa$4$0$copyload$i)) + 180|0);
  $11 = HEAP16[$10>>1]|0;
  $12 = $11&65535;
  HEAP32[$x$i$i10$i>>2] = $9;
  $self$sroa$5$i$sroa$5$0$x$0$x$0$$sroa_cast$i$sroa_idx54$i22$i = ((($x$i$i10$i)) + 4|0);
  HEAP32[$self$sroa$5$i$sroa$5$0$x$0$x$0$$sroa_cast$i$sroa_idx54$i22$i>>2] = $8;
  $self$sroa$5$i$sroa$7$0$x$0$x$0$$sroa_cast$i$sroa_idx56$i24$i = ((($x$i$i10$i)) + 8|0);
  HEAP32[$self$sroa$5$i$sroa$7$0$x$0$x$0$$sroa_cast$i$sroa_idx56$i24$i>>2] = $_15$sroa$5$0$copyload$i;
  $self$sroa$5$i$sroa$9$0$x$0$x$0$$sroa_cast$i$sroa_idx58$i26$i = ((($x$i$i10$i)) + 12|0);
  HEAP32[$self$sroa$5$i$sroa$9$0$x$0$x$0$$sroa_cast$i$sroa_idx58$i26$i>>2] = $12;
  $ret$sroa$4$0$i30$i = $6;$x$0$x$0$x$0$$sroa_cast14$pre$phi$i$i31$iZZZZZZZZ2D = $x$i$i10$i;
 }
 _free($_15$sroa$4$0$copyload$i);
 $switch1tmp$i = ($ret$sroa$4$0$i30$i|0)==(0|0);
 if ($switch1tmp$i) {
  STACKTOP = sp;return;
 }
 $13 = ((($ret$sroa$4$0$i30$i)) + 176|0);
 $14 = HEAP32[$13>>2]|0;
 $15 = ($14|0)==(0|0);
 if ($15) {
  $$lcssa = $ret$sroa$4$0$i30$i;
 } else {
  $16 = $ret$sroa$4$0$i30$i;$18 = $14;
  while(1) {
   _free($16);
   $17 = ((($18)) + 176|0);
   $19 = HEAP32[$17>>2]|0;
   $20 = ($19|0)==(0|0);
   if ($20) {
    $$lcssa = $18;
    break;
   } else {
    $16$phi = $18;$18 = $19;$16 = $16$phi;
   }
  }
 }
 _free($$lcssa);
 STACKTOP = sp;return;
}
function __ZN7ndarray11arraytraits19array_out_of_bounds17h9caedf25347ffe03E() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZN3std9panicking11begin_panic17h9936a195de5ffc4dE_1230();
 // unreachable;
}
function __ZN3std9panicking11begin_panic17h9936a195de5ffc4dE_1230() {
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_malloc(8)|0);
 $1 = ($0|0)==(0|0);
 if ($1) {
  __ZN5alloc3oom3oom17hb253cf665793f59eE();
  // unreachable;
 } else {
  HEAP32[$0>>2] = 17182;
  $2 = ((($0)) + 4|0);
  HEAP32[$2>>2] = 28;
  __ZN3std9panicking20rust_panic_with_hook17hff46710531bc908bE($0,1520,5688);
  // unreachable;
 }
}
function __ZN4drop17hc002f0e3f036e9d8E($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZN36__LT_T_u20_as_u20_core__any__Any_GT_11get_type_id17hd662cb2ea6aefd75E_1231($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 tempRet0 = (703347955);
 return 1133457186;
}
function __ZN62__LT_ndarray__error__ErrorKind_u20_as_u20_core__fmt__Debug_GT_3fmt17h8596b1a3cef8180dE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, $_0$sroa$0$0 = 0, $trunc = 0, $trunc$clear = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $trunc = HEAP8[$0>>0]|0;
 $trunc$clear = $trunc & 7;
 switch ($trunc$clear<<24>>24) {
 case 0:  {
  $2 = ((($1)) + 28|0);
  $3 = HEAP32[$2>>2]|0;
  $4 = ((($1)) + 32|0);
  $5 = HEAP32[$4>>2]|0;
  $6 = ((($5)) + 12|0);
  $7 = HEAP32[$6>>2]|0;
  $8 = (FUNCTION_TABLE_iiii[$7 & 511]($3,17472,17)|0);
  $_0$sroa$0$0 = $8;
  return ($_0$sroa$0$0|0);
  break;
 }
 case 1:  {
  $9 = ((($1)) + 28|0);
  $10 = HEAP32[$9>>2]|0;
  $11 = ((($1)) + 32|0);
  $12 = HEAP32[$11>>2]|0;
  $13 = ((($12)) + 12|0);
  $14 = HEAP32[$13>>2]|0;
  $15 = (FUNCTION_TABLE_iiii[$14 & 511]($10,17489,18)|0);
  $_0$sroa$0$0 = $15;
  return ($_0$sroa$0$0|0);
  break;
 }
 case 2:  {
  $16 = ((($1)) + 28|0);
  $17 = HEAP32[$16>>2]|0;
  $18 = ((($1)) + 32|0);
  $19 = HEAP32[$18>>2]|0;
  $20 = ((($19)) + 12|0);
  $21 = HEAP32[$20>>2]|0;
  $22 = (FUNCTION_TABLE_iiii[$21 & 511]($17,17507,12)|0);
  $_0$sroa$0$0 = $22;
  return ($_0$sroa$0$0|0);
  break;
 }
 case 3:  {
  $23 = ((($1)) + 28|0);
  $24 = HEAP32[$23>>2]|0;
  $25 = ((($1)) + 32|0);
  $26 = HEAP32[$25>>2]|0;
  $27 = ((($26)) + 12|0);
  $28 = HEAP32[$27>>2]|0;
  $29 = (FUNCTION_TABLE_iiii[$28 & 511]($24,17519,11)|0);
  $_0$sroa$0$0 = $29;
  return ($_0$sroa$0$0|0);
  break;
 }
 case 4:  {
  $30 = ((($1)) + 28|0);
  $31 = HEAP32[$30>>2]|0;
  $32 = ((($1)) + 32|0);
  $33 = HEAP32[$32>>2]|0;
  $34 = ((($33)) + 12|0);
  $35 = HEAP32[$34>>2]|0;
  $36 = (FUNCTION_TABLE_iiii[$35 & 511]($31,17530,11)|0);
  $_0$sroa$0$0 = $36;
  return ($_0$sroa$0$0|0);
  break;
 }
 case 5:  {
  $37 = ((($1)) + 28|0);
  $38 = HEAP32[$37>>2]|0;
  $39 = ((($1)) + 32|0);
  $40 = HEAP32[$39>>2]|0;
  $41 = ((($40)) + 12|0);
  $42 = HEAP32[$41>>2]|0;
  $43 = (FUNCTION_TABLE_iiii[$42 & 511]($38,17541,12)|0);
  $_0$sroa$0$0 = $43;
  return ($_0$sroa$0$0|0);
  break;
 }
 default: {
  // unreachable;
 }
 }
 return (0)|0;
}
function __ZN55__LT__RF__u27_a_u20_T_u20_as_u20_core__fmt__Display_GT_3fmt17h0070a87612600aa5E_1236($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[$0>>2]|0;
 $3 = ((($0)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (__ZN4core3fmt9Formatter3pad17hd3e8d63fceae72f6E($1,$2,$4)|0);
 return ($5|0);
}
function __ZN3std11collections4hash3map11RandomState3new4KEYS7__getit17hca28196a28ab92b9E() {
 var $$$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $_0$0$i$i$i = 0, $_0$0$i$i3$i = 0, $_23$sroa$0$0$$sroa_idx$i = 0, $cond$i$i$i = 0;
 var $cond$i$i1$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[1569]|0;
 $cond$i$i$i = ($0|0)==(0);
 if ($cond$i$i$i) {
  $1 = (__ZN3std10sys_common12thread_local9StaticKey9lazy_init17hfe76ff6b56e2d562E(6276)|0);
  $_0$0$i$i$i = $1;
 } else {
  $_0$0$i$i$i = $0;
 }
 $2 = (_pthread_getspecific(($_0$0$i$i$i|0))|0);
 $3 = ($2|0)==(0|0);
 if (!($3)) {
  $4 = ($2|0)==((1)|0);
  $5 = ((($2)) + 8|0);
  $$$i = $4 ? 0 : $5;
  $14 = $$$i;
  return ($14|0);
 }
 $6 = (_malloc(32)|0);
 $7 = ($6|0)==(0|0);
 if ($7) {
  __ZN5alloc3oom3oom17hb253cf665793f59eE();
  // unreachable;
 }
 HEAP32[$6>>2] = 6276;
 $_23$sroa$0$0$$sroa_idx$i = ((($6)) + 8|0);
 $8 = $_23$sroa$0$0$$sroa_idx$i;
 $9 = $8;
 HEAP32[$9>>2] = 0;
 $10 = (($8) + 4)|0;
 $11 = $10;
 HEAP32[$11>>2] = 0;
 $12 = HEAP32[1569]|0;
 $cond$i$i1$i = ($12|0)==(0);
 if ($cond$i$i1$i) {
  $13 = (__ZN3std10sys_common12thread_local9StaticKey9lazy_init17hfe76ff6b56e2d562E(6276)|0);
  $_0$0$i$i3$i = $13;
 } else {
  $_0$0$i$i3$i = $12;
 }
 (_pthread_setspecific(($_0$0$i$i3$i|0),($6|0))|0);
 $14 = $_23$sroa$0$0$$sroa_idx$i;
 return ($14|0);
}
function __ZN3std11collections4hash3map11RandomState3new4KEYS6__init17h409badf47e674127E($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $_11$i = 0, $_11$sroa_raw_idx$i = 0;
 var $_15$i$i$i = 0, $_5$i$i$i = 0, $_8$i$sroa$0$0 = 0, $_8$i$sroa$9$0$off0 = 0, $_8$i$sroa$9$0$off32 = 0, $_8$i$sroa$9$1$off065 = 0, $_8$i$sroa$9$1$off3266 = 0, $bytes$i$i$i$i$i = 0, $bytes$i$i$i$i$i14 = 0, $cond$i119$i$i = 0, $personalityslot$sroa$0$0 = 0, $personalityslot$sroa$5$0 = 0, $self$sroa$0$0$copyload$i$i$i$i = 0, $self$sroa$11$0$$sroa_idx42$i$i$i$i = 0, $self$sroa$11$0$copyload$i$i$i$i = 0, $self$sroa$16$0$$sroa_idx49$i$i$i$i = 0, $self$sroa$16$0$copyload$i$i$i$i = 0, $self$sroa$5$0$$sroa_idx36$i$i$i$i = 0, $self$sroa$5$0$copyload$i$i$i$i = 0, $switch3$i$i = 0;
 var $switch3$i$i$i$i = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $vararg_buffer = sp + 56|0;
 $_5$i$i$i = sp + 32|0;
 $_15$i$i$i = sp + 24|0;
 $bytes$i$i$i$i$i14 = sp + 16|0;
 $bytes$i$i$i$i$i = sp + 8|0;
 $_11$i = sp;
 __THREW__ = 0;
 invoke_viii(342,($_5$i$i$i|0),(18295|0),12);
 $1 = __THREW__; __THREW__ = 0;
 $2 = $1&1;
 do {
  if (!($2)) {
   $self$sroa$0$0$copyload$i$i$i$i = HEAP32[$_5$i$i$i>>2]|0;
   $self$sroa$5$0$$sroa_idx36$i$i$i$i = ((($_5$i$i$i)) + 4|0);
   $self$sroa$5$0$copyload$i$i$i$i = HEAP32[$self$sroa$5$0$$sroa_idx36$i$i$i$i>>2]|0;
   $self$sroa$11$0$$sroa_idx42$i$i$i$i = ((($_5$i$i$i)) + 8|0);
   $self$sroa$11$0$copyload$i$i$i$i = HEAP32[$self$sroa$11$0$$sroa_idx42$i$i$i$i>>2]|0;
   $switch3$i$i$i$i = ($self$sroa$0$0$copyload$i$i$i$i|0)==(1);
   if ($switch3$i$i$i$i) {
    $self$sroa$16$0$$sroa_idx49$i$i$i$i = ((($_5$i$i$i)) + 12|0);
    $self$sroa$16$0$copyload$i$i$i$i = HEAP32[$self$sroa$16$0$$sroa_idx49$i$i$i$i>>2]|0;
    $3 = $self$sroa$11$0$copyload$i$i$i$i;
    __THREW__ = 0;
    invoke_viii(343,($_15$i$i$i|0),($3|0),($self$sroa$16$0$copyload$i$i$i$i|0));
    $4 = __THREW__; __THREW__ = 0;
    $5 = $4&1;
    if ($5) {
     break;
    }
    $6 = $_15$i$i$i;
    $7 = $6;
    $8 = HEAP32[$7>>2]|0;
    $9 = (($6) + 4)|0;
    $10 = $9;
    $11 = HEAP32[$10>>2]|0;
    $_8$i$sroa$9$1$off065 = $8;$_8$i$sroa$9$1$off3266 = $11;
   } else {
    $12 = $self$sroa$5$0$copyload$i$i$i$i;
    while(1) {
     HEAP32[$vararg_buffer>>2] = 438;
     $13 = (_open($12,524288,$vararg_buffer)|0);
     $14 = ($13|0)==(-1);
     if (!($14)) {
      $_8$i$sroa$0$0 = 0;$_8$i$sroa$9$0$off0 = $13;$_8$i$sroa$9$0$off32 = 0;
      break;
     }
     $15 = (___errno_location()|0);
     $16 = HEAP32[$15>>2]|0;
     $cond$i119$i$i = ($16|0)==(4);
     if (!($cond$i119$i$i)) {
      $_8$i$sroa$0$0 = 1;$_8$i$sroa$9$0$off0 = 0;$_8$i$sroa$9$0$off32 = $16;
      break;
     }
    }
    $17 = $self$sroa$5$0$copyload$i$i$i$i;
    HEAP8[$17>>0] = 0;
    $18 = ($self$sroa$11$0$copyload$i$i$i$i|0)==(0);
    if (!($18)) {
     _free($17);
    }
    $switch3$i$i = ($_8$i$sroa$0$0|0)==(1);
    if ($switch3$i$i) {
     $_8$i$sroa$9$1$off065 = $_8$i$sroa$9$0$off0;$_8$i$sroa$9$1$off3266 = $_8$i$sroa$9$0$off32;
    } else {
     $22 = $bytes$i$i$i$i$i;
     $23 = $22;
     HEAP32[$23>>2] = 0;
     $24 = (($22) + 4)|0;
     $25 = $24;
     HEAP32[$25>>2] = 0;
     __THREW__ = 0;
     invoke_vii(345,($_8$i$sroa$9$0$off0|0),($bytes$i$i$i$i$i|0));
     $26 = __THREW__; __THREW__ = 0;
     $27 = $26&1;
     if (!($27)) {
      $28 = $bytes$i$i$i$i$i;
      $29 = $28;
      $30 = HEAP32[$29>>2]|0;
      $31 = (($28) + 4)|0;
      $32 = $31;
      $33 = HEAP32[$32>>2]|0;
      $34 = $bytes$i$i$i$i$i14;
      $35 = $34;
      HEAP32[$35>>2] = 0;
      $36 = (($34) + 4)|0;
      $37 = $36;
      HEAP32[$37>>2] = 0;
      __THREW__ = 0;
      invoke_vii(345,($_8$i$sroa$9$0$off0|0),($bytes$i$i$i$i$i14|0));
      $38 = __THREW__; __THREW__ = 0;
      $39 = $38&1;
      if (!($39)) {
       $40 = $bytes$i$i$i$i$i14;
       $41 = $40;
       $42 = HEAP32[$41>>2]|0;
       $43 = (($40) + 4)|0;
       $44 = $43;
       $45 = HEAP32[$44>>2]|0;
       $46 = $0;
       $47 = $46;
       HEAP32[$47>>2] = $30;
       $48 = (($46) + 4)|0;
       $49 = $48;
       HEAP32[$49>>2] = $33;
       $50 = ((($0)) + 8|0);
       $51 = $50;
       $52 = $51;
       HEAP32[$52>>2] = $42;
       $53 = (($51) + 4)|0;
       $54 = $53;
       HEAP32[$54>>2] = $45;
       (_close($_8$i$sroa$9$0$off0)|0);
       STACKTOP = sp;return;
      }
     }
     $55 = ___cxa_find_matching_catch_2()|0;
     $56 = tempRet0;
     (_close($_8$i$sroa$9$0$off0)|0);
     $personalityslot$sroa$0$0 = $55;$personalityslot$sroa$5$0 = $56;
     ___resumeException($personalityslot$sroa$0$0|0);
     // unreachable;
    }
   }
   HEAP32[$_11$i>>2] = $_8$i$sroa$9$1$off065;
   $_11$sroa_raw_idx$i = ((($_11$i)) + 4|0);
   HEAP32[$_11$sroa_raw_idx$i>>2] = $_8$i$sroa$9$1$off3266;
   __THREW__ = 0;
   invoke_vi(344,($_11$i|0));
   $19 = __THREW__; __THREW__ = 0;
   $20 = ___cxa_find_matching_catch_2()|0;
   $21 = tempRet0;
   $personalityslot$sroa$0$0 = $20;$personalityslot$sroa$5$0 = $21;
   ___resumeException($personalityslot$sroa$0$0|0);
   // unreachable;
  }
 } while(0);
 $57 = ___cxa_find_matching_catch_2()|0;
 $58 = tempRet0;
 $personalityslot$sroa$0$0 = $57;$personalityslot$sroa$5$0 = $58;
 ___resumeException($personalityslot$sroa$0$0|0);
 // unreachable;
}
function __ZN4core6result13unwrap_failed17h3b84dedba3e3d939E_1325($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $_12 = 0, $_6$sroa$0$0$$sroa_idx$i = 0, $_7 = 0, $cond$i$i = 0, $error = 0, $msg = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $msg = sp + 48|0;
 $error = sp + 40|0;
 $_7 = sp + 16|0;
 $_12 = sp;
 HEAP32[$msg>>2] = 18307;
 $1 = ((($msg)) + 4|0);
 HEAP32[$1>>2] = 26;
 $2 = $0;
 $3 = $2;
 $4 = HEAP32[$3>>2]|0;
 $5 = (($2) + 4)|0;
 $6 = $5;
 $7 = HEAP32[$6>>2]|0;
 $8 = $error;
 $9 = $8;
 HEAP32[$9>>2] = $4;
 $10 = (($8) + 4)|0;
 $11 = $10;
 HEAP32[$11>>2] = $7;
 $12 = $msg;
 $13 = $error;
 HEAP32[$_12>>2] = $12;
 $14 = ((($_12)) + 4|0);
 HEAP32[$14>>2] = (346);
 $15 = ((($_12)) + 8|0);
 HEAP32[$15>>2] = $13;
 $16 = ((($_12)) + 12|0);
 HEAP32[$16>>2] = (347);
 HEAP32[$_7>>2] = (6520);
 $17 = ((($_7)) + 4|0);
 HEAP32[$17>>2] = 2;
 $_6$sroa$0$0$$sroa_idx$i = ((($_7)) + 8|0);
 HEAP32[$_6$sroa$0$0$$sroa_idx$i>>2] = 0;
 $18 = ((($_7)) + 16|0);
 HEAP32[$18>>2] = $_12;
 $19 = ((($_7)) + 20|0);
 HEAP32[$19>>2] = 2;
 __THREW__ = 0;
 invoke_viiii(272,($_7|0),(22324|0),100,799);
 $20 = __THREW__; __THREW__ = 0;
 $21 = ___cxa_find_matching_catch_2()|0;
 $22 = tempRet0;
 $23 = HEAP32[$error>>2]|0;
 $cond$i$i = ($23|0)==(1);
 if (!($cond$i$i)) {
  ___resumeException($21|0);
  // unreachable;
 }
 $24 = ((($error)) + 4|0);
 $25 = HEAP32[$24>>2]|0;
 $26 = ((($25)) + 4|0);
 $27 = HEAP32[$26>>2]|0;
 $28 = ((($25)) + 8|0);
 $29 = HEAP32[$28>>2]|0;
 $30 = HEAP32[$29>>2]|0;
 FUNCTION_TABLE_vi[$30 & 511]($27);
 $31 = HEAP32[$28>>2]|0;
 $32 = ((($31)) + 4|0);
 $33 = HEAP32[$32>>2]|0;
 $34 = ($33|0)==(0);
 if (!($34)) {
  _free($27);
 }
 _free($25);
 ___resumeException($21|0);
 // unreachable;
}
function __ZN67__LT_std__rand__reader__ReaderRng_LT_R_GT__u20_as_u20_rand__Rng_GT_10fill_bytes17h3dda534b777619b1E($$0$0$0$0$0$val,$0) {
 $$0$0$0$0$0$val = $$0$0$0$0$0$val|0;
 $0 = $0|0;
 var $$fca$0$extract7579 = 0, $$fca$1$extract7677 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $_25 = 0, $_30 = 0, $_6$sroa$0$0$$sroa_idx$i = 0, $cond$i$i = 0, $e = 0, $e$sroa_raw_idx = 0, $v$sroa$0$084 = 0;
 var $v$sroa$6$085 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $e = sp + 32|0;
 $_25 = sp + 8|0;
 $_30 = sp;
 $v$sroa$0$084 = $0;$v$sroa$6$085 = 8;
 L1: while(1) {
  $1 = (_read($$0$0$0$0$0$val,$v$sroa$0$084,$v$sroa$6$085)|0);
  switch ($1|0) {
  case -1:  {
   label = 9;
   break L1;
   break;
  }
  case 0:  {
   label = 6;
   break L1;
   break;
  }
  default: {
  }
  }
  $5 = ($v$sroa$6$085>>>0)<($1>>>0);
  if ($5) {
   label = 8;
   break;
  }
  $18 = (($v$sroa$0$084) + ($1)|0);
  $19 = (($v$sroa$6$085) - ($1))|0;
  $20 = ($19|0)==(0);
  if ($20) {
   label = 2;
   break;
  } else {
   $v$sroa$0$084 = $18;$v$sroa$6$085 = $19;
  }
 }
 if ((label|0) == 2) {
  STACKTOP = sp;return;
 }
 else if ((label|0) == 6) {
  __THREW__ = 0;
  invoke_viii(321,(18333|0),33,(5860|0));
  $4 = __THREW__; __THREW__ = 0;
 }
 else if ((label|0) == 8) {
  __THREW__ = 0;
  invoke_vi(220,(6536|0));
  $6 = __THREW__; __THREW__ = 0;
 }
 else if ((label|0) == 9) {
  $7 = (___errno_location()|0);
  $8 = HEAP32[$7>>2]|0;
  HEAP32[$e>>2] = 0;
  $e$sroa_raw_idx = ((($e)) + 4|0);
  HEAP32[$e$sroa_raw_idx>>2] = $8;
  $9 = $e;
  HEAP32[$_30>>2] = $9;
  $10 = ((($_30)) + 4|0);
  HEAP32[$10>>2] = (348);
  HEAP32[$_25>>2] = 5884;
  $11 = ((($_25)) + 4|0);
  HEAP32[$11>>2] = 1;
  $_6$sroa$0$0$$sroa_idx$i = ((($_25)) + 8|0);
  HEAP32[$_6$sroa$0$0$$sroa_idx$i>>2] = 0;
  $12 = ((($_25)) + 16|0);
  HEAP32[$12>>2] = $_30;
  $13 = ((($_25)) + 20|0);
  HEAP32[$13>>2] = 1;
  __THREW__ = 0;
  invoke_vii(259,($_25|0),(5872|0));
  $14 = __THREW__; __THREW__ = 0;
  $15 = ___cxa_find_matching_catch_2()|0;
  $16 = tempRet0;
  $17 = HEAP32[$e>>2]|0;
  $cond$i$i = ($17|0)==(1);
  if (!($cond$i$i)) {
   $$fca$0$extract7579 = $15;$$fca$1$extract7677 = $16;
   ___resumeException($$fca$0$extract7579|0);
   // unreachable;
  }
  $21 = ((($e)) + 4|0);
  $22 = HEAP32[$21>>2]|0;
  $23 = ((($22)) + 4|0);
  $24 = HEAP32[$23>>2]|0;
  $25 = ((($22)) + 8|0);
  $26 = HEAP32[$25>>2]|0;
  $27 = HEAP32[$26>>2]|0;
  FUNCTION_TABLE_vi[$27 & 511]($24);
  $28 = HEAP32[$25>>2]|0;
  $29 = ((($28)) + 4|0);
  $30 = HEAP32[$29>>2]|0;
  $31 = ($30|0)==(0);
  if (!($31)) {
   _free($24);
  }
  _free($22);
  $$fca$0$extract7579 = $15;$$fca$1$extract7677 = $16;
  ___resumeException($$fca$0$extract7579|0);
  // unreachable;
 }
 $2 = ___cxa_find_matching_catch_2()|0;
 $3 = tempRet0;
 $$fca$0$extract7579 = $2;$$fca$1$extract7677 = $3;
 ___resumeException($$fca$0$extract7579|0);
 // unreachable;
}
function __ZN3std9panicking11begin_panic17h9936a195de5ffc4dE_1326($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = (_malloc(8)|0);
 $4 = ($3|0)==(0|0);
 if ($4) {
  __ZN5alloc3oom3oom17hb253cf665793f59eE();
  // unreachable;
 } else {
  HEAP32[$3>>2] = $0;
  $5 = ((($3)) + 4|0);
  HEAP32[$5>>2] = $1;
  __ZN3std9panicking20rust_panic_with_hook17hff46710531bc908bE($3,1752,$2);
  // unreachable;
 }
}
function __ZN60__LT_std__io__error__Error_u20_as_u20_core__fmt__Display_GT_3fmt17hde27e5d3bf68e7f3E($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$pre$phiZ2D = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $_0$sroa$0$0 = 0, $_11$sroa$4$0$$sroa_idx3 = 0, $_11$sroa$5$0$$sroa_idx5 = 0, $_11$sroa$68$0$$sroa_idx10 = 0, $_11$sroa$7$0$$sroa_idx12 = 0, $_16 = 0, $_7$i = 0;
 var $code = 0, $detail = 0, $not$$i$i$i$i$i = 0, $not$$i$i$i$i$i14 = 0, $switch = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $_7$i = sp + 32|0;
 $code = sp + 56|0;
 $detail = sp + 16|0;
 $_16 = sp;
 $2 = HEAP32[$0>>2]|0;
 $switch = ($2|0)==(1);
 if ($switch) {
  $17 = ((($0)) + 4|0);
  $18 = HEAP32[$17>>2]|0;
  $19 = ((($18)) + 4|0);
  $20 = HEAP32[$19>>2]|0;
  $21 = ((($18)) + 8|0);
  $22 = HEAP32[$21>>2]|0;
  $23 = ((($22)) + 24|0);
  $24 = HEAP32[$23>>2]|0;
  $25 = (FUNCTION_TABLE_iii[$24 & 511]($20,$1)|0);
  $$pre$phiZ2D = $code;$_0$sroa$0$0 = $25;
  STACKTOP = sp;return ($_0$sroa$0$0|0);
 }
 $3 = ((($0)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 HEAP32[$code>>2] = $4;
 __ZN3std3sys2os12error_string17hd686cdf02956f722E($detail,$4);
 $5 = $detail;
 $6 = $code;
 HEAP32[$_16>>2] = $5;
 $7 = ((($_16)) + 4|0);
 HEAP32[$7>>2] = (349);
 $8 = ((($_16)) + 8|0);
 HEAP32[$8>>2] = $6;
 $9 = ((($_16)) + 12|0);
 HEAP32[$9>>2] = (350);
 $10 = ((($1)) + 28|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = ((($1)) + 32|0);
 $13 = HEAP32[$12>>2]|0;
 HEAP32[$_7$i>>2] = 6240;
 $_11$sroa$4$0$$sroa_idx3 = ((($_7$i)) + 4|0);
 HEAP32[$_11$sroa$4$0$$sroa_idx3>>2] = 3;
 $_11$sroa$5$0$$sroa_idx5 = ((($_7$i)) + 8|0);
 HEAP32[$_11$sroa$5$0$$sroa_idx5>>2] = 0;
 $_11$sroa$68$0$$sroa_idx10 = ((($_7$i)) + 16|0);
 HEAP32[$_11$sroa$68$0$$sroa_idx10>>2] = $_16;
 $_11$sroa$7$0$$sroa_idx12 = ((($_7$i)) + 20|0);
 HEAP32[$_11$sroa$7$0$$sroa_idx12>>2] = 2;
 __THREW__ = 0;
 $14 = (invoke_iiii(244,($11|0),($13|0),($_7$i|0))|0);
 $15 = __THREW__; __THREW__ = 0;
 $16 = $15&1;
 if ($16) {
  $26 = ___cxa_find_matching_catch_2()|0;
  $30 = tempRet0;
  $31 = ((($detail)) + 4|0);
  $32 = HEAP32[$31>>2]|0;
  $not$$i$i$i$i$i = ($32|0)==(0);
  if ($not$$i$i$i$i$i) {
   ___resumeException($26|0);
   // unreachable;
  }
  $33 = HEAP32[$detail>>2]|0;
  _free($33);
  ___resumeException($26|0);
  // unreachable;
 } else {
  $27 = ((($detail)) + 4|0);
  $28 = HEAP32[$27>>2]|0;
  $not$$i$i$i$i$i14 = ($28|0)==(0);
  if (!($not$$i$i$i$i$i14)) {
   $29 = HEAP32[$detail>>2]|0;
   _free($29);
  }
  $$pre$phiZ2D = $code;$_0$sroa$0$0 = $14;
  STACKTOP = sp;return ($_0$sroa$0$0|0);
 }
 return (0)|0;
}
function __ZN3std9panicking15begin_panic_fmt17had2218825161cb57E($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $_1$sroa$4$0$$sroa_idx3$i = 0, $_1$sroa$5$0$$sroa_idx5$i = 0, $_10$i = 0, $_11 = 0, $_8$i = 0, $not$$i$i$i$i$i = 0, $personalityslot$sroa$0$0 = 0, $personalityslot$sroa$5$0 = 0, $s = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $_8$i = sp + 56|0;
 $_10$i = sp + 32|0;
 $s = sp + 16|0;
 $_11 = sp;
 HEAP32[$s>>2] = 1;
 $_1$sroa$4$0$$sroa_idx3$i = ((($s)) + 4|0);
 HEAP32[$_1$sroa$4$0$$sroa_idx3$i>>2] = 0;
 $_1$sroa$5$0$$sroa_idx5$i = ((($s)) + 8|0);
 HEAP32[$_1$sroa$5$0$$sroa_idx5$i>>2] = 0;
 HEAP32[$_8$i>>2] = $s;
 ;HEAP32[$_10$i>>2]=HEAP32[$0>>2]|0;HEAP32[$_10$i+4>>2]=HEAP32[$0+4>>2]|0;HEAP32[$_10$i+8>>2]=HEAP32[$0+8>>2]|0;HEAP32[$_10$i+12>>2]=HEAP32[$0+12>>2]|0;HEAP32[$_10$i+16>>2]=HEAP32[$0+16>>2]|0;HEAP32[$_10$i+20>>2]=HEAP32[$0+20>>2]|0;
 __THREW__ = 0;
 (invoke_iiii(244,($_8$i|0),(1536|0),($_10$i|0))|0);
 $2 = __THREW__; __THREW__ = 0;
 $3 = $2&1;
 if (!($3)) {
  ;HEAP32[$_11>>2]=HEAP32[$s>>2]|0;HEAP32[$_11+4>>2]=HEAP32[$s+4>>2]|0;HEAP32[$_11+8>>2]=HEAP32[$s+8>>2]|0;
  __THREW__ = 0;
  invoke_vii(351,($_11|0),($1|0));
  $4 = __THREW__; __THREW__ = 0;
  $5 = ___cxa_find_matching_catch_2()|0;
  $6 = tempRet0;
  $personalityslot$sroa$0$0 = $5;$personalityslot$sroa$5$0 = $6;
  ___resumeException($personalityslot$sroa$0$0|0);
  // unreachable;
 }
 $7 = ___cxa_find_matching_catch_2()|0;
 $8 = tempRet0;
 $9 = HEAP32[$_1$sroa$4$0$$sroa_idx3$i>>2]|0;
 $not$$i$i$i$i$i = ($9|0)==(0);
 if ($not$$i$i$i$i$i) {
  $personalityslot$sroa$0$0 = $7;$personalityslot$sroa$5$0 = $8;
  ___resumeException($personalityslot$sroa$0$0|0);
  // unreachable;
 }
 $10 = HEAP32[$s>>2]|0;
 _free($10);
 $personalityslot$sroa$0$0 = $7;$personalityslot$sroa$5$0 = $8;
 ___resumeException($personalityslot$sroa$0$0|0);
 // unreachable;
}
function __ZN3std9panicking11begin_panic17hbc936d221268e19aE_1331($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $x$sroa$0$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $x$sroa$0$i = sp;
 ;HEAP32[$x$sroa$0$i>>2]=HEAP32[$0>>2]|0;HEAP32[$x$sroa$0$i+4>>2]=HEAP32[$0+4>>2]|0;HEAP32[$x$sroa$0$i+8>>2]=HEAP32[$0+8>>2]|0;
 $2 = (_malloc(12)|0);
 $3 = ($2|0)==(0|0);
 if ($3) {
  __ZN5alloc3oom3oom17hb253cf665793f59eE();
  // unreachable;
 } else {
  ;HEAP32[$2>>2]=HEAP32[$x$sroa$0$i>>2]|0;HEAP32[$2+4>>2]=HEAP32[$x$sroa$0$i+4>>2]|0;HEAP32[$2+8>>2]=HEAP32[$x$sroa$0$i+8>>2]|0;
  __ZN3std9panicking20rust_panic_with_hook17hff46710531bc908bE($2,1560,$1);
  // unreachable;
 }
}
function __ZN3std9panicking20rust_panic_with_hook17hff46710531bc908bE($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$fca$0$extract15243272$i = 0, $$fca$1$extract17244273$i = 0, $$fca$1$gep$i = 0, $$in$i = 0, $$off0 = 0, $$off32 = 0, $$phi$trans$insert43 = 0, $$pre = 0, $$pre$i = 0, $$pre$i$i$i = 0, $$pre$phi48Z2D = 0, $$pre$phiZ2D = 0, $$pre22 = 0, $$pre350$i = 0, $$pre352$i = 0, $$pre47 = 0, $$sink$in$phi$trans$insert = 0, $$sink$in$phi$trans$insert$i = 0, $$sink$index = 0, $$sink$index2 = 0;
 var $$sroa_idx$i = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0;
 var $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0;
 var $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0;
 var $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0;
 var $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0;
 var $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0;
 var $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0;
 var $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0;
 var $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0;
 var $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0;
 var $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0;
 var $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0;
 var $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0;
 var $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0;
 var $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $_0$0$i71$i = 0, $_0$sroa$0$0$i$i = 0, $_0$sroa$3$0$i$i = 0, $_12$sroa$3$0$$sroa_idx5$i = 0, $_12$sroa$4$0$$sroa_idx6$i = 0, $_12$sroa$58$0$$sroa_idx9$i = 0, $_12$sroa$6$0$$sroa_idx10$i = 0, $_13 = 0, $_13$i$i$i = 0, $_13$i$sroa_raw_idx$i$i = 0, $_13$i19$i$i = 0, $_13$sroa$4$0$$sroa_idx$i$i$i = 0, $_13$sroa$4$0$$sroa_idx$i$i131$i = 0;
 var $_15$0$i146$in354$i = 0, $_17$i = 0, $_17$sroa$0$0$i = 0, $_17$sroa$5$0$i = 0, $_30$sroa$0$0$i = 0, $_30$sroa$6$0$i = 0, $_4$i$i = 0, $_45 = 0, $_45$i = 0, $_6$i$i$i = 0, $_6$sroa$0$0$$sroa_idx$i = 0, $_6$sroa$0$0$$sroa_idx$i$i$i = 0, $_6$sroa$0$0$$sroa_idx$i$i$i$i = 0, $_6$sroa$0$0$$sroa_idx$i12 = 0, $_69$1268$i = 0, $_69$1269$i = 0, $_69$2$off0232$i = 0, $_8$i$i$i = 0, $_9$i$i18 = 0, $args$i$i = 0;
 var $brmerge$i = 0, $code$i = 0, $cond$i$i$i$i$i147$i = 0, $cond$i$i$i23$i$i = 0, $e$i$i$i = 0, $eh$lpad$body20$index11Z2D = 0, $eh$lpad$body20$indexZ2D = 0, $err$i = 0, $file$i = 0, $key$i$i = 0, $lhsc$i$i$i = 0, $line$i = 0, $local_len$sroa$5$0$lcssa$i$i$i$i$i$i = 0, $log_backtrace$i = 0, $msg$i = 0, $name$i = 0, $not$ = 0, $not$$i$i$i$i$i$i23$i$i = 0, $or$cond$i = 0, $personalityslot$sroa$0$0$i = 0;
 var $personalityslot$sroa$0$1171$i$i$i = 0, $personalityslot$sroa$0$3234$i = 0, $personalityslot$sroa$7$1170$i$i$i = 0, $personalityslot$sroa$9$0$i = 0, $personalityslot$sroa$9$3233$i = 0, $phitmp = 0, $phitmp$i = 0, $phitmp$i$i = 0, $ptr$0$i$i$i$i$i$i$i = 0, $ptr$0$i$i$i$i$i$i$i50 = 0, $ret$sroa$0$0$i$i$i = 0, $ret$sroa$6$0$i$i$i = 0, $ret$sroa$7$0$i$i$i = 0, $self$sroa$0$0$copyload$i$i$i$i = 0, $self$sroa$11$0$$sroa_idx42$i$i$i$i = 0, $self$sroa$11$0$copyload$i$i$i$i = 0, $self$sroa$16$0$$sroa_idx49$i$i$i$i = 0, $self$sroa$16$0$copyload$i$i$i$i = 0, $self$sroa$5$0$$sroa_idx36$i$i$i$i = 0, $self$sroa$5$0$copyload$i$i$i$i = 0;
 var $src$i$sroa$5$0$$sroa_idx24$i$i$i = 0, $src$i$sroa$5$0$$sroa_idx24$i$i126$i = 0, $storemerge$i = 0, $switch$i$i = 0, $switch$i$i3 = 0, $switch$i107$i = 0, $switch$i121$i = 0, $switch$i177$i = 0, $switch1tmp$i$i = 0, $switch2tmp$i$i$i = 0, $switch2tmp$i$i$i4 = 0, $switch2tmp$i$i116$i = 0, $switch2tmp$i$i172$i = 0, $switch3$i$i$i$i = 0, $switch4tmp$i$i = 0, $switch7tmp$i = 0, $switch8tmp$i = 0, $switch9tmp$i = 0, $switchtmp$i = 0, $switchtmp$i$i = 0;
 var $switchtmp$i$i$i = 0, $switchtmp$i$i$i$i$i$i = 0, $switchtmp$i22$i$i$i = 0, $switchtmp$i264$i = 0, $thread$i = 0, $val$0$i$ph$i = 0, $write$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(304|0);
 $args$i$i = sp + 256|0;
 $_4$i$i = sp + 232|0;
 $_9$i$i18 = sp + 224|0;
 $code$i = sp + 284|0;
 $_17$i = sp + 216|0;
 $e$i$i$i = sp + 208|0;
 $_8$i$i$i = sp + 184|0;
 $_13$i19$i$i = sp + 168|0;
 $_6$i$i$i = sp + 144|0;
 $_13$i$i$i = sp + 136|0;
 $key$i$i = sp + 128|0;
 $log_backtrace$i = sp + 288|0;
 $file$i = sp + 120|0;
 $line$i = sp + 280|0;
 $msg$i = sp + 112|0;
 $err$i = sp + 104|0;
 $thread$i = sp + 96|0;
 $name$i = sp + 88|0;
 $write$i = sp + 64|0;
 $_45$i = sp + 48|0;
 $_13 = sp + 24|0;
 $_45 = sp;
 $3 = $0;
 $4 = $1;
 $5 = HEAP32[$2>>2]|0;
 $6 = ((($2)) + 4|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ((($2)) + 8|0);
 $9 = HEAP32[$8>>2]|0;
 __THREW__ = 0;
 $10 = (invoke_i(325)|0);
 $11 = __THREW__; __THREW__ = 0;
 $12 = $11&1;
 L1: do {
  if ($12) {
   label = 6;
  } else {
   $switch2tmp$i$i$i = ($10|0)==(0|0);
   if ($switch2tmp$i$i$i) {
    __THREW__ = 0;
    invoke_vii(219,(18366|0),57);
    $13 = __THREW__; __THREW__ = 0;
    label = 6;
    break;
   }
   $14 = HEAP32[$10>>2]|0;
   $switch$i$i = ($14|0)==(1);
   if ($switch$i$i) {
    $$sink$in$phi$trans$insert = ((($10)) + 4|0);
    $$pre = HEAP32[$$sink$in$phi$trans$insert>>2]|0;
    $phitmp = (($$pre) + 1)|0;
    HEAP32[$$sink$in$phi$trans$insert>>2] = $phitmp;
    $21 = ($phitmp>>>0)>(2);
    if ($21) {
     HEAP32[$_13>>2] = 5892;
     $27 = ((($_13)) + 4|0);
     HEAP32[$27>>2] = 1;
     $_6$sroa$0$0$$sroa_idx$i12 = ((($_13)) + 8|0);
     HEAP32[$_6$sroa$0$0$$sroa_idx$i12>>2] = 0;
     $28 = ((($_13)) + 16|0);
     HEAP32[$28>>2] = 26744;
     $29 = ((($_13)) + 20|0);
     HEAP32[$29>>2] = 0;
     __THREW__ = 0;
     invoke_vi(352,($_13|0));
     $30 = __THREW__; __THREW__ = 0;
     $31 = $30&1;
     if (!($31)) {
      _llvm_trap();
      // unreachable;
     }
    } else {
     $268 = $phitmp;
     label = 9;
    }
   } else {
    $15 = $10;
    $16 = $15;
    HEAP32[$16>>2] = 1;
    $17 = (($15) + 4)|0;
    $18 = $17;
    HEAP32[$18>>2] = 0;
    $$pre22 = ((($10)) + 4|0);
    HEAP32[$$pre22>>2] = 1;
    $268 = 1;
    label = 9;
   }
   L11: do {
    if ((label|0) == 9) {
     $22 = (_pthread_rwlock_rdlock(((26488)|0))|0);
     switch ($22|0) {
     case 11:  {
      __THREW__ = 0;
      invoke_viii(321,(18423|0),36,(5836|0));
      $23 = __THREW__; __THREW__ = 0;
      break L11;
      break;
     }
     case 35:  {
      break;
     }
     default: {
      label = 11;
     }
     }
     do {
      if ((label|0) == 11) {
       $24 = HEAP8[(26520)>>0]|0;
       $not$ = ($24<<24>>24)==(0);
       if (!($not$)) {
        $25 = ($22|0)==(0);
        if (!($25)) {
         break;
        }
        (_pthread_rwlock_unlock(((26488)|0))|0);
        break;
       }
       $32 = HEAP32[(26524)>>2]|0;HEAP32[(26524)>>2] = (($32+1)|0);
       __THREW__ = 0;
       $33 = (invoke_i(325)|0);
       $34 = __THREW__; __THREW__ = 0;
       $35 = $34&1;
       if ($35) {
        break L11;
       }
       $switch2tmp$i$i172$i = ($33|0)==(0|0);
       if ($switch2tmp$i$i172$i) {
        __THREW__ = 0;
        invoke_vii(219,(18366|0),57);
        $36 = __THREW__; __THREW__ = 0;
        break L11;
       }
       $37 = HEAP32[$33>>2]|0;
       $switch$i177$i = ($37|0)==(1);
       if ($switch$i177$i) {
        $$sink$in$phi$trans$insert$i = ((($33)) + 4|0);
        $$pre$i = HEAP32[$$sink$in$phi$trans$insert$i>>2]|0;
        $42 = ($$pre$i>>>0)>(1);
        if ($42) {
         $storemerge$i = 1;
        } else {
         label = 23;
        }
       } else {
        $38 = $33;
        $39 = $38;
        HEAP32[$39>>2] = 1;
        $40 = (($38) + 4)|0;
        $41 = $40;
        HEAP32[$41>>2] = 0;
        label = 23;
       }
       L28: do {
        if ((label|0) == 23) {
         $43 = HEAP32[6686]|0;
         L30: do {
          switch ($43|0) {
          case 1:  {
           $storemerge$i = 0;
           break L28;
           break;
          }
          case 2:  {
           break;
          }
          default: {
           HEAP32[$key$i$i>>2] = 18597;
           $44 = ((($key$i$i)) + 4|0);
           HEAP32[$44>>2] = 14;
           __THREW__ = 0;
           invoke_viii(342,($_6$i$i$i|0),(18597|0),14);
           $45 = __THREW__; __THREW__ = 0;
           $46 = $45&1;
           L32: do {
            if ($46) {
             $68 = ___cxa_find_matching_catch_2()|0;
             $69 = tempRet0;
             $personalityslot$sroa$0$1171$i$i$i = $68;$personalityslot$sroa$7$1170$i$i$i = $69;
            } else {
             $self$sroa$0$0$copyload$i$i$i$i = HEAP32[$_6$i$i$i>>2]|0;
             $self$sroa$5$0$$sroa_idx36$i$i$i$i = ((($_6$i$i$i)) + 4|0);
             $self$sroa$5$0$copyload$i$i$i$i = HEAP32[$self$sroa$5$0$$sroa_idx36$i$i$i$i>>2]|0;
             $self$sroa$11$0$$sroa_idx42$i$i$i$i = ((($_6$i$i$i)) + 8|0);
             $self$sroa$11$0$copyload$i$i$i$i = HEAP32[$self$sroa$11$0$$sroa_idx42$i$i$i$i>>2]|0;
             $switch3$i$i$i$i = ($self$sroa$0$0$copyload$i$i$i$i|0)==(1);
             if ($switch3$i$i$i$i) {
              $self$sroa$16$0$$sroa_idx49$i$i$i$i = ((($_6$i$i$i)) + 12|0);
              $self$sroa$16$0$copyload$i$i$i$i = HEAP32[$self$sroa$16$0$$sroa_idx49$i$i$i$i>>2]|0;
              $47 = $self$sroa$11$0$copyload$i$i$i$i;
              __THREW__ = 0;
              invoke_viii(343,($_13$i$i$i|0),($47|0),($self$sroa$16$0$copyload$i$i$i$i|0));
              $48 = __THREW__; __THREW__ = 0;
              $49 = $48&1;
              if ($49) {
               $70 = ___cxa_find_matching_catch_2()|0;
               $71 = tempRet0;
               $personalityslot$sroa$0$1171$i$i$i = $70;$personalityslot$sroa$7$1170$i$i$i = $71;
               break;
              }
              $72 = HEAP32[$_13$i$i$i>>2]|0;
              $_13$i$sroa_raw_idx$i$i = ((($_13$i$i$i)) + 4|0);
              $73 = HEAP32[$_13$i$sroa_raw_idx$i$i>>2]|0;
              $74 = $e$i$i$i;
              $75 = $74;
              HEAP32[$75>>2] = $72;
              $76 = (($74) + 4)|0;
              $77 = $76;
              HEAP32[$77>>2] = $73;
              $78 = $key$i$i;
              $79 = $e$i$i$i;
              HEAP32[$_13$i19$i$i>>2] = $78;
              $80 = ((($_13$i19$i$i)) + 4|0);
              HEAP32[$80>>2] = (353);
              $81 = ((($_13$i19$i$i)) + 8|0);
              HEAP32[$81>>2] = $79;
              $82 = ((($_13$i19$i$i)) + 12|0);
              HEAP32[$82>>2] = (348);
              HEAP32[$_8$i$i$i>>2] = 6204;
              $83 = ((($_8$i$i$i)) + 4|0);
              HEAP32[$83>>2] = 2;
              $_6$sroa$0$0$$sroa_idx$i$i$i$i = ((($_8$i$i$i)) + 8|0);
              HEAP32[$_6$sroa$0$0$$sroa_idx$i$i$i$i>>2] = 0;
              $84 = ((($_8$i$i$i)) + 16|0);
              HEAP32[$84>>2] = $_13$i19$i$i;
              $85 = ((($_8$i$i$i)) + 20|0);
              HEAP32[$85>>2] = 2;
              __THREW__ = 0;
              invoke_vii(259,($_8$i$i$i|0),(6220|0));
              $86 = __THREW__; __THREW__ = 0;
              $87 = ___cxa_find_matching_catch_2()|0;
              $88 = tempRet0;
              $89 = HEAP32[$e$i$i$i>>2]|0;
              $cond$i$i$i23$i$i = ($89|0)==(1);
              if (!($cond$i$i$i23$i$i)) {
               $eh$lpad$body20$index11Z2D = $88;$eh$lpad$body20$indexZ2D = $87;
               break L1;
              }
              $90 = ((($e$i$i$i)) + 4|0);
              $91 = HEAP32[$90>>2]|0;
              $92 = ((($91)) + 4|0);
              $93 = HEAP32[$92>>2]|0;
              $94 = ((($91)) + 8|0);
              $95 = HEAP32[$94>>2]|0;
              $96 = HEAP32[$95>>2]|0;
              __THREW__ = 0;
              invoke_vi($96|0,($93|0));
              $97 = __THREW__; __THREW__ = 0;
              $98 = $97&1;
              if ($98) {
               break L11;
              }
              $99 = HEAP32[$94>>2]|0;
              $100 = ((($99)) + 4|0);
              $101 = HEAP32[$100>>2]|0;
              $102 = ($101|0)==(0);
              if (!($102)) {
               _free($93);
              }
              _free($91);
              $eh$lpad$body20$index11Z2D = $88;$eh$lpad$body20$indexZ2D = $87;
              break L1;
             }
             (_pthread_mutex_lock(((26656)|0))|0);
             $50 = $self$sroa$5$0$copyload$i$i$i$i;
             $51 = (_getenv(($50|0))|0);
             $52 = ($51|0)==(0|0);
             L46: do {
              if ($52) {
               $ret$sroa$0$0$i$i$i = 0;$ret$sroa$6$0$i$i$i = 0;$ret$sroa$7$0$i$i$i = 0;
              } else {
               $53 = (_strlen($51)|0);
               $54 = ($53|0)==(-1);
               L48: do {
                if ($54) {
                 __THREW__ = 0;
                 invoke_vii(263,-1,0);
                 $55 = __THREW__; __THREW__ = 0;
                } else {
                 $56 = ($53|0)<(0);
                 if ($56) {
                  __THREW__ = 0;
                  invoke_vi(220,(6432|0));
                  $57 = __THREW__; __THREW__ = 0;
                  break;
                 }
                 $58 = ($53|0)==(0);
                 do {
                  if ($58) {
                   $local_len$sroa$5$0$lcssa$i$i$i$i$i$i = 0;$ptr$0$i$i$i$i$i$i$i50 = (1);
                  } else {
                   $59 = (_malloc($53)|0);
                   $60 = ($59|0)==(0|0);
                   if ($60) {
                    __THREW__ = 0;
                    invoke_v(210);
                    $61 = __THREW__; __THREW__ = 0;
                    break L48;
                   } else {
                    $ptr$0$i$i$i$i$i$i$i = $59;
                    _memcpy(($ptr$0$i$i$i$i$i$i$i|0),($51|0),($53|0))|0;
                    $local_len$sroa$5$0$lcssa$i$i$i$i$i$i = $53;$ptr$0$i$i$i$i$i$i$i50 = $ptr$0$i$i$i$i$i$i$i;
                    break;
                   }
                  }
                 } while(0);
                 $phitmp$i$i = $ptr$0$i$i$i$i$i$i$i50;
                 $ret$sroa$0$0$i$i$i = $phitmp$i$i;$ret$sroa$6$0$i$i$i = $53;$ret$sroa$7$0$i$i$i = $local_len$sroa$5$0$lcssa$i$i$i$i$i$i;
                 break L46;
                }
               } while(0);
               $64 = ___cxa_find_matching_catch_2()|0;
               $65 = tempRet0;
               $66 = $self$sroa$5$0$copyload$i$i$i$i;
               HEAP8[$66>>0] = 0;
               $67 = ($self$sroa$11$0$copyload$i$i$i$i|0)==(0);
               if ($67) {
                $personalityslot$sroa$0$1171$i$i$i = $64;$personalityslot$sroa$7$1170$i$i$i = $65;
                break L32;
               }
               _free($66);
               $personalityslot$sroa$0$1171$i$i$i = $64;$personalityslot$sroa$7$1170$i$i$i = $65;
               break L32;
              }
             } while(0);
             (_pthread_mutex_unlock(((26656)|0))|0);
             $62 = $self$sroa$5$0$copyload$i$i$i$i;
             HEAP8[$62>>0] = 0;
             $63 = ($self$sroa$11$0$copyload$i$i$i$i|0)==(0);
             if (!($63)) {
              _free($62);
             }
             $103 = $ret$sroa$0$0$i$i$i;
             $switch4tmp$i$i = ($ret$sroa$0$0$i$i$i|0)==(0);
             if ($switch4tmp$i$i) {
              HEAP32[6686] = 1;
              $storemerge$i = 0;
              break L28;
             }
             $104 = ($ret$sroa$7$0$i$i$i|0)==(1);
             do {
              if ($104) {
               $105 = ($103|0)==(24524|0);
               if (!($105)) {
                $lhsc$i$i$i = HEAP8[$103>>0]|0;
                $106 = ($lhsc$i$i$i<<24>>24)==(48);
                if (!($106)) {
                 $val$0$i$ph$i = 2;
                 break;
                }
               }
               $val$0$i$ph$i = 1;
              } else {
               $val$0$i$ph$i = 2;
              }
             } while(0);
             $not$$i$i$i$i$i$i23$i$i = ($ret$sroa$6$0$i$i$i|0)==(0);
             if (!($not$$i$i$i$i$i$i23$i$i)) {
              _free($103);
             }
             HEAP32[6686] = $val$0$i$ph$i;
             $107 = ($val$0$i$ph$i|0)==(2);
             if ($107) {
              break L30;
             } else {
              $storemerge$i = 0;
              break L28;
             }
            }
           } while(0);
           $eh$lpad$body20$index11Z2D = $personalityslot$sroa$7$1170$i$i$i;$eh$lpad$body20$indexZ2D = $personalityslot$sroa$0$1171$i$i$i;
           break L1;
          }
          }
         } while(0);
         $storemerge$i = 1;
        }
       } while(0);
       HEAP8[$log_backtrace$i>>0] = $storemerge$i;
       HEAP32[$file$i>>2] = $5;
       $108 = ((($file$i)) + 4|0);
       HEAP32[$108>>2] = $7;
       HEAP32[$line$i>>2] = $9;
       $109 = ((($1)) + 12|0);
       $110 = HEAP32[$109>>2]|0;
       __THREW__ = 0;
       $111 = (invoke_ii($110|0,($0|0))|0);
       $112 = tempRet0;
       $113 = __THREW__; __THREW__ = 0;
       $114 = $113&1;
       if ($114) {
        break L11;
       }
       $115 = ($111|0)==(1133457186);
       $116 = ($112|0)==(703347955);
       $117 = $115 & $116;
       if ($117) {
        $126 = HEAP32[$0>>2]|0;
        $127 = ((($0)) + 4|0);
        $128 = HEAP32[$127>>2]|0;
        HEAP32[$msg$i>>2] = $126;
        $129 = ((($msg$i)) + 4|0);
        HEAP32[$129>>2] = $128;
       } else {
        $118 = HEAP32[$109>>2]|0;
        __THREW__ = 0;
        $119 = (invoke_ii($118|0,($0|0))|0);
        $120 = tempRet0;
        $121 = __THREW__; __THREW__ = 0;
        $122 = $121&1;
        if ($122) {
         break L11;
        }
        $123 = ($119|0)==(-580754197);
        $124 = ($120|0)==(-642518804);
        $125 = $123 & $124;
        if ($125) {
         $130 = HEAP32[$0>>2]|0;
         $131 = ((($0)) + 8|0);
         $132 = HEAP32[$131>>2]|0;
         $_17$sroa$0$0$i = $130;$_17$sroa$5$0$i = $132;
        } else {
         $_17$sroa$0$0$i = 18611;$_17$sroa$5$0$i = 8;
        }
        HEAP32[$msg$i>>2] = $_17$sroa$0$0$i;
        $133 = ((($msg$i)) + 4|0);
        HEAP32[$133>>2] = $_17$sroa$5$0$i;
       }
       HEAP8[$err$i>>0] = 1;
       __THREW__ = 0;
       $134 = (invoke_i(319)|0);
       $135 = __THREW__; __THREW__ = 0;
       $136 = $135&1;
       L90: do {
        if ($136) {
         label = 127;
        } else {
         $switchtmp$i$i$i = ($134|0)==(0|0);
         if ($switchtmp$i$i$i) {
          HEAP32[$thread$i>>2] = 0;
          $182 = 0;$288 = $name$i;$_30$sroa$0$0$i = 0;$_30$sroa$6$0$i = 0;$switchtmp$i264$i = 1;
          label = 75;
         } else {
          __THREW__ = 0;
          $137 = (invoke_i(328)|0);
          $138 = __THREW__; __THREW__ = 0;
          $139 = $138&1;
          if ($139) {
           label = 127;
           break;
          }
          HEAP32[$thread$i>>2] = $137;
          $switchtmp$i$i = ($137|0)==(0);
          $140 = $137;
          if ($switchtmp$i$i) {
           $182 = $140;$288 = $name$i;$_30$sroa$0$0$i = 0;$_30$sroa$6$0$i = 0;$switchtmp$i264$i = 1;
           label = 75;
          } else {
           $141 = ((($140)) + 8|0);
           $142 = HEAP32[$141>>2]|0;
           $switchtmp$i$i$i$i$i$i = ($142|0)==(0|0);
           if ($switchtmp$i$i$i$i$i$i) {
            $182 = $140;$288 = $name$i;$_30$sroa$0$0$i = 0;$_30$sroa$6$0$i = 0;$switchtmp$i264$i = 0;
            label = 75;
           } else {
            $143 = ((($140)) + 12|0);
            $144 = HEAP32[$143>>2]|0;
            $145 = (($144) + -1)|0;
            $146 = ($144|0)==(0);
            if ($146) {
             __THREW__ = 0;
             invoke_vii(263,($145|0),0);
             $147 = __THREW__; __THREW__ = 0;
             $148 = ___cxa_find_matching_catch_2()|0;
             $149 = tempRet0;
             $$fca$0$extract15243272$i = $148;$$fca$1$extract17244273$i = $149;$229 = $140;
            } else {
             $182 = $140;$288 = $name$i;$_30$sroa$0$0$i = $142;$_30$sroa$6$0$i = $145;$switchtmp$i264$i = 0;
             label = 75;
            }
           }
          }
         }
         L99: do {
          if ((label|0) == 75) {
           $switch1tmp$i$i = ($_30$sroa$0$0$i|0)==(0|0);
           $_0$sroa$0$0$i$i = $switch1tmp$i$i ? 18619 : $_30$sroa$0$0$i;
           $_0$sroa$3$0$i$i = $switch1tmp$i$i ? 9 : $_30$sroa$6$0$i;
           HEAP32[$name$i>>2] = $_0$sroa$0$0$i$i;
           $$fca$1$gep$i = ((($name$i)) + 4|0);
           HEAP32[$$fca$1$gep$i>>2] = $_0$sroa$3$0$i$i;
           HEAP32[$write$i>>2] = $name$i;
           $150 = ((($write$i)) + 4|0);
           HEAP32[$150>>2] = $msg$i;
           $151 = ((($write$i)) + 8|0);
           HEAP32[$151>>2] = $file$i;
           $152 = ((($write$i)) + 12|0);
           HEAP32[$152>>2] = $line$i;
           $153 = ((($write$i)) + 16|0);
           HEAP32[$153>>2] = $log_backtrace$i;
           __THREW__ = 0;
           $154 = (invoke_i(354)|0);
           $155 = __THREW__; __THREW__ = 0;
           $156 = $155&1;
           do {
            if (!($156)) {
             $switch2tmp$i$i116$i = ($154|0)==(0|0);
             if ($switch2tmp$i$i116$i) {
              __THREW__ = 0;
              invoke_vii(219,(18366|0),57);
              $157 = __THREW__; __THREW__ = 0;
              break;
             }
             $158 = HEAP32[$154>>2]|0;
             $switch$i121$i = ($158|0)==(1);
             do {
              if ($switch$i121$i) {
               $163 = ((($154)) + 4|0);
               $$pre350$i = HEAP32[$163>>2]|0;
               $cond$i$i$i$i$i147$i = ($$pre350$i|0)==(0);
               if ($cond$i$i$i$i$i147$i) {
                $$phi$trans$insert43 = ((($154)) + 8|0);
                $164 = $$phi$trans$insert43;
                $165 = $164;
                $166 = HEAP32[$165>>2]|0;
                $167 = (($164) + 4)|0;
                $168 = $167;
                $169 = HEAP32[$168>>2]|0;
                $$off0 = $166;$$off32 = $169;$$pre$phiZ2D = $$phi$trans$insert43;$_15$0$i146$in354$i = $163;
                break;
               } else {
                __THREW__ = 0;
                invoke_v(322);
                $170 = __THREW__; __THREW__ = 0;
                $171 = ___cxa_find_matching_catch_2()|0;
                $172 = tempRet0;
                if ($switchtmp$i264$i) {
                 $personalityslot$sroa$0$0$i = $171;$personalityslot$sroa$9$0$i = $172;
                 break L90;
                } else {
                 $$fca$0$extract15243272$i = $171;$$fca$1$extract17244273$i = $172;$229 = $182;
                 break L99;
                }
               }
              } else {
               $src$i$sroa$5$0$$sroa_idx24$i$i126$i = ((($154)) + 8|0);
               HEAP32[$154>>2] = 1;
               $_13$sroa$4$0$$sroa_idx$i$i131$i = ((($154)) + 4|0);
               HEAP32[$_13$sroa$4$0$$sroa_idx$i$i131$i>>2] = 0;
               $159 = $src$i$sroa$5$0$$sroa_idx24$i$i126$i;
               $160 = $159;
               HEAP32[$160>>2] = 0;
               $161 = (($159) + 4)|0;
               $162 = $161;
               HEAP32[$162>>2] = 0;
               $$off0 = 0;$$off32 = 0;$$pre$phiZ2D = $src$i$sroa$5$0$$sroa_idx24$i$i126$i;$_15$0$i146$in354$i = $_13$sroa$4$0$$sroa_idx$i$i131$i;
              }
             } while(0);
             HEAP32[$$pre$phiZ2D>>2] = 0;
             HEAP32[$_15$0$i146$in354$i>>2] = 0;
             $175 = HEAP8[$err$i>>0]|0;
             $switch$i$i3 = ($175<<24>>24)==(1);
             $176 = ((($err$i)) + 1|0);
             $_0$0$i71$i = $switch$i$i3 ? $176 : 0;
             HEAP32[$_45$i>>2] = $$off0;
             $$sroa_idx$i = ((($_45$i)) + 4|0);
             HEAP32[$$sroa_idx$i>>2] = $$off32;
             $177 = ((($_45$i)) + 8|0);
             HEAP32[$177>>2] = $_0$0$i71$i;
             $178 = $$off0;
             $switchtmp$i = ($$off0|0)==(0);
             $179 = $$off32;
             L113: do {
              if ($switchtmp$i) {
               $switch8tmp$i = ($_0$0$i71$i|0)==(0|0);
               do {
                if (!($switch8tmp$i)) {
                 __THREW__ = 0;
                 invoke_viii(355,($write$i|0),($177|0),(1576|0));
                 $186 = __THREW__; __THREW__ = 0;
                 $187 = $186&1;
                 if (!($187)) {
                  break;
                 }
                 $247 = ___cxa_find_matching_catch_2()|0;
                 $248 = tempRet0;
                 $_69$2$off0232$i = 0;$personalityslot$sroa$0$3234$i = $247;$personalityslot$sroa$9$3233$i = $248;
                 label = 86;
                 break L113;
                }
               } while(0);
               if ($switchtmp$i264$i) {
                $_69$1269$i = 1;
               } else {
                $_69$1268$i = 1;
                label = 93;
               }
              } else {
               __THREW__ = 0;
               invoke_viii(355,($write$i|0),($178|0),($179|0));
               $184 = __THREW__; __THREW__ = 0;
               $185 = $184&1;
               if ($185) {
                $239 = ___cxa_find_matching_catch_2()|0;
                $240 = tempRet0;
                $241 = HEAP32[$179>>2]|0;
                __THREW__ = 0;
                invoke_vi($241|0,($178|0));
                $242 = __THREW__; __THREW__ = 0;
                $243 = $242&1;
                if ($243) {
                 break L11;
                }
                $244 = ((($179)) + 4|0);
                $245 = HEAP32[$244>>2]|0;
                $246 = ($245|0)==(0);
                if ($246) {
                 $_69$2$off0232$i = 1;$personalityslot$sroa$0$3234$i = $239;$personalityslot$sroa$9$3233$i = $240;
                 label = 86;
                 break;
                }
                _free($178);
                $_69$2$off0232$i = 1;$personalityslot$sroa$0$3234$i = $239;$personalityslot$sroa$9$3233$i = $240;
                label = 86;
                break;
               }
               __THREW__ = 0;
               $190 = (invoke_i(354)|0);
               $191 = __THREW__; __THREW__ = 0;
               $192 = $191&1;
               do {
                if ($192) {
                 $193 = ___cxa_find_matching_catch_2()|0;
                 $194 = tempRet0;
                 $$sink$index = $193;$$sink$index2 = $194;
                } else {
                 $switch2tmp$i$i$i4 = ($190|0)==(0|0);
                 if ($switch2tmp$i$i$i4) {
                  __THREW__ = 0;
                  invoke_vii(219,(18366|0),57);
                  $195 = __THREW__; __THREW__ = 0;
                  $196 = ___cxa_find_matching_catch_2()|0;
                  $197 = tempRet0;
                  $$sink$index = $196;$$sink$index2 = $197;
                  break;
                 }
                 $198 = HEAP32[$190>>2]|0;
                 $switch$i107$i = ($198|0)==(1);
                 do {
                  if ($switch$i107$i) {
                   $203 = ((($190)) + 4|0);
                   $$pre352$i = HEAP32[$203>>2]|0;
                   $phitmp$i = ($$pre352$i|0)==(0);
                   if ($phitmp$i) {
                    $$pre47 = ((($190)) + 8|0);
                    $$in$i = $203;$$pre$phi48Z2D = $$pre47;
                    break;
                   }
                   __THREW__ = 0;
                   invoke_v(322);
                   $204 = __THREW__; __THREW__ = 0;
                   $205 = ___cxa_find_matching_catch_2()|0;
                   $206 = tempRet0;
                   $207 = HEAP32[$179>>2]|0;
                   __THREW__ = 0;
                   invoke_vi($207|0,($178|0));
                   $208 = __THREW__; __THREW__ = 0;
                   $209 = $208&1;
                   if ($209) {
                    $224 = ___cxa_find_matching_catch_2()|0;
                    $225 = tempRet0;
                    $_69$2$off0232$i = 1;$personalityslot$sroa$0$3234$i = $224;$personalityslot$sroa$9$3233$i = $225;
                    label = 86;
                    break L113;
                   }
                   $219 = ((($179)) + 4|0);
                   $220 = HEAP32[$219>>2]|0;
                   $221 = ($220|0)==(0);
                   if ($221) {
                    $_69$2$off0232$i = 1;$personalityslot$sroa$0$3234$i = $205;$personalityslot$sroa$9$3233$i = $206;
                    label = 86;
                    break L113;
                   }
                   _free($178);
                   $_69$2$off0232$i = 1;$personalityslot$sroa$0$3234$i = $205;$personalityslot$sroa$9$3233$i = $206;
                   label = 86;
                   break L113;
                  } else {
                   $src$i$sroa$5$0$$sroa_idx24$i$i$i = ((($190)) + 8|0);
                   HEAP32[$190>>2] = 1;
                   $_13$sroa$4$0$$sroa_idx$i$i$i = ((($190)) + 4|0);
                   HEAP32[$_13$sroa$4$0$$sroa_idx$i$i$i>>2] = 0;
                   $199 = $src$i$sroa$5$0$$sroa_idx24$i$i$i;
                   $200 = $199;
                   HEAP32[$200>>2] = 0;
                   $201 = (($199) + 4)|0;
                   $202 = $201;
                   HEAP32[$202>>2] = 0;
                   $$in$i = $_13$sroa$4$0$$sroa_idx$i$i$i;$$pre$phi48Z2D = $src$i$sroa$5$0$$sroa_idx24$i$i$i;
                  }
                 } while(0);
                 HEAP32[$$in$i>>2] = -1;
                 $210 = HEAP32[$$pre$phi48Z2D>>2]|0;
                 $switchtmp$i22$i$i$i = ($210|0)==(0|0);
                 $$pre$i$i$i = ((($190)) + 12|0);
                 do {
                  if (!($switchtmp$i22$i$i$i)) {
                   $211 = HEAP32[$$pre$i$i$i>>2]|0;
                   $212 = HEAP32[$211>>2]|0;
                   __THREW__ = 0;
                   invoke_vi($212|0,($210|0));
                   $213 = __THREW__; __THREW__ = 0;
                   $214 = $213&1;
                   if ($214) {
                    $222 = ___cxa_find_matching_catch_2()|0;
                    $223 = tempRet0;
                    HEAP32[$$pre$phi48Z2D>>2] = $$off0;
                    HEAP32[$$pre$i$i$i>>2] = $$off32;
                    HEAP32[$$in$i>>2] = 0;
                    $_69$2$off0232$i = 1;$personalityslot$sroa$0$3234$i = $222;$personalityslot$sroa$9$3233$i = $223;
                    label = 86;
                    break L113;
                   }
                   $215 = HEAP32[$$pre$i$i$i>>2]|0;
                   $216 = ((($215)) + 4|0);
                   $217 = HEAP32[$216>>2]|0;
                   $218 = ($217|0)==(0);
                   if ($218) {
                    break;
                   }
                   _free($210);
                  }
                 } while(0);
                 HEAP32[$$pre$phi48Z2D>>2] = $$off0;
                 HEAP32[$$pre$i$i$i>>2] = $$off32;
                 HEAP32[$$in$i>>2] = 0;
                 if ($switchtmp$i264$i) {
                  $_69$1269$i = 0;
                  break L113;
                 } else {
                  $_69$1268$i = 0;
                  label = 93;
                  break L113;
                 }
                }
               } while(0);
               $261 = HEAP32[$179>>2]|0;
               __THREW__ = 0;
               invoke_vi($261|0,($178|0));
               $262 = __THREW__; __THREW__ = 0;
               $263 = $262&1;
               if ($263) {
                break L11;
               }
               $264 = ((($179)) + 4|0);
               $265 = HEAP32[$264>>2]|0;
               $266 = ($265|0)==(0);
               if ($266) {
                $_69$2$off0232$i = 1;$personalityslot$sroa$0$3234$i = $$sink$index;$personalityslot$sroa$9$3233$i = $$sink$index2;
                label = 86;
                break;
               }
               _free($178);
               $_69$2$off0232$i = 1;$personalityslot$sroa$0$3234$i = $$sink$index;$personalityslot$sroa$9$3233$i = $$sink$index2;
               label = 86;
              }
             } while(0);
             do {
              if ((label|0) == 86) {
               do {
                if (!($switchtmp$i264$i)) {
                 $181 = HEAP32[$182>>2]|0;HEAP32[$182>>2] = (($181-1)|0);
                 $183 = ($181|0)==(1);
                 if (!($183)) {
                  break;
                 }
                 /* fence */;
                 __ZN33__LT_alloc__arc__Arc_LT_T_GT__GT_9drop_slow17h7ac40ae25c424b1dE_1335($thread$i);
                }
               } while(0);
               $180 = HEAP32[$_45$i>>2]|0;
               $switch7tmp$i = ($180|0)==(0|0);
               $brmerge$i = $_69$2$off0232$i | $switch7tmp$i;
               if ($brmerge$i) {
                $personalityslot$sroa$0$0$i = $personalityslot$sroa$0$3234$i;$personalityslot$sroa$9$0$i = $personalityslot$sroa$9$3233$i;
                break L90;
               }
               $231 = HEAP32[$$sroa_idx$i>>2]|0;
               $232 = HEAP32[$231>>2]|0;
               __THREW__ = 0;
               invoke_vi($232|0,($180|0));
               $233 = __THREW__; __THREW__ = 0;
               $234 = $233&1;
               if ($234) {
                break L11;
               }
               $235 = HEAP32[$$sroa_idx$i>>2]|0;
               $236 = ((($235)) + 4|0);
               $237 = HEAP32[$236>>2]|0;
               $238 = ($237|0)==(0);
               if ($238) {
                $personalityslot$sroa$0$0$i = $personalityslot$sroa$0$3234$i;$personalityslot$sroa$9$0$i = $personalityslot$sroa$9$3233$i;
                break L90;
               }
               _free($180);
               $personalityslot$sroa$0$0$i = $personalityslot$sroa$0$3234$i;$personalityslot$sroa$9$0$i = $personalityslot$sroa$9$3233$i;
               break L90;
              }
              else if ((label|0) == 93) {
               $188 = HEAP32[$182>>2]|0;HEAP32[$182>>2] = (($188-1)|0);
               $189 = ($188|0)==(1);
               if (!($189)) {
                $_69$1269$i = $_69$1268$i;
                break;
               }
               /* fence */;
               __ZN33__LT_alloc__arc__Arc_LT_T_GT__GT_9drop_slow17h7ac40ae25c424b1dE_1335($thread$i);
               $_69$1269$i = $_69$1268$i;
              }
             } while(0);
             $226 = HEAP32[$_45$i>>2]|0;
             $switch9tmp$i = ($226|0)==(0|0);
             $227 = ($_69$1269$i<<24>>24)==(0);
             $or$cond$i = $227 | $switch9tmp$i;
             do {
              if (!($or$cond$i)) {
               $249 = HEAP32[$$sroa_idx$i>>2]|0;
               $250 = HEAP32[$249>>2]|0;
               __THREW__ = 0;
               invoke_vi($250|0,($226|0));
               $251 = __THREW__; __THREW__ = 0;
               $252 = $251&1;
               if ($252) {
                $257 = ___cxa_find_matching_catch_2()|0;
                $258 = tempRet0;
                $personalityslot$sroa$0$0$i = $257;$personalityslot$sroa$9$0$i = $258;
                break L90;
               }
               $253 = HEAP32[$$sroa_idx$i>>2]|0;
               $254 = ((($253)) + 4|0);
               $255 = HEAP32[$254>>2]|0;
               $256 = ($255|0)==(0);
               if ($256) {
                break;
               }
               _free($226);
              }
             } while(0);
             $267 = HEAP32[(26524)>>2]|0;HEAP32[(26524)>>2] = (($267-1)|0);
             (_pthread_rwlock_unlock(((26488)|0))|0);
             $269 = ($268>>>0)>(1);
             if (!($269)) {
              (___rust_start_panic($3,$4)|0);
              HEAP32[$code$i>>2] = 3;
              $270 = $code$i;
              HEAP32[$_17$i>>2] = $270;
              $271 = ((($_17$i)) + 4|0);
              HEAP32[$271>>2] = (356);
              HEAP32[$args$i$i>>2] = 5908;
              $_12$sroa$3$0$$sroa_idx5$i = ((($args$i$i)) + 4|0);
              HEAP32[$_12$sroa$3$0$$sroa_idx5$i>>2] = 1;
              $_12$sroa$4$0$$sroa_idx6$i = ((($args$i$i)) + 8|0);
              HEAP32[$_12$sroa$4$0$$sroa_idx6$i>>2] = 0;
              $_12$sroa$58$0$$sroa_idx9$i = ((($args$i$i)) + 16|0);
              HEAP32[$_12$sroa$58$0$$sroa_idx9$i>>2] = $_17$i;
              $_12$sroa$6$0$$sroa_idx10$i = ((($args$i$i)) + 20|0);
              HEAP32[$_12$sroa$6$0$$sroa_idx10$i>>2] = 1;
              $272 = $args$i$i;
              HEAP32[$_9$i$i18>>2] = $272;
              $273 = ((($_9$i$i18)) + 4|0);
              HEAP32[$273>>2] = (357);
              HEAP32[$_4$i$i>>2] = 5916;
              $274 = ((($_4$i$i)) + 4|0);
              HEAP32[$274>>2] = 2;
              $_6$sroa$0$0$$sroa_idx$i$i$i = ((($_4$i$i)) + 8|0);
              HEAP32[$_6$sroa$0$0$$sroa_idx$i$i$i>>2] = 0;
              $275 = ((($_4$i$i)) + 16|0);
              HEAP32[$275>>2] = $_9$i$i18;
              $276 = ((($_4$i$i)) + 20|0);
              HEAP32[$276>>2] = 1;
              __ZN3std10sys_common4util10dumb_print17h0ae9c5f64360bf93E($_4$i$i);
              _abort();
              // unreachable;
             }
             HEAP32[$_45>>2] = 5900;
             $277 = ((($_45)) + 4|0);
             HEAP32[$277>>2] = 1;
             $_6$sroa$0$0$$sroa_idx$i = ((($_45)) + 8|0);
             HEAP32[$_6$sroa$0$0$$sroa_idx$i>>2] = 0;
             $278 = ((($_45)) + 16|0);
             HEAP32[$278>>2] = 26744;
             $279 = ((($_45)) + 20|0);
             HEAP32[$279>>2] = 0;
             __THREW__ = 0;
             invoke_vi(352,($_45|0));
             $280 = __THREW__; __THREW__ = 0;
             $281 = $280&1;
             if ($281) {
              break L11;
             }
             _llvm_trap();
             // unreachable;
            }
           } while(0);
           $173 = ___cxa_find_matching_catch_2()|0;
           $174 = tempRet0;
           if ($switchtmp$i264$i) {
            $personalityslot$sroa$0$0$i = $173;$personalityslot$sroa$9$0$i = $174;
            break L90;
           } else {
            $$fca$0$extract15243272$i = $173;$$fca$1$extract17244273$i = $174;$229 = $182;
           }
          }
         } while(0);
         $228 = HEAP32[$229>>2]|0;HEAP32[$229>>2] = (($228-1)|0);
         $230 = ($228|0)==(1);
         if ($230) {
          /* fence */;
          __ZN33__LT_alloc__arc__Arc_LT_T_GT__GT_9drop_slow17h7ac40ae25c424b1dE_1335($thread$i);
          $personalityslot$sroa$0$0$i = $$fca$0$extract15243272$i;$personalityslot$sroa$9$0$i = $$fca$1$extract17244273$i;
         } else {
          $personalityslot$sroa$0$0$i = $$fca$0$extract15243272$i;$personalityslot$sroa$9$0$i = $$fca$1$extract17244273$i;
         }
        }
       } while(0);
       if ((label|0) == 127) {
        $259 = ___cxa_find_matching_catch_2()|0;
        $260 = tempRet0;
        $personalityslot$sroa$0$0$i = $259;$personalityslot$sroa$9$0$i = $260;
       }
       $eh$lpad$body20$index11Z2D = $personalityslot$sroa$9$0$i;$eh$lpad$body20$indexZ2D = $personalityslot$sroa$0$0$i;
       break L1;
      }
     } while(0);
     __THREW__ = 0;
     invoke_viii(321,(18459|0),41,(5848|0));
     $26 = __THREW__; __THREW__ = 0;
    }
   } while(0);
   $286 = ___cxa_find_matching_catch_2()|0;
   $287 = tempRet0;
   $eh$lpad$body20$index11Z2D = $287;$eh$lpad$body20$indexZ2D = $286;
  }
 } while(0);
 if ((label|0) == 6) {
  $19 = ___cxa_find_matching_catch_2()|0;
  $20 = tempRet0;
  $eh$lpad$body20$index11Z2D = $20;$eh$lpad$body20$indexZ2D = $19;
 }
 $282 = HEAP32[$1>>2]|0;
 FUNCTION_TABLE_vi[$282 & 511]($0);
 $283 = ((($1)) + 4|0);
 $284 = HEAP32[$283>>2]|0;
 $285 = ($284|0)==(0);
 if ($285) {
  ___resumeException($eh$lpad$body20$indexZ2D|0);
  // unreachable;
 }
 _free($0);
 ___resumeException($eh$lpad$body20$indexZ2D|0);
 // unreachable;
}
function __ZN3std9panicking18update_panic_count11PANIC_COUNT7__getit17ha058452be27ec8a6E() {
 var $$$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $_0$0$i$i$i = 0, $_0$0$i$i3$i = 0, $cond$i$i$i = 0;
 var $cond$i$i1$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[1558]|0;
 $cond$i$i$i = ($0|0)==(0);
 if ($cond$i$i$i) {
  $1 = (__ZN3std10sys_common12thread_local9StaticKey9lazy_init17hfe76ff6b56e2d562E(6232)|0);
  $_0$0$i$i$i = $1;
 } else {
  $_0$0$i$i$i = $0;
 }
 $2 = (_pthread_getspecific(($_0$0$i$i$i|0))|0);
 $3 = ($2|0)==(0|0);
 if (!($3)) {
  $4 = ($2|0)==((1)|0);
  $5 = ((($2)) + 4|0);
  $$$i = $4 ? 0 : $5;
  $15 = $$$i;
  return ($15|0);
 }
 $6 = (_malloc(12)|0);
 $7 = ($6|0)==(0|0);
 if ($7) {
  __ZN5alloc3oom3oom17hb253cf665793f59eE();
  // unreachable;
 }
 HEAP32[$6>>2] = 6232;
 $8 = ((($6)) + 4|0);
 $9 = $8;
 $10 = $9;
 HEAP32[$10>>2] = 0;
 $11 = (($9) + 4)|0;
 $12 = $11;
 HEAP32[$12>>2] = 0;
 $13 = HEAP32[1558]|0;
 $cond$i$i1$i = ($13|0)==(0);
 if ($cond$i$i1$i) {
  $14 = (__ZN3std10sys_common12thread_local9StaticKey9lazy_init17hfe76ff6b56e2d562E(6232)|0);
  $_0$0$i$i3$i = $14;
 } else {
  $_0$0$i$i3$i = $13;
 }
 (_pthread_setspecific(($_0$0$i$i3$i|0),($6|0))|0);
 $15 = $8;
 return ($15|0);
}
function __ZN3std10sys_common4util10dumb_print17h0ae9c5f64360bf93E($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $_3$sroa$12$4$$sroa_idx18 = 0, $_3$sroa$12$4$copyload = 0, $_3$sroa$5$4$copyload = 0, $_3$sroa$9$4$$sroa_idx15 = 0, $_3$sroa$9$4$copyload = 0, $_5$i$i = 0, $_8$i = 0, $cond$i$i = 0, $cond$i$i$i$i = 0, $or$cond = 0, $stderr$i$i = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $stderr$i$i = sp + 40|0;
 $_5$i$i = sp + 16|0;
 $_8$i = sp;
 ;HEAP32[$_5$i$i>>2]=HEAP32[$0>>2]|0;HEAP32[$_5$i$i+4>>2]=HEAP32[$0+4>>2]|0;HEAP32[$_5$i$i+8>>2]=HEAP32[$0+8>>2]|0;HEAP32[$_5$i$i+12>>2]=HEAP32[$0+12>>2]|0;HEAP32[$_5$i$i+16>>2]=HEAP32[$0+16>>2]|0;HEAP32[$_5$i$i+20>>2]=HEAP32[$0+20>>2]|0;
 __ZN3std2io5Write9write_fmt17h5cd56586e693645fE($_8$i,$stderr$i$i,$_5$i$i);
 $_3$sroa$5$4$copyload = HEAP32[$_8$i>>2]|0;
 $_3$sroa$9$4$$sroa_idx15 = ((($_8$i)) + 4|0);
 $_3$sroa$9$4$copyload = HEAP32[$_3$sroa$9$4$$sroa_idx15>>2]|0;
 $_3$sroa$12$4$$sroa_idx18 = ((($_8$i)) + 8|0);
 $_3$sroa$12$4$copyload = HEAP32[$_3$sroa$12$4$$sroa_idx18>>2]|0;
 $cond$i$i = ($_3$sroa$5$4$copyload|0)==(1);
 $cond$i$i$i$i = ($_3$sroa$9$4$copyload|0)==(1);
 $or$cond = $cond$i$i & $cond$i$i$i$i;
 if (!($or$cond)) {
  STACKTOP = sp;return;
 }
 $1 = ((($_3$sroa$12$4$copyload)) + 4|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($_3$sroa$12$4$copyload)) + 8|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = HEAP32[$4>>2]|0;
 FUNCTION_TABLE_vi[$5 & 511]($2);
 $6 = HEAP32[$3>>2]|0;
 $7 = ((($6)) + 4|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ($8|0)==(0);
 if (!($9)) {
  _free($2);
 }
 _free($_3$sroa$12$4$copyload);
 STACKTOP = sp;return;
}
function __ZN45__LT_std__thread__local__os__Key_LT_T_GT__GT_3get17h2fb116ac523daa68E() {
 var $$ = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $_0$0$i$i = 0, $_0$0$i$i3 = 0, $_23$sroa$0$0$$sroa_idx = 0, $cond$i$i = 0, $cond$i$i1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[1549]|0;
 $cond$i$i1 = ($0|0)==(0);
 if ($cond$i$i1) {
  $1 = (__ZN3std10sys_common12thread_local9StaticKey9lazy_init17hfe76ff6b56e2d562E(6196)|0);
  $_0$0$i$i3 = $1;
 } else {
  $_0$0$i$i3 = $0;
 }
 $2 = (_pthread_getspecific(($_0$0$i$i3|0))|0);
 $3 = ($2|0)==(0|0);
 if (!($3)) {
  $4 = ($2|0)==((1)|0);
  $5 = ((($2)) + 4|0);
  $$ = $4 ? 0 : $5;
  return ($$|0);
 }
 $6 = (_malloc(24)|0);
 $7 = ($6|0)==(0|0);
 if ($7) {
  __ZN5alloc3oom3oom17hb253cf665793f59eE();
  // unreachable;
 }
 HEAP32[$6>>2] = 6196;
 $_23$sroa$0$0$$sroa_idx = ((($6)) + 4|0);
 HEAP32[$_23$sroa$0$0$$sroa_idx>>2] = 0;
 $8 = HEAP32[1549]|0;
 $cond$i$i = ($8|0)==(0);
 if (!($cond$i$i)) {
  $_0$0$i$i = $8;
  (_pthread_setspecific(($_0$0$i$i|0),($6|0))|0);
  return ($_23$sroa$0$0$$sroa_idx|0);
 }
 $9 = (__ZN3std10sys_common12thread_local9StaticKey9lazy_init17hfe76ff6b56e2d562E(6196)|0);
 $_0$0$i$i = $9;
 (_pthread_setspecific(($_0$0$i$i|0),($6|0))|0);
 return ($_23$sroa$0$0$$sroa_idx|0);
}
function __ZN46__LT_std__thread__local__LocalKey_LT_T_GT__GT_4with17ha27b04730b7b89bdE() {
 var $$pre = 0, $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, $_10$i = 0, $_12$i = 0, $_13$sroa$5$0$$sroa_idx52$i = 0, $cond$i$i = 0, $cond$i$i$i$i = 0, $cond$i$i$i54$i = 0, $cond$i$i$i58$i = 0, $not$switch$i$i = 0, $personalityslot$sroa$0$1$i = 0, $personalityslot$sroa$10$1$i = 0, $switch = 0, $switch2tmp$i = 0, $switchtmp$i$i = 0, $switchtmp$i$i$i$i$i = 0, $switchtmp$i63$i = 0, $switchtmp$i65$i = 0, $value$i$sroa$0$0$_13$sroa$4$0$$sroa_cast4$i$sroa_idx = 0;
 var $value$i$sroa$412$0$_13$sroa$4$0$$sroa_cast4$i$sroa_idx = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $_12$i = sp + 24|0;
 $_10$i = sp;
 $0 = (__ZN45__LT_std__thread__local__os__Key_LT_T_GT__GT_3get17h2fb116ac523daa68E()|0);
 $switch2tmp$i = ($0|0)==(0|0);
 if ($switch2tmp$i) {
  __ZN4core6option13expect_failed17hc1eeb48c0c4a1725E(18366,57);
  // unreachable;
 }
 $1 = HEAP32[$0>>2]|0;
 $switch = ($1|0)==(1);
 do {
  if ($switch) {
   $$pre = ((($0)) + 4|0);
   $$pre$phiZ2D = $$pre;
  } else {
   ;HEAP32[$_10$i>>2]=HEAP32[$0>>2]|0;HEAP32[$_10$i+4>>2]=HEAP32[$0+4>>2]|0;HEAP32[$_10$i+8>>2]=HEAP32[$0+8>>2]|0;HEAP32[$_10$i+12>>2]=HEAP32[$0+12>>2]|0;HEAP32[$_10$i+16>>2]=HEAP32[$0+16>>2]|0;
   HEAP32[$0>>2] = 1;
   $value$i$sroa$0$0$_13$sroa$4$0$$sroa_cast4$i$sroa_idx = ((($0)) + 4|0);
   HEAP32[$value$i$sroa$0$0$_13$sroa$4$0$$sroa_cast4$i$sroa_idx>>2] = 0;
   $value$i$sroa$412$0$_13$sroa$4$0$$sroa_cast4$i$sroa_idx = ((($0)) + 16|0);
   HEAP32[$value$i$sroa$412$0$_13$sroa$4$0$$sroa_cast4$i$sroa_idx>>2] = 0;
   $2 = HEAP32[$_10$i>>2]|0;
   $cond$i$i = ($2|0)==(1);
   if ($cond$i$i) {
    $3 = ((($_10$i)) + 16|0);
    $4 = HEAP32[$3>>2]|0;
    $switchtmp$i$i$i$i$i = ($4|0)==(0|0);
    if (!($switchtmp$i$i$i$i$i)) {
     $5 = HEAP32[$4>>2]|0;HEAP32[$4>>2] = (($5-1)|0);
     $6 = ($5|0)==(1);
     if ($6) {
      /* fence */;
      __ZN33__LT_alloc__arc__Arc_LT_T_GT__GT_9drop_slow17h7ac40ae25c424b1dE_1335($3);
     }
    }
   }
   $7 = HEAP32[$0>>2]|0;
   $not$switch$i$i = ($7|0)==(1);
   if ($not$switch$i$i) {
    $$pre$phiZ2D = $value$i$sroa$0$0$_13$sroa$4$0$$sroa_cast4$i$sroa_idx;
    break;
   } else {
    __ZN4core9panicking5panic17ha7507e8e32961bfeE(6500);
    // unreachable;
   }
  }
 } while(0);
 $8 = HEAP32[$$pre$phiZ2D>>2]|0;
 $cond$i$i$i$i = ($8|0)==(-1);
 L16: do {
  if ($cond$i$i$i$i) {
   __THREW__ = 0;
   invoke_v(320);
   $9 = __THREW__; __THREW__ = 0;
  } else {
   $10 = (($8) + 1)|0;
   HEAP32[$$pre$phiZ2D>>2] = $10;
   $11 = ((($0)) + 8|0);
   $12 = ((($0)) + 16|0);
   $13 = HEAP32[$12>>2]|0;
   $14 = ($13|0)==(0|0);
   HEAP32[$$pre$phiZ2D>>2] = $8;
   do {
    if ($14) {
     __THREW__ = 0;
     $15 = (invoke_iiii(318,(0|0),0,0)|0);
     $16 = __THREW__; __THREW__ = 0;
     $17 = $16&1;
     if ($17) {
      break L16;
     }
     $18 = $15;
     HEAP32[$_12$i>>2] = 0;
     $_13$sroa$5$0$$sroa_idx52$i = ((($_12$i)) + 8|0);
     HEAP32[$_13$sroa$5$0$$sroa_idx52$i>>2] = $18;
     $19 = HEAP32[$$pre$phiZ2D>>2]|0;
     $cond$i$i$i54$i = ($19|0)==(0);
     if ($cond$i$i$i54$i) {
      HEAP32[$$pre$phiZ2D>>2] = -1;
      $23 = HEAP32[$12>>2]|0;
      $switchtmp$i$i = ($23|0)==(0|0);
      if (!($switchtmp$i$i)) {
       $24 = HEAP32[$23>>2]|0;HEAP32[$23>>2] = (($24-1)|0);
       $25 = ($24|0)==(1);
       if ($25) {
        /* fence */;
        __ZN33__LT_alloc__arc__Arc_LT_T_GT__GT_9drop_slow17h7ac40ae25c424b1dE_1335($12);
       }
      }
      ;HEAP32[$11>>2]=HEAP32[$_12$i>>2]|0;HEAP32[$11+4>>2]=HEAP32[$_12$i+4>>2]|0;HEAP32[$11+8>>2]=HEAP32[$_12$i+8>>2]|0;
      HEAP32[$$pre$phiZ2D>>2] = 0;
      break;
     }
     __THREW__ = 0;
     invoke_v(322);
     $20 = __THREW__; __THREW__ = 0;
     $21 = ___cxa_find_matching_catch_2()|0;
     $22 = tempRet0;
     $switchtmp$i65$i = ($15|0)==(0);
     if ($switchtmp$i65$i) {
      $personalityslot$sroa$0$1$i = $21;$personalityslot$sroa$10$1$i = $22;
      ___resumeException($personalityslot$sroa$0$1$i|0);
      // unreachable;
     }
     $35 = HEAP32[$18>>2]|0;HEAP32[$18>>2] = (($35-1)|0);
     $36 = ($35|0)==(1);
     if (!($36)) {
      $personalityslot$sroa$0$1$i = $21;$personalityslot$sroa$10$1$i = $22;
      ___resumeException($personalityslot$sroa$0$1$i|0);
      // unreachable;
     }
     $37 = ((($_12$i)) + 8|0);
     /* fence */;
     __ZN33__LT_alloc__arc__Arc_LT_T_GT__GT_9drop_slow17h7ac40ae25c424b1dE_1335($37);
     $personalityslot$sroa$0$1$i = $21;$personalityslot$sroa$10$1$i = $22;
     ___resumeException($personalityslot$sroa$0$1$i|0);
     // unreachable;
    } else {
     $cond$i$i$i58$i = ($8|0)==(0);
     if (!($cond$i$i$i58$i)) {
      __THREW__ = 0;
      invoke_v(322);
      $26 = __THREW__; __THREW__ = 0;
      $27 = ___cxa_find_matching_catch_2()|0;
      $28 = tempRet0;
      $personalityslot$sroa$0$1$i = $27;$personalityslot$sroa$10$1$i = $28;
      ___resumeException($personalityslot$sroa$0$1$i|0);
      // unreachable;
     }
    }
   } while(0);
   HEAP32[$$pre$phiZ2D>>2] = -1;
   $29 = HEAP32[$12>>2]|0;
   $switchtmp$i63$i = ($29|0)==(0|0);
   if ($switchtmp$i63$i) {
    __THREW__ = 0;
    invoke_vi(220,(6500|0));
    $30 = __THREW__; __THREW__ = 0;
    $31 = ___cxa_find_matching_catch_2()|0;
    $32 = tempRet0;
    HEAP32[$$pre$phiZ2D>>2] = 0;
    $personalityslot$sroa$0$1$i = $31;$personalityslot$sroa$10$1$i = $32;
    ___resumeException($personalityslot$sroa$0$1$i|0);
    // unreachable;
   }
   $33 = HEAP32[$29>>2]|0;HEAP32[$29>>2] = (($33+1)|0);
   $34 = ($33|0)<(0);
   if ($34) {
    _llvm_trap();
    // unreachable;
   } else {
    $40 = $29;
    HEAP32[$$pre$phiZ2D>>2] = 0;
    STACKTOP = sp;return ($40|0);
   }
  }
 } while(0);
 $38 = ___cxa_find_matching_catch_2()|0;
 $39 = tempRet0;
 $personalityslot$sroa$0$1$i = $38;$personalityslot$sroa$10$1$i = $39;
 ___resumeException($personalityslot$sroa$0$1$i|0);
 // unreachable;
 return (0)|0;
}
function __ZN45__LT_std__thread__local__os__Key_LT_T_GT__GT_3get17h3ece46750a1c132cE() {
 var $$ = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $_0$0$i$i = 0, $_0$0$i$i14 = 0, $_23$sroa$0$0$$sroa_idx = 0, $cond$i$i = 0, $cond$i$i12 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[1483]|0;
 $cond$i$i12 = ($0|0)==(0);
 if ($cond$i$i12) {
  $1 = (__ZN3std10sys_common12thread_local9StaticKey9lazy_init17hfe76ff6b56e2d562E(5932)|0);
  $_0$0$i$i14 = $1;
 } else {
  $_0$0$i$i14 = $0;
 }
 $2 = (_pthread_getspecific(($_0$0$i$i14|0))|0);
 $3 = ($2|0)==(0|0);
 if (!($3)) {
  $4 = ($2|0)==((1)|0);
  $5 = ((($2)) + 4|0);
  $$ = $4 ? 0 : $5;
  return ($$|0);
 }
 $6 = (_malloc(20)|0);
 $7 = ($6|0)==(0|0);
 if ($7) {
  __ZN5alloc3oom3oom17hb253cf665793f59eE();
  // unreachable;
 }
 HEAP32[$6>>2] = 5932;
 $_23$sroa$0$0$$sroa_idx = ((($6)) + 4|0);
 HEAP32[$_23$sroa$0$0$$sroa_idx>>2] = 0;
 $8 = HEAP32[1483]|0;
 $cond$i$i = ($8|0)==(0);
 if (!($cond$i$i)) {
  $_0$0$i$i = $8;
  (_pthread_setspecific(($_0$0$i$i|0),($6|0))|0);
  return ($_23$sroa$0$0$$sroa_idx|0);
 }
 $9 = (__ZN3std10sys_common12thread_local9StaticKey9lazy_init17hfe76ff6b56e2d562E(5932)|0);
 $_0$0$i$i = $9;
 (_pthread_setspecific(($_0$0$i$i|0),($6|0))|0);
 return ($_23$sroa$0$0$$sroa_idx|0);
}
function __ZN4core6result13unwrap_failed17he96585155b596c01E_1334() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $_12 = 0, $_6$sroa$0$0$$sroa_idx$i = 0, $_7 = 0, $error = 0, $msg = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $error = sp + 48|0;
 $msg = sp + 40|0;
 $_7 = sp + 16|0;
 $_12 = sp;
 HEAP32[$msg>>2] = 18968;
 $0 = ((($msg)) + 4|0);
 HEAP32[$0>>2] = 16;
 $1 = $msg;
 $2 = $error;
 HEAP32[$_12>>2] = $1;
 $3 = ((($_12)) + 4|0);
 HEAP32[$3>>2] = (346);
 $4 = ((($_12)) + 8|0);
 HEAP32[$4>>2] = $2;
 $5 = ((($_12)) + 12|0);
 HEAP32[$5>>2] = (270);
 HEAP32[$_7>>2] = (6520);
 $6 = ((($_7)) + 4|0);
 HEAP32[$6>>2] = 2;
 $_6$sroa$0$0$$sroa_idx$i = ((($_7)) + 8|0);
 HEAP32[$_6$sroa$0$0$$sroa_idx$i>>2] = 0;
 $7 = ((($_7)) + 16|0);
 HEAP32[$7>>2] = $_12;
 $8 = ((($_7)) + 20|0);
 HEAP32[$8>>2] = 2;
 __ZN4core9panicking9panic_fmt17hfa35599633a0afa2E($_7,22324,100,799);
 // unreachable;
}
function __ZN33__LT_alloc__arc__Arc_LT_T_GT__GT_9drop_slow17h7ac40ae25c424b1dE_1335($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $switchtmp$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($1)) + 8|0);
 $3 = HEAP32[$2>>2]|0;
 $switchtmp$i$i = ($3|0)==(0|0);
 if (!($switchtmp$i$i)) {
  HEAP8[$3>>0] = 0;
  $4 = ((($1)) + 12|0);
  $5 = HEAP32[$4>>2]|0;
  $6 = ($5|0)==(0);
  if (!($6)) {
   $7 = HEAP32[$2>>2]|0;
   _free($7);
  }
 }
 $8 = ((($1)) + 24|0);
 $9 = HEAP32[$8>>2]|0;
 (_pthread_mutex_destroy(($9|0))|0);
 $10 = HEAP32[$8>>2]|0;
 _free($10);
 $11 = ((($1)) + 32|0);
 $12 = HEAP32[$11>>2]|0;
 (_pthread_cond_destroy(($12|0))|0);
 $13 = HEAP32[$11>>2]|0;
 _free($13);
 $14 = HEAP32[$0>>2]|0;
 $15 = ((($14)) + 4|0);
 $16 = HEAP32[$15>>2]|0;HEAP32[$15>>2] = (($16-1)|0);
 $17 = ($16|0)==(1);
 if (!($17)) {
  return;
 }
 /* fence */;
 _free($1);
 return;
}
function __ZN3std9panicking12default_hook28__u7b__u7b_closure_u7d__u7d_17h49d7d3fe3900d914E($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0;
 var $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $8 = 0, $9 = 0, $_0$sroa$3$0$insert$ext$i$i$i = 0, $_11 = 0, $_35 = 0, $_4 = 0, $_41 = 0, $_43 = 0, $_6 = 0, $_6$sroa$0$0$$sroa_idx$i = 0;
 var $_6$sroa$0$0$$sroa_idx$i12 = 0, $cond$i = 0, $cond$i$i$i = 0, $cond$i$i$i14 = 0, $cond$i$i$i21 = 0, $cond$i13 = 0, $cond$i20 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(128|0);
 $_4 = sp + 112|0;
 $_6 = sp + 88|0;
 $_11 = sp + 56|0;
 $_35 = sp + 40|0;
 $_41 = sp + 24|0;
 $_43 = sp;
 $3 = HEAP32[$0>>2]|0;
 $4 = ((($0)) + 4|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ((($0)) + 8|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ((($0)) + 12|0);
 $9 = HEAP32[$8>>2]|0;
 HEAP32[$_11>>2] = $3;
 $10 = ((($_11)) + 4|0);
 HEAP32[$10>>2] = (346);
 $11 = ((($_11)) + 8|0);
 HEAP32[$11>>2] = $5;
 $12 = ((($_11)) + 12|0);
 HEAP32[$12>>2] = (346);
 $13 = ((($_11)) + 16|0);
 HEAP32[$13>>2] = $7;
 $14 = ((($_11)) + 20|0);
 HEAP32[$14>>2] = (346);
 $15 = ((($_11)) + 24|0);
 HEAP32[$15>>2] = $9;
 $16 = ((($_11)) + 28|0);
 HEAP32[$16>>2] = (356);
 HEAP32[$_6>>2] = 5940;
 $17 = ((($_6)) + 4|0);
 HEAP32[$17>>2] = 5;
 $_6$sroa$0$0$$sroa_idx$i = ((($_6)) + 8|0);
 HEAP32[$_6$sroa$0$0$$sroa_idx$i>>2] = 0;
 $18 = ((($_6)) + 16|0);
 HEAP32[$18>>2] = $_11;
 $19 = ((($_6)) + 20|0);
 HEAP32[$19>>2] = 4;
 $20 = ((($2)) + 24|0);
 $21 = HEAP32[$20>>2]|0;
 FUNCTION_TABLE_viii[$21 & 511]($_4,$1,$_6);
 $22 = HEAP32[$_4>>2]|0;
 $cond$i20 = ($22|0)==(1);
 if ($cond$i20) {
  $23 = ((($_4)) + 4|0);
  $24 = HEAP32[$23>>2]|0;
  $cond$i$i$i21 = ($24|0)==(1);
  if ($cond$i$i$i21) {
   $25 = ((($_4)) + 8|0);
   $26 = HEAP32[$25>>2]|0;
   $27 = ((($26)) + 4|0);
   $28 = HEAP32[$27>>2]|0;
   $29 = ((($26)) + 8|0);
   $30 = HEAP32[$29>>2]|0;
   $31 = HEAP32[$30>>2]|0;
   FUNCTION_TABLE_vi[$31 & 511]($28);
   $32 = HEAP32[$29>>2]|0;
   $33 = ((($32)) + 4|0);
   $34 = HEAP32[$33>>2]|0;
   $35 = ($34|0)==(0);
   if (!($35)) {
    _free($28);
   }
   _free($26);
  }
 }
 $36 = ((($0)) + 16|0);
 $37 = HEAP32[$36>>2]|0;
 $38 = HEAP8[$37>>0]|0;
 $39 = ($38<<24>>24)==(0);
 if (!($39)) {
  __ZN3std3sys9backtrace7tracing3imp5write17hdd1599e8e3007b64E($_35,$1,$2);
  $40 = HEAP32[$_35>>2]|0;
  $cond$i13 = ($40|0)==(1);
  if ($cond$i13) {
   $41 = ((($_35)) + 4|0);
   $42 = HEAP32[$41>>2]|0;
   $cond$i$i$i14 = ($42|0)==(1);
   if ($cond$i$i$i14) {
    $43 = ((($_35)) + 8|0);
    $44 = HEAP32[$43>>2]|0;
    $45 = ((($44)) + 4|0);
    $46 = HEAP32[$45>>2]|0;
    $47 = ((($44)) + 8|0);
    $48 = HEAP32[$47>>2]|0;
    $49 = HEAP32[$48>>2]|0;
    FUNCTION_TABLE_vi[$49 & 511]($46);
    $50 = HEAP32[$47>>2]|0;
    $51 = ((($50)) + 4|0);
    $52 = HEAP32[$51>>2]|0;
    $53 = ($52|0)==(0);
    if (!($53)) {
     _free($46);
    }
    _free($44);
   }
  }
  STACKTOP = sp;return;
 }
 $54 = HEAP8[18682]|0;if (($54<<24>>24) == 1) HEAP8[18682] = 0;
 $_0$sroa$3$0$insert$ext$i$i$i = $54&255;
 $55 = ($_0$sroa$3$0$insert$ext$i$i$i << 8)&65535;
 $56 = ($55&65535)>(255);
 if (!($56)) {
  STACKTOP = sp;return;
 }
 HEAP32[$_43>>2] = 5980;
 $57 = ((($_43)) + 4|0);
 HEAP32[$57>>2] = 1;
 $_6$sroa$0$0$$sroa_idx$i12 = ((($_43)) + 8|0);
 HEAP32[$_6$sroa$0$0$$sroa_idx$i12>>2] = 0;
 $58 = ((($_43)) + 16|0);
 HEAP32[$58>>2] = 26744;
 $59 = ((($_43)) + 20|0);
 HEAP32[$59>>2] = 0;
 $60 = HEAP32[$20>>2]|0;
 FUNCTION_TABLE_viii[$60 & 511]($_41,$1,$_43);
 $61 = HEAP32[$_41>>2]|0;
 $cond$i = ($61|0)==(1);
 if ($cond$i) {
  $62 = ((($_41)) + 4|0);
  $63 = HEAP32[$62>>2]|0;
  $cond$i$i$i = ($63|0)==(1);
  if ($cond$i$i$i) {
   $64 = ((($_41)) + 8|0);
   $65 = HEAP32[$64>>2]|0;
   $66 = ((($65)) + 4|0);
   $67 = HEAP32[$66>>2]|0;
   $68 = ((($65)) + 8|0);
   $69 = HEAP32[$68>>2]|0;
   $70 = HEAP32[$69>>2]|0;
   FUNCTION_TABLE_vi[$70 & 511]($67);
   $71 = HEAP32[$68>>2]|0;
   $72 = ((($71)) + 4|0);
   $73 = HEAP32[$72>>2]|0;
   $74 = ($73|0)==(0);
   if (!($74)) {
    _free($67);
   }
   _free($65);
  }
 }
 STACKTOP = sp;return;
}
function __ZN4drop17h90c886f6ba3b8c33E($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZN3std2io5impls69__LT_impl_u20_std__io__Write_u20_for_u20__RF__u27_a_u20_mut_u20_W_GT_5write17hc0abbf55cfec7d40E($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$sink$i$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $ret$i$sroa$4$0$$sroa_idx2$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = (_write(2,$2,$3)|0);
 $5 = ($4|0)==(-1);
 if ($5) {
  $6 = (___errno_location()|0);
  $7 = HEAP32[$6>>2]|0;
  $$sink$i$i = 1;$10 = 0;$13 = $7;
 } else {
  $$sink$i$i = 0;$10 = $4;$13 = 0;
 }
 HEAP32[$0>>2] = $$sink$i$i;
 $ret$i$sroa$4$0$$sroa_idx2$i = ((($0)) + 4|0);
 $8 = $ret$i$sroa$4$0$$sroa_idx2$i;
 $9 = $8;
 HEAP32[$9>>2] = $10;
 $11 = (($8) + 4)|0;
 $12 = $11;
 HEAP32[$12>>2] = $13;
 return;
}
function __ZN3std2io5impls69__LT_impl_u20_std__io__Write_u20_for_u20__RF__u27_a_u20_mut_u20_W_GT_5flush17hc1e0b2b020719344E($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$0>>2] = 0;
 return;
}
function __ZN3std2io5impls69__LT_impl_u20_std__io__Write_u20_for_u20__RF__u27_a_u20_mut_u20_W_GT_9write_all17h5d2f321aedfc67e8E($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZN3std2io5Write9write_all17h742216584040a17aE($0,$2,$3);
 return;
}
function __ZN3std2io5impls69__LT_impl_u20_std__io__Write_u20_for_u20__RF__u27_a_u20_mut_u20_W_GT_9write_fmt17heaa566350b27752fE($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $_6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $_6 = sp;
 $3 = HEAP32[$1>>2]|0;
 ;HEAP32[$_6>>2]=HEAP32[$2>>2]|0;HEAP32[$_6+4>>2]=HEAP32[$2+4>>2]|0;HEAP32[$_6+8>>2]=HEAP32[$2+8>>2]|0;HEAP32[$_6+12>>2]=HEAP32[$2+12>>2]|0;HEAP32[$_6+16>>2]=HEAP32[$2+16>>2]|0;HEAP32[$_6+20>>2]=HEAP32[$2+20>>2]|0;
 __ZN3std2io5Write9write_fmt17h5cd56586e693645fE($0,$3,$_6);
 STACKTOP = sp;return;
}
function __ZN3std2io5Write9write_fmt17h5cd56586e693645fE($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$sroa_idx = 0, $$sroa_idx31 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $_14 = 0, $_8$sroa$0$0$$sroa_idx = 0, $cond$i = 0, $cond$i$i$i = 0, $cond$i$i$i22 = 0, $cond$i21 = 0, $output = 0;
 var $personalityslot$sroa$0$0 = 0, $personalityslot$sroa$5$0 = 0, $switch = 0, $x$i$sroa$4$0$$sroa_raw_idx$i = 0, $x$i$sroa$4$i = 0, $x$i$sroa$5$0$$sroa_idx$i = 0, $x$i$sroa$6$0$$sroa_idx$i = 0, $x$sroa$0$i$i$i$i$i$sroa$4$0$$sroa_idx = 0, $x$sroa$0$i$i$i$i$i$sroa$5$0$$sroa_idx = 0, dest = 0, label = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $x$i$sroa$4$i = sp + 40|0;
 $output = sp + 24|0;
 $_14 = sp;
 HEAP32[$output>>2] = $1;
 $_8$sroa$0$0$$sroa_idx = ((($output)) + 4|0);
 HEAP32[$_8$sroa$0$0$$sroa_idx>>2] = 0;
 ;HEAP32[$_14>>2]=HEAP32[$2>>2]|0;HEAP32[$_14+4>>2]=HEAP32[$2+4>>2]|0;HEAP32[$_14+8>>2]=HEAP32[$2+8>>2]|0;HEAP32[$_14+12>>2]=HEAP32[$2+12>>2]|0;HEAP32[$_14+16>>2]=HEAP32[$2+16>>2]|0;HEAP32[$_14+20>>2]=HEAP32[$2+20>>2]|0;
 __THREW__ = 0;
 $3 = (invoke_iiii(244,($output|0),(1608|0),($_14|0))|0);
 $4 = __THREW__; __THREW__ = 0;
 $5 = $4&1;
 L1: do {
  if (!($5)) {
   $switch = ($3<<24>>24)==(0);
   do {
    if ($switch) {
     HEAP32[$0>>2] = 0;
    } else {
     $6 = ((($output)) + 4|0);
     $7 = HEAP32[$6>>2]|0;
     $8 = ($7|0)==(1);
     if ($8) {
      ;HEAP32[$0>>2]=HEAP32[$6>>2]|0;HEAP32[$0+4>>2]=HEAP32[$6+4>>2]|0;HEAP32[$0+8>>2]=HEAP32[$6+8>>2]|0;
      STACKTOP = sp;return;
     }
     $9 = (_malloc(15)|0);
     $10 = ($9|0)==(0|0);
     if ($10) {
      __THREW__ = 0;
      invoke_v(210);
      $11 = __THREW__; __THREW__ = 0;
      break L1;
     }
     dest=$9; src=18628; stop=dest+15|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
     $12 = (_malloc(12)|0);
     $13 = ($12|0)==(0|0);
     if ($13) {
      __THREW__ = 0;
      invoke_v(210);
      $14 = __THREW__; __THREW__ = 0;
      break L1;
     }
     $15 = $9;
     HEAP32[$12>>2] = $15;
     $x$sroa$0$i$i$i$i$i$sroa$4$0$$sroa_idx = ((($12)) + 4|0);
     HEAP32[$x$sroa$0$i$i$i$i$i$sroa$4$0$$sroa_idx>>2] = 15;
     $x$sroa$0$i$i$i$i$i$sroa$5$0$$sroa_idx = ((($12)) + 8|0);
     HEAP32[$x$sroa$0$i$i$i$i$i$sroa$5$0$$sroa_idx>>2] = 15;
     $16 = (_malloc(12)|0);
     $17 = ($16|0)==(0|0);
     if ($17) {
      __THREW__ = 0;
      invoke_v(210);
      $18 = __THREW__; __THREW__ = 0;
      break L1;
     } else {
      HEAP8[$16>>0] = 16;
      $x$i$sroa$4$0$$sroa_raw_idx$i = ((($16)) + 1|0);
      ;HEAP8[$x$i$sroa$4$0$$sroa_raw_idx$i>>0]=HEAP8[$x$i$sroa$4$i>>0]|0;HEAP8[$x$i$sroa$4$0$$sroa_raw_idx$i+1>>0]=HEAP8[$x$i$sroa$4$i+1>>0]|0;HEAP8[$x$i$sroa$4$0$$sroa_raw_idx$i+2>>0]=HEAP8[$x$i$sroa$4$i+2>>0]|0;
      $x$i$sroa$5$0$$sroa_idx$i = ((($16)) + 4|0);
      HEAP32[$x$i$sroa$5$0$$sroa_idx$i>>2] = $12;
      $x$i$sroa$6$0$$sroa_idx$i = ((($16)) + 8|0);
      HEAP32[$x$i$sroa$6$0$$sroa_idx$i>>2] = 1632;
      $19 = $16;
      HEAP32[$0>>2] = 1;
      $$sroa_idx = ((($0)) + 4|0);
      HEAP32[$$sroa_idx>>2] = 1;
      $$sroa_idx31 = ((($0)) + 8|0);
      HEAP32[$$sroa_idx31>>2] = $19;
      break;
     }
    }
   } while(0);
   $20 = HEAP32[$_8$sroa$0$0$$sroa_idx>>2]|0;
   $cond$i21 = ($20|0)==(1);
   if (!($cond$i21)) {
    STACKTOP = sp;return;
   }
   $21 = ((($output)) + 8|0);
   $22 = HEAP32[$21>>2]|0;
   $cond$i$i$i22 = ($22|0)==(1);
   if (!($cond$i$i$i22)) {
    STACKTOP = sp;return;
   }
   $23 = ((($output)) + 12|0);
   $24 = HEAP32[$23>>2]|0;
   $25 = ((($24)) + 4|0);
   $26 = HEAP32[$25>>2]|0;
   $27 = ((($24)) + 8|0);
   $28 = HEAP32[$27>>2]|0;
   $29 = HEAP32[$28>>2]|0;
   __THREW__ = 0;
   invoke_vi($29|0,($26|0));
   $30 = __THREW__; __THREW__ = 0;
   $31 = $30&1;
   if ($31) {
    $52 = ___cxa_find_matching_catch_2()|0;
    $53 = tempRet0;
    $personalityslot$sroa$0$0 = $52;$personalityslot$sroa$5$0 = $53;
    ___resumeException($personalityslot$sroa$0$0|0);
    // unreachable;
   }
   $32 = HEAP32[$27>>2]|0;
   $33 = ((($32)) + 4|0);
   $34 = HEAP32[$33>>2]|0;
   $35 = ($34|0)==(0);
   if (!($35)) {
    _free($26);
   }
   _free($24);
   STACKTOP = sp;return;
  }
 } while(0);
 $36 = ___cxa_find_matching_catch_2()|0;
 $37 = tempRet0;
 $38 = HEAP32[$_8$sroa$0$0$$sroa_idx>>2]|0;
 $cond$i = ($38|0)==(1);
 if (!($cond$i)) {
  $personalityslot$sroa$0$0 = $36;$personalityslot$sroa$5$0 = $37;
  ___resumeException($personalityslot$sroa$0$0|0);
  // unreachable;
 }
 $39 = ((($output)) + 8|0);
 $40 = HEAP32[$39>>2]|0;
 $cond$i$i$i = ($40|0)==(1);
 if (!($cond$i$i$i)) {
  $personalityslot$sroa$0$0 = $36;$personalityslot$sroa$5$0 = $37;
  ___resumeException($personalityslot$sroa$0$0|0);
  // unreachable;
 }
 $41 = ((($output)) + 12|0);
 $42 = HEAP32[$41>>2]|0;
 $43 = ((($42)) + 4|0);
 $44 = HEAP32[$43>>2]|0;
 $45 = ((($42)) + 8|0);
 $46 = HEAP32[$45>>2]|0;
 $47 = HEAP32[$46>>2]|0;
 FUNCTION_TABLE_vi[$47 & 511]($44);
 $48 = HEAP32[$45>>2]|0;
 $49 = ((($48)) + 4|0);
 $50 = HEAP32[$49>>2]|0;
 $51 = ($50|0)==(0);
 if (!($51)) {
  _free($44);
 }
 _free($42);
 $personalityslot$sroa$0$0 = $36;$personalityslot$sroa$5$0 = $37;
 ___resumeException($personalityslot$sroa$0$0|0);
 // unreachable;
}
function __ZN4drop17h343ea1468cdeeae2E($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $not$$i$i$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 4|0);
 $2 = HEAP32[$1>>2]|0;
 $not$$i$i$i$i$i = ($2|0)==(0);
 if ($not$$i$i$i$i$i) {
  return;
 }
 $3 = HEAP32[$0>>2]|0;
 _free($3);
 return;
}
function __ZN223__LT__LT_Box_LT_std__error__Error_u20__u2b__u20_Send_u20__u2b__u20_Sync_u20__u2b__u20__u27_static_GT__u20_as_u20_core__convert__From_LT_collections__string__String_GT__GT___from__StringError_u20_as_u20_std__error__Error_GT_11description17h03ad494226a58839E($retVal,$0) {
 $retVal = $retVal|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $retVal$index1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($0)) + 8|0);
 $3 = HEAP32[$2>>2]|0;
 HEAP32[$retVal>>2] = $1;
 $retVal$index1 = ((($retVal)) + 4|0);
 HEAP32[$retVal$index1>>2] = $3;
 return;
}
function __ZN3std5error5Error5cause17h20d7ce7d6d148f1eE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$0>>2] = 0;
 return;
}
function __ZN3std5error5Error7type_id17h7a79a70c71c50ee2E($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 tempRet0 = (2063941771);
 return -630371428;
}
function __ZN224__LT__LT_Box_LT_std__error__Error_u20__u2b__u20_Send_u20__u2b__u20_Sync_u20__u2b__u20__u27_static_GT__u20_as_u20_core__convert__From_LT_collections__string__String_GT__GT___from__StringError_u20_as_u20_core__fmt__Display_GT_3fmt17h5f85b4c6ed6dedc7E($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[$0>>2]|0;
 $3 = ((($0)) + 8|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (__ZN4core3fmt9Formatter3pad17hd3e8d63fceae72f6E($1,$2,$4)|0);
 return ($5|0);
}
function __ZN222__LT__LT_Box_LT_std__error__Error_u20__u2b__u20_Send_u20__u2b__u20_Sync_u20__u2b__u20__u27_static_GT__u20_as_u20_core__convert__From_LT_collections__string__String_GT__GT___from__StringError_u20_as_u20_core__fmt__Debug_GT_3fmt17h1b6bb0842bab0d23E($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$pre$i = 0, $$repack$i = 0, $$unpack$i = 0, $$unpack$pre$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $_0$sroa$0$0$i$i = 0, $_15 = 0, $builder = 0, $not$switch4$i$i$i$i = 0, $not$switch4$i19$i$i$i = 0, $or$cond = 0, $switch4$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $builder = sp;
 $_15 = sp + 16|0;
 $2 = ((($1)) + 28|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ((($1)) + 32|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ((($5)) + 12|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = (FUNCTION_TABLE_iiii[$7 & 511]($3,18643,11)|0);
 HEAP32[$builder>>2] = $1;
 $$repack$i = ((($builder)) + 4|0);
 HEAP8[$$repack$i>>0] = $8;
 $9 = ((($builder)) + 8|0);
 HEAP32[$9>>2] = 0;
 $10 = ((($builder)) + 12|0);
 HEAP8[$10>>0] = 0;
 HEAP32[$_15>>2] = $0;
 (__ZN4core3fmt8builders10DebugTuple5field17h7aa2b38aabb11517E($builder,$_15,1664)|0);
 $11 = HEAP32[$9>>2]|0;
 $12 = ($11|0)==(0);
 $$unpack$pre$i = HEAP8[$$repack$i>>0]|0;
 if ($12) {
  $$unpack$i = $$unpack$pre$i;
  STACKTOP = sp;return ($$unpack$i|0);
 }
 $switch4$i$i = ($$unpack$pre$i<<24>>24)==(0);
 do {
  if ($switch4$i$i) {
   $13 = HEAP32[$builder>>2]|0;
   $14 = HEAP32[$13>>2]|0;
   $15 = $14 & 4;
   $16 = ($15|0)==(0);
   if ($16) {
    $24 = $11;
   } else {
    $17 = ((($13)) + 28|0);
    $18 = HEAP32[$17>>2]|0;
    $19 = ((($13)) + 32|0);
    $20 = HEAP32[$19>>2]|0;
    $21 = ((($20)) + 12|0);
    $22 = HEAP32[$21>>2]|0;
    $23 = (FUNCTION_TABLE_iiii[$22 & 511]($18,24042,1)|0);
    $not$switch4$i$i$i$i = ($23<<24>>24)==(0);
    if (!($not$switch4$i$i$i$i)) {
     $_0$sroa$0$0$i$i = 1;
     break;
    }
    $$pre$i = HEAP32[$9>>2]|0;
    $24 = $$pre$i;
   }
   $25 = ($24|0)!=(1);
   $26 = HEAP8[$10>>0]|0;
   $27 = ($26<<24>>24)==(0);
   $or$cond = $25 | $27;
   if (!($or$cond)) {
    $28 = HEAP32[$builder>>2]|0;
    $29 = ((($28)) + 28|0);
    $30 = HEAP32[$29>>2]|0;
    $31 = ((($28)) + 32|0);
    $32 = HEAP32[$31>>2]|0;
    $33 = ((($32)) + 12|0);
    $34 = HEAP32[$33>>2]|0;
    $35 = (FUNCTION_TABLE_iiii[$34 & 511]($30,18783,1)|0);
    $not$switch4$i19$i$i$i = ($35<<24>>24)==(0);
    if (!($not$switch4$i19$i$i$i)) {
     $_0$sroa$0$0$i$i = 1;
     break;
    }
   }
   $36 = HEAP32[$builder>>2]|0;
   $37 = ((($36)) + 28|0);
   $38 = HEAP32[$37>>2]|0;
   $39 = ((($36)) + 32|0);
   $40 = HEAP32[$39>>2]|0;
   $41 = ((($40)) + 12|0);
   $42 = HEAP32[$41>>2]|0;
   $43 = (FUNCTION_TABLE_iiii[$42 & 511]($38,24043,1)|0);
   $_0$sroa$0$0$i$i = $43;
  } else {
   $_0$sroa$0$0$i$i = 1;
  }
 } while(0);
 HEAP8[$$repack$i>>0] = $_0$sroa$0$0$i$i;
 $$unpack$i = $_0$sroa$0$0$i$i;
 STACKTOP = sp;return ($$unpack$i|0);
}
function __ZN53__LT__RF__u27_a_u20_T_u20_as_u20_core__fmt__Debug_GT_3fmt17h11e83aeca1debe31E_1336($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[$0>>2]|0;
 $3 = HEAP32[$2>>2]|0;
 $4 = ((($2)) + 8|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = (__ZN40__LT_str_u20_as_u20_core__fmt__Debug_GT_3fmt17ha856739f11aa1026E($3,$5,$1)|0);
 return ($6|0);
}
function __ZN4drop17h1bc5e59410308c66E($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $cond$i = 0, $cond$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 4|0);
 $2 = HEAP32[$1>>2]|0;
 $cond$i = ($2|0)==(1);
 if (!($cond$i)) {
  return;
 }
 $3 = ((($0)) + 8|0);
 $4 = HEAP32[$3>>2]|0;
 $cond$i$i$i = ($4|0)==(1);
 if (!($cond$i$i$i)) {
  return;
 }
 $5 = ((($0)) + 12|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ((($6)) + 4|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ((($6)) + 8|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = HEAP32[$10>>2]|0;
 FUNCTION_TABLE_vi[$11 & 511]($8);
 $12 = HEAP32[$9>>2]|0;
 $13 = ((($12)) + 4|0);
 $14 = HEAP32[$13>>2]|0;
 $15 = ($14|0)==(0);
 if (!($15)) {
  _free($8);
 }
 _free($6);
 return;
}
function __ZN94__LT_std__io__Write__write_fmt__Adaptor_LT__u27_a_C__u20_T_GT__u20_as_u20_core__fmt__Write_GT_9write_str17h64200a3d0e3b3e9bE($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $_0$sroa$0$062 = 0, $_13$sroa$5$0$$sroa_idx = 0, $_13$sroa$5$0$$sroa_idx26 = 0, $_5 = 0, $cond$i = 0, $cond$i$i$i = 0;
 var $e$sroa$0$0$$sroa_idx33 = 0, $switch3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $_5 = sp;
 __ZN3std2io5Write9write_all17h742216584040a17aE($_5,$1,$2);
 $3 = HEAP32[$_5>>2]|0;
 $switch3 = ($3|0)==(1);
 if (!($switch3)) {
  $_0$sroa$0$062 = 0;
  STACKTOP = sp;return ($_0$sroa$0$062|0);
 }
 $e$sroa$0$0$$sroa_idx33 = ((($_5)) + 4|0);
 $4 = $e$sroa$0$0$$sroa_idx33;
 $5 = $4;
 $6 = HEAP32[$5>>2]|0;
 $7 = (($4) + 4)|0;
 $8 = $7;
 $9 = HEAP32[$8>>2]|0;
 $10 = ((($0)) + 4|0);
 $11 = HEAP32[$10>>2]|0;
 $cond$i = ($11|0)==(1);
 if ($cond$i) {
  $12 = ((($0)) + 8|0);
  $13 = HEAP32[$12>>2]|0;
  $cond$i$i$i = ($13|0)==(1);
  if ($cond$i$i$i) {
   $14 = ((($0)) + 12|0);
   $15 = HEAP32[$14>>2]|0;
   $16 = ((($15)) + 4|0);
   $17 = HEAP32[$16>>2]|0;
   $18 = ((($15)) + 8|0);
   $19 = HEAP32[$18>>2]|0;
   $20 = HEAP32[$19>>2]|0;
   __THREW__ = 0;
   invoke_vi($20|0,($17|0));
   $21 = __THREW__; __THREW__ = 0;
   $22 = $21&1;
   if ($22) {
    $31 = ___cxa_find_matching_catch_2()|0;
    $32 = tempRet0;
    HEAP32[$10>>2] = 1;
    $_13$sroa$5$0$$sroa_idx = ((($0)) + 8|0);
    $33 = $_13$sroa$5$0$$sroa_idx;
    $34 = $33;
    HEAP32[$34>>2] = $6;
    $35 = (($33) + 4)|0;
    $36 = $35;
    HEAP32[$36>>2] = $9;
    ___resumeException($31|0);
    // unreachable;
   }
   $23 = HEAP32[$18>>2]|0;
   $24 = ((($23)) + 4|0);
   $25 = HEAP32[$24>>2]|0;
   $26 = ($25|0)==(0);
   if (!($26)) {
    _free($17);
   }
   _free($15);
  }
 }
 HEAP32[$10>>2] = 1;
 $_13$sroa$5$0$$sroa_idx26 = ((($0)) + 8|0);
 $27 = $_13$sroa$5$0$$sroa_idx26;
 $28 = $27;
 HEAP32[$28>>2] = $6;
 $29 = (($27) + 4)|0;
 $30 = $29;
 HEAP32[$30>>2] = $9;
 $_0$sroa$0$062 = 1;
 STACKTOP = sp;return ($_0$sroa$0$062|0);
}
function __ZN4core3fmt5Write10write_char17h8c711e2d8597d7f7E($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $8 = 0, $9 = 0, $_0$sroa$0$062$i = 0, $_12 = 0, $_13$sroa$5$0$$sroa_idx$i = 0;
 var $_13$sroa$5$0$$sroa_idx26$i = 0, $_5$i = 0, $cond$i$i = 0, $cond$i$i$i$i = 0, $e$sroa$0$0$$sroa_idx33$i = 0, $len$2$i = 0, $switch3$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $_5$i = sp;
 $_12 = sp + 12|0;
 HEAP32[$_12>>2] = 0;
 $2 = ($1>>>0)<(128);
 do {
  if ($2) {
   $3 = $1&255;
   HEAP8[$_12>>0] = $3;
   $len$2$i = 1;
  } else {
   $4 = ($1>>>0)<(2048);
   if ($4) {
    $5 = $1 >>> 6;
    $6 = $5 & 31;
    $7 = $6&255;
    $8 = $7 | -64;
    HEAP8[$_12>>0] = $8;
    $9 = $1 & 63;
    $10 = $9&255;
    $11 = ((($_12)) + 1|0);
    $12 = $10 | -128;
    HEAP8[$11>>0] = $12;
    $len$2$i = 2;
    break;
   }
   $13 = ($1>>>0)<(65536);
   if ($13) {
    $14 = $1 >>> 12;
    $15 = $14 & 15;
    $16 = $15&255;
    $17 = $16 | -32;
    HEAP8[$_12>>0] = $17;
    $18 = $1 >>> 6;
    $19 = $18 & 63;
    $20 = $19&255;
    $21 = ((($_12)) + 1|0);
    $22 = $20 | -128;
    HEAP8[$21>>0] = $22;
    $23 = $1 & 63;
    $24 = $23&255;
    $25 = ((($_12)) + 2|0);
    $26 = $24 | -128;
    HEAP8[$25>>0] = $26;
    $len$2$i = 3;
    break;
   } else {
    $27 = $1 >>> 18;
    $28 = $27 & 7;
    $29 = $28&255;
    $30 = $29 | -16;
    HEAP8[$_12>>0] = $30;
    $31 = $1 >>> 12;
    $32 = $31 & 63;
    $33 = $32&255;
    $34 = ((($_12)) + 1|0);
    $35 = $33 | -128;
    HEAP8[$34>>0] = $35;
    $36 = $1 >>> 6;
    $37 = $36 & 63;
    $38 = $37&255;
    $39 = ((($_12)) + 2|0);
    $40 = $38 | -128;
    HEAP8[$39>>0] = $40;
    $41 = $1 & 63;
    $42 = $41&255;
    $43 = ((($_12)) + 3|0);
    $44 = $42 | -128;
    HEAP8[$43>>0] = $44;
    $len$2$i = 4;
    break;
   }
  }
 } while(0);
 __ZN3std2io5Write9write_all17h742216584040a17aE($_5$i,$_12,$len$2$i);
 $45 = HEAP32[$_5$i>>2]|0;
 $switch3$i = ($45|0)==(1);
 if (!($switch3$i)) {
  $_0$sroa$0$062$i = 0;
  STACKTOP = sp;return ($_0$sroa$0$062$i|0);
 }
 $e$sroa$0$0$$sroa_idx33$i = ((($_5$i)) + 4|0);
 $46 = $e$sroa$0$0$$sroa_idx33$i;
 $47 = $46;
 $48 = HEAP32[$47>>2]|0;
 $49 = (($46) + 4)|0;
 $50 = $49;
 $51 = HEAP32[$50>>2]|0;
 $52 = ((($0)) + 4|0);
 $53 = HEAP32[$52>>2]|0;
 $cond$i$i = ($53|0)==(1);
 if ($cond$i$i) {
  $54 = ((($0)) + 8|0);
  $55 = HEAP32[$54>>2]|0;
  $cond$i$i$i$i = ($55|0)==(1);
  if ($cond$i$i$i$i) {
   $56 = ((($0)) + 12|0);
   $57 = HEAP32[$56>>2]|0;
   $58 = ((($57)) + 4|0);
   $59 = HEAP32[$58>>2]|0;
   $60 = ((($57)) + 8|0);
   $61 = HEAP32[$60>>2]|0;
   $62 = HEAP32[$61>>2]|0;
   __THREW__ = 0;
   invoke_vi($62|0,($59|0));
   $63 = __THREW__; __THREW__ = 0;
   $64 = $63&1;
   if ($64) {
    $73 = ___cxa_find_matching_catch_2()|0;
    $74 = tempRet0;
    HEAP32[$52>>2] = 1;
    $_13$sroa$5$0$$sroa_idx$i = ((($0)) + 8|0);
    $75 = $_13$sroa$5$0$$sroa_idx$i;
    $76 = $75;
    HEAP32[$76>>2] = $48;
    $77 = (($75) + 4)|0;
    $78 = $77;
    HEAP32[$78>>2] = $51;
    ___resumeException($73|0);
    // unreachable;
   }
   $65 = HEAP32[$60>>2]|0;
   $66 = ((($65)) + 4|0);
   $67 = HEAP32[$66>>2]|0;
   $68 = ($67|0)==(0);
   if (!($68)) {
    _free($59);
   }
   _free($57);
  }
 }
 HEAP32[$52>>2] = 1;
 $_13$sroa$5$0$$sroa_idx26$i = ((($0)) + 8|0);
 $69 = $_13$sroa$5$0$$sroa_idx26$i;
 $70 = $69;
 HEAP32[$70>>2] = $48;
 $71 = (($69) + 4)|0;
 $72 = $71;
 HEAP32[$72>>2] = $51;
 $_0$sroa$0$062$i = 1;
 STACKTOP = sp;return ($_0$sroa$0$062$i|0);
}
function __ZN4core3fmt5Write9write_fmt17h6b5f1c5c12287f92E($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $_10 = 0, $_8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $_8 = sp + 24|0;
 $_10 = sp;
 HEAP32[$_8>>2] = $0;
 ;HEAP32[$_10>>2]=HEAP32[$1>>2]|0;HEAP32[$_10+4>>2]=HEAP32[$1+4>>2]|0;HEAP32[$_10+8>>2]=HEAP32[$1+8>>2]|0;HEAP32[$_10+12>>2]=HEAP32[$1+12>>2]|0;HEAP32[$_10+16>>2]=HEAP32[$1+16>>2]|0;HEAP32[$_10+20>>2]=HEAP32[$1+20>>2]|0;
 $2 = (__ZN4core3fmt5write17hdd089a59fed6a1dbE($_8,1680,$_10)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZN96__LT_core__fmt__Write__write_fmt__Adapter_LT__u27_a_C__u20_T_GT__u20_as_u20_core__fmt__Write_GT_9write_str17ha78e61039551424cE($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $_0$sroa$0$062$i = 0, $_13$sroa$5$0$$sroa_idx$i = 0, $_13$sroa$5$0$$sroa_idx26$i = 0, $_5$i = 0, $cond$i$i = 0;
 var $cond$i$i$i$i = 0, $e$sroa$0$0$$sroa_idx33$i = 0, $switch3$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $_5$i = sp;
 $3 = HEAP32[$0>>2]|0;
 __ZN3std2io5Write9write_all17h742216584040a17aE($_5$i,$1,$2);
 $4 = HEAP32[$_5$i>>2]|0;
 $switch3$i = ($4|0)==(1);
 if (!($switch3$i)) {
  $_0$sroa$0$062$i = 0;
  STACKTOP = sp;return ($_0$sroa$0$062$i|0);
 }
 $e$sroa$0$0$$sroa_idx33$i = ((($_5$i)) + 4|0);
 $5 = $e$sroa$0$0$$sroa_idx33$i;
 $6 = $5;
 $7 = HEAP32[$6>>2]|0;
 $8 = (($5) + 4)|0;
 $9 = $8;
 $10 = HEAP32[$9>>2]|0;
 $11 = ((($3)) + 4|0);
 $12 = HEAP32[$11>>2]|0;
 $cond$i$i = ($12|0)==(1);
 if ($cond$i$i) {
  $13 = ((($3)) + 8|0);
  $14 = HEAP32[$13>>2]|0;
  $cond$i$i$i$i = ($14|0)==(1);
  if ($cond$i$i$i$i) {
   $15 = ((($3)) + 12|0);
   $16 = HEAP32[$15>>2]|0;
   $17 = ((($16)) + 4|0);
   $18 = HEAP32[$17>>2]|0;
   $19 = ((($16)) + 8|0);
   $20 = HEAP32[$19>>2]|0;
   $21 = HEAP32[$20>>2]|0;
   __THREW__ = 0;
   invoke_vi($21|0,($18|0));
   $22 = __THREW__; __THREW__ = 0;
   $23 = $22&1;
   if ($23) {
    $32 = ___cxa_find_matching_catch_2()|0;
    $33 = tempRet0;
    HEAP32[$11>>2] = 1;
    $_13$sroa$5$0$$sroa_idx$i = ((($3)) + 8|0);
    $34 = $_13$sroa$5$0$$sroa_idx$i;
    $35 = $34;
    HEAP32[$35>>2] = $7;
    $36 = (($34) + 4)|0;
    $37 = $36;
    HEAP32[$37>>2] = $10;
    ___resumeException($32|0);
    // unreachable;
   }
   $24 = HEAP32[$19>>2]|0;
   $25 = ((($24)) + 4|0);
   $26 = HEAP32[$25>>2]|0;
   $27 = ($26|0)==(0);
   if (!($27)) {
    _free($18);
   }
   _free($16);
  }
 }
 HEAP32[$11>>2] = 1;
 $_13$sroa$5$0$$sroa_idx26$i = ((($3)) + 8|0);
 $28 = $_13$sroa$5$0$$sroa_idx26$i;
 $29 = $28;
 HEAP32[$29>>2] = $7;
 $30 = (($28) + 4)|0;
 $31 = $30;
 HEAP32[$31>>2] = $10;
 $_0$sroa$0$062$i = 1;
 STACKTOP = sp;return ($_0$sroa$0$062$i|0);
}
function __ZN96__LT_core__fmt__Write__write_fmt__Adapter_LT__u27_a_C__u20_T_GT__u20_as_u20_core__fmt__Write_GT_10write_char17h7ac0dae9cc3780cdE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $9 = 0, $_0$sroa$0$062$i = 0, $_12$i = 0;
 var $_13$sroa$5$0$$sroa_idx$i = 0, $_13$sroa$5$0$$sroa_idx26$i = 0, $_5$i = 0, $cond$i$i = 0, $cond$i$i$i$i = 0, $e$sroa$0$0$$sroa_idx33$i = 0, $len$2$i = 0, $switch3$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $_5$i = sp;
 $_12$i = sp + 12|0;
 $2 = HEAP32[$0>>2]|0;
 HEAP32[$_12$i>>2] = 0;
 $3 = ($1>>>0)<(128);
 do {
  if ($3) {
   $4 = $1&255;
   HEAP8[$_12$i>>0] = $4;
   $len$2$i = 1;
  } else {
   $5 = ($1>>>0)<(2048);
   if ($5) {
    $6 = $1 >>> 6;
    $7 = $6 & 31;
    $8 = $7&255;
    $9 = $8 | -64;
    HEAP8[$_12$i>>0] = $9;
    $10 = $1 & 63;
    $11 = $10&255;
    $12 = ((($_12$i)) + 1|0);
    $13 = $11 | -128;
    HEAP8[$12>>0] = $13;
    $len$2$i = 2;
    break;
   }
   $14 = ($1>>>0)<(65536);
   if ($14) {
    $15 = $1 >>> 12;
    $16 = $15 & 15;
    $17 = $16&255;
    $18 = $17 | -32;
    HEAP8[$_12$i>>0] = $18;
    $19 = $1 >>> 6;
    $20 = $19 & 63;
    $21 = $20&255;
    $22 = ((($_12$i)) + 1|0);
    $23 = $21 | -128;
    HEAP8[$22>>0] = $23;
    $24 = $1 & 63;
    $25 = $24&255;
    $26 = ((($_12$i)) + 2|0);
    $27 = $25 | -128;
    HEAP8[$26>>0] = $27;
    $len$2$i = 3;
    break;
   } else {
    $28 = $1 >>> 18;
    $29 = $28 & 7;
    $30 = $29&255;
    $31 = $30 | -16;
    HEAP8[$_12$i>>0] = $31;
    $32 = $1 >>> 12;
    $33 = $32 & 63;
    $34 = $33&255;
    $35 = ((($_12$i)) + 1|0);
    $36 = $34 | -128;
    HEAP8[$35>>0] = $36;
    $37 = $1 >>> 6;
    $38 = $37 & 63;
    $39 = $38&255;
    $40 = ((($_12$i)) + 2|0);
    $41 = $39 | -128;
    HEAP8[$40>>0] = $41;
    $42 = $1 & 63;
    $43 = $42&255;
    $44 = ((($_12$i)) + 3|0);
    $45 = $43 | -128;
    HEAP8[$44>>0] = $45;
    $len$2$i = 4;
    break;
   }
  }
 } while(0);
 __ZN3std2io5Write9write_all17h742216584040a17aE($_5$i,$_12$i,$len$2$i);
 $46 = HEAP32[$_5$i>>2]|0;
 $switch3$i = ($46|0)==(1);
 if (!($switch3$i)) {
  $_0$sroa$0$062$i = 0;
  STACKTOP = sp;return ($_0$sroa$0$062$i|0);
 }
 $e$sroa$0$0$$sroa_idx33$i = ((($_5$i)) + 4|0);
 $47 = $e$sroa$0$0$$sroa_idx33$i;
 $48 = $47;
 $49 = HEAP32[$48>>2]|0;
 $50 = (($47) + 4)|0;
 $51 = $50;
 $52 = HEAP32[$51>>2]|0;
 $53 = ((($2)) + 4|0);
 $54 = HEAP32[$53>>2]|0;
 $cond$i$i = ($54|0)==(1);
 if ($cond$i$i) {
  $55 = ((($2)) + 8|0);
  $56 = HEAP32[$55>>2]|0;
  $cond$i$i$i$i = ($56|0)==(1);
  if ($cond$i$i$i$i) {
   $57 = ((($2)) + 12|0);
   $58 = HEAP32[$57>>2]|0;
   $59 = ((($58)) + 4|0);
   $60 = HEAP32[$59>>2]|0;
   $61 = ((($58)) + 8|0);
   $62 = HEAP32[$61>>2]|0;
   $63 = HEAP32[$62>>2]|0;
   __THREW__ = 0;
   invoke_vi($63|0,($60|0));
   $64 = __THREW__; __THREW__ = 0;
   $65 = $64&1;
   if ($65) {
    $74 = ___cxa_find_matching_catch_2()|0;
    $75 = tempRet0;
    HEAP32[$53>>2] = 1;
    $_13$sroa$5$0$$sroa_idx$i = ((($2)) + 8|0);
    $76 = $_13$sroa$5$0$$sroa_idx$i;
    $77 = $76;
    HEAP32[$77>>2] = $49;
    $78 = (($76) + 4)|0;
    $79 = $78;
    HEAP32[$79>>2] = $52;
    ___resumeException($74|0);
    // unreachable;
   }
   $66 = HEAP32[$61>>2]|0;
   $67 = ((($66)) + 4|0);
   $68 = HEAP32[$67>>2]|0;
   $69 = ($68|0)==(0);
   if (!($69)) {
    _free($60);
   }
   _free($58);
  }
 }
 HEAP32[$53>>2] = 1;
 $_13$sroa$5$0$$sroa_idx26$i = ((($2)) + 8|0);
 $70 = $_13$sroa$5$0$$sroa_idx26$i;
 $71 = $70;
 HEAP32[$71>>2] = $49;
 $72 = (($70) + 4)|0;
 $73 = $72;
 HEAP32[$73>>2] = $52;
 $_0$sroa$0$062$i = 1;
 STACKTOP = sp;return ($_0$sroa$0$062$i|0);
}
function __ZN96__LT_core__fmt__Write__write_fmt__Adapter_LT__u27_a_C__u20_T_GT__u20_as_u20_core__fmt__Write_GT_9write_fmt17h72ce8e47fdce202eE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $_10$i = 0, $_8$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $_8$i = sp + 24|0;
 $_10$i = sp;
 $2 = HEAP32[$0>>2]|0;
 HEAP32[$_8$i>>2] = $2;
 ;HEAP32[$_10$i>>2]=HEAP32[$1>>2]|0;HEAP32[$_10$i+4>>2]=HEAP32[$1+4>>2]|0;HEAP32[$_10$i+8>>2]=HEAP32[$1+8>>2]|0;HEAP32[$_10$i+12>>2]=HEAP32[$1+12>>2]|0;HEAP32[$_10$i+16>>2]=HEAP32[$1+16>>2]|0;HEAP32[$_10$i+20>>2]=HEAP32[$1+20>>2]|0;
 $3 = (__ZN4core3fmt5write17hdd089a59fed6a1dbE($_8$i,1680,$_10$i)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN3std2io5Write9write_all17h742216584040a17aE($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$sroa_idx = 0, $$sroa_idx75 = 0, $$sroa_idx80 = 0, $$sroa_idx81 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $buf$sroa$0$0$ph167 = 0, $buf$sroa$8$0$ph168 = 0, $cond160 = 0, $x$i$sroa$4$0$$sroa_raw_idx$i = 0, $x$i$sroa$4$i = 0, $x$i$sroa$5$0$$sroa_idx$i = 0, $x$i$sroa$6$0$$sroa_idx$i = 0, $x$sroa$0$i$i$i$i$i$sroa$4$0$$sroa_idx = 0, $x$sroa$0$i$i$i$i$i$sroa$5$0$$sroa_idx = 0, dest = 0, label = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $x$i$sroa$4$i = sp;
 $3 = ($2|0)==(0);
 L1: do {
  if (!($3)) {
   $buf$sroa$0$0$ph167 = $1;$buf$sroa$8$0$ph168 = $2;
   L2: while(1) {
    L4: while(1) {
     $4 = (_write(2,$buf$sroa$0$0$ph167,$buf$sroa$8$0$ph168)|0);
     switch ($4|0) {
     case 0:  {
      label = 5;
      break L2;
      break;
     }
     case -1:  {
      break;
     }
     default: {
      break L4;
     }
     }
     $12 = (___errno_location()|0);
     $13 = HEAP32[$12>>2]|0;
     $cond160 = ($13|0)==(4);
     if (!($cond160)) {
      label = 16;
      break L2;
     }
    }
    $14 = ($buf$sroa$8$0$ph168>>>0)<($4>>>0);
    if ($14) {
     label = 13;
     break;
    }
    $16 = (($buf$sroa$0$0$ph167) + ($4)|0);
    $17 = (($buf$sroa$8$0$ph168) - ($4))|0;
    $18 = ($17|0)==(0);
    if ($18) {
     break L1;
    } else {
     $buf$sroa$0$0$ph167 = $16;$buf$sroa$8$0$ph168 = $17;
    }
   }
   if ((label|0) == 5) {
    $5 = (_malloc(28)|0);
    $6 = ($5|0)==(0|0);
    if ($6) {
     __ZN5alloc3oom3oom17hb253cf665793f59eE();
     // unreachable;
    }
    dest=$5; src=18654; stop=dest+28|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
    $7 = (_malloc(12)|0);
    $8 = ($7|0)==(0|0);
    if ($8) {
     __ZN5alloc3oom3oom17hb253cf665793f59eE();
     // unreachable;
    }
    $9 = $5;
    HEAP32[$7>>2] = $9;
    $x$sroa$0$i$i$i$i$i$sroa$4$0$$sroa_idx = ((($7)) + 4|0);
    HEAP32[$x$sroa$0$i$i$i$i$i$sroa$4$0$$sroa_idx>>2] = 28;
    $x$sroa$0$i$i$i$i$i$sroa$5$0$$sroa_idx = ((($7)) + 8|0);
    HEAP32[$x$sroa$0$i$i$i$i$i$sroa$5$0$$sroa_idx>>2] = 28;
    $10 = (_malloc(12)|0);
    $11 = ($10|0)==(0|0);
    if ($11) {
     __ZN5alloc3oom3oom17hb253cf665793f59eE();
     // unreachable;
    }
    HEAP8[$10>>0] = 14;
    $x$i$sroa$4$0$$sroa_raw_idx$i = ((($10)) + 1|0);
    ;HEAP8[$x$i$sroa$4$0$$sroa_raw_idx$i>>0]=HEAP8[$x$i$sroa$4$i>>0]|0;HEAP8[$x$i$sroa$4$0$$sroa_raw_idx$i+1>>0]=HEAP8[$x$i$sroa$4$i+1>>0]|0;HEAP8[$x$i$sroa$4$0$$sroa_raw_idx$i+2>>0]=HEAP8[$x$i$sroa$4$i+2>>0]|0;
    $x$i$sroa$5$0$$sroa_idx$i = ((($10)) + 4|0);
    HEAP32[$x$i$sroa$5$0$$sroa_idx$i>>2] = $7;
    $x$i$sroa$6$0$$sroa_idx$i = ((($10)) + 8|0);
    HEAP32[$x$i$sroa$6$0$$sroa_idx$i>>2] = 1632;
    $15 = $10;
    HEAP32[$0>>2] = 1;
    $$sroa_idx = ((($0)) + 4|0);
    HEAP32[$$sroa_idx>>2] = 1;
    $$sroa_idx75 = ((($0)) + 8|0);
    HEAP32[$$sroa_idx75>>2] = $15;
    STACKTOP = sp;return;
   }
   else if ((label|0) == 13) {
    __ZN4core5slice22slice_index_order_fail17h0bf73460ffe8be02E($4,$buf$sroa$8$0$ph168);
    // unreachable;
   }
   else if ((label|0) == 16) {
    HEAP32[$0>>2] = 1;
    $$sroa_idx80 = ((($0)) + 4|0);
    HEAP32[$$sroa_idx80>>2] = 0;
    $$sroa_idx81 = ((($0)) + 8|0);
    HEAP32[$$sroa_idx81>>2] = $13;
    STACKTOP = sp;return;
   }
  }
 } while(0);
 HEAP32[$0>>2] = 0;
 STACKTOP = sp;return;
}
function __ZN55__LT__RF__u27_a_u20_T_u20_as_u20_core__fmt__Display_GT_3fmt17h0070a87612600aa5E_1338($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[$0>>2]|0;
 $3 = ((($0)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (__ZN4core3fmt9Formatter3pad17hd3e8d63fceae72f6E($1,$2,$4)|0);
 return ($5|0);
}
function __ZN3std3sys9backtrace7tracing3imp5write17hdd1599e8e3007b64E($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $_10 = 0, $_28$sroa$0$0$$sroa_idx = 0, $_28$sroa$4$0$$sroa_idx = 0, $_3$sroa$0$0$$sroa_idx3$i = 0;
 var $_44$sroa$4$0$$sroa_idx98 = 0, $_6$sroa$0$0$$sroa_idx$i = 0, $_8 = 0, $brmerge = 0, $cond = 0, $cond$i$i = 0, $cx = 0, $or$cond = 0, $ret$sroa$0$0 = 0, $self$i$sroa$0$0$copyload = 0, $self$i$sroa$4$0$$sroa_idx127 = 0, $self$i$sroa$4$0$copyload = 0, $self$i$sroa$5$0$$sroa_idx129 = 0, $self$i$sroa$5$0$copyload = 0, $switch3$i = 0, $switch6 = 0, $switch7$not = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $_8 = sp + 48|0;
 $_10 = sp + 24|0;
 $cx = sp;
 (_pthread_mutex_lock(((26528)|0))|0);
 HEAP32[$_10>>2] = 5988;
 $3 = ((($_10)) + 4|0);
 HEAP32[$3>>2] = 1;
 $_6$sroa$0$0$$sroa_idx$i = ((($_10)) + 8|0);
 HEAP32[$_6$sroa$0$0$$sroa_idx$i>>2] = 0;
 $4 = ((($_10)) + 16|0);
 HEAP32[$4>>2] = 26744;
 $5 = ((($_10)) + 20|0);
 HEAP32[$5>>2] = 0;
 $6 = ((($2)) + 24|0);
 $7 = HEAP32[$6>>2]|0;
 FUNCTION_TABLE_viii[$7 & 511]($_8,$1,$_10);
 $self$i$sroa$0$0$copyload = HEAP32[$_8>>2]|0;
 $switch3$i = ($self$i$sroa$0$0$copyload|0)==(1);
 if ($switch3$i) {
  $self$i$sroa$5$0$$sroa_idx129 = ((($_8)) + 8|0);
  $self$i$sroa$5$0$copyload = HEAP32[$self$i$sroa$5$0$$sroa_idx129>>2]|0;
  $self$i$sroa$4$0$$sroa_idx127 = ((($_8)) + 4|0);
  $self$i$sroa$4$0$copyload = HEAP32[$self$i$sroa$4$0$$sroa_idx127>>2]|0;
  HEAP32[$0>>2] = 1;
  $_3$sroa$0$0$$sroa_idx3$i = ((($0)) + 4|0);
  $8 = $_3$sroa$0$0$$sroa_idx3$i;
  $9 = $8;
  HEAP32[$9>>2] = $self$i$sroa$4$0$copyload;
  $10 = (($8) + 4)|0;
  $11 = $10;
  HEAP32[$11>>2] = $self$i$sroa$5$0$copyload;
  STACKTOP = sp;return;
 }
 HEAP32[$cx>>2] = 0;
 $12 = ((($cx)) + 4|0);
 HEAP32[$12>>2] = $1;
 $13 = ((($cx)) + 8|0);
 HEAP32[$13>>2] = $2;
 $_28$sroa$0$0$$sroa_idx = ((($cx)) + 12|0);
 HEAP32[$_28$sroa$0$0$$sroa_idx>>2] = 0;
 $_28$sroa$4$0$$sroa_idx = ((($cx)) + 16|0);
 $14 = (__Unwind_Backtrace((358|0),($cx|0))|0);
 $cond = ($14|0)==(0);
 $15 = HEAP32[$_28$sroa$0$0$$sroa_idx>>2]|0;
 $switch6 = ($15|0)==(1);
 $or$cond = $cond & $switch6;
 $16 = $_28$sroa$4$0$$sroa_idx;
 $17 = $16;
 $18 = HEAP32[$17>>2]|0;
 $19 = (($16) + 4)|0;
 $20 = $19;
 $21 = HEAP32[$20>>2]|0;
 $ret$sroa$0$0 = $or$cond&1;
 (_pthread_mutex_unlock(((26528)|0))|0);
 HEAP32[$0>>2] = $ret$sroa$0$0;
 $_44$sroa$4$0$$sroa_idx98 = ((($0)) + 4|0);
 $22 = $_44$sroa$4$0$$sroa_idx98;
 $23 = $22;
 HEAP32[$23>>2] = $18;
 $24 = (($22) + 4)|0;
 $25 = $24;
 HEAP32[$25>>2] = $21;
 $26 = HEAP32[$_28$sroa$0$0$$sroa_idx>>2]|0;
 $switch7$not = ($26|0)!=(1);
 $brmerge = $or$cond | $switch7$not;
 if (!($brmerge)) {
  $27 = HEAP32[$_28$sroa$4$0$$sroa_idx>>2]|0;
  $cond$i$i = ($27|0)==(1);
  if ($cond$i$i) {
   $28 = ((($cx)) + 20|0);
   $29 = HEAP32[$28>>2]|0;
   $30 = ((($29)) + 4|0);
   $31 = HEAP32[$30>>2]|0;
   $32 = ((($29)) + 8|0);
   $33 = HEAP32[$32>>2]|0;
   $34 = HEAP32[$33>>2]|0;
   FUNCTION_TABLE_vi[$34 & 511]($31);
   $35 = HEAP32[$32>>2]|0;
   $36 = ((($35)) + 4|0);
   $37 = HEAP32[$36>>2]|0;
   $38 = ($37|0)==(0);
   if (!($38)) {
    _free($31);
   }
   _free($29);
  }
 }
 STACKTOP = sp;return;
}
function __ZN3std3sys9backtrace7tracing3imp5write8trace_fn17hd817d220526b084cE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0;
 var $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $_0$0 = 0, $_0$1 = 0;
 var $_21$i = 0, $_26$i = 0, $_38 = 0, $_40 = 0, $_56 = 0, $_6$sroa$0$0$$sroa_idx$i = 0, $cond$i = 0, $cond$i$i$i = 0, $cond$i$i$i93 = 0, $cond$i92 = 0, $e$sroa$0$0$$sroa_idx73 = 0, $e1$sroa$0$0$$sroa_idx44 = 0, $info$i = 0, $ip$0 = 0, $ip$0$v = 0, $ip_before_insn = 0, $or$cond = 0, $personalityslot$sroa$0$0 = 0, $personalityslot$sroa$6$0 = 0, $switch$i = 0;
 var $switch8 = 0, $switch9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(96|0);
 $info$i = sp + 72|0;
 $_21$i = sp + 64|0;
 $_26$i = sp + 56|0;
 $ip_before_insn = sp + 88|0;
 $_38 = sp + 40|0;
 $_40 = sp + 16|0;
 $_56 = sp;
 HEAP32[$ip_before_insn>>2] = 0;
 $2 = (__Unwind_GetIPInfo(($0|0),($ip_before_insn|0))|0);
 $3 = ($2|0)!=(0);
 $4 = HEAP32[$ip_before_insn>>2]|0;
 $5 = ($4|0)==(0);
 $or$cond = $3 & $5;
 $6 = $or$cond << 31 >> 31;
 $ip$0$v = (($6) + ($2))|0;
 $ip$0 = $ip$0$v;
 (__Unwind_FindEnclosingFunction(($ip$0|0))|0);
 $7 = HEAP32[$1>>2]|0;
 $8 = (($7) + 1)|0;
 HEAP32[$1>>2] = $8;
 $9 = ($8|0)<(1);
 do {
  if ($9) {
   $_0$1 = 0;
  } else {
   $10 = ($8|0)>(100);
   if ($10) {
    $11 = ((($1)) + 4|0);
    $12 = HEAP32[$11>>2]|0;
    $13 = ((($1)) + 8|0);
    $14 = HEAP32[$13>>2]|0;
    HEAP32[$_40>>2] = 5996;
    $15 = ((($_40)) + 4|0);
    HEAP32[$15>>2] = 1;
    $_6$sroa$0$0$$sroa_idx$i = ((($_40)) + 8|0);
    HEAP32[$_6$sroa$0$0$$sroa_idx$i>>2] = 0;
    $16 = ((($_40)) + 16|0);
    HEAP32[$16>>2] = 26744;
    $17 = ((($_40)) + 20|0);
    HEAP32[$17>>2] = 0;
    $18 = ((($14)) + 24|0);
    $19 = HEAP32[$18>>2]|0;
    FUNCTION_TABLE_viii[$19 & 511]($_38,$12,$_40);
    $20 = HEAP32[$_38>>2]|0;
    $switch8 = ($20|0)==(1);
    if ($switch8) {
     $e$sroa$0$0$$sroa_idx73 = ((($_38)) + 4|0);
     $23 = $e$sroa$0$0$$sroa_idx73;
     $24 = $23;
     $25 = HEAP32[$24>>2]|0;
     $26 = (($23) + 4)|0;
     $27 = $26;
     $28 = HEAP32[$27>>2]|0;
     $29 = ((($1)) + 12|0);
     $30 = HEAP32[$29>>2]|0;
     $cond$i = ($30|0)==(1);
     $31 = ((($1)) + 16|0);
     if ($cond$i) {
      $32 = HEAP32[$31>>2]|0;
      $cond$i$i$i = ($32|0)==(1);
      if ($cond$i$i$i) {
       $33 = ((($1)) + 20|0);
       $34 = HEAP32[$33>>2]|0;
       $35 = ((($34)) + 4|0);
       $36 = HEAP32[$35>>2]|0;
       $37 = ((($34)) + 8|0);
       $38 = HEAP32[$37>>2]|0;
       $39 = HEAP32[$38>>2]|0;
       __THREW__ = 0;
       invoke_vi($39|0,($36|0));
       $40 = __THREW__; __THREW__ = 0;
       $41 = $40&1;
       if ($41) {
        $94 = ___cxa_find_matching_catch_2()|0;
        $95 = tempRet0;
        HEAP32[$29>>2] = 1;
        $96 = $31;
        $97 = $96;
        HEAP32[$97>>2] = $25;
        $98 = (($96) + 4)|0;
        $99 = $98;
        HEAP32[$99>>2] = $28;
        $personalityslot$sroa$0$0 = $94;$personalityslot$sroa$6$0 = $95;
        ___resumeException($personalityslot$sroa$0$0|0);
        // unreachable;
       }
       $42 = HEAP32[$37>>2]|0;
       $43 = ((($42)) + 4|0);
       $44 = HEAP32[$43>>2]|0;
       $45 = ($44|0)==(0);
       if (!($45)) {
        _free($36);
       }
       _free($34);
      }
     }
     HEAP32[$29>>2] = 1;
     $46 = $31;
     $47 = $46;
     HEAP32[$47>>2] = $25;
     $48 = (($46) + 4)|0;
     $49 = $48;
     HEAP32[$49>>2] = $28;
    }
    $_0$1 = 9;
    break;
   }
   $21 = ((($1)) + 12|0);
   $22 = HEAP32[$21>>2]|0;
   $switch$i = ($22|0)==(1);
   if ($switch$i) {
    $_0$1 = 9;
   } else {
    $50 = ((($1)) + 4|0);
    $51 = HEAP32[$50>>2]|0;
    $52 = ((($1)) + 8|0);
    $53 = HEAP32[$52>>2]|0;
    ;HEAP32[$info$i>>2]=0|0;HEAP32[$info$i+4>>2]=0|0;HEAP32[$info$i+8>>2]=0|0;HEAP32[$info$i+12>>2]=0|0;
    $54 = (_dladdr(($ip$0|0),($info$i|0))|0);
    $55 = ($54|0)==(0);
    do {
     if ($55) {
      HEAP32[$_21$i>>2] = 0;
      __ZN3std10sys_common9backtrace6output17h9a8cc7ba694e1e15E($_56,$51,$53,$8,$ip$0,$_21$i);
     } else {
      $56 = ((($info$i)) + 8|0);
      $57 = HEAP32[$56>>2]|0;
      $58 = (_strlen($57)|0);
      $59 = ($58|0)==(-1);
      if ($59) {
       __ZN4core5slice20slice_index_len_fail17hed923256c072a803E(-1,0);
       // unreachable;
      } else {
       HEAP32[$_26$i>>2] = $57;
       $60 = ((($_26$i)) + 4|0);
       HEAP32[$60>>2] = $58;
       __ZN3std10sys_common9backtrace6output17h9a8cc7ba694e1e15E($_56,$51,$53,$8,$ip$0,$_26$i);
       break;
      }
     }
    } while(0);
    $61 = HEAP32[$_56>>2]|0;
    $switch9 = ($61|0)==(1);
    if ($switch9) {
     $e1$sroa$0$0$$sroa_idx44 = ((($_56)) + 4|0);
     $62 = $e1$sroa$0$0$$sroa_idx44;
     $63 = $62;
     $64 = HEAP32[$63>>2]|0;
     $65 = (($62) + 4)|0;
     $66 = $65;
     $67 = HEAP32[$66>>2]|0;
     $68 = HEAP32[$21>>2]|0;
     $cond$i92 = ($68|0)==(1);
     $69 = ((($1)) + 16|0);
     if ($cond$i92) {
      $70 = HEAP32[$69>>2]|0;
      $cond$i$i$i93 = ($70|0)==(1);
      if ($cond$i$i$i93) {
       $71 = ((($1)) + 20|0);
       $72 = HEAP32[$71>>2]|0;
       $73 = ((($72)) + 4|0);
       $74 = HEAP32[$73>>2]|0;
       $75 = ((($72)) + 8|0);
       $76 = HEAP32[$75>>2]|0;
       $77 = HEAP32[$76>>2]|0;
       __THREW__ = 0;
       invoke_vi($77|0,($74|0));
       $78 = __THREW__; __THREW__ = 0;
       $79 = $78&1;
       if ($79) {
        $88 = ___cxa_find_matching_catch_2()|0;
        $89 = tempRet0;
        HEAP32[$21>>2] = 1;
        $90 = $69;
        $91 = $90;
        HEAP32[$91>>2] = $64;
        $92 = (($90) + 4)|0;
        $93 = $92;
        HEAP32[$93>>2] = $67;
        $personalityslot$sroa$0$0 = $88;$personalityslot$sroa$6$0 = $89;
        ___resumeException($personalityslot$sroa$0$0|0);
        // unreachable;
       }
       $80 = HEAP32[$75>>2]|0;
       $81 = ((($80)) + 4|0);
       $82 = HEAP32[$81>>2]|0;
       $83 = ($82|0)==(0);
       if (!($83)) {
        _free($74);
       }
       _free($72);
      }
     }
     HEAP32[$21>>2] = 1;
     $84 = $69;
     $85 = $84;
     HEAP32[$85>>2] = $64;
     $86 = (($84) + 4)|0;
     $87 = $86;
     HEAP32[$87>>2] = $67;
    }
    $_0$0 = 0;
    STACKTOP = sp;return ($_0$0|0);
   }
  }
 } while(0);
 $_0$0 = $_0$1;
 STACKTOP = sp;return ($_0$0|0);
}
function __ZN3std10sys_common9backtrace6output17h9a8cc7ba694e1e15E($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$4763$i = 0, $$arith = 0, $$arith7 = 0, $$cast$i$i$i$i = 0, $$lcssa1243 = 0, $$off$i$i = 0, $$off$i47$i$i = 0, $$off$i996$i = 0, $$overflow = 0, $$overflow8 = 0, $$phi$trans$insert$i = 0, $$phi$trans$insert4256$i = 0, $$phi$trans$insert4258$i = 0, $$phi$trans$insert4260$i = 0, $$phi$trans$insert4262$i = 0, $$phi$trans$insert4264$i = 0, $$phi$trans$insert4266$i = 0, $$phi$trans$insert4268$i = 0, $$phi$trans$insert4270$i = 0, $$phi$trans$insert4272$i = 0;
 var $$phi$trans$insert4274$i = 0, $$phi$trans$insert4276$i = 0, $$phi$trans$insert4278$i = 0, $$phi$trans$insert4280$i = 0, $$phi$trans$insert4282$i = 0, $$phi$trans$insert4284$i = 0, $$pre = 0, $$pre$i = 0, $$pre$i$i = 0, $$pre$i1065$ptr$i = 0, $$pre$i1221$i = 0, $$pre$i1247$i = 0, $$pre$i1273$i = 0, $$pre$i1299$i = 0, $$pre$i1333$i = 0, $$pre$i1374$i = 0, $$pre$i1416$i = 0, $$pre$i1450$i = 0, $$pre$i1491$i = 0, $$pre$i1533$i = 0;
 var $$pre$i1567$i = 0, $$pre$i1608$i = 0, $$pre$i1650$i = 0, $$pre$i1684$i = 0, $$pre$i1725$i = 0, $$pre$i1767$i = 0, $$pre$i1801$i = 0, $$pre$i1850$i = 0, $$pre$i1900$i = 0, $$pre$phi$i$i$i$i$iZ2D = 0, $$pre$phi$i$i$i$i870$iZ2D = 0, $$pre$phi$i1455$iZ2D = 0, $$pre$phi$i1496$iZ2D = 0, $$pre$phi$i1538$iZ2D = 0, $$pre$phi$i1572$iZ2D = 0, $$pre$phi$i1613$iZ2D = 0, $$pre$phi$i1655$iZ2D = 0, $$pre$phi$i1689$iZ2D = 0, $$pre$phi$i1730$iZ2D = 0, $$pre$phi$i1772$iZ2D = 0;
 var $$pre$phi$i1806$iZ2D = 0, $$pre$phi$i1855$iZ2D = 0, $$pre$phi$i1905$iZ2D = 0, $$pre$phi$i2894$iZ2D = 0, $$pre4257$i = 0, $$pre4259$i = 0, $$pre4261$i = 0, $$pre4263$i = 0, $$pre4265$i = 0, $$pre4267$i = 0, $$pre4269$i = 0, $$pre4271$i = 0, $$pre4273$i = 0, $$pre4275$i = 0, $$pre4277$i = 0, $$pre4279$i = 0, $$pre4281$i = 0, $$pre4283$i = 0, $$pre4285$i = 0, $$ptr$i = 0;
 var $$sink$i$index = 0, $$sink$i$index2 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0;
 var $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0;
 var $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0;
 var $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0;
 var $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0;
 var $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0;
 var $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0;
 var $298 = 0, $299 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0;
 var $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0;
 var $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0;
 var $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0;
 var $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0;
 var $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0;
 var $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0;
 var $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0;
 var $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0;
 var $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0;
 var $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0;
 var $498 = 0, $499 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0;
 var $516 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0;
 var $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0;
 var $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $_0$0$i10$i$i$i$i = 0, $_0$0$i10$i$i$i$i$i$i = 0, $_0$0$i10$i$i1092$i = 0, $_0$0$i10$i$i988$i = 0, $_0$0$i16$i$i$i$i = 0, $_0$0$i16$i$i$i$i$i$i = 0, $_0$0$i16$i$i1087$i = 0;
 var $_0$0$i16$i$i983$i = 0, $_0$0$i23$i$i$i$i = 0, $_0$0$i23$i$i$i$i$i$i = 0, $_0$0$i23$i$i1082$i = 0, $_0$0$i23$i$i978$i = 0, $_11 = 0, $_114$i = 0, $_13 = 0, $_131$sroa$4$2$ph$i = 0, $_141$i$sroa$0$sroa$9$0 = 0, $_141$i$sroa$0$sroa$9$1 = 0, $_141$i$sroa$0$sroa$9$1$ph = 0, $_141$i$sroa$1417$1 = 0, $_141$i$sroa$1417$1921 = 0, $_141$i$sroa$1417$1921$phi = 0, $_176$sroa$5$2$ph$i = 0, $_18 = 0, $_186$i = 0, $_205$i = 0, $_228$i = 0;
 var $_251$i = 0, $_274$i = 0, $_297$i = 0, $_3$sroa$0$0$$sroa_idx3$i = 0, $_3$sroa$0$0$$sroa_idx3$i123 = 0, $_3$sroa$0$0$$sroa_idx3$i132 = 0, $_320$i = 0, $_343$i = 0, $_366$i = 0, $_389$i = 0, $_4$i$i = 0, $_412$i = 0, $_435$i = 0, $_44$sroa$10$0119$i$i = 0, $_44$sroa$632$0118$i$i = 0, $_458$i = 0, $_481$i = 0, $_50$sroa$29$0$ph$off0 = 0, $_50$sroa$29$0$ph$off32 = 0, $_504$i = 0;
 var $_527$i = 0, $_550$i = 0, $_56$sroa$5$2$ph$i = 0, $_573$i = 0, $_596$i = 0, $_6$sroa$0$0$$sroa_idx$i = 0, $_619$i = 0, $_62 = 0, $_64 = 0, $_640$i = 0, $_657$sroa$0$0$i = 0, $_665$i = 0, $_8$sroa$0$0$$sroa_idx$i = 0, $_8$sroa$4$0$$sroa_idx2$i = 0, $_93$i = 0, $accum$0$lcssa$i$i$i = 0, $accum$010$i$i$i = 0, $addr = 0, $cond$i$i = 0, $cond$i107 = 0;
 var $first$0$off03698$i = 0, $i$0$lcssa$i = 0, $i$03701$i = 0, $idx = 0, $idx$0$i = 0, $inner$sroa$0$1$i = 0, $inner$sroa$0$23699$i = 0, $inner$sroa$12$1$i = 0, $inner$sroa$12$1$in$i = 0, $inner$sroa$12$23700$i = 0, $iter$sroa$0$0$in136$i$i = 0, $iter$sroa$4$09$i$i$i = 0, $not$$i$i$i$i1031$i = 0, $not$$i$i$i$i1164$i = 0, $not$$i$i$i$i1433$i = 0, $not$$i$i$i$i1474$i = 0, $not$$i$i$i$i1508$i = 0, $not$$i$i$i$i1550$i = 0, $not$$i$i$i$i1591$i = 0, $not$$i$i$i$i1625$i = 0;
 var $not$$i$i$i$i1667$i = 0, $not$$i$i$i$i1708$i = 0, $not$$i$i$i$i1742$i = 0, $not$$i$i$i$i1784$i = 0, $not$$i$i1009$i = 0, $not$$i$i1019$i = 0, $not$$i$i1452$i = 0, $not$$i$i1493$i = 0, $not$$i$i1535$i = 0, $not$$i$i1569$i = 0, $not$$i$i1610$i = 0, $not$$i$i1652$i = 0, $not$$i$i1686$i = 0, $not$$i$i1727$i = 0, $not$$i$i1769$i = 0, $not$$i$i1803$i = 0, $not$$i$i1852$i = 0, $not$$i$i1869$i = 0, $not$$i$i1902$i = 0, $or$cond = 0;
 var $or$cond$i$i1008$i = 0, $or$cond$i$i1018$i = 0, $or$cond$i$i1868$i = 0, $or$cond$i$i930$i = 0, $or$cond14$i$i$i = 0, $phitmp$i$i$i$i = 0, $phitmp$i$i$i$i$i$i = 0, $phitmp$i$i1080$i = 0, $phitmp$i$i976$i = 0, $phitmp32$i$i$i$i = 0, $phitmp32$i$i$i$i$i$i = 0, $phitmp32$i$i1085$i = 0, $phitmp32$i$i981$i = 0, $phitmp33$i$i$i$i = 0, $phitmp33$i$i$i$i$i$i = 0, $phitmp33$i$i1090$i = 0, $phitmp33$i$i986$i = 0, $rest$sroa$0$03611$i = 0, $rest$sroa$0$1$be$i = 0, $rest$sroa$0$13621$i = 0;
 var $rest$sroa$82$03612$i = 0, $rest$sroa$82$03612$lcssa3762$i = 0, $rest$sroa$82$1$be$i = 0, $rest$sroa$82$13658$i = 0, $result$0137$i$i = 0, $rhsc$i$i$i$i = 0, $rhsc$i$i$i872$i = 0, $rhsc3028$i = 0, $self$i$sroa$0$0$copyload = 0, $self$i$sroa$0$0$copyload$i = 0, $self$i$sroa$4$0$$sroa_idx260 = 0, $self$i$sroa$4$0$$sroa_idx2759$i = 0, $self$i$sroa$4$0$copyload = 0, $self$i$sroa$4$0$copyload$i = 0, $self$i$sroa$5$0$$sroa_idx262 = 0, $self$i$sroa$5$0$$sroa_idx2761$i = 0, $self$i$sroa$5$0$copyload = 0, $self$i$sroa$5$0$copyload$i = 0, $self$i1114$sroa$0$0$copyload$i = 0, $self$i1114$sroa$4$0$$sroa_idx2769$i = 0;
 var $self$i1114$sroa$4$0$copyload$i = 0, $self$i1114$sroa$5$0$$sroa_idx2771$i = 0, $self$i1114$sroa$5$0$copyload$i = 0, $self$i1121$sroa$0$0$copyload$i = 0, $self$i1121$sroa$4$0$$sroa_idx2774$i = 0, $self$i1121$sroa$4$0$copyload$i = 0, $self$i1121$sroa$5$0$$sroa_idx2776$i = 0, $self$i1121$sroa$5$0$copyload$i = 0, $self$i1188$sroa$0$0$copyload$i = 0, $self$i1188$sroa$4$0$$sroa_idx2779$i = 0, $self$i1188$sroa$4$0$copyload$i = 0, $self$i1188$sroa$5$0$$sroa_idx2781$i = 0, $self$i1188$sroa$5$0$copyload$i = 0, $self$i1230$sroa$0$0$copyload$i = 0, $self$i1230$sroa$4$0$$sroa_idx2784$i = 0, $self$i1230$sroa$4$0$copyload$i = 0, $self$i1230$sroa$5$0$$sroa_idx2786$i = 0, $self$i1230$sroa$5$0$copyload$i = 0, $self$i1256$sroa$0$0$copyload$i = 0, $self$i1256$sroa$4$0$$sroa_idx2789$i = 0;
 var $self$i1256$sroa$4$0$copyload$i = 0, $self$i1256$sroa$5$0$$sroa_idx2791$i = 0, $self$i1256$sroa$5$0$copyload$i = 0, $self$i1282$sroa$0$0$copyload$i = 0, $self$i1282$sroa$4$0$$sroa_idx2794$i = 0, $self$i1282$sroa$4$0$copyload$i = 0, $self$i1282$sroa$5$0$$sroa_idx2796$i = 0, $self$i1282$sroa$5$0$copyload$i = 0, $self$i1308$sroa$0$0$copyload$i = 0, $self$i1308$sroa$4$0$$sroa_idx2799$i = 0, $self$i1308$sroa$4$0$copyload$i = 0, $self$i1308$sroa$5$0$$sroa_idx2801$i = 0, $self$i1308$sroa$5$0$copyload$i = 0, $self$i1342$sroa$0$0$copyload$i = 0, $self$i1342$sroa$4$0$$sroa_idx2804$i = 0, $self$i1342$sroa$4$0$copyload$i = 0, $self$i1342$sroa$5$0$$sroa_idx2806$i = 0, $self$i1342$sroa$5$0$copyload$i = 0, $self$i1383$sroa$0$0$copyload$i = 0, $self$i1383$sroa$4$0$$sroa_idx2809$i = 0;
 var $self$i1383$sroa$4$0$copyload$i = 0, $self$i1383$sroa$5$0$$sroa_idx2811$i = 0, $self$i1383$sroa$5$0$copyload$i = 0, $self$i1425$sroa$0$0$copyload$i = 0, $self$i1425$sroa$4$0$$sroa_idx2814$i = 0, $self$i1425$sroa$4$0$copyload$i = 0, $self$i1425$sroa$5$0$$sroa_idx2816$i = 0, $self$i1425$sroa$5$0$copyload$i = 0, $self$i1459$sroa$0$0$copyload$i = 0, $self$i1459$sroa$4$0$$sroa_idx2819$i = 0, $self$i1459$sroa$4$0$copyload$i = 0, $self$i1459$sroa$5$0$$sroa_idx2821$i = 0, $self$i1459$sroa$5$0$copyload$i = 0, $self$i1500$sroa$0$0$copyload$i = 0, $self$i1500$sroa$4$0$$sroa_idx2824$i = 0, $self$i1500$sroa$4$0$copyload$i = 0, $self$i1500$sroa$5$0$$sroa_idx2826$i = 0, $self$i1500$sroa$5$0$copyload$i = 0, $self$i1542$sroa$0$0$copyload$i = 0, $self$i1542$sroa$4$0$$sroa_idx2829$i = 0;
 var $self$i1542$sroa$4$0$copyload$i = 0, $self$i1542$sroa$5$0$$sroa_idx2831$i = 0, $self$i1542$sroa$5$0$copyload$i = 0, $self$i1576$sroa$0$0$copyload$i = 0, $self$i1576$sroa$4$0$$sroa_idx2834$i = 0, $self$i1576$sroa$4$0$copyload$i = 0, $self$i1576$sroa$5$0$$sroa_idx2836$i = 0, $self$i1576$sroa$5$0$copyload$i = 0, $self$i1617$sroa$0$0$copyload$i = 0, $self$i1617$sroa$4$0$$sroa_idx2839$i = 0, $self$i1617$sroa$4$0$copyload$i = 0, $self$i1617$sroa$5$0$$sroa_idx2841$i = 0, $self$i1617$sroa$5$0$copyload$i = 0, $self$i1659$sroa$0$0$copyload$i = 0, $self$i1659$sroa$4$0$$sroa_idx2844$i = 0, $self$i1659$sroa$4$0$copyload$i = 0, $self$i1659$sroa$5$0$$sroa_idx2846$i = 0, $self$i1659$sroa$5$0$copyload$i = 0, $self$i1693$sroa$0$0$copyload$i = 0, $self$i1693$sroa$4$0$$sroa_idx2849$i = 0;
 var $self$i1693$sroa$4$0$copyload$i = 0, $self$i1693$sroa$5$0$$sroa_idx2851$i = 0, $self$i1693$sroa$5$0$copyload$i = 0, $self$i1734$sroa$0$0$copyload$i = 0, $self$i1734$sroa$4$0$$sroa_idx2854$i = 0, $self$i1734$sroa$4$0$copyload$i = 0, $self$i1734$sroa$5$0$$sroa_idx2856$i = 0, $self$i1734$sroa$5$0$copyload$i = 0, $self$i1776$sroa$0$0$copyload$i = 0, $self$i1776$sroa$4$0$$sroa_idx2859$i = 0, $self$i1776$sroa$4$0$copyload$i = 0, $self$i1776$sroa$5$0$$sroa_idx2861$i = 0, $self$i1776$sroa$5$0$copyload$i = 0, $self$i1810$sroa$0$0$copyload$i = 0, $self$i1810$sroa$4$0$$sroa_idx2864$i = 0, $self$i1810$sroa$4$0$copyload$i = 0, $self$i1810$sroa$5$0$$sroa_idx2866$i = 0, $self$i1810$sroa$5$0$copyload$i = 0, $self$i1825$sroa$0$0$copyload$i = 0, $self$i1825$sroa$4$0$$sroa_idx2869$i = 0;
 var $self$i1825$sroa$4$0$copyload$i = 0, $self$i1825$sroa$5$0$$sroa_idx2871$i = 0, $self$i1825$sroa$5$0$copyload$i = 0, $self$i1875$sroa$0$0$copyload$i = 0, $self$i1875$sroa$4$0$$sroa_idx2874$i = 0, $self$i1875$sroa$4$0$copyload$i = 0, $self$i1875$sroa$5$0$$sroa_idx2876$i = 0, $self$i1875$sroa$5$0$copyload$i = 0, $self$i946$sroa$0$0$copyload$i = 0, $self$i946$sroa$4$0$$sroa_idx2764$i = 0, $self$i946$sroa$4$0$copyload$i = 0, $self$i946$sroa$5$0$$sroa_idx2766$i = 0, $self$i946$sroa$5$0$copyload$i = 0, $self$i99$sroa$0$0$copyload = 0, $self$i99$sroa$4$0$$sroa_idx265 = 0, $self$i99$sroa$4$0$copyload = 0, $self$i99$sroa$5$0$$sroa_idx267 = 0, $self$i99$sroa$5$0$copyload = 0, $self$sroa$0$0$copyload$i$i$i = 0, $self$sroa$5$0$copyload9$i$i$i = 0;
 var $self$sroa$6$0$$sroa_idx7$i$i$i = 0, $self$sroa$6$0$copyload$i$i$i = 0, $switch1$i$i$i = 0, $switch16tmp = 0, $switch2tmp$i = 0, $switch3$i = 0, $switch3$i$i = 0, $switch3$i100 = 0, $switch3$i1115$i = 0, $switch3$i1122$i = 0, $switch3$i1189$i = 0, $switch3$i1231$i = 0, $switch3$i1257$i = 0, $switch3$i1283$i = 0, $switch3$i1309$i = 0, $switch3$i1343$i = 0, $switch3$i1384$i = 0, $switch3$i1426$i = 0, $switch3$i1460$i = 0, $switch3$i1501$i = 0;
 var $switch3$i1543$i = 0, $switch3$i1577$i = 0, $switch3$i1618$i = 0, $switch3$i1660$i = 0, $switch3$i1694$i = 0, $switch3$i1735$i = 0, $switch3$i1777$i = 0, $switch3$i1811$i = 0, $switch3$i1826$i = 0, $switch3$i1876$i = 0, $switch3$i947$i = 0, $trunc$i$i$i = 0, $trunc$i$i$i$clear = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 512|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(512|0);
 $_93$i = sp + 488|0;
 $_114$i = sp + 472|0;
 $_186$i = sp + 456|0;
 $_205$i = sp + 440|0;
 $_228$i = sp + 424|0;
 $_251$i = sp + 408|0;
 $_274$i = sp + 392|0;
 $_297$i = sp + 376|0;
 $_320$i = sp + 360|0;
 $_343$i = sp + 344|0;
 $_366$i = sp + 328|0;
 $_389$i = sp + 312|0;
 $_412$i = sp + 296|0;
 $_435$i = sp + 280|0;
 $_458$i = sp + 264|0;
 $_481$i = sp + 248|0;
 $_504$i = sp + 232|0;
 $_527$i = sp + 216|0;
 $_550$i = sp + 200|0;
 $_573$i = sp + 184|0;
 $_596$i = sp + 168|0;
 $_619$i = sp + 152|0;
 $_640$i = sp + 136|0;
 $_665$i = sp + 120|0;
 $_4$i$i = sp + 104|0;
 $idx = sp + 504|0;
 $addr = sp + 500|0;
 $_11 = sp + 88|0;
 $_13 = sp + 64|0;
 $_18 = sp + 40|0;
 $_62 = sp + 24|0;
 $_64 = sp;
 HEAP32[$idx>>2] = $3;
 HEAP32[$addr>>2] = $4;
 $6 = $5;
 $7 = $6;
 $8 = HEAP32[$7>>2]|0;
 $9 = (($6) + 4)|0;
 $10 = $9;
 $11 = HEAP32[$10>>2]|0;
 $12 = $idx;
 $13 = $addr;
 HEAP32[$_18>>2] = $12;
 $14 = ((($_18)) + 4|0);
 HEAP32[$14>>2] = (359);
 $15 = ((($_18)) + 8|0);
 HEAP32[$15>>2] = $13;
 $16 = ((($_18)) + 12|0);
 HEAP32[$16>>2] = (360);
 $17 = ((($_18)) + 16|0);
 HEAP32[$17>>2] = (6004);
 $18 = ((($_18)) + 20|0);
 HEAP32[$18>>2] = (361);
 HEAP32[$_13>>2] = 6008;
 $19 = ((($_13)) + 4|0);
 HEAP32[$19>>2] = 3;
 $_8$sroa$0$0$$sroa_idx$i = ((($_13)) + 8|0);
 HEAP32[$_8$sroa$0$0$$sroa_idx$i>>2] = 6032;
 $_8$sroa$4$0$$sroa_idx2$i = ((($_13)) + 12|0);
 HEAP32[$_8$sroa$4$0$$sroa_idx2$i>>2] = 2;
 $20 = ((($_13)) + 16|0);
 HEAP32[$20>>2] = $_18;
 $21 = ((($_13)) + 20|0);
 HEAP32[$21>>2] = 3;
 $22 = ((($2)) + 24|0);
 $23 = HEAP32[$22>>2]|0;
 FUNCTION_TABLE_viii[$23 & 511]($_11,$1,$_13);
 $self$i$sroa$0$0$copyload = HEAP32[$_11>>2]|0;
 $switch3$i = ($self$i$sroa$0$0$copyload|0)==(1);
 L1: do {
  if ($switch3$i) {
   $self$i$sroa$5$0$$sroa_idx262 = ((($_11)) + 8|0);
   $self$i$sroa$5$0$copyload = HEAP32[$self$i$sroa$5$0$$sroa_idx262>>2]|0;
   $self$i$sroa$4$0$$sroa_idx260 = ((($_11)) + 4|0);
   $self$i$sroa$4$0$copyload = HEAP32[$self$i$sroa$4$0$$sroa_idx260>>2]|0;
   HEAP32[$0>>2] = 1;
   $_3$sroa$0$0$$sroa_idx3$i = ((($0)) + 4|0);
   $24 = $_3$sroa$0$0$$sroa_idx3$i;
   $25 = $24;
   HEAP32[$25>>2] = $self$i$sroa$4$0$copyload;
   $26 = (($24) + 4)|0;
   $27 = $26;
   HEAP32[$27>>2] = $self$i$sroa$5$0$copyload;
  } else {
   $switch2tmp$i = ($8|0)==(0);
   L4: do {
    if ($switch2tmp$i) {
     label = 8;
    } else {
     $28 = $8;
     __ZN4core3str9from_utf817hf86f38bfbc8504d1E($_4$i$i,$28,$11);
     $self$sroa$0$0$copyload$i$i$i = HEAP32[$_4$i$i>>2]|0;
     $switch1$i$i$i = ($self$sroa$0$0$copyload$i$i$i|0)==(0);
     $self$sroa$6$0$$sroa_idx7$i$i$i = ((($_4$i$i)) + 8|0);
     $self$sroa$6$0$copyload$i$i$i = HEAP32[$self$sroa$6$0$$sroa_idx7$i$i$i>>2]|0;
     $29 = ((($_4$i$i)) + 4|0);
     $self$sroa$5$0$copyload9$i$i$i = HEAP32[$29>>2]|0;
     if ($switch1$i$i$i) {
      $30 = $self$sroa$5$0$copyload9$i$i$i;
      $switch16tmp = ($self$sroa$5$0$copyload9$i$i$i|0)==(0);
      if ($switch16tmp) {
       label = 8;
      } else {
       $35 = ($self$sroa$6$0$copyload$i$i$i>>>0)>(4);
       do {
        if ($35) {
         $43 = ((($30)) + 3|0);
         $44 = HEAP8[$43>>0]|0;
         $45 = ($44<<24>>24)>(-65);
         if ($45) {
          $46 = ($30|0)==(18735|0);
          if (!($46)) {
           $47 = (_memcmp(18735,$30,3)|0);
           $48 = ($47|0)==(0);
           if (!($48)) {
            label = 25;
            break;
           }
          }
          $38 = (($self$sroa$6$0$copyload$i$i$i) + -1)|0;
          $39 = ($38|0)==(0);
          if ($39) {
           $$pre$phi$i$i$i$i$iZ2D = $30;
          } else {
           $40 = (($30) + ($38)|0);
           $41 = HEAP8[$40>>0]|0;
           $42 = ($41<<24>>24)>(-65);
           if ($42) {
            $$pre$phi$i$i$i$i$iZ2D = $40;
           } else {
            label = 25;
            break;
           }
          }
          $36 = ($$pre$phi$i$i$i$i$iZ2D|0)==(18734|0);
          if (!($36)) {
           $rhsc$i$i$i$i = HEAP8[$$pre$phi$i$i$i$i$iZ2D>>0]|0;
           $37 = ($rhsc$i$i$i$i<<24>>24)==(69);
           if (!($37)) {
            label = 25;
            break;
           }
          }
          $49 = ($38>>>0)<(3);
          if ($49) {
           __ZN4core3str16slice_error_fail17h5f5b915047c27c9dE($30,$self$sroa$6$0$copyload$i$i$i,3,$38);
           // unreachable;
          }
          $50 = (($30) + ($38)|0);
          $51 = HEAP8[$50>>0]|0;
          $52 = ($51<<24>>24)>(-65);
          if ($52) {
           $inner$sroa$0$1$i = $43;$inner$sroa$12$1$in$i = $38;
           label = 30;
          } else {
           __ZN4core3str16slice_error_fail17h5f5b915047c27c9dE($30,$self$sroa$6$0$copyload$i$i$i,3,$38);
           // unreachable;
          }
         } else {
          label = 25;
         }
        } else {
         $53 = ($self$sroa$6$0$copyload$i$i$i|0)==(4);
         if ($53) {
          label = 25;
         } else {
          label = 59;
         }
        }
       } while(0);
       do {
        if ((label|0) == 25) {
         $61 = ((($30)) + 2|0);
         $62 = HEAP8[$61>>0]|0;
         $63 = ($62<<24>>24)>(-65);
         if ($63) {
          $64 = ($30|0)==(18738|0);
          if (!($64)) {
           $65 = (_memcmp(18738,$30,2)|0);
           $66 = ($65|0)==(0);
           if (!($66)) {
            label = 59;
            break;
           }
          }
          $56 = (($self$sroa$6$0$copyload$i$i$i) + -1)|0;
          $57 = ($56|0)==(0);
          if ($57) {
           $$pre$phi$i$i$i$i870$iZ2D = $30;
          } else {
           $58 = (($30) + ($56)|0);
           $59 = HEAP8[$58>>0]|0;
           $60 = ($59<<24>>24)>(-65);
           if ($60) {
            $$pre$phi$i$i$i$i870$iZ2D = $58;
           } else {
            label = 59;
            break;
           }
          }
          $54 = ($$pre$phi$i$i$i$i870$iZ2D|0)==(18734|0);
          if (!($54)) {
           $rhsc$i$i$i872$i = HEAP8[$$pre$phi$i$i$i$i870$iZ2D>>0]|0;
           $55 = ($rhsc$i$i$i872$i<<24>>24)==(69);
           if (!($55)) {
            label = 59;
            break;
           }
          }
          $67 = (($30) + ($56)|0);
          $68 = HEAP8[$67>>0]|0;
          $69 = ($68<<24>>24)>(-65);
          if ($69) {
           $inner$sroa$0$1$i = $61;$inner$sroa$12$1$in$i = $self$sroa$6$0$copyload$i$i$i;
           label = 30;
          } else {
           __ZN4core3str16slice_error_fail17h5f5b915047c27c9dE($30,$self$sroa$6$0$copyload$i$i$i,2,$56);
           // unreachable;
          }
         } else {
          label = 59;
         }
        }
       } while(0);
       L38: do {
        if ((label|0) == 30) {
         $inner$sroa$12$1$i = (($inner$sroa$12$1$in$i) + -3)|0;
         $70 = (($inner$sroa$0$1$i) + ($inner$sroa$12$1$i)|0);
         $71 = $inner$sroa$0$1$i;
         while(1) {
          $72 = ($71|0)==($70|0);
          if ($72) {
           break;
          } else {
           $76 = $71;$i$03701$i = 0;
          }
          while(1) {
           $75 = ((($76)) + 1|0);
           $74 = HEAP8[$76>>0]|0;
           $77 = ($74<<24>>24)>(-1);
           if ($77) {
            $73 = $74&255;
            $113 = $75;$_56$sroa$5$2$ph$i = $73;
           } else {
            $78 = $74 & 31;
            $79 = $78&255;
            $80 = ($75|0)==($70|0);
            if ($80) {
             $87 = $70;$_0$0$i23$i$i$i$i = 0;
            } else {
             $81 = ((($76)) + 2|0);
             $82 = HEAP8[$75>>0]|0;
             $phitmp$i$i$i$i = $82 & 63;
             $87 = $81;$_0$0$i23$i$i$i$i = $phitmp$i$i$i$i;
            }
            $83 = $79 << 6;
            $84 = $_0$0$i23$i$i$i$i&255;
            $85 = $84 | $83;
            $86 = ($74&255)>(223);
            if ($86) {
             $88 = ($87|0)==($70|0);
             if ($88) {
              $97 = $70;$_0$0$i16$i$i$i$i = 0;
             } else {
              $89 = ((($87)) + 1|0);
              $90 = HEAP8[$87>>0]|0;
              $phitmp32$i$i$i$i = $90 & 63;
              $97 = $89;$_0$0$i16$i$i$i$i = $phitmp32$i$i$i$i;
             }
             $91 = $84 << 6;
             $92 = $_0$0$i16$i$i$i$i&255;
             $93 = $92 | $91;
             $94 = $79 << 12;
             $95 = $93 | $94;
             $96 = ($74&255)>(239);
             if ($96) {
              $98 = ($97|0)==($70|0);
              if ($98) {
               $499 = $70;$_0$0$i10$i$i$i$i = 0;
              } else {
               $99 = ((($97)) + 1|0);
               $100 = HEAP8[$97>>0]|0;
               $phitmp33$i$i$i$i = $100 & 63;
               $499 = $99;$_0$0$i10$i$i$i$i = $phitmp33$i$i$i$i;
              }
              $101 = $79 << 18;
              $102 = $101 & 1835008;
              $103 = $93 << 6;
              $104 = $_0$0$i10$i$i$i$i&255;
              $105 = $103 | $102;
              $106 = $105 | $104;
              $113 = $499;$_56$sroa$5$2$ph$i = $106;
             } else {
              $113 = $97;$_56$sroa$5$2$ph$i = $95;
             }
            } else {
             $113 = $87;$_56$sroa$5$2$ph$i = $85;
            }
           }
           $$off$i$i = (($_56$sroa$5$2$ph$i) + -48)|0;
           $107 = ($$off$i$i>>>0)<(10);
           if (!($107)) {
            $108 = ($_56$sroa$5$2$ph$i>>>0)>(127);
            if (!($108)) {
             $$lcssa1243 = $113;$i$0$lcssa$i = $i$03701$i;
             break;
            }
            $109 = (__ZN13rustc_unicode6tables16general_category1N17h2efcec0f2ead4b82E($_56$sroa$5$2$ph$i)|0);
            if (!($109)) {
             $$lcssa1243 = $113;$i$0$lcssa$i = $i$03701$i;
             break;
            }
           }
           $110 = ($i$03701$i*10)|0;
           $111 = (($110) + -48)|0;
           $112 = (($111) + ($_56$sroa$5$2$ph$i))|0;
           $114 = ($113|0)==($70|0);
           if ($114) {
            $$lcssa1243 = $70;$i$0$lcssa$i = $112;
            break;
           } else {
            $76 = $113;$i$03701$i = $112;
           }
          }
          $115 = ($i$0$lcssa$i|0)==(0);
          if ($115) {
           $116 = $$lcssa1243;
           label = 48;
           break;
          }
          $118 = (($i$0$lcssa$i) + -1)|0;
          $119 = ($118|0)==(0);
          L65: do {
           if ($119) {
            $500 = $$lcssa1243;$accum$0$lcssa$i$i$i = 0;
           } else {
            $121 = $$lcssa1243;$accum$010$i$i$i = 0;$iter$sroa$4$09$i$i$i = $118;
            while(1) {
             $120 = (($iter$sroa$4$09$i$i$i) + -1)|0;
             $122 = ($121|0)==($70|0);
             if ($122) {
              $500 = $70;$accum$0$lcssa$i$i$i = $accum$010$i$i$i;
              break L65;
             }
             $123 = ((($121)) + 1|0);
             $124 = HEAP8[$121>>0]|0;
             $125 = ($124<<24>>24)>(-1);
             if ($125) {
              $501 = $123;
             } else {
              $126 = ($123|0)==($70|0);
              if ($126) {
               $501 = $70;
              } else {
               $127 = ((($121)) + 2|0);
               $128 = ($124&255)<(224);
               $129 = ($127|0)==($70|0);
               $or$cond14$i$i$i = $129 | $128;
               if ($or$cond14$i$i$i) {
                $501 = $127;
               } else {
                $130 = ((($121)) + 3|0);
                $131 = ($124&255)<(240);
                $132 = ($130|0)==($70|0);
                $or$cond$i$i930$i = $132 | $131;
                $133 = ((($121)) + 4|0);
                $$4763$i = $or$cond$i$i930$i ? $130 : $133;
                $501 = $$4763$i;
               }
              }
             }
             $134 = (($accum$010$i$i$i) + 1)|0;
             $135 = ($120|0)==(0);
             if ($135) {
              $500 = $501;$accum$0$lcssa$i$i$i = $134;
              break;
             } else {
              $121 = $501;$accum$010$i$i$i = $134;$iter$sroa$4$09$i$i$i = $120;
             }
            }
           }
          } while(0);
          $136 = ($accum$0$lcssa$i$i$i|0)==($118|0);
          if ($136) {
           $71 = $500;
          } else {
           label = 59;
           break L38;
          }
         }
         if ((label|0) == 48) {
          $117 = ($116|0)==($70|0);
          if (!($117)) {
           label = 59;
           break;
          }
         }
         $137 = ($inner$sroa$12$1$i|0)==(0);
         if ($137) {
          break L4;
         }
         $138 = ((($2)) + 20|0);
         $_141$i$sroa$0$sroa$9$0 = 0;$first$0$off03698$i = 1;$inner$sroa$0$23699$i = $inner$sroa$0$1$i;$inner$sroa$12$23700$i = $inner$sroa$12$1$i;
         L79: while(1) {
          if (!($first$0$off03698$i)) {
           $141 = HEAP32[$138>>2]|0;
           FUNCTION_TABLE_viiii[$141 & 511]($_114$i,$1,18740,2);
           $self$i946$sroa$0$0$copyload$i = HEAP32[$_114$i>>2]|0;
           $switch3$i947$i = ($self$i946$sroa$0$0$copyload$i|0)==(1);
           if ($switch3$i947$i) {
            label = 64;
            break;
           }
          }
          $142 = (($inner$sroa$0$23699$i) + ($inner$sroa$12$23700$i)|0);
          $$pre = HEAP8[$inner$sroa$0$23699$i>>0]|0;
          $144 = $$pre;$158 = $142;$rest$sroa$0$03611$i = $inner$sroa$0$23699$i;$rest$sroa$82$03612$i = $inner$sroa$12$23700$i;
          while(1) {
           $145 = ((($rest$sroa$0$03611$i)) + 1|0);
           $146 = ($144<<24>>24)>(-1);
           if ($146) {
            $143 = $144&255;
            $_131$sroa$4$2$ph$i = $143;
           } else {
            $147 = $144 & 31;
            $148 = $147&255;
            $149 = ($rest$sroa$82$03612$i|0)==(1);
            if ($149) {
             $156 = $158;$_0$0$i23$i$i978$i = 0;
            } else {
             $150 = ((($rest$sroa$0$03611$i)) + 2|0);
             $151 = HEAP8[$145>>0]|0;
             $phitmp$i$i976$i = $151 & 63;
             $156 = $150;$_0$0$i23$i$i978$i = $phitmp$i$i976$i;
            }
            $152 = $148 << 6;
            $153 = $_0$0$i23$i$i978$i&255;
            $154 = $153 | $152;
            $155 = ($144&255)>(223);
            if ($155) {
             $157 = ($156|0)==($158|0);
             if ($157) {
              $167 = $158;$_0$0$i16$i$i983$i = 0;
             } else {
              $159 = ((($156)) + 1|0);
              $160 = HEAP8[$156>>0]|0;
              $phitmp32$i$i981$i = $160 & 63;
              $167 = $159;$_0$0$i16$i$i983$i = $phitmp32$i$i981$i;
             }
             $161 = $153 << 6;
             $162 = $_0$0$i16$i$i983$i&255;
             $163 = $162 | $161;
             $164 = $148 << 12;
             $165 = $163 | $164;
             $166 = ($144&255)>(239);
             if ($166) {
              $168 = ($167|0)==($158|0);
              if ($168) {
               $_0$0$i10$i$i988$i = 0;
              } else {
               $169 = HEAP8[$167>>0]|0;
               $phitmp33$i$i986$i = $169 & 63;
               $_0$0$i10$i$i988$i = $phitmp33$i$i986$i;
              }
              $170 = $148 << 18;
              $171 = $170 & 1835008;
              $172 = $163 << 6;
              $173 = $_0$0$i10$i$i988$i&255;
              $174 = $172 | $171;
              $175 = $174 | $173;
              $_131$sroa$4$2$ph$i = $175;
             } else {
              $_131$sroa$4$2$ph$i = $165;
             }
            } else {
             $_131$sroa$4$2$ph$i = $154;
            }
           }
           $$off$i996$i = (($_131$sroa$4$2$ph$i) + -48)|0;
           $176 = ($$off$i996$i>>>0)<(10);
           if (!($176)) {
            $177 = ($_131$sroa$4$2$ph$i>>>0)>(127);
            if (!($177)) {
             break;
            }
            $178 = (__ZN13rustc_unicode6tables16general_category1N17h2efcec0f2ead4b82E($_131$sroa$4$2$ph$i)|0);
            if (!($178)) {
             break;
            }
           }
           switch ($rest$sroa$82$03612$i|0) {
           case 1:  {
            label = 78;
            break L79;
            break;
           }
           case 0:  {
            $rest$sroa$82$03612$lcssa3762$i = 0;
            label = 107;
            break L79;
            break;
           }
           default: {
           }
           }
           $208 = HEAP8[$145>>0]|0;
           $209 = ($208<<24>>24)>(-65);
           if (!($209)) {
            $rest$sroa$82$03612$lcssa3762$i = $rest$sroa$82$03612$i;
            label = 107;
            break L79;
           }
           $210 = (($rest$sroa$82$03612$i) + -1)|0;
           $211 = (($145) + ($210)|0);
           $212 = ($210|0)==(0);
           if ($212) {
            label = 78;
            break L79;
           } else {
            $144 = $208;$158 = $211;$rest$sroa$0$03611$i = $145;$rest$sroa$82$03612$i = $210;
           }
          }
          $179 = (($inner$sroa$12$23700$i) - ($rest$sroa$82$03612$i))|0;
          $180 = ($179|0)==(0);
          $181 = ($rest$sroa$82$03612$i|0)==(0);
          $or$cond$i$i1008$i = $181 | $180;
          if (!($or$cond$i$i1008$i)) {
           $not$$i$i1009$i = ($inner$sroa$12$23700$i>>>0)>($179>>>0);
           if (!($not$$i$i1009$i)) {
            label = 85;
            break;
           }
           $182 = (($inner$sroa$0$23699$i) + ($179)|0);
           $183 = HEAP8[$182>>0]|0;
           $184 = ($183<<24>>24)>(-65);
           if (!($184)) {
            label = 85;
            break;
           }
          }
          if ($180) {
           $_141$i$sroa$0$sroa$9$1$ph = 0;
           label = 94;
           break;
          }
          $185 = HEAP8[$inner$sroa$0$23699$i>>0]|0;
          $cond$i$i = ($185<<24>>24)==(43);
          if ($cond$i$i) {
           $186 = ((($inner$sroa$0$23699$i)) + 1|0);
           $187 = (($179) + -1)|0;
           $188 = ($187|0)==(0);
           if ($188) {
            $_141$i$sroa$0$sroa$9$1$ph = 0;
            label = 94;
            break;
           } else {
            $_44$sroa$10$0119$i$i = $187;$_44$sroa$632$0118$i$i = $186;
           }
          } else {
           $_44$sroa$10$0119$i$i = $179;$_44$sroa$632$0118$i$i = $inner$sroa$0$23699$i;
          }
          $189 = (($_44$sroa$632$0118$i$i) + ($_44$sroa$10$0119$i$i)|0);
          $iter$sroa$0$0$in136$i$i = $_44$sroa$632$0118$i$i;$result$0137$i$i = 0;
          while(1) {
           $190 = ((($iter$sroa$0$0$in136$i$i)) + 1|0);
           $191 = HEAP8[$iter$sroa$0$0$in136$i$i>>0]|0;
           $192 = $191&255;
           $$off$i47$i$i = (($192) + -48)|0;
           $193 = ($$off$i47$i$i>>>0)<(10);
           if (!($193)) {
            $_141$i$sroa$0$sroa$9$1$ph = 1;
            label = 94;
            break L79;
           }
           $$arith7 = ($result$0137$i$i*10)|0;
           $$overflow8 = ($result$0137$i$i>>>0)>(429496729);
           if ($$overflow8) {
            $_141$i$sroa$0$sroa$9$1$ph = 2;
            label = 94;
            break L79;
           }
           $$arith = (($$arith7) + ($$off$i47$i$i))|0;
           $$overflow = ($$arith>>>0)<($$arith7>>>0);
           if ($$overflow) {
            $_141$i$sroa$0$sroa$9$1$ph = 2;
            label = 94;
            break L79;
           }
           $194 = ($190|0)==($189|0);
           if ($194) {
            $_141$i$sroa$0$sroa$9$1 = $_141$i$sroa$0$sroa$9$0;$_141$i$sroa$1417$1 = $$arith;
            break;
           } else {
            $iter$sroa$0$0$in136$i$i = $190;$result$0137$i$i = $$arith;
           }
          }
          $195 = ($_141$i$sroa$1417$1|0)==(0);
          $196 = ($rest$sroa$82$03612$i|0)==($_141$i$sroa$1417$1|0);
          $or$cond$i$i1018$i = $195 | $196;
          if ($or$cond$i$i1018$i) {
           $$pre$i$i = (($rest$sroa$0$03611$i) + ($_141$i$sroa$1417$1)|0);
           $$pre$phi$i2894$iZ2D = $$pre$i$i;
          } else {
           $not$$i$i1019$i = ($rest$sroa$82$03612$i>>>0)>($_141$i$sroa$1417$1>>>0);
           if (!($not$$i$i1019$i)) {
            label = 99;
            break;
           }
           $197 = (($rest$sroa$0$03611$i) + ($_141$i$sroa$1417$1)|0);
           $198 = HEAP8[$197>>0]|0;
           $199 = ($198<<24>>24)>(-65);
           if ($199) {
            $$pre$phi$i2894$iZ2D = $197;
           } else {
            label = 99;
            break;
           }
          }
          $200 = (($rest$sroa$82$03612$i) - ($_141$i$sroa$1417$1))|0;
          $201 = ($_141$i$sroa$1417$1|0)==(2);
          do {
           if ($201) {
            label = 103;
           } else {
            $not$$i$i$i$i1031$i = ($_141$i$sroa$1417$1>>>0)>(2);
            if ($not$$i$i$i$i1031$i) {
             $202 = ((($rest$sroa$0$03611$i)) + 2|0);
             $203 = HEAP8[$202>>0]|0;
             $204 = ($203<<24>>24)>(-65);
             if ($204) {
              label = 103;
              break;
             } else {
              $_141$i$sroa$1417$1921 = $_141$i$sroa$1417$1;$rest$sroa$0$13621$i = $rest$sroa$0$03611$i;$rest$sroa$82$13658$i = $_141$i$sroa$1417$1;
              label = 113;
              break;
             }
            } else {
             if ($195) {
              break;
             } else {
              $_141$i$sroa$1417$1921 = $_141$i$sroa$1417$1;$rest$sroa$0$13621$i = $rest$sroa$0$03611$i;$rest$sroa$82$13658$i = 1;
              label = 113;
              break;
             }
            }
           }
          } while(0);
          do {
           if ((label|0) == 103) {
            label = 0;
            $205 = ($rest$sroa$0$03611$i|0)==(18742|0);
            if (!($205)) {
             $206 = (_memcmp(18742,$rest$sroa$0$03611$i,2)|0);
             $207 = ($206|0)==(0);
             if (!($207)) {
              $_141$i$sroa$1417$1921 = $_141$i$sroa$1417$1;$rest$sroa$0$13621$i = $rest$sroa$0$03611$i;$rest$sroa$82$13658$i = $_141$i$sroa$1417$1;
              label = 113;
              break;
             }
            }
            $213 = HEAP8[$145>>0]|0;
            $214 = ($213<<24>>24)>(-65);
            if (!($214)) {
             label = 110;
             break L79;
            }
            $215 = (($_141$i$sroa$1417$1) + -1)|0;
            $_141$i$sroa$1417$1921 = $_141$i$sroa$1417$1;$rest$sroa$0$13621$i = $145;$rest$sroa$82$13658$i = $215;
            label = 113;
           }
          } while(0);
          L139: do {
           if ((label|0) == 113) {
            L140: while(1) {
             label = 0;
             $216 = ($rest$sroa$82$13658$i|0)==(1);
             if ($216) {
              label = 115;
             } else {
              $217 = ((($rest$sroa$0$13621$i)) + 1|0);
              $218 = HEAP8[$217>>0]|0;
              $219 = ($218<<24>>24)>(-65);
              if ($219) {
               label = 115;
              } else {
               label = 154;
              }
             }
             L144: do {
              if ((label|0) == 115) {
               label = 0;
               $220 = ($rest$sroa$0$13621$i|0)==(23821|0);
               do {
                if (!($220)) {
                 $rhsc3028$i = HEAP8[$rest$sroa$0$13621$i>>0]|0;
                 $221 = ($rhsc3028$i<<24>>24)==(46);
                 if ($221) {
                  break;
                 }
                 if (!($216)) {
                  $$phi$trans$insert$i = ((($rest$sroa$0$13621$i)) + 1|0);
                  $$pre$i = HEAP8[$$phi$trans$insert$i>>0]|0;
                  $257 = ($$pre$i<<24>>24)>(-65);
                  if (!($257)) {
                   label = 154;
                   break L144;
                  }
                 }
                 $258 = ($rest$sroa$0$13621$i|0)==(18744|0);
                 $259 = ($rhsc3028$i<<24>>24)==(36);
                 $or$cond = $258 | $259;
                 if (!($or$cond)) {
                  label = 154;
                  break L144;
                 }
                 $268 = ($rest$sroa$82$13658$i|0)==(4);
                 do {
                  if ($268) {
                   label = 152;
                  } else {
                   $not$$i$i$i$i1164$i = ($rest$sroa$82$13658$i>>>0)>(4);
                   if ($not$$i$i$i$i1164$i) {
                    $269 = ((($rest$sroa$0$13621$i)) + 4|0);
                    $270 = HEAP8[$269>>0]|0;
                    $271 = ($270<<24>>24)>(-65);
                    if ($271) {
                     label = 152;
                     break;
                    } else {
                     label = 230;
                     break;
                    }
                   } else {
                    $368 = ($rest$sroa$82$13658$i|0)==(3);
                    if ($368) {
                     $506 = 1;
                     label = 231;
                     break;
                    } else {
                     break L140;
                    }
                   }
                  }
                 } while(0);
                 L158: do {
                  if ((label|0) == 152) {
                   label = 0;
                   $272 = ($rest$sroa$0$13621$i|0)==(18745|0);
                   do {
                    if (!($272)) {
                     $273 = (_memcmp(18745,$rest$sroa$0$13621$i,4)|0);
                     $274 = ($273|0)==(0);
                     if ($274) {
                      break;
                     }
                     if (!($268)) {
                      $$phi$trans$insert4256$i = ((($rest$sroa$0$13621$i)) + 4|0);
                      $$pre4257$i = HEAP8[$$phi$trans$insert4256$i>>0]|0;
                      $320 = ($$pre4257$i<<24>>24)>(-65);
                      if (!($320)) {
                       label = 230;
                       break L158;
                      }
                     }
                     $321 = ($rest$sroa$0$13621$i|0)==(18750|0);
                     do {
                      if (!($321)) {
                       $322 = (_memcmp(18750,$rest$sroa$0$13621$i,4)|0);
                       $323 = ($322|0)==(0);
                       if ($323) {
                        break;
                       }
                       if (!($268)) {
                        $$phi$trans$insert4258$i = ((($rest$sroa$0$13621$i)) + 4|0);
                        $$pre4259$i = HEAP8[$$phi$trans$insert4258$i>>0]|0;
                        $328 = ($$pre4259$i<<24>>24)>(-65);
                        if (!($328)) {
                         label = 230;
                         break L158;
                        }
                       }
                       $329 = ($rest$sroa$0$13621$i|0)==(18755|0);
                       do {
                        if (!($329)) {
                         $330 = (_memcmp(18755,$rest$sroa$0$13621$i,4)|0);
                         $331 = ($330|0)==(0);
                         if ($331) {
                          break;
                         }
                         if (!($268)) {
                          $$phi$trans$insert4260$i = ((($rest$sroa$0$13621$i)) + 4|0);
                          $$pre4261$i = HEAP8[$$phi$trans$insert4260$i>>0]|0;
                          $336 = ($$pre4261$i<<24>>24)>(-65);
                          if (!($336)) {
                           label = 230;
                           break L158;
                          }
                         }
                         $337 = ($rest$sroa$0$13621$i|0)==(18760|0);
                         do {
                          if (!($337)) {
                           $338 = (_memcmp(18760,$rest$sroa$0$13621$i,4)|0);
                           $339 = ($338|0)==(0);
                           if ($339) {
                            break;
                           }
                           if (!($268)) {
                            $$phi$trans$insert4262$i = ((($rest$sroa$0$13621$i)) + 4|0);
                            $$pre4263$i = HEAP8[$$phi$trans$insert4262$i>>0]|0;
                            $344 = ($$pre4263$i<<24>>24)>(-65);
                            if (!($344)) {
                             label = 230;
                             break L158;
                            }
                           }
                           $345 = ($rest$sroa$0$13621$i|0)==(18765|0);
                           do {
                            if (!($345)) {
                             $346 = (_memcmp(18765,$rest$sroa$0$13621$i,4)|0);
                             $347 = ($346|0)==(0);
                             if ($347) {
                              break;
                             }
                             if (!($268)) {
                              $$phi$trans$insert4264$i = ((($rest$sroa$0$13621$i)) + 4|0);
                              $$pre4265$i = HEAP8[$$phi$trans$insert4264$i>>0]|0;
                              $352 = ($$pre4265$i<<24>>24)>(-65);
                              if (!($352)) {
                               label = 230;
                               break L158;
                              }
                             }
                             $353 = ($rest$sroa$0$13621$i|0)==(18770|0);
                             do {
                              if (!($353)) {
                               $354 = (_memcmp(18770,$rest$sroa$0$13621$i,4)|0);
                               $355 = ($354|0)==(0);
                               if ($355) {
                                break;
                               }
                               if (!($268)) {
                                $$phi$trans$insert4266$i = ((($rest$sroa$0$13621$i)) + 4|0);
                                $$pre4267$i = HEAP8[$$phi$trans$insert4266$i>>0]|0;
                                $360 = ($$pre4267$i<<24>>24)>(-65);
                                if (!($360)) {
                                 label = 230;
                                 break L158;
                                }
                               }
                               $361 = ($rest$sroa$0$13621$i|0)==(18775|0);
                               if (!($361)) {
                                $362 = (_memcmp(18775,$rest$sroa$0$13621$i,4)|0);
                                $363 = ($362|0)==(0);
                                if (!($363)) {
                                 label = 230;
                                 break L158;
                                }
                               }
                               $367 = HEAP32[$138>>2]|0;
                               FUNCTION_TABLE_viiii[$367 & 511]($_366$i,$1,18779,1);
                               $self$i1383$sroa$0$0$copyload$i = HEAP32[$_366$i>>2]|0;
                               $switch3$i1384$i = ($self$i1383$sroa$0$0$copyload$i|0)==(1);
                               if ($switch3$i1384$i) {
                                label = 233;
                                break L79;
                               }
                               $$pre$i1416$i = ((($rest$sroa$0$13621$i)) + 4|0);
                               if (!($268)) {
                                $375 = HEAP8[$$pre$i1416$i>>0]|0;
                                $376 = ($375<<24>>24)>(-65);
                                if (!($376)) {
                                 label = 236;
                                 break L79;
                                }
                               }
                               $377 = (($rest$sroa$82$13658$i) + -4)|0;
                               $rest$sroa$0$1$be$i = $$pre$i1416$i;$rest$sroa$82$1$be$i = $377;
                               break L144;
                              }
                             } while(0);
                             $359 = HEAP32[$138>>2]|0;
                             FUNCTION_TABLE_viiii[$359 & 511]($_343$i,$1,18774,1);
                             $self$i1342$sroa$0$0$copyload$i = HEAP32[$_343$i>>2]|0;
                             $switch3$i1343$i = ($self$i1342$sroa$0$0$copyload$i|0)==(1);
                             if ($switch3$i1343$i) {
                              label = 223;
                              break L79;
                             }
                             $$pre$i1374$i = ((($rest$sroa$0$13621$i)) + 4|0);
                             if (!($268)) {
                              $364 = HEAP8[$$pre$i1374$i>>0]|0;
                              $365 = ($364<<24>>24)>(-65);
                              if (!($365)) {
                               label = 226;
                               break L79;
                              }
                             }
                             $366 = (($rest$sroa$82$13658$i) + -4)|0;
                             $rest$sroa$0$1$be$i = $$pre$i1374$i;$rest$sroa$82$1$be$i = $366;
                             break L144;
                            }
                           } while(0);
                           $351 = HEAP32[$138>>2]|0;
                           FUNCTION_TABLE_viiii[$351 & 511]($_320$i,$1,18769,1);
                           $self$i1308$sroa$0$0$copyload$i = HEAP32[$_320$i>>2]|0;
                           $switch3$i1309$i = ($self$i1308$sroa$0$0$copyload$i|0)==(1);
                           if ($switch3$i1309$i) {
                            label = 213;
                            break L79;
                           }
                           $$pre$i1333$i = ((($rest$sroa$0$13621$i)) + 4|0);
                           if (!($268)) {
                            $356 = HEAP8[$$pre$i1333$i>>0]|0;
                            $357 = ($356<<24>>24)>(-65);
                            if (!($357)) {
                             label = 216;
                             break L79;
                            }
                           }
                           $358 = (($rest$sroa$82$13658$i) + -4)|0;
                           $rest$sroa$0$1$be$i = $$pre$i1333$i;$rest$sroa$82$1$be$i = $358;
                           break L144;
                          }
                         } while(0);
                         $343 = HEAP32[$138>>2]|0;
                         FUNCTION_TABLE_viiii[$343 & 511]($_297$i,$1,18764,1);
                         $self$i1282$sroa$0$0$copyload$i = HEAP32[$_297$i>>2]|0;
                         $switch3$i1283$i = ($self$i1282$sroa$0$0$copyload$i|0)==(1);
                         if ($switch3$i1283$i) {
                          label = 203;
                          break L79;
                         }
                         $$pre$i1299$i = ((($rest$sroa$0$13621$i)) + 4|0);
                         if (!($268)) {
                          $348 = HEAP8[$$pre$i1299$i>>0]|0;
                          $349 = ($348<<24>>24)>(-65);
                          if (!($349)) {
                           label = 206;
                           break L79;
                          }
                         }
                         $350 = (($rest$sroa$82$13658$i) + -4)|0;
                         $rest$sroa$0$1$be$i = $$pre$i1299$i;$rest$sroa$82$1$be$i = $350;
                         break L144;
                        }
                       } while(0);
                       $335 = HEAP32[$138>>2]|0;
                       FUNCTION_TABLE_viiii[$335 & 511]($_274$i,$1,18759,1);
                       $self$i1256$sroa$0$0$copyload$i = HEAP32[$_274$i>>2]|0;
                       $switch3$i1257$i = ($self$i1256$sroa$0$0$copyload$i|0)==(1);
                       if ($switch3$i1257$i) {
                        label = 193;
                        break L79;
                       }
                       $$pre$i1273$i = ((($rest$sroa$0$13621$i)) + 4|0);
                       if (!($268)) {
                        $340 = HEAP8[$$pre$i1273$i>>0]|0;
                        $341 = ($340<<24>>24)>(-65);
                        if (!($341)) {
                         label = 196;
                         break L79;
                        }
                       }
                       $342 = (($rest$sroa$82$13658$i) + -4)|0;
                       $rest$sroa$0$1$be$i = $$pre$i1273$i;$rest$sroa$82$1$be$i = $342;
                       break L144;
                      }
                     } while(0);
                     $327 = HEAP32[$138>>2]|0;
                     FUNCTION_TABLE_viiii[$327 & 511]($_251$i,$1,18754,1);
                     $self$i1230$sroa$0$0$copyload$i = HEAP32[$_251$i>>2]|0;
                     $switch3$i1231$i = ($self$i1230$sroa$0$0$copyload$i|0)==(1);
                     if ($switch3$i1231$i) {
                      label = 183;
                      break L79;
                     }
                     $$pre$i1247$i = ((($rest$sroa$0$13621$i)) + 4|0);
                     if (!($268)) {
                      $332 = HEAP8[$$pre$i1247$i>>0]|0;
                      $333 = ($332<<24>>24)>(-65);
                      if (!($333)) {
                       label = 186;
                       break L79;
                      }
                     }
                     $334 = (($rest$sroa$82$13658$i) + -4)|0;
                     $rest$sroa$0$1$be$i = $$pre$i1247$i;$rest$sroa$82$1$be$i = $334;
                     break L144;
                    }
                   } while(0);
                   $319 = HEAP32[$138>>2]|0;
                   FUNCTION_TABLE_viiii[$319 & 511]($_228$i,$1,18749,1);
                   $self$i1188$sroa$0$0$copyload$i = HEAP32[$_228$i>>2]|0;
                   $switch3$i1189$i = ($self$i1188$sroa$0$0$copyload$i|0)==(1);
                   if ($switch3$i1189$i) {
                    label = 173;
                    break L79;
                   }
                   $$pre$i1221$i = ((($rest$sroa$0$13621$i)) + 4|0);
                   if (!($268)) {
                    $324 = HEAP8[$$pre$i1221$i>>0]|0;
                    $325 = ($324<<24>>24)>(-65);
                    if (!($325)) {
                     label = 176;
                     break L79;
                    }
                   }
                   $326 = (($rest$sroa$82$13658$i) + -4)|0;
                   $rest$sroa$0$1$be$i = $$pre$i1221$i;$rest$sroa$82$1$be$i = $326;
                   break L144;
                  }
                 } while(0);
                 if ((label|0) == 230) {
                  label = 0;
                  $369 = ((($rest$sroa$0$13621$i)) + 3|0);
                  $370 = HEAP8[$369>>0]|0;
                  $371 = ($370<<24>>24)>(-65);
                  if ($371) {
                   $506 = 0;
                   label = 231;
                  }
                 }
                 do {
                  if ((label|0) == 231) {
                   label = 0;
                   $372 = ($rest$sroa$0$13621$i|0)==(18780|0);
                   if (!($372)) {
                    $373 = (_memcmp(18780,$rest$sroa$0$13621$i,3)|0);
                    $374 = ($373|0)==(0);
                    if (!($374)) {
                     break;
                    }
                   }
                   $378 = HEAP32[$138>>2]|0;
                   FUNCTION_TABLE_viiii[$378 & 511]($_389$i,$1,18783,1);
                   $self$i1425$sroa$0$0$copyload$i = HEAP32[$_389$i>>2]|0;
                   $switch3$i1426$i = ($self$i1425$sroa$0$0$copyload$i|0)==(1);
                   if ($switch3$i1426$i) {
                    label = 244;
                    break L79;
                   }
                   if ($506) {
                    $$pre$i1450$i = ((($rest$sroa$0$13621$i)) + 3|0);
                    $$pre$phi$i1455$iZ2D = $$pre$i1450$i;
                   } else {
                    $not$$i$i1452$i = ($rest$sroa$82$13658$i>>>0)>(3);
                    if (!($not$$i$i1452$i)) {
                     label = 249;
                     break L79;
                    }
                    $386 = ((($rest$sroa$0$13621$i)) + 3|0);
                    $387 = HEAP8[$386>>0]|0;
                    $388 = ($387<<24>>24)>(-65);
                    if ($388) {
                     $$pre$phi$i1455$iZ2D = $386;
                    } else {
                     label = 249;
                     break L79;
                    }
                   }
                   $389 = (($rest$sroa$82$13658$i) + -3)|0;
                   $rest$sroa$0$1$be$i = $$pre$phi$i1455$iZ2D;$rest$sroa$82$1$be$i = $389;
                   break L144;
                  }
                 } while(0);
                 $379 = ($rest$sroa$82$13658$i|0)==(5);
                 if ($379) {
                  $507 = 1;
                 } else {
                  $not$$i$i$i$i1433$i = ($rest$sroa$82$13658$i>>>0)>(5);
                  if (!($not$$i$i$i$i1433$i)) {
                   break L140;
                  }
                  $380 = ((($rest$sroa$0$13621$i)) + 5|0);
                  $381 = HEAP8[$380>>0]|0;
                  $382 = ($381<<24>>24)>(-65);
                  if ($382) {
                   $507 = 0;
                  } else {
                   break L140;
                  }
                 }
                 $383 = ($rest$sroa$0$13621$i|0)==(18784|0);
                 do {
                  if (!($383)) {
                   $384 = (_memcmp(18784,$rest$sroa$0$13621$i,5)|0);
                   $385 = ($384|0)==(0);
                   if ($385) {
                    break;
                   }
                   if ($507) {
                    $508 = 1;
                   } else {
                    $not$$i$i$i$i1474$i = ($rest$sroa$82$13658$i>>>0)>(5);
                    if (!($not$$i$i$i$i1474$i)) {
                     break L140;
                    }
                    $$phi$trans$insert4268$i = ((($rest$sroa$0$13621$i)) + 5|0);
                    $$pre4269$i = HEAP8[$$phi$trans$insert4268$i>>0]|0;
                    $391 = ($$pre4269$i<<24>>24)>(-65);
                    if ($391) {
                     $508 = 0;
                    } else {
                     break L140;
                    }
                   }
                   $392 = ($rest$sroa$0$13621$i|0)==(18790|0);
                   do {
                    if (!($392)) {
                     $393 = (_memcmp(18790,$rest$sroa$0$13621$i,5)|0);
                     $394 = ($393|0)==(0);
                     if ($394) {
                      break;
                     }
                     if ($508) {
                      $509 = 1;
                     } else {
                      $not$$i$i$i$i1508$i = ($rest$sroa$82$13658$i>>>0)>(5);
                      if (!($not$$i$i$i$i1508$i)) {
                       break L140;
                      }
                      $$phi$trans$insert4270$i = ((($rest$sroa$0$13621$i)) + 5|0);
                      $$pre4271$i = HEAP8[$$phi$trans$insert4270$i>>0]|0;
                      $400 = ($$pre4271$i<<24>>24)>(-65);
                      if ($400) {
                       $509 = 0;
                      } else {
                       break L140;
                      }
                     }
                     $401 = ($rest$sroa$0$13621$i|0)==(18796|0);
                     do {
                      if (!($401)) {
                       $402 = (_memcmp(18796,$rest$sroa$0$13621$i,5)|0);
                       $403 = ($402|0)==(0);
                       if ($403) {
                        break;
                       }
                       if ($509) {
                        $510 = 1;
                       } else {
                        $not$$i$i$i$i1550$i = ($rest$sroa$82$13658$i>>>0)>(5);
                        if (!($not$$i$i$i$i1550$i)) {
                         break L140;
                        }
                        $$phi$trans$insert4272$i = ((($rest$sroa$0$13621$i)) + 5|0);
                        $$pre4273$i = HEAP8[$$phi$trans$insert4272$i>>0]|0;
                        $409 = ($$pre4273$i<<24>>24)>(-65);
                        if ($409) {
                         $510 = 0;
                        } else {
                         break L140;
                        }
                       }
                       $410 = ($rest$sroa$0$13621$i|0)==(18802|0);
                       do {
                        if (!($410)) {
                         $411 = (_memcmp(18802,$rest$sroa$0$13621$i,5)|0);
                         $412 = ($411|0)==(0);
                         if ($412) {
                          break;
                         }
                         if ($510) {
                          $511 = 1;
                         } else {
                          $not$$i$i$i$i1591$i = ($rest$sroa$82$13658$i>>>0)>(5);
                          if (!($not$$i$i$i$i1591$i)) {
                           break L140;
                          }
                          $$phi$trans$insert4274$i = ((($rest$sroa$0$13621$i)) + 5|0);
                          $$pre4275$i = HEAP8[$$phi$trans$insert4274$i>>0]|0;
                          $418 = ($$pre4275$i<<24>>24)>(-65);
                          if ($418) {
                           $511 = 0;
                          } else {
                           break L140;
                          }
                         }
                         $419 = ($rest$sroa$0$13621$i|0)==(18808|0);
                         do {
                          if (!($419)) {
                           $420 = (_memcmp(18808,$rest$sroa$0$13621$i,5)|0);
                           $421 = ($420|0)==(0);
                           if ($421) {
                            break;
                           }
                           if ($511) {
                            $512 = 1;
                           } else {
                            $not$$i$i$i$i1625$i = ($rest$sroa$82$13658$i>>>0)>(5);
                            if (!($not$$i$i$i$i1625$i)) {
                             break L140;
                            }
                            $$phi$trans$insert4276$i = ((($rest$sroa$0$13621$i)) + 5|0);
                            $$pre4277$i = HEAP8[$$phi$trans$insert4276$i>>0]|0;
                            $427 = ($$pre4277$i<<24>>24)>(-65);
                            if ($427) {
                             $512 = 0;
                            } else {
                             break L140;
                            }
                           }
                           $428 = ($rest$sroa$0$13621$i|0)==(18814|0);
                           do {
                            if (!($428)) {
                             $429 = (_memcmp(18814,$rest$sroa$0$13621$i,5)|0);
                             $430 = ($429|0)==(0);
                             if ($430) {
                              break;
                             }
                             if ($512) {
                              $513 = 1;
                             } else {
                              $not$$i$i$i$i1667$i = ($rest$sroa$82$13658$i>>>0)>(5);
                              if (!($not$$i$i$i$i1667$i)) {
                               break L140;
                              }
                              $$phi$trans$insert4278$i = ((($rest$sroa$0$13621$i)) + 5|0);
                              $$pre4279$i = HEAP8[$$phi$trans$insert4278$i>>0]|0;
                              $436 = ($$pre4279$i<<24>>24)>(-65);
                              if ($436) {
                               $513 = 0;
                              } else {
                               break L140;
                              }
                             }
                             $437 = ($rest$sroa$0$13621$i|0)==(18820|0);
                             do {
                              if (!($437)) {
                               $438 = (_memcmp(18820,$rest$sroa$0$13621$i,5)|0);
                               $439 = ($438|0)==(0);
                               if ($439) {
                                break;
                               }
                               if ($513) {
                                $514 = 1;
                               } else {
                                $not$$i$i$i$i1708$i = ($rest$sroa$82$13658$i>>>0)>(5);
                                if (!($not$$i$i$i$i1708$i)) {
                                 break L140;
                                }
                                $$phi$trans$insert4280$i = ((($rest$sroa$0$13621$i)) + 5|0);
                                $$pre4281$i = HEAP8[$$phi$trans$insert4280$i>>0]|0;
                                $445 = ($$pre4281$i<<24>>24)>(-65);
                                if ($445) {
                                 $514 = 0;
                                } else {
                                 break L140;
                                }
                               }
                               $446 = ($rest$sroa$0$13621$i|0)==(18826|0);
                               do {
                                if (!($446)) {
                                 $447 = (_memcmp(18826,$rest$sroa$0$13621$i,5)|0);
                                 $448 = ($447|0)==(0);
                                 if ($448) {
                                  break;
                                 }
                                 if ($514) {
                                  $515 = 1;
                                 } else {
                                  $not$$i$i$i$i1742$i = ($rest$sroa$82$13658$i>>>0)>(5);
                                  if (!($not$$i$i$i$i1742$i)) {
                                   break L140;
                                  }
                                  $$phi$trans$insert4282$i = ((($rest$sroa$0$13621$i)) + 5|0);
                                  $$pre4283$i = HEAP8[$$phi$trans$insert4282$i>>0]|0;
                                  $454 = ($$pre4283$i<<24>>24)>(-65);
                                  if ($454) {
                                   $515 = 0;
                                  } else {
                                   break L140;
                                  }
                                 }
                                 $455 = ($rest$sroa$0$13621$i|0)==(18832|0);
                                 do {
                                  if (!($455)) {
                                   $456 = (_memcmp(18832,$rest$sroa$0$13621$i,5)|0);
                                   $457 = ($456|0)==(0);
                                   if ($457) {
                                    break;
                                   }
                                   if ($515) {
                                    $516 = 1;
                                   } else {
                                    $not$$i$i$i$i1784$i = ($rest$sroa$82$13658$i>>>0)>(5);
                                    if (!($not$$i$i$i$i1784$i)) {
                                     break L140;
                                    }
                                    $$phi$trans$insert4284$i = ((($rest$sroa$0$13621$i)) + 5|0);
                                    $$pre4285$i = HEAP8[$$phi$trans$insert4284$i>>0]|0;
                                    $463 = ($$pre4285$i<<24>>24)>(-65);
                                    if ($463) {
                                     $516 = 0;
                                    } else {
                                     break L140;
                                    }
                                   }
                                   $464 = ($rest$sroa$0$13621$i|0)==(18837|0);
                                   if (!($464)) {
                                    $465 = (_memcmp(18837,$rest$sroa$0$13621$i,5)|0);
                                    $466 = ($465|0)==(0);
                                    if (!($466)) {
                                     break L140;
                                    }
                                   }
                                   $471 = HEAP32[$138>>2]|0;
                                   FUNCTION_TABLE_viiii[$471 & 511]($_619$i,$1,18842,1);
                                   $self$i1810$sroa$0$0$copyload$i = HEAP32[$_619$i>>2]|0;
                                   $switch3$i1811$i = ($self$i1810$sroa$0$0$copyload$i|0)==(1);
                                   if ($switch3$i1811$i) {
                                    label = 370;
                                    break L79;
                                   }
                                   if ($516) {
                                    $$pre$i1850$i = ((($rest$sroa$0$13621$i)) + 5|0);
                                    $$pre$phi$i1855$iZ2D = $$pre$i1850$i;
                                   } else {
                                    $not$$i$i1852$i = ($rest$sroa$82$13658$i>>>0)>(5);
                                    if (!($not$$i$i1852$i)) {
                                     label = 375;
                                     break L79;
                                    }
                                    $473 = ((($rest$sroa$0$13621$i)) + 5|0);
                                    $474 = HEAP8[$473>>0]|0;
                                    $475 = ($474<<24>>24)>(-65);
                                    if ($475) {
                                     $$pre$phi$i1855$iZ2D = $473;
                                    } else {
                                     label = 375;
                                     break L79;
                                    }
                                   }
                                   $476 = (($rest$sroa$82$13658$i) + -5)|0;
                                   $rest$sroa$0$1$be$i = $$pre$phi$i1855$iZ2D;$rest$sroa$82$1$be$i = $476;
                                   break L144;
                                  }
                                 } while(0);
                                 $462 = HEAP32[$138>>2]|0;
                                 FUNCTION_TABLE_viiii[$462 & 511]($_596$i,$1,23854,1);
                                 $self$i1776$sroa$0$0$copyload$i = HEAP32[$_596$i>>2]|0;
                                 $switch3$i1777$i = ($self$i1776$sroa$0$0$copyload$i|0)==(1);
                                 if ($switch3$i1777$i) {
                                  label = 361;
                                  break L79;
                                 }
                                 if ($515) {
                                  $$pre$i1801$i = ((($rest$sroa$0$13621$i)) + 5|0);
                                  $$pre$phi$i1806$iZ2D = $$pre$i1801$i;
                                 } else {
                                  $not$$i$i1803$i = ($rest$sroa$82$13658$i>>>0)>(5);
                                  if (!($not$$i$i1803$i)) {
                                   label = 366;
                                   break L79;
                                  }
                                  $467 = ((($rest$sroa$0$13621$i)) + 5|0);
                                  $468 = HEAP8[$467>>0]|0;
                                  $469 = ($468<<24>>24)>(-65);
                                  if ($469) {
                                   $$pre$phi$i1806$iZ2D = $467;
                                  } else {
                                   label = 366;
                                   break L79;
                                  }
                                 }
                                 $470 = (($rest$sroa$82$13658$i) + -5)|0;
                                 $rest$sroa$0$1$be$i = $$pre$phi$i1806$iZ2D;$rest$sroa$82$1$be$i = $470;
                                 break L144;
                                }
                               } while(0);
                               $453 = HEAP32[$138>>2]|0;
                               FUNCTION_TABLE_viiii[$453 & 511]($_573$i,$1,18831,1);
                               $self$i1734$sroa$0$0$copyload$i = HEAP32[$_573$i>>2]|0;
                               $switch3$i1735$i = ($self$i1734$sroa$0$0$copyload$i|0)==(1);
                               if ($switch3$i1735$i) {
                                label = 348;
                                break L79;
                               }
                               if ($514) {
                                $$pre$i1767$i = ((($rest$sroa$0$13621$i)) + 5|0);
                                $$pre$phi$i1772$iZ2D = $$pre$i1767$i;
                               } else {
                                $not$$i$i1769$i = ($rest$sroa$82$13658$i>>>0)>(5);
                                if (!($not$$i$i1769$i)) {
                                 label = 353;
                                 break L79;
                                }
                                $458 = ((($rest$sroa$0$13621$i)) + 5|0);
                                $459 = HEAP8[$458>>0]|0;
                                $460 = ($459<<24>>24)>(-65);
                                if ($460) {
                                 $$pre$phi$i1772$iZ2D = $458;
                                } else {
                                 label = 353;
                                 break L79;
                                }
                               }
                               $461 = (($rest$sroa$82$13658$i) + -5)|0;
                               $rest$sroa$0$1$be$i = $$pre$phi$i1772$iZ2D;$rest$sroa$82$1$be$i = $461;
                               break L144;
                              }
                             } while(0);
                             $444 = HEAP32[$138>>2]|0;
                             FUNCTION_TABLE_viiii[$444 & 511]($_550$i,$1,18825,1);
                             $self$i1693$sroa$0$0$copyload$i = HEAP32[$_550$i>>2]|0;
                             $switch3$i1694$i = ($self$i1693$sroa$0$0$copyload$i|0)==(1);
                             if ($switch3$i1694$i) {
                              label = 335;
                              break L79;
                             }
                             if ($513) {
                              $$pre$i1725$i = ((($rest$sroa$0$13621$i)) + 5|0);
                              $$pre$phi$i1730$iZ2D = $$pre$i1725$i;
                             } else {
                              $not$$i$i1727$i = ($rest$sroa$82$13658$i>>>0)>(5);
                              if (!($not$$i$i1727$i)) {
                               label = 340;
                               break L79;
                              }
                              $449 = ((($rest$sroa$0$13621$i)) + 5|0);
                              $450 = HEAP8[$449>>0]|0;
                              $451 = ($450<<24>>24)>(-65);
                              if ($451) {
                               $$pre$phi$i1730$iZ2D = $449;
                              } else {
                               label = 340;
                               break L79;
                              }
                             }
                             $452 = (($rest$sroa$82$13658$i) + -5)|0;
                             $rest$sroa$0$1$be$i = $$pre$phi$i1730$iZ2D;$rest$sroa$82$1$be$i = $452;
                             break L144;
                            }
                           } while(0);
                           $435 = HEAP32[$138>>2]|0;
                           FUNCTION_TABLE_viiii[$435 & 511]($_527$i,$1,18819,1);
                           $self$i1659$sroa$0$0$copyload$i = HEAP32[$_527$i>>2]|0;
                           $switch3$i1660$i = ($self$i1659$sroa$0$0$copyload$i|0)==(1);
                           if ($switch3$i1660$i) {
                            label = 322;
                            break L79;
                           }
                           if ($512) {
                            $$pre$i1684$i = ((($rest$sroa$0$13621$i)) + 5|0);
                            $$pre$phi$i1689$iZ2D = $$pre$i1684$i;
                           } else {
                            $not$$i$i1686$i = ($rest$sroa$82$13658$i>>>0)>(5);
                            if (!($not$$i$i1686$i)) {
                             label = 327;
                             break L79;
                            }
                            $440 = ((($rest$sroa$0$13621$i)) + 5|0);
                            $441 = HEAP8[$440>>0]|0;
                            $442 = ($441<<24>>24)>(-65);
                            if ($442) {
                             $$pre$phi$i1689$iZ2D = $440;
                            } else {
                             label = 327;
                             break L79;
                            }
                           }
                           $443 = (($rest$sroa$82$13658$i) + -5)|0;
                           $rest$sroa$0$1$be$i = $$pre$phi$i1689$iZ2D;$rest$sroa$82$1$be$i = $443;
                           break L144;
                          }
                         } while(0);
                         $426 = HEAP32[$138>>2]|0;
                         FUNCTION_TABLE_viiii[$426 & 511]($_504$i,$1,18813,1);
                         $self$i1617$sroa$0$0$copyload$i = HEAP32[$_504$i>>2]|0;
                         $switch3$i1618$i = ($self$i1617$sroa$0$0$copyload$i|0)==(1);
                         if ($switch3$i1618$i) {
                          label = 309;
                          break L79;
                         }
                         if ($511) {
                          $$pre$i1650$i = ((($rest$sroa$0$13621$i)) + 5|0);
                          $$pre$phi$i1655$iZ2D = $$pre$i1650$i;
                         } else {
                          $not$$i$i1652$i = ($rest$sroa$82$13658$i>>>0)>(5);
                          if (!($not$$i$i1652$i)) {
                           label = 314;
                           break L79;
                          }
                          $431 = ((($rest$sroa$0$13621$i)) + 5|0);
                          $432 = HEAP8[$431>>0]|0;
                          $433 = ($432<<24>>24)>(-65);
                          if ($433) {
                           $$pre$phi$i1655$iZ2D = $431;
                          } else {
                           label = 314;
                           break L79;
                          }
                         }
                         $434 = (($rest$sroa$82$13658$i) + -5)|0;
                         $rest$sroa$0$1$be$i = $$pre$phi$i1655$iZ2D;$rest$sroa$82$1$be$i = $434;
                         break L144;
                        }
                       } while(0);
                       $417 = HEAP32[$138>>2]|0;
                       FUNCTION_TABLE_viiii[$417 & 511]($_481$i,$1,18807,1);
                       $self$i1576$sroa$0$0$copyload$i = HEAP32[$_481$i>>2]|0;
                       $switch3$i1577$i = ($self$i1576$sroa$0$0$copyload$i|0)==(1);
                       if ($switch3$i1577$i) {
                        label = 296;
                        break L79;
                       }
                       if ($510) {
                        $$pre$i1608$i = ((($rest$sroa$0$13621$i)) + 5|0);
                        $$pre$phi$i1613$iZ2D = $$pre$i1608$i;
                       } else {
                        $not$$i$i1610$i = ($rest$sroa$82$13658$i>>>0)>(5);
                        if (!($not$$i$i1610$i)) {
                         label = 301;
                         break L79;
                        }
                        $422 = ((($rest$sroa$0$13621$i)) + 5|0);
                        $423 = HEAP8[$422>>0]|0;
                        $424 = ($423<<24>>24)>(-65);
                        if ($424) {
                         $$pre$phi$i1613$iZ2D = $422;
                        } else {
                         label = 301;
                         break L79;
                        }
                       }
                       $425 = (($rest$sroa$82$13658$i) + -5)|0;
                       $rest$sroa$0$1$be$i = $$pre$phi$i1613$iZ2D;$rest$sroa$82$1$be$i = $425;
                       break L144;
                      }
                     } while(0);
                     $408 = HEAP32[$138>>2]|0;
                     FUNCTION_TABLE_viiii[$408 & 511]($_458$i,$1,18801,1);
                     $self$i1542$sroa$0$0$copyload$i = HEAP32[$_458$i>>2]|0;
                     $switch3$i1543$i = ($self$i1542$sroa$0$0$copyload$i|0)==(1);
                     if ($switch3$i1543$i) {
                      label = 283;
                      break L79;
                     }
                     if ($509) {
                      $$pre$i1567$i = ((($rest$sroa$0$13621$i)) + 5|0);
                      $$pre$phi$i1572$iZ2D = $$pre$i1567$i;
                     } else {
                      $not$$i$i1569$i = ($rest$sroa$82$13658$i>>>0)>(5);
                      if (!($not$$i$i1569$i)) {
                       label = 288;
                       break L79;
                      }
                      $413 = ((($rest$sroa$0$13621$i)) + 5|0);
                      $414 = HEAP8[$413>>0]|0;
                      $415 = ($414<<24>>24)>(-65);
                      if ($415) {
                       $$pre$phi$i1572$iZ2D = $413;
                      } else {
                       label = 288;
                       break L79;
                      }
                     }
                     $416 = (($rest$sroa$82$13658$i) + -5)|0;
                     $rest$sroa$0$1$be$i = $$pre$phi$i1572$iZ2D;$rest$sroa$82$1$be$i = $416;
                     break L144;
                    }
                   } while(0);
                   $399 = HEAP32[$138>>2]|0;
                   FUNCTION_TABLE_viiii[$399 & 511]($_435$i,$1,18795,1);
                   $self$i1500$sroa$0$0$copyload$i = HEAP32[$_435$i>>2]|0;
                   $switch3$i1501$i = ($self$i1500$sroa$0$0$copyload$i|0)==(1);
                   if ($switch3$i1501$i) {
                    label = 270;
                    break L79;
                   }
                   if ($508) {
                    $$pre$i1533$i = ((($rest$sroa$0$13621$i)) + 5|0);
                    $$pre$phi$i1538$iZ2D = $$pre$i1533$i;
                   } else {
                    $not$$i$i1535$i = ($rest$sroa$82$13658$i>>>0)>(5);
                    if (!($not$$i$i1535$i)) {
                     label = 275;
                     break L79;
                    }
                    $404 = ((($rest$sroa$0$13621$i)) + 5|0);
                    $405 = HEAP8[$404>>0]|0;
                    $406 = ($405<<24>>24)>(-65);
                    if ($406) {
                     $$pre$phi$i1538$iZ2D = $404;
                    } else {
                     label = 275;
                     break L79;
                    }
                   }
                   $407 = (($rest$sroa$82$13658$i) + -5)|0;
                   $rest$sroa$0$1$be$i = $$pre$phi$i1538$iZ2D;$rest$sroa$82$1$be$i = $407;
                   break L144;
                  }
                 } while(0);
                 $390 = HEAP32[$138>>2]|0;
                 FUNCTION_TABLE_viiii[$390 & 511]($_412$i,$1,18789,1);
                 $self$i1459$sroa$0$0$copyload$i = HEAP32[$_412$i>>2]|0;
                 $switch3$i1460$i = ($self$i1459$sroa$0$0$copyload$i|0)==(1);
                 if ($switch3$i1460$i) {
                  label = 257;
                  break L79;
                 }
                 if ($507) {
                  $$pre$i1491$i = ((($rest$sroa$0$13621$i)) + 5|0);
                  $$pre$phi$i1496$iZ2D = $$pre$i1491$i;
                 } else {
                  $not$$i$i1493$i = ($rest$sroa$82$13658$i>>>0)>(5);
                  if (!($not$$i$i1493$i)) {
                   label = 262;
                   break L79;
                  }
                  $395 = ((($rest$sroa$0$13621$i)) + 5|0);
                  $396 = HEAP8[$395>>0]|0;
                  $397 = ($396<<24>>24)>(-65);
                  if ($397) {
                   $$pre$phi$i1496$iZ2D = $395;
                  } else {
                   label = 262;
                   break L79;
                  }
                 }
                 $398 = (($rest$sroa$82$13658$i) + -5)|0;
                 $rest$sroa$0$1$be$i = $$pre$phi$i1496$iZ2D;$rest$sroa$82$1$be$i = $398;
                 break L144;
                }
               } while(0);
               $$pre$i1065$ptr$i = ((($rest$sroa$0$13621$i)) + 1|0);
               do {
                if ($216) {
                 $502 = 0;
                 label = 136;
                } else {
                 $222 = HEAP8[$$pre$i1065$ptr$i>>0]|0;
                 $223 = ($222<<24>>24)>(-65);
                 if (!($223)) {
                  label = 119;
                  break L79;
                 }
                 $224 = (($rest$sroa$82$13658$i) + -1)|0;
                 $$ptr$i = (($rest$sroa$0$13621$i) + ($rest$sroa$82$13658$i)|0);
                 $225 = ($224|0)==(0);
                 if ($225) {
                  $502 = 0;
                  label = 136;
                  break;
                 }
                 $227 = ((($rest$sroa$0$13621$i)) + 2|0);
                 $228 = ($222<<24>>24)>(-1);
                 do {
                  if ($228) {
                   $226 = $222&255;
                   $_176$sroa$5$2$ph$i = $226;
                  } else {
                   $229 = $222 & 31;
                   $230 = $229&255;
                   $231 = ($rest$sroa$82$13658$i|0)==(2);
                   if ($231) {
                    $238 = $$ptr$i;$_0$0$i23$i$i1082$i = 0;
                   } else {
                    $232 = ((($rest$sroa$0$13621$i)) + 3|0);
                    $233 = HEAP8[$227>>0]|0;
                    $phitmp$i$i1080$i = $233 & 63;
                    $238 = $232;$_0$0$i23$i$i1082$i = $phitmp$i$i1080$i;
                   }
                   $234 = $230 << 6;
                   $235 = $_0$0$i23$i$i1082$i&255;
                   $236 = $235 | $234;
                   $237 = ($222&255)>(223);
                   if (!($237)) {
                    $_176$sroa$5$2$ph$i = $236;
                    break;
                   }
                   $239 = ($238|0)==($$ptr$i|0);
                   if ($239) {
                    $248 = $$ptr$i;$_0$0$i16$i$i1087$i = 0;
                   } else {
                    $240 = ((($238)) + 1|0);
                    $241 = HEAP8[$238>>0]|0;
                    $phitmp32$i$i1085$i = $241 & 63;
                    $248 = $240;$_0$0$i16$i$i1087$i = $phitmp32$i$i1085$i;
                   }
                   $242 = $235 << 6;
                   $243 = $_0$0$i16$i$i1087$i&255;
                   $244 = $243 | $242;
                   $245 = $230 << 12;
                   $246 = $244 | $245;
                   $247 = ($222&255)>(239);
                   if (!($247)) {
                    $_176$sroa$5$2$ph$i = $246;
                    break;
                   }
                   $249 = ($248|0)==($$ptr$i|0);
                   if ($249) {
                    $_0$0$i10$i$i1092$i = 0;
                   } else {
                    $250 = HEAP8[$248>>0]|0;
                    $phitmp33$i$i1090$i = $250 & 63;
                    $_0$0$i10$i$i1092$i = $phitmp33$i$i1090$i;
                   }
                   $251 = $230 << 18;
                   $252 = $251 & 1835008;
                   $253 = $244 << 6;
                   $254 = $_0$0$i10$i$i1092$i&255;
                   $255 = $253 | $252;
                   $256 = $255 | $254;
                   $_176$sroa$5$2$ph$i = $256;
                  }
                 } while(0);
                 $cond$i107 = ($_176$sroa$5$2$ph$i|0)==(46);
                 if (!($cond$i107)) {
                  $502 = $224;
                  label = 136;
                  break;
                 }
                 $260 = HEAP32[$138>>2]|0;
                 FUNCTION_TABLE_viiii[$260 & 511]($_186$i,$1,18740,2);
                 $self$i1114$sroa$0$0$copyload$i = HEAP32[$_186$i>>2]|0;
                 $switch3$i1115$i = ($self$i1114$sroa$0$0$copyload$i|0)==(1);
                 if ($switch3$i1115$i) {
                  label = 139;
                  break L79;
                 }
                 $262 = ($rest$sroa$82$13658$i|0)==(2);
                 if (!($262)) {
                  $263 = HEAP8[$227>>0]|0;
                  $264 = ($263<<24>>24)>(-65);
                  if (!($264)) {
                   label = 142;
                   break L79;
                  }
                 }
                 $265 = (($rest$sroa$82$13658$i) + -2)|0;
                 $$sink$i$index = $227;$$sink$i$index2 = $265;
                }
               } while(0);
               if ((label|0) == 136) {
                label = 0;
                $261 = HEAP32[$138>>2]|0;
                FUNCTION_TABLE_viiii[$261 & 511]($_205$i,$1,23821,1);
                $self$i1121$sroa$0$0$copyload$i = HEAP32[$_205$i>>2]|0;
                $switch3$i1122$i = ($self$i1121$sroa$0$0$copyload$i|0)==(1);
                if ($switch3$i1122$i) {
                 label = 144;
                 break L79;
                }
                if (!($216)) {
                 $266 = HEAP8[$$pre$i1065$ptr$i>>0]|0;
                 $267 = ($266<<24>>24)>(-65);
                 if (!($267)) {
                  label = 147;
                  break L79;
                 }
                }
                $$sink$i$index = $$pre$i1065$ptr$i;$$sink$i$index2 = $502;
               }
               $rest$sroa$0$1$be$i = $$sink$i$index;$rest$sroa$82$1$be$i = $$sink$i$index2;
              }
             } while(0);
             if ((label|0) == 154) {
              label = 0;
              $275 = (($rest$sroa$0$13621$i) + ($rest$sroa$82$13658$i)|0);
              $276 = $rest$sroa$0$13621$i;
              $277 = $276;$_657$sroa$0$0$i = 0;
              L420: while(1) {
               $$cast$i$i$i$i = $277;
               $278 = ($$cast$i$i$i$i|0)==($275|0);
               if ($278) {
                $idx$0$i = $rest$sroa$82$13658$i;
                break;
               }
               $281 = ((($$cast$i$i$i$i)) + 1|0);
               $280 = HEAP8[$$cast$i$i$i$i>>0]|0;
               $282 = ($280<<24>>24)>(-1);
               $283 = $281;
               do {
                if ($282) {
                 $279 = $280&255;
                 $318 = $283;$trunc$i$i$i = $279;
                } else {
                 $284 = $280 & 31;
                 $285 = $284&255;
                 $286 = ($281|0)==($275|0);
                 if ($286) {
                  $294 = $275;$503 = $283;$_0$0$i23$i$i$i$i$i$i = 0;
                 } else {
                  $287 = ((($$cast$i$i$i$i)) + 2|0);
                  $288 = HEAP8[$281>>0]|0;
                  $phitmp$i$i$i$i$i$i = $288 & 63;
                  $289 = $287;
                  $294 = $287;$503 = $289;$_0$0$i23$i$i$i$i$i$i = $phitmp$i$i$i$i$i$i;
                 }
                 $290 = $285 << 6;
                 $291 = $_0$0$i23$i$i$i$i$i$i&255;
                 $292 = $291 | $290;
                 $293 = ($280&255)>(223);
                 if (!($293)) {
                  $318 = $503;$trunc$i$i$i = $292;
                  break;
                 }
                 $295 = ($294|0)==($275|0);
                 if ($295) {
                  $305 = $275;$504 = $503;$_0$0$i16$i$i$i$i$i$i = 0;
                 } else {
                  $296 = ((($294)) + 1|0);
                  $297 = HEAP8[$294>>0]|0;
                  $phitmp32$i$i$i$i$i$i = $297 & 63;
                  $298 = $296;
                  $305 = $296;$504 = $298;$_0$0$i16$i$i$i$i$i$i = $phitmp32$i$i$i$i$i$i;
                 }
                 $299 = $291 << 6;
                 $300 = $_0$0$i16$i$i$i$i$i$i&255;
                 $301 = $300 | $299;
                 $302 = $285 << 12;
                 $303 = $301 | $302;
                 $304 = ($280&255)>(239);
                 if (!($304)) {
                  $318 = $504;$trunc$i$i$i = $303;
                  break;
                 }
                 $306 = ($305|0)==($275|0);
                 if ($306) {
                  $505 = $504;$_0$0$i10$i$i$i$i$i$i = 0;
                 } else {
                  $307 = ((($305)) + 1|0);
                  $308 = HEAP8[$305>>0]|0;
                  $phitmp33$i$i$i$i$i$i = $308 & 63;
                  $309 = $307;
                  $505 = $309;$_0$0$i10$i$i$i$i$i$i = $phitmp33$i$i$i$i$i$i;
                 }
                 $310 = $285 << 18;
                 $311 = $310 & 1835008;
                 $312 = $301 << 6;
                 $313 = $_0$0$i10$i$i$i$i$i$i&255;
                 $314 = $312 | $311;
                 $315 = $314 | $313;
                 $318 = $505;$trunc$i$i$i = $315;
                }
               } while(0);
               $316 = (($_657$sroa$0$0$i) - ($277))|0;
               $317 = (($316) + ($318))|0;
               $trunc$i$i$i$clear = $trunc$i$i$i & 2097151;
               switch ($trunc$i$i$i$clear|0) {
               case 46: case 36:  {
                $idx$0$i = $_657$sroa$0$0$i;
                break L420;
                break;
               }
               default: {
                $277 = $318;$_657$sroa$0$0$i = $317;
               }
               }
              }
              $478 = ($idx$0$i|0)==(0);
              $479 = ($rest$sroa$82$13658$i|0)==($idx$0$i|0);
              $or$cond$i$i1868$i = $478 | $479;
              if (!($or$cond$i$i1868$i)) {
               $not$$i$i1869$i = ($rest$sroa$82$13658$i>>>0)>($idx$0$i>>>0);
               if (!($not$$i$i1869$i)) {
                label = 383;
                break L79;
               }
               $480 = (($rest$sroa$0$13621$i) + ($idx$0$i)|0);
               $481 = HEAP8[$480>>0]|0;
               $482 = ($481<<24>>24)>(-65);
               if (!($482)) {
                label = 383;
                break L79;
               }
              }
              $483 = HEAP32[$138>>2]|0;
              FUNCTION_TABLE_viiii[$483 & 511]($_665$i,$1,$rest$sroa$0$13621$i,$idx$0$i);
              $self$i1875$sroa$0$0$copyload$i = HEAP32[$_665$i>>2]|0;
              $switch3$i1876$i = ($self$i1875$sroa$0$0$copyload$i|0)==(1);
              if ($switch3$i1876$i) {
               label = 385;
               break L79;
              }
              if ($or$cond$i$i1868$i) {
               $$pre$i1900$i = (($rest$sroa$0$13621$i) + ($idx$0$i)|0);
               $$pre$phi$i1905$iZ2D = $$pre$i1900$i;
              } else {
               $not$$i$i1902$i = ($rest$sroa$82$13658$i>>>0)>($idx$0$i>>>0);
               if (!($not$$i$i1902$i)) {
                label = 390;
                break L79;
               }
               $484 = (($rest$sroa$0$13621$i) + ($idx$0$i)|0);
               $485 = HEAP8[$484>>0]|0;
               $486 = ($485<<24>>24)>(-65);
               if ($486) {
                $$pre$phi$i1905$iZ2D = $484;
               } else {
                label = 390;
                break L79;
               }
              }
              $487 = (($rest$sroa$82$13658$i) - ($idx$0$i))|0;
              $rest$sroa$0$1$be$i = $$pre$phi$i1905$iZ2D;$rest$sroa$82$1$be$i = $487;
             }
             $488 = ($rest$sroa$82$1$be$i|0)==(0);
             if ($488) {
              break L139;
             } else {
              $_141$i$sroa$1417$1921$phi = $_141$i$sroa$1417$1921;$rest$sroa$0$13621$i = $rest$sroa$0$1$be$i;$rest$sroa$82$13658$i = $rest$sroa$82$1$be$i;$_141$i$sroa$1417$1921 = $_141$i$sroa$1417$1921$phi;
              label = 113;
             }
            }
            $472 = HEAP32[$138>>2]|0;
            FUNCTION_TABLE_viiii[$472 & 511]($_640$i,$1,$rest$sroa$0$13621$i,$rest$sroa$82$13658$i);
            $self$i1825$sroa$0$0$copyload$i = HEAP32[$_640$i>>2]|0;
            $switch3$i1826$i = ($self$i1825$sroa$0$0$copyload$i|0)==(1);
            if ($switch3$i1826$i) {
             label = 377;
             break L79;
            }
           }
          } while(0);
          $477 = ($200|0)==(0);
          if ($477) {
           break L4;
          } else {
           $_141$i$sroa$0$sroa$9$0 = $_141$i$sroa$0$sroa$9$1;$first$0$off03698$i = 0;$inner$sroa$0$23699$i = $$pre$phi$i2894$iZ2D;$inner$sroa$12$23700$i = $200;
          }
         }
         switch (label|0) {
          case 64: {
           $self$i946$sroa$5$0$$sroa_idx2766$i = ((($_114$i)) + 8|0);
           $self$i946$sroa$5$0$copyload$i = HEAP32[$self$i946$sroa$5$0$$sroa_idx2766$i>>2]|0;
           $self$i946$sroa$4$0$$sroa_idx2764$i = ((($_114$i)) + 4|0);
           $self$i946$sroa$4$0$copyload$i = HEAP32[$self$i946$sroa$4$0$$sroa_idx2764$i>>2]|0;
           $_50$sroa$29$0$ph$off0 = $self$i946$sroa$4$0$copyload$i;$_50$sroa$29$0$ph$off32 = $self$i946$sroa$5$0$copyload$i;
           break L38;
           break;
          }
          case 78: {
           __ZN4core9panicking5panic17ha7507e8e32961bfeE(6500);
           // unreachable;
           break;
          }
          case 85: {
           __ZN4core3str16slice_error_fail17h5f5b915047c27c9dE($inner$sroa$0$23699$i,$inner$sroa$12$23700$i,0,$179);
           // unreachable;
           break;
          }
          case 94: {
           __ZN4core6result13unwrap_failed17h634fe524bd8d8a9eE($_141$i$sroa$0$sroa$9$1$ph);
           // unreachable;
           break;
          }
          case 99: {
           __ZN4core3str16slice_error_fail17h5f5b915047c27c9dE($rest$sroa$0$03611$i,$rest$sroa$82$03612$i,$_141$i$sroa$1417$1,$rest$sroa$82$03612$i);
           // unreachable;
           break;
          }
          case 107: {
           __ZN4core3str16slice_error_fail17h5f5b915047c27c9dE($rest$sroa$0$03611$i,$rest$sroa$82$03612$lcssa3762$i,1,$rest$sroa$82$03612$lcssa3762$i);
           // unreachable;
           break;
          }
          case 110: {
           __ZN4core3str16slice_error_fail17h5f5b915047c27c9dE($rest$sroa$0$03611$i,$_141$i$sroa$1417$1,1,$_141$i$sroa$1417$1);
           // unreachable;
           break;
          }
          case 119: {
           __ZN4core3str16slice_error_fail17h5f5b915047c27c9dE($rest$sroa$0$13621$i,$rest$sroa$82$13658$i,1,$rest$sroa$82$13658$i);
           // unreachable;
           break;
          }
          case 139: {
           $self$i1114$sroa$5$0$$sroa_idx2771$i = ((($_186$i)) + 8|0);
           $self$i1114$sroa$5$0$copyload$i = HEAP32[$self$i1114$sroa$5$0$$sroa_idx2771$i>>2]|0;
           $self$i1114$sroa$4$0$$sroa_idx2769$i = ((($_186$i)) + 4|0);
           $self$i1114$sroa$4$0$copyload$i = HEAP32[$self$i1114$sroa$4$0$$sroa_idx2769$i>>2]|0;
           $_50$sroa$29$0$ph$off0 = $self$i1114$sroa$4$0$copyload$i;$_50$sroa$29$0$ph$off32 = $self$i1114$sroa$5$0$copyload$i;
           break L38;
           break;
          }
          case 142: {
           __ZN4core3str16slice_error_fail17h5f5b915047c27c9dE($rest$sroa$0$13621$i,$rest$sroa$82$13658$i,2,$rest$sroa$82$13658$i);
           // unreachable;
           break;
          }
          case 144: {
           $self$i1121$sroa$5$0$$sroa_idx2776$i = ((($_205$i)) + 8|0);
           $self$i1121$sroa$5$0$copyload$i = HEAP32[$self$i1121$sroa$5$0$$sroa_idx2776$i>>2]|0;
           $self$i1121$sroa$4$0$$sroa_idx2774$i = ((($_205$i)) + 4|0);
           $self$i1121$sroa$4$0$copyload$i = HEAP32[$self$i1121$sroa$4$0$$sroa_idx2774$i>>2]|0;
           $_50$sroa$29$0$ph$off0 = $self$i1121$sroa$4$0$copyload$i;$_50$sroa$29$0$ph$off32 = $self$i1121$sroa$5$0$copyload$i;
           break L38;
           break;
          }
          case 147: {
           __ZN4core3str16slice_error_fail17h5f5b915047c27c9dE($rest$sroa$0$13621$i,$rest$sroa$82$13658$i,1,$rest$sroa$82$13658$i);
           // unreachable;
           break;
          }
          case 173: {
           $self$i1188$sroa$5$0$$sroa_idx2781$i = ((($_228$i)) + 8|0);
           $self$i1188$sroa$5$0$copyload$i = HEAP32[$self$i1188$sroa$5$0$$sroa_idx2781$i>>2]|0;
           $self$i1188$sroa$4$0$$sroa_idx2779$i = ((($_228$i)) + 4|0);
           $self$i1188$sroa$4$0$copyload$i = HEAP32[$self$i1188$sroa$4$0$$sroa_idx2779$i>>2]|0;
           $_50$sroa$29$0$ph$off0 = $self$i1188$sroa$4$0$copyload$i;$_50$sroa$29$0$ph$off32 = $self$i1188$sroa$5$0$copyload$i;
           break L38;
           break;
          }
          case 176: {
           __ZN4core3str16slice_error_fail17h5f5b915047c27c9dE($rest$sroa$0$13621$i,$rest$sroa$82$13658$i,4,$rest$sroa$82$13658$i);
           // unreachable;
           break;
          }
          case 183: {
           $self$i1230$sroa$5$0$$sroa_idx2786$i = ((($_251$i)) + 8|0);
           $self$i1230$sroa$5$0$copyload$i = HEAP32[$self$i1230$sroa$5$0$$sroa_idx2786$i>>2]|0;
           $self$i1230$sroa$4$0$$sroa_idx2784$i = ((($_251$i)) + 4|0);
           $self$i1230$sroa$4$0$copyload$i = HEAP32[$self$i1230$sroa$4$0$$sroa_idx2784$i>>2]|0;
           $_50$sroa$29$0$ph$off0 = $self$i1230$sroa$4$0$copyload$i;$_50$sroa$29$0$ph$off32 = $self$i1230$sroa$5$0$copyload$i;
           break L38;
           break;
          }
          case 186: {
           __ZN4core3str16slice_error_fail17h5f5b915047c27c9dE($rest$sroa$0$13621$i,$rest$sroa$82$13658$i,4,$rest$sroa$82$13658$i);
           // unreachable;
           break;
          }
          case 193: {
           $self$i1256$sroa$5$0$$sroa_idx2791$i = ((($_274$i)) + 8|0);
           $self$i1256$sroa$5$0$copyload$i = HEAP32[$self$i1256$sroa$5$0$$sroa_idx2791$i>>2]|0;
           $self$i1256$sroa$4$0$$sroa_idx2789$i = ((($_274$i)) + 4|0);
           $self$i1256$sroa$4$0$copyload$i = HEAP32[$self$i1256$sroa$4$0$$sroa_idx2789$i>>2]|0;
           $_50$sroa$29$0$ph$off0 = $self$i1256$sroa$4$0$copyload$i;$_50$sroa$29$0$ph$off32 = $self$i1256$sroa$5$0$copyload$i;
           break L38;
           break;
          }
          case 196: {
           __ZN4core3str16slice_error_fail17h5f5b915047c27c9dE($rest$sroa$0$13621$i,$rest$sroa$82$13658$i,4,$rest$sroa$82$13658$i);
           // unreachable;
           break;
          }
          case 203: {
           $self$i1282$sroa$5$0$$sroa_idx2796$i = ((($_297$i)) + 8|0);
           $self$i1282$sroa$5$0$copyload$i = HEAP32[$self$i1282$sroa$5$0$$sroa_idx2796$i>>2]|0;
           $self$i1282$sroa$4$0$$sroa_idx2794$i = ((($_297$i)) + 4|0);
           $self$i1282$sroa$4$0$copyload$i = HEAP32[$self$i1282$sroa$4$0$$sroa_idx2794$i>>2]|0;
           $_50$sroa$29$0$ph$off0 = $self$i1282$sroa$4$0$copyload$i;$_50$sroa$29$0$ph$off32 = $self$i1282$sroa$5$0$copyload$i;
           break L38;
           break;
          }
          case 206: {
           __ZN4core3str16slice_error_fail17h5f5b915047c27c9dE($rest$sroa$0$13621$i,$rest$sroa$82$13658$i,4,$rest$sroa$82$13658$i);
           // unreachable;
           break;
          }
          case 213: {
           $self$i1308$sroa$5$0$$sroa_idx2801$i = ((($_320$i)) + 8|0);
           $self$i1308$sroa$5$0$copyload$i = HEAP32[$self$i1308$sroa$5$0$$sroa_idx2801$i>>2]|0;
           $self$i1308$sroa$4$0$$sroa_idx2799$i = ((($_320$i)) + 4|0);
           $self$i1308$sroa$4$0$copyload$i = HEAP32[$self$i1308$sroa$4$0$$sroa_idx2799$i>>2]|0;
           $_50$sroa$29$0$ph$off0 = $self$i1308$sroa$4$0$copyload$i;$_50$sroa$29$0$ph$off32 = $self$i1308$sroa$5$0$copyload$i;
           break L38;
           break;
          }
          case 216: {
           __ZN4core3str16slice_error_fail17h5f5b915047c27c9dE($rest$sroa$0$13621$i,$rest$sroa$82$13658$i,4,$rest$sroa$82$13658$i);
           // unreachable;
           break;
          }
          case 223: {
           $self$i1342$sroa$5$0$$sroa_idx2806$i = ((($_343$i)) + 8|0);
           $self$i1342$sroa$5$0$copyload$i = HEAP32[$self$i1342$sroa$5$0$$sroa_idx2806$i>>2]|0;
           $self$i1342$sroa$4$0$$sroa_idx2804$i = ((($_343$i)) + 4|0);
           $self$i1342$sroa$4$0$copyload$i = HEAP32[$self$i1342$sroa$4$0$$sroa_idx2804$i>>2]|0;
           $_50$sroa$29$0$ph$off0 = $self$i1342$sroa$4$0$copyload$i;$_50$sroa$29$0$ph$off32 = $self$i1342$sroa$5$0$copyload$i;
           break L38;
           break;
          }
          case 226: {
           __ZN4core3str16slice_error_fail17h5f5b915047c27c9dE($rest$sroa$0$13621$i,$rest$sroa$82$13658$i,4,$rest$sroa$82$13658$i);
           // unreachable;
           break;
          }
          case 233: {
           $self$i1383$sroa$5$0$$sroa_idx2811$i = ((($_366$i)) + 8|0);
           $self$i1383$sroa$5$0$copyload$i = HEAP32[$self$i1383$sroa$5$0$$sroa_idx2811$i>>2]|0;
           $self$i1383$sroa$4$0$$sroa_idx2809$i = ((($_366$i)) + 4|0);
           $self$i1383$sroa$4$0$copyload$i = HEAP32[$self$i1383$sroa$4$0$$sroa_idx2809$i>>2]|0;
           $_50$sroa$29$0$ph$off0 = $self$i1383$sroa$4$0$copyload$i;$_50$sroa$29$0$ph$off32 = $self$i1383$sroa$5$0$copyload$i;
           break L38;
           break;
          }
          case 236: {
           __ZN4core3str16slice_error_fail17h5f5b915047c27c9dE($rest$sroa$0$13621$i,$rest$sroa$82$13658$i,4,$rest$sroa$82$13658$i);
           // unreachable;
           break;
          }
          case 244: {
           $self$i1425$sroa$5$0$$sroa_idx2816$i = ((($_389$i)) + 8|0);
           $self$i1425$sroa$5$0$copyload$i = HEAP32[$self$i1425$sroa$5$0$$sroa_idx2816$i>>2]|0;
           $self$i1425$sroa$4$0$$sroa_idx2814$i = ((($_389$i)) + 4|0);
           $self$i1425$sroa$4$0$copyload$i = HEAP32[$self$i1425$sroa$4$0$$sroa_idx2814$i>>2]|0;
           $_50$sroa$29$0$ph$off0 = $self$i1425$sroa$4$0$copyload$i;$_50$sroa$29$0$ph$off32 = $self$i1425$sroa$5$0$copyload$i;
           break L38;
           break;
          }
          case 249: {
           __ZN4core3str16slice_error_fail17h5f5b915047c27c9dE($rest$sroa$0$13621$i,$rest$sroa$82$13658$i,3,$rest$sroa$82$13658$i);
           // unreachable;
           break;
          }
          case 257: {
           $self$i1459$sroa$5$0$$sroa_idx2821$i = ((($_412$i)) + 8|0);
           $self$i1459$sroa$5$0$copyload$i = HEAP32[$self$i1459$sroa$5$0$$sroa_idx2821$i>>2]|0;
           $self$i1459$sroa$4$0$$sroa_idx2819$i = ((($_412$i)) + 4|0);
           $self$i1459$sroa$4$0$copyload$i = HEAP32[$self$i1459$sroa$4$0$$sroa_idx2819$i>>2]|0;
           $_50$sroa$29$0$ph$off0 = $self$i1459$sroa$4$0$copyload$i;$_50$sroa$29$0$ph$off32 = $self$i1459$sroa$5$0$copyload$i;
           break L38;
           break;
          }
          case 262: {
           __ZN4core3str16slice_error_fail17h5f5b915047c27c9dE($rest$sroa$0$13621$i,$rest$sroa$82$13658$i,5,$rest$sroa$82$13658$i);
           // unreachable;
           break;
          }
          case 270: {
           $self$i1500$sroa$5$0$$sroa_idx2826$i = ((($_435$i)) + 8|0);
           $self$i1500$sroa$5$0$copyload$i = HEAP32[$self$i1500$sroa$5$0$$sroa_idx2826$i>>2]|0;
           $self$i1500$sroa$4$0$$sroa_idx2824$i = ((($_435$i)) + 4|0);
           $self$i1500$sroa$4$0$copyload$i = HEAP32[$self$i1500$sroa$4$0$$sroa_idx2824$i>>2]|0;
           $_50$sroa$29$0$ph$off0 = $self$i1500$sroa$4$0$copyload$i;$_50$sroa$29$0$ph$off32 = $self$i1500$sroa$5$0$copyload$i;
           break L38;
           break;
          }
          case 275: {
           __ZN4core3str16slice_error_fail17h5f5b915047c27c9dE($rest$sroa$0$13621$i,$rest$sroa$82$13658$i,5,$rest$sroa$82$13658$i);
           // unreachable;
           break;
          }
          case 283: {
           $self$i1542$sroa$5$0$$sroa_idx2831$i = ((($_458$i)) + 8|0);
           $self$i1542$sroa$5$0$copyload$i = HEAP32[$self$i1542$sroa$5$0$$sroa_idx2831$i>>2]|0;
           $self$i1542$sroa$4$0$$sroa_idx2829$i = ((($_458$i)) + 4|0);
           $self$i1542$sroa$4$0$copyload$i = HEAP32[$self$i1542$sroa$4$0$$sroa_idx2829$i>>2]|0;
           $_50$sroa$29$0$ph$off0 = $self$i1542$sroa$4$0$copyload$i;$_50$sroa$29$0$ph$off32 = $self$i1542$sroa$5$0$copyload$i;
           break L38;
           break;
          }
          case 288: {
           __ZN4core3str16slice_error_fail17h5f5b915047c27c9dE($rest$sroa$0$13621$i,$rest$sroa$82$13658$i,5,$rest$sroa$82$13658$i);
           // unreachable;
           break;
          }
          case 296: {
           $self$i1576$sroa$5$0$$sroa_idx2836$i = ((($_481$i)) + 8|0);
           $self$i1576$sroa$5$0$copyload$i = HEAP32[$self$i1576$sroa$5$0$$sroa_idx2836$i>>2]|0;
           $self$i1576$sroa$4$0$$sroa_idx2834$i = ((($_481$i)) + 4|0);
           $self$i1576$sroa$4$0$copyload$i = HEAP32[$self$i1576$sroa$4$0$$sroa_idx2834$i>>2]|0;
           $_50$sroa$29$0$ph$off0 = $self$i1576$sroa$4$0$copyload$i;$_50$sroa$29$0$ph$off32 = $self$i1576$sroa$5$0$copyload$i;
           break L38;
           break;
          }
          case 301: {
           __ZN4core3str16slice_error_fail17h5f5b915047c27c9dE($rest$sroa$0$13621$i,$rest$sroa$82$13658$i,5,$rest$sroa$82$13658$i);
           // unreachable;
           break;
          }
          case 309: {
           $self$i1617$sroa$5$0$$sroa_idx2841$i = ((($_504$i)) + 8|0);
           $self$i1617$sroa$5$0$copyload$i = HEAP32[$self$i1617$sroa$5$0$$sroa_idx2841$i>>2]|0;
           $self$i1617$sroa$4$0$$sroa_idx2839$i = ((($_504$i)) + 4|0);
           $self$i1617$sroa$4$0$copyload$i = HEAP32[$self$i1617$sroa$4$0$$sroa_idx2839$i>>2]|0;
           $_50$sroa$29$0$ph$off0 = $self$i1617$sroa$4$0$copyload$i;$_50$sroa$29$0$ph$off32 = $self$i1617$sroa$5$0$copyload$i;
           break L38;
           break;
          }
          case 314: {
           __ZN4core3str16slice_error_fail17h5f5b915047c27c9dE($rest$sroa$0$13621$i,$rest$sroa$82$13658$i,5,$rest$sroa$82$13658$i);
           // unreachable;
           break;
          }
          case 322: {
           $self$i1659$sroa$5$0$$sroa_idx2846$i = ((($_527$i)) + 8|0);
           $self$i1659$sroa$5$0$copyload$i = HEAP32[$self$i1659$sroa$5$0$$sroa_idx2846$i>>2]|0;
           $self$i1659$sroa$4$0$$sroa_idx2844$i = ((($_527$i)) + 4|0);
           $self$i1659$sroa$4$0$copyload$i = HEAP32[$self$i1659$sroa$4$0$$sroa_idx2844$i>>2]|0;
           $_50$sroa$29$0$ph$off0 = $self$i1659$sroa$4$0$copyload$i;$_50$sroa$29$0$ph$off32 = $self$i1659$sroa$5$0$copyload$i;
           break L38;
           break;
          }
          case 327: {
           __ZN4core3str16slice_error_fail17h5f5b915047c27c9dE($rest$sroa$0$13621$i,$rest$sroa$82$13658$i,5,$rest$sroa$82$13658$i);
           // unreachable;
           break;
          }
          case 335: {
           $self$i1693$sroa$5$0$$sroa_idx2851$i = ((($_550$i)) + 8|0);
           $self$i1693$sroa$5$0$copyload$i = HEAP32[$self$i1693$sroa$5$0$$sroa_idx2851$i>>2]|0;
           $self$i1693$sroa$4$0$$sroa_idx2849$i = ((($_550$i)) + 4|0);
           $self$i1693$sroa$4$0$copyload$i = HEAP32[$self$i1693$sroa$4$0$$sroa_idx2849$i>>2]|0;
           $_50$sroa$29$0$ph$off0 = $self$i1693$sroa$4$0$copyload$i;$_50$sroa$29$0$ph$off32 = $self$i1693$sroa$5$0$copyload$i;
           break L38;
           break;
          }
          case 340: {
           __ZN4core3str16slice_error_fail17h5f5b915047c27c9dE($rest$sroa$0$13621$i,$rest$sroa$82$13658$i,5,$rest$sroa$82$13658$i);
           // unreachable;
           break;
          }
          case 348: {
           $self$i1734$sroa$5$0$$sroa_idx2856$i = ((($_573$i)) + 8|0);
           $self$i1734$sroa$5$0$copyload$i = HEAP32[$self$i1734$sroa$5$0$$sroa_idx2856$i>>2]|0;
           $self$i1734$sroa$4$0$$sroa_idx2854$i = ((($_573$i)) + 4|0);
           $self$i1734$sroa$4$0$copyload$i = HEAP32[$self$i1734$sroa$4$0$$sroa_idx2854$i>>2]|0;
           $_50$sroa$29$0$ph$off0 = $self$i1734$sroa$4$0$copyload$i;$_50$sroa$29$0$ph$off32 = $self$i1734$sroa$5$0$copyload$i;
           break L38;
           break;
          }
          case 353: {
           __ZN4core3str16slice_error_fail17h5f5b915047c27c9dE($rest$sroa$0$13621$i,$rest$sroa$82$13658$i,5,$rest$sroa$82$13658$i);
           // unreachable;
           break;
          }
          case 361: {
           $self$i1776$sroa$5$0$$sroa_idx2861$i = ((($_596$i)) + 8|0);
           $self$i1776$sroa$5$0$copyload$i = HEAP32[$self$i1776$sroa$5$0$$sroa_idx2861$i>>2]|0;
           $self$i1776$sroa$4$0$$sroa_idx2859$i = ((($_596$i)) + 4|0);
           $self$i1776$sroa$4$0$copyload$i = HEAP32[$self$i1776$sroa$4$0$$sroa_idx2859$i>>2]|0;
           $_50$sroa$29$0$ph$off0 = $self$i1776$sroa$4$0$copyload$i;$_50$sroa$29$0$ph$off32 = $self$i1776$sroa$5$0$copyload$i;
           break L38;
           break;
          }
          case 366: {
           __ZN4core3str16slice_error_fail17h5f5b915047c27c9dE($rest$sroa$0$13621$i,$rest$sroa$82$13658$i,5,$rest$sroa$82$13658$i);
           // unreachable;
           break;
          }
          case 370: {
           $self$i1810$sroa$5$0$$sroa_idx2866$i = ((($_619$i)) + 8|0);
           $self$i1810$sroa$5$0$copyload$i = HEAP32[$self$i1810$sroa$5$0$$sroa_idx2866$i>>2]|0;
           $self$i1810$sroa$4$0$$sroa_idx2864$i = ((($_619$i)) + 4|0);
           $self$i1810$sroa$4$0$copyload$i = HEAP32[$self$i1810$sroa$4$0$$sroa_idx2864$i>>2]|0;
           $_50$sroa$29$0$ph$off0 = $self$i1810$sroa$4$0$copyload$i;$_50$sroa$29$0$ph$off32 = $self$i1810$sroa$5$0$copyload$i;
           break L38;
           break;
          }
          case 375: {
           __ZN4core3str16slice_error_fail17h5f5b915047c27c9dE($rest$sroa$0$13621$i,$rest$sroa$82$13658$i,5,$rest$sroa$82$13658$i);
           // unreachable;
           break;
          }
          case 377: {
           $self$i1825$sroa$5$0$$sroa_idx2871$i = ((($_640$i)) + 8|0);
           $self$i1825$sroa$5$0$copyload$i = HEAP32[$self$i1825$sroa$5$0$$sroa_idx2871$i>>2]|0;
           $self$i1825$sroa$4$0$$sroa_idx2869$i = ((($_640$i)) + 4|0);
           $self$i1825$sroa$4$0$copyload$i = HEAP32[$self$i1825$sroa$4$0$$sroa_idx2869$i>>2]|0;
           $_50$sroa$29$0$ph$off0 = $self$i1825$sroa$4$0$copyload$i;$_50$sroa$29$0$ph$off32 = $self$i1825$sroa$5$0$copyload$i;
           break L38;
           break;
          }
          case 383: {
           __ZN4core3str16slice_error_fail17h5f5b915047c27c9dE($rest$sroa$0$13621$i,$rest$sroa$82$13658$i,0,$idx$0$i);
           // unreachable;
           break;
          }
          case 385: {
           $self$i1875$sroa$5$0$$sroa_idx2876$i = ((($_665$i)) + 8|0);
           $self$i1875$sroa$5$0$copyload$i = HEAP32[$self$i1875$sroa$5$0$$sroa_idx2876$i>>2]|0;
           $self$i1875$sroa$4$0$$sroa_idx2874$i = ((($_665$i)) + 4|0);
           $self$i1875$sroa$4$0$copyload$i = HEAP32[$self$i1875$sroa$4$0$$sroa_idx2874$i>>2]|0;
           $_50$sroa$29$0$ph$off0 = $self$i1875$sroa$4$0$copyload$i;$_50$sroa$29$0$ph$off32 = $self$i1875$sroa$5$0$copyload$i;
           break L38;
           break;
          }
          case 390: {
           __ZN4core3str16slice_error_fail17h5f5b915047c27c9dE($rest$sroa$0$13621$i,$rest$sroa$82$13658$i,$idx$0$i,$rest$sroa$82$13658$i);
           // unreachable;
           break;
          }
         }
        }
       } while(0);
       do {
        if ((label|0) == 59) {
         $139 = ((($2)) + 20|0);
         $140 = HEAP32[$139>>2]|0;
         FUNCTION_TABLE_viiii[$140 & 511]($_93$i,$1,$30,$self$sroa$6$0$copyload$i$i$i);
         $self$i$sroa$0$0$copyload$i = HEAP32[$_93$i>>2]|0;
         $switch3$i$i = ($self$i$sroa$0$0$copyload$i|0)==(1);
         if ($switch3$i$i) {
          $self$i$sroa$5$0$$sroa_idx2761$i = ((($_93$i)) + 8|0);
          $self$i$sroa$5$0$copyload$i = HEAP32[$self$i$sroa$5$0$$sroa_idx2761$i>>2]|0;
          $self$i$sroa$4$0$$sroa_idx2759$i = ((($_93$i)) + 4|0);
          $self$i$sroa$4$0$copyload$i = HEAP32[$self$i$sroa$4$0$$sroa_idx2759$i>>2]|0;
          $_50$sroa$29$0$ph$off0 = $self$i$sroa$4$0$copyload$i;$_50$sroa$29$0$ph$off32 = $self$i$sroa$5$0$copyload$i;
          break;
         } else {
          break L4;
         }
        }
       } while(0);
       HEAP32[$0>>2] = 1;
       $_3$sroa$0$0$$sroa_idx3$i123 = ((($0)) + 4|0);
       $491 = $_3$sroa$0$0$$sroa_idx3$i123;
       $492 = $491;
       HEAP32[$492>>2] = $_50$sroa$29$0$ph$off0;
       $493 = (($491) + 4)|0;
       $494 = $493;
       HEAP32[$494>>2] = $_50$sroa$29$0$ph$off32;
       break L1;
      }
     } else {
      label = 8;
     }
    }
   } while(0);
   do {
    if ((label|0) == 8) {
     HEAP32[$_64>>2] = 6104;
     $31 = ((($_64)) + 4|0);
     HEAP32[$31>>2] = 1;
     $_6$sroa$0$0$$sroa_idx$i = ((($_64)) + 8|0);
     HEAP32[$_6$sroa$0$0$$sroa_idx$i>>2] = 0;
     $32 = ((($_64)) + 16|0);
     HEAP32[$32>>2] = 26744;
     $33 = ((($_64)) + 20|0);
     HEAP32[$33>>2] = 0;
     $34 = HEAP32[$22>>2]|0;
     FUNCTION_TABLE_viii[$34 & 511]($_62,$1,$_64);
     $self$i99$sroa$0$0$copyload = HEAP32[$_62>>2]|0;
     $switch3$i100 = ($self$i99$sroa$0$0$copyload|0)==(1);
     if ($switch3$i100) {
      $self$i99$sroa$5$0$$sroa_idx267 = ((($_62)) + 8|0);
      $self$i99$sroa$5$0$copyload = HEAP32[$self$i99$sroa$5$0$$sroa_idx267>>2]|0;
      $self$i99$sroa$4$0$$sroa_idx265 = ((($_62)) + 4|0);
      $self$i99$sroa$4$0$copyload = HEAP32[$self$i99$sroa$4$0$$sroa_idx265>>2]|0;
      HEAP32[$0>>2] = 1;
      $_3$sroa$0$0$$sroa_idx3$i132 = ((($0)) + 4|0);
      $495 = $_3$sroa$0$0$$sroa_idx3$i132;
      $496 = $495;
      HEAP32[$496>>2] = $self$i99$sroa$4$0$copyload;
      $497 = (($495) + 4)|0;
      $498 = $497;
      HEAP32[$498>>2] = $self$i99$sroa$5$0$copyload;
      break L1;
     } else {
      break;
     }
    }
   } while(0);
   $489 = ((($2)) + 20|0);
   $490 = HEAP32[$489>>2]|0;
   FUNCTION_TABLE_viiii[$490 & 511]($0,$1,18564,1);
   STACKTOP = sp;return;
  }
 } while(0);
 STACKTOP = sp;return;
}
function __ZN50__LT__BP_mut_u20_T_u20_as_u20_core__fmt__Debug_GT_3fmt17hae4db89a7e1cfcc4E($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $_0$0$i15$i$i = 0, $buf$i$i = 0, $curr$0$i$i = 0, $iter$sroa$4$0$in$i$i = 0, $switch$i$i = 0, $x$0$i$i = 0, dest = 0;
 var label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $buf$i$i = sp;
 $2 = HEAP32[$0>>2]|0;
 $3 = ((($1)) + 12|0);
 $4 = $3;
 $5 = $4;
 $6 = HEAP32[$5>>2]|0;
 $7 = (($4) + 4)|0;
 $8 = $7;
 $9 = HEAP32[$8>>2]|0;
 $10 = HEAP32[$1>>2]|0;
 $11 = $10 & 4;
 $12 = ($11|0)==(0);
 if ($12) {
  $16 = $10;
 } else {
  $13 = $10 | 8;
  HEAP32[$1>>2] = $13;
  $switch$i$i = ($6|0)==(1);
  if ($switch$i$i) {
   $16 = $13;
  } else {
   HEAP32[$3>>2] = 1;
   $14 = ((($1)) + 16|0);
   HEAP32[$14>>2] = 10;
   $16 = $13;
  }
 }
 $15 = $16 | 4;
 HEAP32[$1>>2] = $15;
 $17 = ((($buf$i$i)) + 64|0);
 dest=$buf$i$i; stop=dest+64|0; do { HEAP8[dest>>0]=0|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
 $curr$0$i$i = 64;$iter$sroa$4$0$in$i$i = $17;$x$0$i$i = $2;
 while(1) {
  $18 = ((($iter$sroa$4$0$in$i$i)) + -1|0);
  $19 = $x$0$i$i & 15;
  $20 = $x$0$i$i >>> 4;
  $21 = $19&255;
  $22 = ($21&255)<(10);
  $23 = $21 | 48;
  $24 = (($21) + 87)<<24>>24;
  $_0$0$i15$i$i = $22 ? $23 : $24;
  HEAP8[$18>>0] = $_0$0$i15$i$i;
  $25 = (($curr$0$i$i) + -1)|0;
  $26 = ($20|0)==(0);
  if ($26) {
   break;
  } else {
   $curr$0$i$i = $25;$iter$sroa$4$0$in$i$i = $18;$x$0$i$i = $20;
  }
 }
 $27 = ($25>>>0)>(64);
 if ($27) {
  __ZN4core5slice22slice_index_order_fail17h0bf73460ffe8be02E($25,64);
  // unreachable;
 } else {
  $28 = (($buf$i$i) + ($25)|0);
  $29 = (65 - ($curr$0$i$i))|0;
  $30 = (__ZN4core3fmt9Formatter12pad_integral17h30369de78b61ed24E($1,1,24454,2,$28,$29)|0);
  $31 = $3;
  $32 = $31;
  HEAP32[$32>>2] = $6;
  $33 = (($31) + 4)|0;
  $34 = $33;
  HEAP32[$34>>2] = $9;
  HEAP32[$1>>2] = $10;
  STACKTOP = sp;return ($30|0);
 }
 return (0)|0;
}
function __ZN4core6result13unwrap_failed17h634fe524bd8d8a9eE($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $_12 = 0, $_6$sroa$0$0$$sroa_idx$i = 0, $_7 = 0, $error = 0, $msg = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $msg = sp + 48|0;
 $error = sp + 40|0;
 $_7 = sp + 16|0;
 $_12 = sp;
 HEAP32[$msg>>2] = 18843;
 $1 = ((($msg)) + 4|0);
 HEAP32[$1>>2] = 43;
 HEAP8[$error>>0] = $0;
 $2 = $msg;
 $3 = $error;
 HEAP32[$_12>>2] = $2;
 $4 = ((($_12)) + 4|0);
 HEAP32[$4>>2] = (346);
 $5 = ((($_12)) + 8|0);
 HEAP32[$5>>2] = $3;
 $6 = ((($_12)) + 12|0);
 HEAP32[$6>>2] = (362);
 HEAP32[$_7>>2] = (6520);
 $7 = ((($_7)) + 4|0);
 HEAP32[$7>>2] = 2;
 $_6$sroa$0$0$$sroa_idx$i = ((($_7)) + 8|0);
 HEAP32[$_6$sroa$0$0$$sroa_idx$i>>2] = 0;
 $8 = ((($_7)) + 16|0);
 HEAP32[$8>>2] = $_12;
 $9 = ((($_7)) + 20|0);
 HEAP32[$9>>2] = 2;
 __ZN4core9panicking9panic_fmt17hfa35599633a0afa2E($_7,22324,100,799);
 // unreachable;
}
function __ZN3std10sys_common12thread_local9StaticKey9lazy_init17hfe76ff6b56e2d562E($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $_0$0 = 0, $_24$i = 0, $_24$i13 = 0, $_29$i = 0, $_6$sroa$0$0$$sroa_idx$i$i = 0, $_6$sroa$0$0$$sroa_idx$i$i17 = 0, $_7$i = 0, $_7$i10 = 0, $key$028 = 0, $key$i = 0, $key$i9 = 0, $left_val$i = 0;
 var $left_val$i11 = 0, $right_val$i = 0, $right_val$i12 = 0, $success = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(96|0);
 $key$i9 = sp + 92|0;
 $_7$i10 = sp + 88|0;
 $left_val$i11 = sp + 84|0;
 $right_val$i12 = sp + 80|0;
 $_24$i13 = sp + 40|0;
 $key$i = sp + 76|0;
 $_7$i = sp + 72|0;
 $left_val$i = sp + 68|0;
 $right_val$i = sp + 64|0;
 $_24$i = sp + 16|0;
 $_29$i = sp;
 $1 = ((($0)) + 4|0);
 $2 = HEAP32[$1>>2]|0;
 HEAP32[$key$i>>2] = 0;
 $3 = (_pthread_key_create(($key$i|0),($2|0))|0);
 HEAP32[$_7$i>>2] = $3;
 HEAP32[$left_val$i>>2] = $_7$i;
 HEAP32[$right_val$i>>2] = 26728;
 $4 = ($3|0)==(0);
 if (!($4)) {
  $5 = $left_val$i;
  $6 = $right_val$i;
  HEAP32[$_29$i>>2] = $5;
  $7 = ((($_29$i)) + 4|0);
  HEAP32[$7>>2] = (363);
  $8 = ((($_29$i)) + 8|0);
  HEAP32[$8>>2] = $6;
  $9 = ((($_29$i)) + 12|0);
  HEAP32[$9>>2] = (363);
  HEAP32[$_24$i>>2] = 5800;
  $10 = ((($_24$i)) + 4|0);
  HEAP32[$10>>2] = 3;
  $_6$sroa$0$0$$sroa_idx$i$i = ((($_24$i)) + 8|0);
  HEAP32[$_6$sroa$0$0$$sroa_idx$i$i>>2] = 0;
  $11 = ((($_24$i)) + 16|0);
  HEAP32[$11>>2] = $_29$i;
  $12 = ((($_24$i)) + 20|0);
  HEAP32[$12>>2] = 2;
  __ZN3std9panicking15begin_panic_fmt17had2218825161cb57E($_24$i,6112);
  // unreachable;
 }
 $13 = HEAP32[$key$i>>2]|0;
 $14 = ($13|0)==(0);
 if ($14) {
  $15 = HEAP32[$1>>2]|0;
  HEAP32[$key$i9>>2] = 0;
  $16 = (_pthread_key_create(($key$i9|0),($15|0))|0);
  HEAP32[$_7$i10>>2] = $16;
  HEAP32[$left_val$i11>>2] = $_7$i10;
  HEAP32[$right_val$i12>>2] = 26728;
  $17 = ($16|0)==(0);
  if (!($17)) {
   $18 = $left_val$i11;
   $19 = $right_val$i12;
   HEAP32[$_29$i>>2] = $18;
   $20 = ((($_29$i)) + 4|0);
   HEAP32[$20>>2] = (363);
   $21 = ((($_29$i)) + 8|0);
   HEAP32[$21>>2] = $19;
   $22 = ((($_29$i)) + 12|0);
   HEAP32[$22>>2] = (363);
   HEAP32[$_24$i13>>2] = 5800;
   $23 = ((($_24$i13)) + 4|0);
   HEAP32[$23>>2] = 3;
   $_6$sroa$0$0$$sroa_idx$i$i17 = ((($_24$i13)) + 8|0);
   HEAP32[$_6$sroa$0$0$$sroa_idx$i$i17>>2] = 0;
   $24 = ((($_24$i13)) + 16|0);
   HEAP32[$24>>2] = $_29$i;
   $25 = ((($_24$i13)) + 20|0);
   HEAP32[$25>>2] = 2;
   __ZN3std9panicking15begin_panic_fmt17had2218825161cb57E($_24$i13,6112);
   // unreachable;
  }
  $26 = HEAP32[$key$i9>>2]|0;
  (_pthread_key_delete(0)|0);
  $27 = ($26|0)==(0);
  if ($27) {
   __ZN3std9panicking11begin_panic17h9936a195de5ffc4dE_1326(18984,26,6124);
   // unreachable;
  } else {
   $key$028 = $26;
  }
 } else {
  $key$028 = $13;
 }
 $28 = HEAP32[$0>>2]|0;if (($28|0) == 0) HEAP32[$0>>2] = $key$028;
 $success = ($28|0)==(0);
 if ($success) {
  $_0$0 = $key$028;
  STACKTOP = sp;return ($_0$0|0);
 }
 (_pthread_key_delete(($key$028|0))|0);
 $_0$0 = $28;
 STACKTOP = sp;return ($_0$0|0);
}
function __ZN53__LT__RF__u27_a_u20_T_u20_as_u20_core__fmt__Debug_GT_3fmt17ha72b0c565a535e76E($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[$0>>2]|0;
 $3 = (__ZN4core3fmt3num52__LT_impl_u20_core__fmt__Display_u20_for_u20_i32_GT_3fmt17h99aa46b1befc4e8fE($2,$1)|0);
 return ($3|0);
}
function __ZN3std6thread5local2os13destroy_value17h0615f5f984f66ea8E($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $_0$0$i$i = 0, $_0$0$i$i8 = 0, $cond$i$i = 0, $cond$i$i$i$i = 0, $cond$i$i$i$i$i = 0, $cond$i$i6 = 0, $switchtmp$i$i$i$i$i$i$i = 0, $switchtmp$i$i$i$i$i$i$i$i = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[$0>>2]|0;
 $2 = HEAP32[$1>>2]|0;
 $cond$i$i = ($2|0)==(0);
 if ($cond$i$i) {
  __THREW__ = 0;
  $3 = (invoke_ii(338,($1|0))|0);
  $4 = __THREW__; __THREW__ = 0;
  $5 = $4&1;
  if ($5) {
   $19 = ___cxa_find_matching_catch_2()|0;
   $20 = tempRet0;
   $21 = ((($0)) + 4|0);
   $22 = HEAP32[$21>>2]|0;
   $cond$i$i$i$i = ($22|0)==(1);
   if (!($cond$i$i$i$i)) {
    _free($0);
    ___resumeException($19|0);
    // unreachable;
   }
   $23 = ((($0)) + 12|0);
   $24 = HEAP32[$23>>2]|0;
   $switchtmp$i$i$i$i$i$i$i = ($24|0)==(0|0);
   if ($switchtmp$i$i$i$i$i$i$i) {
    _free($0);
    ___resumeException($19|0);
    // unreachable;
   }
   $25 = ((($0)) + 16|0);
   $26 = HEAP32[$25>>2]|0;
   $27 = HEAP32[$26>>2]|0;
   FUNCTION_TABLE_vi[$27 & 511]($24);
   $28 = HEAP32[$25>>2]|0;
   $29 = ((($28)) + 4|0);
   $30 = HEAP32[$29>>2]|0;
   $31 = ($30|0)==(0);
   if ($31) {
    _free($0);
    ___resumeException($19|0);
    // unreachable;
   }
   _free($24);
   _free($0);
   ___resumeException($19|0);
   // unreachable;
  } else {
   $_0$0$i$i = $3;
  }
 } else {
  $_0$0$i$i = $2;
 }
 (_pthread_setspecific(($_0$0$i$i|0),((1)|0))|0);
 $6 = ((($0)) + 4|0);
 $7 = HEAP32[$6>>2]|0;
 $cond$i$i$i$i$i = ($7|0)==(1);
 if ($cond$i$i$i$i$i) {
  $8 = ((($0)) + 12|0);
  $9 = HEAP32[$8>>2]|0;
  $switchtmp$i$i$i$i$i$i$i$i = ($9|0)==(0|0);
  if (!($switchtmp$i$i$i$i$i$i$i$i)) {
   $10 = ((($0)) + 16|0);
   $11 = HEAP32[$10>>2]|0;
   $12 = HEAP32[$11>>2]|0;
   FUNCTION_TABLE_vi[$12 & 511]($9);
   $13 = HEAP32[$10>>2]|0;
   $14 = ((($13)) + 4|0);
   $15 = HEAP32[$14>>2]|0;
   $16 = ($15|0)==(0);
   if (!($16)) {
    _free($9);
   }
  }
 }
 _free($0);
 $17 = HEAP32[$1>>2]|0;
 $cond$i$i6 = ($17|0)==(0);
 if (!($cond$i$i6)) {
  $_0$0$i$i8 = $17;
  (_pthread_setspecific(($_0$0$i$i8|0),(0|0))|0);
  return;
 }
 $18 = (__ZN3std10sys_common12thread_local9StaticKey9lazy_init17hfe76ff6b56e2d562E($1)|0);
 $_0$0$i$i8 = $18;
 (_pthread_setspecific(($_0$0$i$i8|0),(0|0))|0);
 return;
}
function __ZN4core6result13unwrap_failed17h0dc63b200336bf84E_1341() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $_12 = 0, $_6$sroa$0$0$$sroa_idx$i = 0, $_7 = 0, $error = 0, $msg = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $error = sp + 48|0;
 $msg = sp + 40|0;
 $_7 = sp + 16|0;
 $_12 = sp;
 HEAP32[$msg>>2] = 19356;
 $0 = ((($msg)) + 4|0);
 HEAP32[$0>>2] = 24;
 $1 = $msg;
 $2 = $error;
 HEAP32[$_12>>2] = $1;
 $3 = ((($_12)) + 4|0);
 HEAP32[$3>>2] = (346);
 $4 = ((($_12)) + 8|0);
 HEAP32[$4>>2] = $2;
 $5 = ((($_12)) + 12|0);
 HEAP32[$5>>2] = (269);
 HEAP32[$_7>>2] = (6520);
 $6 = ((($_7)) + 4|0);
 HEAP32[$6>>2] = 2;
 $_6$sroa$0$0$$sroa_idx$i = ((($_7)) + 8|0);
 HEAP32[$_6$sroa$0$0$$sroa_idx$i>>2] = 0;
 $7 = ((($_7)) + 16|0);
 HEAP32[$7>>2] = $_12;
 $8 = ((($_7)) + 20|0);
 HEAP32[$8>>2] = 2;
 __ZN4core9panicking9panic_fmt17hfa35599633a0afa2E($_7,22324,100,799);
 // unreachable;
}
function __ZN3std6thread6Thread3new17h178353e4ff7321b6E($$0$0$0$0$0$0$0$val,$$0$0$0$0$1$val,$$0$0$0$1$val) {
 $$0$0$0$0$0$0$0$val = $$0$0$0$0$0$0$0$val|0;
 $$0$0$0$0$1$val = $$0$0$0$0$1$val|0;
 $$0$0$0$1$val = $$0$0$0$1$val|0;
 var $$arith = 0, $$overflow = 0, $$pre = 0, $$pre$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0;
 var $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0;
 var $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0;
 var $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0;
 var $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0;
 var $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0;
 var $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $_103$i = 0, $_11$i$i$i = 0, $_135$i = 0, $_14$i$i$i$i$sroa$4$0$$sroa_idx17 = 0, $_14$i$i$i$i$sroa$5$0$$sroa_idx19 = 0, $_140$i = 0;
 var $_22$i = 0, $_27$i = 0, $_59$i = 0, $_6$sroa$0$0$$sroa_idx$i$i = 0, $_6$sroa$0$0$$sroa_idx$i26$i = 0, $_6$sroa$0$0$$sroa_idx$i27$i = 0, $_6$sroa$0$0$$sroa_idx$i28$i = 0, $_64$i = 0, $_8$sroa$0$0$$sroa_idx$i = 0, $_8$sroa$4$0$$sroa_idx$i = 0, $_8$sroa$5$0$$sroa_idx$i = 0, $_8$sroa$6$0$$sroa_idx$i = 0, $_8$sroa$7$0$$sroa_idx$i = 0, $_8$sroa$8$0$$sroa_idx$i = 0, $_8$sroa$9$0$$sroa_idx$i = 0, $_9$i$sroa$0$0$copyload = 0, $_9$i$sroa$4$0$copyload = 0, $_98$i = 0, $attr$i = 0, $attr$i$i$i = 0;
 var $cname$sroa$0$0 = 0, $cname$sroa$5$0 = 0, $e$sroa$4$0$$sroa_idx23$i$i$i = 0, $e$sroa$5$0$$sroa_idx25$i$i$i = 0, $e$sroa$6$0$$sroa_idx27$i$i$i = 0, $eh$lpad$body$index2Z2D = 0, $eh$lpad$body$indexZ2D = 0, $eh$lpad$body9$index10Z2D = 0, $eh$lpad$body9$indexZ2D = 0, $left_val$i = 0, $left_val2$i = 0, $left_val5$i = 0, $left_val8$i = 0, $not$$i$i$i$i$i = 0, $not$$i$i$i$i$i16 = 0, $not$$i$i$i$i15$i = 0, $personalityslot$sroa$0$0 = 0, $personalityslot$sroa$0$1$ph = 0, $personalityslot$sroa$6$0 = 0, $personalityslot$sroa$6$1$ph = 0;
 var $ptr$0$i$i = 0, $r$i = 0, $r1$i = 0, $r4$i = 0, $r7$i = 0, $right_val$i = 0, $right_val3$i = 0, $right_val6$i = 0, $right_val9$i = 0, $self$sroa$0$sroa$0$0$i = 0, $self$sroa$0$sroa$10$0$i = 0, $switch3tmp$i = 0, $switchtmp$i = 0, $v$i = 0, dest = 0, label = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 256|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(256|0);
 $v$i = sp + 192|0;
 $attr$i = sp + 184|0;
 $r$i = sp + 248|0;
 $left_val$i = sp + 244|0;
 $right_val$i = sp + 240|0;
 $_22$i = sp + 160|0;
 $_27$i = sp + 144|0;
 $r1$i = sp + 236|0;
 $left_val2$i = sp + 232|0;
 $right_val3$i = sp + 228|0;
 $_59$i = sp + 120|0;
 $_64$i = sp + 104|0;
 $r4$i = sp + 224|0;
 $left_val5$i = sp + 220|0;
 $right_val6$i = sp + 216|0;
 $_98$i = sp + 80|0;
 $_103$i = sp + 64|0;
 $r7$i = sp + 212|0;
 $left_val8$i = sp + 208|0;
 $right_val9$i = sp + 204|0;
 $_135$i = sp + 40|0;
 $_140$i = sp + 24|0;
 $attr$i$i$i = sp + 16|0;
 $_11$i$i$i = sp;
 $switch3tmp$i = ($$0$0$0$0$0$0$0$val|0)==(0|0);
 L1: do {
  if ($switch3tmp$i) {
   $cname$sroa$0$0 = 0;$cname$sroa$5$0 = 0;
  } else {
   $0 = (_memchr($$0$0$0$0$0$0$0$val,0,$$0$0$0$1$val)|0);
   $1 = ($0|0)==(0|0);
   L3: do {
    if ($1) {
     HEAP32[$v$i>>2] = $$0$0$0$0$0$0$0$val;
     $_14$i$i$i$i$sroa$4$0$$sroa_idx17 = ((($v$i)) + 4|0);
     HEAP32[$_14$i$i$i$i$sroa$4$0$$sroa_idx17>>2] = $$0$0$0$0$1$val;
     $_14$i$i$i$i$sroa$5$0$$sroa_idx19 = ((($v$i)) + 8|0);
     HEAP32[$_14$i$i$i$i$sroa$5$0$$sroa_idx19>>2] = $$0$0$0$1$val;
     $8 = ($$0$0$0$0$1$val|0)==($$0$0$0$1$val|0);
     do {
      if ($8) {
       $$arith = (($$0$0$0$1$val) + 1)|0;
       $$overflow = ($$0$0$0$1$val>>>0)>(4294967294);
       if ($$overflow) {
        __THREW__ = 0;
        invoke_vii(219,(19331|0),17);
        $9 = __THREW__; __THREW__ = 0;
        break;
       }
       $10 = ($$arith|0)<(0);
       if ($10) {
        __THREW__ = 0;
        invoke_vi(220,(6432|0));
        $11 = __THREW__; __THREW__ = 0;
        break;
       }
       $12 = ($$0$0$0$1$val|0)==(0);
       if ($12) {
        $13 = (_malloc($$arith)|0);
        $ptr$0$i$i = $13;
       } else {
        $14 = (_realloc($$0$0$0$0$0$0$0$val,$$arith)|0);
        $ptr$0$i$i = $14;
       }
       $15 = ($ptr$0$i$i|0)==(0|0);
       if ($15) {
        __THREW__ = 0;
        invoke_v(210);
        $16 = __THREW__; __THREW__ = 0;
        break;
       } else {
        HEAP32[$v$i>>2] = $ptr$0$i$i;
        HEAP32[$_14$i$i$i$i$sroa$4$0$$sroa_idx17>>2] = $$arith;
        $129 = $ptr$0$i$i;$17 = $$arith;
        label = 15;
        break;
       }
      } else {
       $129 = $$0$0$0$0$0$0$0$val;$17 = $$0$0$0$0$1$val;
       label = 15;
      }
     } while(0);
     do {
      if ((label|0) == 15) {
       $18 = ($17|0)==($$0$0$0$1$val|0);
       if ($18) {
        __THREW__ = 0;
        invoke_vi(332,($v$i|0));
        $19 = __THREW__; __THREW__ = 0;
        $20 = $19&1;
        if ($20) {
         break;
        }
        $$pre$i$i = HEAP32[$_14$i$i$i$i$sroa$5$0$$sroa_idx19>>2]|0;
        $$pre = HEAP32[$v$i>>2]|0;
        $22 = $$pre;$23 = $$pre$i$i;
       } else {
        $22 = $129;$23 = $$0$0$0$1$val;
       }
       $21 = (($22) + ($23)|0);
       HEAP8[$21>>0] = 0;
       $24 = (($23) + 1)|0;
       HEAP32[$_14$i$i$i$i$sroa$5$0$$sroa_idx19>>2] = $24;
       $_9$i$sroa$0$0$copyload = HEAP32[$v$i>>2]|0;
       $_9$i$sroa$4$0$copyload = HEAP32[$_14$i$i$i$i$sroa$4$0$$sroa_idx17>>2]|0;
       $25 = ($_9$i$sroa$4$0$copyload>>>0)<($24>>>0);
       L26: do {
        if ($25) {
         __THREW__ = 0;
         invoke_vi(220,(6412|0));
         $26 = __THREW__; __THREW__ = 0;
        } else {
         $27 = ($24|0)==(0);
         do {
          if ($27) {
           $not$$i$i$i$i$i16 = ($_9$i$sroa$4$0$copyload|0)==(0);
           if ($not$$i$i$i$i$i16) {
            $self$sroa$0$sroa$0$0$i = 1;$self$sroa$0$sroa$10$0$i = 0;
           } else {
            $28 = $_9$i$sroa$0$0$copyload;
            _free($28);
            $self$sroa$0$sroa$0$0$i = 1;$self$sroa$0$sroa$10$0$i = 0;
           }
          } else {
           $29 = ($_9$i$sroa$4$0$copyload|0)==($24|0);
           if ($29) {
            $self$sroa$0$sroa$0$0$i = $_9$i$sroa$0$0$copyload;$self$sroa$0$sroa$10$0$i = $24;
           } else {
            $30 = $_9$i$sroa$0$0$copyload;
            $31 = (_realloc($30,$24)|0);
            $32 = ($31|0)==(0|0);
            if ($32) {
             __THREW__ = 0;
             invoke_v(210);
             $33 = __THREW__; __THREW__ = 0;
             break L26;
            } else {
             $34 = $31;
             $self$sroa$0$sroa$0$0$i = $34;$self$sroa$0$sroa$10$0$i = $24;
             break;
            }
           }
          }
         } while(0);
         $cname$sroa$0$0 = $self$sroa$0$sroa$0$0$i;$cname$sroa$5$0 = $self$sroa$0$sroa$10$0$i;
         break L1;
        }
       } while(0);
       $35 = ___cxa_find_matching_catch_2()|0;
       $36 = tempRet0;
       $not$$i$i$i$i15$i = ($_9$i$sroa$4$0$copyload|0)==(0);
       if ($not$$i$i$i$i15$i) {
        $eh$lpad$body9$index10Z2D = $36;$eh$lpad$body9$indexZ2D = $35;
        break L3;
       }
       $37 = $_9$i$sroa$0$0$copyload;
       _free($37);
       $eh$lpad$body9$index10Z2D = $36;$eh$lpad$body9$indexZ2D = $35;
       break L3;
      }
     } while(0);
     $38 = ___cxa_find_matching_catch_2()|0;
     $39 = tempRet0;
     $40 = HEAP32[$_14$i$i$i$i$sroa$4$0$$sroa_idx17>>2]|0;
     $not$$i$i$i$i$i = ($40|0)==(0);
     if ($not$$i$i$i$i$i) {
      $eh$lpad$body9$index10Z2D = $39;$eh$lpad$body9$indexZ2D = $38;
     } else {
      $41 = HEAP32[$v$i>>2]|0;
      _free($41);
      $eh$lpad$body9$index10Z2D = $39;$eh$lpad$body9$indexZ2D = $38;
     }
    } else {
     $2 = $0;
     $3 = $$0$0$0$0$0$0$0$val;
     $4 = (($2) - ($3))|0;
     HEAP32[$_11$i$i$i>>2] = $4;
     $e$sroa$4$0$$sroa_idx23$i$i$i = ((($_11$i$i$i)) + 4|0);
     HEAP32[$e$sroa$4$0$$sroa_idx23$i$i$i>>2] = $3;
     $e$sroa$5$0$$sroa_idx25$i$i$i = ((($_11$i$i$i)) + 8|0);
     HEAP32[$e$sroa$5$0$$sroa_idx25$i$i$i>>2] = $$0$0$0$0$1$val;
     $e$sroa$6$0$$sroa_idx27$i$i$i = ((($_11$i$i$i)) + 12|0);
     HEAP32[$e$sroa$6$0$$sroa_idx27$i$i$i>>2] = $$0$0$0$1$val;
     __THREW__ = 0;
     invoke_vi(364,($_11$i$i$i|0));
     $5 = __THREW__; __THREW__ = 0;
     $6 = ___cxa_find_matching_catch_2()|0;
     $7 = tempRet0;
     $eh$lpad$body9$index10Z2D = $7;$eh$lpad$body9$indexZ2D = $6;
    }
   } while(0);
   $personalityslot$sroa$0$0 = $eh$lpad$body9$indexZ2D;$personalityslot$sroa$6$0 = $eh$lpad$body9$index10Z2D;
   ___resumeException($personalityslot$sroa$0$0|0);
   // unreachable;
  }
 } while(0);
 (_pthread_mutex_lock(((26552)|0))|0);
 $42 = 26576;
 $43 = $42;
 $44 = HEAP32[$43>>2]|0;
 $45 = (($42) + 4)|0;
 $46 = $45;
 $47 = HEAP32[$46>>2]|0;
 $48 = ($44|0)==(-1);
 $49 = ($47|0)==(-1);
 $50 = $48 & $49;
 do {
  if ($50) {
   (_pthread_mutex_unlock(((26552)|0))|0);
   __THREW__ = 0;
   invoke_viii(321,(19173|0),55,(6136|0));
   $51 = __THREW__; __THREW__ = 0;
   label = 56;
  } else {
   $52 = (_i64Add(($44|0),($47|0),1,0)|0);
   $53 = tempRet0;
   $54 = 26576;
   $55 = $54;
   HEAP32[$55>>2] = $52;
   $56 = (($54) + 4)|0;
   $57 = $56;
   HEAP32[$57>>2] = $53;
   (_pthread_mutex_unlock(((26552)|0))|0);
   $58 = (_malloc(24)|0);
   $59 = ($58|0)==(0|0);
   if ($59) {
    __THREW__ = 0;
    invoke_v(210);
    $60 = __THREW__; __THREW__ = 0;
    label = 56;
    break;
   }
   ;HEAP32[$58>>2]=HEAP32[(26584)>>2]|0;HEAP32[$58+4>>2]=HEAP32[(26584)+4>>2]|0;HEAP32[$58+8>>2]=HEAP32[(26584)+8>>2]|0;HEAP32[$58+12>>2]=HEAP32[(26584)+12>>2]|0;HEAP32[$58+16>>2]=HEAP32[(26584)+16>>2]|0;HEAP32[$58+20>>2]=HEAP32[(26584)+20>>2]|0;
   $61 = $58;
   HEAP32[$attr$i$i$i>>2] = 0;
   (_pthread_mutexattr_init(($attr$i$i$i|0))|0);
   (_pthread_mutexattr_settype(($attr$i$i$i|0),0)|0);
   (_pthread_mutex_init(($58|0),($attr$i$i$i|0))|0);
   (_pthread_mutexattr_destroy(($attr$i$i$i|0))|0);
   $62 = (_malloc(48)|0);
   $63 = ($62|0)==(0|0);
   if ($63) {
    __THREW__ = 0;
    invoke_v(210);
    $64 = __THREW__; __THREW__ = 0;
    $65 = ___cxa_find_matching_catch_2()|0;
    $66 = tempRet0;
    $eh$lpad$body$index2Z2D = $66;$eh$lpad$body$indexZ2D = $65;
   } else {
    dest=$62; src=(26608); stop=dest+48|0; do { HEAP32[dest>>2]=HEAP32[src>>2]|0; dest=dest+4|0; src=src+4|0; } while ((dest|0) < (stop|0));
    HEAP32[$attr$i>>2] = 0;
    $69 = (_pthread_condattr_init(($attr$i|0))|0);
    HEAP32[$r$i>>2] = $69;
    HEAP32[$left_val$i>>2] = $r$i;
    HEAP32[$right_val$i>>2] = 26728;
    $70 = ($69|0)==(0);
    do {
     if ($70) {
      $80 = (_pthread_condattr_setclock(($attr$i|0),1)|0);
      HEAP32[$r1$i>>2] = $80;
      HEAP32[$left_val2$i>>2] = $r1$i;
      HEAP32[$right_val3$i>>2] = 26728;
      $81 = ($80|0)==(0);
      if (!($81)) {
       $82 = $left_val2$i;
       $83 = $right_val3$i;
       HEAP32[$_64$i>>2] = $82;
       $84 = ((($_64$i)) + 4|0);
       HEAP32[$84>>2] = (363);
       $85 = ((($_64$i)) + 8|0);
       HEAP32[$85>>2] = $83;
       $86 = ((($_64$i)) + 12|0);
       HEAP32[$86>>2] = (363);
       HEAP32[$_59$i>>2] = 5800;
       $87 = ((($_59$i)) + 4|0);
       HEAP32[$87>>2] = 3;
       $_6$sroa$0$0$$sroa_idx$i26$i = ((($_59$i)) + 8|0);
       HEAP32[$_6$sroa$0$0$$sroa_idx$i26$i>>2] = 0;
       $88 = ((($_59$i)) + 16|0);
       HEAP32[$88>>2] = $_64$i;
       $89 = ((($_59$i)) + 20|0);
       HEAP32[$89>>2] = 2;
       __THREW__ = 0;
       invoke_vii(259,($_59$i|0),(6160|0));
       $90 = __THREW__; __THREW__ = 0;
       break;
      }
      $91 = (_pthread_cond_init(($62|0),($attr$i|0))|0);
      HEAP32[$r4$i>>2] = $91;
      HEAP32[$left_val5$i>>2] = $r4$i;
      HEAP32[$right_val6$i>>2] = 26728;
      $92 = ($91|0)==(0);
      if (!($92)) {
       $93 = $left_val5$i;
       $94 = $right_val6$i;
       HEAP32[$_103$i>>2] = $93;
       $95 = ((($_103$i)) + 4|0);
       HEAP32[$95>>2] = (363);
       $96 = ((($_103$i)) + 8|0);
       HEAP32[$96>>2] = $94;
       $97 = ((($_103$i)) + 12|0);
       HEAP32[$97>>2] = (363);
       HEAP32[$_98$i>>2] = 5800;
       $98 = ((($_98$i)) + 4|0);
       HEAP32[$98>>2] = 3;
       $_6$sroa$0$0$$sroa_idx$i27$i = ((($_98$i)) + 8|0);
       HEAP32[$_6$sroa$0$0$$sroa_idx$i27$i>>2] = 0;
       $99 = ((($_98$i)) + 16|0);
       HEAP32[$99>>2] = $_103$i;
       $100 = ((($_98$i)) + 20|0);
       HEAP32[$100>>2] = 2;
       __THREW__ = 0;
       invoke_vii(259,($_98$i|0),(6172|0));
       $101 = __THREW__; __THREW__ = 0;
       break;
      }
      $102 = (_pthread_condattr_destroy(($attr$i|0))|0);
      HEAP32[$r7$i>>2] = $102;
      HEAP32[$left_val8$i>>2] = $r7$i;
      HEAP32[$right_val9$i>>2] = 26728;
      $103 = ($102|0)==(0);
      if (!($103)) {
       $104 = $left_val8$i;
       $105 = $right_val9$i;
       HEAP32[$_140$i>>2] = $104;
       $106 = ((($_140$i)) + 4|0);
       HEAP32[$106>>2] = (363);
       $107 = ((($_140$i)) + 8|0);
       HEAP32[$107>>2] = $105;
       $108 = ((($_140$i)) + 12|0);
       HEAP32[$108>>2] = (363);
       HEAP32[$_135$i>>2] = 5800;
       $109 = ((($_135$i)) + 4|0);
       HEAP32[$109>>2] = 3;
       $_6$sroa$0$0$$sroa_idx$i28$i = ((($_135$i)) + 8|0);
       HEAP32[$_6$sroa$0$0$$sroa_idx$i28$i>>2] = 0;
       $110 = ((($_135$i)) + 16|0);
       HEAP32[$110>>2] = $_140$i;
       $111 = ((($_135$i)) + 20|0);
       HEAP32[$111>>2] = 2;
       __THREW__ = 0;
       invoke_vii(259,($_135$i|0),(6184|0));
       $112 = __THREW__; __THREW__ = 0;
       break;
      }
      $113 = (_malloc(40)|0);
      $114 = ($113|0)==(0|0);
      if (!($114)) {
       $118 = $62;
       HEAP32[$113>>2] = 1;
       $119 = ((($113)) + 4|0);
       HEAP32[$119>>2] = 1;
       $_8$sroa$0$0$$sroa_idx$i = ((($113)) + 8|0);
       HEAP32[$_8$sroa$0$0$$sroa_idx$i>>2] = $cname$sroa$0$0;
       $_8$sroa$4$0$$sroa_idx$i = ((($113)) + 12|0);
       HEAP32[$_8$sroa$4$0$$sroa_idx$i>>2] = $cname$sroa$5$0;
       $_8$sroa$5$0$$sroa_idx$i = ((($113)) + 16|0);
       $120 = $_8$sroa$5$0$$sroa_idx$i;
       $121 = $120;
       HEAP32[$121>>2] = $44;
       $122 = (($120) + 4)|0;
       $123 = $122;
       HEAP32[$123>>2] = $47;
       $_8$sroa$6$0$$sroa_idx$i = ((($113)) + 24|0);
       HEAP32[$_8$sroa$6$0$$sroa_idx$i>>2] = $61;
       $_8$sroa$7$0$$sroa_idx$i = ((($113)) + 28|0);
       HEAP32[$_8$sroa$7$0$$sroa_idx$i>>2] = 0;
       $_8$sroa$8$0$$sroa_idx$i = ((($113)) + 32|0);
       HEAP32[$_8$sroa$8$0$$sroa_idx$i>>2] = $118;
       $_8$sroa$9$0$$sroa_idx$i = ((($113)) + 36|0);
       HEAP32[$_8$sroa$9$0$$sroa_idx$i>>2] = 0;
       $124 = $113;
       STACKTOP = sp;return ($124|0);
      }
      __THREW__ = 0;
      invoke_v(210);
      $115 = __THREW__; __THREW__ = 0;
      $116 = ___cxa_find_matching_catch_2()|0;
      $117 = tempRet0;
      $personalityslot$sroa$0$0 = $116;$personalityslot$sroa$6$0 = $117;
      ___resumeException($personalityslot$sroa$0$0|0);
      // unreachable;
     } else {
      $71 = $left_val$i;
      $72 = $right_val$i;
      HEAP32[$_27$i>>2] = $71;
      $73 = ((($_27$i)) + 4|0);
      HEAP32[$73>>2] = (363);
      $74 = ((($_27$i)) + 8|0);
      HEAP32[$74>>2] = $72;
      $75 = ((($_27$i)) + 12|0);
      HEAP32[$75>>2] = (363);
      HEAP32[$_22$i>>2] = 5800;
      $76 = ((($_22$i)) + 4|0);
      HEAP32[$76>>2] = 3;
      $_6$sroa$0$0$$sroa_idx$i$i = ((($_22$i)) + 8|0);
      HEAP32[$_6$sroa$0$0$$sroa_idx$i$i>>2] = 0;
      $77 = ((($_22$i)) + 16|0);
      HEAP32[$77>>2] = $_27$i;
      $78 = ((($_22$i)) + 20|0);
      HEAP32[$78>>2] = 2;
      __THREW__ = 0;
      invoke_vii(259,($_22$i|0),(6148|0));
      $79 = __THREW__; __THREW__ = 0;
     }
    } while(0);
    $67 = ___cxa_find_matching_catch_2()|0;
    $68 = tempRet0;
    (_pthread_cond_destroy(($62|0))|0);
    _free($62);
    $eh$lpad$body$index2Z2D = $68;$eh$lpad$body$indexZ2D = $67;
   }
   (_pthread_mutex_destroy(($58|0))|0);
   _free($58);
   $personalityslot$sroa$0$1$ph = $eh$lpad$body$indexZ2D;$personalityslot$sroa$6$1$ph = $eh$lpad$body$index2Z2D;
  }
 } while(0);
 if ((label|0) == 56) {
  $127 = ___cxa_find_matching_catch_2()|0;
  $128 = tempRet0;
  $personalityslot$sroa$0$1$ph = $127;$personalityslot$sroa$6$1$ph = $128;
 }
 $125 = $cname$sroa$0$0;
 $switchtmp$i = ($cname$sroa$0$0|0)==(0);
 if ($switchtmp$i) {
  $personalityslot$sroa$0$0 = $personalityslot$sroa$0$1$ph;$personalityslot$sroa$6$0 = $personalityslot$sroa$6$1$ph;
  ___resumeException($personalityslot$sroa$0$0|0);
  // unreachable;
 }
 HEAP8[$125>>0] = 0;
 $126 = ($cname$sroa$5$0|0)==(0);
 if ($126) {
  $personalityslot$sroa$0$0 = $personalityslot$sroa$0$1$ph;$personalityslot$sroa$6$0 = $personalityslot$sroa$6$1$ph;
  ___resumeException($personalityslot$sroa$0$0|0);
  // unreachable;
 }
 _free($125);
 $personalityslot$sroa$0$0 = $personalityslot$sroa$0$1$ph;$personalityslot$sroa$6$0 = $personalityslot$sroa$6$1$ph;
 ___resumeException($personalityslot$sroa$0$0|0);
 // unreachable;
 return (0)|0;
}
function __ZN4core6result13unwrap_failed17hb8469db32514b7f1E_1344($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $_12 = 0, $_6$sroa$0$0$$sroa_idx$i = 0, $_7 = 0, $error = 0;
 var $msg = 0, $not$$i$i$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $msg = sp + 56|0;
 $error = sp + 40|0;
 $_7 = sp + 16|0;
 $_12 = sp;
 HEAP32[$msg>>2] = 19126;
 $1 = ((($msg)) + 4|0);
 HEAP32[$1>>2] = 47;
 ;HEAP32[$error>>2]=HEAP32[$0>>2]|0;HEAP32[$error+4>>2]=HEAP32[$0+4>>2]|0;HEAP32[$error+8>>2]=HEAP32[$0+8>>2]|0;HEAP32[$error+12>>2]=HEAP32[$0+12>>2]|0;
 $2 = $msg;
 $3 = $error;
 HEAP32[$_12>>2] = $2;
 $4 = ((($_12)) + 4|0);
 HEAP32[$4>>2] = (346);
 $5 = ((($_12)) + 8|0);
 HEAP32[$5>>2] = $3;
 $6 = ((($_12)) + 12|0);
 HEAP32[$6>>2] = (335);
 HEAP32[$_7>>2] = (6520);
 $7 = ((($_7)) + 4|0);
 HEAP32[$7>>2] = 2;
 $_6$sroa$0$0$$sroa_idx$i = ((($_7)) + 8|0);
 HEAP32[$_6$sroa$0$0$$sroa_idx$i>>2] = 0;
 $8 = ((($_7)) + 16|0);
 HEAP32[$8>>2] = $_12;
 $9 = ((($_7)) + 20|0);
 HEAP32[$9>>2] = 2;
 __THREW__ = 0;
 invoke_viiii(272,($_7|0),(22324|0),100,799);
 $10 = __THREW__; __THREW__ = 0;
 $11 = ___cxa_find_matching_catch_2()|0;
 $12 = tempRet0;
 $13 = ((($error)) + 8|0);
 $14 = HEAP32[$13>>2]|0;
 $not$$i$i$i$i$i = ($14|0)==(0);
 if ($not$$i$i$i$i$i) {
  ___resumeException($11|0);
  // unreachable;
 }
 $15 = ((($error)) + 4|0);
 $16 = HEAP32[$15>>2]|0;
 _free($16);
 ___resumeException($11|0);
 // unreachable;
}
function __ZN40__LT_alloc__raw_vec__RawVec_LT_T_GT__GT_6double17h1f4ae0daeff98f24E_1345($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $_14$sroa$0$0 = 0, $_14$sroa$5$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 4|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)==(0);
 do {
  if ($3) {
   $8 = (_malloc(4)|0);
   $_14$sroa$0$0 = 4;$_14$sroa$5$0 = $8;
  } else {
   $4 = $2 << 1;
   $5 = ($4|0)<(0);
   if ($5) {
    __ZN4core9panicking5panic17ha7507e8e32961bfeE(6432);
    // unreachable;
   } else {
    $6 = HEAP32[$0>>2]|0;
    $7 = (_realloc($6,$4)|0);
    $_14$sroa$0$0 = $4;$_14$sroa$5$0 = $7;
    break;
   }
  }
 } while(0);
 $9 = ($_14$sroa$5$0|0)==(0|0);
 if ($9) {
  __ZN5alloc3oom3oom17hb253cf665793f59eE();
  // unreachable;
 } else {
  HEAP32[$0>>2] = $_14$sroa$5$0;
  HEAP32[$1>>2] = $_14$sroa$0$0;
  return;
 }
}
function __ZN62__LT_std__ffi__c_str__NulError_u20_as_u20_core__fmt__Debug_GT_3fmt17hcd6ce0f6662c92cbE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$pre$i = 0, $$repack$i = 0, $$unpack$i = 0, $$unpack$pre$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $_0$sroa$0$0$i$i = 0, $_16 = 0, $_22 = 0, $builder = 0, $not$switch4$i$i$i$i = 0, $not$switch4$i19$i$i$i = 0, $or$cond = 0, $switch4$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $builder = sp;
 $_16 = sp + 20|0;
 $_22 = sp + 16|0;
 $2 = ((($0)) + 4|0);
 $3 = ((($1)) + 28|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ((($1)) + 32|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ((($6)) + 12|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = (FUNCTION_TABLE_iiii[$8 & 511]($4,19348,8)|0);
 HEAP32[$builder>>2] = $1;
 $$repack$i = ((($builder)) + 4|0);
 HEAP8[$$repack$i>>0] = $9;
 $10 = ((($builder)) + 8|0);
 HEAP32[$10>>2] = 0;
 $11 = ((($builder)) + 12|0);
 HEAP8[$11>>0] = 0;
 HEAP32[$_16>>2] = $0;
 (__ZN4core3fmt8builders10DebugTuple5field17h7aa2b38aabb11517E($builder,$_16,1704)|0);
 HEAP32[$_22>>2] = $2;
 (__ZN4core3fmt8builders10DebugTuple5field17h7aa2b38aabb11517E($builder,$_22,1720)|0);
 $12 = HEAP32[$10>>2]|0;
 $13 = ($12|0)==(0);
 $$unpack$pre$i = HEAP8[$$repack$i>>0]|0;
 if ($13) {
  $$unpack$i = $$unpack$pre$i;
  STACKTOP = sp;return ($$unpack$i|0);
 }
 $switch4$i$i = ($$unpack$pre$i<<24>>24)==(0);
 do {
  if ($switch4$i$i) {
   $14 = HEAP32[$builder>>2]|0;
   $15 = HEAP32[$14>>2]|0;
   $16 = $15 & 4;
   $17 = ($16|0)==(0);
   if ($17) {
    $25 = $12;
   } else {
    $18 = ((($14)) + 28|0);
    $19 = HEAP32[$18>>2]|0;
    $20 = ((($14)) + 32|0);
    $21 = HEAP32[$20>>2]|0;
    $22 = ((($21)) + 12|0);
    $23 = HEAP32[$22>>2]|0;
    $24 = (FUNCTION_TABLE_iiii[$23 & 511]($19,24042,1)|0);
    $not$switch4$i$i$i$i = ($24<<24>>24)==(0);
    if (!($not$switch4$i$i$i$i)) {
     $_0$sroa$0$0$i$i = 1;
     break;
    }
    $$pre$i = HEAP32[$10>>2]|0;
    $25 = $$pre$i;
   }
   $26 = ($25|0)!=(1);
   $27 = HEAP8[$11>>0]|0;
   $28 = ($27<<24>>24)==(0);
   $or$cond = $26 | $28;
   if (!($or$cond)) {
    $29 = HEAP32[$builder>>2]|0;
    $30 = ((($29)) + 28|0);
    $31 = HEAP32[$30>>2]|0;
    $32 = ((($29)) + 32|0);
    $33 = HEAP32[$32>>2]|0;
    $34 = ((($33)) + 12|0);
    $35 = HEAP32[$34>>2]|0;
    $36 = (FUNCTION_TABLE_iiii[$35 & 511]($31,18783,1)|0);
    $not$switch4$i19$i$i$i = ($36<<24>>24)==(0);
    if (!($not$switch4$i19$i$i$i)) {
     $_0$sroa$0$0$i$i = 1;
     break;
    }
   }
   $37 = HEAP32[$builder>>2]|0;
   $38 = ((($37)) + 28|0);
   $39 = HEAP32[$38>>2]|0;
   $40 = ((($37)) + 32|0);
   $41 = HEAP32[$40>>2]|0;
   $42 = ((($41)) + 12|0);
   $43 = HEAP32[$42>>2]|0;
   $44 = (FUNCTION_TABLE_iiii[$43 & 511]($39,24043,1)|0);
   $_0$sroa$0$0$i$i = $44;
  } else {
   $_0$sroa$0$0$i$i = 1;
  }
 } while(0);
 HEAP8[$$repack$i>>0] = $_0$sroa$0$0$i$i;
 $$unpack$i = $_0$sroa$0$0$i$i;
 STACKTOP = sp;return ($$unpack$i|0);
}
function __ZN53__LT__RF__u27_a_u20_T_u20_as_u20_core__fmt__Debug_GT_3fmt17h44630bd8bc14edf4E($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$lobit = 0, $$pre = 0, $$unpack$i$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $_0$sroa$0$0$i$i = 0, $_12$sroa$4$0$$sroa_idx$i = 0;
 var $_12$sroa$5$0$$sroa_idx$i = 0, $_5$sroa$4$0$$sroa_idx11$i = 0, $_5$sroa$5$0$$sroa_idx13$i = 0, $_5$sroa$616$0$$sroa_idx18$i = 0, $_5$sroa$7$0$$sroa_idx20$i = 0, $_7$i$i = 0, $_8$i$i = 0, $entry$i$i$i = 0, $or$cond = 0, $prefix$sroa$0$0$i$i = 0, $prefix$sroa$5$0$i$i = 0, $switch3$i$i$i = 0, $switch4$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $_7$i$i = sp + 8|0;
 $entry$i$i$i = sp + 32|0;
 $_8$i$i = sp;
 $2 = HEAP32[$0>>2]|0;
 $3 = HEAP32[$2>>2]|0;
 $4 = ((($2)) + 8|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ((($1)) + 28|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ((($1)) + 32|0);
 $9 = HEAP32[$8>>2]|0;
 HEAP32[$_7$i$i>>2] = 7584;
 $_5$sroa$4$0$$sroa_idx11$i = ((($_7$i$i)) + 4|0);
 HEAP32[$_5$sroa$4$0$$sroa_idx11$i>>2] = 1;
 $_5$sroa$5$0$$sroa_idx13$i = ((($_7$i$i)) + 8|0);
 HEAP32[$_5$sroa$5$0$$sroa_idx13$i>>2] = 0;
 $_5$sroa$616$0$$sroa_idx18$i = ((($_7$i$i)) + 16|0);
 HEAP32[$_5$sroa$616$0$$sroa_idx18$i>>2] = 26744;
 $_5$sroa$7$0$$sroa_idx20$i = ((($_7$i$i)) + 20|0);
 HEAP32[$_5$sroa$7$0$$sroa_idx20$i>>2] = 0;
 $10 = (__ZN4core3fmt5write17hdd089a59fed6a1dbE($7,$9,$_7$i$i)|0);
 HEAP32[$_8$i$i>>2] = $1;
 $_12$sroa$4$0$$sroa_idx$i = ((($_8$i$i)) + 4|0);
 HEAP8[$_12$sroa$4$0$$sroa_idx$i>>0] = $10;
 $_12$sroa$5$0$$sroa_idx$i = ((($_8$i$i)) + 5|0);
 HEAP8[$_12$sroa$5$0$$sroa_idx$i>>0] = 0;
 $11 = (($3) + ($5)|0);
 $12 = ($5|0)==(0);
 if ($12) {
  $17 = $1;
 } else {
  $14 = $3;
  while(1) {
   $13 = ((($14)) + 1|0);
   HEAP32[$entry$i$i$i>>2] = $14;
   __ZN4core3fmt8builders9DebugList5entry17ha312dc2888088769E($_8$i$i,$entry$i$i$i,1736);
   $15 = ($13|0)==($11|0);
   if ($15) {
    break;
   } else {
    $14 = $13;
   }
  }
  $$pre = HEAP32[$_8$i$i>>2]|0;
  $17 = $$pre;
 }
 $16 = HEAP32[$17>>2]|0;
 $18 = $16 & 4;
 $19 = HEAP8[$_12$sroa$5$0$$sroa_idx$i>>0]|0;
 $20 = ($19<<24>>24)==(0);
 $$unpack$i$i = HEAP8[$_12$sroa$4$0$$sroa_idx$i>>0]|0;
 $switch3$i$i$i = ($$unpack$i$i<<24>>24)==(0);
 if (!($switch3$i$i$i)) {
  HEAP8[$_12$sroa$4$0$$sroa_idx$i>>0] = 1;
  $_0$sroa$0$0$i$i = 1;
  STACKTOP = sp;return ($_0$sroa$0$0$i$i|0);
 }
 $21 = ($18|0)==(0);
 $or$cond = $21 | $20;
 $prefix$sroa$0$0$i$i = $or$cond ? 27292 : 24042;
 $$lobit = $18 >>> 2;
 $22 = $$lobit ^ 1;
 $23 = $20&1;
 $24 = $22 | $23;
 $prefix$sroa$5$0$i$i = $24 ^ 1;
 $25 = ((($17)) + 28|0);
 $26 = HEAP32[$25>>2]|0;
 $27 = ((($17)) + 32|0);
 $28 = HEAP32[$27>>2]|0;
 $29 = ((($28)) + 12|0);
 $30 = HEAP32[$29>>2]|0;
 $31 = (FUNCTION_TABLE_iiii[$30 & 511]($26,$prefix$sroa$0$0$i$i,$prefix$sroa$5$0$i$i)|0);
 HEAP8[$_12$sroa$4$0$$sroa_idx$i>>0] = $31;
 $switch4$i$i = ($31<<24>>24)==(0);
 if (!($switch4$i$i)) {
  $_0$sroa$0$0$i$i = 1;
  STACKTOP = sp;return ($_0$sroa$0$0$i$i|0);
 }
 $32 = HEAP32[$25>>2]|0;
 $33 = HEAP32[$27>>2]|0;
 $34 = ((($33)) + 12|0);
 $35 = HEAP32[$34>>2]|0;
 $36 = (FUNCTION_TABLE_iiii[$35 & 511]($32,18813,1)|0);
 $_0$sroa$0$0$i$i = $36;
 STACKTOP = sp;return ($_0$sroa$0$0$i$i|0);
}
function __ZN53__LT__RF__u27_a_u20_T_u20_as_u20_core__fmt__Debug_GT_3fmt17h8e81f4ddc79f6ebcE_1348($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, $buf31$i$i = 0, $curr$232$i$i = 0, $curr$3$i$i = 0, $div$i$i = 0, $n1$033$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $buf31$i$i = sp;
 $2 = HEAP32[$0>>2]|0;
 $3 = HEAP8[$2>>0]|0;
 $4 = $3&255;
 $5 = ($3&255)>(99);
 if ($5) {
  $6 = (($3&255) % 100)&-1;
  $7 = $6&255;
  $8 = $7 << 1;
  $div$i$i = (($3&255) / 100)&-1;
  $9 = $div$i$i&255;
  $10 = (22704 + ($8)|0);
  $11 = ((($buf31$i$i)) + 18|0);
  $12 = HEAPU8[$10>>0]|(HEAPU8[$10+1>>0]<<8);
  HEAP8[$11>>0]=$12&255;HEAP8[$11+1>>0]=$12>>8;
  $curr$232$i$i = 17;$n1$033$i$i = $9;
  label = 4;
 } else {
  $13 = ($3&255)<(10);
  if ($13) {
   $curr$232$i$i = 19;$n1$033$i$i = $4;
   label = 4;
  } else {
   $17 = $4 << 1;
   $18 = (22704 + ($17)|0);
   $19 = ((($buf31$i$i)) + 18|0);
   $20 = HEAPU8[$18>>0]|(HEAPU8[$18+1>>0]<<8);
   HEAP8[$19>>0]=$20&255;HEAP8[$19+1>>0]=$20>>8;
   $curr$3$i$i = 18;
  }
 }
 if ((label|0) == 4) {
  $14 = $n1$033$i$i&255;
  $15 = (($buf31$i$i) + ($curr$232$i$i)|0);
  $16 = (($14) + 48)<<24>>24;
  HEAP8[$15>>0] = $16;
  $curr$3$i$i = $curr$232$i$i;
 }
 $21 = (($buf31$i$i) + ($curr$3$i$i)|0);
 $22 = (20 - ($curr$3$i$i))|0;
 $23 = (__ZN4core3fmt9Formatter12pad_integral17h30369de78b61ed24E($1,1,27292,0,$21,$22)|0);
 STACKTOP = sp;return ($23|0);
}
function __ZN53__LT__RF__u27_a_u20_T_u20_as_u20_core__fmt__Debug_GT_3fmt17h1b7acfd18e094fa5E_1349($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[$0>>2]|0;
 $3 = (__ZN4core3fmt3num54__LT_impl_u20_core__fmt__Display_u20_for_u20_usize_GT_3fmt17hfc58b44c96803197E($2,$1)|0);
 return ($3|0);
}
function __ZN3std6thread5local2os13destroy_value17hca780864430f1bbeE($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, $_0$0$i$i = 0, $_0$0$i$i7 = 0, $cond$i$i = 0, $cond$i$i$i$i = 0, $cond$i$i$i$i$i = 0, $cond$i$i5 = 0, $switchtmp$i$i$i$i$i$i$i = 0, $switchtmp$i$i$i$i$i$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[$0>>2]|0;
 $2 = HEAP32[$1>>2]|0;
 $cond$i$i = ($2|0)==(0);
 if ($cond$i$i) {
  __THREW__ = 0;
  $3 = (invoke_ii(338,($1|0))|0);
  $4 = __THREW__; __THREW__ = 0;
  $5 = $4&1;
  if ($5) {
   $14 = ___cxa_find_matching_catch_2()|0;
   $15 = tempRet0;
   $16 = ((($0)) + 4|0);
   $17 = HEAP32[$16>>2]|0;
   $cond$i$i$i$i = ($17|0)==(1);
   if (!($cond$i$i$i$i)) {
    _free($0);
    ___resumeException($14|0);
    // unreachable;
   }
   $18 = ((($0)) + 20|0);
   $19 = HEAP32[$18>>2]|0;
   $switchtmp$i$i$i$i$i$i$i = ($19|0)==(0|0);
   if ($switchtmp$i$i$i$i$i$i$i) {
    _free($0);
    ___resumeException($14|0);
    // unreachable;
   }
   $20 = HEAP32[$19>>2]|0;HEAP32[$19>>2] = (($20-1)|0);
   $21 = ($20|0)==(1);
   if (!($21)) {
    _free($0);
    ___resumeException($14|0);
    // unreachable;
   }
   /* fence */;
   __ZN33__LT_alloc__arc__Arc_LT_T_GT__GT_9drop_slow17h7ac40ae25c424b1dE_1335($18);
   _free($0);
   ___resumeException($14|0);
   // unreachable;
  } else {
   $_0$0$i$i = $3;
  }
 } else {
  $_0$0$i$i = $2;
 }
 (_pthread_setspecific(($_0$0$i$i|0),((1)|0))|0);
 $6 = ((($0)) + 4|0);
 $7 = HEAP32[$6>>2]|0;
 $cond$i$i$i$i$i = ($7|0)==(1);
 if ($cond$i$i$i$i$i) {
  $8 = ((($0)) + 20|0);
  $9 = HEAP32[$8>>2]|0;
  $switchtmp$i$i$i$i$i$i$i$i = ($9|0)==(0|0);
  if (!($switchtmp$i$i$i$i$i$i$i$i)) {
   $10 = HEAP32[$9>>2]|0;HEAP32[$9>>2] = (($10-1)|0);
   $11 = ($10|0)==(1);
   if ($11) {
    /* fence */;
    __ZN33__LT_alloc__arc__Arc_LT_T_GT__GT_9drop_slow17h7ac40ae25c424b1dE_1335($8);
   }
  }
 }
 _free($0);
 $12 = HEAP32[$1>>2]|0;
 $cond$i$i5 = ($12|0)==(0);
 if (!($cond$i$i5)) {
  $_0$0$i$i7 = $12;
  (_pthread_setspecific(($_0$0$i$i7|0),(0|0))|0);
  return;
 }
 $13 = (__ZN3std10sys_common12thread_local9StaticKey9lazy_init17hfe76ff6b56e2d562E($1)|0);
 $_0$0$i$i7 = $13;
 (_pthread_setspecific(($_0$0$i$i7|0),(0|0))|0);
 return;
}
function __ZN3std3ffi5c_str7CString3new17h89a5eaa1ae2ad9beE($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$arith = 0, $$overflow = 0, $$pre = 0, $$pre$i$i = 0, $$pre35 = 0, $$sink$i = 0, $$sroa_idx = 0, $$sroa_idx26 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0;
 var $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $_10$sroa$4$sroa$0$0$_10$sroa$4$0$$sroa_cast8$sroa_idx$i = 0, $_10$sroa$4$sroa$4$0$_10$sroa$4$0$$sroa_cast8$sroa_idx42$i = 0, $_10$sroa$4$sroa$5$0$_10$sroa$4$0$$sroa_cast8$sroa_idx44$i = 0, $_14$i$sroa$4$0$$sroa_idx22 = 0, $_14$i$sroa$5$0$$sroa_idx24 = 0, $_9$i$sroa$0$0$copyload = 0, $_9$i$sroa$4$0$copyload = 0;
 var $local_len$sroa$5$0$lcssa$i$i$i$i$i = 0, $not$$i$i$i$i$i = 0, $not$$i$i$i$i$i13 = 0, $not$$i$i$i$i15$i = 0, $ptr$0$i$i$i$i$i$i = 0, $ptr$0$i$i$i$i$i$i36 = 0, $ptr$0$i$i7 = 0, $self$sroa$0$sroa$0$0$i = 0, $self$sroa$0$sroa$10$0$i = 0, $v$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $v$i = sp;
 $3 = ($2|0)<(0);
 if ($3) {
  __ZN4core9panicking5panic17ha7507e8e32961bfeE(6432);
  // unreachable;
 }
 $4 = ($2|0)==(0);
 do {
  if ($4) {
   $local_len$sroa$5$0$lcssa$i$i$i$i$i = 0;$ptr$0$i$i$i$i$i$i36 = (1);
  } else {
   $5 = (_malloc($2)|0);
   $6 = ($5|0)==(0|0);
   if ($6) {
    __ZN5alloc3oom3oom17hb253cf665793f59eE();
    // unreachable;
   } else {
    $ptr$0$i$i$i$i$i$i = $5;
    _memcpy(($ptr$0$i$i$i$i$i$i|0),($1|0),($2|0))|0;
    $local_len$sroa$5$0$lcssa$i$i$i$i$i = $2;$ptr$0$i$i$i$i$i$i36 = $ptr$0$i$i$i$i$i$i;
    break;
   }
  }
 } while(0);
 $7 = (_memchr($ptr$0$i$i$i$i$i$i36,0,$local_len$sroa$5$0$lcssa$i$i$i$i$i)|0);
 $8 = ($7|0)==(0|0);
 if (!($8)) {
  $43 = $7;
  $44 = $ptr$0$i$i$i$i$i$i36;
  $45 = (($43) - ($44))|0;
  $46 = ((($0)) + 4|0);
  HEAP32[$46>>2] = $45;
  $_10$sroa$4$sroa$0$0$_10$sroa$4$0$$sroa_cast8$sroa_idx$i = ((($0)) + 8|0);
  HEAP32[$_10$sroa$4$sroa$0$0$_10$sroa$4$0$$sroa_cast8$sroa_idx$i>>2] = $ptr$0$i$i$i$i$i$i36;
  $_10$sroa$4$sroa$4$0$_10$sroa$4$0$$sroa_cast8$sroa_idx42$i = ((($0)) + 12|0);
  HEAP32[$_10$sroa$4$sroa$4$0$_10$sroa$4$0$$sroa_cast8$sroa_idx42$i>>2] = $2;
  $_10$sroa$4$sroa$5$0$_10$sroa$4$0$$sroa_cast8$sroa_idx44$i = ((($0)) + 16|0);
  HEAP32[$_10$sroa$4$sroa$5$0$_10$sroa$4$0$$sroa_cast8$sroa_idx44$i>>2] = $local_len$sroa$5$0$lcssa$i$i$i$i$i;
  $$sink$i = 1;
  HEAP32[$0>>2] = $$sink$i;
  STACKTOP = sp;return;
 }
 HEAP32[$v$i>>2] = $ptr$0$i$i$i$i$i$i36;
 $_14$i$sroa$4$0$$sroa_idx22 = ((($v$i)) + 4|0);
 HEAP32[$_14$i$sroa$4$0$$sroa_idx22>>2] = $2;
 $_14$i$sroa$5$0$$sroa_idx24 = ((($v$i)) + 8|0);
 HEAP32[$_14$i$sroa$5$0$$sroa_idx24>>2] = $local_len$sroa$5$0$lcssa$i$i$i$i$i;
 $9 = ($local_len$sroa$5$0$lcssa$i$i$i$i$i|0)==($2|0);
 do {
  if ($9) {
   $$arith = (($2) + 1)|0;
   $$overflow = ($2>>>0)>(4294967294);
   if ($$overflow) {
    __THREW__ = 0;
    invoke_vii(219,(19331|0),17);
    $10 = __THREW__; __THREW__ = 0;
    break;
   }
   $11 = ($$arith|0)<(0);
   if ($11) {
    __THREW__ = 0;
    invoke_vi(220,(6432|0));
    $12 = __THREW__; __THREW__ = 0;
    break;
   }
   if ($4) {
    $13 = (_malloc($$arith)|0);
    $ptr$0$i$i7 = $13;
   } else {
    $14 = (_realloc($ptr$0$i$i$i$i$i$i36,$$arith)|0);
    $ptr$0$i$i7 = $14;
   }
   $15 = ($ptr$0$i$i7|0)==(0|0);
   if ($15) {
    __THREW__ = 0;
    invoke_v(210);
    $16 = __THREW__; __THREW__ = 0;
    break;
   } else {
    HEAP32[$v$i>>2] = $ptr$0$i$i7;
    HEAP32[$_14$i$sroa$4$0$$sroa_idx22>>2] = $$arith;
    $$pre = HEAP32[$_14$i$sroa$5$0$$sroa_idx24>>2]|0;
    $18 = $$pre;$20 = $$arith;$47 = $ptr$0$i$i7;
    label = 20;
    break;
   }
  } else {
   $18 = $local_len$sroa$5$0$lcssa$i$i$i$i$i;$20 = $2;$47 = $ptr$0$i$i$i$i$i$i36;
   label = 20;
  }
 } while(0);
 do {
  if ((label|0) == 20) {
   $19 = ($18|0)==($20|0);
   if ($19) {
    __THREW__ = 0;
    invoke_vi(332,($v$i|0));
    $21 = __THREW__; __THREW__ = 0;
    $22 = $21&1;
    if ($22) {
     break;
    }
    $$pre$i$i = HEAP32[$_14$i$sroa$5$0$$sroa_idx24>>2]|0;
    $$pre35 = HEAP32[$v$i>>2]|0;
    $27 = $$pre35;$28 = $$pre$i$i;
   } else {
    $27 = $47;$28 = $18;
   }
   $26 = (($27) + ($28)|0);
   HEAP8[$26>>0] = 0;
   $29 = (($28) + 1)|0;
   HEAP32[$_14$i$sroa$5$0$$sroa_idx24>>2] = $29;
   $_9$i$sroa$0$0$copyload = HEAP32[$v$i>>2]|0;
   $_9$i$sroa$4$0$copyload = HEAP32[$_14$i$sroa$4$0$$sroa_idx22>>2]|0;
   $30 = ($_9$i$sroa$4$0$copyload>>>0)<($29>>>0);
   L35: do {
    if ($30) {
     __THREW__ = 0;
     invoke_vi(220,(6412|0));
     $31 = __THREW__; __THREW__ = 0;
    } else {
     $32 = ($29|0)==(0);
     do {
      if ($32) {
       $not$$i$i$i$i$i13 = ($_9$i$sroa$4$0$copyload|0)==(0);
       if ($not$$i$i$i$i$i13) {
        $self$sroa$0$sroa$0$0$i = 1;$self$sroa$0$sroa$10$0$i = 0;
       } else {
        $33 = $_9$i$sroa$0$0$copyload;
        _free($33);
        $self$sroa$0$sroa$0$0$i = 1;$self$sroa$0$sroa$10$0$i = 0;
       }
      } else {
       $34 = ($_9$i$sroa$4$0$copyload|0)==($29|0);
       if ($34) {
        $self$sroa$0$sroa$0$0$i = $_9$i$sroa$0$0$copyload;$self$sroa$0$sroa$10$0$i = $29;
       } else {
        $35 = $_9$i$sroa$0$0$copyload;
        $36 = (_realloc($35,$29)|0);
        $37 = ($36|0)==(0|0);
        if ($37) {
         __THREW__ = 0;
         invoke_v(210);
         $38 = __THREW__; __THREW__ = 0;
         break L35;
        } else {
         $39 = $36;
         $self$sroa$0$sroa$0$0$i = $39;$self$sroa$0$sroa$10$0$i = $29;
         break;
        }
       }
      }
     } while(0);
     $$sroa_idx = ((($0)) + 4|0);
     HEAP32[$$sroa_idx>>2] = $self$sroa$0$sroa$0$0$i;
     $$sroa_idx26 = ((($0)) + 8|0);
     HEAP32[$$sroa_idx26>>2] = $self$sroa$0$sroa$10$0$i;
     $$sink$i = 0;
     HEAP32[$0>>2] = $$sink$i;
     STACKTOP = sp;return;
    }
   } while(0);
   $40 = ___cxa_find_matching_catch_2()|0;
   $41 = tempRet0;
   $not$$i$i$i$i15$i = ($_9$i$sroa$4$0$copyload|0)==(0);
   if ($not$$i$i$i$i15$i) {
    ___resumeException($40|0);
    // unreachable;
   }
   $42 = $_9$i$sroa$0$0$copyload;
   _free($42);
   ___resumeException($40|0);
   // unreachable;
  }
 } while(0);
 $17 = ___cxa_find_matching_catch_2()|0;
 $23 = tempRet0;
 $24 = HEAP32[$_14$i$sroa$4$0$$sroa_idx22>>2]|0;
 $not$$i$i$i$i$i = ($24|0)==(0);
 if ($not$$i$i$i$i$i) {
  ___resumeException($17|0);
  // unreachable;
 }
 $25 = HEAP32[$v$i>>2]|0;
 _free($25);
 ___resumeException($17|0);
 // unreachable;
}
function __ZN3std3ffi5c_str104__LT_impl_u20_core__convert__From_LT_std__ffi__c_str__NulError_GT__u20_for_u20_std__io__error__Error_GT_4from17hdab91ffea104e0edE($0,$$0$1$0$0$0$0$val,$$0$1$0$1$val) {
 $0 = $0|0;
 $$0$1$0$0$0$0$val = $$0$1$0$0$0$0$val|0;
 $$0$1$0$1$val = $$0$1$0$1$val|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $_5$sroa$4$0$$sroa_idx6$i = 0, $not$$i$i$i$i$i = 0, $not$$i$i$i$i$i12 = 0, $x$i$sroa$4$0$$sroa_raw_idx$i = 0, $x$i$sroa$4$i = 0, $x$i$sroa$5$0$$sroa_idx$i = 0, $x$i$sroa$6$0$$sroa_idx$i = 0, $x$sroa$0$i$i$i$i$i$sroa$4$0$$sroa_idx = 0;
 var $x$sroa$0$i$i$i$i$i$sroa$5$0$$sroa_idx = 0, dest = 0, label = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $x$i$sroa$4$i = sp;
 $1 = (_malloc(33)|0);
 $2 = ($1|0)==(0|0);
 do {
  if ($2) {
   __THREW__ = 0;
   invoke_v(210);
   $3 = __THREW__; __THREW__ = 0;
  } else {
   dest=$1; src=19515; stop=dest+33|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
   $4 = (_malloc(12)|0);
   $5 = ($4|0)==(0|0);
   if ($5) {
    __THREW__ = 0;
    invoke_v(210);
    $6 = __THREW__; __THREW__ = 0;
    break;
   }
   $7 = $1;
   HEAP32[$4>>2] = $7;
   $x$sroa$0$i$i$i$i$i$sroa$4$0$$sroa_idx = ((($4)) + 4|0);
   HEAP32[$x$sroa$0$i$i$i$i$i$sroa$4$0$$sroa_idx>>2] = 33;
   $x$sroa$0$i$i$i$i$i$sroa$5$0$$sroa_idx = ((($4)) + 8|0);
   HEAP32[$x$sroa$0$i$i$i$i$i$sroa$5$0$$sroa_idx>>2] = 33;
   $8 = (_malloc(12)|0);
   $9 = ($8|0)==(0|0);
   if ($9) {
    __THREW__ = 0;
    invoke_v(210);
    $10 = __THREW__; __THREW__ = 0;
    break;
   }
   HEAP8[$8>>0] = 11;
   $x$i$sroa$4$0$$sroa_raw_idx$i = ((($8)) + 1|0);
   ;HEAP8[$x$i$sroa$4$0$$sroa_raw_idx$i>>0]=HEAP8[$x$i$sroa$4$i>>0]|0;HEAP8[$x$i$sroa$4$0$$sroa_raw_idx$i+1>>0]=HEAP8[$x$i$sroa$4$i+1>>0]|0;HEAP8[$x$i$sroa$4$0$$sroa_raw_idx$i+2>>0]=HEAP8[$x$i$sroa$4$i+2>>0]|0;
   $x$i$sroa$5$0$$sroa_idx$i = ((($8)) + 4|0);
   HEAP32[$x$i$sroa$5$0$$sroa_idx$i>>2] = $4;
   $x$i$sroa$6$0$$sroa_idx$i = ((($8)) + 8|0);
   HEAP32[$x$i$sroa$6$0$$sroa_idx$i>>2] = 1632;
   HEAP32[$0>>2] = 1;
   $_5$sroa$4$0$$sroa_idx6$i = ((($0)) + 4|0);
   HEAP32[$_5$sroa$4$0$$sroa_idx6$i>>2] = $8;
   $not$$i$i$i$i$i = ($$0$1$0$1$val|0)==(0);
   if ($not$$i$i$i$i$i) {
    STACKTOP = sp;return;
   }
   _free($$0$1$0$0$0$0$val);
   STACKTOP = sp;return;
  }
 } while(0);
 $11 = ___cxa_find_matching_catch_2()|0;
 $12 = tempRet0;
 $not$$i$i$i$i$i12 = ($$0$1$0$1$val|0)==(0);
 if ($not$$i$i$i$i$i12) {
  ___resumeException($11|0);
  // unreachable;
 }
 _free($$0$1$0$0$0$0$val);
 ___resumeException($11|0);
 // unreachable;
}
function __ZN39__LT_collections__vec__Vec_LT_T_GT__GT_7reserve17h36095f9d9422ab2dE_1350($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$arith = 0, $$overflow = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $_0$0$sroa$speculated$i$i$i = 0, $ptr$0$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 8|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ((($0)) + 4|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = (($5) - ($3))|0;
 $7 = ($6>>>0)<($1>>>0);
 if (!($7)) {
  return;
 }
 $$arith = (($3) + ($1))|0;
 $$overflow = ($$arith>>>0)<($3>>>0);
 if ($$overflow) {
  __ZN4core6option13expect_failed17hc1eeb48c0c4a1725E(19331,17);
  // unreachable;
 }
 $8 = $5 << 1;
 $9 = ($$arith>>>0)>=($8>>>0);
 $_0$0$sroa$speculated$i$i$i = $9 ? $$arith : $8;
 $10 = ($_0$0$sroa$speculated$i$i$i|0)<(0);
 if ($10) {
  __ZN4core9panicking5panic17ha7507e8e32961bfeE(6432);
  // unreachable;
 }
 $11 = ($5|0)==(0);
 if ($11) {
  $12 = (_malloc($_0$0$sroa$speculated$i$i$i)|0);
  $ptr$0$i = $12;
 } else {
  $13 = HEAP32[$0>>2]|0;
  $14 = (_realloc($13,$_0$0$sroa$speculated$i$i$i)|0);
  $ptr$0$i = $14;
 }
 $15 = ($ptr$0$i|0)==(0|0);
 if ($15) {
  __ZN5alloc3oom3oom17hb253cf665793f59eE();
  // unreachable;
 }
 HEAP32[$0>>2] = $ptr$0$i;
 HEAP32[$4>>2] = $_0$0$sroa$speculated$i$i$i;
 return;
}
function __ZN53__LT__RF__u27_a_u20_T_u20_as_u20_core__fmt__Debug_GT_3fmt17h2832f44509b22a34E($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$arith = 0, $$arith11 = 0, $$arith15 = 0, $$arith19 = 0, $$arith23 = 0, $$arith27 = 0, $$arith31 = 0, $$arith35 = 0, $$arith39 = 0, $$arith43 = 0, $$arith47 = 0, $$arith51 = 0, $$arith55 = 0, $$arith59 = 0, $$arith7 = 0, $$fca$0$gep82$i$i = 0, $$fca$0$load$i$i = 0, $$off$i$i = 0, $$off283$i$i = 0, $$off285$i$i = 0;
 var $$overflow = 0, $$overflow12 = 0, $$overflow16 = 0, $$overflow20 = 0, $$overflow24 = 0, $$overflow28 = 0, $$overflow32 = 0, $$overflow36 = 0, $$overflow40 = 0, $$overflow44 = 0, $$overflow48 = 0, $$overflow52 = 0, $$overflow56 = 0, $$overflow60 = 0, $$overflow8 = 0, $$pre = 0, $$pre$phiZ2D = 0, $10 = 0, $100 = 0, $101 = 0;
 var $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0;
 var $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0;
 var $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0;
 var $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0;
 var $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0;
 var $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0;
 var $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0;
 var $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0;
 var $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0;
 var $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0;
 var $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0;
 var $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0;
 var $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0;
 var $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0;
 var $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0;
 var $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0;
 var $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0;
 var $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0;
 var $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0;
 var $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $_0$0$sroa$speculated$i$i$i$i101$i$i = 0, $_0$0$sroa$speculated$i$i$i$i117$i$i = 0, $_0$0$sroa$speculated$i$i$i$i134$i$i = 0, $_0$0$sroa$speculated$i$i$i$i150$i$i = 0, $_0$0$sroa$speculated$i$i$i$i167$i$i = 0, $_0$0$sroa$speculated$i$i$i$i183$i$i = 0;
 var $_0$0$sroa$speculated$i$i$i$i199$i$i = 0, $_0$0$sroa$speculated$i$i$i$i21$i$i = 0, $_0$0$sroa$speculated$i$i$i$i215$i$i = 0, $_0$0$sroa$speculated$i$i$i$i233$i$i = 0, $_0$0$sroa$speculated$i$i$i$i37$i$i = 0, $_0$0$sroa$speculated$i$i$i$i5$i$i = 0, $_0$0$sroa$speculated$i$i$i$i53$i$i = 0, $_0$0$sroa$speculated$i$i$i$i69$i$i = 0, $_0$0$sroa$speculated$i$i$i$i85$i$i = 0, $_0$sroa$0$0$i16$i = 0, $_5$i$i = 0, $_6$i$sroa$12$0$ph = 0, $_6$i$sroa$5$0$ph = 0, $_6$i$sroa$8$0$ph = 0, $cond$i$i = 0, $cond10$i$i = 0, $cond11$i$i = 0, $cond9$i$i = 0, $i$0$be$i$i = 0, $i$0318$i$i = 0;
 var $lpad$phi$i$i$index = 0, $lpad$phi$i$i$index2 = 0, $not$$i$i$i$i$i$i$i = 0, $not$$i$i$i$i$i$i12$i = 0, $not$$i$i$i$i$i$i3$i = 0, $or$cond113$i$i = 0, $or$cond114$i$i = 0, $or$cond115$i$i = 0, $or$cond116$i$i = 0, $or$cond118$i$i = 0, $or$cond119$i$i = 0, $or$cond123$i$i = 0, $or$cond124$i$i = 0, $or$cond125$i$i = 0, $or$cond126$i$i = 0, $ptr$0$i$i$i$i$i = 0, $ptr$0$i$i107$i$i = 0, $ptr$0$i$i11$i$i = 0, $ptr$0$i$i123$i$i = 0, $ptr$0$i$i140$i$i = 0;
 var $ptr$0$i$i156$i$i = 0, $ptr$0$i$i173$i$i = 0, $ptr$0$i$i189$i$i = 0, $ptr$0$i$i205$i$i = 0, $ptr$0$i$i221$i$i = 0, $ptr$0$i$i239$i$i = 0, $ptr$0$i$i27$i$i = 0, $ptr$0$i$i43$i$i = 0, $ptr$0$i$i59$i$i = 0, $ptr$0$i$i75$i$i = 0, $ptr$0$i$i91$i$i = 0, $res$i$i$sroa$0$10 = 0, $res$i$i$sroa$0$11 = 0, $res$i$i$sroa$0$12 = 0, $res$i$i$sroa$0$13 = 0, $res$i$i$sroa$0$14 = 0, $res$i$i$sroa$0$15 = 0, $res$i$i$sroa$0$16 = 0, $res$i$i$sroa$0$17 = 0, $res$i$i$sroa$0$18 = 0;
 var $res$i$i$sroa$0$19 = 0, $res$i$i$sroa$0$2 = 0, $res$i$i$sroa$0$20 = 0, $res$i$i$sroa$0$21 = 0, $res$i$i$sroa$0$22 = 0, $res$i$i$sroa$0$23 = 0, $res$i$i$sroa$0$24 = 0, $res$i$i$sroa$0$25 = 0, $res$i$i$sroa$0$26 = 0, $res$i$i$sroa$0$28 = 0, $res$i$i$sroa$0$29 = 0, $res$i$i$sroa$0$3 = 0, $res$i$i$sroa$0$30 = 0, $res$i$i$sroa$0$4 = 0, $res$i$i$sroa$0$5 = 0, $res$i$i$sroa$0$6 = 0, $res$i$i$sroa$0$7 = 0, $res$i$i$sroa$0$8 = 0, $res$i$i$sroa$0$9 = 0, $res$i$i$sroa$53$10 = 0;
 var $res$i$i$sroa$53$11 = 0, $res$i$i$sroa$53$12 = 0, $res$i$i$sroa$53$13 = 0, $res$i$i$sroa$53$14 = 0, $res$i$i$sroa$53$15 = 0, $res$i$i$sroa$53$16 = 0, $res$i$i$sroa$53$17 = 0, $res$i$i$sroa$53$18 = 0, $res$i$i$sroa$53$19 = 0, $res$i$i$sroa$53$2 = 0, $res$i$i$sroa$53$20 = 0, $res$i$i$sroa$53$21 = 0, $res$i$i$sroa$53$22 = 0, $res$i$i$sroa$53$23 = 0, $res$i$i$sroa$53$24 = 0, $res$i$i$sroa$53$25 = 0, $res$i$i$sroa$53$26 = 0, $res$i$i$sroa$53$28 = 0, $res$i$i$sroa$53$29 = 0, $res$i$i$sroa$53$3 = 0;
 var $res$i$i$sroa$53$30 = 0, $res$i$i$sroa$53$4 = 0, $res$i$i$sroa$53$5 = 0, $res$i$i$sroa$53$6 = 0, $res$i$i$sroa$53$7 = 0, $res$i$i$sroa$53$8 = 0, $res$i$i$sroa$53$9 = 0, $res$i$i$sroa$88$0 = 0, $res$i$i$sroa$88$1 = 0, $res$i$i$sroa$88$10 = 0, $res$i$i$sroa$88$2 = 0, $res$i$i$sroa$88$3 = 0, $res$i$i$sroa$88$4 = 0, $res$i$i$sroa$88$5 = 0, $res$i$i$sroa$88$6 = 0, $res$i$i$sroa$88$7 = 0, $res$i$i$sroa$88$8 = 0, $res$i$i$sroa$88$9 = 0, $subseqidx$0$be$i$i = 0, $subseqidx$0$lcssa$i$i = 0;
 var $subseqidx$0317$i$i = 0, $switch$i1$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $_5$i$i = sp;
 $2 = HEAP32[$0>>2]|0;
 $3 = ((($0)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 __ZN4core3str9from_utf817hf86f38bfbc8504d1E($_5$i$i,$2,$4);
 $5 = HEAP32[$_5$i$i>>2]|0;
 $switch$i1$i = ($5|0)==(1);
 $$fca$0$gep82$i$i = ((($_5$i$i)) + 4|0);
 $$fca$0$load$i$i = HEAP32[$$fca$0$gep82$i$i>>2]|0;
 if (!($switch$i1$i)) {
  $389 = ((($_5$i$i)) + 8|0);
  $390 = HEAP32[$389>>2]|0;
  $391 = $$fca$0$load$i$i;
  $392 = (__ZN40__LT_str_u20_as_u20_core__fmt__Debug_GT_3fmt17ha856739f11aa1026E($391,$390,$1)|0);
  $_0$sroa$0$0$i16$i = $392;
  STACKTOP = sp;return ($_0$sroa$0$0$i16$i|0);
 }
 $6 = ($4|0)<(0);
 if ($6) {
  __ZN4core9panicking5panic17ha7507e8e32961bfeE(6432);
  // unreachable;
 }
 $7 = ($4|0)==(0);
 if ($7) {
  $ptr$0$i$i$i$i$i = (1);
 } else {
  $8 = (_malloc($4)|0);
  $9 = ($8|0)==(0|0);
  if ($9) {
   __ZN5alloc3oom3oom17hb253cf665793f59eE();
   // unreachable;
  } else {
   $ptr$0$i$i$i$i$i = $8;
  }
 }
 $10 = $ptr$0$i$i$i$i$i;
 $11 = ($$fca$0$load$i$i|0)==(0);
 do {
  if ($11) {
   $res$i$i$sroa$88$0 = 0;
   label = 12;
  } else {
   $12 = ($$fca$0$load$i$i>>>0)>($4>>>0);
   if ($12) {
    __THREW__ = 0;
    invoke_vii(263,($$fca$0$load$i$i|0),($4|0));
    $13 = __THREW__; __THREW__ = 0;
    $res$i$i$sroa$0$29 = $10;$res$i$i$sroa$53$29 = $4;
    label = 262;
    break;
   } else {
    _memcpy(($ptr$0$i$i$i$i$i|0),($2|0),($$fca$0$load$i$i|0))|0;
    $res$i$i$sroa$88$0 = $$fca$0$load$i$i;
    label = 12;
    break;
   }
  }
 } while(0);
 L17: do {
  if ((label|0) == 12) {
   $14 = ($res$i$i$sroa$88$0>>>0)<($4>>>0);
   L19: do {
    if ($14) {
     $i$0318$i$i = $res$i$i$sroa$88$0;$res$i$i$sroa$0$3 = $10;$res$i$i$sroa$53$3 = $4;$res$i$i$sroa$88$2 = $res$i$i$sroa$88$0;$subseqidx$0317$i$i = $res$i$i$sroa$88$0;
     L20: while(1) {
      $16 = (($2) + ($i$0318$i$i)|0);
      $17 = HEAP8[$16>>0]|0;
      $18 = (($i$0318$i$i) + 1)|0;
      $19 = ($17<<24>>24)>(-1);
      L22: do {
       if ($19) {
        $i$0$be$i$i = $18;$res$i$i$sroa$0$4 = $res$i$i$sroa$0$3;$res$i$i$sroa$53$4 = $res$i$i$sroa$53$3;$res$i$i$sroa$88$3 = $res$i$i$sroa$88$2;$subseqidx$0$be$i$i = $subseqidx$0317$i$i;
       } else {
        $21 = $17&255;
        $22 = (24074 + ($21)|0);
        $23 = HEAP8[$22>>0]|0;
        switch ($23<<24>>24) {
        case 2:  {
         $24 = ($18>>>0)<($4>>>0);
         if ($24) {
          $28 = (($2) + ($18)|0);
          $29 = HEAP8[$28>>0]|0;
          $30 = $29 & -64;
          $31 = ($30<<24>>24)==(-128);
          if ($31) {
           $33 = (($i$0318$i$i) + 2)|0;
           $i$0$be$i$i = $33;$res$i$i$sroa$0$4 = $res$i$i$sroa$0$3;$res$i$i$sroa$53$4 = $res$i$i$sroa$53$3;$res$i$i$sroa$88$3 = $res$i$i$sroa$88$2;$subseqidx$0$be$i$i = $subseqidx$0317$i$i;
           break L22;
          }
         }
         $32 = ($i$0318$i$i|0)==($subseqidx$0317$i$i|0);
         if ($32) {
          $res$i$i$sroa$0$6 = $res$i$i$sroa$0$3;$res$i$i$sroa$53$6 = $res$i$i$sroa$53$3;$res$i$i$sroa$88$4 = $res$i$i$sroa$88$2;
         } else {
          $34 = ($i$0318$i$i>>>0)<($subseqidx$0317$i$i>>>0);
          if ($34) {
           label = 25;
           break L20;
          }
          $36 = ($i$0318$i$i>>>0)>($4>>>0);
          if ($36) {
           label = 27;
           break L20;
          }
          $38 = (($2) + ($subseqidx$0317$i$i)|0);
          $39 = (($i$0318$i$i) - ($subseqidx$0317$i$i))|0;
          $40 = (($res$i$i$sroa$53$3) - ($res$i$i$sroa$88$2))|0;
          $41 = ($40>>>0)<($39>>>0);
          if ($41) {
           $$arith59 = (($res$i$i$sroa$88$2) + ($39))|0;
           $$overflow60 = ($$arith59>>>0)<($res$i$i$sroa$88$2>>>0);
           if ($$overflow60) {
            label = 30;
            break L20;
           }
           $43 = $res$i$i$sroa$53$3 << 1;
           $44 = ($$arith59>>>0)>=($43>>>0);
           $_0$0$sroa$speculated$i$i$i$i5$i$i = $44 ? $$arith59 : $43;
           $45 = ($_0$0$sroa$speculated$i$i$i$i5$i$i|0)<(0);
           if ($45) {
            label = 32;
            break L20;
           }
           $47 = ($res$i$i$sroa$53$3|0)==(0);
           if ($47) {
            $48 = (_malloc($_0$0$sroa$speculated$i$i$i$i5$i$i)|0);
            $ptr$0$i$i11$i$i = $48;
           } else {
            $49 = $res$i$i$sroa$0$3;
            $50 = (_realloc($49,$_0$0$sroa$speculated$i$i$i$i5$i$i)|0);
            $ptr$0$i$i11$i$i = $50;
           }
           $51 = ($ptr$0$i$i11$i$i|0)==(0|0);
           if ($51) {
            label = 37;
            break L20;
           }
           $53 = $ptr$0$i$i11$i$i;
           $res$i$i$sroa$0$5 = $53;$res$i$i$sroa$53$5 = $_0$0$sroa$speculated$i$i$i$i5$i$i;
          } else {
           $res$i$i$sroa$0$5 = $res$i$i$sroa$0$3;$res$i$i$sroa$53$5 = $res$i$i$sroa$53$3;
          }
          $54 = ($39|0)==(0);
          if ($54) {
           $res$i$i$sroa$0$6 = $res$i$i$sroa$0$5;$res$i$i$sroa$53$6 = $res$i$i$sroa$53$5;$res$i$i$sroa$88$4 = $res$i$i$sroa$88$2;
          } else {
           $55 = (($res$i$i$sroa$88$2) + ($39))|0;
           $56 = $res$i$i$sroa$0$5;
           $57 = (($56) + ($res$i$i$sroa$88$2)|0);
           _memcpy(($57|0),($38|0),($39|0))|0;
           $res$i$i$sroa$0$6 = $res$i$i$sroa$0$5;$res$i$i$sroa$53$6 = $res$i$i$sroa$53$5;$res$i$i$sroa$88$4 = $55;
          }
         }
         $58 = (($res$i$i$sroa$53$6) - ($res$i$i$sroa$88$4))|0;
         $59 = ($58>>>0)<(3);
         if ($59) {
          $$arith55 = (($res$i$i$sroa$88$4) + 3)|0;
          $$overflow56 = ($res$i$i$sroa$88$4>>>0)>(4294967292);
          if ($$overflow56) {
           label = 43;
           break L20;
          }
          $61 = $res$i$i$sroa$53$6 << 1;
          $62 = ($$arith55>>>0)>=($61>>>0);
          $_0$0$sroa$speculated$i$i$i$i21$i$i = $62 ? $$arith55 : $61;
          $63 = ($_0$0$sroa$speculated$i$i$i$i21$i$i|0)<(0);
          if ($63) {
           label = 45;
           break L20;
          }
          $65 = ($res$i$i$sroa$53$6|0)==(0);
          if ($65) {
           $66 = (_malloc($_0$0$sroa$speculated$i$i$i$i21$i$i)|0);
           $ptr$0$i$i27$i$i = $66;
          } else {
           $67 = $res$i$i$sroa$0$6;
           $68 = (_realloc($67,$_0$0$sroa$speculated$i$i$i$i21$i$i)|0);
           $ptr$0$i$i27$i$i = $68;
          }
          $69 = ($ptr$0$i$i27$i$i|0)==(0|0);
          if ($69) {
           label = 50;
           break L20;
          }
          $71 = $ptr$0$i$i27$i$i;
          $res$i$i$sroa$0$7 = $71;$res$i$i$sroa$53$7 = $_0$0$sroa$speculated$i$i$i$i21$i$i;
         } else {
          $res$i$i$sroa$0$7 = $res$i$i$sroa$0$6;$res$i$i$sroa$53$7 = $res$i$i$sroa$53$6;
         }
         $72 = $res$i$i$sroa$0$7;
         $73 = (($72) + ($res$i$i$sroa$88$4)|0);
         ;HEAP8[$73>>0]=HEAP8[21141>>0]|0;HEAP8[$73+1>>0]=HEAP8[21141+1>>0]|0;HEAP8[$73+2>>0]=HEAP8[21141+2>>0]|0;
         $74 = (($res$i$i$sroa$88$4) + 3)|0;
         $i$0$be$i$i = $18;$res$i$i$sroa$0$4 = $res$i$i$sroa$0$7;$res$i$i$sroa$53$4 = $res$i$i$sroa$53$7;$res$i$i$sroa$88$3 = $74;$subseqidx$0$be$i$i = $18;
         break L22;
         break;
        }
        case 3:  {
         $25 = ($18>>>0)<($4>>>0);
         do {
          if ($25) {
           $75 = (($2) + ($18)|0);
           $76 = HEAP8[$75>>0]|0;
           $cond10$i$i = ($17<<24>>24)==(-32);
           $77 = ($76&255)<(192);
           $78 = $76 & -32;
           $79 = ($78<<24>>24)==(-96);
           $80 = $cond10$i$i & $79;
           if (!($80)) {
            $$off285$i$i = (($17) + 31)<<24>>24;
            $82 = ($$off285$i$i&255)<(12);
            $83 = ($76<<24>>24)<(0);
            $or$cond113$i$i = $82 & $83;
            $or$cond114$i$i = $77 & $or$cond113$i$i;
            if (!($or$cond114$i$i)) {
             $cond11$i$i = ($17<<24>>24)==(-19);
             $or$cond115$i$i = $cond11$i$i & $83;
             $84 = ($76&255)<(160);
             $or$cond116$i$i = $84 & $or$cond115$i$i;
             if (!($or$cond116$i$i)) {
              $85 = $17 & -2;
              $86 = ($85<<24>>24)==(-18);
              $or$cond118$i$i = $86 & $83;
              $or$cond119$i$i = $77 & $or$cond118$i$i;
              if (!($or$cond119$i$i)) {
               break;
              }
             }
            }
           }
           $87 = (($i$0318$i$i) + 2)|0;
           $88 = ($87>>>0)<($4>>>0);
           if ($88) {
            $130 = (($2) + ($87)|0);
            $131 = HEAP8[$130>>0]|0;
            $132 = $131 & -64;
            $133 = ($132<<24>>24)==(-128);
            if ($133) {
             $135 = (($i$0318$i$i) + 3)|0;
             $i$0$be$i$i = $135;$res$i$i$sroa$0$4 = $res$i$i$sroa$0$3;$res$i$i$sroa$53$4 = $res$i$i$sroa$53$3;$res$i$i$sroa$88$3 = $res$i$i$sroa$88$2;$subseqidx$0$be$i$i = $subseqidx$0317$i$i;
             break L22;
            }
           }
           $134 = ($i$0318$i$i|0)==($subseqidx$0317$i$i|0);
           do {
            if ($134) {
             $res$i$i$sroa$0$12 = $res$i$i$sroa$0$3;$res$i$i$sroa$53$12 = $res$i$i$sroa$53$3;$res$i$i$sroa$88$6 = $res$i$i$sroa$88$2;
            } else {
             $136 = ($i$0318$i$i>>>0)<($subseqidx$0317$i$i>>>0);
             if ($136) {
              label = 92;
              break L20;
             }
             $138 = ($i$0318$i$i>>>0)>($4>>>0);
             if ($138) {
              label = 94;
              break L20;
             }
             $140 = (($2) + ($subseqidx$0317$i$i)|0);
             $141 = (($i$0318$i$i) - ($subseqidx$0317$i$i))|0;
             $142 = (($res$i$i$sroa$53$3) - ($res$i$i$sroa$88$2))|0;
             $143 = ($142>>>0)<($141>>>0);
             if ($143) {
              $$arith43 = (($res$i$i$sroa$88$2) + ($141))|0;
              $$overflow44 = ($$arith43>>>0)<($res$i$i$sroa$88$2>>>0);
              if ($$overflow44) {
               label = 97;
               break L20;
              }
              $145 = $res$i$i$sroa$53$3 << 1;
              $146 = ($$arith43>>>0)>=($145>>>0);
              $_0$0$sroa$speculated$i$i$i$i69$i$i = $146 ? $$arith43 : $145;
              $147 = ($_0$0$sroa$speculated$i$i$i$i69$i$i|0)<(0);
              if ($147) {
               label = 99;
               break L20;
              }
              $149 = ($res$i$i$sroa$53$3|0)==(0);
              if ($149) {
               $150 = (_malloc($_0$0$sroa$speculated$i$i$i$i69$i$i)|0);
               $ptr$0$i$i75$i$i = $150;
              } else {
               $151 = $res$i$i$sroa$0$3;
               $152 = (_realloc($151,$_0$0$sroa$speculated$i$i$i$i69$i$i)|0);
               $ptr$0$i$i75$i$i = $152;
              }
              $153 = ($ptr$0$i$i75$i$i|0)==(0|0);
              if ($153) {
               label = 104;
               break L20;
              }
              $155 = $ptr$0$i$i75$i$i;
              $res$i$i$sroa$0$11 = $155;$res$i$i$sroa$53$11 = $_0$0$sroa$speculated$i$i$i$i69$i$i;
             } else {
              $res$i$i$sroa$0$11 = $res$i$i$sroa$0$3;$res$i$i$sroa$53$11 = $res$i$i$sroa$53$3;
             }
             $156 = ($141|0)==(0);
             if ($156) {
              $res$i$i$sroa$0$12 = $res$i$i$sroa$0$11;$res$i$i$sroa$53$12 = $res$i$i$sroa$53$11;$res$i$i$sroa$88$6 = $res$i$i$sroa$88$2;
              break;
             }
             $157 = (($res$i$i$sroa$88$2) + ($141))|0;
             $158 = $res$i$i$sroa$0$11;
             $159 = (($158) + ($res$i$i$sroa$88$2)|0);
             _memcpy(($159|0),($140|0),($141|0))|0;
             $res$i$i$sroa$0$12 = $res$i$i$sroa$0$11;$res$i$i$sroa$53$12 = $res$i$i$sroa$53$11;$res$i$i$sroa$88$6 = $157;
            }
           } while(0);
           $160 = (($res$i$i$sroa$53$12) - ($res$i$i$sroa$88$6))|0;
           $161 = ($160>>>0)<(3);
           if ($161) {
            $$arith39 = (($res$i$i$sroa$88$6) + 3)|0;
            $$overflow40 = ($res$i$i$sroa$88$6>>>0)>(4294967292);
            if ($$overflow40) {
             label = 110;
             break L20;
            }
            $163 = $res$i$i$sroa$53$12 << 1;
            $164 = ($$arith39>>>0)>=($163>>>0);
            $_0$0$sroa$speculated$i$i$i$i85$i$i = $164 ? $$arith39 : $163;
            $165 = ($_0$0$sroa$speculated$i$i$i$i85$i$i|0)<(0);
            if ($165) {
             label = 112;
             break L20;
            }
            $167 = ($res$i$i$sroa$53$12|0)==(0);
            if ($167) {
             $168 = (_malloc($_0$0$sroa$speculated$i$i$i$i85$i$i)|0);
             $ptr$0$i$i91$i$i = $168;
            } else {
             $169 = $res$i$i$sroa$0$12;
             $170 = (_realloc($169,$_0$0$sroa$speculated$i$i$i$i85$i$i)|0);
             $ptr$0$i$i91$i$i = $170;
            }
            $171 = ($ptr$0$i$i91$i$i|0)==(0|0);
            if ($171) {
             label = 117;
             break L20;
            }
            $173 = $ptr$0$i$i91$i$i;
            $res$i$i$sroa$0$13 = $173;$res$i$i$sroa$53$13 = $_0$0$sroa$speculated$i$i$i$i85$i$i;
           } else {
            $res$i$i$sroa$0$13 = $res$i$i$sroa$0$12;$res$i$i$sroa$53$13 = $res$i$i$sroa$53$12;
           }
           $174 = $res$i$i$sroa$0$13;
           $175 = (($174) + ($res$i$i$sroa$88$6)|0);
           ;HEAP8[$175>>0]=HEAP8[21141>>0]|0;HEAP8[$175+1>>0]=HEAP8[21141+1>>0]|0;HEAP8[$175+2>>0]=HEAP8[21141+2>>0]|0;
           $176 = (($res$i$i$sroa$88$6) + 3)|0;
           $i$0$be$i$i = $87;$res$i$i$sroa$0$4 = $res$i$i$sroa$0$13;$res$i$i$sroa$53$4 = $res$i$i$sroa$53$13;$res$i$i$sroa$88$3 = $176;$subseqidx$0$be$i$i = $87;
           break L22;
          }
         } while(0);
         $81 = ($i$0318$i$i|0)==($subseqidx$0317$i$i|0);
         if ($81) {
          $res$i$i$sroa$0$9 = $res$i$i$sroa$0$3;$res$i$i$sroa$53$9 = $res$i$i$sroa$53$3;$res$i$i$sroa$88$5 = $res$i$i$sroa$88$2;
         } else {
          $89 = ($i$0318$i$i>>>0)<($subseqidx$0317$i$i>>>0);
          if ($89) {
           label = 60;
           break L20;
          }
          $91 = ($i$0318$i$i>>>0)>($4>>>0);
          if ($91) {
           label = 62;
           break L20;
          }
          $93 = (($2) + ($subseqidx$0317$i$i)|0);
          $94 = (($i$0318$i$i) - ($subseqidx$0317$i$i))|0;
          $95 = (($res$i$i$sroa$53$3) - ($res$i$i$sroa$88$2))|0;
          $96 = ($95>>>0)<($94>>>0);
          if ($96) {
           $$arith51 = (($res$i$i$sroa$88$2) + ($94))|0;
           $$overflow52 = ($$arith51>>>0)<($res$i$i$sroa$88$2>>>0);
           if ($$overflow52) {
            label = 65;
            break L20;
           }
           $98 = $res$i$i$sroa$53$3 << 1;
           $99 = ($$arith51>>>0)>=($98>>>0);
           $_0$0$sroa$speculated$i$i$i$i37$i$i = $99 ? $$arith51 : $98;
           $100 = ($_0$0$sroa$speculated$i$i$i$i37$i$i|0)<(0);
           if ($100) {
            label = 67;
            break L20;
           }
           $102 = ($res$i$i$sroa$53$3|0)==(0);
           if ($102) {
            $103 = (_malloc($_0$0$sroa$speculated$i$i$i$i37$i$i)|0);
            $ptr$0$i$i43$i$i = $103;
           } else {
            $104 = $res$i$i$sroa$0$3;
            $105 = (_realloc($104,$_0$0$sroa$speculated$i$i$i$i37$i$i)|0);
            $ptr$0$i$i43$i$i = $105;
           }
           $106 = ($ptr$0$i$i43$i$i|0)==(0|0);
           if ($106) {
            label = 72;
            break L20;
           }
           $108 = $ptr$0$i$i43$i$i;
           $res$i$i$sroa$0$8 = $108;$res$i$i$sroa$53$8 = $_0$0$sroa$speculated$i$i$i$i37$i$i;
          } else {
           $res$i$i$sroa$0$8 = $res$i$i$sroa$0$3;$res$i$i$sroa$53$8 = $res$i$i$sroa$53$3;
          }
          $109 = ($94|0)==(0);
          if ($109) {
           $res$i$i$sroa$0$9 = $res$i$i$sroa$0$8;$res$i$i$sroa$53$9 = $res$i$i$sroa$53$8;$res$i$i$sroa$88$5 = $res$i$i$sroa$88$2;
          } else {
           $110 = (($res$i$i$sroa$88$2) + ($94))|0;
           $111 = $res$i$i$sroa$0$8;
           $112 = (($111) + ($res$i$i$sroa$88$2)|0);
           _memcpy(($112|0),($93|0),($94|0))|0;
           $res$i$i$sroa$0$9 = $res$i$i$sroa$0$8;$res$i$i$sroa$53$9 = $res$i$i$sroa$53$8;$res$i$i$sroa$88$5 = $110;
          }
         }
         $113 = (($res$i$i$sroa$53$9) - ($res$i$i$sroa$88$5))|0;
         $114 = ($113>>>0)<(3);
         if ($114) {
          $$arith47 = (($res$i$i$sroa$88$5) + 3)|0;
          $$overflow48 = ($res$i$i$sroa$88$5>>>0)>(4294967292);
          if ($$overflow48) {
           label = 78;
           break L20;
          }
          $116 = $res$i$i$sroa$53$9 << 1;
          $117 = ($$arith47>>>0)>=($116>>>0);
          $_0$0$sroa$speculated$i$i$i$i53$i$i = $117 ? $$arith47 : $116;
          $118 = ($_0$0$sroa$speculated$i$i$i$i53$i$i|0)<(0);
          if ($118) {
           label = 80;
           break L20;
          }
          $120 = ($res$i$i$sroa$53$9|0)==(0);
          if ($120) {
           $121 = (_malloc($_0$0$sroa$speculated$i$i$i$i53$i$i)|0);
           $ptr$0$i$i59$i$i = $121;
          } else {
           $122 = $res$i$i$sroa$0$9;
           $123 = (_realloc($122,$_0$0$sroa$speculated$i$i$i$i53$i$i)|0);
           $ptr$0$i$i59$i$i = $123;
          }
          $124 = ($ptr$0$i$i59$i$i|0)==(0|0);
          if ($124) {
           label = 85;
           break L20;
          }
          $126 = $ptr$0$i$i59$i$i;
          $res$i$i$sroa$0$10 = $126;$res$i$i$sroa$53$10 = $_0$0$sroa$speculated$i$i$i$i53$i$i;
         } else {
          $res$i$i$sroa$0$10 = $res$i$i$sroa$0$9;$res$i$i$sroa$53$10 = $res$i$i$sroa$53$9;
         }
         $127 = $res$i$i$sroa$0$10;
         $128 = (($127) + ($res$i$i$sroa$88$5)|0);
         ;HEAP8[$128>>0]=HEAP8[21141>>0]|0;HEAP8[$128+1>>0]=HEAP8[21141+1>>0]|0;HEAP8[$128+2>>0]=HEAP8[21141+2>>0]|0;
         $129 = (($res$i$i$sroa$88$5) + 3)|0;
         $i$0$be$i$i = $18;$res$i$i$sroa$0$4 = $res$i$i$sroa$0$10;$res$i$i$sroa$53$4 = $res$i$i$sroa$53$10;$res$i$i$sroa$88$3 = $129;$subseqidx$0$be$i$i = $18;
         break L22;
         break;
        }
        case 4:  {
         $26 = ($18>>>0)<($4>>>0);
         do {
          if ($26) {
           $177 = (($2) + ($18)|0);
           $178 = HEAP8[$177>>0]|0;
           $cond$i$i = ($17<<24>>24)==(-16);
           $$off$i$i = (($178) + 112)<<24>>24;
           $179 = ($$off$i$i&255)<(48);
           $180 = $cond$i$i & $179;
           if (!($180)) {
            $182 = ($178&255)<(192);
            $$off283$i$i = (($17) + 15)<<24>>24;
            $183 = ($$off283$i$i&255)<(3);
            $184 = ($178<<24>>24)<(0);
            $or$cond123$i$i = $183 & $184;
            $or$cond124$i$i = $182 & $or$cond123$i$i;
            if (!($or$cond124$i$i)) {
             $cond9$i$i = ($17<<24>>24)==(-12);
             $or$cond125$i$i = $cond9$i$i & $184;
             $185 = ($178&255)<(144);
             $or$cond126$i$i = $185 & $or$cond125$i$i;
             if (!($or$cond126$i$i)) {
              break;
             }
            }
           }
           $186 = (($i$0318$i$i) + 2)|0;
           $187 = ($186>>>0)<($4>>>0);
           if ($187) {
            $228 = (($2) + ($186)|0);
            $229 = HEAP8[$228>>0]|0;
            $230 = $229 & -64;
            $231 = ($230<<24>>24)==(-128);
            if ($231) {
             $233 = (($i$0318$i$i) + 3)|0;
             $234 = ($233>>>0)<($4>>>0);
             if ($234) {
              $276 = (($2) + ($233)|0);
              $277 = HEAP8[$276>>0]|0;
              $278 = $277 & -64;
              $279 = ($278<<24>>24)==(-128);
              if ($279) {
               $281 = (($i$0318$i$i) + 4)|0;
               $i$0$be$i$i = $281;$res$i$i$sroa$0$4 = $res$i$i$sroa$0$3;$res$i$i$sroa$53$4 = $res$i$i$sroa$53$3;$res$i$i$sroa$88$3 = $res$i$i$sroa$88$2;$subseqidx$0$be$i$i = $subseqidx$0317$i$i;
               break L22;
              }
             }
             $280 = ($i$0318$i$i|0)==($subseqidx$0317$i$i|0);
             do {
              if ($280) {
               $res$i$i$sroa$0$21 = $res$i$i$sroa$0$3;$res$i$i$sroa$53$21 = $res$i$i$sroa$53$3;$res$i$i$sroa$88$9 = $res$i$i$sroa$88$2;
              } else {
               $282 = ($i$0318$i$i>>>0)<($subseqidx$0317$i$i>>>0);
               if ($282) {
                label = 191;
                break L20;
               }
               $284 = ($i$0318$i$i>>>0)>($4>>>0);
               if ($284) {
                label = 193;
                break L20;
               }
               $286 = (($2) + ($subseqidx$0317$i$i)|0);
               $287 = (($i$0318$i$i) - ($subseqidx$0317$i$i))|0;
               $288 = (($res$i$i$sroa$53$3) - ($res$i$i$sroa$88$2))|0;
               $289 = ($288>>>0)<($287>>>0);
               if ($289) {
                $$arith19 = (($res$i$i$sroa$88$2) + ($287))|0;
                $$overflow20 = ($$arith19>>>0)<($res$i$i$sroa$88$2>>>0);
                if ($$overflow20) {
                 label = 196;
                 break L20;
                }
                $291 = $res$i$i$sroa$53$3 << 1;
                $292 = ($$arith19>>>0)>=($291>>>0);
                $_0$0$sroa$speculated$i$i$i$i167$i$i = $292 ? $$arith19 : $291;
                $293 = ($_0$0$sroa$speculated$i$i$i$i167$i$i|0)<(0);
                if ($293) {
                 label = 198;
                 break L20;
                }
                $295 = ($res$i$i$sroa$53$3|0)==(0);
                if ($295) {
                 $296 = (_malloc($_0$0$sroa$speculated$i$i$i$i167$i$i)|0);
                 $ptr$0$i$i173$i$i = $296;
                } else {
                 $297 = $res$i$i$sroa$0$3;
                 $298 = (_realloc($297,$_0$0$sroa$speculated$i$i$i$i167$i$i)|0);
                 $ptr$0$i$i173$i$i = $298;
                }
                $299 = ($ptr$0$i$i173$i$i|0)==(0|0);
                if ($299) {
                 label = 203;
                 break L20;
                }
                $301 = $ptr$0$i$i173$i$i;
                $res$i$i$sroa$0$20 = $301;$res$i$i$sroa$53$20 = $_0$0$sroa$speculated$i$i$i$i167$i$i;
               } else {
                $res$i$i$sroa$0$20 = $res$i$i$sroa$0$3;$res$i$i$sroa$53$20 = $res$i$i$sroa$53$3;
               }
               $302 = ($287|0)==(0);
               if ($302) {
                $res$i$i$sroa$0$21 = $res$i$i$sroa$0$20;$res$i$i$sroa$53$21 = $res$i$i$sroa$53$20;$res$i$i$sroa$88$9 = $res$i$i$sroa$88$2;
                break;
               }
               $303 = (($res$i$i$sroa$88$2) + ($287))|0;
               $304 = $res$i$i$sroa$0$20;
               $305 = (($304) + ($res$i$i$sroa$88$2)|0);
               _memcpy(($305|0),($286|0),($287|0))|0;
               $res$i$i$sroa$0$21 = $res$i$i$sroa$0$20;$res$i$i$sroa$53$21 = $res$i$i$sroa$53$20;$res$i$i$sroa$88$9 = $303;
              }
             } while(0);
             $306 = (($res$i$i$sroa$53$21) - ($res$i$i$sroa$88$9))|0;
             $307 = ($306>>>0)<(3);
             if ($307) {
              $$arith15 = (($res$i$i$sroa$88$9) + 3)|0;
              $$overflow16 = ($res$i$i$sroa$88$9>>>0)>(4294967292);
              if ($$overflow16) {
               label = 209;
               break L20;
              }
              $309 = $res$i$i$sroa$53$21 << 1;
              $310 = ($$arith15>>>0)>=($309>>>0);
              $_0$0$sroa$speculated$i$i$i$i183$i$i = $310 ? $$arith15 : $309;
              $311 = ($_0$0$sroa$speculated$i$i$i$i183$i$i|0)<(0);
              if ($311) {
               label = 211;
               break L20;
              }
              $313 = ($res$i$i$sroa$53$21|0)==(0);
              if ($313) {
               $314 = (_malloc($_0$0$sroa$speculated$i$i$i$i183$i$i)|0);
               $ptr$0$i$i189$i$i = $314;
              } else {
               $315 = $res$i$i$sroa$0$21;
               $316 = (_realloc($315,$_0$0$sroa$speculated$i$i$i$i183$i$i)|0);
               $ptr$0$i$i189$i$i = $316;
              }
              $317 = ($ptr$0$i$i189$i$i|0)==(0|0);
              if ($317) {
               label = 216;
               break L20;
              }
              $319 = $ptr$0$i$i189$i$i;
              $res$i$i$sroa$0$22 = $319;$res$i$i$sroa$53$22 = $_0$0$sroa$speculated$i$i$i$i183$i$i;
             } else {
              $res$i$i$sroa$0$22 = $res$i$i$sroa$0$21;$res$i$i$sroa$53$22 = $res$i$i$sroa$53$21;
             }
             $320 = $res$i$i$sroa$0$22;
             $321 = (($320) + ($res$i$i$sroa$88$9)|0);
             ;HEAP8[$321>>0]=HEAP8[21141>>0]|0;HEAP8[$321+1>>0]=HEAP8[21141+1>>0]|0;HEAP8[$321+2>>0]=HEAP8[21141+2>>0]|0;
             $322 = (($res$i$i$sroa$88$9) + 3)|0;
             $i$0$be$i$i = $233;$res$i$i$sroa$0$4 = $res$i$i$sroa$0$22;$res$i$i$sroa$53$4 = $res$i$i$sroa$53$22;$res$i$i$sroa$88$3 = $322;$subseqidx$0$be$i$i = $233;
             break L22;
            }
           }
           $232 = ($i$0318$i$i|0)==($subseqidx$0317$i$i|0);
           do {
            if ($232) {
             $res$i$i$sroa$0$18 = $res$i$i$sroa$0$3;$res$i$i$sroa$53$18 = $res$i$i$sroa$53$3;$res$i$i$sroa$88$8 = $res$i$i$sroa$88$2;
            } else {
             $235 = ($i$0318$i$i>>>0)<($subseqidx$0317$i$i>>>0);
             if ($235) {
              label = 159;
              break L20;
             }
             $237 = ($i$0318$i$i>>>0)>($4>>>0);
             if ($237) {
              label = 161;
              break L20;
             }
             $239 = (($2) + ($subseqidx$0317$i$i)|0);
             $240 = (($i$0318$i$i) - ($subseqidx$0317$i$i))|0;
             $241 = (($res$i$i$sroa$53$3) - ($res$i$i$sroa$88$2))|0;
             $242 = ($241>>>0)<($240>>>0);
             if ($242) {
              $$arith27 = (($res$i$i$sroa$88$2) + ($240))|0;
              $$overflow28 = ($$arith27>>>0)<($res$i$i$sroa$88$2>>>0);
              if ($$overflow28) {
               label = 164;
               break L20;
              }
              $244 = $res$i$i$sroa$53$3 << 1;
              $245 = ($$arith27>>>0)>=($244>>>0);
              $_0$0$sroa$speculated$i$i$i$i134$i$i = $245 ? $$arith27 : $244;
              $246 = ($_0$0$sroa$speculated$i$i$i$i134$i$i|0)<(0);
              if ($246) {
               label = 166;
               break L20;
              }
              $248 = ($res$i$i$sroa$53$3|0)==(0);
              if ($248) {
               $249 = (_malloc($_0$0$sroa$speculated$i$i$i$i134$i$i)|0);
               $ptr$0$i$i140$i$i = $249;
              } else {
               $250 = $res$i$i$sroa$0$3;
               $251 = (_realloc($250,$_0$0$sroa$speculated$i$i$i$i134$i$i)|0);
               $ptr$0$i$i140$i$i = $251;
              }
              $252 = ($ptr$0$i$i140$i$i|0)==(0|0);
              if ($252) {
               label = 171;
               break L20;
              }
              $254 = $ptr$0$i$i140$i$i;
              $res$i$i$sroa$0$17 = $254;$res$i$i$sroa$53$17 = $_0$0$sroa$speculated$i$i$i$i134$i$i;
             } else {
              $res$i$i$sroa$0$17 = $res$i$i$sroa$0$3;$res$i$i$sroa$53$17 = $res$i$i$sroa$53$3;
             }
             $255 = ($240|0)==(0);
             if ($255) {
              $res$i$i$sroa$0$18 = $res$i$i$sroa$0$17;$res$i$i$sroa$53$18 = $res$i$i$sroa$53$17;$res$i$i$sroa$88$8 = $res$i$i$sroa$88$2;
              break;
             }
             $256 = (($res$i$i$sroa$88$2) + ($240))|0;
             $257 = $res$i$i$sroa$0$17;
             $258 = (($257) + ($res$i$i$sroa$88$2)|0);
             _memcpy(($258|0),($239|0),($240|0))|0;
             $res$i$i$sroa$0$18 = $res$i$i$sroa$0$17;$res$i$i$sroa$53$18 = $res$i$i$sroa$53$17;$res$i$i$sroa$88$8 = $256;
            }
           } while(0);
           $259 = (($res$i$i$sroa$53$18) - ($res$i$i$sroa$88$8))|0;
           $260 = ($259>>>0)<(3);
           if ($260) {
            $$arith23 = (($res$i$i$sroa$88$8) + 3)|0;
            $$overflow24 = ($res$i$i$sroa$88$8>>>0)>(4294967292);
            if ($$overflow24) {
             label = 177;
             break L20;
            }
            $262 = $res$i$i$sroa$53$18 << 1;
            $263 = ($$arith23>>>0)>=($262>>>0);
            $_0$0$sroa$speculated$i$i$i$i150$i$i = $263 ? $$arith23 : $262;
            $264 = ($_0$0$sroa$speculated$i$i$i$i150$i$i|0)<(0);
            if ($264) {
             label = 179;
             break L20;
            }
            $266 = ($res$i$i$sroa$53$18|0)==(0);
            if ($266) {
             $267 = (_malloc($_0$0$sroa$speculated$i$i$i$i150$i$i)|0);
             $ptr$0$i$i156$i$i = $267;
            } else {
             $268 = $res$i$i$sroa$0$18;
             $269 = (_realloc($268,$_0$0$sroa$speculated$i$i$i$i150$i$i)|0);
             $ptr$0$i$i156$i$i = $269;
            }
            $270 = ($ptr$0$i$i156$i$i|0)==(0|0);
            if ($270) {
             label = 184;
             break L20;
            }
            $272 = $ptr$0$i$i156$i$i;
            $res$i$i$sroa$0$19 = $272;$res$i$i$sroa$53$19 = $_0$0$sroa$speculated$i$i$i$i150$i$i;
           } else {
            $res$i$i$sroa$0$19 = $res$i$i$sroa$0$18;$res$i$i$sroa$53$19 = $res$i$i$sroa$53$18;
           }
           $273 = $res$i$i$sroa$0$19;
           $274 = (($273) + ($res$i$i$sroa$88$8)|0);
           ;HEAP8[$274>>0]=HEAP8[21141>>0]|0;HEAP8[$274+1>>0]=HEAP8[21141+1>>0]|0;HEAP8[$274+2>>0]=HEAP8[21141+2>>0]|0;
           $275 = (($res$i$i$sroa$88$8) + 3)|0;
           $i$0$be$i$i = $186;$res$i$i$sroa$0$4 = $res$i$i$sroa$0$19;$res$i$i$sroa$53$4 = $res$i$i$sroa$53$19;$res$i$i$sroa$88$3 = $275;$subseqidx$0$be$i$i = $186;
           break L22;
          }
         } while(0);
         $181 = ($i$0318$i$i|0)==($subseqidx$0317$i$i|0);
         if ($181) {
          $res$i$i$sroa$0$15 = $res$i$i$sroa$0$3;$res$i$i$sroa$53$15 = $res$i$i$sroa$53$3;$res$i$i$sroa$88$7 = $res$i$i$sroa$88$2;
         } else {
          $188 = ($i$0318$i$i>>>0)<($subseqidx$0317$i$i>>>0);
          if ($188) {
           label = 126;
           break L20;
          }
          $190 = ($i$0318$i$i>>>0)>($4>>>0);
          if ($190) {
           label = 128;
           break L20;
          }
          $192 = (($2) + ($subseqidx$0317$i$i)|0);
          $193 = (($i$0318$i$i) - ($subseqidx$0317$i$i))|0;
          $194 = (($res$i$i$sroa$53$3) - ($res$i$i$sroa$88$2))|0;
          $195 = ($194>>>0)<($193>>>0);
          if ($195) {
           $$arith35 = (($res$i$i$sroa$88$2) + ($193))|0;
           $$overflow36 = ($$arith35>>>0)<($res$i$i$sroa$88$2>>>0);
           if ($$overflow36) {
            label = 131;
            break L20;
           }
           $197 = $res$i$i$sroa$53$3 << 1;
           $198 = ($$arith35>>>0)>=($197>>>0);
           $_0$0$sroa$speculated$i$i$i$i101$i$i = $198 ? $$arith35 : $197;
           $199 = ($_0$0$sroa$speculated$i$i$i$i101$i$i|0)<(0);
           if ($199) {
            label = 133;
            break L20;
           }
           $201 = ($res$i$i$sroa$53$3|0)==(0);
           if ($201) {
            $202 = (_malloc($_0$0$sroa$speculated$i$i$i$i101$i$i)|0);
            $ptr$0$i$i107$i$i = $202;
           } else {
            $203 = $res$i$i$sroa$0$3;
            $204 = (_realloc($203,$_0$0$sroa$speculated$i$i$i$i101$i$i)|0);
            $ptr$0$i$i107$i$i = $204;
           }
           $205 = ($ptr$0$i$i107$i$i|0)==(0|0);
           if ($205) {
            label = 138;
            break L20;
           }
           $207 = $ptr$0$i$i107$i$i;
           $res$i$i$sroa$0$14 = $207;$res$i$i$sroa$53$14 = $_0$0$sroa$speculated$i$i$i$i101$i$i;
          } else {
           $res$i$i$sroa$0$14 = $res$i$i$sroa$0$3;$res$i$i$sroa$53$14 = $res$i$i$sroa$53$3;
          }
          $208 = ($193|0)==(0);
          if ($208) {
           $res$i$i$sroa$0$15 = $res$i$i$sroa$0$14;$res$i$i$sroa$53$15 = $res$i$i$sroa$53$14;$res$i$i$sroa$88$7 = $res$i$i$sroa$88$2;
          } else {
           $209 = (($res$i$i$sroa$88$2) + ($193))|0;
           $210 = $res$i$i$sroa$0$14;
           $211 = (($210) + ($res$i$i$sroa$88$2)|0);
           _memcpy(($211|0),($192|0),($193|0))|0;
           $res$i$i$sroa$0$15 = $res$i$i$sroa$0$14;$res$i$i$sroa$53$15 = $res$i$i$sroa$53$14;$res$i$i$sroa$88$7 = $209;
          }
         }
         $212 = (($res$i$i$sroa$53$15) - ($res$i$i$sroa$88$7))|0;
         $213 = ($212>>>0)<(3);
         if ($213) {
          $$arith31 = (($res$i$i$sroa$88$7) + 3)|0;
          $$overflow32 = ($res$i$i$sroa$88$7>>>0)>(4294967292);
          if ($$overflow32) {
           label = 145;
           break L20;
          }
          $215 = $res$i$i$sroa$53$15 << 1;
          $216 = ($$arith31>>>0)>=($215>>>0);
          $_0$0$sroa$speculated$i$i$i$i117$i$i = $216 ? $$arith31 : $215;
          $217 = ($_0$0$sroa$speculated$i$i$i$i117$i$i|0)<(0);
          if ($217) {
           label = 147;
           break L20;
          }
          $219 = ($res$i$i$sroa$53$15|0)==(0);
          if ($219) {
           $220 = (_malloc($_0$0$sroa$speculated$i$i$i$i117$i$i)|0);
           $ptr$0$i$i123$i$i = $220;
          } else {
           $221 = $res$i$i$sroa$0$15;
           $222 = (_realloc($221,$_0$0$sroa$speculated$i$i$i$i117$i$i)|0);
           $ptr$0$i$i123$i$i = $222;
          }
          $223 = ($ptr$0$i$i123$i$i|0)==(0|0);
          if ($223) {
           label = 152;
           break L20;
          }
          $225 = $ptr$0$i$i123$i$i;
          $$pre$phiZ2D = $$arith31;$res$i$i$sroa$0$16 = $225;$res$i$i$sroa$53$16 = $_0$0$sroa$speculated$i$i$i$i117$i$i;
         } else {
          $$pre = (($res$i$i$sroa$88$7) + 3)|0;
          $$pre$phiZ2D = $$pre;$res$i$i$sroa$0$16 = $res$i$i$sroa$0$15;$res$i$i$sroa$53$16 = $res$i$i$sroa$53$15;
         }
         $226 = $res$i$i$sroa$0$16;
         $227 = (($226) + ($res$i$i$sroa$88$7)|0);
         ;HEAP8[$227>>0]=HEAP8[21141>>0]|0;HEAP8[$227+1>>0]=HEAP8[21141+1>>0]|0;HEAP8[$227+2>>0]=HEAP8[21141+2>>0]|0;
         $i$0$be$i$i = $18;$res$i$i$sroa$0$4 = $res$i$i$sroa$0$16;$res$i$i$sroa$53$4 = $res$i$i$sroa$53$16;$res$i$i$sroa$88$3 = $$pre$phiZ2D;$subseqidx$0$be$i$i = $18;
         break L22;
         break;
        }
        default: {
         $27 = ($i$0318$i$i|0)==($subseqidx$0317$i$i|0);
         if ($27) {
          $res$i$i$sroa$0$24 = $res$i$i$sroa$0$3;$res$i$i$sroa$53$24 = $res$i$i$sroa$53$3;$res$i$i$sroa$88$10 = $res$i$i$sroa$88$2;
         } else {
          $323 = ($i$0318$i$i>>>0)<($subseqidx$0317$i$i>>>0);
          if ($323) {
           label = 220;
           break L20;
          }
          $325 = ($i$0318$i$i>>>0)>($4>>>0);
          if ($325) {
           label = 222;
           break L20;
          }
          $327 = (($2) + ($subseqidx$0317$i$i)|0);
          $328 = (($i$0318$i$i) - ($subseqidx$0317$i$i))|0;
          $329 = (($res$i$i$sroa$53$3) - ($res$i$i$sroa$88$2))|0;
          $330 = ($329>>>0)<($328>>>0);
          if ($330) {
           $$arith11 = (($res$i$i$sroa$88$2) + ($328))|0;
           $$overflow12 = ($$arith11>>>0)<($res$i$i$sroa$88$2>>>0);
           if ($$overflow12) {
            label = 225;
            break L20;
           }
           $332 = $res$i$i$sroa$53$3 << 1;
           $333 = ($$arith11>>>0)>=($332>>>0);
           $_0$0$sroa$speculated$i$i$i$i199$i$i = $333 ? $$arith11 : $332;
           $334 = ($_0$0$sroa$speculated$i$i$i$i199$i$i|0)<(0);
           if ($334) {
            label = 227;
            break L20;
           }
           $336 = ($res$i$i$sroa$53$3|0)==(0);
           if ($336) {
            $337 = (_malloc($_0$0$sroa$speculated$i$i$i$i199$i$i)|0);
            $ptr$0$i$i205$i$i = $337;
           } else {
            $338 = $res$i$i$sroa$0$3;
            $339 = (_realloc($338,$_0$0$sroa$speculated$i$i$i$i199$i$i)|0);
            $ptr$0$i$i205$i$i = $339;
           }
           $340 = ($ptr$0$i$i205$i$i|0)==(0|0);
           if ($340) {
            label = 232;
            break L20;
           }
           $342 = $ptr$0$i$i205$i$i;
           $res$i$i$sroa$0$23 = $342;$res$i$i$sroa$53$23 = $_0$0$sroa$speculated$i$i$i$i199$i$i;
          } else {
           $res$i$i$sroa$0$23 = $res$i$i$sroa$0$3;$res$i$i$sroa$53$23 = $res$i$i$sroa$53$3;
          }
          $343 = ($328|0)==(0);
          if ($343) {
           $res$i$i$sroa$0$24 = $res$i$i$sroa$0$23;$res$i$i$sroa$53$24 = $res$i$i$sroa$53$23;$res$i$i$sroa$88$10 = $res$i$i$sroa$88$2;
          } else {
           $344 = (($res$i$i$sroa$88$2) + ($328))|0;
           $345 = $res$i$i$sroa$0$23;
           $346 = (($345) + ($res$i$i$sroa$88$2)|0);
           _memcpy(($346|0),($327|0),($328|0))|0;
           $res$i$i$sroa$0$24 = $res$i$i$sroa$0$23;$res$i$i$sroa$53$24 = $res$i$i$sroa$53$23;$res$i$i$sroa$88$10 = $344;
          }
         }
         $347 = (($res$i$i$sroa$53$24) - ($res$i$i$sroa$88$10))|0;
         $348 = ($347>>>0)<(3);
         if ($348) {
          $$arith7 = (($res$i$i$sroa$88$10) + 3)|0;
          $$overflow8 = ($res$i$i$sroa$88$10>>>0)>(4294967292);
          if ($$overflow8) {
           label = 238;
           break L20;
          }
          $350 = $res$i$i$sroa$53$24 << 1;
          $351 = ($$arith7>>>0)>=($350>>>0);
          $_0$0$sroa$speculated$i$i$i$i215$i$i = $351 ? $$arith7 : $350;
          $352 = ($_0$0$sroa$speculated$i$i$i$i215$i$i|0)<(0);
          if ($352) {
           label = 240;
           break L20;
          }
          $354 = ($res$i$i$sroa$53$24|0)==(0);
          if ($354) {
           $355 = (_malloc($_0$0$sroa$speculated$i$i$i$i215$i$i)|0);
           $ptr$0$i$i221$i$i = $355;
          } else {
           $356 = $res$i$i$sroa$0$24;
           $357 = (_realloc($356,$_0$0$sroa$speculated$i$i$i$i215$i$i)|0);
           $ptr$0$i$i221$i$i = $357;
          }
          $358 = ($ptr$0$i$i221$i$i|0)==(0|0);
          if ($358) {
           label = 245;
           break L20;
          }
          $360 = $ptr$0$i$i221$i$i;
          $res$i$i$sroa$0$25 = $360;$res$i$i$sroa$53$25 = $_0$0$sroa$speculated$i$i$i$i215$i$i;
         } else {
          $res$i$i$sroa$0$25 = $res$i$i$sroa$0$24;$res$i$i$sroa$53$25 = $res$i$i$sroa$53$24;
         }
         $361 = $res$i$i$sroa$0$25;
         $362 = (($361) + ($res$i$i$sroa$88$10)|0);
         ;HEAP8[$362>>0]=HEAP8[21141>>0]|0;HEAP8[$362+1>>0]=HEAP8[21141+1>>0]|0;HEAP8[$362+2>>0]=HEAP8[21141+2>>0]|0;
         $363 = (($res$i$i$sroa$88$10) + 3)|0;
         $i$0$be$i$i = $18;$res$i$i$sroa$0$4 = $res$i$i$sroa$0$25;$res$i$i$sroa$53$4 = $res$i$i$sroa$53$25;$res$i$i$sroa$88$3 = $363;$subseqidx$0$be$i$i = $18;
         break L22;
        }
        }
       }
      } while(0);
      $20 = ($i$0$be$i$i>>>0)<($4>>>0);
      if ($20) {
       $i$0318$i$i = $i$0$be$i$i;$res$i$i$sroa$0$3 = $res$i$i$sroa$0$4;$res$i$i$sroa$53$3 = $res$i$i$sroa$53$4;$res$i$i$sroa$88$2 = $res$i$i$sroa$88$3;$subseqidx$0317$i$i = $subseqidx$0$be$i$i;
      } else {
       $res$i$i$sroa$0$2 = $res$i$i$sroa$0$4;$res$i$i$sroa$53$2 = $res$i$i$sroa$53$4;$res$i$i$sroa$88$1 = $res$i$i$sroa$88$3;$subseqidx$0$lcssa$i$i = $subseqidx$0$be$i$i;
       break L19;
      }
     }
     switch (label|0) {
      case 25: {
       __THREW__ = 0;
       invoke_vii(226,($subseqidx$0317$i$i|0),($i$0318$i$i|0));
       $35 = __THREW__; __THREW__ = 0;
       $res$i$i$sroa$0$29 = $res$i$i$sroa$0$3;$res$i$i$sroa$53$29 = $res$i$i$sroa$53$3;
       label = 262;
       break L17;
       break;
      }
      case 27: {
       __THREW__ = 0;
       invoke_vii(263,($i$0318$i$i|0),($4|0));
       $37 = __THREW__; __THREW__ = 0;
       $res$i$i$sroa$0$29 = $res$i$i$sroa$0$3;$res$i$i$sroa$53$29 = $res$i$i$sroa$53$3;
       label = 262;
       break L17;
       break;
      }
      case 30: {
       __THREW__ = 0;
       invoke_vii(219,(21124|0),17);
       $42 = __THREW__; __THREW__ = 0;
       $res$i$i$sroa$0$28 = $res$i$i$sroa$0$3;$res$i$i$sroa$53$28 = $res$i$i$sroa$53$3;
       break;
      }
      case 32: {
       __THREW__ = 0;
       invoke_vi(220,(6432|0));
       $46 = __THREW__; __THREW__ = 0;
       $res$i$i$sroa$0$28 = $res$i$i$sroa$0$3;$res$i$i$sroa$53$28 = $res$i$i$sroa$53$3;
       break;
      }
      case 37: {
       __THREW__ = 0;
       invoke_v(210);
       $52 = __THREW__; __THREW__ = 0;
       $res$i$i$sroa$0$28 = $res$i$i$sroa$0$3;$res$i$i$sroa$53$28 = $res$i$i$sroa$53$3;
       break;
      }
      case 43: {
       __THREW__ = 0;
       invoke_vii(219,(21124|0),17);
       $60 = __THREW__; __THREW__ = 0;
       $res$i$i$sroa$0$28 = $res$i$i$sroa$0$6;$res$i$i$sroa$53$28 = $res$i$i$sroa$53$6;
       break;
      }
      case 45: {
       __THREW__ = 0;
       invoke_vi(220,(6432|0));
       $64 = __THREW__; __THREW__ = 0;
       $res$i$i$sroa$0$28 = $res$i$i$sroa$0$6;$res$i$i$sroa$53$28 = $res$i$i$sroa$53$6;
       break;
      }
      case 50: {
       __THREW__ = 0;
       invoke_v(210);
       $70 = __THREW__; __THREW__ = 0;
       $res$i$i$sroa$0$28 = $res$i$i$sroa$0$6;$res$i$i$sroa$53$28 = $res$i$i$sroa$53$6;
       break;
      }
      case 60: {
       __THREW__ = 0;
       invoke_vii(226,($subseqidx$0317$i$i|0),($i$0318$i$i|0));
       $90 = __THREW__; __THREW__ = 0;
       $res$i$i$sroa$0$29 = $res$i$i$sroa$0$3;$res$i$i$sroa$53$29 = $res$i$i$sroa$53$3;
       label = 262;
       break L17;
       break;
      }
      case 62: {
       __THREW__ = 0;
       invoke_vii(263,($i$0318$i$i|0),($4|0));
       $92 = __THREW__; __THREW__ = 0;
       $res$i$i$sroa$0$29 = $res$i$i$sroa$0$3;$res$i$i$sroa$53$29 = $res$i$i$sroa$53$3;
       label = 262;
       break L17;
       break;
      }
      case 65: {
       __THREW__ = 0;
       invoke_vii(219,(21124|0),17);
       $97 = __THREW__; __THREW__ = 0;
       $res$i$i$sroa$0$28 = $res$i$i$sroa$0$3;$res$i$i$sroa$53$28 = $res$i$i$sroa$53$3;
       break;
      }
      case 67: {
       __THREW__ = 0;
       invoke_vi(220,(6432|0));
       $101 = __THREW__; __THREW__ = 0;
       $res$i$i$sroa$0$28 = $res$i$i$sroa$0$3;$res$i$i$sroa$53$28 = $res$i$i$sroa$53$3;
       break;
      }
      case 72: {
       __THREW__ = 0;
       invoke_v(210);
       $107 = __THREW__; __THREW__ = 0;
       $res$i$i$sroa$0$28 = $res$i$i$sroa$0$3;$res$i$i$sroa$53$28 = $res$i$i$sroa$53$3;
       break;
      }
      case 78: {
       __THREW__ = 0;
       invoke_vii(219,(21124|0),17);
       $115 = __THREW__; __THREW__ = 0;
       $res$i$i$sroa$0$28 = $res$i$i$sroa$0$9;$res$i$i$sroa$53$28 = $res$i$i$sroa$53$9;
       break;
      }
      case 80: {
       __THREW__ = 0;
       invoke_vi(220,(6432|0));
       $119 = __THREW__; __THREW__ = 0;
       $res$i$i$sroa$0$28 = $res$i$i$sroa$0$9;$res$i$i$sroa$53$28 = $res$i$i$sroa$53$9;
       break;
      }
      case 85: {
       __THREW__ = 0;
       invoke_v(210);
       $125 = __THREW__; __THREW__ = 0;
       $res$i$i$sroa$0$28 = $res$i$i$sroa$0$9;$res$i$i$sroa$53$28 = $res$i$i$sroa$53$9;
       break;
      }
      case 92: {
       __THREW__ = 0;
       invoke_vii(226,($subseqidx$0317$i$i|0),($i$0318$i$i|0));
       $137 = __THREW__; __THREW__ = 0;
       $res$i$i$sroa$0$29 = $res$i$i$sroa$0$3;$res$i$i$sroa$53$29 = $res$i$i$sroa$53$3;
       label = 262;
       break L17;
       break;
      }
      case 94: {
       __THREW__ = 0;
       invoke_vii(263,($i$0318$i$i|0),($4|0));
       $139 = __THREW__; __THREW__ = 0;
       $res$i$i$sroa$0$29 = $res$i$i$sroa$0$3;$res$i$i$sroa$53$29 = $res$i$i$sroa$53$3;
       label = 262;
       break L17;
       break;
      }
      case 97: {
       __THREW__ = 0;
       invoke_vii(219,(21124|0),17);
       $144 = __THREW__; __THREW__ = 0;
       $res$i$i$sroa$0$28 = $res$i$i$sroa$0$3;$res$i$i$sroa$53$28 = $res$i$i$sroa$53$3;
       break;
      }
      case 99: {
       __THREW__ = 0;
       invoke_vi(220,(6432|0));
       $148 = __THREW__; __THREW__ = 0;
       $res$i$i$sroa$0$28 = $res$i$i$sroa$0$3;$res$i$i$sroa$53$28 = $res$i$i$sroa$53$3;
       break;
      }
      case 104: {
       __THREW__ = 0;
       invoke_v(210);
       $154 = __THREW__; __THREW__ = 0;
       $res$i$i$sroa$0$28 = $res$i$i$sroa$0$3;$res$i$i$sroa$53$28 = $res$i$i$sroa$53$3;
       break;
      }
      case 110: {
       __THREW__ = 0;
       invoke_vii(219,(21124|0),17);
       $162 = __THREW__; __THREW__ = 0;
       $res$i$i$sroa$0$28 = $res$i$i$sroa$0$12;$res$i$i$sroa$53$28 = $res$i$i$sroa$53$12;
       break;
      }
      case 112: {
       __THREW__ = 0;
       invoke_vi(220,(6432|0));
       $166 = __THREW__; __THREW__ = 0;
       $res$i$i$sroa$0$28 = $res$i$i$sroa$0$12;$res$i$i$sroa$53$28 = $res$i$i$sroa$53$12;
       break;
      }
      case 117: {
       __THREW__ = 0;
       invoke_v(210);
       $172 = __THREW__; __THREW__ = 0;
       $res$i$i$sroa$0$28 = $res$i$i$sroa$0$12;$res$i$i$sroa$53$28 = $res$i$i$sroa$53$12;
       break;
      }
      case 126: {
       __THREW__ = 0;
       invoke_vii(226,($subseqidx$0317$i$i|0),($i$0318$i$i|0));
       $189 = __THREW__; __THREW__ = 0;
       $res$i$i$sroa$0$29 = $res$i$i$sroa$0$3;$res$i$i$sroa$53$29 = $res$i$i$sroa$53$3;
       label = 262;
       break L17;
       break;
      }
      case 128: {
       __THREW__ = 0;
       invoke_vii(263,($i$0318$i$i|0),($4|0));
       $191 = __THREW__; __THREW__ = 0;
       $res$i$i$sroa$0$29 = $res$i$i$sroa$0$3;$res$i$i$sroa$53$29 = $res$i$i$sroa$53$3;
       label = 262;
       break L17;
       break;
      }
      case 131: {
       __THREW__ = 0;
       invoke_vii(219,(21124|0),17);
       $196 = __THREW__; __THREW__ = 0;
       $res$i$i$sroa$0$28 = $res$i$i$sroa$0$3;$res$i$i$sroa$53$28 = $res$i$i$sroa$53$3;
       break;
      }
      case 133: {
       __THREW__ = 0;
       invoke_vi(220,(6432|0));
       $200 = __THREW__; __THREW__ = 0;
       $res$i$i$sroa$0$28 = $res$i$i$sroa$0$3;$res$i$i$sroa$53$28 = $res$i$i$sroa$53$3;
       break;
      }
      case 138: {
       __THREW__ = 0;
       invoke_v(210);
       $206 = __THREW__; __THREW__ = 0;
       $res$i$i$sroa$0$28 = $res$i$i$sroa$0$3;$res$i$i$sroa$53$28 = $res$i$i$sroa$53$3;
       break;
      }
      case 145: {
       __THREW__ = 0;
       invoke_vii(219,(21124|0),17);
       $214 = __THREW__; __THREW__ = 0;
       $res$i$i$sroa$0$28 = $res$i$i$sroa$0$15;$res$i$i$sroa$53$28 = $res$i$i$sroa$53$15;
       break;
      }
      case 147: {
       __THREW__ = 0;
       invoke_vi(220,(6432|0));
       $218 = __THREW__; __THREW__ = 0;
       $res$i$i$sroa$0$28 = $res$i$i$sroa$0$15;$res$i$i$sroa$53$28 = $res$i$i$sroa$53$15;
       break;
      }
      case 152: {
       __THREW__ = 0;
       invoke_v(210);
       $224 = __THREW__; __THREW__ = 0;
       $res$i$i$sroa$0$28 = $res$i$i$sroa$0$15;$res$i$i$sroa$53$28 = $res$i$i$sroa$53$15;
       break;
      }
      case 159: {
       __THREW__ = 0;
       invoke_vii(226,($subseqidx$0317$i$i|0),($i$0318$i$i|0));
       $236 = __THREW__; __THREW__ = 0;
       $res$i$i$sroa$0$29 = $res$i$i$sroa$0$3;$res$i$i$sroa$53$29 = $res$i$i$sroa$53$3;
       label = 262;
       break L17;
       break;
      }
      case 161: {
       __THREW__ = 0;
       invoke_vii(263,($i$0318$i$i|0),($4|0));
       $238 = __THREW__; __THREW__ = 0;
       $res$i$i$sroa$0$29 = $res$i$i$sroa$0$3;$res$i$i$sroa$53$29 = $res$i$i$sroa$53$3;
       label = 262;
       break L17;
       break;
      }
      case 164: {
       __THREW__ = 0;
       invoke_vii(219,(21124|0),17);
       $243 = __THREW__; __THREW__ = 0;
       $res$i$i$sroa$0$28 = $res$i$i$sroa$0$3;$res$i$i$sroa$53$28 = $res$i$i$sroa$53$3;
       break;
      }
      case 166: {
       __THREW__ = 0;
       invoke_vi(220,(6432|0));
       $247 = __THREW__; __THREW__ = 0;
       $res$i$i$sroa$0$28 = $res$i$i$sroa$0$3;$res$i$i$sroa$53$28 = $res$i$i$sroa$53$3;
       break;
      }
      case 171: {
       __THREW__ = 0;
       invoke_v(210);
       $253 = __THREW__; __THREW__ = 0;
       $res$i$i$sroa$0$28 = $res$i$i$sroa$0$3;$res$i$i$sroa$53$28 = $res$i$i$sroa$53$3;
       break;
      }
      case 177: {
       __THREW__ = 0;
       invoke_vii(219,(21124|0),17);
       $261 = __THREW__; __THREW__ = 0;
       $res$i$i$sroa$0$28 = $res$i$i$sroa$0$18;$res$i$i$sroa$53$28 = $res$i$i$sroa$53$18;
       break;
      }
      case 179: {
       __THREW__ = 0;
       invoke_vi(220,(6432|0));
       $265 = __THREW__; __THREW__ = 0;
       $res$i$i$sroa$0$28 = $res$i$i$sroa$0$18;$res$i$i$sroa$53$28 = $res$i$i$sroa$53$18;
       break;
      }
      case 184: {
       __THREW__ = 0;
       invoke_v(210);
       $271 = __THREW__; __THREW__ = 0;
       $res$i$i$sroa$0$28 = $res$i$i$sroa$0$18;$res$i$i$sroa$53$28 = $res$i$i$sroa$53$18;
       break;
      }
      case 191: {
       __THREW__ = 0;
       invoke_vii(226,($subseqidx$0317$i$i|0),($i$0318$i$i|0));
       $283 = __THREW__; __THREW__ = 0;
       $res$i$i$sroa$0$29 = $res$i$i$sroa$0$3;$res$i$i$sroa$53$29 = $res$i$i$sroa$53$3;
       label = 262;
       break L17;
       break;
      }
      case 193: {
       __THREW__ = 0;
       invoke_vii(263,($i$0318$i$i|0),($4|0));
       $285 = __THREW__; __THREW__ = 0;
       $res$i$i$sroa$0$29 = $res$i$i$sroa$0$3;$res$i$i$sroa$53$29 = $res$i$i$sroa$53$3;
       label = 262;
       break L17;
       break;
      }
      case 196: {
       __THREW__ = 0;
       invoke_vii(219,(21124|0),17);
       $290 = __THREW__; __THREW__ = 0;
       $res$i$i$sroa$0$28 = $res$i$i$sroa$0$3;$res$i$i$sroa$53$28 = $res$i$i$sroa$53$3;
       break;
      }
      case 198: {
       __THREW__ = 0;
       invoke_vi(220,(6432|0));
       $294 = __THREW__; __THREW__ = 0;
       $res$i$i$sroa$0$28 = $res$i$i$sroa$0$3;$res$i$i$sroa$53$28 = $res$i$i$sroa$53$3;
       break;
      }
      case 203: {
       __THREW__ = 0;
       invoke_v(210);
       $300 = __THREW__; __THREW__ = 0;
       $res$i$i$sroa$0$28 = $res$i$i$sroa$0$3;$res$i$i$sroa$53$28 = $res$i$i$sroa$53$3;
       break;
      }
      case 209: {
       __THREW__ = 0;
       invoke_vii(219,(21124|0),17);
       $308 = __THREW__; __THREW__ = 0;
       $res$i$i$sroa$0$28 = $res$i$i$sroa$0$21;$res$i$i$sroa$53$28 = $res$i$i$sroa$53$21;
       break;
      }
      case 211: {
       __THREW__ = 0;
       invoke_vi(220,(6432|0));
       $312 = __THREW__; __THREW__ = 0;
       $res$i$i$sroa$0$28 = $res$i$i$sroa$0$21;$res$i$i$sroa$53$28 = $res$i$i$sroa$53$21;
       break;
      }
      case 216: {
       __THREW__ = 0;
       invoke_v(210);
       $318 = __THREW__; __THREW__ = 0;
       $res$i$i$sroa$0$28 = $res$i$i$sroa$0$21;$res$i$i$sroa$53$28 = $res$i$i$sroa$53$21;
       break;
      }
      case 220: {
       __THREW__ = 0;
       invoke_vii(226,($subseqidx$0317$i$i|0),($i$0318$i$i|0));
       $324 = __THREW__; __THREW__ = 0;
       $res$i$i$sroa$0$29 = $res$i$i$sroa$0$3;$res$i$i$sroa$53$29 = $res$i$i$sroa$53$3;
       label = 262;
       break L17;
       break;
      }
      case 222: {
       __THREW__ = 0;
       invoke_vii(263,($i$0318$i$i|0),($4|0));
       $326 = __THREW__; __THREW__ = 0;
       $res$i$i$sroa$0$29 = $res$i$i$sroa$0$3;$res$i$i$sroa$53$29 = $res$i$i$sroa$53$3;
       label = 262;
       break L17;
       break;
      }
      case 225: {
       __THREW__ = 0;
       invoke_vii(219,(21124|0),17);
       $331 = __THREW__; __THREW__ = 0;
       $res$i$i$sroa$0$28 = $res$i$i$sroa$0$3;$res$i$i$sroa$53$28 = $res$i$i$sroa$53$3;
       break;
      }
      case 227: {
       __THREW__ = 0;
       invoke_vi(220,(6432|0));
       $335 = __THREW__; __THREW__ = 0;
       $res$i$i$sroa$0$28 = $res$i$i$sroa$0$3;$res$i$i$sroa$53$28 = $res$i$i$sroa$53$3;
       break;
      }
      case 232: {
       __THREW__ = 0;
       invoke_v(210);
       $341 = __THREW__; __THREW__ = 0;
       $res$i$i$sroa$0$28 = $res$i$i$sroa$0$3;$res$i$i$sroa$53$28 = $res$i$i$sroa$53$3;
       break;
      }
      case 238: {
       __THREW__ = 0;
       invoke_vii(219,(21124|0),17);
       $349 = __THREW__; __THREW__ = 0;
       $res$i$i$sroa$0$28 = $res$i$i$sroa$0$24;$res$i$i$sroa$53$28 = $res$i$i$sroa$53$24;
       break;
      }
      case 240: {
       __THREW__ = 0;
       invoke_vi(220,(6432|0));
       $353 = __THREW__; __THREW__ = 0;
       $res$i$i$sroa$0$28 = $res$i$i$sroa$0$24;$res$i$i$sroa$53$28 = $res$i$i$sroa$53$24;
       break;
      }
      case 245: {
       __THREW__ = 0;
       invoke_v(210);
       $359 = __THREW__; __THREW__ = 0;
       $res$i$i$sroa$0$28 = $res$i$i$sroa$0$24;$res$i$i$sroa$53$28 = $res$i$i$sroa$53$24;
       break;
      }
     }
     $384 = ___cxa_find_matching_catch_2()|0;
     $385 = tempRet0;
     $lpad$phi$i$i$index = $384;$lpad$phi$i$i$index2 = $385;$res$i$i$sroa$0$30 = $res$i$i$sroa$0$28;$res$i$i$sroa$53$30 = $res$i$i$sroa$53$28;
     break L17;
    } else {
     $res$i$i$sroa$0$2 = $10;$res$i$i$sroa$53$2 = $4;$res$i$i$sroa$88$1 = $res$i$i$sroa$88$0;$subseqidx$0$lcssa$i$i = $res$i$i$sroa$88$0;
    }
   } while(0);
   $15 = ($4>>>0)>($subseqidx$0$lcssa$i$i>>>0);
   if ($15) {
    $364 = (($2) + ($subseqidx$0$lcssa$i$i)|0);
    $365 = (($4) - ($subseqidx$0$lcssa$i$i))|0;
    $366 = (($res$i$i$sroa$53$2) - ($res$i$i$sroa$88$1))|0;
    $367 = ($366>>>0)<($365>>>0);
    do {
     if ($367) {
      $$arith = (($res$i$i$sroa$88$1) + ($365))|0;
      $$overflow = ($$arith>>>0)<($res$i$i$sroa$88$1>>>0);
      if ($$overflow) {
       __THREW__ = 0;
       invoke_vii(219,(21124|0),17);
       $368 = __THREW__; __THREW__ = 0;
       $res$i$i$sroa$0$29 = $res$i$i$sroa$0$2;$res$i$i$sroa$53$29 = $res$i$i$sroa$53$2;
       label = 262;
       break L17;
      }
      $369 = $res$i$i$sroa$53$2 << 1;
      $370 = ($$arith>>>0)>=($369>>>0);
      $_0$0$sroa$speculated$i$i$i$i233$i$i = $370 ? $$arith : $369;
      $371 = ($_0$0$sroa$speculated$i$i$i$i233$i$i|0)<(0);
      if ($371) {
       __THREW__ = 0;
       invoke_vi(220,(6432|0));
       $372 = __THREW__; __THREW__ = 0;
       $res$i$i$sroa$0$29 = $res$i$i$sroa$0$2;$res$i$i$sroa$53$29 = $res$i$i$sroa$53$2;
       label = 262;
       break L17;
      }
      $373 = ($res$i$i$sroa$53$2|0)==(0);
      if ($373) {
       $374 = (_malloc($_0$0$sroa$speculated$i$i$i$i233$i$i)|0);
       $ptr$0$i$i239$i$i = $374;
      } else {
       $375 = $res$i$i$sroa$0$2;
       $376 = (_realloc($375,$_0$0$sroa$speculated$i$i$i$i233$i$i)|0);
       $ptr$0$i$i239$i$i = $376;
      }
      $377 = ($ptr$0$i$i239$i$i|0)==(0|0);
      if ($377) {
       __THREW__ = 0;
       invoke_v(210);
       $378 = __THREW__; __THREW__ = 0;
       $res$i$i$sroa$0$29 = $res$i$i$sroa$0$2;$res$i$i$sroa$53$29 = $res$i$i$sroa$53$2;
       label = 262;
       break L17;
      } else {
       $379 = $ptr$0$i$i239$i$i;
       $res$i$i$sroa$0$26 = $379;$res$i$i$sroa$53$26 = $_0$0$sroa$speculated$i$i$i$i233$i$i;
       break;
      }
     } else {
      $res$i$i$sroa$0$26 = $res$i$i$sroa$0$2;$res$i$i$sroa$53$26 = $res$i$i$sroa$53$2;
     }
    } while(0);
    $380 = ($365|0)==(0);
    if ($380) {
     $_6$i$sroa$12$0$ph = $res$i$i$sroa$88$1;$_6$i$sroa$5$0$ph = $res$i$i$sroa$0$26;$_6$i$sroa$8$0$ph = $res$i$i$sroa$53$26;
    } else {
     $381 = (($res$i$i$sroa$88$1) + ($365))|0;
     $382 = $res$i$i$sroa$0$26;
     $383 = (($382) + ($res$i$i$sroa$88$1)|0);
     _memcpy(($383|0),($364|0),($365|0))|0;
     $_6$i$sroa$12$0$ph = $381;$_6$i$sroa$5$0$ph = $res$i$i$sroa$0$26;$_6$i$sroa$8$0$ph = $res$i$i$sroa$53$26;
    }
   } else {
    $_6$i$sroa$12$0$ph = $res$i$i$sroa$88$1;$_6$i$sroa$5$0$ph = $res$i$i$sroa$0$2;$_6$i$sroa$8$0$ph = $res$i$i$sroa$53$2;
   }
   $393 = $_6$i$sroa$5$0$ph;
   __THREW__ = 0;
   $394 = (invoke_iiii(365,($393|0),($_6$i$sroa$12$0$ph|0),($1|0))|0);
   $395 = __THREW__; __THREW__ = 0;
   $396 = $395&1;
   if ($396) {
    $397 = ___cxa_find_matching_catch_2()|0;
    $398 = tempRet0;
    $not$$i$i$i$i$i$i12$i = ($_6$i$sroa$8$0$ph|0)==(0);
    if ($not$$i$i$i$i$i$i12$i) {
     ___resumeException($397|0);
     // unreachable;
    }
    _free($393);
    ___resumeException($397|0);
    // unreachable;
   } else {
    $not$$i$i$i$i$i$i$i = ($_6$i$sroa$8$0$ph|0)==(0);
    if ($not$$i$i$i$i$i$i$i) {
     $_0$sroa$0$0$i16$i = $394;
     STACKTOP = sp;return ($_0$sroa$0$0$i16$i|0);
    }
    _free($393);
    $_0$sroa$0$0$i16$i = $394;
    STACKTOP = sp;return ($_0$sroa$0$0$i16$i|0);
   }
  }
 } while(0);
 if ((label|0) == 262) {
  $386 = ___cxa_find_matching_catch_2()|0;
  $387 = tempRet0;
  $lpad$phi$i$i$index = $386;$lpad$phi$i$i$index2 = $387;$res$i$i$sroa$0$30 = $res$i$i$sroa$0$29;$res$i$i$sroa$53$30 = $res$i$i$sroa$53$29;
 }
 $not$$i$i$i$i$i$i3$i = ($res$i$i$sroa$53$30|0)==(0);
 if ($not$$i$i$i$i$i$i3$i) {
  ___resumeException($lpad$phi$i$i$index|0);
  // unreachable;
 }
 $388 = $res$i$i$sroa$0$30;
 _free($388);
 ___resumeException($lpad$phi$i$i$index|0);
 // unreachable;
 return (0)|0;
}
function __ZN3std6thread5local2os13destroy_value17h31c711597d050631E($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $_0$0$i$i = 0, $_0$0$i$i7 = 0, $cond$i$i = 0, $cond$i$i5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[$0>>2]|0;
 $2 = HEAP32[$1>>2]|0;
 $cond$i$i = ($2|0)==(0);
 if ($cond$i$i) {
  __THREW__ = 0;
  $3 = (invoke_ii(338,($1|0))|0);
  $4 = __THREW__; __THREW__ = 0;
  $5 = $4&1;
  if ($5) {
   $8 = ___cxa_find_matching_catch_2()|0;
   $9 = tempRet0;
   _free($0);
   ___resumeException($8|0);
   // unreachable;
  } else {
   $_0$0$i$i = $3;
  }
 } else {
  $_0$0$i$i = $2;
 }
 (_pthread_setspecific(($_0$0$i$i|0),((1)|0))|0);
 _free($0);
 $6 = HEAP32[$1>>2]|0;
 $cond$i$i5 = ($6|0)==(0);
 if (!($cond$i$i5)) {
  $_0$0$i$i7 = $6;
  (_pthread_setspecific(($_0$0$i$i7|0),(0|0))|0);
  return;
 }
 $7 = (__ZN3std10sys_common12thread_local9StaticKey9lazy_init17hfe76ff6b56e2d562E($1)|0);
 $_0$0$i$i7 = $7;
 (_pthread_setspecific(($_0$0$i$i7|0),(0|0))|0);
 return;
}
function __ZN4drop17h0d7be425ef5d01e4E($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $not$$i$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 4|0);
 $2 = HEAP32[$1>>2]|0;
 $not$$i$i$i$i = ($2|0)==(0);
 if ($not$$i$i$i$i) {
  return;
 }
 $3 = HEAP32[$0>>2]|0;
 _free($3);
 return;
}
function __ZN36__LT_T_u20_as_u20_core__any__Any_GT_11get_type_id17h1e7f45ebb48b193fE_1351($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 tempRet0 = (-642518804);
 return -580754197;
}
function __ZN96__LT_core__fmt__Write__write_fmt__Adapter_LT__u27_a_C__u20_T_GT__u20_as_u20_core__fmt__Write_GT_9write_str17h1eeced7a67f656f4E_1352($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $local_len$sroa$5$0$lcssa$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = HEAP32[$0>>2]|0;
 __ZN39__LT_collections__vec__Vec_LT_T_GT__GT_7reserve17h36095f9d9422ab2dE_1350($3,$2);
 $4 = ((($3)) + 8|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ($2|0)==(0);
 if ($6) {
  $local_len$sroa$5$0$lcssa$i$i$i = $5;
  HEAP32[$4>>2] = $local_len$sroa$5$0$lcssa$i$i$i;
  return 0;
 }
 $7 = (($5) + ($2))|0;
 $8 = HEAP32[$3>>2]|0;
 $9 = (($8) + ($5)|0);
 _memcpy(($9|0),($1|0),($2|0))|0;
 $local_len$sroa$5$0$lcssa$i$i$i = $7;
 HEAP32[$4>>2] = $local_len$sroa$5$0$lcssa$i$i$i;
 return 0;
}
function __ZN96__LT_core__fmt__Write__write_fmt__Adapter_LT__u27_a_C__u20_T_GT__u20_as_u20_core__fmt__Write_GT_10write_char17h5c4b02d4e359c914E_1353($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$pre$i$i$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $_19$i$i = 0, $_19$i$i$1$_19$i$i$1$_19$i$1$$sroa_raw_idx = 0, $_19$i$i$1$_19$i$i$1$_19$i$1$$sroa_raw_idx7 = 0, $_19$i$i$1$_19$i$i$1$_19$i$1$$sroa_raw_idx9 = 0, $_19$i$i$2$_19$i$i$2$_19$i$2$$sroa_raw_idx = 0, $_19$i$i$2$_19$i$i$2$_19$i$2$$sroa_raw_idx11 = 0;
 var $_19$i$i$3$_19$i$i$3$_19$i$3$$sroa_raw_idx = 0, $len$2$i$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $_19$i$i = sp;
 $2 = HEAP32[$0>>2]|0;
 $3 = ($1>>>0)<(128);
 if ($3) {
  $4 = $1&255;
  $5 = ((($2)) + 8|0);
  $6 = HEAP32[$5>>2]|0;
  $7 = ((($2)) + 4|0);
  $8 = HEAP32[$7>>2]|0;
  $9 = ($6|0)==($8|0);
  if ($9) {
   __ZN40__LT_alloc__raw_vec__RawVec_LT_T_GT__GT_6double17h1f4ae0daeff98f24E_1345($2);
   $$pre$i$i$i = HEAP32[$5>>2]|0;
   $12 = $$pre$i$i$i;
  } else {
   $12 = $6;
  }
  $10 = HEAP32[$2>>2]|0;
  $11 = (($10) + ($12)|0);
  HEAP8[$11>>0] = $4;
  $13 = HEAP32[$5>>2]|0;
  $14 = (($13) + 1)|0;
  HEAP32[$5>>2] = $14;
  STACKTOP = sp;return 0;
 }
 HEAP32[$_19$i$i>>2] = 0;
 $15 = ($1>>>0)<(2048);
 do {
  if ($15) {
   $16 = $1 >>> 6;
   $17 = $16 & 31;
   $18 = $17&255;
   $19 = $18 | -64;
   HEAP8[$_19$i$i>>0] = $19;
   $20 = $1 & 63;
   $21 = $20&255;
   $22 = $21 | -128;
   $_19$i$i$1$_19$i$i$1$_19$i$1$$sroa_raw_idx = ((($_19$i$i)) + 1|0);
   HEAP8[$_19$i$i$1$_19$i$i$1$_19$i$1$$sroa_raw_idx>>0] = $22;
   $len$2$i$i$i$i = 2;
  } else {
   $23 = ($1>>>0)<(65536);
   if ($23) {
    $24 = $1 >>> 12;
    $25 = $24 & 15;
    $26 = $25&255;
    $27 = $26 | -32;
    HEAP8[$_19$i$i>>0] = $27;
    $28 = $1 >>> 6;
    $29 = $28 & 63;
    $30 = $29&255;
    $31 = $30 | -128;
    $_19$i$i$1$_19$i$i$1$_19$i$1$$sroa_raw_idx7 = ((($_19$i$i)) + 1|0);
    HEAP8[$_19$i$i$1$_19$i$i$1$_19$i$1$$sroa_raw_idx7>>0] = $31;
    $32 = $1 & 63;
    $33 = $32&255;
    $34 = $33 | -128;
    $_19$i$i$2$_19$i$i$2$_19$i$2$$sroa_raw_idx = ((($_19$i$i)) + 2|0);
    HEAP8[$_19$i$i$2$_19$i$i$2$_19$i$2$$sroa_raw_idx>>0] = $34;
    $len$2$i$i$i$i = 3;
    break;
   } else {
    $35 = $1 >>> 18;
    $36 = $35 & 7;
    $37 = $36&255;
    $38 = $37 | -16;
    HEAP8[$_19$i$i>>0] = $38;
    $39 = $1 >>> 12;
    $40 = $39 & 63;
    $41 = $40&255;
    $42 = $41 | -128;
    $_19$i$i$1$_19$i$i$1$_19$i$1$$sroa_raw_idx9 = ((($_19$i$i)) + 1|0);
    HEAP8[$_19$i$i$1$_19$i$i$1$_19$i$1$$sroa_raw_idx9>>0] = $42;
    $43 = $1 >>> 6;
    $44 = $43 & 63;
    $45 = $44&255;
    $46 = $45 | -128;
    $_19$i$i$2$_19$i$i$2$_19$i$2$$sroa_raw_idx11 = ((($_19$i$i)) + 2|0);
    HEAP8[$_19$i$i$2$_19$i$i$2$_19$i$2$$sroa_raw_idx11>>0] = $46;
    $47 = $1 & 63;
    $48 = $47&255;
    $49 = $48 | -128;
    $_19$i$i$3$_19$i$i$3$_19$i$3$$sroa_raw_idx = ((($_19$i$i)) + 3|0);
    HEAP8[$_19$i$i$3$_19$i$i$3$_19$i$3$$sroa_raw_idx>>0] = $49;
    $len$2$i$i$i$i = 4;
    break;
   }
  }
 } while(0);
 __ZN39__LT_collections__vec__Vec_LT_T_GT__GT_7reserve17h36095f9d9422ab2dE_1350($2,$len$2$i$i$i$i);
 $50 = ((($2)) + 8|0);
 $51 = HEAP32[$50>>2]|0;
 $52 = (($51) + ($len$2$i$i$i$i))|0;
 $53 = HEAP32[$2>>2]|0;
 $54 = (($53) + ($51)|0);
 _memcpy(($54|0),($_19$i$i|0),($len$2$i$i$i$i|0))|0;
 HEAP32[$50>>2] = $52;
 STACKTOP = sp;return 0;
}
function __ZN96__LT_core__fmt__Write__write_fmt__Adapter_LT__u27_a_C__u20_T_GT__u20_as_u20_core__fmt__Write_GT_9write_fmt17h760aafe66d97fe8aE_1354($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $_10$i = 0, $_8$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $_8$i = sp + 24|0;
 $_10$i = sp;
 $2 = HEAP32[$0>>2]|0;
 HEAP32[$_8$i>>2] = $2;
 ;HEAP32[$_10$i>>2]=HEAP32[$1>>2]|0;HEAP32[$_10$i+4>>2]=HEAP32[$1+4>>2]|0;HEAP32[$_10$i+8>>2]=HEAP32[$1+8>>2]|0;HEAP32[$_10$i+12>>2]=HEAP32[$1+12>>2]|0;HEAP32[$_10$i+16>>2]=HEAP32[$1+16>>2]|0;HEAP32[$_10$i+20>>2]=HEAP32[$1+20>>2]|0;
 $3 = (__ZN4core3fmt5write17hdd089a59fed6a1dbE($_8$i,1536,$_10$i)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN3std3sys2os12error_string17hd686cdf02956f722E($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $_26 = 0, $buf = 0, $self$sroa$0$0$copyload$i = 0, $self$sroa$6$0$$sroa_idx19$i = 0, $self$sroa$6$0$copyload$i = 0, $self$sroa$8$0$$sroa_idx21$i = 0, $self$sroa$8$0$copyload$i = 0, $switch2$i = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(144|0);
 $buf = sp + 16|0;
 $_26 = sp;
 dest=$buf; stop=dest+128|0; do { HEAP8[dest>>0]=0|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
 $2 = (_strerror_r($1,$buf,128)|0);
 $3 = ($2|0)<(0);
 if ($3) {
  __ZN3std9panicking11begin_panic17h9936a195de5ffc4dE_1326(19609,18,6264);
  // unreachable;
 }
 $4 = (_strlen($buf)|0);
 $5 = ($4|0)==(-1);
 if ($5) {
  __ZN4core5slice20slice_index_len_fail17hed923256c072a803E(-1,0);
  // unreachable;
 }
 __ZN4core3str9from_utf817hf86f38bfbc8504d1E($_26,$buf,$4);
 $self$sroa$0$0$copyload$i = HEAP32[$_26>>2]|0;
 $self$sroa$6$0$$sroa_idx19$i = ((($_26)) + 4|0);
 $self$sroa$6$0$copyload$i = HEAP32[$self$sroa$6$0$$sroa_idx19$i>>2]|0;
 $switch2$i = ($self$sroa$0$0$copyload$i|0)==(0);
 if ($switch2$i) {
  $self$sroa$8$0$$sroa_idx21$i = ((($_26)) + 8|0);
  $self$sroa$8$0$copyload$i = HEAP32[$self$sroa$8$0$$sroa_idx21$i>>2]|0;
  $6 = $self$sroa$6$0$copyload$i;
  __ZN11collections3str62__LT_impl_u20_collections__borrow__ToOwned_u20_for_u20_str_GT_8to_owned17h1b22ecfc896f8592E($0,$6,$self$sroa$8$0$copyload$i);
  STACKTOP = sp;return;
 } else {
  __ZN4core6result13unwrap_failed17h2e6f2f8dd85fb41cE_1356($self$sroa$6$0$copyload$i);
  // unreachable;
 }
}
function __ZN66__LT_collections__string__String_u20_as_u20_core__fmt__Display_GT_3fmt17h3959eb99769eafdcE_1355($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[$0>>2]|0;
 $3 = ((($0)) + 8|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (__ZN4core3fmt9Formatter3pad17hd3e8d63fceae72f6E($1,$2,$4)|0);
 return ($5|0);
}
function __ZN4core6result13unwrap_failed17h2e6f2f8dd85fb41cE_1356($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $_12 = 0, $_6$sroa$0$0$$sroa_idx$i = 0, $_7 = 0, $error = 0, $msg = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $msg = sp + 48|0;
 $error = sp + 40|0;
 $_7 = sp + 16|0;
 $_12 = sp;
 HEAP32[$msg>>2] = 18843;
 $1 = ((($msg)) + 4|0);
 HEAP32[$1>>2] = 43;
 HEAP32[$error>>2] = $0;
 $2 = $msg;
 $3 = $error;
 HEAP32[$_12>>2] = $2;
 $4 = ((($_12)) + 4|0);
 HEAP32[$4>>2] = (346);
 $5 = ((($_12)) + 8|0);
 HEAP32[$5>>2] = $3;
 $6 = ((($_12)) + 12|0);
 HEAP32[$6>>2] = (366);
 HEAP32[$_7>>2] = (6520);
 $7 = ((($_7)) + 4|0);
 HEAP32[$7>>2] = 2;
 $_6$sroa$0$0$$sroa_idx$i = ((($_7)) + 8|0);
 HEAP32[$_6$sroa$0$0$$sroa_idx$i>>2] = 0;
 $8 = ((($_7)) + 16|0);
 HEAP32[$8>>2] = $_12;
 $9 = ((($_7)) + 20|0);
 HEAP32[$9>>2] = 2;
 __ZN4core9panicking9panic_fmt17hfa35599633a0afa2E($_7,22324,100,799);
 // unreachable;
}
function __ZN36__LT_T_u20_as_u20_core__any__Any_GT_11get_type_id17hd662cb2ea6aefd75E_1357($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 tempRet0 = (703347955);
 return 1133457186;
}
function __ZN58__LT_std__io__error__Error_u20_as_u20_core__fmt__Debug_GT_3fmt17hee0efa4b9cf5e125E($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$repack$i = 0, $$unpack$i = 0, $$unpack$pre$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $_0$sroa$0$0$i$i = 0, $_17 = 0, $builder = 0, $switch4$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $builder = sp;
 $_17 = sp + 8|0;
 $2 = ((($1)) + 28|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ((($1)) + 32|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ((($5)) + 12|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = (FUNCTION_TABLE_iiii[$7 & 511]($3,19731,5)|0);
 HEAP32[$builder>>2] = $1;
 $$repack$i = ((($builder)) + 4|0);
 HEAP8[$$repack$i>>0] = $8;
 $9 = ((($builder)) + 5|0);
 HEAP8[$9>>0] = 0;
 HEAP32[$_17>>2] = $0;
 (__ZN4core3fmt8builders11DebugStruct5field17hfad538a66c3eb971E($builder,19736,4,$_17,1768)|0);
 $10 = HEAP8[$9>>0]|0;
 $11 = ($10<<24>>24)==(0);
 $$unpack$pre$i = HEAP8[$$repack$i>>0]|0;
 if ($11) {
  $$unpack$i = $$unpack$pre$i;
  STACKTOP = sp;return ($$unpack$i|0);
 }
 $switch4$i$i = ($$unpack$pre$i<<24>>24)==(0);
 do {
  if ($switch4$i$i) {
   $12 = HEAP32[$builder>>2]|0;
   $13 = HEAP32[$12>>2]|0;
   $14 = $13 & 4;
   $15 = ($14|0)==(0);
   $16 = ((($12)) + 28|0);
   $17 = HEAP32[$16>>2]|0;
   $18 = ((($12)) + 32|0);
   $19 = HEAP32[$18>>2]|0;
   $20 = ((($19)) + 12|0);
   $21 = HEAP32[$20>>2]|0;
   if ($15) {
    $23 = (FUNCTION_TABLE_iiii[$21 & 511]($17,24334,2)|0);
    $_0$sroa$0$0$i$i = $23;
    break;
   } else {
    $22 = (FUNCTION_TABLE_iiii[$21 & 511]($17,24332,2)|0);
    $_0$sroa$0$0$i$i = $22;
    break;
   }
  } else {
   $_0$sroa$0$0$i$i = 1;
  }
 } while(0);
 HEAP8[$$repack$i>>0] = $_0$sroa$0$0$i$i;
 $$unpack$i = $_0$sroa$0$0$i$i;
 STACKTOP = sp;return ($$unpack$i|0);
}
function __ZN53__LT__RF__u27_a_u20_T_u20_as_u20_core__fmt__Debug_GT_3fmt17h49a4805fd32df691E($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$elt$phi$trans$insert$i$i = 0, $$elt$phi$trans$insert$i2$i = 0, $$pre$i$i = 0, $$repack$i$i = 0, $$repack$i1$i = 0, $$unpack$i$i = 0, $$unpack$i9$i = 0, $$unpack$pre$i$i = 0, $$unpack$pre$i3$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0;
 var $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0;
 var $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0;
 var $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0;
 var $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $_0$sroa$0$0$i = 0, $_0$sroa$0$0$i$i$i = 0;
 var $_0$sroa$0$0$i$i8$i = 0, $_12$i = 0, $_25$i = 0, $_31$i = 0, $not$$i$i$i$i$i$i = 0, $not$$i$i$i$i$i11$i = 0, $not$switch4$i$i$i$i$i = 0, $not$switch4$i19$i$i$i$i = 0, $switch$i = 0, $switch4$i$i$i = 0, $switch4$i$i4$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $_12$i = sp + 32|0;
 $_25$i = sp + 16|0;
 $_31$i = sp;
 $2 = HEAP32[$0>>2]|0;
 $3 = HEAP32[$2>>2]|0;
 $switch$i = ($3|0)==(1);
 if ($switch$i) {
  $18 = ((($2)) + 4|0);
  $19 = ((($1)) + 28|0);
  $20 = HEAP32[$19>>2]|0;
  $21 = ((($1)) + 32|0);
  $22 = HEAP32[$21>>2]|0;
  $23 = ((($22)) + 12|0);
  $24 = HEAP32[$23>>2]|0;
  $25 = (FUNCTION_TABLE_iiii[$24 & 511]($20,19753,6)|0);
  HEAP32[$_31$i>>2] = $1;
  $$repack$i1$i = ((($_31$i)) + 4|0);
  HEAP8[$$repack$i1$i>>0] = $25;
  $26 = ((($_31$i)) + 8|0);
  HEAP32[$26>>2] = 0;
  $27 = ((($_31$i)) + 12|0);
  HEAP8[$27>>0] = 0;
  $28 = (__ZN4core3fmt8builders10DebugTuple5field17h7aa2b38aabb11517E($_31$i,$18,1816)|0);
  $29 = ((($28)) + 8|0);
  $30 = HEAP32[$29>>2]|0;
  $31 = ($30|0)==(0);
  $$elt$phi$trans$insert$i$i = ((($28)) + 4|0);
  $$unpack$pre$i$i = HEAP8[$$elt$phi$trans$insert$i$i>>0]|0;
  if ($31) {
   $$unpack$i$i = $$unpack$pre$i$i;
  } else {
   $switch4$i$i$i = ($$unpack$pre$i$i<<24>>24)==(0);
   do {
    if ($switch4$i$i$i) {
     $32 = HEAP32[$28>>2]|0;
     $33 = HEAP32[$32>>2]|0;
     $34 = $33 & 4;
     $35 = ($34|0)==(0);
     if ($35) {
      $43 = $30;
     } else {
      $36 = ((($32)) + 28|0);
      $37 = HEAP32[$36>>2]|0;
      $38 = ((($32)) + 32|0);
      $39 = HEAP32[$38>>2]|0;
      $40 = ((($39)) + 12|0);
      $41 = HEAP32[$40>>2]|0;
      $42 = (FUNCTION_TABLE_iiii[$41 & 511]($37,24042,1)|0);
      $not$switch4$i$i$i$i$i = ($42<<24>>24)==(0);
      if (!($not$switch4$i$i$i$i$i)) {
       $_0$sroa$0$0$i$i$i = 1;
       break;
      }
      $$pre$i$i = HEAP32[$29>>2]|0;
      $43 = $$pre$i$i;
     }
     $44 = ($43|0)==(1);
     if ($44) {
      $45 = ((($28)) + 12|0);
      $46 = HEAP8[$45>>0]|0;
      $47 = ($46<<24>>24)==(0);
      if (!($47)) {
       $48 = HEAP32[$28>>2]|0;
       $49 = ((($48)) + 28|0);
       $50 = HEAP32[$49>>2]|0;
       $51 = ((($48)) + 32|0);
       $52 = HEAP32[$51>>2]|0;
       $53 = ((($52)) + 12|0);
       $54 = HEAP32[$53>>2]|0;
       $55 = (FUNCTION_TABLE_iiii[$54 & 511]($50,18783,1)|0);
       $not$switch4$i19$i$i$i$i = ($55<<24>>24)==(0);
       if (!($not$switch4$i19$i$i$i$i)) {
        $_0$sroa$0$0$i$i$i = 1;
        break;
       }
      }
     }
     $56 = HEAP32[$28>>2]|0;
     $57 = ((($56)) + 28|0);
     $58 = HEAP32[$57>>2]|0;
     $59 = ((($56)) + 32|0);
     $60 = HEAP32[$59>>2]|0;
     $61 = ((($60)) + 12|0);
     $62 = HEAP32[$61>>2]|0;
     $63 = (FUNCTION_TABLE_iiii[$62 & 511]($58,24043,1)|0);
     $_0$sroa$0$0$i$i$i = $63;
    } else {
     $_0$sroa$0$0$i$i$i = 1;
    }
   } while(0);
   HEAP8[$$elt$phi$trans$insert$i$i>>0] = $_0$sroa$0$0$i$i$i;
   $$unpack$i$i = $_0$sroa$0$0$i$i$i;
  }
  $_0$sroa$0$0$i = $$unpack$i$i;
  STACKTOP = sp;return ($_0$sroa$0$0$i|0);
 }
 $4 = ((($2)) + 4|0);
 $5 = ((($1)) + 28|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ((($1)) + 32|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ((($8)) + 12|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = (FUNCTION_TABLE_iiii[$10 & 511]($6,19740,2)|0);
 HEAP32[$_12$i>>2] = $1;
 $$repack$i$i = ((($_12$i)) + 4|0);
 HEAP8[$$repack$i$i>>0] = $11;
 $12 = ((($_12$i)) + 5|0);
 HEAP8[$12>>0] = 0;
 $13 = (__ZN4core3fmt8builders11DebugStruct5field17hfad538a66c3eb971E($_12$i,19742,4,$4,1784)|0);
 $14 = HEAP32[$4>>2]|0;
 __ZN3std3sys2os12error_string17hd686cdf02956f722E($_25$i,$14);
 __THREW__ = 0;
 $15 = (invoke_iiiiii(367,($13|0),(19746|0),7,($_25$i|0),(1800|0))|0);
 $16 = __THREW__; __THREW__ = 0;
 $17 = $16&1;
 L19: do {
  if (!($17)) {
   $65 = ((($15)) + 5|0);
   $66 = HEAP8[$65>>0]|0;
   $67 = ($66<<24>>24)==(0);
   $$elt$phi$trans$insert$i2$i = ((($15)) + 4|0);
   $$unpack$pre$i3$i = HEAP8[$$elt$phi$trans$insert$i2$i>>0]|0;
   if ($67) {
    $$unpack$i9$i = $$unpack$pre$i3$i;
   } else {
    $switch4$i$i4$i = ($$unpack$pre$i3$i<<24>>24)==(0);
    do {
     if ($switch4$i$i4$i) {
      $68 = HEAP32[$15>>2]|0;
      $69 = HEAP32[$68>>2]|0;
      $70 = $69 & 4;
      $71 = ($70|0)==(0);
      $72 = ((($68)) + 28|0);
      $73 = HEAP32[$72>>2]|0;
      $74 = ((($68)) + 32|0);
      $75 = HEAP32[$74>>2]|0;
      $76 = ((($75)) + 12|0);
      $77 = HEAP32[$76>>2]|0;
      if ($71) {
       __THREW__ = 0;
       $81 = (invoke_iiii($77|0,($73|0),(24334|0),2)|0);
       $82 = __THREW__; __THREW__ = 0;
       $83 = $82&1;
       if ($83) {
        break L19;
       } else {
        $_0$sroa$0$0$i$i8$i = $81;
        break;
       }
      } else {
       __THREW__ = 0;
       $78 = (invoke_iiii($77|0,($73|0),(24332|0),2)|0);
       $79 = __THREW__; __THREW__ = 0;
       $80 = $79&1;
       if ($80) {
        break L19;
       } else {
        $_0$sroa$0$0$i$i8$i = $78;
        break;
       }
      }
     } else {
      $_0$sroa$0$0$i$i8$i = 1;
     }
    } while(0);
    HEAP8[$$elt$phi$trans$insert$i2$i>>0] = $_0$sroa$0$0$i$i8$i;
    $$unpack$i9$i = $_0$sroa$0$0$i$i8$i;
   }
   $84 = ((($_25$i)) + 4|0);
   $85 = HEAP32[$84>>2]|0;
   $not$$i$i$i$i$i$i = ($85|0)==(0);
   if (!($not$$i$i$i$i$i$i)) {
    $86 = HEAP32[$_25$i>>2]|0;
    _free($86);
   }
   $_0$sroa$0$0$i = $$unpack$i9$i;
   STACKTOP = sp;return ($_0$sroa$0$0$i|0);
  }
 } while(0);
 $64 = ___cxa_find_matching_catch_2()|0;
 $87 = tempRet0;
 $88 = ((($_25$i)) + 4|0);
 $89 = HEAP32[$88>>2]|0;
 $not$$i$i$i$i$i11$i = ($89|0)==(0);
 if ($not$$i$i$i$i$i11$i) {
  ___resumeException($64|0);
  // unreachable;
 }
 $90 = HEAP32[$_25$i>>2]|0;
 _free($90);
 ___resumeException($64|0);
 // unreachable;
 return (0)|0;
}
function __ZN4drop17h5289476cc8f9542fE($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($1)) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ((($1)) + 8|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = HEAP32[$5>>2]|0;
 FUNCTION_TABLE_vi[$6 & 511]($3);
 $7 = HEAP32[$4>>2]|0;
 $8 = ((($7)) + 4|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = ($9|0)==(0);
 if ($10) {
  _free($1);
  return;
 }
 _free($3);
 _free($1);
 return;
}
function __ZN5alloc5boxed59__LT_impl_u20_core__fmt__Debug_u20_for_u20_Box_LT_T_GT__GT_3fmt17h82fd329a736f5f55E($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$repack$i = 0, $$unpack$i = 0, $$unpack$pre$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $_0$sroa$0$0$i$i = 0, $_18$i = 0, $_26$i = 0, $builder$i = 0, $switch4$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $builder$i = sp;
 $_18$i = sp + 12|0;
 $_26$i = sp + 8|0;
 $2 = HEAP32[$0>>2]|0;
 $3 = ((($2)) + 4|0);
 $4 = ((($1)) + 28|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ((($1)) + 32|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ((($7)) + 12|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = (FUNCTION_TABLE_iiii[$9 & 511]($5,19753,6)|0);
 HEAP32[$builder$i>>2] = $1;
 $$repack$i = ((($builder$i)) + 4|0);
 HEAP8[$$repack$i>>0] = $10;
 $11 = ((($builder$i)) + 5|0);
 HEAP8[$11>>0] = 0;
 HEAP32[$_18$i>>2] = $2;
 (__ZN4core3fmt8builders11DebugStruct5field17hfad538a66c3eb971E($builder$i,19759,4,$_18$i,1832)|0);
 HEAP32[$_26$i>>2] = $3;
 (__ZN4core3fmt8builders11DebugStruct5field17hfad538a66c3eb971E($builder$i,19763,5,$_26$i,1848)|0);
 $12 = HEAP8[$11>>0]|0;
 $13 = ($12<<24>>24)==(0);
 $$unpack$pre$i = HEAP8[$$repack$i>>0]|0;
 if ($13) {
  $$unpack$i = $$unpack$pre$i;
  STACKTOP = sp;return ($$unpack$i|0);
 }
 $switch4$i$i = ($$unpack$pre$i<<24>>24)==(0);
 do {
  if ($switch4$i$i) {
   $14 = HEAP32[$builder$i>>2]|0;
   $15 = HEAP32[$14>>2]|0;
   $16 = $15 & 4;
   $17 = ($16|0)==(0);
   $18 = ((($14)) + 28|0);
   $19 = HEAP32[$18>>2]|0;
   $20 = ((($14)) + 32|0);
   $21 = HEAP32[$20>>2]|0;
   $22 = ((($21)) + 12|0);
   $23 = HEAP32[$22>>2]|0;
   if ($17) {
    $25 = (FUNCTION_TABLE_iiii[$23 & 511]($19,24334,2)|0);
    $_0$sroa$0$0$i$i = $25;
    break;
   } else {
    $24 = (FUNCTION_TABLE_iiii[$23 & 511]($19,24332,2)|0);
    $_0$sroa$0$0$i$i = $24;
    break;
   }
  } else {
   $_0$sroa$0$0$i$i = 1;
  }
 } while(0);
 HEAP8[$$repack$i>>0] = $_0$sroa$0$0$i$i;
 $$unpack$i = $_0$sroa$0$0$i$i;
 STACKTOP = sp;return ($$unpack$i|0);
}
function __ZN53__LT__RF__u27_a_u20_T_u20_as_u20_core__fmt__Debug_GT_3fmt17hc3cfc3e08781268dE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[$0>>2]|0;
 $3 = HEAP32[$2>>2]|0;
 $4 = ((($2)) + 4|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ((($5)) + 28|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = (FUNCTION_TABLE_iii[$7 & 511]($3,$1)|0);
 return ($8|0);
}
function __ZN53__LT__RF__u27_a_u20_T_u20_as_u20_core__fmt__Debug_GT_3fmt17h9f675d4c7b56c7bdE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0;
 var $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0;
 var $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0;
 var $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0;
 var $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $_0$sroa$0$0$i = 0, $trunc$i = 0, $trunc$i$clear = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[$0>>2]|0;
 $trunc$i = HEAP8[$2>>0]|0;
 $trunc$i$clear = $trunc$i & 31;
 do {
  switch ($trunc$i$clear<<24>>24) {
  case 0:  {
   $3 = ((($1)) + 28|0);
   $4 = HEAP32[$3>>2]|0;
   $5 = ((($1)) + 32|0);
   $6 = HEAP32[$5>>2]|0;
   $7 = ((($6)) + 12|0);
   $8 = HEAP32[$7>>2]|0;
   $9 = (FUNCTION_TABLE_iiii[$8 & 511]($4,19768,8)|0);
   $_0$sroa$0$0$i = $9;
   return ($_0$sroa$0$0$i|0);
   break;
  }
  case 1:  {
   $10 = ((($1)) + 28|0);
   $11 = HEAP32[$10>>2]|0;
   $12 = ((($1)) + 32|0);
   $13 = HEAP32[$12>>2]|0;
   $14 = ((($13)) + 12|0);
   $15 = HEAP32[$14>>2]|0;
   $16 = (FUNCTION_TABLE_iiii[$15 & 511]($11,19776,16)|0);
   $_0$sroa$0$0$i = $16;
   return ($_0$sroa$0$0$i|0);
   break;
  }
  case 2:  {
   $17 = ((($1)) + 28|0);
   $18 = HEAP32[$17>>2]|0;
   $19 = ((($1)) + 32|0);
   $20 = HEAP32[$19>>2]|0;
   $21 = ((($20)) + 12|0);
   $22 = HEAP32[$21>>2]|0;
   $23 = (FUNCTION_TABLE_iiii[$22 & 511]($18,19792,17)|0);
   $_0$sroa$0$0$i = $23;
   return ($_0$sroa$0$0$i|0);
   break;
  }
  case 3:  {
   $24 = ((($1)) + 28|0);
   $25 = HEAP32[$24>>2]|0;
   $26 = ((($1)) + 32|0);
   $27 = HEAP32[$26>>2]|0;
   $28 = ((($27)) + 12|0);
   $29 = HEAP32[$28>>2]|0;
   $30 = (FUNCTION_TABLE_iiii[$29 & 511]($25,19809,15)|0);
   $_0$sroa$0$0$i = $30;
   return ($_0$sroa$0$0$i|0);
   break;
  }
  case 4:  {
   $31 = ((($1)) + 28|0);
   $32 = HEAP32[$31>>2]|0;
   $33 = ((($1)) + 32|0);
   $34 = HEAP32[$33>>2]|0;
   $35 = ((($34)) + 12|0);
   $36 = HEAP32[$35>>2]|0;
   $37 = (FUNCTION_TABLE_iiii[$36 & 511]($32,19824,17)|0);
   $_0$sroa$0$0$i = $37;
   return ($_0$sroa$0$0$i|0);
   break;
  }
  case 5:  {
   $38 = ((($1)) + 28|0);
   $39 = HEAP32[$38>>2]|0;
   $40 = ((($1)) + 32|0);
   $41 = HEAP32[$40>>2]|0;
   $42 = ((($41)) + 12|0);
   $43 = HEAP32[$42>>2]|0;
   $44 = (FUNCTION_TABLE_iiii[$43 & 511]($39,19841,12)|0);
   $_0$sroa$0$0$i = $44;
   return ($_0$sroa$0$0$i|0);
   break;
  }
  case 6:  {
   $45 = ((($1)) + 28|0);
   $46 = HEAP32[$45>>2]|0;
   $47 = ((($1)) + 32|0);
   $48 = HEAP32[$47>>2]|0;
   $49 = ((($48)) + 12|0);
   $50 = HEAP32[$49>>2]|0;
   $51 = (FUNCTION_TABLE_iiii[$50 & 511]($46,19853,9)|0);
   $_0$sroa$0$0$i = $51;
   return ($_0$sroa$0$0$i|0);
   break;
  }
  case 7:  {
   $52 = ((($1)) + 28|0);
   $53 = HEAP32[$52>>2]|0;
   $54 = ((($1)) + 32|0);
   $55 = HEAP32[$54>>2]|0;
   $56 = ((($55)) + 12|0);
   $57 = HEAP32[$56>>2]|0;
   $58 = (FUNCTION_TABLE_iiii[$57 & 511]($53,19862,16)|0);
   $_0$sroa$0$0$i = $58;
   return ($_0$sroa$0$0$i|0);
   break;
  }
  case 8:  {
   $59 = ((($1)) + 28|0);
   $60 = HEAP32[$59>>2]|0;
   $61 = ((($1)) + 32|0);
   $62 = HEAP32[$61>>2]|0;
   $63 = ((($62)) + 12|0);
   $64 = HEAP32[$63>>2]|0;
   $65 = (FUNCTION_TABLE_iiii[$64 & 511]($60,19878,10)|0);
   $_0$sroa$0$0$i = $65;
   return ($_0$sroa$0$0$i|0);
   break;
  }
  case 9:  {
   $66 = ((($1)) + 28|0);
   $67 = HEAP32[$66>>2]|0;
   $68 = ((($1)) + 32|0);
   $69 = HEAP32[$68>>2]|0;
   $70 = ((($69)) + 12|0);
   $71 = HEAP32[$70>>2]|0;
   $72 = (FUNCTION_TABLE_iiii[$71 & 511]($67,19888,13)|0);
   $_0$sroa$0$0$i = $72;
   return ($_0$sroa$0$0$i|0);
   break;
  }
  case 10:  {
   $73 = ((($1)) + 28|0);
   $74 = HEAP32[$73>>2]|0;
   $75 = ((($1)) + 32|0);
   $76 = HEAP32[$75>>2]|0;
   $77 = ((($76)) + 12|0);
   $78 = HEAP32[$77>>2]|0;
   $79 = (FUNCTION_TABLE_iiii[$78 & 511]($74,19901,10)|0);
   $_0$sroa$0$0$i = $79;
   return ($_0$sroa$0$0$i|0);
   break;
  }
  case 11:  {
   $80 = ((($1)) + 28|0);
   $81 = HEAP32[$80>>2]|0;
   $82 = ((($1)) + 32|0);
   $83 = HEAP32[$82>>2]|0;
   $84 = ((($83)) + 12|0);
   $85 = HEAP32[$84>>2]|0;
   $86 = (FUNCTION_TABLE_iiii[$85 & 511]($81,19911,12)|0);
   $_0$sroa$0$0$i = $86;
   return ($_0$sroa$0$0$i|0);
   break;
  }
  case 12:  {
   $87 = ((($1)) + 28|0);
   $88 = HEAP32[$87>>2]|0;
   $89 = ((($1)) + 32|0);
   $90 = HEAP32[$89>>2]|0;
   $91 = ((($90)) + 12|0);
   $92 = HEAP32[$91>>2]|0;
   $93 = (FUNCTION_TABLE_iiii[$92 & 511]($88,19923,11)|0);
   $_0$sroa$0$0$i = $93;
   return ($_0$sroa$0$0$i|0);
   break;
  }
  case 13:  {
   $94 = ((($1)) + 28|0);
   $95 = HEAP32[$94>>2]|0;
   $96 = ((($1)) + 32|0);
   $97 = HEAP32[$96>>2]|0;
   $98 = ((($97)) + 12|0);
   $99 = HEAP32[$98>>2]|0;
   $100 = (FUNCTION_TABLE_iiii[$99 & 511]($95,19934,8)|0);
   $_0$sroa$0$0$i = $100;
   return ($_0$sroa$0$0$i|0);
   break;
  }
  case 14:  {
   $101 = ((($1)) + 28|0);
   $102 = HEAP32[$101>>2]|0;
   $103 = ((($1)) + 32|0);
   $104 = HEAP32[$103>>2]|0;
   $105 = ((($104)) + 12|0);
   $106 = HEAP32[$105>>2]|0;
   $107 = (FUNCTION_TABLE_iiii[$106 & 511]($102,19942,9)|0);
   $_0$sroa$0$0$i = $107;
   return ($_0$sroa$0$0$i|0);
   break;
  }
  case 15:  {
   $108 = ((($1)) + 28|0);
   $109 = HEAP32[$108>>2]|0;
   $110 = ((($1)) + 32|0);
   $111 = HEAP32[$110>>2]|0;
   $112 = ((($111)) + 12|0);
   $113 = HEAP32[$112>>2]|0;
   $114 = (FUNCTION_TABLE_iiii[$113 & 511]($109,19951,11)|0);
   $_0$sroa$0$0$i = $114;
   return ($_0$sroa$0$0$i|0);
   break;
  }
  case 16:  {
   $115 = ((($1)) + 28|0);
   $116 = HEAP32[$115>>2]|0;
   $117 = ((($1)) + 32|0);
   $118 = HEAP32[$117>>2]|0;
   $119 = ((($118)) + 12|0);
   $120 = HEAP32[$119>>2]|0;
   $121 = (FUNCTION_TABLE_iiii[$120 & 511]($116,19962,5)|0);
   $_0$sroa$0$0$i = $121;
   return ($_0$sroa$0$0$i|0);
   break;
  }
  case 17:  {
   $122 = ((($1)) + 28|0);
   $123 = HEAP32[$122>>2]|0;
   $124 = ((($1)) + 32|0);
   $125 = HEAP32[$124>>2]|0;
   $126 = ((($125)) + 12|0);
   $127 = HEAP32[$126>>2]|0;
   $128 = (FUNCTION_TABLE_iiii[$127 & 511]($123,19967,13)|0);
   $_0$sroa$0$0$i = $128;
   return ($_0$sroa$0$0$i|0);
   break;
  }
  case 18:  {
   $129 = ((($1)) + 28|0);
   $130 = HEAP32[$129>>2]|0;
   $131 = ((($1)) + 32|0);
   $132 = HEAP32[$131>>2]|0;
   $133 = ((($132)) + 12|0);
   $134 = HEAP32[$133>>2]|0;
   $135 = (FUNCTION_TABLE_iiii[$134 & 511]($130,19980,15)|0);
   $_0$sroa$0$0$i = $135;
   return ($_0$sroa$0$0$i|0);
   break;
  }
  default: {
   // unreachable;
  }
  }
 } while(0);
 return (0)|0;
}
function __ZN64__LT_collections__string__String_u20_as_u20_core__fmt__Debug_GT_3fmt17hb61789d73ad9da40E($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[$0>>2]|0;
 $3 = ((($0)) + 8|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (__ZN40__LT_str_u20_as_u20_core__fmt__Debug_GT_3fmt17ha856739f11aa1026E($2,$4,$1)|0);
 return ($5|0);
}
function __ZN3std6thread5local2os13destroy_value17h82de1d5792919066E($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $_0$0$i$i = 0, $_0$0$i$i7 = 0, $cond$i$i = 0, $cond$i$i5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[$0>>2]|0;
 $2 = HEAP32[$1>>2]|0;
 $cond$i$i = ($2|0)==(0);
 if ($cond$i$i) {
  __THREW__ = 0;
  $3 = (invoke_ii(338,($1|0))|0);
  $4 = __THREW__; __THREW__ = 0;
  $5 = $4&1;
  if ($5) {
   $8 = ___cxa_find_matching_catch_2()|0;
   $9 = tempRet0;
   _free($0);
   ___resumeException($8|0);
   // unreachable;
  } else {
   $_0$0$i$i = $3;
  }
 } else {
  $_0$0$i$i = $2;
 }
 (_pthread_setspecific(($_0$0$i$i|0),((1)|0))|0);
 _free($0);
 $6 = HEAP32[$1>>2]|0;
 $cond$i$i5 = ($6|0)==(0);
 if (!($cond$i$i5)) {
  $_0$0$i$i7 = $6;
  (_pthread_setspecific(($_0$0$i$i7|0),(0|0))|0);
  return;
 }
 $7 = (__ZN3std10sys_common12thread_local9StaticKey9lazy_init17hfe76ff6b56e2d562E($1)|0);
 $_0$0$i$i7 = $7;
 (_pthread_setspecific(($_0$0$i$i7|0),(0|0))|0);
 return;
}
function __ZN4core6result13unwrap_failed17h763fb6faff9dd786E_1376($0) {
 $0 = $0|0;
 var $$pre$i$i$i$i$i$i$i = 0, $$pre3$i$i$i$i$i$i$i = 0, $$sink$in$phi$trans$insert$i$i$i$i$i$i$i = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $_12 = 0;
 var $_6$sroa$0$0$$sroa_idx$i = 0, $_7 = 0, $error = 0, $msg = 0, $switch$i$i$i$i$i$i$i$i = 0, $switch2tmp$i$i$i$i$i$i$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $msg = sp + 48|0;
 $error = sp + 40|0;
 $_7 = sp + 16|0;
 $_12 = sp;
 HEAP32[$msg>>2] = 18843;
 $1 = ((($msg)) + 4|0);
 HEAP32[$1>>2] = 43;
 $2 = $0;
 $3 = $2;
 $4 = HEAP32[$3>>2]|0;
 $5 = (($2) + 4)|0;
 $6 = $5;
 $7 = HEAP32[$6>>2]|0;
 $8 = $error;
 $9 = $8;
 HEAP32[$9>>2] = $4;
 $10 = (($8) + 4)|0;
 $11 = $10;
 HEAP32[$11>>2] = $7;
 $12 = $msg;
 $13 = $error;
 HEAP32[$_12>>2] = $12;
 $14 = ((($_12)) + 4|0);
 HEAP32[$14>>2] = (346);
 $15 = ((($_12)) + 8|0);
 HEAP32[$15>>2] = $13;
 $16 = ((($_12)) + 12|0);
 HEAP32[$16>>2] = (368);
 HEAP32[$_7>>2] = (6520);
 $17 = ((($_7)) + 4|0);
 HEAP32[$17>>2] = 2;
 $_6$sroa$0$0$$sroa_idx$i = ((($_7)) + 8|0);
 HEAP32[$_6$sroa$0$0$$sroa_idx$i>>2] = 0;
 $18 = ((($_7)) + 16|0);
 HEAP32[$18>>2] = $_12;
 $19 = ((($_7)) + 20|0);
 HEAP32[$19>>2] = 2;
 __THREW__ = 0;
 invoke_viiii(272,($_7|0),(22324|0),100,799);
 $20 = __THREW__; __THREW__ = 0;
 $21 = ___cxa_find_matching_catch_2()|0;
 $22 = tempRet0;
 $23 = HEAP32[$error>>2]|0;
 $24 = ((($error)) + 4|0);
 $25 = HEAP8[$24>>0]|0;
 $26 = ($25<<24>>24)==(0);
 do {
  if ($26) {
   $27 = (__ZN3std9panicking18update_panic_count11PANIC_COUNT7__getit17ha058452be27ec8a6E()|0);
   $switch2tmp$i$i$i$i$i$i$i$i$i = ($27|0)==(0|0);
   if ($switch2tmp$i$i$i$i$i$i$i$i$i) {
    __ZN4core6option13expect_failed17hc1eeb48c0c4a1725E(18366,57);
    // unreachable;
   }
   $28 = HEAP32[$27>>2]|0;
   $switch$i$i$i$i$i$i$i$i = ($28|0)==(1);
   if (!($switch$i$i$i$i$i$i$i$i)) {
    $29 = $27;
    $30 = $29;
    HEAP32[$30>>2] = 1;
    $31 = (($29) + 4)|0;
    $32 = $31;
    HEAP32[$32>>2] = 0;
    $$pre3$i$i$i$i$i$i$i = ((($27)) + 4|0);
    HEAP32[$$pre3$i$i$i$i$i$i$i>>2] = 0;
    break;
   }
   $$sink$in$phi$trans$insert$i$i$i$i$i$i$i = ((($27)) + 4|0);
   $$pre$i$i$i$i$i$i$i = HEAP32[$$sink$in$phi$trans$insert$i$i$i$i$i$i$i>>2]|0;
   $33 = ($$pre$i$i$i$i$i$i$i|0)==(0);
   if (!($33)) {
    $34 = ((($23)) + 4|0);
    HEAP8[$34>>0] = 1;
   }
  }
 } while(0);
 $35 = HEAP32[$error>>2]|0;
 $36 = HEAP32[$35>>2]|0;
 (_pthread_mutex_unlock(($36|0))|0);
 ___resumeException($21|0);
 // unreachable;
}
function __ZN82__LT_std__sys_common__poison__PoisonError_LT_T_GT__u20_as_u20_core__fmt__Debug_GT_3fmt17h2df158105cf363dfE_1377($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (__ZN40__LT_str_u20_as_u20_core__fmt__Debug_GT_3fmt17ha856739f11aa1026E(20248,25,$1)|0);
 return ($2|0);
}
function __ZN59__LT_std__sync__once__Finish_u20_as_u20_core__ops__Drop_GT_4drop17hd7d9ae0679273349E($$0$0$val,$$0$1$val) {
 $$0$0$val = $$0$0$val|0;
 $$0$1$val = $$0$1$val|0;
 var $$pre$i$i$i$i$i$i16$i = 0, $$pre$i$i$i$i$i$i32$i = 0, $$pre$phi$i$i$i$i$i$i$iZ2D = 0, $$pre3$i$i$i$i$i$i17$i = 0, $$pre3$i$i$i$i$i$i27$i = 0, $$sink$in$phi$trans$insert$i$i$i$i$i$i14$i = 0, $$sink$in$phi$trans$insert$i$i$i$i$i$i30$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0;
 var $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0;
 var $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0;
 var $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $7 = 0, $8 = 0, $9 = 0, $_10$i$i = 0, $_10$sroa_cast27$i$i$hi = 0, $_10$sroa_raw_idx$i$i = 0, $_10$sroa_raw_idx26$i$i = 0, $_12 = 0, $_25 = 0, $_30 = 0, $_6$sroa$0$0$$sroa_idx$i = 0;
 var $left_val = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, $queue$0 = 0, $queue1$030 = 0, $right_val = 0, $switch$i$i$i$i$i$i$i12$i = 0, $switch$i$i$i$i$i$i$i25$i = 0, $switch2tmp$i$i$i$i$i$i$i$i10$i = 0, $switch2tmp$i$i$i$i$i$i$i$i22$i = 0, $switch3tmp$i = 0, $thread = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(80|0);
 $_10$i$i = sp + 48|0;
 $_12 = sp + 64|0;
 $left_val = sp + 60|0;
 $right_val = sp + 56|0;
 $_25 = sp + 24|0;
 $_30 = sp + 8|0;
 $thread = sp;
 $0 = ($$0$0$val<<24>>24)==(0);
 if ($0) {
  $2 = HEAP32[$$0$1$val>>2]|0;HEAP32[$$0$1$val>>2] = 3;
  $queue$0 = $2;
 } else {
  $1 = HEAP32[$$0$1$val>>2]|0;HEAP32[$$0$1$val>>2] = 1;
  $queue$0 = $1;
 }
 $3 = $queue$0 & 3;
 HEAP32[$_12>>2] = $3;
 HEAP32[$left_val>>2] = $_12;
 HEAP32[$right_val>>2] = 6320;
 $4 = ($3|0)==(2);
 if (!($4)) {
  $5 = $left_val;
  $6 = $right_val;
  HEAP32[$_30>>2] = $5;
  $7 = ((($_30)) + 4|0);
  HEAP32[$7>>2] = (176);
  $8 = ((($_30)) + 8|0);
  HEAP32[$8>>2] = $6;
  $9 = ((($_30)) + 12|0);
  HEAP32[$9>>2] = (176);
  HEAP32[$_25>>2] = 5800;
  $10 = ((($_25)) + 4|0);
  HEAP32[$10>>2] = 3;
  $_6$sroa$0$0$$sroa_idx$i = ((($_25)) + 8|0);
  HEAP32[$_6$sroa$0$0$$sroa_idx$i>>2] = 0;
  $11 = ((($_25)) + 16|0);
  HEAP32[$11>>2] = $_30;
  $12 = ((($_25)) + 20|0);
  HEAP32[$12>>2] = 2;
  __ZN3std9panicking15begin_panic_fmt17had2218825161cb57E($_25,6324);
  // unreachable;
 }
 $13 = $queue$0 & -4;
 $14 = ($13|0)==(0);
 if ($14) {
  STACKTOP = sp;return;
 }
 $15 = $13;
 $queue1$030 = $15;
 L11: while(1) {
  $16 = ((($queue1$030)) + 8|0);
  $17 = HEAP32[$16>>2]|0;
  $18 = HEAP32[$queue1$030>>2]|0;
  HEAP32[$queue1$030>>2] = 0;
  $switch3tmp$i = ($18|0)==(0);
  if ($switch3tmp$i) {
   label = 11;
   break;
  }
  HEAP32[$thread>>2] = $18;
  $19 = ((($queue1$030)) + 4|0);
  HEAP8[$19>>0] = 1;
  $20 = HEAP32[$thread>>2]|0;
  $21 = ((($20)) + 24|0);
  $22 = HEAP32[$21>>2]|0;
  (_pthread_mutex_lock(($22|0))|0);
  __THREW__ = 0;
  $23 = (invoke_i(325)|0);
  $24 = __THREW__; __THREW__ = 0;
  $25 = $24&1;
  if ($25) {
   label = 33;
   break;
  }
  $switch2tmp$i$i$i$i$i$i$i$i10$i = ($23|0)==(0|0);
  if ($switch2tmp$i$i$i$i$i$i$i$i10$i) {
   label = 14;
   break;
  }
  $27 = HEAP32[$23>>2]|0;
  $switch$i$i$i$i$i$i$i12$i = ($27|0)==(1);
  if ($switch$i$i$i$i$i$i$i12$i) {
   $$sink$in$phi$trans$insert$i$i$i$i$i$i14$i = ((($23)) + 4|0);
   $$pre$i$i$i$i$i$i16$i = HEAP32[$$sink$in$phi$trans$insert$i$i$i$i$i$i14$i>>2]|0;
   $$pre$phi$i$i$i$i$i$i$iZ2D = $$sink$in$phi$trans$insert$i$i$i$i$i$i14$i;$32 = $$pre$i$i$i$i$i$i16$i;
  } else {
   $28 = $23;
   $29 = $28;
   HEAP32[$29>>2] = 1;
   $30 = (($28) + 4)|0;
   $31 = $30;
   HEAP32[$31>>2] = 0;
   $$pre3$i$i$i$i$i$i17$i = ((($23)) + 4|0);
   $$pre$phi$i$i$i$i$i$i$iZ2D = $$pre3$i$i$i$i$i$i17$i;$32 = 0;
  }
  HEAP32[$$pre$phi$i$i$i$i$i$i$iZ2D>>2] = $32;
  $33 = ($32|0)!=(0);
  $34 = ((($20)) + 28|0);
  $35 = HEAP8[$34>>0]|0;
  $36 = ($35<<24>>24)==(0);
  if (!($36)) {
   label = 19;
   break;
  }
  $40 = ((($20)) + 29|0);
  $41 = HEAP8[$40>>0]|0;
  $42 = ($41<<24>>24)==(0);
  if ($42) {
   HEAP8[$40>>0] = 1;
   $43 = ((($20)) + 32|0);
   $44 = HEAP32[$43>>2]|0;
   (_pthread_cond_signal(($44|0))|0);
  }
  do {
   if (!($33)) {
    __THREW__ = 0;
    $45 = (invoke_i(325)|0);
    $46 = __THREW__; __THREW__ = 0;
    $47 = $46&1;
    if ($47) {
     label = 33;
     break L11;
    }
    $switch2tmp$i$i$i$i$i$i$i$i22$i = ($45|0)==(0|0);
    if ($switch2tmp$i$i$i$i$i$i$i$i22$i) {
     label = 25;
     break L11;
    }
    $49 = HEAP32[$45>>2]|0;
    $switch$i$i$i$i$i$i$i25$i = ($49|0)==(1);
    if (!($switch$i$i$i$i$i$i$i25$i)) {
     $50 = $45;
     $51 = $50;
     HEAP32[$51>>2] = 1;
     $52 = (($50) + 4)|0;
     $53 = $52;
     HEAP32[$53>>2] = 0;
     $$pre3$i$i$i$i$i$i27$i = ((($45)) + 4|0);
     HEAP32[$$pre3$i$i$i$i$i$i27$i>>2] = 0;
     break;
    }
    $$sink$in$phi$trans$insert$i$i$i$i$i$i30$i = ((($45)) + 4|0);
    $$pre$i$i$i$i$i$i32$i = HEAP32[$$sink$in$phi$trans$insert$i$i$i$i$i$i30$i>>2]|0;
    $54 = ($$pre$i$i$i$i$i$i32$i|0)==(0);
    if (!($54)) {
     HEAP8[$34>>0] = 1;
    }
   }
  } while(0);
  $55 = HEAP32[$21>>2]|0;
  (_pthread_mutex_unlock(($55|0))|0);
  $56 = HEAP32[$20>>2]|0;HEAP32[$20>>2] = (($56-1)|0);
  $57 = ($56|0)==(1);
  if ($57) {
   /* fence */;
   __ZN33__LT_alloc__arc__Arc_LT_T_GT__GT_9drop_slow17h7ac40ae25c424b1dE_1335($thread);
  }
  $58 = ($17|0)==(0|0);
  if ($58) {
   label = 8;
   break;
  } else {
   $queue1$030 = $17;
  }
 }
 if ((label|0) == 8) {
  STACKTOP = sp;return;
 }
 else if ((label|0) == 11) {
  __ZN4core9panicking5panic17ha7507e8e32961bfeE(6500);
  // unreachable;
 }
 else if ((label|0) == 14) {
  __THREW__ = 0;
  invoke_vii(219,(18366|0),57);
  $26 = __THREW__; __THREW__ = 0;
  label = 34;
 }
 else if ((label|0) == 19) {
  $37 = $21;
  $38 = $33&1;
  HEAP32[$_10$i$i>>2] = $37;
  $_10$sroa_raw_idx$i$i = ((($_10$i$i)) + 4|0);
  HEAP8[$_10$sroa_raw_idx$i$i>>0] = $38;
  $_10$sroa_raw_idx26$i$i = ((($_10$i$i)) + 5|0);
  HEAP8[$_10$sroa_raw_idx26$i$i>>0]=0&255;HEAP8[$_10$sroa_raw_idx26$i$i+1>>0]=0>>8;
  $_10$sroa_cast27$i$i$hi = ((($_10$sroa_raw_idx26$i$i)) + 2|0);
  HEAP8[$_10$sroa_cast27$i$i$hi>>0] = 0;
  __THREW__ = 0;
  invoke_vi(329,($_10$i$i|0));
  $39 = __THREW__; __THREW__ = 0;
  label = 34;
 }
 else if ((label|0) == 25) {
  __THREW__ = 0;
  invoke_vii(219,(18366|0),57);
  $48 = __THREW__; __THREW__ = 0;
  label = 34;
 }
 else if ((label|0) == 33) {
  $59 = ___cxa_find_matching_catch_2()|0;
  $60 = tempRet0;
  $lpad$phi$index = $59;$lpad$phi$index2 = $60;
 }
 if ((label|0) == 34) {
  $61 = ___cxa_find_matching_catch_2()|0;
  $62 = tempRet0;
  $lpad$phi$index = $61;$lpad$phi$index2 = $62;
 }
 $63 = HEAP32[$20>>2]|0;HEAP32[$20>>2] = (($63-1)|0);
 $64 = ($63|0)==(1);
 if (!($64)) {
  ___resumeException($lpad$phi$index|0);
  // unreachable;
 }
 /* fence */;
 __ZN33__LT_alloc__arc__Arc_LT_T_GT__GT_9drop_slow17h7ac40ae25c424b1dE_1335($thread);
 ___resumeException($lpad$phi$index|0);
 // unreachable;
}
function __ZN3std4sync4once4Once9call_once28__u7b__u7b_closure_u7d__u7d_17haa0fddea2e05899dE($$0$0$val,$0) {
 $$0$0$val = $$0$0$val|0;
 $0 = $0|0;
 var $$$i$i = 0, $$sroa_idx$i$i$i$i = 0, $$sroa_idx$i$i$i$i$i$i$i = 0, $$sroa_idx$i$i$i$i$i42$i$i = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $7 = 0, $8 = 0, $9 = 0, $_37$sroa$0$0$copyload$i$i = 0, $_37$sroa$4$0$$sroa_idx88$i$i = 0, $_37$sroa$4$0$copyload$i$i = 0, $_37$sroa$5$0$$sroa_idx90$i$i = 0, $_37$sroa$5$0$copyload$i$i = 0, $iter$sroa$0$0$i$i = 0, $iter$sroa$0$0$ph$i$i = 0, $iter2$sroa$7$0$i$i = 0, $magicptr$i$i = 0, $not$$i$i$i$i$i$i = 0, $not$$i$i$i$i$i$i$i$i$i = 0, $not$$i$i$i$i$i$i1 = 0, $not$$i$i$i$i48$i$i = 0, $personalityslot$sroa$0$2$i$i = 0, $personalityslot$sroa$7$2$i$i = 0;
 var $switch2$i = 0, $switch3tmp$i$i$i$i = 0, $switch3tmp$i$i43$i$i = 0, $switchtmp$i = 0, $switchtmp$i$i = 0, $t$sroa$0$0$copyload$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $t$sroa$0$0$copyload$i$i$i = HEAP8[$$0$0$val>>0]|0;
 HEAP8[$$0$0$val>>0] = 0;
 $switch2$i = ($t$sroa$0$0$copyload$i$i$i<<24>>24)==(0);
 if ($switch2$i) {
  __ZN4core9panicking5panic17ha7507e8e32961bfeE(6500);
  // unreachable;
 }
 (_pthread_mutex_lock(((26680)|0))|0);
 $1 = HEAP32[6683]|0;
 $switchtmp$i = ($1|0)==(0|0);
 if (!($switchtmp$i)) {
  $2 = HEAP32[$1>>2]|0;
  $3 = ((($1)) + 8|0);
  $4 = HEAP32[$3>>2]|0;
  $5 = (($2) + (($4*12)|0)|0);
  $6 = ($4|0)==(0);
  if (!($6)) {
   $8 = $2;
   while(1) {
    $7 = ((($8)) + 4|0);
    $9 = HEAP32[$7>>2]|0;
    $not$$i$i$i$i$i$i$i$i$i = ($9|0)==(0);
    if (!($not$$i$i$i$i$i$i$i$i$i)) {
     $10 = HEAP32[$8>>2]|0;
     _free($10);
    }
    $11 = ((($8)) + 12|0);
    $12 = ($11|0)==($5|0);
    if ($12) {
     break;
    } else {
     $8 = $11;
    }
   }
  }
  $13 = ((($1)) + 4|0);
  $14 = HEAP32[$13>>2]|0;
  $not$$i$i$i$i$i$i1 = ($14|0)==(0);
  if (!($not$$i$i$i$i$i$i1)) {
   $15 = HEAP32[$1>>2]|0;
   _free($15);
  }
  _free($1);
 }
 HEAP32[6683] = 0;
 (_pthread_mutex_unlock(((26680)|0))|0);
 $iter$sroa$0$0$ph$i$i = 0;
 L17: while(1) {
  $iter$sroa$0$0$i$i = $iter$sroa$0$0$ph$i$i;
  L19: while(1) {
   $16 = ($iter$sroa$0$0$i$i>>>0)<(10);
   $17 = (($iter$sroa$0$0$i$i) + 1)|0;
   if (!($16)) {
    label = 38;
    break L17;
   }
   (_pthread_mutex_lock(((26704)|0))|0);
   $18 = HEAP32[6684]|0;
   $19 = ($iter$sroa$0$0$i$i|0)==(9);
   $$$i$i = $19 ? (1) : 0;
   HEAP32[6684] = $$$i$i;
   (_pthread_mutex_unlock(((26704)|0))|0);
   $magicptr$i$i = $18;
   switch ($magicptr$i$i|0) {
   case 1:  {
    label = 15;
    break L17;
    break;
   }
   case 0:  {
    $iter$sroa$0$0$i$i = $17;
    break;
   }
   default: {
    break L19;
   }
   }
  }
  $_37$sroa$0$0$copyload$i$i = HEAP32[$18>>2]|0;
  $_37$sroa$4$0$$sroa_idx88$i$i = ((($18)) + 4|0);
  $_37$sroa$4$0$copyload$i$i = HEAP32[$_37$sroa$4$0$$sroa_idx88$i$i>>2]|0;
  $_37$sroa$5$0$$sroa_idx90$i$i = ((($18)) + 8|0);
  $_37$sroa$5$0$copyload$i$i = HEAP32[$_37$sroa$5$0$$sroa_idx90$i$i>>2]|0;
  $20 = (($_37$sroa$0$0$copyload$i$i) + ($_37$sroa$5$0$copyload$i$i<<3)|0);
  $iter2$sroa$7$0$i$i = $_37$sroa$0$0$copyload$i$i;
  while(1) {
   $21 = ($iter2$sroa$7$0$i$i|0)==($20|0);
   if ($21) {
    break;
   }
   $24 = ((($iter2$sroa$7$0$i$i)) + 8|0);
   $38 = HEAP32[$iter2$sroa$7$0$i$i>>2]|0;
   $switchtmp$i$i = ($38|0)==(0);
   if ($switchtmp$i$i) {
    label = 28;
    break;
   }
   $$sroa_idx$i$i$i$i = ((($iter2$sroa$7$0$i$i)) + 4|0);
   $39 = HEAP32[$$sroa_idx$i$i$i$i>>2]|0;
   $40 = $38;
   $41 = ((($39)) + 12|0);
   $42 = HEAP32[$41>>2]|0;
   __THREW__ = 0;
   invoke_vi($42|0,($40|0));
   $43 = __THREW__; __THREW__ = 0;
   $44 = $43&1;
   if ($44) {
    label = 19;
    break L17;
   } else {
    $iter2$sroa$7$0$i$i = $24;
   }
  }
  L27: do {
   if ((label|0) == 28) {
    label = 0;
    $45 = ($24|0)==($20|0);
    if (!($45)) {
     $47 = $24;
     while(1) {
      $46 = ((($47)) + 8|0);
      $48 = HEAP32[$47>>2]|0;
      $$sroa_idx$i$i$i$i$i42$i$i = ((($47)) + 4|0);
      $49 = HEAP32[$$sroa_idx$i$i$i$i$i42$i$i>>2]|0;
      $50 = $48;
      $switch3tmp$i$i43$i$i = ($48|0)==(0);
      if ($switch3tmp$i$i43$i$i) {
       break L27;
      }
      $51 = $49;
      $52 = HEAP32[$51>>2]|0;
      __THREW__ = 0;
      invoke_vi($52|0,($50|0));
      $53 = __THREW__; __THREW__ = 0;
      $54 = $53&1;
      if ($54) {
       label = 37;
       break L17;
      }
      $55 = $49;
      $56 = ((($55)) + 4|0);
      $57 = HEAP32[$56>>2]|0;
      $58 = ($57|0)==(0);
      if (!($58)) {
       _free($50);
      }
      $59 = ($46|0)==($20|0);
      if ($59) {
       break;
      } else {
       $47 = $46;
      }
     }
    }
   }
  } while(0);
  $not$$i$i$i$i48$i$i = ($_37$sroa$4$0$copyload$i$i|0)==(0);
  if (!($not$$i$i$i$i48$i$i)) {
   _free($_37$sroa$0$0$copyload$i$i);
  }
  _free($18);
  $iter$sroa$0$0$ph$i$i = $17;
 }
 if ((label|0) == 15) {
  __ZN3std9panicking11begin_panic17h9936a195de5ffc4dE_1326(20464,39,6336);
  // unreachable;
 }
 else if ((label|0) == 19) {
  $22 = ___cxa_find_matching_catch_2()|0;
  $23 = tempRet0;
  $25 = ($24|0)==($20|0);
  L42: do {
   if (!($25)) {
    $27 = $24;
    while(1) {
     $26 = ((($27)) + 8|0);
     $28 = HEAP32[$27>>2]|0;
     $$sroa_idx$i$i$i$i$i$i$i = ((($27)) + 4|0);
     $29 = HEAP32[$$sroa_idx$i$i$i$i$i$i$i>>2]|0;
     $30 = $28;
     $switch3tmp$i$i$i$i = ($28|0)==(0);
     if ($switch3tmp$i$i$i$i) {
      break L42;
     }
     $31 = $29;
     $32 = HEAP32[$31>>2]|0;
     FUNCTION_TABLE_vi[$32 & 511]($30);
     $33 = $29;
     $34 = ((($33)) + 4|0);
     $35 = HEAP32[$34>>2]|0;
     $36 = ($35|0)==(0);
     if (!($36)) {
      _free($30);
     }
     $37 = ($26|0)==($20|0);
     if ($37) {
      break;
     } else {
      $27 = $26;
     }
    }
   }
  } while(0);
  $not$$i$i$i$i$i$i = ($_37$sroa$4$0$copyload$i$i|0)==(0);
  if ($not$$i$i$i$i$i$i) {
   $personalityslot$sroa$0$2$i$i = $22;$personalityslot$sroa$7$2$i$i = $23;
   _free($18);
   ___resumeException($personalityslot$sroa$0$2$i$i|0);
   // unreachable;
  }
  _free($_37$sroa$0$0$copyload$i$i);
  $personalityslot$sroa$0$2$i$i = $22;$personalityslot$sroa$7$2$i$i = $23;
  _free($18);
  ___resumeException($personalityslot$sroa$0$2$i$i|0);
  // unreachable;
 }
 else if ((label|0) == 37) {
  $60 = ___cxa_find_matching_catch_2()|0;
  $61 = tempRet0;
  $personalityslot$sroa$0$2$i$i = $60;$personalityslot$sroa$7$2$i$i = $61;
  _free($18);
  ___resumeException($personalityslot$sroa$0$2$i$i|0);
  // unreachable;
 }
 else if ((label|0) == 38) {
  return;
 }
}
function __ZN3std3sys4init11oom_handler17h28daa4c1ee96733cE() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 (_write(2,20911,35)|0);
 _llvm_trap();
 // unreachable;
}
function __ZN84__LT_core__iter__Map_LT_I_C__u20_F_GT__u20_as_u20_core__iter__iterator__Iterator_GT_4next17ha0172546821faad9E($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $_7$i$sroa$4$0$$sroa_idx11 = 0, $_7$i$sroa$5$0$$sroa_idx13 = 0;
 var $local_len$sroa$5$0$lcssa$i$i$i$i$i$i = 0, $ptr$0$i$i$i$i$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($1)) + 4|0);
 $3 = HEAP32[$1>>2]|0;
 $4 = HEAP32[$2>>2]|0;
 $5 = ($3|0)<($4|0);
 if (!($5)) {
  HEAP32[$0>>2] = 0;
  return;
 }
 $6 = (($3) + 1)|0;
 HEAP32[$1>>2] = $6;
 $7 = ((($1)) + 8|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = HEAP32[$8>>2]|0;
 $10 = (($9) + ($3<<2)|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = (_strlen($11)|0);
 $13 = ($12|0)==(-1);
 if ($13) {
  __ZN4core5slice20slice_index_len_fail17hed923256c072a803E(-1,0);
  // unreachable;
 }
 $14 = ($12|0)<(0);
 if ($14) {
  __ZN4core9panicking5panic17ha7507e8e32961bfeE(6432);
  // unreachable;
 }
 $15 = ($12|0)==(0);
 do {
  if ($15) {
   $19 = 1;$local_len$sroa$5$0$lcssa$i$i$i$i$i$i = 0;
  } else {
   $16 = (_malloc($12)|0);
   $17 = ($16|0)==(0|0);
   if ($17) {
    __ZN5alloc3oom3oom17hb253cf665793f59eE();
    // unreachable;
   } else {
    $ptr$0$i$i$i$i$i$i$i = $16;
    $18 = $ptr$0$i$i$i$i$i$i$i;
    _memcpy(($ptr$0$i$i$i$i$i$i$i|0),($11|0),($12|0))|0;
    $19 = $18;$local_len$sroa$5$0$lcssa$i$i$i$i$i$i = $12;
    break;
   }
  }
 } while(0);
 HEAP32[$0>>2] = $19;
 $_7$i$sroa$4$0$$sroa_idx11 = ((($0)) + 4|0);
 HEAP32[$_7$i$sroa$4$0$$sroa_idx11>>2] = $12;
 $_7$i$sroa$5$0$$sroa_idx13 = ((($0)) + 8|0);
 HEAP32[$_7$i$sroa$5$0$$sroa_idx13>>2] = $local_len$sroa$5$0$lcssa$i$i$i$i$i$i;
 return;
}
function _rust_eh_personality($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $6 = (___gxx_personality_v0(($0|0),($1|0),($2|0),($3|0),($4|0),($5|0))|0);
 return ($6|0);
}
function ___rust_start_panic($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = $0;
 $3 = $1;
 $4 = (___cxa_allocate_exception(8)|0);
 $5 = ($4|0)==(0|0);
 if (!($5)) {
  HEAP32[$4>>2] = $2;
  $10 = ((($4)) + 4|0);
  HEAP32[$10>>2] = $3;
  ___cxa_throw(($4|0),(0|0),(0|0));
  __ZN4core9panicking5panic17ha7507e8e32961bfeE(6392);
  // unreachable;
 }
 $6 = HEAP32[$3>>2]|0;
 FUNCTION_TABLE_vi[$6 & 511]($2);
 $7 = ((($3)) + 4|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ($8|0)==(0);
 if ($9) {
  return 3;
 }
 _free($2);
 return 3;
}
function __ZN11collections3str62__LT_impl_u20_collections__borrow__ToOwned_u20_for_u20_str_GT_8to_owned17h1b22ecfc896f8592E($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $_3 = 0, $local_len$sroa$5$0$lcssa$i$i$i$i = 0, $not$$i$i$i$i$i$i$i = 0;
 var $ptr$0$i$i$i$i$i = 0, $vector$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $vector$i$i$i = sp + 16|0;
 $_3 = sp;
 $3 = ($2|0)<(0);
 if ($3) {
  __ZN4core9panicking5panic17ha7507e8e32961bfeE(6432);
  // unreachable;
 }
 $5 = ($2|0)==(0);
 if ($5) {
  $ptr$0$i$i$i$i$i = (1);
 } else {
  $6 = (_malloc($2)|0);
  $7 = ($6|0)==(0|0);
  if ($7) {
   __ZN5alloc3oom3oom17hb253cf665793f59eE();
   // unreachable;
  } else {
   $ptr$0$i$i$i$i$i = $6;
  }
 }
 $8 = $ptr$0$i$i$i$i$i;
 HEAP32[$vector$i$i$i>>2] = $8;
 $9 = ((($vector$i$i$i)) + 4|0);
 HEAP32[$9>>2] = $2;
 $10 = ((($vector$i$i$i)) + 8|0);
 HEAP32[$10>>2] = 0;
 __THREW__ = 0;
 invoke_vii(369,($vector$i$i$i|0),($2|0));
 $11 = __THREW__; __THREW__ = 0;
 $12 = $11&1;
 if (!($12)) {
  $13 = HEAP32[$10>>2]|0;
  if ($5) {
   $local_len$sroa$5$0$lcssa$i$i$i$i = $13;
  } else {
   $14 = (($13) + ($2))|0;
   $15 = HEAP32[$vector$i$i$i>>2]|0;
   $16 = (($15) + ($13)|0);
   _memcpy(($16|0),($1|0),($2|0))|0;
   $local_len$sroa$5$0$lcssa$i$i$i$i = $14;
  }
  HEAP32[$10>>2] = $local_len$sroa$5$0$lcssa$i$i$i$i;
  ;HEAP32[$_3>>2]=HEAP32[$vector$i$i$i>>2]|0;HEAP32[$_3+4>>2]=HEAP32[$vector$i$i$i+4>>2]|0;HEAP32[$_3+8>>2]=HEAP32[$vector$i$i$i+8>>2]|0;
  ;HEAP32[$0>>2]=HEAP32[$_3>>2]|0;HEAP32[$0+4>>2]=HEAP32[$_3+4>>2]|0;HEAP32[$0+8>>2]=HEAP32[$_3+8>>2]|0;
  STACKTOP = sp;return;
 }
 $4 = ___cxa_find_matching_catch_2()|0;
 $17 = tempRet0;
 $18 = HEAP32[$9>>2]|0;
 $not$$i$i$i$i$i$i$i = ($18|0)==(0);
 if ($not$$i$i$i$i$i$i$i) {
  ___resumeException($4|0);
  // unreachable;
 }
 $19 = HEAP32[$vector$i$i$i>>2]|0;
 _free($19);
 ___resumeException($4|0);
 // unreachable;
}
function __ZN39__LT_collections__vec__Vec_LT_T_GT__GT_7reserve17h36095f9d9422ab2dE_1492($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$arith = 0, $$overflow = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $_0$0$sroa$speculated$i$i$i = 0, $ptr$0$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 8|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ((($0)) + 4|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = (($5) - ($3))|0;
 $7 = ($6>>>0)<($1>>>0);
 if (!($7)) {
  return;
 }
 $$arith = (($3) + ($1))|0;
 $$overflow = ($$arith>>>0)<($3>>>0);
 if ($$overflow) {
  __ZN4core6option13expect_failed17hc1eeb48c0c4a1725E(21124,17);
  // unreachable;
 }
 $8 = $5 << 1;
 $9 = ($$arith>>>0)>=($8>>>0);
 $_0$0$sroa$speculated$i$i$i = $9 ? $$arith : $8;
 $10 = ($_0$0$sroa$speculated$i$i$i|0)<(0);
 if ($10) {
  __ZN4core9panicking5panic17ha7507e8e32961bfeE(6432);
  // unreachable;
 }
 $11 = ($5|0)==(0);
 if ($11) {
  $12 = (_malloc($_0$0$sroa$speculated$i$i$i)|0);
  $ptr$0$i = $12;
 } else {
  $13 = HEAP32[$0>>2]|0;
  $14 = (_realloc($13,$_0$0$sroa$speculated$i$i$i)|0);
  $ptr$0$i = $14;
 }
 $15 = ($ptr$0$i|0)==(0|0);
 if ($15) {
  __ZN5alloc3oom3oom17hb253cf665793f59eE();
  // unreachable;
 }
 HEAP32[$0>>2] = $ptr$0$i;
 HEAP32[$4>>2] = $_0$0$sroa$speculated$i$i$i;
 return;
}
function __ZN4drop17haa6903bd5d2f7393E($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZN96__LT_core__fmt__Write__write_fmt__Adapter_LT__u27_a_C__u20_T_GT__u20_as_u20_core__fmt__Write_GT_9write_str17h1eeced7a67f656f4E_1495($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $local_len$sroa$5$0$lcssa$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = HEAP32[$0>>2]|0;
 __ZN39__LT_collections__vec__Vec_LT_T_GT__GT_7reserve17h36095f9d9422ab2dE_1492($3,$2);
 $4 = ((($3)) + 8|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ($2|0)==(0);
 if ($6) {
  $local_len$sroa$5$0$lcssa$i$i$i = $5;
  HEAP32[$4>>2] = $local_len$sroa$5$0$lcssa$i$i$i;
  return 0;
 }
 $7 = (($5) + ($2))|0;
 $8 = HEAP32[$3>>2]|0;
 $9 = (($8) + ($5)|0);
 _memcpy(($9|0),($1|0),($2|0))|0;
 $local_len$sroa$5$0$lcssa$i$i$i = $7;
 HEAP32[$4>>2] = $local_len$sroa$5$0$lcssa$i$i$i;
 return 0;
}
function __ZN96__LT_core__fmt__Write__write_fmt__Adapter_LT__u27_a_C__u20_T_GT__u20_as_u20_core__fmt__Write_GT_10write_char17h5c4b02d4e359c914E_1496($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$pre$i$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $_19$i = 0, $_19$i$1$$sroa_raw_idx = 0, $_19$i$1$$sroa_raw_idx7 = 0, $_19$i$1$$sroa_raw_idx9 = 0, $_19$i$2$$sroa_raw_idx = 0, $_19$i$2$$sroa_raw_idx11 = 0;
 var $_19$i$3$$sroa_raw_idx = 0, $len$2$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $_19$i = sp;
 $2 = HEAP32[$0>>2]|0;
 $3 = ($1>>>0)<(128);
 if ($3) {
  $4 = $1&255;
  $5 = ((($2)) + 8|0);
  $6 = HEAP32[$5>>2]|0;
  $7 = ((($2)) + 4|0);
  $8 = HEAP32[$7>>2]|0;
  $9 = ($6|0)==($8|0);
  if ($9) {
   __ZN40__LT_alloc__raw_vec__RawVec_LT_T_GT__GT_6double17h1f4ae0daeff98f24E_1499($2);
   $$pre$i$i = HEAP32[$5>>2]|0;
   $12 = $$pre$i$i;
  } else {
   $12 = $6;
  }
  $10 = HEAP32[$2>>2]|0;
  $11 = (($10) + ($12)|0);
  HEAP8[$11>>0] = $4;
  $13 = HEAP32[$5>>2]|0;
  $14 = (($13) + 1)|0;
  HEAP32[$5>>2] = $14;
  STACKTOP = sp;return 0;
 }
 HEAP32[$_19$i>>2] = 0;
 $15 = ($1>>>0)<(2048);
 do {
  if ($15) {
   $16 = $1 >>> 6;
   $17 = $16 & 31;
   $18 = $17&255;
   $19 = $18 | -64;
   HEAP8[$_19$i>>0] = $19;
   $20 = $1 & 63;
   $21 = $20&255;
   $22 = $21 | -128;
   $_19$i$1$$sroa_raw_idx9 = ((($_19$i)) + 1|0);
   HEAP8[$_19$i$1$$sroa_raw_idx9>>0] = $22;
   $len$2$i$i$i = 2;
  } else {
   $23 = ($1>>>0)<(65536);
   if ($23) {
    $24 = $1 >>> 12;
    $25 = $24 & 15;
    $26 = $25&255;
    $27 = $26 | -32;
    HEAP8[$_19$i>>0] = $27;
    $28 = $1 >>> 6;
    $29 = $28 & 63;
    $30 = $29&255;
    $31 = $30 | -128;
    $_19$i$1$$sroa_raw_idx7 = ((($_19$i)) + 1|0);
    HEAP8[$_19$i$1$$sroa_raw_idx7>>0] = $31;
    $32 = $1 & 63;
    $33 = $32&255;
    $34 = $33 | -128;
    $_19$i$2$$sroa_raw_idx11 = ((($_19$i)) + 2|0);
    HEAP8[$_19$i$2$$sroa_raw_idx11>>0] = $34;
    $len$2$i$i$i = 3;
    break;
   } else {
    $35 = $1 >>> 18;
    $36 = $35 & 7;
    $37 = $36&255;
    $38 = $37 | -16;
    HEAP8[$_19$i>>0] = $38;
    $39 = $1 >>> 12;
    $40 = $39 & 63;
    $41 = $40&255;
    $42 = $41 | -128;
    $_19$i$1$$sroa_raw_idx = ((($_19$i)) + 1|0);
    HEAP8[$_19$i$1$$sroa_raw_idx>>0] = $42;
    $43 = $1 >>> 6;
    $44 = $43 & 63;
    $45 = $44&255;
    $46 = $45 | -128;
    $_19$i$2$$sroa_raw_idx = ((($_19$i)) + 2|0);
    HEAP8[$_19$i$2$$sroa_raw_idx>>0] = $46;
    $47 = $1 & 63;
    $48 = $47&255;
    $49 = $48 | -128;
    $_19$i$3$$sroa_raw_idx = ((($_19$i)) + 3|0);
    HEAP8[$_19$i$3$$sroa_raw_idx>>0] = $49;
    $len$2$i$i$i = 4;
    break;
   }
  }
 } while(0);
 __ZN39__LT_collections__vec__Vec_LT_T_GT__GT_7reserve17h36095f9d9422ab2dE_1492($2,$len$2$i$i$i);
 $50 = ((($2)) + 8|0);
 $51 = HEAP32[$50>>2]|0;
 $52 = (($51) + ($len$2$i$i$i))|0;
 $53 = HEAP32[$2>>2]|0;
 $54 = (($53) + ($51)|0);
 _memcpy(($54|0),($_19$i|0),($len$2$i$i$i|0))|0;
 HEAP32[$50>>2] = $52;
 STACKTOP = sp;return 0;
}
function __ZN96__LT_core__fmt__Write__write_fmt__Adapter_LT__u27_a_C__u20_T_GT__u20_as_u20_core__fmt__Write_GT_9write_fmt17h760aafe66d97fe8aE_1497($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $_10$i = 0, $_8$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $_8$i = sp + 24|0;
 $_10$i = sp;
 $2 = HEAP32[$0>>2]|0;
 HEAP32[$_8$i>>2] = $2;
 ;HEAP32[$_10$i>>2]=HEAP32[$1>>2]|0;HEAP32[$_10$i+4>>2]=HEAP32[$1+4>>2]|0;HEAP32[$_10$i+8>>2]=HEAP32[$1+8>>2]|0;HEAP32[$_10$i+12>>2]=HEAP32[$1+12>>2]|0;HEAP32[$_10$i+16>>2]=HEAP32[$1+16>>2]|0;HEAP32[$_10$i+20>>2]=HEAP32[$1+20>>2]|0;
 $3 = (__ZN4core3fmt5write17hdd089a59fed6a1dbE($_8$i,1864,$_10$i)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN40__LT_alloc__raw_vec__RawVec_LT_T_GT__GT_6double17h1f4ae0daeff98f24E_1499($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $_14$sroa$0$0 = 0, $_14$sroa$5$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 4|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)==(0);
 do {
  if ($3) {
   $8 = (_malloc(4)|0);
   $_14$sroa$0$0 = 4;$_14$sroa$5$0 = $8;
  } else {
   $4 = $2 << 1;
   $5 = ($4|0)<(0);
   if ($5) {
    __ZN4core9panicking5panic17ha7507e8e32961bfeE(6432);
    // unreachable;
   } else {
    $6 = HEAP32[$0>>2]|0;
    $7 = (_realloc($6,$4)|0);
    $_14$sroa$0$0 = $4;$_14$sroa$5$0 = $7;
    break;
   }
  }
 } while(0);
 $9 = ($_14$sroa$5$0|0)==(0|0);
 if ($9) {
  __ZN5alloc3oom3oom17hb253cf665793f59eE();
  // unreachable;
 } else {
  HEAP32[$0>>2] = $_14$sroa$5$0;
  HEAP32[$1>>2] = $_14$sroa$0$0;
  return;
 }
}
function __ZN71__LT_collections__string__FromUtf8Error_u20_as_u20_core__fmt__Debug_GT_3fmt17h87a0465c1e168a01E($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$repack$i = 0, $$unpack$i = 0, $$unpack$pre$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $3 = 0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $_0$sroa$0$0$i$i = 0, $_18 = 0, $_26 = 0, $builder = 0, $switch4$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $builder = sp;
 $_18 = sp + 12|0;
 $_26 = sp + 8|0;
 $2 = ((($0)) + 12|0);
 $3 = ((($1)) + 28|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ((($1)) + 32|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ((($6)) + 12|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = (FUNCTION_TABLE_iiii[$8 & 511]($4,21144,13)|0);
 HEAP32[$builder>>2] = $1;
 $$repack$i = ((($builder)) + 4|0);
 HEAP8[$$repack$i>>0] = $9;
 $10 = ((($builder)) + 5|0);
 HEAP8[$10>>0] = 0;
 HEAP32[$_18>>2] = $0;
 (__ZN4core3fmt8builders11DebugStruct5field17hfad538a66c3eb971E($builder,21157,5,$_18,1888)|0);
 HEAP32[$_26>>2] = $2;
 (__ZN4core3fmt8builders11DebugStruct5field17hfad538a66c3eb971E($builder,21162,5,$_26,1904)|0);
 $11 = HEAP8[$10>>0]|0;
 $12 = ($11<<24>>24)==(0);
 $$unpack$pre$i = HEAP8[$$repack$i>>0]|0;
 if ($12) {
  $$unpack$i = $$unpack$pre$i;
  STACKTOP = sp;return ($$unpack$i|0);
 }
 $switch4$i$i = ($$unpack$pre$i<<24>>24)==(0);
 do {
  if ($switch4$i$i) {
   $13 = HEAP32[$builder>>2]|0;
   $14 = HEAP32[$13>>2]|0;
   $15 = $14 & 4;
   $16 = ($15|0)==(0);
   $17 = ((($13)) + 28|0);
   $18 = HEAP32[$17>>2]|0;
   $19 = ((($13)) + 32|0);
   $20 = HEAP32[$19>>2]|0;
   $21 = ((($20)) + 12|0);
   $22 = HEAP32[$21>>2]|0;
   if ($16) {
    $24 = (FUNCTION_TABLE_iiii[$22 & 511]($18,24334,2)|0);
    $_0$sroa$0$0$i$i = $24;
    break;
   } else {
    $23 = (FUNCTION_TABLE_iiii[$22 & 511]($18,24332,2)|0);
    $_0$sroa$0$0$i$i = $23;
    break;
   }
  } else {
   $_0$sroa$0$0$i$i = 1;
  }
 } while(0);
 HEAP8[$$repack$i>>0] = $_0$sroa$0$0$i$i;
 $$unpack$i = $_0$sroa$0$0$i$i;
 STACKTOP = sp;return ($$unpack$i|0);
}
function __ZN53__LT__RF__u27_a_u20_T_u20_as_u20_core__fmt__Debug_GT_3fmt17h488ac20bd8e6e6fbE_1520($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$repack$i$i$i = 0, $$unpack$i$i = 0, $$unpack$pre$i$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $3 = 0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $_0$sroa$0$0$i$i$i = 0, $_17$i = 0, $builder$i = 0, $switch4$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $builder$i = sp;
 $_17$i = sp + 8|0;
 $2 = HEAP32[$0>>2]|0;
 $3 = ((($1)) + 28|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ((($1)) + 32|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ((($6)) + 12|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = (FUNCTION_TABLE_iiii[$8 & 511]($4,24498,9)|0);
 HEAP32[$builder$i>>2] = $1;
 $$repack$i$i$i = ((($builder$i)) + 4|0);
 HEAP8[$$repack$i$i$i>>0] = $9;
 $10 = ((($builder$i)) + 5|0);
 HEAP8[$10>>0] = 0;
 HEAP32[$_17$i>>2] = $2;
 (__ZN4core3fmt8builders11DebugStruct5field17hfad538a66c3eb971E($builder$i,24507,11,$_17$i,5016)|0);
 $11 = HEAP8[$10>>0]|0;
 $12 = ($11<<24>>24)==(0);
 $$unpack$pre$i$i = HEAP8[$$repack$i$i$i>>0]|0;
 if ($12) {
  $$unpack$i$i = $$unpack$pre$i$i;
  STACKTOP = sp;return ($$unpack$i$i|0);
 }
 $switch4$i$i$i = ($$unpack$pre$i$i<<24>>24)==(0);
 do {
  if ($switch4$i$i$i) {
   $13 = HEAP32[$builder$i>>2]|0;
   $14 = HEAP32[$13>>2]|0;
   $15 = $14 & 4;
   $16 = ($15|0)==(0);
   $17 = ((($13)) + 28|0);
   $18 = HEAP32[$17>>2]|0;
   $19 = ((($13)) + 32|0);
   $20 = HEAP32[$19>>2]|0;
   $21 = ((($20)) + 12|0);
   $22 = HEAP32[$21>>2]|0;
   if ($16) {
    $24 = (FUNCTION_TABLE_iiii[$22 & 511]($18,24334,2)|0);
    $_0$sroa$0$0$i$i$i = $24;
    break;
   } else {
    $23 = (FUNCTION_TABLE_iiii[$22 & 511]($18,24332,2)|0);
    $_0$sroa$0$0$i$i$i = $23;
    break;
   }
  } else {
   $_0$sroa$0$0$i$i$i = 1;
  }
 } while(0);
 HEAP8[$$repack$i$i$i>>0] = $_0$sroa$0$0$i$i$i;
 $$unpack$i$i = $_0$sroa$0$0$i$i$i;
 STACKTOP = sp;return ($$unpack$i$i|0);
}
function __ZN53__LT__RF__u27_a_u20_T_u20_as_u20_core__fmt__Debug_GT_3fmt17h44630bd8bc14edf4E_1521($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$lobit = 0, $$pre = 0, $$unpack$i$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $_0$sroa$0$0$i$i = 0, $_12$sroa$4$0$$sroa_idx$i = 0;
 var $_12$sroa$5$0$$sroa_idx$i = 0, $_5$sroa$4$0$$sroa_idx11$i = 0, $_5$sroa$5$0$$sroa_idx13$i = 0, $_5$sroa$616$0$$sroa_idx18$i = 0, $_5$sroa$7$0$$sroa_idx20$i = 0, $_7$i$i = 0, $_8$i$i = 0, $entry$i$i$i = 0, $or$cond = 0, $prefix$sroa$0$0$i$i = 0, $prefix$sroa$5$0$i$i = 0, $switch3$i$i$i = 0, $switch4$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $_7$i$i = sp + 8|0;
 $entry$i$i$i = sp + 32|0;
 $_8$i$i = sp;
 $2 = HEAP32[$0>>2]|0;
 $3 = HEAP32[$2>>2]|0;
 $4 = ((($2)) + 8|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ((($1)) + 28|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ((($1)) + 32|0);
 $9 = HEAP32[$8>>2]|0;
 HEAP32[$_7$i$i>>2] = 7584;
 $_5$sroa$4$0$$sroa_idx11$i = ((($_7$i$i)) + 4|0);
 HEAP32[$_5$sroa$4$0$$sroa_idx11$i>>2] = 1;
 $_5$sroa$5$0$$sroa_idx13$i = ((($_7$i$i)) + 8|0);
 HEAP32[$_5$sroa$5$0$$sroa_idx13$i>>2] = 0;
 $_5$sroa$616$0$$sroa_idx18$i = ((($_7$i$i)) + 16|0);
 HEAP32[$_5$sroa$616$0$$sroa_idx18$i>>2] = 26744;
 $_5$sroa$7$0$$sroa_idx20$i = ((($_7$i$i)) + 20|0);
 HEAP32[$_5$sroa$7$0$$sroa_idx20$i>>2] = 0;
 $10 = (__ZN4core3fmt5write17hdd089a59fed6a1dbE($7,$9,$_7$i$i)|0);
 HEAP32[$_8$i$i>>2] = $1;
 $_12$sroa$4$0$$sroa_idx$i = ((($_8$i$i)) + 4|0);
 HEAP8[$_12$sroa$4$0$$sroa_idx$i>>0] = $10;
 $_12$sroa$5$0$$sroa_idx$i = ((($_8$i$i)) + 5|0);
 HEAP8[$_12$sroa$5$0$$sroa_idx$i>>0] = 0;
 $11 = (($3) + ($5)|0);
 $12 = ($5|0)==(0);
 if ($12) {
  $17 = $1;
 } else {
  $14 = $3;
  while(1) {
   $13 = ((($14)) + 1|0);
   HEAP32[$entry$i$i$i>>2] = $14;
   __ZN4core3fmt8builders9DebugList5entry17ha312dc2888088769E($_8$i$i,$entry$i$i$i,1920);
   $15 = ($13|0)==($11|0);
   if ($15) {
    break;
   } else {
    $14 = $13;
   }
  }
  $$pre = HEAP32[$_8$i$i>>2]|0;
  $17 = $$pre;
 }
 $16 = HEAP32[$17>>2]|0;
 $18 = $16 & 4;
 $19 = HEAP8[$_12$sroa$5$0$$sroa_idx$i>>0]|0;
 $20 = ($19<<24>>24)==(0);
 $$unpack$i$i = HEAP8[$_12$sroa$4$0$$sroa_idx$i>>0]|0;
 $switch3$i$i$i = ($$unpack$i$i<<24>>24)==(0);
 if (!($switch3$i$i$i)) {
  HEAP8[$_12$sroa$4$0$$sroa_idx$i>>0] = 1;
  $_0$sroa$0$0$i$i = 1;
  STACKTOP = sp;return ($_0$sroa$0$0$i$i|0);
 }
 $21 = ($18|0)==(0);
 $or$cond = $21 | $20;
 $prefix$sroa$0$0$i$i = $or$cond ? 27292 : 24042;
 $$lobit = $18 >>> 2;
 $22 = $$lobit ^ 1;
 $23 = $20&1;
 $24 = $22 | $23;
 $prefix$sroa$5$0$i$i = $24 ^ 1;
 $25 = ((($17)) + 28|0);
 $26 = HEAP32[$25>>2]|0;
 $27 = ((($17)) + 32|0);
 $28 = HEAP32[$27>>2]|0;
 $29 = ((($28)) + 12|0);
 $30 = HEAP32[$29>>2]|0;
 $31 = (FUNCTION_TABLE_iiii[$30 & 511]($26,$prefix$sroa$0$0$i$i,$prefix$sroa$5$0$i$i)|0);
 HEAP8[$_12$sroa$4$0$$sroa_idx$i>>0] = $31;
 $switch4$i$i = ($31<<24>>24)==(0);
 if (!($switch4$i$i)) {
  $_0$sroa$0$0$i$i = 1;
  STACKTOP = sp;return ($_0$sroa$0$0$i$i|0);
 }
 $32 = HEAP32[$25>>2]|0;
 $33 = HEAP32[$27>>2]|0;
 $34 = ((($33)) + 12|0);
 $35 = HEAP32[$34>>2]|0;
 $36 = (FUNCTION_TABLE_iiii[$35 & 511]($32,18813,1)|0);
 $_0$sroa$0$0$i$i = $36;
 STACKTOP = sp;return ($_0$sroa$0$0$i$i|0);
}
function __ZN53__LT__RF__u27_a_u20_T_u20_as_u20_core__fmt__Debug_GT_3fmt17h8e81f4ddc79f6ebcE_1522($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, $buf31$i$i = 0, $curr$232$i$i = 0, $curr$3$i$i = 0, $div$i$i = 0, $n1$033$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $buf31$i$i = sp;
 $2 = HEAP32[$0>>2]|0;
 $3 = HEAP8[$2>>0]|0;
 $4 = $3&255;
 $5 = ($3&255)>(99);
 if ($5) {
  $6 = (($3&255) % 100)&-1;
  $7 = $6&255;
  $8 = $7 << 1;
  $div$i$i = (($3&255) / 100)&-1;
  $9 = $div$i$i&255;
  $10 = (22704 + ($8)|0);
  $11 = ((($buf31$i$i)) + 18|0);
  $12 = HEAPU8[$10>>0]|(HEAPU8[$10+1>>0]<<8);
  HEAP8[$11>>0]=$12&255;HEAP8[$11+1>>0]=$12>>8;
  $curr$232$i$i = 17;$n1$033$i$i = $9;
  label = 4;
 } else {
  $13 = ($3&255)<(10);
  if ($13) {
   $curr$232$i$i = 19;$n1$033$i$i = $4;
   label = 4;
  } else {
   $17 = $4 << 1;
   $18 = (22704 + ($17)|0);
   $19 = ((($buf31$i$i)) + 18|0);
   $20 = HEAPU8[$18>>0]|(HEAPU8[$18+1>>0]<<8);
   HEAP8[$19>>0]=$20&255;HEAP8[$19+1>>0]=$20>>8;
   $curr$3$i$i = 18;
  }
 }
 if ((label|0) == 4) {
  $14 = $n1$033$i$i&255;
  $15 = (($buf31$i$i) + ($curr$232$i$i)|0);
  $16 = (($14) + 48)<<24>>24;
  HEAP8[$15>>0] = $16;
  $curr$3$i$i = $curr$232$i$i;
 }
 $21 = (($buf31$i$i) + ($curr$3$i$i)|0);
 $22 = (20 - ($curr$3$i$i))|0;
 $23 = (__ZN4core3fmt9Formatter12pad_integral17h30369de78b61ed24E($1,1,27292,0,$21,$22)|0);
 STACKTOP = sp;return ($23|0);
}
function __ZN5alloc3oom3oom17hb253cf665793f59eE() {
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[1613]|0;
 $1 = $0;
 FUNCTION_TABLE_v[$1 & 511]();
 // unreachable;
}
function __ZN5alloc3oom19default_oom_handler17h6c914191f9c07ce5E() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 _llvm_trap();
 // unreachable;
}
function __ZN13rustc_unicode6tables16general_category1N17h2efcec0f2ead4b82E($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0>>>0)<(2048);
 if ($1) {
  $2 = $0 >>> 6;
  $3 = (1936 + ($2<<3)|0);
  $4 = $3;
  $5 = $4;
  $6 = HEAP32[$5>>2]|0;
  $7 = (($4) + 4)|0;
  $8 = $7;
  $9 = HEAP32[$8>>2]|0;
  $10 = $0 & 63;
  $11 = (_bitshift64Shl(1,0,($10|0))|0);
  $12 = tempRet0;
  $13 = $6 & $11;
  $14 = $9 & $12;
  $61 = $13;$63 = $14;
  $62 = ($61|0)!=(0);
  $64 = ($63|0)!=(0);
  $65 = $62 | $64;
  return ($65|0);
 }
 $15 = ($0>>>0)<(65536);
 if ($15) {
  $16 = $0 >>> 6;
  $17 = (($16) + -32)|0;
  $18 = ($17>>>0)<(992);
  if (!($18)) {
   __ZN4core9panicking18panic_bounds_check17hd14a5808e41829e9E(21431,99,524,$17,992);
   // unreachable;
  }
  $19 = (2192 + ($17)|0);
  $20 = HEAP8[$19>>0]|0;
  $21 = $20&255;
  $22 = ($20&255)<(13);
  if (!($22)) {
   __ZN4core9panicking18panic_bounds_check17hd14a5808e41829e9E(21322,109,63,$21,13);
   // unreachable;
  }
  $49 = (3464 + ($21<<3)|0);
  $50 = $49;
  $51 = $50;
  $52 = HEAP32[$51>>2]|0;
  $53 = (($50) + 4)|0;
  $54 = $53;
  $55 = HEAP32[$54>>2]|0;
  $56 = $0 & 63;
  $57 = (_bitshift64Shl(1,0,($56|0))|0);
  $58 = tempRet0;
  $59 = $52 & $57;
  $60 = $55 & $58;
  $61 = $59;$63 = $60;
  $62 = ($61|0)!=(0);
  $64 = ($63|0)!=(0);
  $65 = $62 | $64;
  return ($65|0);
 } else {
  $23 = $0 >>> 12;
  $24 = (($23) + -16)|0;
  $25 = ($24>>>0)<(256);
  if (!($25)) {
   __ZN4core9panicking18panic_bounds_check17hd14a5808e41829e9E(21431,99,524,$24,256);
   // unreachable;
  }
  $26 = (3192 + ($24)|0);
  $27 = HEAP8[$26>>0]|0;
  $28 = $27&255;
  $29 = $28 << 6;
  $30 = $0 >>> 6;
  $31 = $30 & 63;
  $32 = $29 | $31;
  $33 = ($32>>>0)<(448);
  if (!($33)) {
   __ZN4core9panicking18panic_bounds_check17hd14a5808e41829e9E(21431,99,524,$32,448);
   // unreachable;
  }
  $34 = (21530 + ($32)|0);
  $35 = HEAP8[$34>>0]|0;
  $36 = $35&255;
  $37 = (3568 + ($36<<3)|0);
  $38 = $37;
  $39 = $38;
  $40 = HEAP32[$39>>2]|0;
  $41 = (($38) + 4)|0;
  $42 = $41;
  $43 = HEAP32[$42>>2]|0;
  $44 = $0 & 63;
  $45 = (_bitshift64Shl(1,0,($44|0))|0);
  $46 = tempRet0;
  $47 = $40 & $45;
  $48 = $43 & $46;
  $61 = $47;$63 = $48;
  $62 = ($61|0)!=(0);
  $64 = ($63|0)!=(0);
  $65 = $62 | $64;
  return ($65|0);
 }
 return (0)|0;
}
function __ZN4core3num7flt2dec8strategy6dragon9mul_pow1017hbc61c3a21b88eb42E($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0;
 var $9 = 0, $carry$021$i = 0, $carry$021$i5 = 0, $iter$sroa$0$0$in20$i = 0, $iter$sroa$0$0$in20$i6 = 0, $ret$i = 0, $retsz$0$i = 0, $retsz$0$i16 = 0, $retsz$0$i24 = 0, $retsz$0$i32 = 0, $retsz$0$i40 = 0, $sz$0$i = 0, $sz$0$i10 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 160|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(160|0);
 $ret$i = sp;
 $2 = $1 & 7;
 $3 = ($2|0)==(0);
 if (!($3)) {
  $4 = (6556 + ($2<<2)|0);
  $5 = HEAP32[$4>>2]|0;
  $6 = HEAP32[$0>>2]|0;
  $7 = ($6>>>0)>(40);
  if ($7) {
   __ZN4core5slice20slice_index_len_fail17hed923256c072a803E($6,40);
   // unreachable;
  }
  $8 = (((($0)) + 4|0) + ($6<<2)|0);
  $9 = ($6|0)==(0);
  do {
   if ($9) {
    $sz$0$i = 0;
   } else {
    $10 = ((($0)) + 4|0);
    $carry$021$i = 0;$iter$sroa$0$0$in20$i = $10;
    while(1) {
     $13 = ((($iter$sroa$0$0$in20$i)) + 4|0);
     $14 = HEAP32[$iter$sroa$0$0$in20$i>>2]|0;
     $15 = (___muldi3(($14|0),0,($5|0),0)|0);
     $16 = tempRet0;
     $17 = (_i64Add(($15|0),($16|0),($carry$021$i|0),0)|0);
     $11 = tempRet0;
     HEAP32[$iter$sroa$0$0$in20$i>>2] = $17;
     $18 = ($13|0)==($8|0);
     if ($18) {
      break;
     } else {
      $carry$021$i = $11;$iter$sroa$0$0$in20$i = $13;
     }
    }
    $12 = ($11|0)==(0);
    if ($12) {
     $sz$0$i = $6;
    } else {
     $19 = ($6>>>0)<(40);
     if ($19) {
      HEAP32[$8>>2] = $11;
      $20 = (($6) + 1)|0;
      $sz$0$i = $20;
      break;
     } else {
      __ZN4core9panicking18panic_bounds_check17hd14a5808e41829e9E(22904,104,267,$6,40);
      // unreachable;
     }
    }
   }
  } while(0);
  HEAP32[$0>>2] = $sz$0$i;
 }
 $21 = $1 & 8;
 $22 = ($21|0)==(0);
 if (!($22)) {
  $23 = HEAP32[$0>>2]|0;
  $24 = ($23>>>0)>(40);
  if ($24) {
   __ZN4core5slice20slice_index_len_fail17hed923256c072a803E($23,40);
   // unreachable;
  }
  $25 = (((($0)) + 4|0) + ($23<<2)|0);
  $26 = ($23|0)==(0);
  do {
   if ($26) {
    $sz$0$i10 = 0;
   } else {
    $27 = ((($0)) + 4|0);
    $carry$021$i5 = 0;$iter$sroa$0$0$in20$i6 = $27;
    while(1) {
     $30 = ((($iter$sroa$0$0$in20$i6)) + 4|0);
     $31 = HEAP32[$iter$sroa$0$0$in20$i6>>2]|0;
     $32 = (___muldi3(($31|0),0,100000000,0)|0);
     $33 = tempRet0;
     $34 = (_i64Add(($32|0),($33|0),($carry$021$i5|0),0)|0);
     $28 = tempRet0;
     HEAP32[$iter$sroa$0$0$in20$i6>>2] = $34;
     $35 = ($30|0)==($25|0);
     if ($35) {
      break;
     } else {
      $carry$021$i5 = $28;$iter$sroa$0$0$in20$i6 = $30;
     }
    }
    $29 = ($28|0)==(0);
    if ($29) {
     $sz$0$i10 = $23;
    } else {
     $36 = ($23>>>0)<(40);
     if ($36) {
      HEAP32[$25>>2] = $28;
      $37 = (($23) + 1)|0;
      $sz$0$i10 = $37;
      break;
     } else {
      __ZN4core9panicking18panic_bounds_check17hd14a5808e41829e9E(22904,104,267,$23,40);
      // unreachable;
     }
    }
   }
  } while(0);
  HEAP32[$0>>2] = $sz$0$i10;
 }
 $38 = $1 & 16;
 $39 = ($38|0)==(0);
 if (!($39)) {
  _memset(($ret$i|0),0,160)|0;
  $40 = HEAP32[$0>>2]|0;
  $41 = ($40>>>0)>(40);
  if ($41) {
   __ZN4core5slice20slice_index_len_fail17hed923256c072a803E($40,40);
   // unreachable;
  }
  $45 = ($40>>>0)<(2);
  $42 = ((($0)) + 4|0);
  if ($45) {
   $43 = (__ZN4core3num6bignum8Big32x4010mul_digits9mul_inner17heb03439790ec8c52E($ret$i,$42,$40,6596,2)|0);
   $retsz$0$i16 = $43;
  } else {
   $44 = (__ZN4core3num6bignum8Big32x4010mul_digits9mul_inner17heb03439790ec8c52E($ret$i,6596,2,$42,$40)|0);
   $retsz$0$i16 = $44;
  }
  $46 = ((($0)) + 4|0);
  _memcpy(($46|0),($ret$i|0),160)|0;
  HEAP32[$0>>2] = $retsz$0$i16;
 }
 $47 = $1 & 32;
 $48 = ($47|0)==(0);
 if (!($48)) {
  _memset(($ret$i|0),0,160)|0;
  $49 = HEAP32[$0>>2]|0;
  $50 = ($49>>>0)>(40);
  if ($50) {
   __ZN4core5slice20slice_index_len_fail17hed923256c072a803E($49,40);
   // unreachable;
  }
  $54 = ($49>>>0)<(4);
  $51 = ((($0)) + 4|0);
  if ($54) {
   $52 = (__ZN4core3num6bignum8Big32x4010mul_digits9mul_inner17heb03439790ec8c52E($ret$i,$51,$49,6604,4)|0);
   $retsz$0$i24 = $52;
  } else {
   $53 = (__ZN4core3num6bignum8Big32x4010mul_digits9mul_inner17heb03439790ec8c52E($ret$i,6604,4,$51,$49)|0);
   $retsz$0$i24 = $53;
  }
  $55 = ((($0)) + 4|0);
  _memcpy(($55|0),($ret$i|0),160)|0;
  HEAP32[$0>>2] = $retsz$0$i24;
 }
 $56 = $1 & 64;
 $57 = ($56|0)==(0);
 if (!($57)) {
  _memset(($ret$i|0),0,160)|0;
  $58 = HEAP32[$0>>2]|0;
  $59 = ($58>>>0)>(40);
  if ($59) {
   __ZN4core5slice20slice_index_len_fail17hed923256c072a803E($58,40);
   // unreachable;
  }
  $63 = ($58>>>0)<(7);
  $60 = ((($0)) + 4|0);
  if ($63) {
   $61 = (__ZN4core3num6bignum8Big32x4010mul_digits9mul_inner17heb03439790ec8c52E($ret$i,$60,$58,6620,7)|0);
   $retsz$0$i32 = $61;
  } else {
   $62 = (__ZN4core3num6bignum8Big32x4010mul_digits9mul_inner17heb03439790ec8c52E($ret$i,6620,7,$60,$58)|0);
   $retsz$0$i32 = $62;
  }
  $64 = ((($0)) + 4|0);
  _memcpy(($64|0),($ret$i|0),160)|0;
  HEAP32[$0>>2] = $retsz$0$i32;
 }
 $65 = $1 & 128;
 $66 = ($65|0)==(0);
 if (!($66)) {
  _memset(($ret$i|0),0,160)|0;
  $67 = HEAP32[$0>>2]|0;
  $68 = ($67>>>0)>(40);
  if ($68) {
   __ZN4core5slice20slice_index_len_fail17hed923256c072a803E($67,40);
   // unreachable;
  }
  $72 = ($67>>>0)<(14);
  $69 = ((($0)) + 4|0);
  if ($72) {
   $70 = (__ZN4core3num6bignum8Big32x4010mul_digits9mul_inner17heb03439790ec8c52E($ret$i,$69,$67,6648,14)|0);
   $retsz$0$i40 = $70;
  } else {
   $71 = (__ZN4core3num6bignum8Big32x4010mul_digits9mul_inner17heb03439790ec8c52E($ret$i,6648,14,$69,$67)|0);
   $retsz$0$i40 = $71;
  }
  $73 = ((($0)) + 4|0);
  _memcpy(($73|0),($ret$i|0),160)|0;
  HEAP32[$0>>2] = $retsz$0$i40;
 }
 $74 = $1 & 256;
 $75 = ($74|0)==(0);
 if ($75) {
  STACKTOP = sp;return;
 }
 _memset(($ret$i|0),0,160)|0;
 $76 = HEAP32[$0>>2]|0;
 $77 = ($76>>>0)>(40);
 if ($77) {
  __ZN4core5slice20slice_index_len_fail17hed923256c072a803E($76,40);
  // unreachable;
 }
 $81 = ($76>>>0)<(27);
 $78 = ((($0)) + 4|0);
 if ($81) {
  $79 = (__ZN4core3num6bignum8Big32x4010mul_digits9mul_inner17heb03439790ec8c52E($ret$i,$78,$76,6704,27)|0);
  $retsz$0$i = $79;
 } else {
  $80 = (__ZN4core3num6bignum8Big32x4010mul_digits9mul_inner17heb03439790ec8c52E($ret$i,6704,27,$78,$76)|0);
  $retsz$0$i = $80;
 }
 $82 = ((($0)) + 4|0);
 _memcpy(($82|0),($ret$i|0),160)|0;
 HEAP32[$0>>2] = $retsz$0$i;
 STACKTOP = sp;return;
}
function __ZN4core5slice20slice_index_len_fail17hed923256c072a803E($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $_12 = 0, $_6$sroa$0$0$$sroa_idx$i = 0, $_7 = 0, $index = 0, $len = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $index = sp + 44|0;
 $len = sp + 40|0;
 $_7 = sp + 16|0;
 $_12 = sp;
 HEAP32[$index>>2] = $0;
 HEAP32[$len>>2] = $1;
 $2 = $index;
 $3 = $len;
 HEAP32[$_12>>2] = $2;
 $4 = ((($_12)) + 4|0);
 HEAP32[$4>>2] = (264);
 $5 = ((($_12)) + 8|0);
 HEAP32[$5>>2] = $3;
 $6 = ((($_12)) + 12|0);
 HEAP32[$6>>2] = (264);
 HEAP32[$_7>>2] = 6828;
 $7 = ((($_7)) + 4|0);
 HEAP32[$7>>2] = 2;
 $_6$sroa$0$0$$sroa_idx$i = ((($_7)) + 8|0);
 HEAP32[$_6$sroa$0$0$$sroa_idx$i>>2] = 0;
 $8 = ((($_7)) + 16|0);
 HEAP32[$8>>2] = $_12;
 $9 = ((($_7)) + 20|0);
 HEAP32[$9>>2] = 2;
 __ZN4core9panicking9panic_fmt17hfa35599633a0afa2E($_7,22426,99,541);
 // unreachable;
}
function __ZN4core9panicking18panic_bounds_check17hd14a5808e41829e9E($$0$0$0$val,$$0$0$1$val,$$0$1$val,$0,$1) {
 $$0$0$0$val = $$0$0$0$val|0;
 $$0$0$1$val = $$0$0$1$val|0;
 $$0$1$val = $$0$1$val|0;
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $_13 = 0, $_6$sroa$0$0$$sroa_idx$i = 0, $_8 = 0, $index = 0, $len = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $index = sp + 44|0;
 $len = sp + 40|0;
 $_8 = sp + 16|0;
 $_13 = sp;
 HEAP32[$index>>2] = $0;
 HEAP32[$len>>2] = $1;
 $2 = $len;
 $3 = $index;
 HEAP32[$_13>>2] = $2;
 $4 = ((($_13)) + 4|0);
 HEAP32[$4>>2] = (264);
 $5 = ((($_13)) + 8|0);
 HEAP32[$5>>2] = $3;
 $6 = ((($_13)) + 12|0);
 HEAP32[$6>>2] = (264);
 HEAP32[$_8>>2] = 6812;
 $7 = ((($_8)) + 4|0);
 HEAP32[$7>>2] = 2;
 $_6$sroa$0$0$$sroa_idx$i = ((($_8)) + 8|0);
 HEAP32[$_6$sroa$0$0$$sroa_idx$i>>2] = 0;
 $8 = ((($_8)) + 16|0);
 HEAP32[$8>>2] = $_13;
 $9 = ((($_8)) + 20|0);
 HEAP32[$9>>2] = 2;
 __ZN4core9panicking9panic_fmt17hfa35599633a0afa2E($_8,$$0$0$0$val,$$0$0$1$val,$$0$1$val);
 // unreachable;
}
function __ZN4core3num6bignum8Big32x4010mul_digits9mul_inner17heb03439790ec8c52E($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$retsz$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $_16$sroa$0$0 = 0, $_16$sroa$0$0$iter$sroa$6$0 = 0, $_16$sroa$0$0$ph = 0, $_36$sroa$0$1$iter2$sroa$6$0 = 0, $_36$sroa$0$1$iter2$sroa$6$093 = 0;
 var $carry$090 = 0, $iter$sroa$0$0 = 0, $iter$sroa$0$0$ = 0, $iter$sroa$0$0$ph = 0, $iter$sroa$6$0 = 0, $iter$sroa$6$0$ = 0, $iter$sroa$6$0$ph = 0, $iter2$sroa$0$0$ = 0, $iter2$sroa$0$0$92 = 0, $iter2$sroa$0$089 = 0, $iter2$sroa$0$089$phi = 0, $iter2$sroa$6$0$ = 0, $iter2$sroa$6$0$91 = 0, $retsz$0$ph = 0, $switch3tmp = 0, $switch3tmp75 = 0, $switchtmp = 0, $switchtmp74 = 0, $sz$0 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $5 = (($1) + ($2<<2)|0);
 $6 = (($3) + ($4<<2)|0);
 $7 = ($4|0)==(0);
 $8 = ((($3)) + 4|0);
 $9 = $7&1;
 $10 = $9 ^ 1;
 $11 = (($4) + 1)|0;
 $_16$sroa$0$0$ph = 0;$iter$sroa$0$0$ph = $1;$iter$sroa$6$0$ph = 0;$retsz$0$ph = 0;
 L1: while(1) {
  $_16$sroa$0$0 = $_16$sroa$0$0$ph;$iter$sroa$0$0 = $iter$sroa$0$0$ph;$iter$sroa$6$0 = $iter$sroa$6$0$ph;
  while(1) {
   $12 = ($iter$sroa$0$0|0)==($5|0);
   $13 = ((($iter$sroa$0$0)) + 4|0);
   $_16$sroa$0$0$iter$sroa$6$0 = $12 ? $_16$sroa$0$0 : $iter$sroa$6$0;
   $iter$sroa$0$0$ = $12 ? $iter$sroa$0$0 : $13;
   $14 = $12&1;
   $15 = $14 ^ 1;
   $iter$sroa$6$0$ = (($15) + ($iter$sroa$6$0))|0;
   $switchtmp74 = ($iter$sroa$0$0|0)==(0|0);
   $switchtmp = $12 | $switchtmp74;
   if ($switchtmp) {
    label = 4;
    break L1;
   }
   $16 = HEAP32[$iter$sroa$0$0>>2]|0;
   $17 = ($16|0)==(0);
   if ($17) {
    $_16$sroa$0$0 = $_16$sroa$0$0$iter$sroa$6$0;$iter$sroa$0$0 = $iter$sroa$0$0$;$iter$sroa$6$0 = $iter$sroa$6$0$;
   } else {
    break;
   }
  }
  if ($7) {
   $sz$0 = 0;
  } else {
   $_36$sroa$0$1$iter2$sroa$6$093 = 0;$carry$090 = 0;$iter2$sroa$0$0$92 = $8;$iter2$sroa$0$089 = $3;$iter2$sroa$6$0$91 = $10;
   while(1) {
    $20 = (($_36$sroa$0$1$iter2$sroa$6$093) + ($_16$sroa$0$0$iter$sroa$6$0))|0;
    $21 = ($20>>>0)<(40);
    if (!($21)) {
     label = 10;
     break L1;
    }
    $22 = HEAP32[$iter2$sroa$0$089>>2]|0;
    $23 = (($0) + ($20<<2)|0);
    $24 = HEAP32[$23>>2]|0;
    $25 = (___muldi3(($22|0),0,($16|0),0)|0);
    $26 = tempRet0;
    $27 = (_i64Add(($24|0),0,($carry$090|0),0)|0);
    $28 = tempRet0;
    $29 = (_i64Add(($27|0),($28|0),($25|0),($26|0))|0);
    $18 = tempRet0;
    HEAP32[$23>>2] = $29;
    $30 = ($iter2$sroa$0$0$92|0)==($6|0);
    $31 = ((($iter2$sroa$0$0$92)) + 4|0);
    $32 = $30&1;
    $33 = $32 ^ 1;
    $iter2$sroa$6$0$ = (($33) + ($iter2$sroa$6$0$91))|0;
    $iter2$sroa$0$0$ = $30 ? $iter2$sroa$0$0$92 : $31;
    $_36$sroa$0$1$iter2$sroa$6$0 = $30 ? $_36$sroa$0$1$iter2$sroa$6$093 : $iter2$sroa$6$0$91;
    $switch3tmp75 = ($iter2$sroa$0$0$92|0)==(0|0);
    $switch3tmp = $30 | $switch3tmp75;
    if ($switch3tmp) {
     break;
    } else {
     $iter2$sroa$0$089$phi = $iter2$sroa$0$0$92;$_36$sroa$0$1$iter2$sroa$6$093 = $_36$sroa$0$1$iter2$sroa$6$0;$carry$090 = $18;$iter2$sroa$0$0$92 = $iter2$sroa$0$0$;$iter2$sroa$6$0$91 = $iter2$sroa$6$0$;$iter2$sroa$0$089 = $iter2$sroa$0$089$phi;
    }
   }
   $19 = ($18|0)==(0);
   if ($19) {
    $sz$0 = $4;
   } else {
    $34 = (($_16$sroa$0$0$iter$sroa$6$0) + ($4))|0;
    $35 = ($34>>>0)<(40);
    if (!($35)) {
     label = 13;
     break;
    }
    $36 = (($0) + ($34<<2)|0);
    HEAP32[$36>>2] = $18;
    $sz$0 = $11;
   }
  }
  $37 = (($sz$0) + ($_16$sroa$0$0$iter$sroa$6$0))|0;
  $38 = ($retsz$0$ph>>>0)<($37>>>0);
  $$retsz$0 = $38 ? $37 : $retsz$0$ph;
  $_16$sroa$0$0$ph = $_16$sroa$0$0$iter$sroa$6$0;$iter$sroa$0$0$ph = $iter$sroa$0$0$;$iter$sroa$6$0$ph = $iter$sroa$6$0$;$retsz$0$ph = $$retsz$0;
 }
 if ((label|0) == 4) {
  return ($retsz$0$ph|0);
 }
 else if ((label|0) == 10) {
  __ZN4core9panicking18panic_bounds_check17hd14a5808e41829e9E(22426,99,524,$20,40);
  // unreachable;
 }
 else if ((label|0) == 13) {
  __ZN4core9panicking18panic_bounds_check17hd14a5808e41829e9E(22426,99,534,$34,40);
  // unreachable;
 }
 return (0)|0;
}
function __ZN4core3fmt3num54__LT_impl_u20_core__fmt__Display_u20_for_u20_usize_GT_3fmt17hfc58b44c96803197E($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$old5 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $buf31 = 0, $curr$0 = 0;
 var $curr$1 = 0, $curr$2 = 0, $curr$3 = 0, $n$1 = 0, $n$2 = 0, $n1$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $buf31 = sp;
 $2 = HEAP32[$0>>2]|0;
 $3 = ($2>>>0)>(9999);
 if ($3) {
  $curr$0 = 20;$n$1 = $2;
  while(1) {
   $4 = (($n$1>>>0) % 10000)&-1;
   $5 = (($n$1>>>0) / 10000)&-1;
   $6 = (($4>>>0) / 100)&-1;
   $7 = $6 << 1;
   $8 = (($4>>>0) % 100)&-1;
   $9 = $8 << 1;
   $10 = (($curr$0) + -4)|0;
   $11 = (22704 + ($7)|0);
   $12 = (($buf31) + ($10)|0);
   $13 = HEAPU8[$11>>0]|(HEAPU8[$11+1>>0]<<8);
   HEAP8[$12>>0]=$13&255;HEAP8[$12+1>>0]=$13>>8;
   $14 = (22704 + ($9)|0);
   $15 = (($curr$0) + -2)|0;
   $16 = (($buf31) + ($15)|0);
   $17 = HEAPU8[$14>>0]|(HEAPU8[$14+1>>0]<<8);
   HEAP8[$16>>0]=$17&255;HEAP8[$16+1>>0]=$17>>8;
   $$old5 = ($n$1>>>0)>(99999999);
   if ($$old5) {
    $curr$0 = $10;$n$1 = $5;
   } else {
    $curr$1 = $10;$n$2 = $5;
    break;
   }
  }
 } else {
  $curr$1 = 20;$n$2 = $2;
 }
 $18 = ($n$2|0)>(99);
 if ($18) {
  $19 = (($n$2>>>0) % 100)&-1;
  $20 = $19 << 1;
  $21 = (($n$2>>>0) / 100)&-1;
  $22 = (($curr$1) + -2)|0;
  $23 = (22704 + ($20)|0);
  $24 = (($buf31) + ($22)|0);
  $25 = HEAPU8[$23>>0]|(HEAPU8[$23+1>>0]<<8);
  HEAP8[$24>>0]=$25&255;HEAP8[$24+1>>0]=$25>>8;
  $curr$2 = $22;$n1$0 = $21;
 } else {
  $curr$2 = $curr$1;$n1$0 = $n$2;
 }
 $26 = ($n1$0|0)<(10);
 if ($26) {
  $27 = (($curr$2) + -1)|0;
  $28 = $n1$0&255;
  $29 = (($buf31) + ($27)|0);
  $30 = (($28) + 48)<<24>>24;
  HEAP8[$29>>0] = $30;
  $curr$3 = $27;
  $36 = (($buf31) + ($curr$3)|0);
  $37 = (20 - ($curr$3))|0;
  $38 = (__ZN4core3fmt9Formatter12pad_integral17h30369de78b61ed24E($1,1,27292,0,$36,$37)|0);
  STACKTOP = sp;return ($38|0);
 } else {
  $31 = $n1$0 << 1;
  $32 = (($curr$2) + -2)|0;
  $33 = (22704 + ($31)|0);
  $34 = (($buf31) + ($32)|0);
  $35 = HEAPU8[$33>>0]|(HEAPU8[$33+1>>0]<<8);
  HEAP8[$34>>0]=$35&255;HEAP8[$34+1>>0]=$35>>8;
  $curr$3 = $32;
  $36 = (($buf31) + ($curr$3)|0);
  $37 = (20 - ($curr$3))|0;
  $38 = (__ZN4core3fmt9Formatter12pad_integral17h30369de78b61ed24E($1,1,27292,0,$36,$37)|0);
  STACKTOP = sp;return ($38|0);
 }
 return (0)|0;
}
function __ZN4core9panicking9panic_fmt17hfa35599633a0afa2E($0,$$0$0$0$val,$$0$0$1$val,$$0$1$val) {
 $0 = $0|0;
 $$0$0$0$val = $$0$0$0$val|0;
 $$0$0$1$val = $$0$0$1$val|0;
 $$0$1$val = $$0$1$val|0;
 var $1 = 0, $2 = 0, $_12$i = 0, $msg$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $msg$i = sp + 16|0;
 $_12$i = sp;
 ;HEAP32[$msg$i>>2]=HEAP32[$0>>2]|0;HEAP32[$msg$i+4>>2]=HEAP32[$0+4>>2]|0;HEAP32[$msg$i+8>>2]=HEAP32[$0+8>>2]|0;HEAP32[$msg$i+12>>2]=HEAP32[$0+12>>2]|0;HEAP32[$msg$i+16>>2]=HEAP32[$0+16>>2]|0;HEAP32[$msg$i+20>>2]=HEAP32[$0+20>>2]|0;
 HEAP32[$_12$i>>2] = $$0$0$0$val;
 $1 = ((($_12$i)) + 4|0);
 HEAP32[$1>>2] = $$0$0$1$val;
 $2 = ((($_12$i)) + 8|0);
 HEAP32[$2>>2] = $$0$1$val;
 __ZN3std9panicking15begin_panic_fmt17had2218825161cb57E($msg$i,$_12$i);
 // unreachable;
}
function __ZN4core3fmt9Formatter12pad_integral17h30369de78b61ed24E($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$pre$phi213Z2D = 0, $$pre$phi217Z2D = 0, $$pre212 = 0, $$pre216 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0;
 var $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0;
 var $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0;
 var $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0;
 var $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0;
 var $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0;
 var $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0;
 var $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0;
 var $241 = 0, $242 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0;
 var $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0;
 var $99 = 0, $_0$sroa$0$1 = 0, $_15$sroa$0$0$i = 0, $_15$sroa$0$0$i98 = 0, $_15$sroa$6$0$i = 0, $_15$sroa$6$0$i99 = 0, $_16$i = 0, $_16$i$i$i = 0, $_16$i50 = 0, $_16$i71 = 0, $accum$0$lcssa$i$i = 0, $accum$016$i$i = 0, $align$0$off0$i = 0, $align$0$off0$i$clear = 0, $align$0$off0$i96 = 0, $align$0$off0$i96$clear = 0, $cond$i = 0, $cond$i94 = 0, $extract$t$i = 0, $extract$t$i95 = 0;
 var $fill$i = 0, $fill$i92 = 0, $iter$sroa$0$0$i = 0, $iter$sroa$0$0$i102 = 0, $iter$sroa$0$1$i$i = 0, $iter$sroa$0$2$i$i = 0, $iter$sroa$0$3$i$i = 0, $iter$sroa$0$5$ph$i$i = 0, $iter2$sroa$0$0$i = 0, $iter2$sroa$0$0$i112 = 0, $len$2$i$i = 0, $len$2$i$i125 = 0, $not$switch4$i = 0, $not$switch4$i$i = 0, $not$switch4$i$i$i = 0, $not$switch4$i$i$i$i = 0, $not$switch4$i$i114 = 0, $not$switch4$i$i45 = 0, $not$switch4$i$i54 = 0, $not$switch4$i$i75 = 0;
 var $not$switch4$i2$i = 0, $not$switch4$i2$i104 = 0, $not$switch4$i61 = 0, $not$switch4$i8$i = 0, $not$switch4$i8$i107 = 0, $not$switch4$i82 = 0, $prefixed$0 = 0, $sign$sroa$0$0 = 0, $sign$sroa$10$0 = 0, $switch = 0, $switch4$i = 0, $switch4$i$i$i = 0, $switch4$i51 = 0, $switch4$i72 = 0, $width$0 = 0, $width$0$v = 0, $width$1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $_16$i$i$i = sp + 20|0;
 $fill$i92 = sp + 16|0;
 $_16$i71 = sp + 12|0;
 $_16$i50 = sp + 8|0;
 $_16$i = sp + 4|0;
 $fill$i = sp;
 $6 = HEAP32[$0>>2]|0;
 $7 = $6 & 1;
 $sign$sroa$0$0 = $1 ? $7 : 1;
 $sign$sroa$10$0 = $1 ? 43 : 45;
 $width$0$v = $1 ? $7 : 1;
 $width$0 = (($width$0$v) + ($5))|0;
 $8 = $6 & 4;
 $9 = ($8|0)==(0);
 if ($9) {
  $prefixed$0 = 0;$width$1 = $width$0;
 } else {
  $10 = (($2) + ($3)|0);
  $11 = ($3|0)==(0);
  if ($11) {
   $accum$0$lcssa$i$i = 0;
  } else {
   $13 = $2;$accum$016$i$i = 0;
   while(1) {
    $12 = ((($13)) + 1|0);
    $14 = $12;
    $15 = HEAP8[$13>>0]|0;
    $16 = ($15<<24>>24)>(-1);
    if ($16) {
     $iter$sroa$0$5$ph$i$i = $14;
    } else {
     $17 = ($12|0)==($10|0);
     $18 = ((($13)) + 2|0);
     $19 = $18;
     $iter$sroa$0$1$i$i = $17 ? $14 : $19;
     $20 = $17 ? $10 : $18;
     $21 = ($15&255)>(223);
     if ($21) {
      $22 = ($20|0)==($10|0);
      $23 = ((($20)) + 1|0);
      $24 = $23;
      $iter$sroa$0$2$i$i = $22 ? $iter$sroa$0$1$i$i : $24;
      $25 = $22 ? $10 : $23;
      $26 = ($15&255)>(239);
      if ($26) {
       $27 = ($25|0)==($10|0);
       $28 = ((($25)) + 1|0);
       $29 = $28;
       $iter$sroa$0$3$i$i = $27 ? $iter$sroa$0$2$i$i : $29;
       $iter$sroa$0$5$ph$i$i = $iter$sroa$0$3$i$i;
      } else {
       $iter$sroa$0$5$ph$i$i = $iter$sroa$0$2$i$i;
      }
     } else {
      $iter$sroa$0$5$ph$i$i = $iter$sroa$0$1$i$i;
     }
    }
    $30 = (($accum$016$i$i) + 1)|0;
    $31 = $iter$sroa$0$5$ph$i$i;
    $32 = ($31|0)==($10|0);
    if ($32) {
     $accum$0$lcssa$i$i = $30;
     break;
    } else {
     $13 = $31;$accum$016$i$i = $30;
    }
   }
  }
  $33 = (($accum$0$lcssa$i$i) + ($width$0))|0;
  $prefixed$0 = 1;$width$1 = $33;
 }
 $34 = ((($0)) + 12|0);
 $35 = HEAP32[$34>>2]|0;
 $switch = ($35|0)==(1);
 if (!($switch)) {
  $switch4$i = ($sign$sroa$0$0|0)==(1);
  $36 = ((($0)) + 28|0);
  if ($switch4$i) {
   $37 = HEAP32[$36>>2]|0;
   $38 = ((($0)) + 32|0);
   $39 = HEAP32[$38>>2]|0;
   HEAP32[$_16$i>>2] = 0;
   HEAP8[$_16$i>>0] = $sign$sroa$10$0;
   $40 = ((($39)) + 12|0);
   $41 = HEAP32[$40>>2]|0;
   $42 = (FUNCTION_TABLE_iiii[$41 & 511]($37,$_16$i,1)|0);
   $not$switch4$i$i45 = ($42<<24>>24)==(0);
   if (!($not$switch4$i$i45)) {
    $_0$sroa$0$1 = 1;
    STACKTOP = sp;return ($_0$sroa$0$1|0);
   }
  }
  $43 = ($prefixed$0<<24>>24)==(0);
  if ($43) {
   $$pre216 = ((($0)) + 32|0);
   $$pre$phi217Z2D = $$pre216;
  } else {
   $44 = HEAP32[$36>>2]|0;
   $45 = ((($0)) + 32|0);
   $46 = HEAP32[$45>>2]|0;
   $47 = ((($46)) + 12|0);
   $48 = HEAP32[$47>>2]|0;
   $49 = (FUNCTION_TABLE_iiii[$48 & 511]($44,$2,$3)|0);
   $not$switch4$i = ($49<<24>>24)==(0);
   if ($not$switch4$i) {
    $$pre$phi217Z2D = $45;
   } else {
    $_0$sroa$0$1 = 1;
    STACKTOP = sp;return ($_0$sroa$0$1|0);
   }
  }
  $166 = HEAP32[$36>>2]|0;
  $167 = HEAP32[$$pre$phi217Z2D>>2]|0;
  $168 = ((($167)) + 12|0);
  $169 = HEAP32[$168>>2]|0;
  $170 = (FUNCTION_TABLE_iiii[$169 & 511]($166,$4,$5)|0);
  $_0$sroa$0$1 = $170;
  STACKTOP = sp;return ($_0$sroa$0$1|0);
 }
 $80 = ((($0)) + 16|0);
 $81 = HEAP32[$80>>2]|0;
 $82 = ($81>>>0)>($width$1>>>0);
 if (!($82)) {
  $switch4$i51 = ($sign$sroa$0$0|0)==(1);
  $50 = ((($0)) + 28|0);
  if ($switch4$i51) {
   $51 = HEAP32[$50>>2]|0;
   $52 = ((($0)) + 32|0);
   $53 = HEAP32[$52>>2]|0;
   HEAP32[$_16$i50>>2] = 0;
   HEAP8[$_16$i50>>0] = $sign$sroa$10$0;
   $54 = ((($53)) + 12|0);
   $55 = HEAP32[$54>>2]|0;
   $56 = (FUNCTION_TABLE_iiii[$55 & 511]($51,$_16$i50,1)|0);
   $not$switch4$i$i54 = ($56<<24>>24)==(0);
   if (!($not$switch4$i$i54)) {
    $_0$sroa$0$1 = 1;
    STACKTOP = sp;return ($_0$sroa$0$1|0);
   }
  }
  $57 = ($prefixed$0<<24>>24)==(0);
  if ($57) {
   $$pre212 = ((($0)) + 32|0);
   $$pre$phi213Z2D = $$pre212;
  } else {
   $58 = HEAP32[$50>>2]|0;
   $59 = ((($0)) + 32|0);
   $60 = HEAP32[$59>>2]|0;
   $61 = ((($60)) + 12|0);
   $62 = HEAP32[$61>>2]|0;
   $63 = (FUNCTION_TABLE_iiii[$62 & 511]($58,$2,$3)|0);
   $not$switch4$i61 = ($63<<24>>24)==(0);
   if ($not$switch4$i61) {
    $$pre$phi213Z2D = $59;
   } else {
    $_0$sroa$0$1 = 1;
    STACKTOP = sp;return ($_0$sroa$0$1|0);
   }
  }
  $171 = HEAP32[$50>>2]|0;
  $172 = HEAP32[$$pre$phi213Z2D>>2]|0;
  $173 = ((($172)) + 12|0);
  $174 = HEAP32[$173>>2]|0;
  $175 = (FUNCTION_TABLE_iiii[$174 & 511]($171,$4,$5)|0);
  $_0$sroa$0$1 = $175;
  STACKTOP = sp;return ($_0$sroa$0$1|0);
 }
 $83 = $6 & 8;
 $84 = ($83|0)==(0);
 if ($84) {
  $85 = (($81) - ($width$1))|0;
  $86 = ((($0)) + 8|0);
  $extract$t$i95 = HEAP8[$86>>0]|0;
  $cond$i94 = ($extract$t$i95<<24>>24)==(3);
  $align$0$off0$i96 = $cond$i94 ? 1 : $extract$t$i95;
  $align$0$off0$i96$clear = $align$0$off0$i96 & 3;
  switch ($align$0$off0$i96$clear<<24>>24) {
  case 0:  {
   $_15$sroa$0$0$i98 = 0;$_15$sroa$6$0$i99 = $85;
   break;
  }
  case 3: case 1:  {
   $_15$sroa$0$0$i98 = $85;$_15$sroa$6$0$i99 = 0;
   break;
  }
  case 2:  {
   $90 = $85 >>> 1;
   $91 = (($85) + 1)|0;
   $92 = $91 >>> 1;
   $_15$sroa$0$0$i98 = $90;$_15$sroa$6$0$i99 = $92;
   break;
  }
  default: {
   // unreachable;
  }
  }
  HEAP32[$fill$i92>>2] = 0;
  $87 = ((($0)) + 4|0);
  $88 = HEAP32[$87>>2]|0;
  $89 = ($88>>>0)<(128);
  do {
   if ($89) {
    $125 = $88&255;
    HEAP8[$fill$i92>>0] = $125;
    $len$2$i$i125 = 1;
   } else {
    $126 = ($88>>>0)<(2048);
    if ($126) {
     $127 = $88 >>> 6;
     $128 = $127 & 31;
     $129 = $128&255;
     $130 = $129 | -64;
     HEAP8[$fill$i92>>0] = $130;
     $131 = $88 & 63;
     $132 = $131&255;
     $133 = ((($fill$i92)) + 1|0);
     $134 = $132 | -128;
     HEAP8[$133>>0] = $134;
     $len$2$i$i125 = 2;
     break;
    }
    $135 = ($88>>>0)<(65536);
    if ($135) {
     $136 = $88 >>> 12;
     $137 = $136 & 15;
     $138 = $137&255;
     $139 = $138 | -32;
     HEAP8[$fill$i92>>0] = $139;
     $140 = $88 >>> 6;
     $141 = $140 & 63;
     $142 = $141&255;
     $143 = ((($fill$i92)) + 1|0);
     $144 = $142 | -128;
     HEAP8[$143>>0] = $144;
     $145 = $88 & 63;
     $146 = $145&255;
     $147 = ((($fill$i92)) + 2|0);
     $148 = $146 | -128;
     HEAP8[$147>>0] = $148;
     $len$2$i$i125 = 3;
     break;
    } else {
     $149 = $88 >>> 18;
     $150 = $149&255;
     $151 = $150 | -16;
     HEAP8[$fill$i92>>0] = $151;
     $152 = $88 >>> 12;
     $153 = $152 & 63;
     $154 = $153&255;
     $155 = ((($fill$i92)) + 1|0);
     $156 = $154 | -128;
     HEAP8[$155>>0] = $156;
     $157 = $88 >>> 6;
     $158 = $157 & 63;
     $159 = $158&255;
     $160 = ((($fill$i92)) + 2|0);
     $161 = $159 | -128;
     HEAP8[$160>>0] = $161;
     $162 = $88 & 63;
     $163 = $162&255;
     $164 = ((($fill$i92)) + 3|0);
     $165 = $163 | -128;
     HEAP8[$164>>0] = $165;
     $len$2$i$i125 = 4;
     break;
    }
   }
  } while(0);
  $96 = ((($0)) + 28|0);
  $98 = ((($0)) + 32|0);
  $iter$sroa$0$0$i102 = 0;
  while(1) {
   $93 = ($iter$sroa$0$0$i102>>>0)<($_15$sroa$0$0$i98>>>0);
   if (!($93)) {
    break;
   }
   $94 = (($iter$sroa$0$0$i102) + 1)|0;
   $95 = HEAP32[$96>>2]|0;
   $97 = HEAP32[$98>>2]|0;
   $99 = ((($97)) + 12|0);
   $100 = HEAP32[$99>>2]|0;
   $101 = (FUNCTION_TABLE_iiii[$100 & 511]($95,$fill$i92,$len$2$i$i125)|0);
   $not$switch4$i2$i104 = ($101<<24>>24)==(0);
   if ($not$switch4$i2$i104) {
    $iter$sroa$0$0$i102 = $94;
   } else {
    label = 37;
    break;
   }
  }
  if ((label|0) == 37) {
   $_0$sroa$0$1 = 1;
   STACKTOP = sp;return ($_0$sroa$0$1|0);
  }
  $switch4$i$i$i = ($sign$sroa$0$0|0)==(1);
  if ($switch4$i$i$i) {
   $102 = HEAP32[$96>>2]|0;
   $103 = HEAP32[$98>>2]|0;
   HEAP32[$_16$i$i$i>>2] = 0;
   HEAP8[$_16$i$i$i>>0] = $sign$sroa$10$0;
   $104 = ((($103)) + 12|0);
   $105 = HEAP32[$104>>2]|0;
   $106 = (FUNCTION_TABLE_iiii[$105 & 511]($102,$_16$i$i$i,1)|0);
   $not$switch4$i$i$i$i = ($106<<24>>24)==(0);
   if ($not$switch4$i$i$i$i) {
    label = 34;
   }
  } else {
   label = 34;
  }
  do {
   if ((label|0) == 34) {
    $107 = ($prefixed$0<<24>>24)==(0);
    if (!($107)) {
     $108 = HEAP32[$96>>2]|0;
     $109 = HEAP32[$98>>2]|0;
     $110 = ((($109)) + 12|0);
     $111 = HEAP32[$110>>2]|0;
     $112 = (FUNCTION_TABLE_iiii[$111 & 511]($108,$2,$3)|0);
     $not$switch4$i$i$i = ($112<<24>>24)==(0);
     if (!($not$switch4$i$i$i)) {
      break;
     }
    }
    $113 = HEAP32[$96>>2]|0;
    $114 = HEAP32[$98>>2]|0;
    $115 = ((($114)) + 12|0);
    $116 = HEAP32[$115>>2]|0;
    $117 = (FUNCTION_TABLE_iiii[$116 & 511]($113,$4,$5)|0);
    $not$switch4$i8$i107 = ($117<<24>>24)==(0);
    if ($not$switch4$i8$i107) {
     $iter2$sroa$0$0$i112 = 0;
     while(1) {
      $118 = ($iter2$sroa$0$0$i112>>>0)<($_15$sroa$6$0$i99>>>0);
      if (!($118)) {
       label = 41;
       break;
      }
      $119 = (($iter2$sroa$0$0$i112) + 1)|0;
      $120 = HEAP32[$96>>2]|0;
      $121 = HEAP32[$98>>2]|0;
      $122 = ((($121)) + 12|0);
      $123 = HEAP32[$122>>2]|0;
      $124 = (FUNCTION_TABLE_iiii[$123 & 511]($120,$fill$i92,$len$2$i$i125)|0);
      $not$switch4$i$i114 = ($124<<24>>24)==(0);
      if ($not$switch4$i$i114) {
       $iter2$sroa$0$0$i112 = $119;
      } else {
       label = 42;
       break;
      }
     }
     if ((label|0) == 41) {
      $_0$sroa$0$1 = 0;
      STACKTOP = sp;return ($_0$sroa$0$1|0);
     }
     else if ((label|0) == 42) {
      $_0$sroa$0$1 = 1;
      STACKTOP = sp;return ($_0$sroa$0$1|0);
     }
    }
   }
  } while(0);
  $_0$sroa$0$1 = 1;
  STACKTOP = sp;return ($_0$sroa$0$1|0);
 }
 $64 = ((($0)) + 4|0);
 HEAP32[$64>>2] = 48;
 $switch4$i72 = ($sign$sroa$0$0|0)==(1);
 if ($switch4$i72) {
  $65 = ((($0)) + 28|0);
  $66 = HEAP32[$65>>2]|0;
  $67 = ((($0)) + 32|0);
  $68 = HEAP32[$67>>2]|0;
  HEAP32[$_16$i71>>2] = 0;
  HEAP8[$_16$i71>>0] = $sign$sroa$10$0;
  $69 = ((($68)) + 12|0);
  $70 = HEAP32[$69>>2]|0;
  $71 = (FUNCTION_TABLE_iiii[$70 & 511]($66,$_16$i71,1)|0);
  $not$switch4$i$i75 = ($71<<24>>24)==(0);
  if (!($not$switch4$i$i75)) {
   $_0$sroa$0$1 = 1;
   STACKTOP = sp;return ($_0$sroa$0$1|0);
  }
 }
 $72 = ($prefixed$0<<24>>24)==(0);
 if (!($72)) {
  $73 = ((($0)) + 28|0);
  $74 = HEAP32[$73>>2]|0;
  $75 = ((($0)) + 32|0);
  $76 = HEAP32[$75>>2]|0;
  $77 = ((($76)) + 12|0);
  $78 = HEAP32[$77>>2]|0;
  $79 = (FUNCTION_TABLE_iiii[$78 & 511]($74,$2,$3)|0);
  $not$switch4$i82 = ($79<<24>>24)==(0);
  if (!($not$switch4$i82)) {
   $_0$sroa$0$1 = 1;
   STACKTOP = sp;return ($_0$sroa$0$1|0);
  }
 }
 $176 = (($81) - ($width$1))|0;
 $177 = ((($0)) + 8|0);
 $extract$t$i = HEAP8[$177>>0]|0;
 $cond$i = ($extract$t$i<<24>>24)==(3);
 $align$0$off0$i = $cond$i ? 1 : $extract$t$i;
 $align$0$off0$i$clear = $align$0$off0$i & 3;
 switch ($align$0$off0$i$clear<<24>>24) {
 case 0:  {
  $_15$sroa$0$0$i = 0;$_15$sroa$6$0$i = $176;
  break;
 }
 case 3: case 1:  {
  $_15$sroa$0$0$i = $176;$_15$sroa$6$0$i = 0;
  break;
 }
 case 2:  {
  $180 = $176 >>> 1;
  $181 = (($176) + 1)|0;
  $182 = $181 >>> 1;
  $_15$sroa$0$0$i = $180;$_15$sroa$6$0$i = $182;
  break;
 }
 default: {
  // unreachable;
 }
 }
 HEAP32[$fill$i>>2] = 0;
 $178 = HEAP32[$64>>2]|0;
 $179 = ($178>>>0)<(128);
 do {
  if ($179) {
   $202 = $178&255;
   HEAP8[$fill$i>>0] = $202;
   $len$2$i$i = 1;
  } else {
   $203 = ($178>>>0)<(2048);
   if ($203) {
    $204 = $178 >>> 6;
    $205 = $204 & 31;
    $206 = $205&255;
    $207 = $206 | -64;
    HEAP8[$fill$i>>0] = $207;
    $208 = $178 & 63;
    $209 = $208&255;
    $210 = ((($fill$i)) + 1|0);
    $211 = $209 | -128;
    HEAP8[$210>>0] = $211;
    $len$2$i$i = 2;
    break;
   }
   $212 = ($178>>>0)<(65536);
   if ($212) {
    $213 = $178 >>> 12;
    $214 = $213 & 15;
    $215 = $214&255;
    $216 = $215 | -32;
    HEAP8[$fill$i>>0] = $216;
    $217 = $178 >>> 6;
    $218 = $217 & 63;
    $219 = $218&255;
    $220 = ((($fill$i)) + 1|0);
    $221 = $219 | -128;
    HEAP8[$220>>0] = $221;
    $222 = $178 & 63;
    $223 = $222&255;
    $224 = ((($fill$i)) + 2|0);
    $225 = $223 | -128;
    HEAP8[$224>>0] = $225;
    $len$2$i$i = 3;
    break;
   } else {
    $226 = $178 >>> 18;
    $227 = $226&255;
    $228 = $227 | -16;
    HEAP8[$fill$i>>0] = $228;
    $229 = $178 >>> 12;
    $230 = $229 & 63;
    $231 = $230&255;
    $232 = ((($fill$i)) + 1|0);
    $233 = $231 | -128;
    HEAP8[$232>>0] = $233;
    $234 = $178 >>> 6;
    $235 = $234 & 63;
    $236 = $235&255;
    $237 = ((($fill$i)) + 2|0);
    $238 = $236 | -128;
    HEAP8[$237>>0] = $238;
    $239 = $178 & 63;
    $240 = $239&255;
    $241 = ((($fill$i)) + 3|0);
    $242 = $240 | -128;
    HEAP8[$241>>0] = $242;
    $len$2$i$i = 4;
    break;
   }
  }
 } while(0);
 $185 = ((($0)) + 28|0);
 $187 = ((($0)) + 32|0);
 $iter$sroa$0$0$i = 0;
 while(1) {
  $183 = ($iter$sroa$0$0$i>>>0)<($_15$sroa$0$0$i>>>0);
  $184 = HEAP32[$185>>2]|0;
  $186 = HEAP32[$187>>2]|0;
  if (!($183)) {
   break;
  }
  $188 = (($iter$sroa$0$0$i) + 1)|0;
  $189 = ((($186)) + 12|0);
  $190 = HEAP32[$189>>2]|0;
  $191 = (FUNCTION_TABLE_iiii[$190 & 511]($184,$fill$i,$len$2$i$i)|0);
  $not$switch4$i2$i = ($191<<24>>24)==(0);
  if ($not$switch4$i2$i) {
   $iter$sroa$0$0$i = $188;
  } else {
   label = 61;
   break;
  }
 }
 if ((label|0) == 61) {
  $_0$sroa$0$1 = 1;
  STACKTOP = sp;return ($_0$sroa$0$1|0);
 }
 $192 = ((($186)) + 12|0);
 $193 = HEAP32[$192>>2]|0;
 $194 = (FUNCTION_TABLE_iiii[$193 & 511]($184,$4,$5)|0);
 $not$switch4$i8$i = ($194<<24>>24)==(0);
 if ($not$switch4$i8$i) {
  $iter2$sroa$0$0$i = 0;
 } else {
  $_0$sroa$0$1 = 1;
  STACKTOP = sp;return ($_0$sroa$0$1|0);
 }
 while(1) {
  $195 = ($iter2$sroa$0$0$i>>>0)<($_15$sroa$6$0$i>>>0);
  if (!($195)) {
   label = 65;
   break;
  }
  $196 = (($iter2$sroa$0$0$i) + 1)|0;
  $197 = HEAP32[$185>>2]|0;
  $198 = HEAP32[$187>>2]|0;
  $199 = ((($198)) + 12|0);
  $200 = HEAP32[$199>>2]|0;
  $201 = (FUNCTION_TABLE_iiii[$200 & 511]($197,$fill$i,$len$2$i$i)|0);
  $not$switch4$i$i = ($201<<24>>24)==(0);
  if ($not$switch4$i$i) {
   $iter2$sroa$0$0$i = $196;
  } else {
   label = 66;
   break;
  }
 }
 if ((label|0) == 65) {
  $_0$sroa$0$1 = 0;
  STACKTOP = sp;return ($_0$sroa$0$1|0);
 }
 else if ((label|0) == 66) {
  $_0$sroa$0$1 = 1;
  STACKTOP = sp;return ($_0$sroa$0$1|0);
 }
 return (0)|0;
}
function __ZN4core9panicking5panic17ha7507e8e32961bfeE($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $_11 = 0, $_6$sroa$0$0$$sroa_idx$i = 0, $_7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $_7 = sp + 8|0;
 $_11 = sp;
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($0)) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ((($0)) + 8|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ((($0)) + 12|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ((($0)) + 16|0);
 $9 = HEAP32[$8>>2]|0;
 HEAP32[$_11>>2] = $1;
 $10 = ((($_11)) + 4|0);
 HEAP32[$10>>2] = $3;
 HEAP32[$_7>>2] = $_11;
 $11 = ((($_7)) + 4|0);
 HEAP32[$11>>2] = 1;
 $_6$sroa$0$0$$sroa_idx$i = ((($_7)) + 8|0);
 HEAP32[$_6$sroa$0$0$$sroa_idx$i>>2] = 0;
 $12 = ((($_7)) + 16|0);
 HEAP32[$12>>2] = 26744;
 $13 = ((($_7)) + 20|0);
 HEAP32[$13>>2] = 0;
 __ZN4core9panicking9panic_fmt17hfa35599633a0afa2E($_7,$5,$7,$9);
 // unreachable;
}
function __ZN4core3num6bignum8Big32x408mul_pow217h21707dacd096bf95E($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$in = 0, $$in77 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $iter2$sroa$0$076 = 0, $iter2$sroa$0$076$phi = 0, $sz$0 = 0, $sz$1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = $1 >>> 5;
 $3 = $1 & 31;
 $4 = ($1>>>0)<(1280);
 if (!($4)) {
  __ZN4core9panicking5panic17ha7507e8e32961bfeE(6864);
  // unreachable;
 }
 $5 = HEAP32[$0>>2]|0;
 $6 = ($5|0)==(0);
 L4: do {
  if (!($6)) {
   $$in = $5;
   while(1) {
    $8 = (($$in) + -1)|0;
    $9 = ($8>>>0)<(40);
    if (!($9)) {
     label = 24;
     break;
    }
    $10 = (($8) + ($2))|0;
    $11 = ($10>>>0)<(40);
    if (!($11)) {
     label = 7;
     break;
    }
    $12 = (((($0)) + 4|0) + ($8<<2)|0);
    $13 = HEAP32[$12>>2]|0;
    $14 = (((($0)) + 4|0) + ($10<<2)|0);
    HEAP32[$14>>2] = $13;
    $15 = ($8|0)==(0);
    if ($15) {
     break L4;
    } else {
     $$in = $8;
    }
   }
   if ((label|0) == 7) {
    __ZN4core9panicking18panic_bounds_check17hd14a5808e41829e9E(22426,99,534,$10,40);
    // unreachable;
   }
   else if ((label|0) == 24) {
    __ZN4core9panicking18panic_bounds_check17hd14a5808e41829e9E(22904,104,288,$8,40);
    // unreachable;
   }
  }
 } while(0);
 $7 = ($2|0)==(0);
 L13: do {
  if (!($7)) {
   $21 = 1;$iter2$sroa$0$076 = 0;
   while(1) {
    $19 = ($iter2$sroa$0$076>>>0)<(40);
    if (!($19)) {
     break;
    }
    $20 = (((($0)) + 4|0) + ($iter2$sroa$0$076<<2)|0);
    HEAP32[$20>>2] = 0;
    $22 = ($21>>>0)<($2>>>0);
    $23 = (($21) + 1)|0;
    if ($22) {
     $iter2$sroa$0$076$phi = $21;$21 = $23;$iter2$sroa$0$076 = $iter2$sroa$0$076$phi;
    } else {
     break L13;
    }
   }
   __ZN4core9panicking18panic_bounds_check17hd14a5808e41829e9E(22904,104,291,$iter2$sroa$0$076,40);
   // unreachable;
  }
 } while(0);
 $16 = HEAP32[$0>>2]|0;
 $17 = (($16) + ($2))|0;
 $18 = ($3|0)==(0);
 if ($18) {
  $sz$1 = $17;
  HEAP32[$0>>2] = $sz$1;
  return ($0|0);
 }
 $24 = (($17) + -1)|0;
 $25 = ($24>>>0)<(40);
 if (!($25)) {
  __ZN4core9panicking18panic_bounds_check17hd14a5808e41829e9E(22426,99,524,$24,40);
  // unreachable;
 }
 $26 = (((($0)) + 4|0) + ($24<<2)|0);
 $27 = HEAP32[$26>>2]|0;
 $28 = (0 - ($1))|0;
 $29 = $28 & 31;
 $30 = $27 >>> $29;
 $31 = ($30|0)==(0);
 do {
  if ($31) {
   $sz$0 = $17;
  } else {
   $32 = ($17>>>0)<(40);
   if ($32) {
    $33 = (((($0)) + 4|0) + ($17<<2)|0);
    HEAP32[$33>>2] = $30;
    $34 = (($17) + 1)|0;
    $sz$0 = $34;
    break;
   } else {
    __ZN4core9panicking18panic_bounds_check17hd14a5808e41829e9E(22904,104,300,$17,40);
    // unreachable;
   }
  }
 } while(0);
 $35 = (($2) + 1)|0;
 $36 = ($35>>>0)<($17>>>0);
 L31: do {
  if ($36) {
   $$in77 = $17;$46 = $27;
   while(1) {
    $37 = (($$in77) + -1)|0;
    $38 = ($37>>>0)<(40);
    if (!($38)) {
     label = 27;
     break;
    }
    $39 = (($$in77) + -2)|0;
    $40 = ($39>>>0)<(40);
    if (!($40)) {
     label = 20;
     break;
    }
    $41 = (((($0)) + 4|0) + ($37<<2)|0);
    $42 = (((($0)) + 4|0) + ($39<<2)|0);
    $43 = HEAP32[$42>>2]|0;
    $44 = $43 >>> $29;
    $45 = $46 << $3;
    $47 = $44 | $45;
    HEAP32[$41>>2] = $47;
    $48 = ($35>>>0)<($37>>>0);
    if ($48) {
     $$in77 = $37;$46 = $43;
    } else {
     break L31;
    }
   }
   if ((label|0) == 20) {
    __ZN4core9panicking18panic_bounds_check17hd14a5808e41829e9E(22426,99,524,$39,40);
    // unreachable;
   }
   else if ((label|0) == 27) {
    __ZN4core9panicking18panic_bounds_check17hd14a5808e41829e9E(22904,104,304,$37,40);
    // unreachable;
   }
  }
 } while(0);
 $49 = (((($0)) + 4|0) + ($2<<2)|0);
 $50 = HEAP32[$49>>2]|0;
 $51 = $50 << $3;
 HEAP32[$49>>2] = $51;
 $sz$1 = $sz$0;
 HEAP32[$0>>2] = $sz$1;
 return ($0|0);
}
function __ZN4core3num7flt2dec8round_up17h7add2f9e6cce7cd7E($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$in = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $3 = 0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $_0$sroa$0$0 = 0, $_0$sroa$0$0$insert$insert = 0, $_0$sroa$4$0 = 0, $i$0$i = 0, $iter2$sroa$0$047 = 0, $iter2$sroa$0$047$phi = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($2>>>0)>($1>>>0);
 if ($3) {
  __ZN4core5slice20slice_index_len_fail17hed923256c072a803E($2,$1);
  // unreachable;
 }
 $4 = (($0) + ($2)|0);
 $5 = $4;$i$0$i = $2;
 while(1) {
  $6 = ($5|0)==($0|0);
  if ($6) {
   label = 7;
   break;
  }
  $7 = ((($5)) + -1|0);
  $8 = HEAP8[$7>>0]|0;
  $9 = ($8<<24>>24)==(57);
  $10 = (($i$0$i) + -1)|0;
  if ($9) {
   $5 = $7;$i$0$i = $10;
  } else {
   label = 8;
   break;
  }
 }
 L7: do {
  if ((label|0) == 7) {
   $12 = ($2|0)==(0);
   if ($12) {
    $_0$sroa$0$0 = 1;$_0$sroa$4$0 = 12544;
   } else {
    $11 = ($1|0)==(0);
    if ($11) {
     __ZN4core9panicking18panic_bounds_check17hd14a5808e41829e9E(21978,109,163,0,0);
     // unreachable;
    }
    HEAP8[$0>>0] = 49;
    $22 = ($2>>>0)>(1);
    if ($22) {
     $25 = 2;$iter2$sroa$0$047 = 1;
     while(1) {
      $23 = ($iter2$sroa$0$047>>>0)<($1>>>0);
      if (!($23)) {
       break;
      }
      $24 = (($0) + ($iter2$sroa$0$047)|0);
      HEAP8[$24>>0] = 48;
      $26 = ($25>>>0)<($2>>>0);
      $27 = (($25) + 1)|0;
      if ($26) {
       $iter2$sroa$0$047$phi = $25;$25 = $27;$iter2$sroa$0$047 = $iter2$sroa$0$047$phi;
      } else {
       $_0$sroa$0$0 = 1;$_0$sroa$4$0 = 12288;
       break L7;
      }
     }
     __ZN4core9panicking18panic_bounds_check17hd14a5808e41829e9E(21978,109,164,$iter2$sroa$0$047,$1);
     // unreachable;
    } else {
     $_0$sroa$0$0 = 1;$_0$sroa$4$0 = 12288;
    }
   }
  }
  else if ((label|0) == 8) {
   $13 = ($10>>>0)<($1>>>0);
   if (!($13)) {
    __ZN4core9panicking18panic_bounds_check17hd14a5808e41829e9E(21978,109,158,$10,$1);
    // unreachable;
   }
   $14 = (($0) + ($10)|0);
   $15 = HEAP8[$14>>0]|0;
   $16 = (($15) + 1)<<24>>24;
   HEAP8[$14>>0] = $16;
   $17 = ($i$0$i>>>0)<($2>>>0);
   if ($17) {
    $$in = $i$0$i;
    while(1) {
     $18 = (($$in) + 1)|0;
     $19 = ($$in>>>0)<($1>>>0);
     if (!($19)) {
      break;
     }
     $20 = (($0) + ($$in)|0);
     HEAP8[$20>>0] = 48;
     $21 = ($18>>>0)<($2>>>0);
     if ($21) {
      $$in = $18;
     } else {
      $_0$sroa$0$0 = 0;$_0$sroa$4$0 = 0;
      break L7;
     }
    }
    __ZN4core9panicking18panic_bounds_check17hd14a5808e41829e9E(21978,109,159,$$in,$1);
    // unreachable;
   } else {
    $_0$sroa$0$0 = 0;$_0$sroa$4$0 = 0;
   }
  }
 } while(0);
 $_0$sroa$0$0$insert$insert = $_0$sroa$4$0 | $_0$sroa$0$0;
 return ($_0$sroa$0$0$insert$insert|0);
}
function __ZN4core5slice22slice_index_order_fail17h0bf73460ffe8be02E($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $_12 = 0, $_6$sroa$0$0$$sroa_idx$i = 0, $_7 = 0, $end = 0, $index = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $index = sp + 44|0;
 $end = sp + 40|0;
 $_7 = sp + 16|0;
 $_12 = sp;
 HEAP32[$index>>2] = $0;
 HEAP32[$end>>2] = $1;
 $2 = $index;
 $3 = $end;
 HEAP32[$_12>>2] = $2;
 $4 = ((($_12)) + 4|0);
 HEAP32[$4>>2] = (264);
 $5 = ((($_12)) + 8|0);
 HEAP32[$5>>2] = $3;
 $6 = ((($_12)) + 12|0);
 HEAP32[$6>>2] = (264);
 HEAP32[$_7>>2] = 6984;
 $7 = ((($_7)) + 4|0);
 HEAP32[$7>>2] = 2;
 $_6$sroa$0$0$$sroa_idx$i = ((($_7)) + 8|0);
 HEAP32[$_6$sroa$0$0$$sroa_idx$i>>2] = 0;
 $8 = ((($_7)) + 16|0);
 HEAP32[$8>>2] = $_12;
 $9 = ((($_7)) + 20|0);
 HEAP32[$9>>2] = 2;
 __ZN4core9panicking9panic_fmt17hfa35599633a0afa2E($_7,22426,99,547);
 // unreachable;
}
function __ZN53__LT__RF__u27_a_u20_T_u20_as_u20_core__fmt__Debug_GT_3fmt17h13b7344db08713a1E_1615($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[$0>>2]|0;
 $3 = $2;
 $4 = $3;
 $5 = HEAP32[$4>>2]|0;
 $6 = (($3) + 4)|0;
 $7 = $6;
 $8 = HEAP32[$7>>2]|0;
 $9 = (__ZN4core3fmt3num52__LT_impl_u20_core__fmt__Display_u20_for_u20_u64_GT_3fmt17h8ca345cb2ba0eaafE($5,$8,$1)|0);
 return ($9|0);
}
function __ZN4core3fmt3num52__LT_impl_u20_core__fmt__Display_u20_for_u20_u64_GT_3fmt17h8ca345cb2ba0eaafE($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $buf31 = 0, $curr$0 = 0, $curr$1 = 0, $curr$2 = 0, $curr$3 = 0, $n$2$off0 = 0, $n1$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $buf31 = sp;
 $3 = ($1>>>0)>(0);
 $4 = ($0>>>0)>(9999);
 $5 = ($1|0)==(0);
 $6 = $5 & $4;
 $7 = $3 | $6;
 if ($7) {
  $8 = $0;$9 = $1;$curr$0 = 20;
  while(1) {
   $10 = (___uremdi3(($8|0),($9|0),10000,0)|0);
   $11 = tempRet0;
   $12 = (___udivdi3(($8|0),($9|0),10000,0)|0);
   $13 = tempRet0;
   $14 = (($10>>>0) / 100)&-1;
   $15 = $14 << 1;
   $16 = (($10>>>0) % 100)&-1;
   $17 = $16 << 1;
   $18 = (($curr$0) + -4)|0;
   $19 = (22704 + ($15)|0);
   $20 = (($buf31) + ($18)|0);
   $21 = HEAPU8[$19>>0]|(HEAPU8[$19+1>>0]<<8);
   HEAP8[$20>>0]=$21&255;HEAP8[$20+1>>0]=$21>>8;
   $22 = (22704 + ($17)|0);
   $23 = (($curr$0) + -2)|0;
   $24 = (($buf31) + ($23)|0);
   $25 = HEAPU8[$22>>0]|(HEAPU8[$22+1>>0]<<8);
   HEAP8[$24>>0]=$25&255;HEAP8[$24+1>>0]=$25>>8;
   $26 = ($9>>>0)>(0);
   $27 = ($8>>>0)>(99999999);
   $28 = ($9|0)==(0);
   $29 = $28 & $27;
   $30 = $26 | $29;
   if ($30) {
    $8 = $12;$9 = $13;$curr$0 = $18;
   } else {
    break;
   }
  }
  $curr$1 = $18;$n$2$off0 = $12;
 } else {
  $curr$1 = 20;$n$2$off0 = $0;
 }
 $31 = ($n$2$off0|0)>(99);
 if ($31) {
  $32 = (($n$2$off0>>>0) % 100)&-1;
  $33 = $32 << 1;
  $34 = (($n$2$off0>>>0) / 100)&-1;
  $35 = (($curr$1) + -2)|0;
  $36 = (22704 + ($33)|0);
  $37 = (($buf31) + ($35)|0);
  $38 = HEAPU8[$36>>0]|(HEAPU8[$36+1>>0]<<8);
  HEAP8[$37>>0]=$38&255;HEAP8[$37+1>>0]=$38>>8;
  $curr$2 = $35;$n1$0 = $34;
 } else {
  $curr$2 = $curr$1;$n1$0 = $n$2$off0;
 }
 $39 = ($n1$0|0)<(10);
 if ($39) {
  $40 = (($curr$2) + -1)|0;
  $41 = $n1$0&255;
  $42 = (($buf31) + ($40)|0);
  $43 = (($41) + 48)<<24>>24;
  HEAP8[$42>>0] = $43;
  $curr$3 = $40;
  $49 = (($buf31) + ($curr$3)|0);
  $50 = (20 - ($curr$3))|0;
  $51 = (__ZN4core3fmt9Formatter12pad_integral17h30369de78b61ed24E($2,1,27292,0,$49,$50)|0);
  STACKTOP = sp;return ($51|0);
 } else {
  $44 = $n1$0 << 1;
  $45 = (($curr$2) + -2)|0;
  $46 = (22704 + ($44)|0);
  $47 = (($buf31) + ($45)|0);
  $48 = HEAPU8[$46>>0]|(HEAPU8[$46+1>>0]<<8);
  HEAP8[$47>>0]=$48&255;HEAP8[$47+1>>0]=$48>>8;
  $curr$3 = $45;
  $49 = (($buf31) + ($curr$3)|0);
  $50 = (20 - ($curr$3))|0;
  $51 = (__ZN4core3fmt9Formatter12pad_integral17h30369de78b61ed24E($2,1,27292,0,$49,$50)|0);
  STACKTOP = sp;return ($51|0);
 }
 return (0)|0;
}
function __ZN4core3fmt9Formatter3pad17hd3e8d63fceae72f6E($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$cast$i$i$i$i = 0, $$cast$i$i21$i$i = 0, $$phi$trans$insert = 0, $$pre = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0;
 var $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0;
 var $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0;
 var $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0;
 var $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0;
 var $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0;
 var $99 = 0, $_0$sroa$0$0 = 0, $_15$sroa$0$0$i = 0, $_15$sroa$6$0$i = 0, $_20$sroa$0$0 = 0, $accum$0$lcssa$i$i = 0, $accum$0$lcssa$i$i39 = 0, $accum$016$i$i = 0, $accum$016$i$i29 = 0, $align$0$off0$i = 0, $align$0$off0$i$clear = 0, $cond$i = 0, $extract$t$i = 0, $fill$i = 0, $iter$sroa$0$0$i = 0, $iter$sroa$0$1$i$i = 0, $iter$sroa$0$1$i$i31 = 0, $iter$sroa$0$2$i$i = 0, $iter$sroa$0$2$i$i33 = 0, $iter$sroa$0$3$i$i = 0;
 var $iter$sroa$0$3$i$i35 = 0, $iter$sroa$0$5$ph$i$i = 0, $iter$sroa$0$5$ph$i$i37 = 0, $iter2$sroa$0$0$i = 0, $len$2$i$i = 0, $n$020$i$i = 0, $not$$i$i = 0, $not$switch4$i$i = 0, $not$switch4$i2$i = 0, $not$switch4$i8$i = 0, $or$cond = 0, $or$cond$i$i = 0, $s1$sroa$10$0 = 0, $s1$sroa$10$0106 = 0, $switch = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $fill$i = sp;
 $3 = ((($0)) + 12|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ($4|0)==(1);
 $$phi$trans$insert = ((($0)) + 20|0);
 $$pre = HEAP32[$$phi$trans$insert>>2]|0;
 $switch = ($$pre|0)==(1);
 if ($5) {
  if ($switch) {
   label = 6;
  } else {
   $s1$sroa$10$0106 = $2;
  }
 } else {
  if ($switch) {
   label = 6;
  } else {
   $6 = ((($0)) + 28|0);
   $7 = HEAP32[$6>>2]|0;
   $8 = ((($0)) + 32|0);
   $9 = HEAP32[$8>>2]|0;
   $10 = ((($9)) + 12|0);
   $11 = HEAP32[$10>>2]|0;
   $12 = (FUNCTION_TABLE_iiii[$11 & 511]($7,$1,$2)|0);
   $_0$sroa$0$0 = $12;
   STACKTOP = sp;return ($_0$sroa$0$0|0);
  }
 }
 if ((label|0) == 6) {
  $13 = ((($0)) + 24|0);
  $14 = HEAP32[$13>>2]|0;
  $15 = (($1) + ($2)|0);
  $16 = ($14|0)==(0);
  $17 = ($2|0)==(0);
  $or$cond = $16 | $17;
  L8: do {
   if ($or$cond) {
    $s1$sroa$10$0 = 0;
   } else {
    $18 = $1;
    $$cast$i$i21$i$i = $1;$20 = $18;$_20$sroa$0$0 = 0;$n$020$i$i = $14;
    while(1) {
     $25 = ((($$cast$i$i21$i$i)) + 1|0);
     $26 = HEAP8[$$cast$i$i21$i$i>>0]|0;
     $27 = ($26<<24>>24)>(-1);
     $28 = $25;
     if ($27) {
      $22 = $28;
     } else {
      $29 = ($25|0)==($15|0);
      $30 = ((($$cast$i$i21$i$i)) + 2|0);
      $31 = $30;
      $32 = $29 ? $28 : $31;
      $33 = $29 ? $15 : $30;
      $34 = ($26&255)>(223);
      if ($34) {
       $35 = ($33|0)==($15|0);
       $36 = ((($33)) + 1|0);
       $37 = $36;
       $38 = $35 ? $32 : $37;
       $39 = $35 ? $15 : $36;
       $40 = ($26&255)>(239);
       if ($40) {
        $41 = ($39|0)==($15|0);
        $42 = ((($39)) + 1|0);
        $43 = $42;
        $44 = $41 ? $38 : $43;
        $22 = $44;
       } else {
        $22 = $38;
       }
      } else {
       $22 = $32;
      }
     }
     $45 = ($n$020$i$i|0)==(0);
     if ($45) {
      break;
     }
     $19 = (($_20$sroa$0$0) - ($20))|0;
     $21 = (($19) + ($22))|0;
     $23 = (($n$020$i$i) + -1)|0;
     $$cast$i$i$i$i = $22;
     $24 = ($$cast$i$i$i$i|0)==($15|0);
     if ($24) {
      $s1$sroa$10$0 = $2;
      break L8;
     } else {
      $$cast$i$i21$i$i = $$cast$i$i$i$i;$20 = $22;$_20$sroa$0$0 = $21;$n$020$i$i = $23;
     }
    }
    $46 = ($_20$sroa$0$0|0)==(0);
    $47 = ($_20$sroa$0$0|0)==($2|0);
    $or$cond$i$i = $46 | $47;
    if ($or$cond$i$i) {
     $s1$sroa$10$0 = $_20$sroa$0$0;
    } else {
     $not$$i$i = ($_20$sroa$0$0>>>0)<($2>>>0);
     if (!($not$$i$i)) {
      __ZN4core3str16slice_error_fail17h5f5b915047c27c9dE($1,$2,0,$_20$sroa$0$0);
      // unreachable;
     }
     $48 = (($1) + ($_20$sroa$0$0)|0);
     $49 = HEAP8[$48>>0]|0;
     $50 = ($49<<24>>24)>(-65);
     if ($50) {
      $s1$sroa$10$0 = $_20$sroa$0$0;
     } else {
      __ZN4core3str16slice_error_fail17h5f5b915047c27c9dE($1,$2,0,$_20$sroa$0$0);
      // unreachable;
     }
    }
   }
  } while(0);
  if ($5) {
   $s1$sroa$10$0106 = $s1$sroa$10$0;
  } else {
   $51 = ((($0)) + 28|0);
   $52 = HEAP32[$51>>2]|0;
   $53 = ((($0)) + 32|0);
   $54 = HEAP32[$53>>2]|0;
   $55 = ((($54)) + 12|0);
   $56 = HEAP32[$55>>2]|0;
   $57 = (FUNCTION_TABLE_iiii[$56 & 511]($52,$1,$s1$sroa$10$0)|0);
   $_0$sroa$0$0 = $57;
   STACKTOP = sp;return ($_0$sroa$0$0|0);
  }
 }
 $65 = ((($0)) + 16|0);
 $66 = HEAP32[$65>>2]|0;
 $67 = (($1) + ($s1$sroa$10$0106)|0);
 $68 = ($s1$sroa$10$0106|0)==(0);
 if ($68) {
  $accum$0$lcssa$i$i39 = 0;
 } else {
  $70 = $1;$accum$016$i$i29 = 0;
  while(1) {
   $69 = ((($70)) + 1|0);
   $71 = $69;
   $72 = HEAP8[$70>>0]|0;
   $73 = ($72<<24>>24)>(-1);
   if ($73) {
    $iter$sroa$0$5$ph$i$i37 = $71;
   } else {
    $74 = ($69|0)==($67|0);
    $75 = ((($70)) + 2|0);
    $76 = $75;
    $iter$sroa$0$1$i$i31 = $74 ? $71 : $76;
    $77 = $74 ? $67 : $75;
    $78 = ($72&255)>(223);
    if ($78) {
     $79 = ($77|0)==($67|0);
     $80 = ((($77)) + 1|0);
     $81 = $80;
     $iter$sroa$0$2$i$i33 = $79 ? $iter$sroa$0$1$i$i31 : $81;
     $82 = $79 ? $67 : $80;
     $83 = ($72&255)>(239);
     if ($83) {
      $84 = ($82|0)==($67|0);
      $85 = ((($82)) + 1|0);
      $86 = $85;
      $iter$sroa$0$3$i$i35 = $84 ? $iter$sroa$0$2$i$i33 : $86;
      $iter$sroa$0$5$ph$i$i37 = $iter$sroa$0$3$i$i35;
     } else {
      $iter$sroa$0$5$ph$i$i37 = $iter$sroa$0$2$i$i33;
     }
    } else {
     $iter$sroa$0$5$ph$i$i37 = $iter$sroa$0$1$i$i31;
    }
   }
   $87 = (($accum$016$i$i29) + 1)|0;
   $88 = $iter$sroa$0$5$ph$i$i37;
   $89 = ($88|0)==($67|0);
   if ($89) {
    $accum$0$lcssa$i$i39 = $87;
    break;
   } else {
    $70 = $88;$accum$016$i$i29 = $87;
   }
  }
 }
 $90 = ($accum$0$lcssa$i$i39>>>0)<($66>>>0);
 if (!($90)) {
  $58 = ((($0)) + 28|0);
  $59 = HEAP32[$58>>2]|0;
  $60 = ((($0)) + 32|0);
  $61 = HEAP32[$60>>2]|0;
  $62 = ((($61)) + 12|0);
  $63 = HEAP32[$62>>2]|0;
  $64 = (FUNCTION_TABLE_iiii[$63 & 511]($59,$1,$s1$sroa$10$0106)|0);
  $_0$sroa$0$0 = $64;
  STACKTOP = sp;return ($_0$sroa$0$0|0);
 }
 if ($68) {
  $accum$0$lcssa$i$i = 0;
 } else {
  $92 = $1;$accum$016$i$i = 0;
  while(1) {
   $91 = ((($92)) + 1|0);
   $93 = $91;
   $94 = HEAP8[$92>>0]|0;
   $95 = ($94<<24>>24)>(-1);
   if ($95) {
    $iter$sroa$0$5$ph$i$i = $93;
   } else {
    $96 = ($91|0)==($67|0);
    $97 = ((($92)) + 2|0);
    $98 = $97;
    $iter$sroa$0$1$i$i = $96 ? $93 : $98;
    $99 = $96 ? $67 : $97;
    $100 = ($94&255)>(223);
    if ($100) {
     $101 = ($99|0)==($67|0);
     $102 = ((($99)) + 1|0);
     $103 = $102;
     $iter$sroa$0$2$i$i = $101 ? $iter$sroa$0$1$i$i : $103;
     $104 = $101 ? $67 : $102;
     $105 = ($94&255)>(239);
     if ($105) {
      $106 = ($104|0)==($67|0);
      $107 = ((($104)) + 1|0);
      $108 = $107;
      $iter$sroa$0$3$i$i = $106 ? $iter$sroa$0$2$i$i : $108;
      $iter$sroa$0$5$ph$i$i = $iter$sroa$0$3$i$i;
     } else {
      $iter$sroa$0$5$ph$i$i = $iter$sroa$0$2$i$i;
     }
    } else {
     $iter$sroa$0$5$ph$i$i = $iter$sroa$0$1$i$i;
    }
   }
   $109 = (($accum$016$i$i) + 1)|0;
   $110 = $iter$sroa$0$5$ph$i$i;
   $111 = ($110|0)==($67|0);
   if ($111) {
    $accum$0$lcssa$i$i = $109;
    break;
   } else {
    $92 = $110;$accum$016$i$i = $109;
   }
  }
 }
 $112 = (($66) - ($accum$0$lcssa$i$i))|0;
 $113 = ((($0)) + 8|0);
 $extract$t$i = HEAP8[$113>>0]|0;
 $cond$i = ($extract$t$i<<24>>24)==(3);
 $align$0$off0$i = $cond$i ? 0 : $extract$t$i;
 $align$0$off0$i$clear = $align$0$off0$i & 3;
 switch ($align$0$off0$i$clear<<24>>24) {
 case 0:  {
  $_15$sroa$0$0$i = 0;$_15$sroa$6$0$i = $112;
  break;
 }
 case 3: case 1:  {
  $_15$sroa$0$0$i = $112;$_15$sroa$6$0$i = 0;
  break;
 }
 case 2:  {
  $117 = $112 >>> 1;
  $118 = (($112) + 1)|0;
  $119 = $118 >>> 1;
  $_15$sroa$0$0$i = $117;$_15$sroa$6$0$i = $119;
  break;
 }
 default: {
  // unreachable;
 }
 }
 HEAP32[$fill$i>>2] = 0;
 $114 = ((($0)) + 4|0);
 $115 = HEAP32[$114>>2]|0;
 $116 = ($115>>>0)<(128);
 do {
  if ($116) {
   $139 = $115&255;
   HEAP8[$fill$i>>0] = $139;
   $len$2$i$i = 1;
  } else {
   $140 = ($115>>>0)<(2048);
   if ($140) {
    $141 = $115 >>> 6;
    $142 = $141 & 31;
    $143 = $142&255;
    $144 = $143 | -64;
    HEAP8[$fill$i>>0] = $144;
    $145 = $115 & 63;
    $146 = $145&255;
    $147 = ((($fill$i)) + 1|0);
    $148 = $146 | -128;
    HEAP8[$147>>0] = $148;
    $len$2$i$i = 2;
    break;
   }
   $149 = ($115>>>0)<(65536);
   if ($149) {
    $150 = $115 >>> 12;
    $151 = $150 & 15;
    $152 = $151&255;
    $153 = $152 | -32;
    HEAP8[$fill$i>>0] = $153;
    $154 = $115 >>> 6;
    $155 = $154 & 63;
    $156 = $155&255;
    $157 = ((($fill$i)) + 1|0);
    $158 = $156 | -128;
    HEAP8[$157>>0] = $158;
    $159 = $115 & 63;
    $160 = $159&255;
    $161 = ((($fill$i)) + 2|0);
    $162 = $160 | -128;
    HEAP8[$161>>0] = $162;
    $len$2$i$i = 3;
    break;
   } else {
    $163 = $115 >>> 18;
    $164 = $163&255;
    $165 = $164 | -16;
    HEAP8[$fill$i>>0] = $165;
    $166 = $115 >>> 12;
    $167 = $166 & 63;
    $168 = $167&255;
    $169 = ((($fill$i)) + 1|0);
    $170 = $168 | -128;
    HEAP8[$169>>0] = $170;
    $171 = $115 >>> 6;
    $172 = $171 & 63;
    $173 = $172&255;
    $174 = ((($fill$i)) + 2|0);
    $175 = $173 | -128;
    HEAP8[$174>>0] = $175;
    $176 = $115 & 63;
    $177 = $176&255;
    $178 = ((($fill$i)) + 3|0);
    $179 = $177 | -128;
    HEAP8[$178>>0] = $179;
    $len$2$i$i = 4;
    break;
   }
  }
 } while(0);
 $122 = ((($0)) + 28|0);
 $124 = ((($0)) + 32|0);
 $iter$sroa$0$0$i = 0;
 while(1) {
  $120 = ($iter$sroa$0$0$i>>>0)<($_15$sroa$0$0$i>>>0);
  $121 = HEAP32[$122>>2]|0;
  $123 = HEAP32[$124>>2]|0;
  if (!($120)) {
   break;
  }
  $125 = (($iter$sroa$0$0$i) + 1)|0;
  $126 = ((($123)) + 12|0);
  $127 = HEAP32[$126>>2]|0;
  $128 = (FUNCTION_TABLE_iiii[$127 & 511]($121,$fill$i,$len$2$i$i)|0);
  $not$switch4$i2$i = ($128<<24>>24)==(0);
  if ($not$switch4$i2$i) {
   $iter$sroa$0$0$i = $125;
  } else {
   label = 41;
   break;
  }
 }
 if ((label|0) == 41) {
  $_0$sroa$0$0 = 1;
  STACKTOP = sp;return ($_0$sroa$0$0|0);
 }
 $129 = ((($123)) + 12|0);
 $130 = HEAP32[$129>>2]|0;
 $131 = (FUNCTION_TABLE_iiii[$130 & 511]($121,$1,$s1$sroa$10$0106)|0);
 $not$switch4$i8$i = ($131<<24>>24)==(0);
 if ($not$switch4$i8$i) {
  $iter2$sroa$0$0$i = 0;
 } else {
  $_0$sroa$0$0 = 1;
  STACKTOP = sp;return ($_0$sroa$0$0|0);
 }
 while(1) {
  $132 = ($iter2$sroa$0$0$i>>>0)<($_15$sroa$6$0$i>>>0);
  if (!($132)) {
   label = 45;
   break;
  }
  $133 = (($iter2$sroa$0$0$i) + 1)|0;
  $134 = HEAP32[$122>>2]|0;
  $135 = HEAP32[$124>>2]|0;
  $136 = ((($135)) + 12|0);
  $137 = HEAP32[$136>>2]|0;
  $138 = (FUNCTION_TABLE_iiii[$137 & 511]($134,$fill$i,$len$2$i$i)|0);
  $not$switch4$i$i = ($138<<24>>24)==(0);
  if ($not$switch4$i$i) {
   $iter2$sroa$0$0$i = $133;
  } else {
   label = 46;
   break;
  }
 }
 if ((label|0) == 45) {
  $_0$sroa$0$0 = 0;
  STACKTOP = sp;return ($_0$sroa$0$0|0);
 }
 else if ((label|0) == 46) {
  $_0$sroa$0$0 = 1;
  STACKTOP = sp;return ($_0$sroa$0$0|0);
 }
 return (0)|0;
}
function __ZN4core3str16slice_error_fail17h5f5b915047c27c9dE($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$ = 0, $$27 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, $_19 = 0, $_24 = 0, $_50 = 0, $_55 = 0, $_6$sroa$0$0$$sroa_idx$i = 0, $_6$sroa$0$0$$sroa_idx$i8 = 0, $_9$sroa$0$0 = 0, $_9$sroa$8$0 = 0, $begin = 0, $ellipsis = 0, $end = 0, $max$0$i25 = 0, $not$$i$i = 0, $or$cond$i$i = 0, $s = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(144|0);
 $begin = sp + 132|0;
 $end = sp + 128|0;
 $s = sp + 120|0;
 $ellipsis = sp + 112|0;
 $_19 = sp + 88|0;
 $_24 = sp + 56|0;
 $_50 = sp + 32|0;
 $_55 = sp;
 HEAP32[$begin>>2] = $2;
 HEAP32[$end>>2] = $3;
 $4 = ($1>>>0)<(257);
 L1: do {
  if ($4) {
   $_9$sroa$0$0 = 1;$_9$sroa$8$0 = $1;
  } else {
   $max$0$i25 = 256;
   while(1) {
    $not$$i$i = ($max$0$i25>>>0)<($1>>>0);
    if ($not$$i$i) {
     $5 = (($0) + ($max$0$i25)|0);
     $6 = HEAP8[$5>>0]|0;
     $7 = ($6<<24>>24)>(-65);
     if ($7) {
      $_9$sroa$0$0 = 0;$_9$sroa$8$0 = $max$0$i25;
      break L1;
     }
    }
    $8 = (($max$0$i25) + -1)|0;
    $9 = ($8|0)==(0);
    $10 = ($8|0)==($1|0);
    $or$cond$i$i = $9 | $10;
    if ($or$cond$i$i) {
     $_9$sroa$0$0 = 0;$_9$sroa$8$0 = $8;
     break;
    } else {
     $max$0$i25 = $8;
    }
   }
  }
 } while(0);
 $11 = $0;
 HEAP32[$s>>2] = $11;
 $12 = ((($s)) + 4|0);
 HEAP32[$12>>2] = $_9$sroa$8$0;
 $$ = $_9$sroa$0$0 ? 27292 : 23855;
 $$27 = $_9$sroa$0$0 ? 0 : 5;
 HEAP32[$ellipsis>>2] = $$;
 $13 = ((($ellipsis)) + 4|0);
 HEAP32[$13>>2] = $$27;
 $14 = ($2>>>0)>($3>>>0);
 if ($14) {
  $15 = $begin;
  $16 = $end;
  $17 = $s;
  $18 = $ellipsis;
  HEAP32[$_24>>2] = $15;
  $19 = ((($_24)) + 4|0);
  HEAP32[$19>>2] = (264);
  $20 = ((($_24)) + 8|0);
  HEAP32[$20>>2] = $16;
  $21 = ((($_24)) + 12|0);
  HEAP32[$21>>2] = (264);
  $22 = ((($_24)) + 16|0);
  HEAP32[$22>>2] = $17;
  $23 = ((($_24)) + 20|0);
  HEAP32[$23>>2] = (370);
  $24 = ((($_24)) + 24|0);
  HEAP32[$24>>2] = $18;
  $25 = ((($_24)) + 28|0);
  HEAP32[$25>>2] = (370);
  HEAP32[$_19>>2] = 7220;
  $26 = ((($_19)) + 4|0);
  HEAP32[$26>>2] = 4;
  $_6$sroa$0$0$$sroa_idx$i = ((($_19)) + 8|0);
  HEAP32[$_6$sroa$0$0$$sroa_idx$i>>2] = 0;
  $27 = ((($_19)) + 16|0);
  HEAP32[$27>>2] = $_24;
  $28 = ((($_19)) + 20|0);
  HEAP32[$28>>2] = 4;
  __ZN4core9panicking9panic_fmt17hfa35599633a0afa2E($_19,22553,101,1719);
  // unreachable;
 } else {
  $29 = $begin;
  $30 = $end;
  $31 = $s;
  $32 = $ellipsis;
  HEAP32[$_55>>2] = $29;
  $33 = ((($_55)) + 4|0);
  HEAP32[$33>>2] = (264);
  $34 = ((($_55)) + 8|0);
  HEAP32[$34>>2] = $30;
  $35 = ((($_55)) + 12|0);
  HEAP32[$35>>2] = (264);
  $36 = ((($_55)) + 16|0);
  HEAP32[$36>>2] = $31;
  $37 = ((($_55)) + 20|0);
  HEAP32[$37>>2] = (370);
  $38 = ((($_55)) + 24|0);
  HEAP32[$38>>2] = $32;
  $39 = ((($_55)) + 28|0);
  HEAP32[$39>>2] = (370);
  HEAP32[$_50>>2] = 7252;
  $40 = ((($_50)) + 4|0);
  HEAP32[$40>>2] = 5;
  $_6$sroa$0$0$$sroa_idx$i8 = ((($_50)) + 8|0);
  HEAP32[$_6$sroa$0$0$$sroa_idx$i8>>2] = 0;
  $41 = ((($_50)) + 16|0);
  HEAP32[$41>>2] = $_55;
  $42 = ((($_50)) + 20|0);
  HEAP32[$42>>2] = 4;
  __ZN4core9panicking9panic_fmt17hfa35599633a0afa2E($_50,22553,101,1721);
  // unreachable;
 }
}
function __ZN55__LT__RF__u27_a_u20_T_u20_as_u20_core__fmt__Display_GT_3fmt17h0070a87612600aa5E_1670($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[$0>>2]|0;
 $3 = ((($0)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (__ZN4core3fmt9Formatter3pad17hd3e8d63fceae72f6E($1,$2,$4)|0);
 return ($5|0);
}
function __ZN4core3fmt5write17hdd089a59fed6a1dbE($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$sroa_idx = 0, $$sroa_idx203 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0;
 var $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0;
 var $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0;
 var $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0;
 var $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $_0$sroa$0$0 = 0, $_12$sroa$8$2$i = 0, $_6$sroa$0$0$$sroa_idx = 0, $_7$sroa$0$0$$sroa_idx = 0, $_8$sroa$8$2$i = 0;
 var $args$sroa$0$0$copyload = 0, $args$sroa$12$0$$sroa_idx63 = 0, $args$sroa$12$0$copyload = 0, $args$sroa$5$0$$sroa_idx48 = 0, $args$sroa$5$0$copyload = 0, $args$sroa$6$0$$sroa_idx51 = 0, $args$sroa$6$0$copyload = 0, $args$sroa$8$0$$sroa_idx55 = 0, $args$sroa$8$0$copyload = 0, $args$sroa$9$0$$sroa_idx58 = 0, $args$sroa$9$0$copyload = 0, $formatter = 0, $iter$sroa$0$0 = 0, $iter2$sroa$0$0 = 0, $not$switch4$i = 0, $not$switch4$i68 = 0, $not$switch4$i70 = 0, $not$switch4$i72 = 0, $not$switch4$i74 = 0, $or$cond = 0;
 var $pieces$sroa$0$0 = 0, $pieces$sroa$0$1 = 0, $pieces$sroa$0$4 = 0, $switch$i = 0, $switch21tmp = 0, $switch22tmp = 0, $switchtmp = 0, $trunc$i$i = 0, $trunc$i$i$clear = 0, $trunc$i5$i = 0, $trunc$i5$i$clear = 0, $value$sroa$0$0$i = 0, $value$sroa$0$0$in$i = 0, $value$sroa$5$0$i = 0, $value$sroa$5$0$in$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $formatter = sp;
 $args$sroa$0$0$copyload = HEAP32[$2>>2]|0;
 $args$sroa$5$0$$sroa_idx48 = ((($2)) + 4|0);
 $args$sroa$5$0$copyload = HEAP32[$args$sroa$5$0$$sroa_idx48>>2]|0;
 $args$sroa$6$0$$sroa_idx51 = ((($2)) + 8|0);
 $args$sroa$6$0$copyload = HEAP32[$args$sroa$6$0$$sroa_idx51>>2]|0;
 $args$sroa$8$0$$sroa_idx55 = ((($2)) + 12|0);
 $args$sroa$8$0$copyload = HEAP32[$args$sroa$8$0$$sroa_idx55>>2]|0;
 $args$sroa$9$0$$sroa_idx58 = ((($2)) + 16|0);
 $args$sroa$9$0$copyload = HEAP32[$args$sroa$9$0$$sroa_idx58>>2]|0;
 $args$sroa$12$0$$sroa_idx63 = ((($2)) + 20|0);
 $args$sroa$12$0$copyload = HEAP32[$args$sroa$12$0$$sroa_idx63>>2]|0;
 $3 = (($args$sroa$9$0$copyload) + ($args$sroa$12$0$copyload<<3)|0);
 $4 = $args$sroa$9$0$copyload;
 $5 = $3;
 HEAP32[$formatter>>2] = 0;
 $6 = ((($formatter)) + 4|0);
 HEAP32[$6>>2] = 32;
 $7 = ((($formatter)) + 8|0);
 HEAP8[$7>>0] = 3;
 $_6$sroa$0$0$$sroa_idx = ((($formatter)) + 12|0);
 HEAP32[$_6$sroa$0$0$$sroa_idx>>2] = 0;
 $_7$sroa$0$0$$sroa_idx = ((($formatter)) + 20|0);
 HEAP32[$_7$sroa$0$0$$sroa_idx>>2] = 0;
 $8 = ((($formatter)) + 28|0);
 HEAP32[$8>>2] = $0;
 $9 = ((($formatter)) + 32|0);
 HEAP32[$9>>2] = $1;
 $$sroa_idx = ((($formatter)) + 36|0);
 HEAP32[$$sroa_idx>>2] = $4;
 $$sroa_idx203 = ((($formatter)) + 40|0);
 HEAP32[$$sroa_idx203>>2] = $5;
 $10 = ((($formatter)) + 44|0);
 HEAP32[$10>>2] = $args$sroa$9$0$copyload;
 $11 = ((($formatter)) + 48|0);
 HEAP32[$11>>2] = $args$sroa$12$0$copyload;
 $12 = (($args$sroa$0$0$copyload) + ($args$sroa$5$0$copyload<<3)|0);
 $switchtmp = ($args$sroa$6$0$copyload|0)==(0|0);
 L1: do {
  if ($switchtmp) {
   $iter$sroa$0$0 = $args$sroa$9$0$copyload;$pieces$sroa$0$1 = $args$sroa$0$0$copyload;
   while(1) {
    $18 = ($iter$sroa$0$0|0)==($3|0);
    if ($18) {
     $pieces$sroa$0$0 = $pieces$sroa$0$1;
     label = 3;
     break L1;
    }
    $19 = ((($iter$sroa$0$0)) + 8|0);
    $20 = ($pieces$sroa$0$1|0)==($12|0);
    if ($20) {
     label = 43;
     break L1;
    }
    $21 = ((($pieces$sroa$0$1)) + 8|0);
    $switch22tmp = ($iter$sroa$0$0|0)==(0|0);
    if ($switch22tmp) {
     $pieces$sroa$0$0 = $21;
     label = 3;
     break L1;
    }
    $22 = HEAP32[$8>>2]|0;
    $23 = HEAP32[$9>>2]|0;
    $24 = HEAP32[$pieces$sroa$0$1>>2]|0;
    $25 = ((($pieces$sroa$0$1)) + 4|0);
    $26 = HEAP32[$25>>2]|0;
    $27 = ((($23)) + 12|0);
    $28 = HEAP32[$27>>2]|0;
    $29 = (FUNCTION_TABLE_iiii[$28 & 511]($22,$24,$26)|0);
    $not$switch4$i74 = ($29<<24>>24)==(0);
    if (!($not$switch4$i74)) {
     label = 10;
     break L1;
    }
    $30 = ((($iter$sroa$0$0)) + 4|0);
    $31 = HEAP32[$30>>2]|0;
    $32 = HEAP32[$iter$sroa$0$0>>2]|0;
    $33 = (FUNCTION_TABLE_iii[$31 & 511]($32,$formatter)|0);
    $not$switch4$i72 = ($33<<24>>24)==(0);
    if ($not$switch4$i72) {
     $iter$sroa$0$0 = $19;$pieces$sroa$0$1 = $21;
    } else {
     label = 10;
     break;
    }
   }
  } else {
   $13 = (($args$sroa$6$0$copyload) + (($args$sroa$8$0$copyload*36)|0)|0);
   $14 = ((($formatter)) + 12|0);
   $15 = ((($formatter)) + 20|0);
   $16 = ((($formatter)) + 36|0);
   $iter2$sroa$0$0 = $args$sroa$6$0$copyload;$pieces$sroa$0$4 = $args$sroa$0$0$copyload;
   L9: while(1) {
    $34 = ($iter2$sroa$0$0|0)==($13|0);
    if ($34) {
     $pieces$sroa$0$0 = $pieces$sroa$0$4;
     label = 3;
     break L1;
    }
    $35 = ((($iter2$sroa$0$0)) + 36|0);
    $36 = ($pieces$sroa$0$4|0)==($12|0);
    if ($36) {
     label = 43;
     break L1;
    }
    $37 = ((($pieces$sroa$0$4)) + 8|0);
    $38 = HEAP32[$8>>2]|0;
    $39 = HEAP32[$9>>2]|0;
    $40 = HEAP32[$pieces$sroa$0$4>>2]|0;
    $41 = ((($pieces$sroa$0$4)) + 4|0);
    $42 = HEAP32[$41>>2]|0;
    $43 = ((($39)) + 12|0);
    $44 = HEAP32[$43>>2]|0;
    $45 = (FUNCTION_TABLE_iiii[$44 & 511]($38,$40,$42)|0);
    $not$switch4$i70 = ($45<<24>>24)==(0);
    if (!($not$switch4$i70)) {
     label = 10;
     break L1;
    }
    $46 = ((($iter2$sroa$0$0)) + 8|0);
    $47 = HEAP32[$46>>2]|0;
    HEAP32[$6>>2] = $47;
    $48 = ((($iter2$sroa$0$0)) + 12|0);
    $49 = HEAP8[$48>>0]|0;
    HEAP8[$7>>0] = $49;
    $50 = ((($iter2$sroa$0$0)) + 16|0);
    $51 = HEAP32[$50>>2]|0;
    HEAP32[$formatter>>2] = $51;
    $52 = ((($iter2$sroa$0$0)) + 28|0);
    $53 = HEAP32[$52>>2]|0;
    $trunc$i$i = $53&255;
    $trunc$i$i$clear = $trunc$i$i & 3;
    switch ($trunc$i$i$clear<<24>>24) {
    case 0:  {
     $63 = ((($iter2$sroa$0$0)) + 32|0);
     $64 = HEAP32[$63>>2]|0;
     $77 = 0;$80 = 1;$_8$sroa$8$2$i = $64;
     break;
    }
    case 1:  {
     $65 = ((($iter2$sroa$0$0)) + 32|0);
     $66 = HEAP32[$65>>2]|0;
     $67 = HEAP32[$11>>2]|0;
     $68 = ($66>>>0)<($67>>>0);
     if (!($68)) {
      label = 23;
      break L9;
     }
     $69 = HEAP32[$10>>2]|0;
     $70 = (((($69) + ($66<<3)|0)) + 4|0);
     $71 = HEAP32[$70>>2]|0;
     $72 = ($71|0)==((361)|0);
     if ($72) {
      $73 = (($69) + ($66<<3)|0);
      $74 = HEAP32[$73>>2]|0;
      $75 = HEAP32[$74>>2]|0;
      $77 = 0;$80 = 1;$_8$sroa$8$2$i = $75;
     } else {
      $77 = 0;$80 = 0;$_8$sroa$8$2$i = 0;
     }
     break;
    }
    case 2:  {
     $54 = HEAP32[$16>>2]|0;
     $55 = HEAP32[$$sroa_idx203>>2]|0;
     $56 = ($54|0)==($55|0);
     if ($56) {
      $77 = 0;$80 = 0;$_8$sroa$8$2$i = 0;
     } else {
      $57 = ((($54)) + 8|0);
      HEAP32[$16>>2] = $57;
      $58 = ((($54)) + 4|0);
      $59 = HEAP32[$58>>2]|0;
      $60 = ($59|0)==((361)|0);
      if ($60) {
       $61 = HEAP32[$54>>2]|0;
       $62 = HEAP32[$61>>2]|0;
       $77 = 0;$80 = 1;$_8$sroa$8$2$i = $62;
      } else {
       $77 = 0;$80 = 0;$_8$sroa$8$2$i = 0;
      }
     }
     break;
    }
    case 3:  {
     $77 = 0;$80 = 0;$_8$sroa$8$2$i = 0;
     break;
    }
    default: {
     label = 22;
     break L9;
    }
    }
    $76 = $_8$sroa$8$2$i | $77;
    $78 = $14;
    $79 = $78;
    HEAP32[$79>>2] = $80;
    $81 = (($78) + 4)|0;
    $82 = $81;
    HEAP32[$82>>2] = $76;
    $83 = ((($iter2$sroa$0$0)) + 20|0);
    $84 = HEAP32[$83>>2]|0;
    $trunc$i5$i = $84&255;
    $trunc$i5$i$clear = $trunc$i5$i & 3;
    switch ($trunc$i5$i$clear<<24>>24) {
    case 0:  {
     $94 = ((($iter2$sroa$0$0)) + 24|0);
     $95 = HEAP32[$94>>2]|0;
     $108 = 0;$111 = 1;$_12$sroa$8$2$i = $95;
     break;
    }
    case 1:  {
     $96 = ((($iter2$sroa$0$0)) + 24|0);
     $97 = HEAP32[$96>>2]|0;
     $98 = HEAP32[$11>>2]|0;
     $99 = ($97>>>0)<($98>>>0);
     if (!($99)) {
      label = 33;
      break L9;
     }
     $100 = HEAP32[$10>>2]|0;
     $101 = (((($100) + ($97<<3)|0)) + 4|0);
     $102 = HEAP32[$101>>2]|0;
     $103 = ($102|0)==((361)|0);
     if ($103) {
      $104 = (($100) + ($97<<3)|0);
      $105 = HEAP32[$104>>2]|0;
      $106 = HEAP32[$105>>2]|0;
      $108 = 0;$111 = 1;$_12$sroa$8$2$i = $106;
     } else {
      $108 = 0;$111 = 0;$_12$sroa$8$2$i = 0;
     }
     break;
    }
    case 2:  {
     $85 = HEAP32[$16>>2]|0;
     $86 = HEAP32[$$sroa_idx203>>2]|0;
     $87 = ($85|0)==($86|0);
     if ($87) {
      $108 = 0;$111 = 0;$_12$sroa$8$2$i = 0;
     } else {
      $88 = ((($85)) + 8|0);
      HEAP32[$16>>2] = $88;
      $89 = ((($85)) + 4|0);
      $90 = HEAP32[$89>>2]|0;
      $91 = ($90|0)==((361)|0);
      if ($91) {
       $92 = HEAP32[$85>>2]|0;
       $93 = HEAP32[$92>>2]|0;
       $108 = 0;$111 = 1;$_12$sroa$8$2$i = $93;
      } else {
       $108 = 0;$111 = 0;$_12$sroa$8$2$i = 0;
      }
     }
     break;
    }
    case 3:  {
     $108 = 0;$111 = 0;$_12$sroa$8$2$i = 0;
     break;
    }
    default: {
     label = 32;
     break L9;
    }
    }
    $107 = $_12$sroa$8$2$i | $108;
    $109 = $15;
    $110 = $109;
    HEAP32[$110>>2] = $111;
    $112 = (($109) + 4)|0;
    $113 = $112;
    HEAP32[$113>>2] = $107;
    $114 = HEAP32[$iter2$sroa$0$0>>2]|0;
    $switch$i = ($114|0)==(1);
    if ($switch$i) {
     $120 = ((($iter2$sroa$0$0)) + 4|0);
     $121 = HEAP32[$120>>2]|0;
     $122 = HEAP32[$11>>2]|0;
     $123 = ($121>>>0)<($122>>>0);
     if (!($123)) {
      label = 40;
      break;
     }
     $124 = HEAP32[$10>>2]|0;
     $125 = (($124) + ($121<<3)|0);
     $126 = (((($124) + ($121<<3)|0)) + 4|0);
     $value$sroa$0$0$in$i = $125;$value$sroa$5$0$in$i = $126;
    } else {
     $115 = HEAP32[$16>>2]|0;
     $116 = HEAP32[$$sroa_idx203>>2]|0;
     $117 = ($115|0)==($116|0);
     if ($117) {
      label = 37;
      break;
     }
     $118 = ((($115)) + 8|0);
     HEAP32[$16>>2] = $118;
     $119 = ((($115)) + 4|0);
     $value$sroa$0$0$in$i = $115;$value$sroa$5$0$in$i = $119;
    }
    $value$sroa$5$0$i = HEAP32[$value$sroa$5$0$in$i>>2]|0;
    $value$sroa$0$0$i = HEAP32[$value$sroa$0$0$in$i>>2]|0;
    $127 = (FUNCTION_TABLE_iii[$value$sroa$5$0$i & 511]($value$sroa$0$0$i,$formatter)|0);
    $not$switch4$i68 = ($127<<24>>24)==(0);
    if ($not$switch4$i68) {
     $iter2$sroa$0$0 = $35;$pieces$sroa$0$4 = $37;
    } else {
     label = 10;
     break L1;
    }
   }
   if ((label|0) == 22) {
    // unreachable;
   }
   else if ((label|0) == 23) {
    __ZN4core9panicking18panic_bounds_check17hd14a5808e41829e9E(23941,101,878,$66,$67);
    // unreachable;
   }
   else if ((label|0) == 32) {
    // unreachable;
   }
   else if ((label|0) == 33) {
    __ZN4core9panicking18panic_bounds_check17hd14a5808e41829e9E(23941,101,878,$97,$98);
    // unreachable;
   }
   else if ((label|0) == 37) {
    __ZN4core9panicking5panic17ha7507e8e32961bfeE(6500);
    // unreachable;
   }
   else if ((label|0) == 40) {
    __ZN4core9panicking18panic_bounds_check17hd14a5808e41829e9E(23941,101,866,$121,$122);
    // unreachable;
   }
  }
 } while(0);
 if ((label|0) == 3) {
  $17 = ($pieces$sroa$0$0|0)==($12|0);
  $switch21tmp = ($pieces$sroa$0$0|0)==(0|0);
  $or$cond = $17 | $switch21tmp;
  if ($or$cond) {
   label = 43;
  } else {
   $128 = HEAP32[$8>>2]|0;
   $129 = HEAP32[$9>>2]|0;
   $130 = HEAP32[$pieces$sroa$0$0>>2]|0;
   $131 = ((($pieces$sroa$0$0)) + 4|0);
   $132 = HEAP32[$131>>2]|0;
   $133 = ((($129)) + 12|0);
   $134 = HEAP32[$133>>2]|0;
   $135 = (FUNCTION_TABLE_iiii[$134 & 511]($128,$130,$132)|0);
   $not$switch4$i = ($135<<24>>24)==(0);
   if ($not$switch4$i) {
    label = 43;
   } else {
    label = 10;
   }
  }
 }
 if ((label|0) == 10) {
  $_0$sroa$0$0 = 1;
  STACKTOP = sp;return ($_0$sroa$0$0|0);
 }
 else if ((label|0) == 43) {
  $_0$sroa$0$0 = 0;
  STACKTOP = sp;return ($_0$sroa$0$0|0);
 }
 return (0)|0;
}
function __ZN4core3fmt10ArgumentV110show_usize17h97077bc79b895d85E($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (__ZN4core3fmt3num54__LT_impl_u20_core__fmt__Display_u20_for_u20_usize_GT_3fmt17hfc58b44c96803197E($0,$1)|0);
 return ($2|0);
}
function __ZN4core3fmt8builders10DebugTuple5field17h7aa2b38aabb11517E($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$$i$i = 0, $$15$i$i = 0, $$16$i$i = 0, $$elt = 0, $$unpack = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, $_0$sroa$0$0$i = 0, $_0$sroa$0$0$i$i = 0, $_15$i$i = 0, $_20$i$i = 0, $_34$sroa$4$0$$sroa_idx19$i$i = 0, $_34$sroa$5$0$$sroa_idx21$i$i = 0, $_34$sroa$624$0$$sroa_idx26$i$i = 0, $_34$sroa$7$0$$sroa_idx28$i$i = 0, $_39$i$i = 0, $_7$i$i$i = 0, $_8$sroa$0$0$$sroa_idx$i$i$i = 0, $_8$sroa$4$0$$sroa_idx2$i$i$i = 0, $prefix$i$i = 0, $space$i$i = 0, $switch3$i = 0, $value = 0, $writer$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(128|0);
 $_7$i$i$i = sp + 96|0;
 $prefix$i$i = sp + 88|0;
 $space$i$i = sp + 80|0;
 $writer$i$i = sp + 72|0;
 $_15$i$i = sp + 48|0;
 $_20$i$i = sp + 32|0;
 $_39$i$i = sp + 8|0;
 $value = sp;
 HEAP32[$value>>2] = $1;
 $3 = ((($value)) + 4|0);
 HEAP32[$3>>2] = $2;
 $$elt = ((($0)) + 4|0);
 $$unpack = HEAP8[$$elt>>0]|0;
 $4 = $value;
 $switch3$i = ($$unpack<<24>>24)==(0);
 $5 = ((($0)) + 8|0);
 if (!($switch3$i)) {
  $_0$sroa$0$0$i = 1;
  HEAP8[$$elt>>0] = $_0$sroa$0$0$i;
  $37 = HEAP32[$5>>2]|0;
  $38 = (($37) + 1)|0;
  HEAP32[$5>>2] = $38;
  STACKTOP = sp;return ($0|0);
 }
 $6 = HEAP32[$5>>2]|0;
 $7 = ($6|0)==(0);
 $$$i$i = $7 ? 18774 : 18783;
 $$15$i$i = $7 ? 27292 : 24044;
 $8 = $7&1;
 $$16$i$i = $8 ^ 1;
 HEAP32[$prefix$i$i>>2] = $$$i$i;
 $9 = ((($prefix$i$i)) + 4|0);
 HEAP32[$9>>2] = 1;
 HEAP32[$space$i$i>>2] = $$15$i$i;
 $10 = ((($space$i$i)) + 4|0);
 HEAP32[$10>>2] = $$16$i$i;
 $11 = HEAP32[$0>>2]|0;
 $12 = HEAP32[$11>>2]|0;
 $13 = $12 & 4;
 $14 = ($13|0)==(0);
 if ($14) {
  $25 = $prefix$i$i;
  $26 = $space$i$i;
  HEAP32[$_39$i$i>>2] = $25;
  $27 = ((($_39$i$i)) + 4|0);
  HEAP32[$27>>2] = (370);
  $28 = ((($_39$i$i)) + 8|0);
  HEAP32[$28>>2] = $26;
  $29 = ((($_39$i$i)) + 12|0);
  HEAP32[$29>>2] = (370);
  $30 = ((($_39$i$i)) + 16|0);
  HEAP32[$30>>2] = $4;
  $31 = ((($_39$i$i)) + 20|0);
  HEAP32[$31>>2] = (371);
  $32 = ((($11)) + 28|0);
  $33 = HEAP32[$32>>2]|0;
  $34 = ((($11)) + 32|0);
  $35 = HEAP32[$34>>2]|0;
  HEAP32[$_7$i$i$i>>2] = 7380;
  $_34$sroa$4$0$$sroa_idx19$i$i = ((($_7$i$i$i)) + 4|0);
  HEAP32[$_34$sroa$4$0$$sroa_idx19$i$i>>2] = 3;
  $_34$sroa$5$0$$sroa_idx21$i$i = ((($_7$i$i$i)) + 8|0);
  HEAP32[$_34$sroa$5$0$$sroa_idx21$i$i>>2] = 0;
  $_34$sroa$624$0$$sroa_idx26$i$i = ((($_7$i$i$i)) + 16|0);
  HEAP32[$_34$sroa$624$0$$sroa_idx26$i$i>>2] = $_39$i$i;
  $_34$sroa$7$0$$sroa_idx28$i$i = ((($_7$i$i$i)) + 20|0);
  HEAP32[$_34$sroa$7$0$$sroa_idx28$i$i>>2] = 3;
  $36 = (__ZN4core3fmt5write17hdd089a59fed6a1dbE($33,$35,$_7$i$i$i)|0);
  $_0$sroa$0$0$i$i = $36;
 } else {
  $15 = $11;
  HEAP32[$writer$i$i>>2] = $15;
  $16 = ((($writer$i$i)) + 4|0);
  HEAP8[$16>>0] = 0;
  $17 = $prefix$i$i;
  HEAP32[$_20$i$i>>2] = $17;
  $18 = ((($_20$i$i)) + 4|0);
  HEAP32[$18>>2] = (370);
  $19 = ((($_20$i$i)) + 8|0);
  HEAP32[$19>>2] = $4;
  $20 = ((($_20$i$i)) + 12|0);
  HEAP32[$20>>2] = (371);
  HEAP32[$_15$i$i>>2] = 7292;
  $21 = ((($_15$i$i)) + 4|0);
  HEAP32[$21>>2] = 2;
  $_8$sroa$0$0$$sroa_idx$i$i$i = ((($_15$i$i)) + 8|0);
  HEAP32[$_8$sroa$0$0$$sroa_idx$i$i$i>>2] = 7308;
  $_8$sroa$4$0$$sroa_idx2$i$i$i = ((($_15$i$i)) + 12|0);
  HEAP32[$_8$sroa$4$0$$sroa_idx2$i$i$i>>2] = 2;
  $22 = ((($_15$i$i)) + 16|0);
  HEAP32[$22>>2] = $_20$i$i;
  $23 = ((($_15$i$i)) + 20|0);
  HEAP32[$23>>2] = 2;
  $24 = (__ZN4core3fmt5write17hdd089a59fed6a1dbE($writer$i$i,4968,$_15$i$i)|0);
  $_0$sroa$0$0$i$i = $24;
 }
 $_0$sroa$0$0$i = $_0$sroa$0$0$i$i;
 HEAP8[$$elt>>0] = $_0$sroa$0$0$i;
 $37 = HEAP32[$5>>2]|0;
 $38 = (($37) + 1)|0;
 HEAP32[$5>>2] = $38;
 STACKTOP = sp;return ($0|0);
}
function __ZN53__LT__RF__u27_a_u20_T_u20_as_u20_core__fmt__Debug_GT_3fmt17h9f761411a03adf5aE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[$0>>2]|0;
 $3 = ((($0)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ((($4)) + 12|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = (FUNCTION_TABLE_iii[$6 & 511]($2,$1)|0);
 return ($7|0);
}
function __ZN4drop17hee667335a0558b00E($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZN96__LT_core__fmt__builders__PadAdapter_LT__u27_a_C__u20__u27_b_GT__u20_as_u20_core__fmt__Write_GT_9write_str17hb2a4662586509abfE($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$$i$i$i = 0, $$cast$i$i$i$i$i = 0, $$pre$i = 0, $$pre$phi$iZ2D = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0;
 var $80 = 0, $81 = 0, $9 = 0, $_0$0$i10$i$i$i$i$i$i$i = 0, $_0$0$i16$i$i$i$i$i$i$i = 0, $_0$0$i23$i$i$i$i$i$i$i = 0, $_0$sroa$0$0 = 0, $_5$sroa$0$0$i$i$i = 0, $_5$sroa$4$0$ph$i$i$i$i$i = 0, $_5$sroa$8$0$i$i$i = 0, $_5$sroa$8$1$i$i$i = 0, $_7$sroa$6$0$i = 0, $_7$sroa$6$1$i = 0, $not$$i$i = 0, $not$$i$i$i = 0, $not$$i$i44 = 0, $not$switch4$i = 0, $not$switch4$i41 = 0, $or$cond$i$i43 = 0, $phitmp$i$i$i$i$i$i$i = 0;
 var $phitmp32$i$i$i$i$i$i$i = 0, $phitmp33$i$i$i$i$i$i$i = 0, $s$sroa$0$062 = 0, $s$sroa$10$063 = 0, $split$0 = 0, $trunc$i$i$i = 0, $trunc$i$i$i$clear = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($2|0)==(0);
 if ($3) {
  $_0$sroa$0$0 = 0;
  return ($_0$sroa$0$0|0);
 }
 $4 = ((($0)) + 4|0);
 $s$sroa$0$062 = $1;$s$sroa$10$063 = $2;
 L4: while(1) {
  $5 = HEAP8[$4>>0]|0;
  $6 = ($5<<24>>24)==(0);
  if (!($6)) {
   $7 = HEAP32[$0>>2]|0;
   $8 = ((($7)) + 28|0);
   $9 = HEAP32[$8>>2]|0;
   $10 = ((($7)) + 32|0);
   $11 = HEAP32[$10>>2]|0;
   $12 = ((($11)) + 12|0);
   $13 = HEAP32[$12>>2]|0;
   $14 = (FUNCTION_TABLE_iiii[$13 & 511]($9,24045,4)|0);
   $not$switch4$i = ($14<<24>>24)==(0);
   if (!($not$switch4$i)) {
    $_0$sroa$0$0 = 1;
    label = 5;
    break;
   }
  }
  $15 = (($s$sroa$0$062) + ($s$sroa$10$063)|0);
  $16 = $s$sroa$0$062;
  $17 = $16;$_5$sroa$8$0$i$i$i = 0;$_7$sroa$6$0$i = 0;
  L9: while(1) {
   $$cast$i$i$i$i$i = $17;
   $18 = ($$cast$i$i$i$i$i|0)==($15|0);
   if ($18) {
    $78 = $17;$_5$sroa$0$0$i$i$i = 2;$_5$sroa$8$1$i$i$i = $_5$sroa$8$0$i$i$i;$_7$sroa$6$1$i = $_7$sroa$6$0$i;
   } else {
    $21 = ((($$cast$i$i$i$i$i)) + 1|0);
    $20 = HEAP8[$$cast$i$i$i$i$i>>0]|0;
    $22 = ($20<<24>>24)>(-1);
    $23 = $21;
    if ($22) {
     $19 = $20&255;
     $58 = $23;$_5$sroa$4$0$ph$i$i$i$i$i = $19;
    } else {
     $24 = $20 & 31;
     $25 = $24&255;
     $26 = ($21|0)==($15|0);
     if ($26) {
      $34 = $15;$79 = $23;$_0$0$i23$i$i$i$i$i$i$i = 0;
     } else {
      $27 = ((($$cast$i$i$i$i$i)) + 2|0);
      $28 = HEAP8[$21>>0]|0;
      $phitmp$i$i$i$i$i$i$i = $28 & 63;
      $29 = $27;
      $34 = $27;$79 = $29;$_0$0$i23$i$i$i$i$i$i$i = $phitmp$i$i$i$i$i$i$i;
     }
     $30 = $25 << 6;
     $31 = $_0$0$i23$i$i$i$i$i$i$i&255;
     $32 = $31 | $30;
     $33 = ($20&255)>(223);
     if ($33) {
      $35 = ($34|0)==($15|0);
      if ($35) {
       $45 = $15;$80 = $79;$_0$0$i16$i$i$i$i$i$i$i = 0;
      } else {
       $36 = ((($34)) + 1|0);
       $37 = HEAP8[$34>>0]|0;
       $phitmp32$i$i$i$i$i$i$i = $37 & 63;
       $38 = $36;
       $45 = $36;$80 = $38;$_0$0$i16$i$i$i$i$i$i$i = $phitmp32$i$i$i$i$i$i$i;
      }
      $39 = $31 << 6;
      $40 = $_0$0$i16$i$i$i$i$i$i$i&255;
      $41 = $40 | $39;
      $42 = $25 << 12;
      $43 = $41 | $42;
      $44 = ($20&255)>(239);
      if ($44) {
       $46 = ($45|0)==($15|0);
       if ($46) {
        $81 = $80;$_0$0$i10$i$i$i$i$i$i$i = 0;
       } else {
        $47 = ((($45)) + 1|0);
        $48 = HEAP8[$45>>0]|0;
        $phitmp33$i$i$i$i$i$i$i = $48 & 63;
        $49 = $47;
        $81 = $49;$_0$0$i10$i$i$i$i$i$i$i = $phitmp33$i$i$i$i$i$i$i;
       }
       $50 = $25 << 18;
       $51 = $50 & 1835008;
       $52 = $41 << 6;
       $53 = $_0$0$i10$i$i$i$i$i$i$i&255;
       $54 = $52 | $51;
       $55 = $54 | $53;
       $58 = $81;$_5$sroa$4$0$ph$i$i$i$i$i = $55;
      } else {
       $58 = $80;$_5$sroa$4$0$ph$i$i$i$i$i = $43;
      }
     } else {
      $58 = $79;$_5$sroa$4$0$ph$i$i$i$i$i = $32;
     }
    }
    $56 = (($_7$sroa$6$0$i) - ($17))|0;
    $57 = (($56) + ($58))|0;
    $not$$i$i$i = ($_5$sroa$4$0$ph$i$i$i$i$i|0)!=(10);
    $$$i$i$i = $not$$i$i$i&1;
    $78 = $58;$_5$sroa$0$0$i$i$i = $$$i$i$i;$_5$sroa$8$1$i$i$i = $_7$sroa$6$0$i;$_7$sroa$6$1$i = $57;
   }
   $trunc$i$i$i = $_5$sroa$0$0$i$i$i&255;
   $trunc$i$i$i$clear = $trunc$i$i$i & 3;
   switch ($trunc$i$i$i$clear<<24>>24) {
   case 1:  {
    $17 = $78;$_5$sroa$8$0$i$i$i = $_5$sroa$8$1$i$i$i;$_7$sroa$6$0$i = $_7$sroa$6$1$i;
    break;
   }
   case 0:  {
    label = 23;
    break L9;
    break;
   }
   case 2:  {
    label = 22;
    break L9;
    break;
   }
   default: {
    label = 21;
    break L4;
   }
   }
  }
  if ((label|0) == 22) {
   label = 0;
   HEAP8[$4>>0] = 0;
   $split$0 = $s$sroa$10$063;
  }
  else if ((label|0) == 23) {
   label = 0;
   HEAP8[$4>>0] = 1;
   $59 = (($_5$sroa$8$1$i$i$i) + 1)|0;
   $split$0 = $59;
  }
  $60 = HEAP32[$0>>2]|0;
  $61 = ($split$0|0)==(0);
  $62 = ($s$sroa$10$063|0)==($split$0|0);
  $or$cond$i$i43 = $61 | $62;
  if (!($or$cond$i$i43)) {
   $not$$i$i44 = ($s$sroa$10$063>>>0)>($split$0>>>0);
   if (!($not$$i$i44)) {
    label = 27;
    break;
   }
   $63 = (($s$sroa$0$062) + ($split$0)|0);
   $64 = HEAP8[$63>>0]|0;
   $65 = ($64<<24>>24)>(-65);
   if (!($65)) {
    label = 27;
    break;
   }
  }
  $66 = ((($60)) + 28|0);
  $67 = HEAP32[$66>>2]|0;
  $68 = ((($60)) + 32|0);
  $69 = HEAP32[$68>>2]|0;
  $70 = ((($69)) + 12|0);
  $71 = HEAP32[$70>>2]|0;
  $72 = (FUNCTION_TABLE_iiii[$71 & 511]($67,$s$sroa$0$062,$split$0)|0);
  $not$switch4$i41 = ($72<<24>>24)==(0);
  if (!($not$switch4$i41)) {
   $_0$sroa$0$0 = 1;
   label = 5;
   break;
  }
  if ($or$cond$i$i43) {
   $$pre$i = (($s$sroa$0$062) + ($split$0)|0);
   $$pre$phi$iZ2D = $$pre$i;
  } else {
   $not$$i$i = ($s$sroa$10$063>>>0)>($split$0>>>0);
   if (!($not$$i$i)) {
    label = 33;
    break;
   }
   $73 = (($s$sroa$0$062) + ($split$0)|0);
   $74 = HEAP8[$73>>0]|0;
   $75 = ($74<<24>>24)>(-65);
   if ($75) {
    $$pre$phi$iZ2D = $73;
   } else {
    label = 33;
    break;
   }
  }
  $76 = (($s$sroa$10$063) - ($split$0))|0;
  $77 = ($76|0)==(0);
  if ($77) {
   $_0$sroa$0$0 = 0;
   label = 5;
   break;
  } else {
   $s$sroa$0$062 = $$pre$phi$iZ2D;$s$sroa$10$063 = $76;
  }
 }
 if ((label|0) == 5) {
  return ($_0$sroa$0$0|0);
 }
 else if ((label|0) == 21) {
  // unreachable;
 }
 else if ((label|0) == 27) {
  __ZN4core3str16slice_error_fail17h5f5b915047c27c9dE($s$sroa$0$062,$s$sroa$10$063,0,$split$0);
  // unreachable;
 }
 else if ((label|0) == 33) {
  __ZN4core3str16slice_error_fail17h5f5b915047c27c9dE($s$sroa$0$062,$s$sroa$10$063,$split$0,$s$sroa$10$063);
  // unreachable;
 }
 return (0)|0;
}
function __ZN4core3fmt5Write10write_char17h62ee0ac521ed0526E($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, $_12 = 0, $len$2$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $_12 = sp;
 HEAP32[$_12>>2] = 0;
 $2 = ($1>>>0)<(128);
 do {
  if ($2) {
   $3 = $1&255;
   HEAP8[$_12>>0] = $3;
   $len$2$i = 1;
  } else {
   $4 = ($1>>>0)<(2048);
   if ($4) {
    $5 = $1 >>> 6;
    $6 = $5 & 31;
    $7 = $6&255;
    $8 = $7 | -64;
    HEAP8[$_12>>0] = $8;
    $9 = $1 & 63;
    $10 = $9&255;
    $11 = ((($_12)) + 1|0);
    $12 = $10 | -128;
    HEAP8[$11>>0] = $12;
    $len$2$i = 2;
    break;
   }
   $13 = ($1>>>0)<(65536);
   if ($13) {
    $14 = $1 >>> 12;
    $15 = $14 & 15;
    $16 = $15&255;
    $17 = $16 | -32;
    HEAP8[$_12>>0] = $17;
    $18 = $1 >>> 6;
    $19 = $18 & 63;
    $20 = $19&255;
    $21 = ((($_12)) + 1|0);
    $22 = $20 | -128;
    HEAP8[$21>>0] = $22;
    $23 = $1 & 63;
    $24 = $23&255;
    $25 = ((($_12)) + 2|0);
    $26 = $24 | -128;
    HEAP8[$25>>0] = $26;
    $len$2$i = 3;
    break;
   } else {
    $27 = $1 >>> 18;
    $28 = $27 & 7;
    $29 = $28&255;
    $30 = $29 | -16;
    HEAP8[$_12>>0] = $30;
    $31 = $1 >>> 12;
    $32 = $31 & 63;
    $33 = $32&255;
    $34 = ((($_12)) + 1|0);
    $35 = $33 | -128;
    HEAP8[$34>>0] = $35;
    $36 = $1 >>> 6;
    $37 = $36 & 63;
    $38 = $37&255;
    $39 = ((($_12)) + 2|0);
    $40 = $38 | -128;
    HEAP8[$39>>0] = $40;
    $41 = $1 & 63;
    $42 = $41&255;
    $43 = ((($_12)) + 3|0);
    $44 = $42 | -128;
    HEAP8[$43>>0] = $44;
    $len$2$i = 4;
    break;
   }
  }
 } while(0);
 $45 = (__ZN96__LT_core__fmt__builders__PadAdapter_LT__u27_a_C__u20__u27_b_GT__u20_as_u20_core__fmt__Write_GT_9write_str17hb2a4662586509abfE($0,$_12,$len$2$i)|0);
 STACKTOP = sp;return ($45|0);
}
function __ZN4core3fmt5Write9write_fmt17hb43b50be59e46b89E($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $_10 = 0, $_8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $_8 = sp + 24|0;
 $_10 = sp;
 HEAP32[$_8>>2] = $0;
 ;HEAP32[$_10>>2]=HEAP32[$1>>2]|0;HEAP32[$_10+4>>2]=HEAP32[$1+4>>2]|0;HEAP32[$_10+8>>2]=HEAP32[$1+8>>2]|0;HEAP32[$_10+12>>2]=HEAP32[$1+12>>2]|0;HEAP32[$_10+16>>2]=HEAP32[$1+16>>2]|0;HEAP32[$_10+20>>2]=HEAP32[$1+20>>2]|0;
 $2 = (__ZN4core3fmt5write17hdd089a59fed6a1dbE($_8,4992,$_10)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZN96__LT_core__fmt__Write__write_fmt__Adapter_LT__u27_a_C__u20_T_GT__u20_as_u20_core__fmt__Write_GT_9write_str17h2d643c8edc18ab33E($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = HEAP32[$0>>2]|0;
 $4 = (__ZN96__LT_core__fmt__builders__PadAdapter_LT__u27_a_C__u20__u27_b_GT__u20_as_u20_core__fmt__Write_GT_9write_str17hb2a4662586509abfE($3,$1,$2)|0);
 return ($4|0);
}
function __ZN96__LT_core__fmt__Write__write_fmt__Adapter_LT__u27_a_C__u20_T_GT__u20_as_u20_core__fmt__Write_GT_10write_char17h9d1aab5d1009a3d4E($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $_12$i = 0, $len$2$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $_12$i = sp;
 $2 = HEAP32[$0>>2]|0;
 HEAP32[$_12$i>>2] = 0;
 $3 = ($1>>>0)<(128);
 do {
  if ($3) {
   $4 = $1&255;
   HEAP8[$_12$i>>0] = $4;
   $len$2$i = 1;
  } else {
   $5 = ($1>>>0)<(2048);
   if ($5) {
    $6 = $1 >>> 6;
    $7 = $6 & 31;
    $8 = $7&255;
    $9 = $8 | -64;
    HEAP8[$_12$i>>0] = $9;
    $10 = $1 & 63;
    $11 = $10&255;
    $12 = ((($_12$i)) + 1|0);
    $13 = $11 | -128;
    HEAP8[$12>>0] = $13;
    $len$2$i = 2;
    break;
   }
   $14 = ($1>>>0)<(65536);
   if ($14) {
    $15 = $1 >>> 12;
    $16 = $15 & 15;
    $17 = $16&255;
    $18 = $17 | -32;
    HEAP8[$_12$i>>0] = $18;
    $19 = $1 >>> 6;
    $20 = $19 & 63;
    $21 = $20&255;
    $22 = ((($_12$i)) + 1|0);
    $23 = $21 | -128;
    HEAP8[$22>>0] = $23;
    $24 = $1 & 63;
    $25 = $24&255;
    $26 = ((($_12$i)) + 2|0);
    $27 = $25 | -128;
    HEAP8[$26>>0] = $27;
    $len$2$i = 3;
    break;
   } else {
    $28 = $1 >>> 18;
    $29 = $28 & 7;
    $30 = $29&255;
    $31 = $30 | -16;
    HEAP8[$_12$i>>0] = $31;
    $32 = $1 >>> 12;
    $33 = $32 & 63;
    $34 = $33&255;
    $35 = ((($_12$i)) + 1|0);
    $36 = $34 | -128;
    HEAP8[$35>>0] = $36;
    $37 = $1 >>> 6;
    $38 = $37 & 63;
    $39 = $38&255;
    $40 = ((($_12$i)) + 2|0);
    $41 = $39 | -128;
    HEAP8[$40>>0] = $41;
    $42 = $1 & 63;
    $43 = $42&255;
    $44 = ((($_12$i)) + 3|0);
    $45 = $43 | -128;
    HEAP8[$44>>0] = $45;
    $len$2$i = 4;
    break;
   }
  }
 } while(0);
 $46 = (__ZN96__LT_core__fmt__builders__PadAdapter_LT__u27_a_C__u20__u27_b_GT__u20_as_u20_core__fmt__Write_GT_9write_str17hb2a4662586509abfE($2,$_12$i,$len$2$i)|0);
 STACKTOP = sp;return ($46|0);
}
function __ZN96__LT_core__fmt__Write__write_fmt__Adapter_LT__u27_a_C__u20_T_GT__u20_as_u20_core__fmt__Write_GT_9write_fmt17h4b23cb1bd870b379E($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $_10$i = 0, $_8$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $_8$i = sp + 24|0;
 $_10$i = sp;
 $2 = HEAP32[$0>>2]|0;
 HEAP32[$_8$i>>2] = $2;
 ;HEAP32[$_10$i>>2]=HEAP32[$1>>2]|0;HEAP32[$_10$i+4>>2]=HEAP32[$1+4>>2]|0;HEAP32[$_10$i+8>>2]=HEAP32[$1+8>>2]|0;HEAP32[$_10$i+12>>2]=HEAP32[$1+12>>2]|0;HEAP32[$_10$i+16>>2]=HEAP32[$1+16>>2]|0;HEAP32[$_10$i+20>>2]=HEAP32[$1+20>>2]|0;
 $3 = (__ZN4core3fmt5write17hdd089a59fed6a1dbE($_8$i,4992,$_10$i)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN60__LT_core__cell__BorrowError_u20_as_u20_core__fmt__Debug_GT_3fmt17h6b8f9fc0ba429a42E($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($1)) + 28|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ((($1)) + 32|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ((($5)) + 12|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = (FUNCTION_TABLE_iiii[$7 & 511]($3,24049,11)|0);
 return ($8|0);
}
function __ZN63__LT_core__cell__BorrowMutError_u20_as_u20_core__fmt__Debug_GT_3fmt17h623bd4c3568308e5E($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($1)) + 28|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ((($1)) + 32|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ((($5)) + 12|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = (FUNCTION_TABLE_iiii[$7 & 511]($3,24060,14)|0);
 return ($8|0);
}
function __ZN4core6option13expect_failed17hc1eeb48c0c4a1725E($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $_4 = 0, $_6$sroa$0$0$$sroa_idx$i = 0, $_9 = 0, $msg = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $msg = sp + 32|0;
 $_4 = sp + 8|0;
 $_9 = sp;
 HEAP32[$msg>>2] = $0;
 $2 = ((($msg)) + 4|0);
 HEAP32[$2>>2] = $1;
 $3 = $msg;
 HEAP32[$_9>>2] = $3;
 $4 = ((($_9)) + 4|0);
 HEAP32[$4>>2] = (370);
 HEAP32[$_4>>2] = 7404;
 $5 = ((($_4)) + 4|0);
 HEAP32[$5>>2] = 1;
 $_6$sroa$0$0$$sroa_idx$i = ((($_4)) + 8|0);
 HEAP32[$_6$sroa$0$0$$sroa_idx$i>>2] = 0;
 $6 = ((($_4)) + 16|0);
 HEAP32[$6>>2] = $_9;
 $7 = ((($_4)) + 20|0);
 HEAP32[$7>>2] = 1;
 __ZN4core9panicking9panic_fmt17hfa35599633a0afa2E($_4,22224,100,705);
 // unreachable;
}
function __ZN4core3str9from_utf817hf86f38bfbc8504d1E($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$off$i = 0, $$off114$i = 0, $$off116$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $8 = 0, $9 = 0, $cond$i = 0, $cond12$i = 0, $cond13$i = 0, $cond14$i = 0, $cond15$i = 0;
 var $cond19$i = 0, $cond7$i = 0, $offset$0$be$i = 0, $offset$0131$i = 0, $offset$1$i = 0, $offset$2126$i = 0, $offset$3$ph$i = 0, $offset$3128$i = 0, $or$cond$i = 0, $or$cond100$i = 0, $or$cond103$i = 0, $or$cond104$i = 0, $or$cond106$i = 0, $or$cond107$i = 0, $or$cond108$i = 0, $or$cond109$i = 0, $or$cond110$i = 0, $or$cond111$i = 0, $or$cond112$i = 0, $or$cond113$i = 0;
 var $or$cond89$i = 0, $or$cond91$i = 0, $or$cond92$i = 0, $or$cond93$i = 0, $or$cond94$i = 0, $or$cond95$i = 0, $or$cond96$i = 0, $or$cond98$i = 0, $or$cond99$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($2|0)==(0);
 L1: do {
  if (!($3)) {
   $4 = $1;
   $5 = ($2>>>0)<(8);
   $6 = (($2) + -8)|0;
   $offset$0131$i = 0;
   L3: while(1) {
    $7 = (($1) + ($offset$0131$i)|0);
    $8 = HEAP8[$7>>0]|0;
    $9 = ($8<<24>>24)<(0);
    L5: do {
     if ($9) {
      $13 = (($offset$0131$i) + 1)|0;
      $14 = ($13>>>0)<($2>>>0);
      if (!($14)) {
       break L3;
      }
      $15 = $8&255;
      $16 = (24074 + ($15)|0);
      $17 = HEAP8[$16>>0]|0;
      $18 = (($1) + ($13)|0);
      $19 = HEAP8[$18>>0]|0;
      switch ($17<<24>>24) {
      case 2:  {
       $20 = $19 & -64;
       $21 = ($20<<24>>24)==(-128);
       if ($21) {
        $offset$1$i = $13;
       } else {
        break L3;
       }
       break;
      }
      case 3:  {
       $22 = (($offset$0131$i) + 2)|0;
       $23 = ($22>>>0)<($2>>>0);
       if (!($23)) {
        break L3;
       }
       $27 = (($1) + ($22)|0);
       $28 = HEAP8[$27>>0]|0;
       $29 = $28 & -64;
       $cond14$i = ($8<<24>>24)==(-32);
       $30 = ($19&255)<(192);
       $31 = $19 & -32;
       $32 = ($31<<24>>24)==(-96);
       $33 = $cond14$i & $32;
       $cond19$i = ($29<<24>>24)==(-128);
       $or$cond89$i = $33 & $cond19$i;
       if ($or$cond89$i) {
        $offset$1$i = $22;
       } else {
        $$off116$i = (($8) + 31)<<24>>24;
        $34 = ($$off116$i&255)<(12);
        $35 = ($19<<24>>24)<(0);
        $or$cond91$i = $34 & $35;
        $or$cond92$i = $30 & $or$cond91$i;
        $or$cond93$i = $or$cond92$i & $cond19$i;
        if ($or$cond93$i) {
         $offset$1$i = $22;
        } else {
         $cond15$i = ($8<<24>>24)==(-19);
         $or$cond94$i = $cond15$i & $35;
         $36 = ($19&255)<(160);
         $or$cond95$i = $36 & $or$cond94$i;
         $or$cond96$i = $or$cond95$i & $cond19$i;
         if ($or$cond96$i) {
          $offset$1$i = $22;
         } else {
          $37 = $8 & -2;
          $38 = ($37<<24>>24)==(-18);
          $or$cond98$i = $38 & $35;
          $or$cond99$i = $30 & $or$cond98$i;
          $or$cond100$i = $or$cond99$i & $cond19$i;
          if ($or$cond100$i) {
           $offset$1$i = $22;
          } else {
           break L3;
          }
         }
        }
       }
       break;
      }
      case 4:  {
       $24 = (($offset$0131$i) + 2)|0;
       $25 = ($24>>>0)<($2>>>0);
       if (!($25)) {
        break L3;
       }
       $39 = (($offset$0131$i) + 3)|0;
       $40 = ($39>>>0)<($2>>>0);
       if (!($40)) {
        break L3;
       }
       $41 = (($1) + ($24)|0);
       $42 = HEAP8[$41>>0]|0;
       $43 = $42 & -64;
       $44 = (($1) + ($39)|0);
       $45 = HEAP8[$44>>0]|0;
       $46 = $45 & -64;
       $cond$i = ($8<<24>>24)==(-16);
       $$off$i = (($19) + 112)<<24>>24;
       $47 = ($$off$i&255)<(48);
       $48 = $cond$i & $47;
       $cond12$i = ($43<<24>>24)==(-128);
       $or$cond103$i = $48 & $cond12$i;
       $cond13$i = ($46<<24>>24)==(-128);
       $or$cond104$i = $or$cond103$i & $cond13$i;
       if ($or$cond104$i) {
        $offset$1$i = $39;
       } else {
        $49 = ($19&255)<(192);
        $$off114$i = (($8) + 15)<<24>>24;
        $50 = ($$off114$i&255)<(3);
        $51 = ($19<<24>>24)<(0);
        $or$cond106$i = $50 & $51;
        $or$cond107$i = $49 & $or$cond106$i;
        $or$cond108$i = $or$cond107$i & $cond12$i;
        $or$cond109$i = $or$cond108$i & $cond13$i;
        if ($or$cond109$i) {
         $offset$1$i = $39;
        } else {
         $cond7$i = ($8<<24>>24)==(-12);
         $or$cond110$i = $cond7$i & $51;
         $52 = ($19&255)<(144);
         $or$cond111$i = $52 & $or$cond110$i;
         $or$cond112$i = $or$cond111$i & $cond12$i;
         $or$cond113$i = $or$cond112$i & $cond13$i;
         if ($or$cond113$i) {
          $offset$1$i = $39;
         } else {
          break L3;
         }
        }
       }
       break;
      }
      default: {
       break L3;
      }
      }
      $26 = (($offset$1$i) + 1)|0;
      $offset$0$be$i = $26;
     } else {
      $10 = (($offset$0131$i) + ($4))|0;
      $11 = $10 & 3;
      $12 = ($11|0)==(0);
      if (!($12)) {
       $54 = (($offset$0131$i) + 1)|0;
       $offset$0$be$i = $54;
       break;
      }
      $53 = ($offset$0131$i>>>0)>($6>>>0);
      $or$cond$i = $5 | $53;
      L25: do {
       if ($or$cond$i) {
        $offset$3$ph$i = $offset$0131$i;
       } else {
        $offset$2126$i = $offset$0131$i;
        while(1) {
         $56 = (($1) + ($offset$2126$i)|0);
         $57 = HEAP32[$56>>2]|0;
         $58 = (($offset$2126$i) + 4)|0;
         $59 = (($1) + ($58)|0);
         $60 = HEAP32[$59>>2]|0;
         $61 = $60 | $57;
         $62 = $61 & -2139062144;
         $63 = ($62|0)==(0);
         if (!($63)) {
          $offset$3$ph$i = $offset$2126$i;
          break L25;
         }
         $65 = (($offset$2126$i) + 8)|0;
         $66 = ($65>>>0)>($6>>>0);
         if ($66) {
          $offset$3$ph$i = $65;
          break;
         } else {
          $offset$2126$i = $65;
         }
        }
       }
      } while(0);
      $64 = ($offset$3$ph$i>>>0)<($2>>>0);
      if ($64) {
       $offset$3128$i = $offset$3$ph$i;
       while(1) {
        $67 = (($1) + ($offset$3128$i)|0);
        $68 = HEAP8[$67>>0]|0;
        $69 = ($68<<24>>24)>(-1);
        if (!($69)) {
         $offset$0$be$i = $offset$3128$i;
         break L5;
        }
        $70 = (($offset$3128$i) + 1)|0;
        $71 = ($70>>>0)<($2>>>0);
        if ($71) {
         $offset$3128$i = $70;
        } else {
         $offset$0$be$i = $70;
         break;
        }
       }
      } else {
       $offset$0$be$i = $offset$3$ph$i;
      }
     }
    } while(0);
    $55 = ($offset$0$be$i>>>0)<($2>>>0);
    if ($55) {
     $offset$0131$i = $offset$0$be$i;
    } else {
     break L1;
    }
   }
   HEAP32[$0>>2] = 1;
   $74 = ((($0)) + 4|0);
   HEAP32[$74>>2] = $offset$0131$i;
   return;
  }
 } while(0);
 HEAP32[$0>>2] = 0;
 $72 = ((($0)) + 4|0);
 HEAP32[$72>>2] = $1;
 $73 = ((($0)) + 8|0);
 HEAP32[$73>>2] = $2;
 return;
}
function __ZN4core3fmt8builders11DebugStruct5field17hfad538a66c3eb971E($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$$i$i = 0, $$25$i$i = 0, $$elt = 0, $$pre = 0, $$pre$phiZ2D = 0, $$unpack = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, $_0$sroa$0$0$i = 0, $_0$sroa$0$0$i$i = 0, $_12$i$i = 0, $_17$i$i = 0, $_36$sroa$4$0$$sroa_idx15$i$i = 0, $_36$sroa$5$0$$sroa_idx17$i$i = 0, $_36$sroa$620$0$$sroa_idx22$i$i = 0, $_36$sroa$7$0$$sroa_idx24$i$i = 0, $_41$i$i = 0, $_7$i$i$i = 0, $_8$sroa$0$0$$sroa_idx$i$i$i = 0, $_8$sroa$4$0$$sroa_idx2$i$i$i = 0, $name = 0, $prefix$i$i = 0, $switch3$i = 0, $value = 0, $writer$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(128|0);
 $_7$i$i$i = sp + 104|0;
 $prefix$i$i = sp + 96|0;
 $writer$i$i = sp + 88|0;
 $_12$i$i = sp + 64|0;
 $_17$i$i = sp + 40|0;
 $_41$i$i = sp + 16|0;
 $name = sp + 8|0;
 $value = sp;
 HEAP32[$name>>2] = $1;
 $5 = ((($name)) + 4|0);
 HEAP32[$5>>2] = $2;
 HEAP32[$value>>2] = $3;
 $6 = ((($value)) + 4|0);
 HEAP32[$6>>2] = $4;
 $$elt = ((($0)) + 4|0);
 $$unpack = HEAP8[$$elt>>0]|0;
 $7 = $name;
 $8 = $value;
 $switch3$i = ($$unpack<<24>>24)==(0);
 if (!($switch3$i)) {
  $$pre = ((($0)) + 5|0);
  $$pre$phiZ2D = $$pre;$_0$sroa$0$0$i = 1;
  HEAP8[$$elt>>0] = $_0$sroa$0$0$i;
  HEAP8[$$pre$phiZ2D>>0] = 1;
  STACKTOP = sp;return ($0|0);
 }
 $9 = ((($0)) + 5|0);
 $10 = HEAP8[$9>>0]|0;
 $11 = ($10<<24>>24)==(0);
 $$$i$i = $11 ? 24330 : 18783;
 $$25$i$i = $11 ? 2 : 1;
 HEAP32[$prefix$i$i>>2] = $$$i$i;
 $12 = ((($prefix$i$i)) + 4|0);
 HEAP32[$12>>2] = $$25$i$i;
 $13 = HEAP32[$0>>2]|0;
 $14 = HEAP32[$13>>2]|0;
 $15 = $14 & 4;
 $16 = ($15|0)==(0);
 if ($16) {
  $29 = $prefix$i$i;
  HEAP32[$_41$i$i>>2] = $29;
  $30 = ((($_41$i$i)) + 4|0);
  HEAP32[$30>>2] = (370);
  $31 = ((($_41$i$i)) + 8|0);
  HEAP32[$31>>2] = $7;
  $32 = ((($_41$i$i)) + 12|0);
  HEAP32[$32>>2] = (370);
  $33 = ((($_41$i$i)) + 16|0);
  HEAP32[$33>>2] = $8;
  $34 = ((($_41$i$i)) + 20|0);
  HEAP32[$34>>2] = (371);
  $35 = ((($13)) + 28|0);
  $36 = HEAP32[$35>>2]|0;
  $37 = ((($13)) + 32|0);
  $38 = HEAP32[$37>>2]|0;
  HEAP32[$_7$i$i$i>>2] = 7544;
  $_36$sroa$4$0$$sroa_idx15$i$i = ((($_7$i$i$i)) + 4|0);
  HEAP32[$_36$sroa$4$0$$sroa_idx15$i$i>>2] = 3;
  $_36$sroa$5$0$$sroa_idx17$i$i = ((($_7$i$i$i)) + 8|0);
  HEAP32[$_36$sroa$5$0$$sroa_idx17$i$i>>2] = 0;
  $_36$sroa$620$0$$sroa_idx22$i$i = ((($_7$i$i$i)) + 16|0);
  HEAP32[$_36$sroa$620$0$$sroa_idx22$i$i>>2] = $_41$i$i;
  $_36$sroa$7$0$$sroa_idx24$i$i = ((($_7$i$i$i)) + 20|0);
  HEAP32[$_36$sroa$7$0$$sroa_idx24$i$i>>2] = 3;
  $39 = (__ZN4core3fmt5write17hdd089a59fed6a1dbE($36,$38,$_7$i$i$i)|0);
  $_0$sroa$0$0$i$i = $39;
 } else {
  $17 = $13;
  HEAP32[$writer$i$i>>2] = $17;
  $18 = ((($writer$i$i)) + 4|0);
  HEAP8[$18>>0] = 0;
  $19 = $prefix$i$i;
  HEAP32[$_17$i$i>>2] = $19;
  $20 = ((($_17$i$i)) + 4|0);
  HEAP32[$20>>2] = (370);
  $21 = ((($_17$i$i)) + 8|0);
  HEAP32[$21>>2] = $7;
  $22 = ((($_17$i$i)) + 12|0);
  HEAP32[$22>>2] = (370);
  $23 = ((($_17$i$i)) + 16|0);
  HEAP32[$23>>2] = $8;
  $24 = ((($_17$i$i)) + 20|0);
  HEAP32[$24>>2] = (371);
  HEAP32[$_12$i$i>>2] = 7412;
  $25 = ((($_12$i$i)) + 4|0);
  HEAP32[$25>>2] = 3;
  $_8$sroa$0$0$$sroa_idx$i$i$i = ((($_12$i$i)) + 8|0);
  HEAP32[$_8$sroa$0$0$$sroa_idx$i$i$i>>2] = 7436;
  $_8$sroa$4$0$$sroa_idx2$i$i$i = ((($_12$i$i)) + 12|0);
  HEAP32[$_8$sroa$4$0$$sroa_idx2$i$i$i>>2] = 3;
  $26 = ((($_12$i$i)) + 16|0);
  HEAP32[$26>>2] = $_17$i$i;
  $27 = ((($_12$i$i)) + 20|0);
  HEAP32[$27>>2] = 3;
  $28 = (__ZN4core3fmt5write17hdd089a59fed6a1dbE($writer$i$i,4968,$_12$i$i)|0);
  $_0$sroa$0$0$i$i = $28;
 }
 $$pre$phiZ2D = $9;$_0$sroa$0$0$i = $_0$sroa$0$0$i$i;
 HEAP8[$$elt>>0] = $_0$sroa$0$0$i;
 HEAP8[$$pre$phiZ2D>>0] = 1;
 STACKTOP = sp;return ($0|0);
}
function __ZN4core3fmt8builders9DebugList5entry17ha312dc2888088769E($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$$i$i$i = 0, $$25$i$i$i = 0, $$26$i$i$i = 0, $$elt$i = 0, $$pre$i = 0, $$pre$phi$iZ2D = 0, $$unpack$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $_0$sroa$0$0$i$i = 0;
 var $_12$i$i$i = 0, $_17$i$i$i = 0, $_33$sroa$4$0$$sroa_idx12$i$i$i = 0, $_33$sroa$5$0$$sroa_idx14$i$i$i = 0, $_33$sroa$617$0$$sroa_idx19$i$i$i = 0, $_33$sroa$7$0$$sroa_idx21$i$i$i = 0, $_38$i$i$i = 0, $_7$i$i$i$i = 0, $_8$sroa$0$0$$sroa_idx$i$i$i$i = 0, $_8$sroa$4$0$$sroa_idx2$i$i$i$i = 0, $entry$i = 0, $prefix$i$i$i = 0, $prefix1$i$i$i = 0, $switch3$i$i = 0, $writer$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(112|0);
 $_7$i$i$i$i = sp + 88|0;
 $writer$i$i$i = sp + 80|0;
 $prefix$i$i$i = sp + 72|0;
 $_12$i$i$i = sp + 48|0;
 $_17$i$i$i = sp + 32|0;
 $prefix1$i$i$i = sp + 24|0;
 $_38$i$i$i = sp + 8|0;
 $entry$i = sp;
 HEAP32[$entry$i>>2] = $1;
 $3 = ((($entry$i)) + 4|0);
 HEAP32[$3>>2] = $2;
 $$elt$i = ((($0)) + 4|0);
 $$unpack$i = HEAP8[$$elt$i>>0]|0;
 $4 = $entry$i;
 $switch3$i$i = ($$unpack$i<<24>>24)==(0);
 if (!($switch3$i$i)) {
  $$pre$i = ((($0)) + 5|0);
  $$pre$phi$iZ2D = $$pre$i;$_0$sroa$0$0$i$i = 1;
  HEAP8[$$elt$i>>0] = $_0$sroa$0$0$i$i;
  HEAP8[$$pre$phi$iZ2D>>0] = 1;
  STACKTOP = sp;return;
 }
 $5 = HEAP32[$0>>2]|0;
 $6 = HEAP32[$5>>2]|0;
 $7 = $6 & 4;
 $8 = ($7|0)==(0);
 $9 = ((($0)) + 5|0);
 $10 = HEAP8[$9>>0]|0;
 if ($8) {
  $24 = ($10<<24>>24)==(0);
  $$25$i$i$i = $24 ? 27292 : 24336;
  $$26$i$i$i = $24 ? 0 : 2;
  HEAP32[$prefix1$i$i$i>>2] = $$25$i$i$i;
  $25 = ((($prefix1$i$i$i)) + 4|0);
  HEAP32[$25>>2] = $$26$i$i$i;
  $26 = $prefix1$i$i$i;
  HEAP32[$_38$i$i$i>>2] = $26;
  $27 = ((($_38$i$i$i)) + 4|0);
  HEAP32[$27>>2] = (370);
  $28 = ((($_38$i$i$i)) + 8|0);
  HEAP32[$28>>2] = $4;
  $29 = ((($_38$i$i$i)) + 12|0);
  HEAP32[$29>>2] = (371);
  $30 = ((($5)) + 28|0);
  $31 = HEAP32[$30>>2]|0;
  $32 = ((($5)) + 32|0);
  $33 = HEAP32[$32>>2]|0;
  HEAP32[$_7$i$i$i$i>>2] = 7568;
  $_33$sroa$4$0$$sroa_idx12$i$i$i = ((($_7$i$i$i$i)) + 4|0);
  HEAP32[$_33$sroa$4$0$$sroa_idx12$i$i$i>>2] = 2;
  $_33$sroa$5$0$$sroa_idx14$i$i$i = ((($_7$i$i$i$i)) + 8|0);
  HEAP32[$_33$sroa$5$0$$sroa_idx14$i$i$i>>2] = 0;
  $_33$sroa$617$0$$sroa_idx19$i$i$i = ((($_7$i$i$i$i)) + 16|0);
  HEAP32[$_33$sroa$617$0$$sroa_idx19$i$i$i>>2] = $_38$i$i$i;
  $_33$sroa$7$0$$sroa_idx21$i$i$i = ((($_7$i$i$i$i)) + 20|0);
  HEAP32[$_33$sroa$7$0$$sroa_idx21$i$i$i>>2] = 2;
  $34 = (__ZN4core3fmt5write17hdd089a59fed6a1dbE($31,$33,$_7$i$i$i$i)|0);
  $$pre$phi$iZ2D = $9;$_0$sroa$0$0$i$i = $34;
  HEAP8[$$elt$i>>0] = $_0$sroa$0$0$i$i;
  HEAP8[$$pre$phi$iZ2D>>0] = 1;
  STACKTOP = sp;return;
 } else {
  $11 = $5;
  HEAP32[$writer$i$i$i>>2] = $11;
  $12 = ((($writer$i$i$i)) + 4|0);
  HEAP8[$12>>0] = 0;
  $13 = ($10<<24>>24)==(0);
  $$$i$i$i = $13 ? 27292 : 18783;
  $14 = $10&255;
  HEAP32[$prefix$i$i$i>>2] = $$$i$i$i;
  $15 = ((($prefix$i$i$i)) + 4|0);
  HEAP32[$15>>2] = $14;
  $16 = $prefix$i$i$i;
  HEAP32[$_17$i$i$i>>2] = $16;
  $17 = ((($_17$i$i$i)) + 4|0);
  HEAP32[$17>>2] = (370);
  $18 = ((($_17$i$i$i)) + 8|0);
  HEAP32[$18>>2] = $4;
  $19 = ((($_17$i$i$i)) + 12|0);
  HEAP32[$19>>2] = (371);
  HEAP32[$_12$i$i$i>>2] = 7292;
  $20 = ((($_12$i$i$i)) + 4|0);
  HEAP32[$20>>2] = 2;
  $_8$sroa$0$0$$sroa_idx$i$i$i$i = ((($_12$i$i$i)) + 8|0);
  HEAP32[$_8$sroa$0$0$$sroa_idx$i$i$i$i>>2] = 7308;
  $_8$sroa$4$0$$sroa_idx2$i$i$i$i = ((($_12$i$i$i)) + 12|0);
  HEAP32[$_8$sroa$4$0$$sroa_idx2$i$i$i$i>>2] = 2;
  $21 = ((($_12$i$i$i)) + 16|0);
  HEAP32[$21>>2] = $_17$i$i$i;
  $22 = ((($_12$i$i$i)) + 20|0);
  HEAP32[$22>>2] = 2;
  $23 = (__ZN4core3fmt5write17hdd089a59fed6a1dbE($writer$i$i$i,4968,$_12$i$i$i)|0);
  $$pre$phi$iZ2D = $9;$_0$sroa$0$0$i$i = $23;
  HEAP8[$$elt$i>>0] = $_0$sroa$0$0$i$i;
  HEAP8[$$pre$phi$iZ2D>>0] = 1;
  STACKTOP = sp;return;
 }
}
function __ZN73__LT_core__fmt__Arguments_LT__u27_a_GT__u20_as_u20_core__fmt__Display_GT_3fmt17h5555d9ccb5548f2eE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $_7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $_7 = sp;
 $2 = ((($1)) + 28|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ((($1)) + 32|0);
 $5 = HEAP32[$4>>2]|0;
 ;HEAP32[$_7>>2]=HEAP32[$0>>2]|0;HEAP32[$_7+4>>2]=HEAP32[$0+4>>2]|0;HEAP32[$_7+8>>2]=HEAP32[$0+8>>2]|0;HEAP32[$_7+12>>2]=HEAP32[$0+12>>2]|0;HEAP32[$_7+16>>2]=HEAP32[$0+16>>2]|0;HEAP32[$_7+20>>2]=HEAP32[$0+20>>2]|0;
 $6 = (__ZN4core3fmt5write17hdd089a59fed6a1dbE($3,$5,$_7)|0);
 STACKTOP = sp;return ($6|0);
}
function __ZN40__LT_str_u20_as_u20_core__fmt__Debug_GT_3fmt17ha856739f11aa1026E($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$ = 0, $$$i50 = 0, $$cast$i = 0, $$cast$i214 = 0, $$cast$i214224 = 0, $$cast$i217 = 0, $$iter2$sroa$9$0 = 0, $$off$i = 0, $$off2$i = 0, $$pre$i = 0, $$pre$phi$iZ2D = 0, $$sink$i$i = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0;
 var $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0;
 var $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0;
 var $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0;
 var $_0$0$i = 0, $_0$0$i10$i$i$i = 0, $_0$0$i16$i$i$i = 0, $_0$0$i23$i$i$i = 0, $_0$0$sroa$speculated$i$i$i$i = 0, $_0$0$sroa$speculated$i$i$i15$i = 0, $_0$sroa$0$0 = 0, $_5$sroa$4$0$ph$i = 0, $_59$sroa$14$2$ph = 0, $cond$i$i = 0, $cond$i18$i = 0, $from$0$ph$lcssa213 = 0, $from$0$ph$lcssa213255 = 0, $from$0$ph$lcssa213256 = 0, $from$0$ph223 = 0, $init_state$sroa$0$0$i$ph = 0, $init_state$sroa$15$0$i$off32$ph = 0, $init_state$sroa$9$0$i$ph = 0, $iter$sroa$0$0$in$i$i = 0, $iter$sroa$0$0$in$i6$i = 0;
 var $iter$sroa$0$0$ph221 = 0, $iter$sroa$0$0215 = 0, $iter$sroa$6$0$ph222 = 0, $iter$sroa$6$0216 = 0, $iter$sroa$6$1 = 0, $iter$sroa$6$2 = 0, $iter$sroa$6$3 = 0, $iter$sroa$6$4 = 0, $iter2$sroa$0$0 = 0, $iter2$sroa$0$0$in$i$i = 0, $iter2$sroa$0$0$in$i13$i = 0, $iter2$sroa$0$1$ph = 0, $iter2$sroa$1587$0 = 0, $iter2$sroa$1587$2$ph = 0, $iter2$sroa$6$0$i$i = 0, $iter2$sroa$6$0$i12$i = 0, $iter2$sroa$9$2$ph = 0, $not$$i = 0, $not$$i$i = 0, $not$$i$i67 = 0;
 var $not$$i8$i = 0, $not$switch4$i = 0, $not$switch4$i48 = 0, $not$switch4$i53 = 0, $not$switch4$i64 = 0, $notlhs = 0, $notrhs = 0, $or$cond = 0, $or$cond$i$i = 0, $or$cond$i$i66 = 0, $or$cond$i$not = 0, $or$cond$i7$i = 0, $phitmp$i$i$i = 0, $phitmp32$i$i$i = 0, $phitmp33$i$i$i = 0, $trunc$i = 0, $trunc$i$clear = 0, $trunc$i$i = 0, $trunc$i$i$clear = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $3 = ((($2)) + 28|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ((($2)) + 32|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ((($6)) + 16|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = (FUNCTION_TABLE_iii[$8 & 511]($4,34)|0);
 $not$switch4$i = ($9<<24>>24)==(0);
 if (!($not$switch4$i)) {
  $_0$sroa$0$0 = 1;
  return ($_0$sroa$0$0|0);
 }
 $10 = (($0) + ($1)|0);
 $11 = ($1|0)==(0);
 do {
  if ($11) {
   $from$0$ph$lcssa213256 = 0;
   label = 17;
  } else {
   $12 = $0;
   $$cast$i214224 = $0;$from$0$ph223 = 0;$iter$sroa$0$0$ph221 = 0;$iter$sroa$6$0$ph222 = $12;
   L6: while(1) {
    $$cast$i217 = $$cast$i214224;$iter$sroa$0$0215 = $iter$sroa$0$0$ph221;$iter$sroa$6$0216 = $iter$sroa$6$0$ph222;
    L8: while(1) {
     $15 = ((($$cast$i217)) + 1|0);
     $16 = $15;
     $14 = HEAP8[$$cast$i217>>0]|0;
     $17 = ($14<<24>>24)>(-1);
     if ($17) {
      $13 = $14&255;
      $_5$sroa$4$0$ph$i = $13;$iter$sroa$6$4 = $16;
     } else {
      $18 = $14 & 31;
      $19 = $18&255;
      $20 = ($15|0)==($10|0);
      if ($20) {
       $28 = $10;$_0$0$i23$i$i$i = 0;$iter$sroa$6$1 = $16;
      } else {
       $21 = ((($$cast$i217)) + 2|0);
       $22 = $21;
       $23 = HEAP8[$15>>0]|0;
       $phitmp$i$i$i = $23 & 63;
       $28 = $21;$_0$0$i23$i$i$i = $phitmp$i$i$i;$iter$sroa$6$1 = $22;
      }
      $24 = $19 << 6;
      $25 = $_0$0$i23$i$i$i&255;
      $26 = $25 | $24;
      $27 = ($14&255)>(223);
      if ($27) {
       $29 = ($28|0)==($10|0);
       if ($29) {
        $39 = $10;$_0$0$i16$i$i$i = 0;$iter$sroa$6$2 = $iter$sroa$6$1;
       } else {
        $30 = ((($28)) + 1|0);
        $31 = $30;
        $32 = HEAP8[$28>>0]|0;
        $phitmp32$i$i$i = $32 & 63;
        $39 = $30;$_0$0$i16$i$i$i = $phitmp32$i$i$i;$iter$sroa$6$2 = $31;
       }
       $33 = $25 << 6;
       $34 = $_0$0$i16$i$i$i&255;
       $35 = $34 | $33;
       $36 = $19 << 12;
       $37 = $35 | $36;
       $38 = ($14&255)>(239);
       if ($38) {
        $40 = ($39|0)==($10|0);
        if ($40) {
         $_0$0$i10$i$i$i = 0;$iter$sroa$6$3 = $iter$sroa$6$2;
        } else {
         $41 = ((($39)) + 1|0);
         $42 = $41;
         $43 = HEAP8[$39>>0]|0;
         $phitmp33$i$i$i = $43 & 63;
         $_0$0$i10$i$i$i = $phitmp33$i$i$i;$iter$sroa$6$3 = $42;
        }
        $44 = $19 << 18;
        $45 = $44 & 1835008;
        $46 = $35 << 6;
        $47 = $_0$0$i10$i$i$i&255;
        $48 = $46 | $45;
        $49 = $48 | $47;
        $_5$sroa$4$0$ph$i = $49;$iter$sroa$6$4 = $iter$sroa$6$3;
       } else {
        $_5$sroa$4$0$ph$i = $37;$iter$sroa$6$4 = $iter$sroa$6$2;
       }
      } else {
       $_5$sroa$4$0$ph$i = $26;$iter$sroa$6$4 = $iter$sroa$6$1;
      }
     }
     $61 = (($iter$sroa$0$0215) - ($iter$sroa$6$0216))|0;
     $62 = (($61) + ($iter$sroa$6$4))|0;
     switch ($_5$sroa$4$0$ph$i|0) {
     case 9:  {
      label = 48;
      break L8;
      break;
     }
     case 13:  {
      $init_state$sroa$0$0$i$ph = 2;$init_state$sroa$15$0$i$off32$ph = 0;$init_state$sroa$9$0$i$ph = 114;
      break L8;
      break;
     }
     case 10:  {
      label = 23;
      break L8;
      break;
     }
     case 34: case 39: case 92:  {
      label = 24;
      break L8;
      break;
     }
     default: {
     }
     }
     $63 = $_5$sroa$4$0$ph$i&65535;
     $64 = ($_5$sroa$4$0$ph$i>>>0)<(65536);
     L26: do {
      if ($64) {
       $iter$sroa$0$0$in$i$i = 7708;
       while(1) {
        $65 = ($iter$sroa$0$0$in$i$i|0)==((8280)|0);
        if ($65) {
         break;
        }
        $66 = HEAP16[$iter$sroa$0$0$in$i$i>>1]|0;
        $67 = ($66<<16>>16)==($63<<16>>16);
        if ($67) {
         label = 46;
         break L8;
        }
        $68 = ((($iter$sroa$0$0$in$i$i)) + 2|0);
        $69 = ($66&65535)>($63&65535);
        if ($69) {
         break;
        } else {
         $iter$sroa$0$0$in$i$i = $68;
        }
       }
       $70 = $_5$sroa$4$0$ph$i & 65535;
       $iter2$sroa$0$0$in$i$i = 8280;$iter2$sroa$6$0$i$i = 320;
       while(1) {
        $71 = ($iter2$sroa$6$0$i$i|0)==(0);
        if ($71) {
         break L26;
        }
        $72 = ($iter2$sroa$6$0$i$i>>>0)>(2);
        $_0$0$sroa$speculated$i$i$i$i = $72 ? 2 : $iter2$sroa$6$0$i$i;
        $73 = (($iter2$sroa$0$0$in$i$i) + ($_0$0$sroa$speculated$i$i$i$i<<1)|0);
        $74 = (($iter2$sroa$6$0$i$i) - ($_0$0$sroa$speculated$i$i$i$i))|0;
        $cond$i$i = ($_0$0$sroa$speculated$i$i$i$i|0)==(1);
        if ($cond$i$i) {
         label = 34;
         break L6;
        }
        $75 = HEAP16[$iter2$sroa$0$0$in$i$i>>1]|0;
        $76 = $75&65535;
        $77 = (($70) - ($76))|0;
        $78 = ($77|0)>(-1);
        if (!($78)) {
         break L26;
        }
        $79 = ((($iter2$sroa$0$0$in$i$i)) + 2|0);
        $80 = HEAP16[$79>>1]|0;
        $81 = $80&65535;
        $82 = ($77|0)<($81|0);
        if ($82) {
         label = 46;
         break L8;
        } else {
         $iter2$sroa$0$0$in$i$i = $73;$iter2$sroa$6$0$i$i = $74;
        }
       }
      } else {
       $83 = ($_5$sroa$4$0$ph$i>>>0)<(131072);
       if ($83) {
        $iter$sroa$0$0$in$i6$i = 8920;
       } else {
        $$off$i = (($_5$sroa$4$0$ph$i) + -195102)|0;
        $notlhs = ($_5$sroa$4$0$ph$i>>>0)>(194559);
        $notrhs = ($$off$i>>>0)>(722657);
        $or$cond$i$not = $notrhs & $notlhs;
        $$off2$i = (($_5$sroa$4$0$ph$i) + -918000)|0;
        $not$$i = ($$off2$i>>>0)>(196111);
        $or$cond = $or$cond$i$not & $not$$i;
        if ($or$cond) {
         break;
        } else {
         label = 46;
         break L8;
        }
       }
       while(1) {
        $84 = ($iter$sroa$0$0$in$i6$i|0)==((9112)|0);
        if ($84) {
         break;
        }
        $85 = HEAP16[$iter$sroa$0$0$in$i6$i>>1]|0;
        $86 = ($85<<16>>16)==($63<<16>>16);
        if ($86) {
         label = 46;
         break L8;
        }
        $87 = ((($iter$sroa$0$0$in$i6$i)) + 2|0);
        $88 = ($85&65535)>($63&65535);
        if ($88) {
         break;
        } else {
         $iter$sroa$0$0$in$i6$i = $87;
        }
       }
       $89 = $_5$sroa$4$0$ph$i & 65535;
       $iter2$sroa$0$0$in$i13$i = 9112;$iter2$sroa$6$0$i12$i = 172;
       while(1) {
        $90 = ($iter2$sroa$6$0$i12$i|0)==(0);
        if ($90) {
         break L26;
        }
        $91 = ($iter2$sroa$6$0$i12$i>>>0)>(2);
        $_0$0$sroa$speculated$i$i$i15$i = $91 ? 2 : $iter2$sroa$6$0$i12$i;
        $92 = (($iter2$sroa$0$0$in$i13$i) + ($_0$0$sroa$speculated$i$i$i15$i<<1)|0);
        $93 = (($iter2$sroa$6$0$i12$i) - ($_0$0$sroa$speculated$i$i$i15$i))|0;
        $cond$i18$i = ($_0$0$sroa$speculated$i$i$i15$i|0)==(1);
        if ($cond$i18$i) {
         label = 44;
         break L6;
        }
        $94 = HEAP16[$iter2$sroa$0$0$in$i13$i>>1]|0;
        $95 = $94&65535;
        $96 = (($89) - ($95))|0;
        $97 = ($96|0)>(-1);
        if (!($97)) {
         break L26;
        }
        $98 = ((($iter2$sroa$0$0$in$i13$i)) + 2|0);
        $99 = HEAP16[$98>>1]|0;
        $100 = $99&65535;
        $101 = ($96|0)<($100|0);
        if ($101) {
         label = 46;
         break L8;
        } else {
         $iter2$sroa$0$0$in$i13$i = $92;$iter2$sroa$6$0$i12$i = $93;
        }
       }
      }
     } while(0);
     $$cast$i = $iter$sroa$6$4;
     $106 = ($$cast$i|0)==($10|0);
     if ($106) {
      $from$0$ph$lcssa213 = $from$0$ph223;
      label = 16;
      break L6;
     } else {
      $$cast$i217 = $$cast$i;$iter$sroa$0$0215 = $62;$iter$sroa$6$0216 = $iter$sroa$6$4;
     }
    }
    if ((label|0) == 23) {
     label = 0;
     $init_state$sroa$0$0$i$ph = 2;$init_state$sroa$15$0$i$off32$ph = 0;$init_state$sroa$9$0$i$ph = 110;
    }
    else if ((label|0) == 24) {
     label = 0;
     $init_state$sroa$0$0$i$ph = 2;$init_state$sroa$15$0$i$off32$ph = 0;$init_state$sroa$9$0$i$ph = $_5$sroa$4$0$ph$i;
    }
    else if ((label|0) == 46) {
     label = 0;
     $102 = $_5$sroa$4$0$ph$i | 1;
     $103 = (Math_clz32(($102|0))|0);
     $104 = (31 - ($103))|0;
     $105 = $104 >>> 2;
     $init_state$sroa$0$0$i$ph = 3;$init_state$sroa$15$0$i$off32$ph = $105;$init_state$sroa$9$0$i$ph = $_5$sroa$4$0$ph$i;
    }
    else if ((label|0) == 48) {
     label = 0;
     $init_state$sroa$0$0$i$ph = 2;$init_state$sroa$15$0$i$off32$ph = 0;$init_state$sroa$9$0$i$ph = 116;
    }
    $107 = ($iter$sroa$0$0215>>>0)<($from$0$ph223>>>0);
    if ($107) {
     label = 50;
     break;
    }
    $113 = ($from$0$ph223|0)==(0);
    $114 = ($from$0$ph223|0)==($1|0);
    $or$cond$i7$i = $113 | $114;
    if (!($or$cond$i7$i)) {
     $not$$i8$i = ($from$0$ph223>>>0)<($1>>>0);
     if (!($not$$i8$i)) {
      label = 50;
      break;
     }
     $115 = (($0) + ($from$0$ph223)|0);
     $116 = HEAP8[$115>>0]|0;
     $117 = ($116<<24>>24)>(-65);
     if (!($117)) {
      label = 50;
      break;
     }
    }
    $108 = ($iter$sroa$0$0215|0)==(0);
    $109 = ($iter$sroa$0$0215|0)==($1|0);
    $or$cond$i$i = $108 | $109;
    if (!($or$cond$i$i)) {
     $not$$i$i = ($iter$sroa$0$0215>>>0)<($1>>>0);
     if (!($not$$i$i)) {
      label = 50;
      break;
     }
     $110 = (($0) + ($iter$sroa$0$0215)|0);
     $111 = HEAP8[$110>>0]|0;
     $112 = ($111<<24>>24)>(-65);
     if (!($112)) {
      label = 50;
      break;
     }
    }
    $118 = (($0) + ($from$0$ph223)|0);
    $119 = (($iter$sroa$0$0215) - ($from$0$ph223))|0;
    $120 = HEAP32[$3>>2]|0;
    $121 = HEAP32[$5>>2]|0;
    $122 = ((($121)) + 12|0);
    $123 = HEAP32[$122>>2]|0;
    $124 = (FUNCTION_TABLE_iiii[$123 & 511]($120,$118,$119)|0);
    $not$switch4$i53 = ($124<<24>>24)==(0);
    if ($not$switch4$i53) {
     $iter2$sroa$0$0 = $init_state$sroa$0$0$i$ph;$iter2$sroa$1587$0 = $init_state$sroa$15$0$i$off32$ph;$trunc$i$i = 5;
    } else {
     $_0$sroa$0$0 = 1;
     label = 4;
     break;
    }
    L66: while(1) {
     $trunc$i = $iter2$sroa$0$0&255;
     $trunc$i$clear = $trunc$i & 3;
     L68: do {
      switch ($trunc$i$clear<<24>>24) {
      case 0:  {
       break L66;
       break;
      }
      case 1:  {
       $_59$sroa$14$2$ph = $init_state$sroa$9$0$i$ph;$iter2$sroa$0$1$ph = 0;$iter2$sroa$1587$2$ph = $iter2$sroa$1587$0;$iter2$sroa$9$2$ph = $trunc$i$i;
       break;
      }
      case 2:  {
       $_59$sroa$14$2$ph = 92;$iter2$sroa$0$1$ph = 1;$iter2$sroa$1587$2$ph = $iter2$sroa$1587$0;$iter2$sroa$9$2$ph = $trunc$i$i;
       break;
      }
      case 3:  {
       $trunc$i$i$clear = $trunc$i$i & 7;
       switch ($trunc$i$i$clear<<24>>24) {
       case 0:  {
        break L66;
        break;
       }
       case 5:  {
        $_59$sroa$14$2$ph = 92;$iter2$sroa$0$1$ph = $iter2$sroa$0$0;$iter2$sroa$1587$2$ph = $iter2$sroa$1587$0;$iter2$sroa$9$2$ph = 4;
        break L68;
        break;
       }
       case 1:  {
        $_59$sroa$14$2$ph = 125;$iter2$sroa$0$1$ph = $iter2$sroa$0$0;$iter2$sroa$1587$2$ph = $iter2$sroa$1587$0;$iter2$sroa$9$2$ph = 0;
        break L68;
        break;
       }
       case 2:  {
        $125 = $iter2$sroa$1587$0 << 2;
        $126 = $125 & 28;
        $127 = $init_state$sroa$9$0$i$ph >>> $126;
        $128 = $127 & 15;
        $129 = $128&255;
        $130 = ($129&255)<(10);
        $131 = $128 | 48;
        $132 = (($128) + 87)|0;
        $$sink$i$i = $130 ? $131 : $132;
        $133 = $$sink$i$i & 127;
        $134 = ($iter2$sroa$1587$0|0)==(0);
        $135 = (($iter2$sroa$1587$0) + -1)|0;
        $$ = $134 ? 0 : $135;
        $$iter2$sroa$9$0 = $134 ? 1 : $trunc$i$i;
        $_59$sroa$14$2$ph = $133;$iter2$sroa$0$1$ph = $iter2$sroa$0$0;$iter2$sroa$1587$2$ph = $$;$iter2$sroa$9$2$ph = $$iter2$sroa$9$0;
        break L68;
        break;
       }
       case 3:  {
        $_59$sroa$14$2$ph = 123;$iter2$sroa$0$1$ph = $iter2$sroa$0$0;$iter2$sroa$1587$2$ph = $iter2$sroa$1587$0;$iter2$sroa$9$2$ph = 2;
        break L68;
        break;
       }
       case 4:  {
        $_59$sroa$14$2$ph = 117;$iter2$sroa$0$1$ph = $iter2$sroa$0$0;$iter2$sroa$1587$2$ph = $iter2$sroa$1587$0;$iter2$sroa$9$2$ph = 3;
        break L68;
        break;
       }
       default: {
        label = 65;
        break L6;
       }
       }
       break;
      }
      default: {
       label = 66;
       break L6;
      }
      }
     } while(0);
     $141 = HEAP32[$3>>2]|0;
     $142 = HEAP32[$5>>2]|0;
     $143 = ((($142)) + 16|0);
     $144 = HEAP32[$143>>2]|0;
     $145 = (FUNCTION_TABLE_iii[$144 & 511]($141,$_59$sroa$14$2$ph)|0);
     $not$switch4$i48 = ($145<<24>>24)==(0);
     if ($not$switch4$i48) {
      $iter2$sroa$0$0 = $iter2$sroa$0$1$ph;$iter2$sroa$1587$0 = $iter2$sroa$1587$2$ph;$trunc$i$i = $iter2$sroa$9$2$ph;
     } else {
      $_0$sroa$0$0 = 1;
      label = 4;
      break L6;
     }
    }
    $136 = ($_5$sroa$4$0$ph$i>>>0)<(128);
    if ($136) {
     $_0$0$i = 1;
    } else {
     $137 = ($_5$sroa$4$0$ph$i>>>0)<(2048);
     if ($137) {
      $_0$0$i = 2;
     } else {
      $138 = ($_5$sroa$4$0$ph$i>>>0)<(65536);
      $$$i50 = $138 ? 3 : 4;
      $_0$0$i = $$$i50;
     }
    }
    $139 = (($_0$0$i) + ($iter$sroa$0$0215))|0;
    $$cast$i214 = $iter$sroa$6$4;
    $140 = ($$cast$i214|0)==($10|0);
    if ($140) {
     $from$0$ph$lcssa213 = $139;
     label = 16;
     break;
    } else {
     $$cast$i214224 = $$cast$i214;$from$0$ph223 = $139;$iter$sroa$0$0$ph221 = $62;$iter$sroa$6$0$ph222 = $iter$sroa$6$4;
    }
   }
   if ((label|0) == 4) {
    return ($_0$sroa$0$0|0);
   }
   else if ((label|0) == 16) {
    $50 = ($from$0$ph$lcssa213|0)==(0);
    $51 = ($from$0$ph$lcssa213|0)==($1|0);
    $or$cond$i$i66 = $50 | $51;
    if ($or$cond$i$i66) {
     $from$0$ph$lcssa213256 = $from$0$ph$lcssa213;
     label = 17;
     break;
    }
    $not$$i$i67 = ($from$0$ph$lcssa213>>>0)<($1>>>0);
    if (!($not$$i$i67)) {
     __ZN4core3str16slice_error_fail17h5f5b915047c27c9dE($0,$1,$from$0$ph$lcssa213,$1);
     // unreachable;
    }
    $52 = (($0) + ($from$0$ph$lcssa213)|0);
    $53 = HEAP8[$52>>0]|0;
    $54 = ($53<<24>>24)>(-65);
    if ($54) {
     $$pre$phi$iZ2D = $52;$from$0$ph$lcssa213255 = $from$0$ph$lcssa213;
     break;
    }
    __ZN4core3str16slice_error_fail17h5f5b915047c27c9dE($0,$1,$from$0$ph$lcssa213,$1);
    // unreachable;
   }
   else if ((label|0) == 34) {
    __ZN4core9panicking18panic_bounds_check17hd14a5808e41829e9E(24339,106,24,1,1);
    // unreachable;
   }
   else if ((label|0) == 44) {
    __ZN4core9panicking18panic_bounds_check17hd14a5808e41829e9E(24339,106,24,1,1);
    // unreachable;
   }
   else if ((label|0) == 50) {
    __ZN4core3str16slice_error_fail17h5f5b915047c27c9dE($0,$1,$from$0$ph223,$iter$sroa$0$0215);
    // unreachable;
   }
   else if ((label|0) == 65) {
    // unreachable;
   }
   else if ((label|0) == 66) {
    // unreachable;
   }
  }
 } while(0);
 if ((label|0) == 17) {
  $$pre$i = (($0) + ($from$0$ph$lcssa213256)|0);
  $$pre$phi$iZ2D = $$pre$i;$from$0$ph$lcssa213255 = $from$0$ph$lcssa213256;
 }
 $55 = (($1) - ($from$0$ph$lcssa213255))|0;
 $56 = HEAP32[$3>>2]|0;
 $57 = HEAP32[$5>>2]|0;
 $58 = ((($57)) + 12|0);
 $59 = HEAP32[$58>>2]|0;
 $60 = (FUNCTION_TABLE_iiii[$59 & 511]($56,$$pre$phi$iZ2D,$55)|0);
 $not$switch4$i64 = ($60<<24>>24)==(0);
 if (!($not$switch4$i64)) {
  $_0$sroa$0$0 = 1;
  return ($_0$sroa$0$0|0);
 }
 $146 = HEAP32[$3>>2]|0;
 $147 = HEAP32[$5>>2]|0;
 $148 = ((($147)) + 16|0);
 $149 = HEAP32[$148>>2]|0;
 $150 = (FUNCTION_TABLE_iii[$149 & 511]($146,34)|0);
 $_0$sroa$0$0 = $150;
 return ($_0$sroa$0$0|0);
}
function __ZN53__LT__RF__u27_a_u20_T_u20_as_u20_core__fmt__Debug_GT_3fmt17h1b7acfd18e094fa5E_1769($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[$0>>2]|0;
 $3 = (__ZN4core3fmt3num54__LT_impl_u20_core__fmt__Display_u20_for_u20_usize_GT_3fmt17hfc58b44c96803197E($2,$1)|0);
 return ($3|0);
}
function __ZN4core3fmt3num52__LT_impl_u20_core__fmt__Display_u20_for_u20_u32_GT_3fmt17haf8b7f22784644e7E($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$old5 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $buf31 = 0, $curr$0 = 0;
 var $curr$1 = 0, $curr$2 = 0, $curr$3 = 0, $n$1 = 0, $n$2 = 0, $n1$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $buf31 = sp;
 $2 = HEAP32[$0>>2]|0;
 $3 = ($2>>>0)>(9999);
 if ($3) {
  $curr$0 = 20;$n$1 = $2;
  while(1) {
   $4 = (($n$1>>>0) % 10000)&-1;
   $5 = (($n$1>>>0) / 10000)&-1;
   $6 = (($4>>>0) / 100)&-1;
   $7 = $6 << 1;
   $8 = (($4>>>0) % 100)&-1;
   $9 = $8 << 1;
   $10 = (($curr$0) + -4)|0;
   $11 = (22704 + ($7)|0);
   $12 = (($buf31) + ($10)|0);
   $13 = HEAPU8[$11>>0]|(HEAPU8[$11+1>>0]<<8);
   HEAP8[$12>>0]=$13&255;HEAP8[$12+1>>0]=$13>>8;
   $14 = (22704 + ($9)|0);
   $15 = (($curr$0) + -2)|0;
   $16 = (($buf31) + ($15)|0);
   $17 = HEAPU8[$14>>0]|(HEAPU8[$14+1>>0]<<8);
   HEAP8[$16>>0]=$17&255;HEAP8[$16+1>>0]=$17>>8;
   $$old5 = ($n$1>>>0)>(99999999);
   if ($$old5) {
    $curr$0 = $10;$n$1 = $5;
   } else {
    $curr$1 = $10;$n$2 = $5;
    break;
   }
  }
 } else {
  $curr$1 = 20;$n$2 = $2;
 }
 $18 = ($n$2|0)>(99);
 if ($18) {
  $19 = (($n$2>>>0) % 100)&-1;
  $20 = $19 << 1;
  $21 = (($n$2>>>0) / 100)&-1;
  $22 = (($curr$1) + -2)|0;
  $23 = (22704 + ($20)|0);
  $24 = (($buf31) + ($22)|0);
  $25 = HEAPU8[$23>>0]|(HEAPU8[$23+1>>0]<<8);
  HEAP8[$24>>0]=$25&255;HEAP8[$24+1>>0]=$25>>8;
  $curr$2 = $22;$n1$0 = $21;
 } else {
  $curr$2 = $curr$1;$n1$0 = $n$2;
 }
 $26 = ($n1$0|0)<(10);
 if ($26) {
  $27 = (($curr$2) + -1)|0;
  $28 = $n1$0&255;
  $29 = (($buf31) + ($27)|0);
  $30 = (($28) + 48)<<24>>24;
  HEAP8[$29>>0] = $30;
  $curr$3 = $27;
  $36 = (($buf31) + ($curr$3)|0);
  $37 = (20 - ($curr$3))|0;
  $38 = (__ZN4core3fmt9Formatter12pad_integral17h30369de78b61ed24E($1,1,27292,0,$36,$37)|0);
  STACKTOP = sp;return ($38|0);
 } else {
  $31 = $n1$0 << 1;
  $32 = (($curr$2) + -2)|0;
  $33 = (22704 + ($31)|0);
  $34 = (($buf31) + ($32)|0);
  $35 = HEAPU8[$33>>0]|(HEAPU8[$33+1>>0]<<8);
  HEAP8[$34>>0]=$35&255;HEAP8[$34+1>>0]=$35>>8;
  $curr$3 = $32;
  $36 = (($buf31) + ($curr$3)|0);
  $37 = (20 - ($curr$3))|0;
  $38 = (__ZN4core3fmt9Formatter12pad_integral17h30369de78b61ed24E($1,1,27292,0,$36,$37)|0);
  STACKTOP = sp;return ($38|0);
 }
 return (0)|0;
}
function __ZN61__LT_core__num__ParseIntError_u20_as_u20_core__fmt__Debug_GT_3fmt17he7023a72c6f7f73eE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$repack$i$i = 0, $$unpack$i = 0, $$unpack$pre$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $_0$sroa$0$0$i$i = 0, $_17 = 0, $builder = 0, $switch4$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $builder = sp;
 $_17 = sp + 8|0;
 $2 = ((($1)) + 28|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ((($1)) + 32|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ((($5)) + 12|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = (FUNCTION_TABLE_iiii[$7 & 511]($3,24456,13)|0);
 HEAP32[$builder>>2] = $1;
 $$repack$i$i = ((($builder)) + 4|0);
 HEAP8[$$repack$i$i>>0] = $8;
 $9 = ((($builder)) + 5|0);
 HEAP8[$9>>0] = 0;
 HEAP32[$_17>>2] = $0;
 (__ZN4core3fmt8builders11DebugStruct5field17hfad538a66c3eb971E($builder,24445,4,$_17,5032)|0);
 $10 = HEAP8[$9>>0]|0;
 $11 = ($10<<24>>24)==(0);
 $$unpack$pre$i = HEAP8[$$repack$i$i>>0]|0;
 if ($11) {
  $$unpack$i = $$unpack$pre$i;
  STACKTOP = sp;return ($$unpack$i|0);
 }
 $switch4$i$i = ($$unpack$pre$i<<24>>24)==(0);
 do {
  if ($switch4$i$i) {
   $12 = HEAP32[$builder>>2]|0;
   $13 = HEAP32[$12>>2]|0;
   $14 = $13 & 4;
   $15 = ($14|0)==(0);
   $16 = ((($12)) + 28|0);
   $17 = HEAP32[$16>>2]|0;
   $18 = ((($12)) + 32|0);
   $19 = HEAP32[$18>>2]|0;
   $20 = ((($19)) + 12|0);
   $21 = HEAP32[$20>>2]|0;
   if ($15) {
    $23 = (FUNCTION_TABLE_iiii[$21 & 511]($17,24334,2)|0);
    $_0$sroa$0$0$i$i = $23;
    break;
   } else {
    $22 = (FUNCTION_TABLE_iiii[$21 & 511]($17,24332,2)|0);
    $_0$sroa$0$0$i$i = $22;
    break;
   }
  } else {
   $_0$sroa$0$0$i$i = 1;
  }
 } while(0);
 HEAP8[$$repack$i$i>>0] = $_0$sroa$0$0$i$i;
 $$unpack$i = $_0$sroa$0$0$i$i;
 STACKTOP = sp;return ($$unpack$i|0);
}
function __ZN53__LT__RF__u27_a_u20_T_u20_as_u20_core__fmt__Debug_GT_3fmt17h01efebbc916631cdE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $_0$sroa$0$0$i = 0, $trunc$i = 0, $trunc$i$clear = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[$0>>2]|0;
 $trunc$i = HEAP8[$2>>0]|0;
 $trunc$i$clear = $trunc$i & 3;
 switch ($trunc$i$clear<<24>>24) {
 case 0:  {
  $3 = ((($1)) + 28|0);
  $4 = HEAP32[$3>>2]|0;
  $5 = ((($1)) + 32|0);
  $6 = HEAP32[$5>>2]|0;
  $7 = ((($6)) + 12|0);
  $8 = HEAP32[$7>>2]|0;
  $9 = (FUNCTION_TABLE_iiii[$8 & 511]($4,24449,5)|0);
  $_0$sroa$0$0$i = $9;
  return ($_0$sroa$0$0$i|0);
  break;
 }
 case 1:  {
  $10 = ((($1)) + 28|0);
  $11 = HEAP32[$10>>2]|0;
  $12 = ((($1)) + 32|0);
  $13 = HEAP32[$12>>2]|0;
  $14 = ((($13)) + 12|0);
  $15 = HEAP32[$14>>2]|0;
  $16 = (FUNCTION_TABLE_iiii[$15 & 511]($11,24469,12)|0);
  $_0$sroa$0$0$i = $16;
  return ($_0$sroa$0$0$i|0);
  break;
 }
 case 2:  {
  $17 = ((($1)) + 28|0);
  $18 = HEAP32[$17>>2]|0;
  $19 = ((($1)) + 32|0);
  $20 = HEAP32[$19>>2]|0;
  $21 = ((($20)) + 12|0);
  $22 = HEAP32[$21>>2]|0;
  $23 = (FUNCTION_TABLE_iiii[$22 & 511]($18,24481,8)|0);
  $_0$sroa$0$0$i = $23;
  return ($_0$sroa$0$0$i|0);
  break;
 }
 case 3:  {
  $24 = ((($1)) + 28|0);
  $25 = HEAP32[$24>>2]|0;
  $26 = ((($1)) + 32|0);
  $27 = HEAP32[$26>>2]|0;
  $28 = ((($27)) + 12|0);
  $29 = HEAP32[$28>>2]|0;
  $30 = (FUNCTION_TABLE_iiii[$29 & 511]($25,24489,9)|0);
  $_0$sroa$0$0$i = $30;
  return ($_0$sroa$0$0$i|0);
  break;
 }
 default: {
  // unreachable;
 }
 }
 return (0)|0;
}
function __ZN4core3fmt3num50__LT_impl_u20_core__fmt__Debug_u20_for_u20_i32_GT_3fmt17h28caa732ada26aebE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (__ZN4core3fmt3num52__LT_impl_u20_core__fmt__Display_u20_for_u20_i32_GT_3fmt17h99aa46b1befc4e8fE($0,$1)|0);
 return ($2|0);
}
function __ZN4core3fmt3num52__LT_impl_u20_core__fmt__Display_u20_for_u20_i32_GT_3fmt17h99aa46b1befc4e8fE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$ = 0, $$old5 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, $buf31 = 0, $curr$0 = 0, $curr$1 = 0, $curr$2 = 0, $curr$3 = 0, $n$1 = 0, $n$2 = 0, $n1$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $buf31 = sp;
 $2 = HEAP32[$0>>2]|0;
 $3 = ($2|0)>(-1);
 $4 = (0 - ($2))|0;
 $$ = $3 ? $2 : $4;
 $5 = ($$>>>0)>(9999);
 if ($5) {
  $curr$0 = 20;$n$1 = $$;
  while(1) {
   $6 = (($n$1>>>0) % 10000)&-1;
   $7 = (($n$1>>>0) / 10000)&-1;
   $8 = (($6>>>0) / 100)&-1;
   $9 = $8 << 1;
   $10 = (($6>>>0) % 100)&-1;
   $11 = $10 << 1;
   $12 = (($curr$0) + -4)|0;
   $13 = (22704 + ($9)|0);
   $14 = (($buf31) + ($12)|0);
   $15 = HEAPU8[$13>>0]|(HEAPU8[$13+1>>0]<<8);
   HEAP8[$14>>0]=$15&255;HEAP8[$14+1>>0]=$15>>8;
   $16 = (22704 + ($11)|0);
   $17 = (($curr$0) + -2)|0;
   $18 = (($buf31) + ($17)|0);
   $19 = HEAPU8[$16>>0]|(HEAPU8[$16+1>>0]<<8);
   HEAP8[$18>>0]=$19&255;HEAP8[$18+1>>0]=$19>>8;
   $$old5 = ($n$1>>>0)>(99999999);
   if ($$old5) {
    $curr$0 = $12;$n$1 = $7;
   } else {
    $curr$1 = $12;$n$2 = $7;
    break;
   }
  }
 } else {
  $curr$1 = 20;$n$2 = $$;
 }
 $20 = ($n$2|0)>(99);
 if ($20) {
  $21 = (($n$2>>>0) % 100)&-1;
  $22 = $21 << 1;
  $23 = (($n$2>>>0) / 100)&-1;
  $24 = (($curr$1) + -2)|0;
  $25 = (22704 + ($22)|0);
  $26 = (($buf31) + ($24)|0);
  $27 = HEAPU8[$25>>0]|(HEAPU8[$25+1>>0]<<8);
  HEAP8[$26>>0]=$27&255;HEAP8[$26+1>>0]=$27>>8;
  $curr$2 = $24;$n1$0 = $23;
 } else {
  $curr$2 = $curr$1;$n1$0 = $n$2;
 }
 $28 = ($n1$0|0)<(10);
 if ($28) {
  $29 = (($curr$2) + -1)|0;
  $30 = $n1$0&255;
  $31 = (($buf31) + ($29)|0);
  $32 = (($30) + 48)<<24>>24;
  HEAP8[$31>>0] = $32;
  $curr$3 = $29;
  $38 = (($buf31) + ($curr$3)|0);
  $39 = (20 - ($curr$3))|0;
  $40 = (__ZN4core3fmt9Formatter12pad_integral17h30369de78b61ed24E($1,$3,27292,0,$38,$39)|0);
  STACKTOP = sp;return ($40|0);
 } else {
  $33 = $n1$0 << 1;
  $34 = (($curr$2) + -2)|0;
  $35 = (22704 + ($33)|0);
  $36 = (($buf31) + ($34)|0);
  $37 = HEAPU8[$35>>0]|(HEAPU8[$35+1>>0]<<8);
  HEAP8[$36>>0]=$37&255;HEAP8[$36+1>>0]=$37>>8;
  $curr$3 = $34;
  $38 = (($buf31) + ($curr$3)|0);
  $39 = (20 - ($curr$3))|0;
  $40 = (__ZN4core3fmt9Formatter12pad_integral17h30369de78b61ed24E($1,$3,27292,0,$38,$39)|0);
  STACKTOP = sp;return ($40|0);
 }
 return (0)|0;
}
function __ZN4core3fmt3num54__LT_impl_u20_core__fmt__Display_u20_for_u20_isize_GT_3fmt17h85d31eb90618a5a7E($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$ = 0, $$old5 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, $buf31 = 0, $curr$0 = 0, $curr$1 = 0, $curr$2 = 0, $curr$3 = 0, $n$1 = 0, $n$2 = 0, $n1$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $buf31 = sp;
 $2 = HEAP32[$0>>2]|0;
 $3 = ($2|0)>(-1);
 $4 = (0 - ($2))|0;
 $$ = $3 ? $2 : $4;
 $5 = ($$>>>0)>(9999);
 if ($5) {
  $curr$0 = 20;$n$1 = $$;
  while(1) {
   $6 = (($n$1>>>0) % 10000)&-1;
   $7 = (($n$1>>>0) / 10000)&-1;
   $8 = (($6>>>0) / 100)&-1;
   $9 = $8 << 1;
   $10 = (($6>>>0) % 100)&-1;
   $11 = $10 << 1;
   $12 = (($curr$0) + -4)|0;
   $13 = (22704 + ($9)|0);
   $14 = (($buf31) + ($12)|0);
   $15 = HEAPU8[$13>>0]|(HEAPU8[$13+1>>0]<<8);
   HEAP8[$14>>0]=$15&255;HEAP8[$14+1>>0]=$15>>8;
   $16 = (22704 + ($11)|0);
   $17 = (($curr$0) + -2)|0;
   $18 = (($buf31) + ($17)|0);
   $19 = HEAPU8[$16>>0]|(HEAPU8[$16+1>>0]<<8);
   HEAP8[$18>>0]=$19&255;HEAP8[$18+1>>0]=$19>>8;
   $$old5 = ($n$1>>>0)>(99999999);
   if ($$old5) {
    $curr$0 = $12;$n$1 = $7;
   } else {
    $curr$1 = $12;$n$2 = $7;
    break;
   }
  }
 } else {
  $curr$1 = 20;$n$2 = $$;
 }
 $20 = ($n$2|0)>(99);
 if ($20) {
  $21 = (($n$2>>>0) % 100)&-1;
  $22 = $21 << 1;
  $23 = (($n$2>>>0) / 100)&-1;
  $24 = (($curr$1) + -2)|0;
  $25 = (22704 + ($22)|0);
  $26 = (($buf31) + ($24)|0);
  $27 = HEAPU8[$25>>0]|(HEAPU8[$25+1>>0]<<8);
  HEAP8[$26>>0]=$27&255;HEAP8[$26+1>>0]=$27>>8;
  $curr$2 = $24;$n1$0 = $23;
 } else {
  $curr$2 = $curr$1;$n1$0 = $n$2;
 }
 $28 = ($n1$0|0)<(10);
 if ($28) {
  $29 = (($curr$2) + -1)|0;
  $30 = $n1$0&255;
  $31 = (($buf31) + ($29)|0);
  $32 = (($30) + 48)<<24>>24;
  HEAP8[$31>>0] = $32;
  $curr$3 = $29;
  $38 = (($buf31) + ($curr$3)|0);
  $39 = (20 - ($curr$3))|0;
  $40 = (__ZN4core3fmt9Formatter12pad_integral17h30369de78b61ed24E($1,$3,27292,0,$38,$39)|0);
  STACKTOP = sp;return ($40|0);
 } else {
  $33 = $n1$0 << 1;
  $34 = (($curr$2) + -2)|0;
  $35 = (22704 + ($33)|0);
  $36 = (($buf31) + ($34)|0);
  $37 = HEAPU8[$35>>0]|(HEAPU8[$35+1>>0]<<8);
  HEAP8[$36>>0]=$37&255;HEAP8[$36+1>>0]=$37>>8;
  $curr$3 = $34;
  $38 = (($buf31) + ($curr$3)|0);
  $39 = (20 - ($curr$3))|0;
  $40 = (__ZN4core3fmt9Formatter12pad_integral17h30369de78b61ed24E($1,$3,27292,0,$38,$39)|0);
  STACKTOP = sp;return ($40|0);
 }
 return (0)|0;
}
function __ZN57__LT_core__str__Utf8Error_u20_as_u20_core__fmt__Debug_GT_3fmt17h922c7d2cf2c0992dE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$repack$i$i = 0, $$unpack$i = 0, $$unpack$pre$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $_0$sroa$0$0$i$i = 0, $_17 = 0, $builder = 0, $switch4$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $builder = sp;
 $_17 = sp + 8|0;
 $2 = ((($1)) + 28|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ((($1)) + 32|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ((($5)) + 12|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = (FUNCTION_TABLE_iiii[$7 & 511]($3,24498,9)|0);
 HEAP32[$builder>>2] = $1;
 $$repack$i$i = ((($builder)) + 4|0);
 HEAP8[$$repack$i$i>>0] = $8;
 $9 = ((($builder)) + 5|0);
 HEAP8[$9>>0] = 0;
 HEAP32[$_17>>2] = $0;
 (__ZN4core3fmt8builders11DebugStruct5field17hfad538a66c3eb971E($builder,24507,11,$_17,5016)|0);
 $10 = HEAP8[$9>>0]|0;
 $11 = ($10<<24>>24)==(0);
 $$unpack$pre$i = HEAP8[$$repack$i$i>>0]|0;
 if ($11) {
  $$unpack$i = $$unpack$pre$i;
  STACKTOP = sp;return ($$unpack$i|0);
 }
 $switch4$i$i = ($$unpack$pre$i<<24>>24)==(0);
 do {
  if ($switch4$i$i) {
   $12 = HEAP32[$builder>>2]|0;
   $13 = HEAP32[$12>>2]|0;
   $14 = $13 & 4;
   $15 = ($14|0)==(0);
   $16 = ((($12)) + 28|0);
   $17 = HEAP32[$16>>2]|0;
   $18 = ((($12)) + 32|0);
   $19 = HEAP32[$18>>2]|0;
   $20 = ((($19)) + 12|0);
   $21 = HEAP32[$20>>2]|0;
   if ($15) {
    $23 = (FUNCTION_TABLE_iiii[$21 & 511]($17,24334,2)|0);
    $_0$sroa$0$0$i$i = $23;
    break;
   } else {
    $22 = (FUNCTION_TABLE_iiii[$21 & 511]($17,24332,2)|0);
    $_0$sroa$0$0$i$i = $22;
    break;
   }
  } else {
   $_0$sroa$0$0$i$i = 1;
  }
 } while(0);
 HEAP8[$$repack$i$i>>0] = $_0$sroa$0$0$i$i;
 $$unpack$i = $_0$sroa$0$0$i$i;
 STACKTOP = sp;return ($$unpack$i|0);
}
function __ZN4core3fmt23float_to_decimal_common17hf65793c26e44a3e2E($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$ = 0, $$$i = 0, $$$i$i$i = 0, $$$i$i$i$le$i = 0, $$$i$i$i118$i = 0, $$$i$i$i128 = 0, $$$i$i$i144$i = 0, $$$i$i$i212 = 0, $$$i$i$i92$i = 0, $$$i$i115$i = 0, $$$i$i117$i$i = 0, $$$i$i119$i = 0, $$$i$i141$i = 0, $$$i$i15$i = 0, $$$i$i165$i = 0, $$$i$i204$i = 0, $$$i$i216 = 0, $$$i$i3$i = 0, $$$i$i39$i$i = 0, $$$i$i78$i$i = 0;
 var $$$i$i81$i = 0, $$$i204 = 0, $$$i4$i = 0, $$$i65 = 0, $$1$i$i$i = 0, $$103$i = 0, $$104$i = 0, $$105$i = 0, $$106$i = 0, $$107$i = 0, $$108$i = 0, $$109$i = 0, $$1093 = 0, $$110$i = 0, $$111$i = 0, $$112$i = 0, $$119$i = 0, $$120$i = 0, $$121$i = 0, $$122$i = 0;
 var $$123$i = 0, $$124$i = 0, $$125$i = 0, $$126$i = 0, $$127$i = 0, $$17$i = 0, $$19$i$i1114 = 0, $$19$i$i1128 = 0, $$19$i$i381141 = 0, $$19$i$i381153 = 0, $$21$i$i1115 = 0, $$21$i$i1129 = 0, $$21$i$i391142 = 0, $$21$i$i391154 = 0, $$271$i = 0, $$arith = 0, $$arith11 = 0, $$arith15 = 0, $$arith19 = 0, $$arith23 = 0;
 var $$arith27 = 0, $$arith31 = 0, $$arith35 = 0, $$arith39 = 0, $$arith43 = 0, $$arith47 = 0, $$arith51 = 0, $$arith55 = 0, $$arith59 = 0, $$arith63 = 0, $$arith67 = 0, $$arith7 = 0, $$arith71 = 0, $$arith75 = 0, $$arith79 = 0, $$arith83 = 0, $$arith87 = 0, $$lcssa$i$i = 0, $$lcssa$i67$i = 0, $$lcssa752$i = 0;
 var $$not$i$i = 0, $$not$i$i60 = 0, $$overflow = 0, $$overflow12 = 0, $$overflow16 = 0, $$overflow20 = 0, $$overflow24 = 0, $$overflow28 = 0, $$overflow32 = 0, $$overflow36 = 0, $$overflow40 = 0, $$overflow44 = 0, $$overflow48 = 0, $$overflow52 = 0, $$overflow56 = 0, $$overflow60 = 0, $$overflow64 = 0, $$overflow68 = 0, $$overflow72 = 0, $$overflow76 = 0;
 var $$overflow8 = 0, $$overflow80 = 0, $$overflow84 = 0, $$overflow88 = 0, $$ph = 0, $$pre = 0, $$pre$i122 = 0, $$pre$i122$pre = 0, $$pre509$i = 0, $$sink$i$i$i$i$i$i$i = 0, $$sink$i$i$i$i$i$i$i$i$i = 0, $$sink$i$i$i$i$i$i$i$i$i$i = 0, $$sink$i$i$i$i$i$i$i$i$i145 = 0, $$sink$i$i$i$i$i$i$i$i145$i = 0, $$sink$i$i$i$i$i$i$i$i185$i = 0, $$sink$i$i$i$i$i$i$i$i20$i$i = 0, $$sink$i$i$i$i$i$i$i$i224$i = 0, $$sink$i$i$i$i$i$i$i$i59$i$i = 0, $$sink$i$i$i$i$i$i$i$i98$i = 0, $$sink$i$i$i$i$i$i$i$i98$i$i = 0;
 var $$sink$i$i$i$i$i$i$i190 = 0, $$sink$i$i$i$i$i$i111$i = 0, $$sink$i$i$i$i$i$i137$i = 0, $$sink$i$i$i$i60$i$i$i = 0, $$sink$i$i$i$i60$i$i$i$i$i = 0, $$sink$i$i$i$i60$i$i$i$i$i$i = 0, $$sink$i$i$i$i60$i$i$i$i$i140 = 0, $$sink$i$i$i$i60$i$i$i$i140$i = 0, $$sink$i$i$i$i60$i$i$i$i15$i$i = 0, $$sink$i$i$i$i60$i$i$i$i180$i = 0, $$sink$i$i$i$i60$i$i$i$i219$i = 0, $$sink$i$i$i$i60$i$i$i$i54$i$i = 0, $$sink$i$i$i$i60$i$i$i$i93$i = 0, $$sink$i$i$i$i60$i$i$i$i93$i$i = 0, $$sink$i$i$i$i60$i$i$i185 = 0, $$sink$i$i$i$i60$i$i106$i = 0, $$sink$i$i$i$i60$i$i132$i = 0, $$sink$i$index = 0, $$sink$i$index2 = 0, $10 = 0;
 var $100 = 0, $1000 = 0, $1001 = 0, $1002 = 0, $1003 = 0, $1004 = 0, $1005 = 0, $1006 = 0, $1007 = 0, $1008 = 0, $1009 = 0, $101 = 0, $1010 = 0, $1011 = 0, $1012 = 0, $1013 = 0, $1014 = 0, $1015 = 0, $1016 = 0, $1017 = 0;
 var $1018 = 0, $1019 = 0, $102 = 0, $1020 = 0, $1021 = 0, $1022 = 0, $1023 = 0, $1024 = 0, $1025 = 0, $1026 = 0, $1027 = 0, $1028 = 0, $1029 = 0, $103 = 0, $1030 = 0, $1031 = 0, $1032 = 0, $1033 = 0, $1034 = 0, $1035 = 0;
 var $1036 = 0, $1037 = 0, $1038 = 0, $1039 = 0, $104 = 0, $1040 = 0, $1041 = 0, $1042 = 0, $1043 = 0, $1044 = 0, $1045 = 0, $1046 = 0, $1047 = 0, $1048 = 0, $1049 = 0, $105 = 0, $1050 = 0, $1051 = 0, $1052 = 0, $1053 = 0;
 var $1054 = 0, $1055 = 0, $1056 = 0, $1057 = 0, $1058 = 0, $1059 = 0, $106 = 0, $1060 = 0, $1061 = 0, $1062 = 0, $1063 = 0, $1064 = 0, $1065 = 0, $1066 = 0, $1067 = 0, $1068 = 0, $1069 = 0, $107 = 0, $1070 = 0, $1071 = 0;
 var $1072 = 0, $1073 = 0, $1074 = 0, $1075 = 0, $1076 = 0, $1077 = 0, $1078 = 0, $1079 = 0, $108 = 0, $1080 = 0, $1081 = 0, $1082 = 0, $1083 = 0, $1084 = 0, $1085 = 0, $1086 = 0, $1087 = 0, $1088 = 0, $1089 = 0, $109 = 0;
 var $1090 = 0, $1091 = 0, $1092 = 0, $1093 = 0, $1094 = 0, $1095 = 0, $1096 = 0, $1097 = 0, $1098 = 0, $1099 = 0, $11 = 0, $110 = 0, $1100 = 0, $1101 = 0, $1102 = 0, $1103 = 0, $1104 = 0, $1105 = 0, $1106 = 0, $1107 = 0;
 var $1108 = 0, $1109 = 0, $111 = 0, $1110 = 0, $1111 = 0, $1112 = 0, $1113 = 0, $1114 = 0, $1115 = 0, $1116 = 0, $1117 = 0, $1118 = 0, $1119 = 0, $112 = 0, $1120 = 0, $1121 = 0, $1122 = 0, $1123 = 0, $1124 = 0, $1125 = 0;
 var $1126 = 0, $1127 = 0, $1128 = 0, $1129 = 0, $113 = 0, $1130 = 0, $1131 = 0, $1132 = 0, $1133 = 0, $1134 = 0, $1135 = 0, $1136 = 0, $1137 = 0, $1138 = 0, $1139 = 0, $114 = 0, $1140 = 0, $1141 = 0, $1142 = 0, $1143 = 0;
 var $1144 = 0, $1145 = 0, $1146 = 0, $1147 = 0, $1148 = 0, $1149 = 0, $115 = 0, $1150 = 0, $1151 = 0, $1152 = 0, $1153 = 0, $1154 = 0, $1155 = 0, $1156 = 0, $1157 = 0, $1158 = 0, $1159 = 0, $116 = 0, $1160 = 0, $1161 = 0;
 var $1162 = 0, $1163 = 0, $1164 = 0, $1165 = 0, $1166 = 0, $1167 = 0, $1168 = 0, $1169 = 0, $117 = 0, $1170 = 0, $1171 = 0, $1172 = 0, $1173 = 0, $1174 = 0, $1175 = 0, $1176 = 0, $1177 = 0, $1178 = 0, $1179 = 0, $118 = 0;
 var $1180 = 0, $1181 = 0, $1182 = 0, $1183 = 0, $1184 = 0, $1185 = 0, $1186 = 0, $1187 = 0, $1188 = 0, $1189 = 0, $119 = 0, $1190 = 0, $1191 = 0, $1192 = 0, $1193 = 0, $1194 = 0, $1195 = 0, $1196 = 0, $1197 = 0, $1198 = 0;
 var $1199 = 0, $12 = 0, $120 = 0, $1200 = 0, $1201 = 0, $1202 = 0, $1203 = 0, $1204 = 0, $1205 = 0, $1206 = 0, $1207 = 0, $1208 = 0, $1209 = 0, $121 = 0, $1210 = 0, $1211 = 0, $1212 = 0, $1213 = 0, $1214 = 0, $1215 = 0;
 var $1216 = 0, $1217 = 0, $1218 = 0, $1219 = 0, $122 = 0, $1220 = 0, $1221 = 0, $1222 = 0, $1223 = 0, $1224 = 0, $1225 = 0, $1226 = 0, $1227 = 0, $1228 = 0, $1229 = 0, $123 = 0, $1230 = 0, $1231 = 0, $1232 = 0, $1233 = 0;
 var $1234 = 0, $1235 = 0, $1236 = 0, $1237 = 0, $1238 = 0, $1239 = 0, $124 = 0, $1240 = 0, $1241 = 0, $1242 = 0, $1243 = 0, $1244 = 0, $1245 = 0, $1246 = 0, $1247 = 0, $1248 = 0, $1249 = 0, $125 = 0, $1250 = 0, $1251 = 0;
 var $1252 = 0, $1253 = 0, $1254 = 0, $1255 = 0, $1256 = 0, $1257 = 0, $1258 = 0, $1259 = 0, $126 = 0, $1260 = 0, $1261 = 0, $1262 = 0, $1263 = 0, $1264 = 0, $1265 = 0, $1266 = 0, $1267 = 0, $1268 = 0, $1269 = 0, $127 = 0;
 var $1270 = 0, $1271 = 0, $1272 = 0, $1273 = 0, $1274 = 0, $1275 = 0, $1276 = 0, $1277 = 0, $1278 = 0, $1279 = 0, $128 = 0, $1280 = 0, $1281 = 0, $1282 = 0, $1283 = 0, $1284 = 0, $1285 = 0, $1286 = 0, $1287 = 0, $1288 = 0;
 var $1289 = 0, $129 = 0, $1290 = 0, $1291 = 0, $1292 = 0, $1293 = 0, $1294 = 0, $1295 = 0, $1296 = 0, $1297 = 0, $1298 = 0, $1299 = 0, $13 = 0, $130 = 0, $1300 = 0, $1301 = 0, $1302 = 0, $1303 = 0, $1304 = 0, $1305 = 0;
 var $1306 = 0, $1307 = 0, $1308 = 0, $1309 = 0, $131 = 0, $1310 = 0, $1311 = 0, $1312 = 0, $1313 = 0, $1314 = 0, $1315 = 0, $1316 = 0, $1317 = 0, $1318 = 0, $1319 = 0, $132 = 0, $1320 = 0, $1321 = 0, $1322 = 0, $1323 = 0;
 var $1324 = 0, $1325 = 0, $1326 = 0, $1327 = 0, $1328 = 0, $1329 = 0, $133 = 0, $1330 = 0, $1331 = 0, $1332 = 0, $1333 = 0, $1334 = 0, $1335 = 0, $1336 = 0, $1337 = 0, $1338 = 0, $1339 = 0, $134 = 0, $1340 = 0, $1341 = 0;
 var $1342 = 0, $1343 = 0, $1344 = 0, $1345 = 0, $1346 = 0, $1347 = 0, $1348 = 0, $1348$phi = 0, $1349 = 0, $135 = 0, $1350 = 0, $1351 = 0, $1352 = 0, $1353 = 0, $1354 = 0, $1355 = 0, $1356 = 0, $1357 = 0, $1358 = 0, $1359 = 0;
 var $136 = 0, $1360 = 0, $1361 = 0, $1362 = 0, $1363 = 0, $1364 = 0, $1365 = 0, $1366 = 0, $1367 = 0, $1368 = 0, $1369 = 0, $137 = 0, $1370 = 0, $1371 = 0, $1372 = 0, $1373 = 0, $1374 = 0, $1375 = 0, $1376 = 0, $1377 = 0;
 var $1378 = 0, $1379 = 0, $138 = 0, $1380 = 0, $1381 = 0, $1382 = 0, $1383 = 0, $1384 = 0, $1385 = 0, $1386 = 0, $1387 = 0, $1388 = 0, $1389 = 0, $139 = 0, $1390 = 0, $1391 = 0, $1392 = 0, $1393 = 0, $1394 = 0, $1395 = 0;
 var $1396 = 0, $1397 = 0, $1398 = 0, $1399 = 0, $14 = 0, $140 = 0, $1400 = 0, $1401 = 0, $1402 = 0, $1403 = 0, $1404 = 0, $1405 = 0, $1406 = 0, $1407 = 0, $1408 = 0, $1409 = 0, $141 = 0, $1410 = 0, $1411 = 0, $1412 = 0;
 var $1413 = 0, $1414 = 0, $1415 = 0, $1416 = 0, $1417 = 0, $1418 = 0, $1419 = 0, $142 = 0, $1420 = 0, $1421 = 0, $1422 = 0, $1423 = 0, $1424 = 0, $1425 = 0, $1426 = 0, $1427 = 0, $1428 = 0, $1429 = 0, $143 = 0, $1430 = 0;
 var $1431 = 0, $1432 = 0, $1433 = 0, $1434 = 0, $1435 = 0, $1436 = 0, $1437 = 0, $1438 = 0, $1439 = 0, $144 = 0, $1440 = 0, $1441 = 0, $1442 = 0, $1443 = 0, $1444 = 0, $1445 = 0, $1446 = 0, $1447 = 0, $1448 = 0, $1449 = 0;
 var $145 = 0, $1450 = 0, $1451 = 0, $1452 = 0, $1453 = 0, $1454 = 0, $1455 = 0, $1456 = 0, $1457 = 0, $1458 = 0, $1459 = 0, $146 = 0, $1460 = 0, $1461 = 0, $1462 = 0, $1463 = 0, $1464 = 0, $1465 = 0, $1466 = 0, $1467 = 0;
 var $1468 = 0, $1469 = 0, $147 = 0, $1470 = 0, $1471 = 0, $1472 = 0, $1473 = 0, $1474 = 0, $1475 = 0, $1476 = 0, $1477 = 0, $1478 = 0, $1479 = 0, $148 = 0, $1480 = 0, $1481 = 0, $1482 = 0, $1483 = 0, $1484 = 0, $1485 = 0;
 var $1486 = 0, $1487 = 0, $1488 = 0, $1489 = 0, $149 = 0, $1490 = 0, $1491 = 0, $1492 = 0, $1493 = 0, $1494 = 0, $1495 = 0, $1496 = 0, $1497 = 0, $1498 = 0, $1499 = 0, $15 = 0, $150 = 0, $1500 = 0, $1501 = 0, $1502 = 0;
 var $1503 = 0, $1504 = 0, $1505 = 0, $1506 = 0, $1507 = 0, $1508 = 0, $1509 = 0, $151 = 0, $1510 = 0, $1511 = 0, $1512 = 0, $1513 = 0, $1514 = 0, $1515 = 0, $1516 = 0, $1517 = 0, $1518 = 0, $1519 = 0, $152 = 0, $1520 = 0;
 var $1521 = 0, $1522 = 0, $1523 = 0, $1524 = 0, $1525 = 0, $1526 = 0, $1527 = 0, $1528 = 0, $1529 = 0, $153 = 0, $1530 = 0, $1531 = 0, $1532 = 0, $1533 = 0, $1534 = 0, $1535 = 0, $1536 = 0, $1537 = 0, $1538 = 0, $1539 = 0;
 var $154 = 0, $1540 = 0, $1541 = 0, $1542 = 0, $1543 = 0, $1544 = 0, $1545 = 0, $1546 = 0, $1547 = 0, $1548 = 0, $1549 = 0, $155 = 0, $1550 = 0, $1551 = 0, $1552 = 0, $1553 = 0, $1554 = 0, $1555 = 0, $1556 = 0, $1557 = 0;
 var $1558 = 0, $1559 = 0, $156 = 0, $1560 = 0, $1561 = 0, $1562 = 0, $1563 = 0, $1564 = 0, $1565 = 0, $1566 = 0, $1567 = 0, $1568 = 0, $1569 = 0, $157 = 0, $1570 = 0, $1571 = 0, $1572 = 0, $1573 = 0, $1574 = 0, $1575 = 0;
 var $1576 = 0, $1577 = 0, $1578 = 0, $1579 = 0, $158 = 0, $1580 = 0, $1581 = 0, $1582 = 0, $1583 = 0, $1584 = 0, $1585 = 0, $1586 = 0, $1587 = 0, $1588 = 0, $1589 = 0, $159 = 0, $1590 = 0, $1591 = 0, $1592 = 0, $1593 = 0;
 var $1594 = 0, $1595 = 0, $1596 = 0, $1597 = 0, $1598 = 0, $1599 = 0, $16 = 0, $160 = 0, $1600 = 0, $1601 = 0, $1602 = 0, $1603 = 0, $1604 = 0, $1605 = 0, $1606 = 0, $1607 = 0, $1608 = 0, $1609 = 0, $161 = 0, $1610 = 0;
 var $1611 = 0, $1612 = 0, $1613 = 0, $1614 = 0, $1615 = 0, $1616 = 0, $1617 = 0, $1618 = 0, $1619 = 0, $162 = 0, $1620 = 0, $1621 = 0, $1622 = 0, $1623 = 0, $1624 = 0, $1625 = 0, $1626 = 0, $1627 = 0, $1628 = 0, $1629 = 0;
 var $163 = 0, $1630 = 0, $1631 = 0, $1632 = 0, $1633 = 0, $1634 = 0, $1635 = 0, $1636 = 0, $1637 = 0, $1638 = 0, $1639 = 0, $164 = 0, $1640 = 0, $1641 = 0, $1642 = 0, $1643 = 0, $1644 = 0, $1645 = 0, $1646 = 0, $1647 = 0;
 var $1648 = 0, $1649 = 0, $165 = 0, $1650 = 0, $1651 = 0, $1652 = 0, $1653 = 0, $1654 = 0, $1655 = 0, $1656 = 0, $1657 = 0, $1658 = 0, $1659 = 0, $166 = 0, $1660 = 0, $1661 = 0, $1662 = 0, $1663 = 0, $1664 = 0, $1665 = 0;
 var $1666 = 0, $1667 = 0, $1668 = 0, $1669 = 0, $167 = 0, $1670 = 0, $1671 = 0, $1672 = 0, $1673 = 0, $1674 = 0, $1675 = 0, $1676 = 0, $1677 = 0, $1678 = 0, $1679 = 0, $168 = 0, $1680 = 0, $1681 = 0, $1682 = 0, $1683 = 0;
 var $1684 = 0, $1685 = 0, $1686 = 0, $1687 = 0, $1688 = 0, $1689 = 0, $169 = 0, $1690 = 0, $1691 = 0, $1692 = 0, $1693 = 0, $1694 = 0, $1695 = 0, $1696 = 0, $1697 = 0, $1698 = 0, $1699 = 0, $17 = 0, $170 = 0, $1700 = 0;
 var $1701 = 0, $1702 = 0, $1703 = 0, $1704 = 0, $1705 = 0, $1706 = 0, $1707 = 0, $1708 = 0, $1709 = 0, $171 = 0, $1710 = 0, $1711 = 0, $1712 = 0, $1713 = 0, $1714 = 0, $1715 = 0, $1716 = 0, $1717 = 0, $1718 = 0, $1719 = 0;
 var $172 = 0, $1720 = 0, $1721 = 0, $1722 = 0, $1723 = 0, $1724 = 0, $1725 = 0, $1726 = 0, $1727 = 0, $1728 = 0, $1729 = 0, $173 = 0, $1730 = 0, $1731 = 0, $1732 = 0, $1733 = 0, $1734 = 0, $1735 = 0, $1736 = 0, $1737 = 0;
 var $1738 = 0, $1739 = 0, $174 = 0, $1740 = 0, $1741 = 0, $1742 = 0, $1743 = 0, $1744 = 0, $1745 = 0, $1746 = 0, $1747 = 0, $1748 = 0, $1749 = 0, $175 = 0, $1750 = 0, $1751 = 0, $1752 = 0, $1753 = 0, $1754 = 0, $1755 = 0;
 var $1756 = 0, $1757 = 0, $1758 = 0, $1759 = 0, $176 = 0, $1760 = 0, $1761 = 0, $1762 = 0, $1763 = 0, $1764 = 0, $1765 = 0, $1766 = 0, $1767 = 0, $1768 = 0, $1769 = 0, $177 = 0, $1770 = 0, $1771 = 0, $1772 = 0, $1773 = 0;
 var $1774 = 0, $1775 = 0, $1776 = 0, $1777 = 0, $1778 = 0, $1779 = 0, $178 = 0, $1780 = 0, $1781 = 0, $1782 = 0, $1783 = 0, $1784 = 0, $1785 = 0, $1786 = 0, $1787 = 0, $1788 = 0, $1789 = 0, $179 = 0, $1790 = 0, $1791 = 0;
 var $1792 = 0, $1793 = 0, $1794 = 0, $1795 = 0, $1796 = 0, $1797 = 0, $1798 = 0, $1799 = 0, $18 = 0, $180 = 0, $1800 = 0, $1801 = 0, $1802 = 0, $1803 = 0, $1804 = 0, $1805 = 0, $1806 = 0, $1807 = 0, $1808 = 0, $1809 = 0;
 var $181 = 0, $1810 = 0, $1811 = 0, $1812 = 0, $1813 = 0, $1814 = 0, $1815 = 0, $1816 = 0, $1817 = 0, $1818 = 0, $1819 = 0, $182 = 0, $1820 = 0, $1821 = 0, $1822 = 0, $1823 = 0, $1824 = 0, $1825 = 0, $183 = 0, $184 = 0;
 var $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0;
 var $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0;
 var $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0;
 var $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0;
 var $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0;
 var $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0;
 var $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0;
 var $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0;
 var $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0;
 var $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0;
 var $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0;
 var $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0;
 var $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0;
 var $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0;
 var $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0;
 var $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0;
 var $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0;
 var $491 = 0, $492 = 0, $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0;
 var $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $519$phi = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0;
 var $526 = 0, $527 = 0, $528 = 0, $529 = 0, $529$phi = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0;
 var $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0;
 var $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0;
 var $58 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0;
 var $598 = 0, $599 = 0, $6 = 0, $60 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0;
 var $615 = 0, $616 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0, $63 = 0, $630 = 0, $631 = 0, $632 = 0;
 var $633 = 0, $634 = 0, $635 = 0, $636 = 0, $637 = 0, $638 = 0, $639 = 0, $64 = 0, $640 = 0, $641 = 0, $642 = 0, $643 = 0, $644 = 0, $645 = 0, $646 = 0, $647 = 0, $648 = 0, $649 = 0, $65 = 0, $650 = 0;
 var $651 = 0, $652 = 0, $653 = 0, $654 = 0, $655 = 0, $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0, $661 = 0, $662 = 0, $663 = 0, $664 = 0, $665 = 0, $666 = 0, $667 = 0, $668 = 0, $669 = 0;
 var $67 = 0, $670 = 0, $671 = 0, $672 = 0, $673 = 0, $674 = 0, $675 = 0, $676 = 0, $677 = 0, $678 = 0, $679 = 0, $68 = 0, $680 = 0, $681 = 0, $682 = 0, $683 = 0, $684 = 0, $685 = 0, $686 = 0, $687 = 0;
 var $688 = 0, $689 = 0, $69 = 0, $690 = 0, $691 = 0, $692 = 0, $693 = 0, $694 = 0, $695 = 0, $696 = 0, $697 = 0, $698 = 0, $699 = 0, $7 = 0, $70 = 0, $700 = 0, $701 = 0, $702 = 0, $703 = 0, $704 = 0;
 var $705 = 0, $706 = 0, $707 = 0, $708 = 0, $709 = 0, $71 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0, $714 = 0, $715 = 0, $716 = 0, $717 = 0, $718 = 0, $719 = 0, $72 = 0, $720 = 0, $721 = 0, $722 = 0;
 var $723 = 0, $724 = 0, $725 = 0, $726 = 0, $727 = 0, $728 = 0, $729 = 0, $73 = 0, $730 = 0, $731 = 0, $732 = 0, $733 = 0, $734 = 0, $735 = 0, $736 = 0, $737 = 0, $738 = 0, $739 = 0, $74 = 0, $740 = 0;
 var $741 = 0, $742 = 0, $743 = 0, $744 = 0, $745 = 0, $746 = 0, $747 = 0, $748 = 0, $749 = 0, $75 = 0, $750 = 0, $751 = 0, $752 = 0, $753 = 0, $754 = 0, $755 = 0, $756 = 0, $757 = 0, $758 = 0, $759 = 0;
 var $76 = 0, $760 = 0, $761 = 0, $762 = 0, $763 = 0, $764 = 0, $765 = 0, $766 = 0, $767 = 0, $768 = 0, $769 = 0, $77 = 0, $770 = 0, $771 = 0, $772 = 0, $773 = 0, $774 = 0, $775 = 0, $776 = 0, $777 = 0;
 var $778 = 0, $779 = 0, $78 = 0, $780 = 0, $781 = 0, $782 = 0, $783 = 0, $784 = 0, $785 = 0, $786 = 0, $787 = 0, $788 = 0, $789 = 0, $79 = 0, $790 = 0, $791 = 0, $792 = 0, $793 = 0, $794 = 0, $795 = 0;
 var $796 = 0, $797 = 0, $798 = 0, $799 = 0, $8 = 0, $80 = 0, $800 = 0, $801 = 0, $802 = 0, $803 = 0, $804 = 0, $805 = 0, $806 = 0, $807 = 0, $808 = 0, $809 = 0, $81 = 0, $810 = 0, $811 = 0, $812 = 0;
 var $813 = 0, $814 = 0, $815 = 0, $816 = 0, $817 = 0, $818 = 0, $819 = 0, $82 = 0, $820 = 0, $821 = 0, $822 = 0, $823 = 0, $824 = 0, $825 = 0, $826 = 0, $827 = 0, $828 = 0, $829 = 0, $83 = 0, $830 = 0;
 var $831 = 0, $832 = 0, $833 = 0, $834 = 0, $835 = 0, $836 = 0, $837 = 0, $838 = 0, $839 = 0, $84 = 0, $840 = 0, $841 = 0, $842 = 0, $843 = 0, $844 = 0, $845 = 0, $846 = 0, $847 = 0, $848 = 0, $849 = 0;
 var $85 = 0, $850 = 0, $851 = 0, $852 = 0, $853 = 0, $854 = 0, $855 = 0, $856 = 0, $857 = 0, $858 = 0, $859 = 0, $86 = 0, $860 = 0, $861 = 0, $862 = 0, $863 = 0, $864 = 0, $865 = 0, $866 = 0, $867 = 0;
 var $868 = 0, $869 = 0, $87 = 0, $870 = 0, $871 = 0, $872 = 0, $873 = 0, $874 = 0, $875 = 0, $876 = 0, $877 = 0, $878 = 0, $879 = 0, $88 = 0, $880 = 0, $881 = 0, $882 = 0, $883 = 0, $884 = 0, $885 = 0;
 var $886 = 0, $887 = 0, $888 = 0, $889 = 0, $89 = 0, $890 = 0, $891 = 0, $892 = 0, $893 = 0, $894 = 0, $895 = 0, $896 = 0, $897 = 0, $898 = 0, $899 = 0, $9 = 0, $90 = 0, $900 = 0, $901 = 0, $902 = 0;
 var $903 = 0, $904 = 0, $905 = 0, $906 = 0, $907 = 0, $908 = 0, $909 = 0, $91 = 0, $910 = 0, $911 = 0, $912 = 0, $913 = 0, $914 = 0, $915 = 0, $916 = 0, $917 = 0, $918 = 0, $919 = 0, $92 = 0, $920 = 0;
 var $921 = 0, $922 = 0, $923 = 0, $924 = 0, $925 = 0, $926 = 0, $927 = 0, $928 = 0, $929 = 0, $93 = 0, $930 = 0, $931 = 0, $932 = 0, $933 = 0, $934 = 0, $935 = 0, $936 = 0, $937 = 0, $938 = 0, $939 = 0;
 var $94 = 0, $940 = 0, $941 = 0, $942 = 0, $943 = 0, $944 = 0, $945 = 0, $946 = 0, $947 = 0, $948 = 0, $949 = 0, $95 = 0, $950 = 0, $951 = 0, $952 = 0, $953 = 0, $954 = 0, $955 = 0, $956 = 0, $957 = 0;
 var $958 = 0, $959 = 0, $96 = 0, $960 = 0, $961 = 0, $962 = 0, $963 = 0, $964 = 0, $965 = 0, $966 = 0, $967 = 0, $968 = 0, $969 = 0, $97 = 0, $970 = 0, $971 = 0, $972 = 0, $973 = 0, $974 = 0, $975 = 0;
 var $976 = 0, $977 = 0, $978 = 0, $979 = 0, $98 = 0, $980 = 0, $981 = 0, $982 = 0, $983 = 0, $984 = 0, $985 = 0, $986 = 0, $987 = 0, $988 = 0, $989 = 0, $99 = 0, $990 = 0, $991 = 0, $992 = 0, $993 = 0;
 var $994 = 0, $995 = 0, $996 = 0, $997 = 0, $998 = 0, $999 = 0, $_0$0$i$i$i = 0, $_0$0$i$i$i214 = 0, $_0$0$i$i120$i = 0, $_0$0$i$i146$i = 0, $_0$0$sroa$speculated$i$i$i = 0, $_0$0$sroa$speculated$i$i$i$i$i = 0, $_0$0$sroa$speculated$i$i$i$i$i$i = 0, $_0$0$sroa$speculated$i$i$i$i$i$lcssa$i = 0, $_0$0$sroa$speculated$i$i$i$i$i130 = 0, $_0$0$sroa$speculated$i$i$i$i$i336$i = 0, $_0$0$sroa$speculated$i$i$i$i$i338$i = 0, $_0$0$sroa$speculated$i$i$i$i130$i = 0, $_0$0$sroa$speculated$i$i$i$i170$i = 0, $_0$0$sroa$speculated$i$i$i$i209$i = 0;
 var $_0$0$sroa$speculated$i$i$i$i44$i$i = 0, $_0$0$sroa$speculated$i$i$i$i5$i$i = 0, $_0$0$sroa$speculated$i$i$i$i83$i = 0, $_0$0$sroa$speculated$i$i$i$i83$i$i = 0, $_0$0$sroa$speculated$i$i$i174 = 0, $_0$0$sroa$speculated$i$i1$i = 0, $_0$0$sroa$speculated$i$i1$i124 = 0, $_0$0$sroa$speculated$i$i122$i = 0, $_0$0$sroa$speculated$i$i8$i = 0, $_0$0$sroa$speculated$i$i96$i = 0, $_0$sroa$0$0$i$i1116 = 0, $_0$sroa$0$0$i$i1130 = 0, $_0$sroa$0$0$i$i401143 = 0, $_0$sroa$0$0$i$i401155 = 0, $_0$sroa$0$1$i = 0, $_0$sroa$0$1$i206 = 0, $_0$sroa$12$0$i$i1119 = 0, $_0$sroa$12$0$i$i1133 = 0, $_0$sroa$12$0$i$i421146 = 0, $_0$sroa$12$0$i$i421158 = 0;
 var $_0$sroa$12$0$shrunk$i$i1118 = 0, $_0$sroa$12$0$shrunk$i$i1132 = 0, $_0$sroa$12$0$shrunk$i$i411145 = 0, $_0$sroa$12$0$shrunk$i$i411157 = 0, $_0$sroa$7$1$i = 0, $_0$sroa$7$1$i70 = 0, $_10$sroa$6$1$i$i$i = 0, $_10$sroa$6$1$i$i$i$i$i = 0, $_10$sroa$6$1$i$i$i$i$i$i = 0, $_10$sroa$6$1$i$i$i$i$i138 = 0, $_10$sroa$6$1$i$i$i$i13$i$i = 0, $_10$sroa$6$1$i$i$i$i138$i = 0, $_10$sroa$6$1$i$i$i$i178$i = 0, $_10$sroa$6$1$i$i$i$i217$i = 0, $_10$sroa$6$1$i$i$i$i52$i$i = 0, $_10$sroa$6$1$i$i$i$i91$i = 0, $_10$sroa$6$1$i$i$i$i91$i$i = 0, $_10$sroa$6$1$i$i$i183 = 0, $_10$sroa$6$1$i$i104$i = 0, $_10$sroa$6$1$i$i130$i = 0;
 var $_12$sroa$6$0$i$i$i = 0, $_12$sroa$6$0$i$i$i$i$i = 0, $_12$sroa$6$0$i$i$i$i$i$i = 0, $_12$sroa$6$0$i$i$i$i$i134 = 0, $_12$sroa$6$0$i$i$i$i133$i = 0, $_12$sroa$6$0$i$i$i$i173$i = 0, $_12$sroa$6$0$i$i$i$i212$i = 0, $_12$sroa$6$0$i$i$i$i47$i$i = 0, $_12$sroa$6$0$i$i$i$i8$i$i = 0, $_12$sroa$6$0$i$i$i$i86$i = 0, $_12$sroa$6$0$i$i$i$i86$i$i = 0, $_12$sroa$6$0$i$i$i178 = 0, $_12$sroa$6$0$i$i125$i = 0, $_12$sroa$6$0$i$i99$i = 0, $_12$sroa$6$1$i$i$i = 0, $_12$sroa$6$1$i$i$i$i$i = 0, $_12$sroa$6$1$i$i$i$i$i$i = 0, $_12$sroa$6$1$i$i$i$i$i143 = 0, $_12$sroa$6$1$i$i$i$i143$i = 0, $_12$sroa$6$1$i$i$i$i18$i$i = 0;
 var $_12$sroa$6$1$i$i$i$i183$i = 0, $_12$sroa$6$1$i$i$i$i222$i = 0, $_12$sroa$6$1$i$i$i$i57$i$i = 0, $_12$sroa$6$1$i$i$i$i96$i = 0, $_12$sroa$6$1$i$i$i$i96$i$i = 0, $_12$sroa$6$1$i$i$i188 = 0, $_12$sroa$6$1$i$i109$i = 0, $_12$sroa$6$1$i$i135$i = 0, $_122$i = 0, $_15$sroa$0$0$$sroa_idx$1 = 0, $_15$sroa$0$0$$sroa_idx$10 = 0, $_15$sroa$0$0$$sroa_idx$11 = 0, $_15$sroa$0$0$$sroa_idx$12 = 0, $_15$sroa$0$0$$sroa_idx$13 = 0, $_15$sroa$0$0$$sroa_idx$14 = 0, $_15$sroa$0$0$$sroa_idx$15 = 0, $_15$sroa$0$0$$sroa_idx$2 = 0, $_15$sroa$0$0$$sroa_idx$3 = 0, $_15$sroa$0$0$$sroa_idx$4 = 0, $_15$sroa$0$0$$sroa_idx$5 = 0;
 var $_15$sroa$0$0$$sroa_idx$6 = 0, $_15$sroa$0$0$$sroa_idx$7 = 0, $_15$sroa$0$0$$sroa_idx$8 = 0, $_15$sroa$0$0$$sroa_idx$9 = 0, $_15$sroa$0$0$i$i = 0, $_15$sroa$47$0$$sroa_idx8 = 0, $_15$sroa$47$0$$sroa_idx8$1 = 0, $_15$sroa$47$0$$sroa_idx8$10 = 0, $_15$sroa$47$0$$sroa_idx8$11 = 0, $_15$sroa$47$0$$sroa_idx8$12 = 0, $_15$sroa$47$0$$sroa_idx8$13 = 0, $_15$sroa$47$0$$sroa_idx8$14 = 0, $_15$sroa$47$0$$sroa_idx8$15 = 0, $_15$sroa$47$0$$sroa_idx8$2 = 0, $_15$sroa$47$0$$sroa_idx8$3 = 0, $_15$sroa$47$0$$sroa_idx8$4 = 0, $_15$sroa$47$0$$sroa_idx8$5 = 0, $_15$sroa$47$0$$sroa_idx8$6 = 0, $_15$sroa$47$0$$sroa_idx8$7 = 0, $_15$sroa$47$0$$sroa_idx8$8 = 0;
 var $_15$sroa$47$0$$sroa_idx8$9 = 0, $_15$sroa$6$0$i$i = 0, $_188$i = 0, $_20$i$i = 0, $_20$i43$i = 0, $_216$sroa$0$0$extract$trunc$i = 0, $_216$sroa$4$0$extract$shift$i = 0, $_216$sroa$4$0$extract$trunc$i = 0, $_250$sroa$0$0$extract$trunc$i = 0, $_250$sroa$4$0$extract$shift$i = 0, $_250$sroa$4$0$extract$trunc$i = 0, $_33$i$i = 0, $_33$i46$i = 0, $_38$i$i = 0, $_6$sroa$0$0$$sroa_idx$i$i$i = 0, $_6$sroa$0$0$$sroa_idx$i$i50$i = 0, $_73$i = 0, $_73$sroa$0$0$extract$trunc$i$i = 0, $_73$sroa$0$0$extract$trunc$i53$i = 0, $_73$sroa$4$0$extract$shift$i$i = 0;
 var $_73$sroa$4$0$extract$shift$i54$i = 0, $_73$sroa$4$0$extract$trunc$i$i = 0, $_73$sroa$4$0$extract$trunc$i55$i = 0, $_81$i = 0, $_88$i = 0, $align$0$i = 0, $base$i$i = 0, $borrow$024$i$i$i = 0, $borrow$024$i11$i$i = 0, $brmerge$i$i$i = 0, $brmerge$i$i$i$i = 0, $brmerge$i$i$i160 = 0, $brmerge$i$i118$i$i = 0, $brmerge$i$i120$i = 0, $brmerge$i$i16$i = 0, $brmerge$i$i166$i = 0, $brmerge$i$i205$i = 0, $brmerge$i$i40$i$i = 0, $brmerge$i$i5$i = 0, $brmerge$i$i79$i$i = 0;
 var $buf = 0, $carry$0$off063$i$i = 0, $carry$0$off063$i$i126 = 0, $carry$0$off063$i13$i = 0, $carry$021$i$i = 0, $carry$021$i$i168 = 0, $carry$021$i152$i = 0, $carry$021$i48$i = 0, $carry$021$i58$i = 0, $carry$021$i60$i = 0, $carry$021$i71$i = 0, $carry$021$i72$i = 0, $carry$021$i84$i = 0, $cond$i$i = 0, $d$0$i = 0, $d$0$i$i = 0, $d$1$i = 0, $d$1$i$i = 0, $d$2$i = 0, $d$2$i$i = 0;
 var $d$3$i = 0, $d$3$i$i = 0, $decoded$sroa$18$0$i$i$ph = 0, $decoded$sroa$21$0$i$i$ph = 0, $decoded$sroa$21$0$i$i1110 = 0, $decoded$sroa$21$0$i$i1111 = 0, $e$0$i$i = 0, $e$0$i$i47 = 0, $e$1$i$i = 0, $e$1$i$i49 = 0, $e$2$i$i = 0, $e$2$i$i51 = 0, $e$3$i$i = 0, $e$3$i$i53 = 0, $e$4$i$i = 0, $e$4$i$i55 = 0, $e$5$i$i = 0, $e$5$i$i61 = 0, $exitcond$i = 0, $extract$t = 0;
 var $extract$t$clear = 0, $extract$t1085 = 0, $extract$t1085$clear = 0, $fill$i$i = 0, $formatted = 0, $formatted$i = 0, $i$0130$i = 0, $i$0159$i = 0, $i$0337$i = 0, $i$1$i = 0, $i$1$i88 = 0, $i$2$i = 0, $iter$sroa$0$0$i$i = 0, $iter$sroa$0$0$in16$i$i = 0, $iter$sroa$0$0$in20$i$i = 0, $iter$sroa$0$0$in20$i$i169 = 0, $iter$sroa$0$0$in20$i153$i = 0, $iter$sroa$0$0$in20$i49$i = 0, $iter$sroa$0$0$in20$i59$i = 0, $iter$sroa$0$0$in20$i61$i = 0;
 var $iter$sroa$0$0$in20$i72$i = 0, $iter$sroa$0$0$in20$i73$i = 0, $iter$sroa$0$0$in20$i85$i = 0, $iter$sroa$0$0379$i = 0, $iter$sroa$0$0379$i$phi = 0, $iter$sroa$4$0$in23$i$i$i = 0, $iter$sroa$4$0$in23$i12$i$i = 0, $iter$sroa$521$057$i$i = 0, $iter$sroa$521$057$i$i$i = 0, $iter$sroa$521$057$i116$i$i = 0, $iter$sroa$521$057$i118$i = 0, $iter$sroa$521$057$i164$i = 0, $iter$sroa$521$057$i203$i = 0, $iter$sroa$521$057$i38$i$i = 0, $iter$sroa$521$057$i77$i$i = 0, $iter$sroa$526$062$i$i = 0, $iter$sroa$526$062$i$i127 = 0, $iter$sroa$526$062$i14$i = 0, $iter2$sroa$0$0$i$i = 0, $k$0$i = 0;
 var $k$0$i154 = 0, $k$2$i = 0, $k$2$i198 = 0, $left_val$i$i = 0, $left_val$i44$i = 0, $len$0$lcssa$i$i = 0, $len$017$i$i = 0, $len$0260$i = 0, $len$2$i$i$i = 0, $len$3$i = 0, $limit$0$i = 0, $mant$i = 0, $mant$i99 = 0, $mantissa$0$i$i$i$i = 0, $mantissa$0$i$i$i$i17 = 0, $minus$i = 0, $n$017$i756$i = 0, $noborrow$0$off058$i$i = 0, $noborrow$0$off058$i$i$i = 0, $noborrow$0$off058$i115$i$i = 0;
 var $noborrow$0$off058$i117$i = 0, $noborrow$0$off058$i163$i = 0, $noborrow$0$off058$i202$i = 0, $noborrow$0$off058$i37$i$i = 0, $noborrow$0$off058$i76$i$i = 0, $not$$i = 0, $not$$sink$i$i$i$i$i$i$i = 0, $not$$sink$i$i$i$i$i$i114$i = 0, $not$$sink$i$i$i$i$i$i140$i = 0, $not$272$i = 0, $not$or$cond$i = 0, $not$switch$i$i = 0, $not$switch$i$i21 = 0, $not$switch$i27$i1117 = 0, $not$switch$i27$i1131 = 0, $not$switch$i34$i1144 = 0, $not$switch$i34$i1156 = 0, $not$switch4$i$i = 0, $not$switch4$i$i$i = 0, $not$switch4$i63$i$i = 0;
 var $not$switch4$i69$i$i = 0, $or$cond = 0, $or$cond$i$i = 0, $or$cond$i$i96 = 0, $or$cond$i197 = 0, $or$cond$i58$i = 0, $or$cond$i74$i = 0, $or$cond1098 = 0, $or$cond1101 = 0, $or$cond1104 = 0, $or$cond21$i$i = 0, $or$cond21$i68$i = 0, $or$cond24$i$i = 0, $or$cond24$i64$i = 0, $other1$sroa$4$0$i$i$i = 0, $other1$sroa$4$0$i$i$i$i$i = 0, $other1$sroa$4$0$i$i$i$i$i$i = 0, $other1$sroa$4$0$i$i$i$i$i135 = 0, $other1$sroa$4$0$i$i$i$i134$i = 0, $other1$sroa$4$0$i$i$i$i174$i = 0;
 var $other1$sroa$4$0$i$i$i$i213$i = 0, $other1$sroa$4$0$i$i$i$i48$i$i = 0, $other1$sroa$4$0$i$i$i$i87$i = 0, $other1$sroa$4$0$i$i$i$i87$i$i = 0, $other1$sroa$4$0$i$i$i$i9$i$i = 0, $other1$sroa$4$0$i$i$i179 = 0, $other1$sroa$4$0$i$i100$i = 0, $other1$sroa$4$0$i$i126$i = 0, $other1$sroa$4$1$i$i$i = 0, $other1$sroa$4$1$i$i$i$i$i = 0, $other1$sroa$4$1$i$i$i$i$i$i = 0, $other1$sroa$4$1$i$i$i$i$i144 = 0, $other1$sroa$4$1$i$i$i$i144$i = 0, $other1$sroa$4$1$i$i$i$i184$i = 0, $other1$sroa$4$1$i$i$i$i19$i$i = 0, $other1$sroa$4$1$i$i$i$i223$i = 0, $other1$sroa$4$1$i$i$i$i58$i$i = 0, $other1$sroa$4$1$i$i$i$i97$i = 0, $other1$sroa$4$1$i$i$i$i97$i$i = 0, $other1$sroa$4$1$i$i$i189 = 0;
 var $other1$sroa$4$1$i$i110$i = 0, $other1$sroa$4$1$i$i136$i = 0, $parts = 0, $plus$i = 0, $remainder$0132$i = 0, $remainder$0157$i = 0, $ret$sroa$0$0$i = 0, $right_val$i$i = 0, $right_val$i45$i = 0, $scale$i = 0, $scale$i100 = 0, $scale2$i = 0, $scale2$i101 = 0, $scale4$i = 0, $scale4$i102 = 0, $scale8$i = 0, $scale8$i103 = 0, $self$sroa$4$0$i$i$i = 0, $self$sroa$4$0$i$i$i$i$i = 0, $self$sroa$4$0$i$i$i$i$i$i = 0;
 var $self$sroa$4$0$i$i$i$i$i136 = 0, $self$sroa$4$0$i$i$i$i10$i$i = 0, $self$sroa$4$0$i$i$i$i135$i = 0, $self$sroa$4$0$i$i$i$i175$i = 0, $self$sroa$4$0$i$i$i$i214$i = 0, $self$sroa$4$0$i$i$i$i49$i$i = 0, $self$sroa$4$0$i$i$i$i88$i = 0, $self$sroa$4$0$i$i$i$i88$i$i = 0, $self$sroa$4$0$i$i$i180 = 0, $self$sroa$4$0$i$i101$i = 0, $self$sroa$4$0$i$i127$i = 0, $self$sroa$4$1$i$i$i = 0, $self$sroa$4$1$i$i$i$i$i = 0, $self$sroa$4$1$i$i$i$i$i$i = 0, $self$sroa$4$1$i$i$i$i$i139 = 0, $self$sroa$4$1$i$i$i$i139$i = 0, $self$sroa$4$1$i$i$i$i14$i$i = 0, $self$sroa$4$1$i$i$i$i179$i = 0, $self$sroa$4$1$i$i$i$i218$i = 0, $self$sroa$4$1$i$i$i$i53$i$i = 0;
 var $self$sroa$4$1$i$i$i$i92$i = 0, $self$sroa$4$1$i$i$i$i92$i$i = 0, $self$sroa$4$1$i$i$i184 = 0, $self$sroa$4$1$i$i105$i = 0, $self$sroa$4$1$i$i131$i = 0, $switch = 0, $switch$i = 0, $switch$i$i$i$i$i = 0, $switch$i$i$i$i$i$i = 0, $switch$i$i$i$i$i146 = 0, $switch$i$i$i$i146$i = 0, $switch$i$i$i$i186$i = 0, $switch$i$i$i$i21$i$i = 0, $switch$i$i$i$i225$i = 0, $switch$i$i$i$i60$i$i = 0, $switch$i$i$i$i99$i = 0, $switch$i$i$i$i99$i$i = 0, $switch$i$i$i191 = 0, $switch$i$i$i35 = 0, $switch$i$i1113 = 0;
 var $switch$i$i112$i = 0, $switch$i$i1127 = 0, $switch$i$i138$i = 0, $switch$i$i371140 = 0, $switch$i$i371152 = 0, $switch$i$i95 = 0, $switch$i200 = 0, $switch$i56$i = 0, $switch$split1072D = 0, $switch$split2D = 0, $switch1086 = 0, $switch1092 = 0, $switch1161 = 0, $switch1162 = 0, $switch6$i = 0, $sz$0$i$i = 0, $sz$0$i$i173 = 0, $sz$0$i20$i = 0, $sz$0$i5$i = 0, $sz$0$i53$i = 0;
 var $sz$0$i63$i = 0, $sz$0$i65$i = 0, $sz$0$i76$i = 0, $sz$0$i77$i = 0, $sz$0$i8$i = 0, $sz$0$i89$i = 0, $sz$011$i$i = 0, $sz$011$i$i113 = 0, $sz$011$i37$i = 0, $ten_kappa$0131$i = 0, $ten_kappa$0158$i = 0, $tmp_ret$i$sroa$5$0 = 0, $tmp_ret$i16$sroa$0$1 = 0, $tmp_ret2$sroa$0$0$i = 0, $tmp_ret2$sroa$11$0$i = 0, $tmp_ret4$sroa$0$0$i = 0, $tmp_ret4$sroa$11$0$i = 0, $trunc$i$i$i = 0, $trunc$i$i$i$clear = 0, $trunc$i$i$i19 = 0;
 var $trunc$i$i$i19$clear = 0, $trunc$i$i$i208 = 0, $trunc$i$i$i208$clear = 0, $width$0$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 4064|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(4064|0);
 $fill$i$i = sp + 3032|0;
 $formatted$i = sp + 2840|0;
 $mant$i99 = sp + 2672|0;
 $scale$i100 = sp + 2504|0;
 $_88$i = sp + 2336|0;
 $scale2$i101 = sp + 2168|0;
 $scale4$i102 = sp + 2000|0;
 $scale8$i103 = sp + 1832|0;
 $base$i$i = sp + 2872|0;
 $mant$i = sp + 1664|0;
 $minus$i = sp + 1496|0;
 $plus$i = sp + 1328|0;
 $scale$i = sp + 1160|0;
 $_122$i = sp + 992|0;
 $scale2$i = sp + 824|0;
 $scale4$i = sp + 656|0;
 $scale8$i = sp + 488|0;
 $_188$i = sp + 320|0;
 $_20$i43$i = sp + 312|0;
 $left_val$i44$i = sp + 2868|0;
 $right_val$i45$i = sp + 2864|0;
 $_33$i46$i = sp + 288|0;
 $_20$i$i = sp + 280|0;
 $left_val$i$i = sp + 2860|0;
 $right_val$i$i = sp + 2856|0;
 $_33$i$i = sp + 256|0;
 $_38$i$i = sp + 240|0;
 $_73$i = sp + 224|0;
 $_81$i = sp + 208|0;
 $buf = sp + 3040|0;
 $parts = sp + 16|0;
 $formatted = sp;
 $2 = HEAP32[$0>>2]|0;
 $3 = $2 & 1;
 _memset(($buf|0),0,1024)|0;
 $4 = $3&255;
 HEAP16[$parts>>1] = 0;
 $_15$sroa$47$0$$sroa_idx8 = ((($parts)) + 4|0);
 HEAP32[$_15$sroa$47$0$$sroa_idx8>>2] = 0;
 $_15$sroa$0$0$$sroa_idx$1 = ((($parts)) + 12|0);
 HEAP16[$_15$sroa$0$0$$sroa_idx$1>>1] = 0;
 $_15$sroa$47$0$$sroa_idx8$1 = ((($parts)) + 16|0);
 HEAP32[$_15$sroa$47$0$$sroa_idx8$1>>2] = 0;
 $_15$sroa$0$0$$sroa_idx$2 = ((($parts)) + 24|0);
 HEAP16[$_15$sroa$0$0$$sroa_idx$2>>1] = 0;
 $_15$sroa$47$0$$sroa_idx8$2 = ((($parts)) + 28|0);
 HEAP32[$_15$sroa$47$0$$sroa_idx8$2>>2] = 0;
 $_15$sroa$0$0$$sroa_idx$3 = ((($parts)) + 36|0);
 HEAP16[$_15$sroa$0$0$$sroa_idx$3>>1] = 0;
 $_15$sroa$47$0$$sroa_idx8$3 = ((($parts)) + 40|0);
 HEAP32[$_15$sroa$47$0$$sroa_idx8$3>>2] = 0;
 $_15$sroa$0$0$$sroa_idx$4 = ((($parts)) + 48|0);
 HEAP16[$_15$sroa$0$0$$sroa_idx$4>>1] = 0;
 $_15$sroa$47$0$$sroa_idx8$4 = ((($parts)) + 52|0);
 HEAP32[$_15$sroa$47$0$$sroa_idx8$4>>2] = 0;
 $_15$sroa$0$0$$sroa_idx$5 = ((($parts)) + 60|0);
 HEAP16[$_15$sroa$0$0$$sroa_idx$5>>1] = 0;
 $_15$sroa$47$0$$sroa_idx8$5 = ((($parts)) + 64|0);
 HEAP32[$_15$sroa$47$0$$sroa_idx8$5>>2] = 0;
 $_15$sroa$0$0$$sroa_idx$6 = ((($parts)) + 72|0);
 HEAP16[$_15$sroa$0$0$$sroa_idx$6>>1] = 0;
 $_15$sroa$47$0$$sroa_idx8$6 = ((($parts)) + 76|0);
 HEAP32[$_15$sroa$47$0$$sroa_idx8$6>>2] = 0;
 $_15$sroa$0$0$$sroa_idx$7 = ((($parts)) + 84|0);
 HEAP16[$_15$sroa$0$0$$sroa_idx$7>>1] = 0;
 $_15$sroa$47$0$$sroa_idx8$7 = ((($parts)) + 88|0);
 HEAP32[$_15$sroa$47$0$$sroa_idx8$7>>2] = 0;
 $_15$sroa$0$0$$sroa_idx$8 = ((($parts)) + 96|0);
 HEAP16[$_15$sroa$0$0$$sroa_idx$8>>1] = 0;
 $_15$sroa$47$0$$sroa_idx8$8 = ((($parts)) + 100|0);
 HEAP32[$_15$sroa$47$0$$sroa_idx8$8>>2] = 0;
 $_15$sroa$0$0$$sroa_idx$9 = ((($parts)) + 108|0);
 HEAP16[$_15$sroa$0$0$$sroa_idx$9>>1] = 0;
 $_15$sroa$47$0$$sroa_idx8$9 = ((($parts)) + 112|0);
 HEAP32[$_15$sroa$47$0$$sroa_idx8$9>>2] = 0;
 $_15$sroa$0$0$$sroa_idx$10 = ((($parts)) + 120|0);
 HEAP16[$_15$sroa$0$0$$sroa_idx$10>>1] = 0;
 $_15$sroa$47$0$$sroa_idx8$10 = ((($parts)) + 124|0);
 HEAP32[$_15$sroa$47$0$$sroa_idx8$10>>2] = 0;
 $_15$sroa$0$0$$sroa_idx$11 = ((($parts)) + 132|0);
 HEAP16[$_15$sroa$0$0$$sroa_idx$11>>1] = 0;
 $_15$sroa$47$0$$sroa_idx8$11 = ((($parts)) + 136|0);
 HEAP32[$_15$sroa$47$0$$sroa_idx8$11>>2] = 0;
 $_15$sroa$0$0$$sroa_idx$12 = ((($parts)) + 144|0);
 HEAP16[$_15$sroa$0$0$$sroa_idx$12>>1] = 0;
 $_15$sroa$47$0$$sroa_idx8$12 = ((($parts)) + 148|0);
 HEAP32[$_15$sroa$47$0$$sroa_idx8$12>>2] = 0;
 $_15$sroa$0$0$$sroa_idx$13 = ((($parts)) + 156|0);
 HEAP16[$_15$sroa$0$0$$sroa_idx$13>>1] = 0;
 $_15$sroa$47$0$$sroa_idx8$13 = ((($parts)) + 160|0);
 HEAP32[$_15$sroa$47$0$$sroa_idx8$13>>2] = 0;
 $_15$sroa$0$0$$sroa_idx$14 = ((($parts)) + 168|0);
 HEAP16[$_15$sroa$0$0$$sroa_idx$14>>1] = 0;
 $_15$sroa$47$0$$sroa_idx8$14 = ((($parts)) + 172|0);
 HEAP32[$_15$sroa$47$0$$sroa_idx8$14>>2] = 0;
 $_15$sroa$0$0$$sroa_idx$15 = ((($parts)) + 180|0);
 HEAP16[$_15$sroa$0$0$$sroa_idx$15>>1] = 0;
 $_15$sroa$47$0$$sroa_idx8$15 = ((($parts)) + 184|0);
 HEAP32[$_15$sroa$47$0$$sroa_idx8$15>>2] = 0;
 $5 = ((($0)) + 20|0);
 $6 = HEAP32[$5>>2]|0;
 $switch = ($6|0)==(1);
 L1: do {
  if ($switch) {
   $931 = ((($0)) + 24|0);
   $932 = HEAP32[$931>>2]|0;
   $933 = HEAP32[$1>>2]|0;
   $934 = $933 >>> 23;
   $935 = $934 & 255;
   $936 = $935&65535;
   $937 = ($936<<16>>16)==(0);
   $938 = $933 & 8388607;
   $939 = $938 << 1;
   $940 = $938 | 8388608;
   $mantissa$0$i$i$i$i17 = $937 ? $939 : $940;
   $941 = $933 & 2147483647;
   $942 = ($941|0)==(0);
   if ($942) {
    $switch1092 = ($4<<24>>24)==(0);
    $$1093 = $switch1092 ? 27292 : 23854;
    $950 = ($932|0)==(0);
    HEAP16[$parts>>1] = 2;
    $951 = ((($parts)) + 4|0);
    if ($950) {
     HEAP32[$951>>2] = 24524;
     $978 = ((($parts)) + 8|0);
     HEAP32[$978>>2] = 1;
     HEAP32[$formatted>>2] = $$1093;
     $979 = ((($formatted)) + 4|0);
     HEAP32[$979>>2] = $3;
     $980 = ((($formatted)) + 8|0);
     HEAP32[$980>>2] = $parts;
     $981 = ((($formatted)) + 12|0);
     HEAP32[$981>>2] = 1;
     $982 = $$1093;
     $983 = $parts;
     $1711 = $982;$1713 = $3;$1715 = $983;$1717 = 1;
     break;
    } else {
     HEAP32[$951>>2] = 23819;
     $972 = ((($parts)) + 8|0);
     HEAP32[$972>>2] = 2;
     HEAP16[$_15$sroa$0$0$$sroa_idx$1>>1] = 0;
     HEAP32[$_15$sroa$47$0$$sroa_idx8$1>>2] = $932;
     HEAP32[$formatted>>2] = $$1093;
     $973 = ((($formatted)) + 4|0);
     HEAP32[$973>>2] = $3;
     $974 = ((($formatted)) + 8|0);
     HEAP32[$974>>2] = $parts;
     $975 = ((($formatted)) + 12|0);
     HEAP32[$975>>2] = 2;
     $976 = $$1093;
     $977 = $parts;
     $1711 = $976;$1713 = $3;$1715 = $977;$1717 = 2;
     break;
    }
   }
   $943 = (($936) + -150)<<16>>16;
   $trunc$i$i$i19 = $933 & 2139095040;
   $trunc$i$i$i19$clear = $trunc$i$i$i19 & 2147483647;
   $switch$split1072D = ($trunc$i$i$i19$clear|0)<(2139095040);
   L9: do {
    if ($switch$split1072D) {
     switch ($trunc$i$i$i19$clear|0) {
     case 0:  {
      $$ph = $943;$1316 = 1;$1318 = 0;$987 = $mantissa$0$i$i$i$i17;$989 = 0;
      break;
     }
     default: {
      label = 289;
     }
     }
    } else {
     switch ($trunc$i$i$i19$clear|0) {
     case 2139095040:  {
      break;
     }
     default: {
      label = 289;
      break L9;
     }
     }
     $not$switch$i$i21 = ($938|0)==(0);
     $extract$t1085 = $not$switch$i$i21&1;
     $949 = ($933|0)<(0);
     $extract$t1085$clear = $extract$t1085 & 3;
     $switch1162 = ($extract$t1085$clear&255)<(1);
     if ($switch1162) {
      HEAP16[$parts>>1] = 2;
      $959 = ((($parts)) + 4|0);
      HEAP32[$959>>2] = 24518;
      $960 = ((($parts)) + 8|0);
      HEAP32[$960>>2] = 3;
      HEAP32[$formatted>>2] = 27292;
      $961 = ((($formatted)) + 4|0);
      HEAP32[$961>>2] = 0;
      $962 = ((($formatted)) + 8|0);
      HEAP32[$962>>2] = $parts;
      $963 = ((($formatted)) + 12|0);
      HEAP32[$963>>2] = 1;
      $964 = $parts;
      $1711 = (27292);$1713 = 0;$1715 = $964;$1717 = 1;
      break L1;
     } else {
      $switch$i$i371152 = ($4<<24>>24)!=(1);
      $$19$i$i381153 = $949 ? 23853 : 27292;
      $$21$i$i391154 = $949 ? 23853 : 23854;
      $_0$sroa$0$0$i$i401155 = $switch$i$i371152 ? $$19$i$i381153 : $$21$i$i391154;
      $not$switch$i34$i1156 = $switch$i$i371152 ^ 1;
      $_0$sroa$12$0$shrunk$i$i411157 = $949 | $not$switch$i34$i1156;
      $_0$sroa$12$0$i$i421158 = $_0$sroa$12$0$shrunk$i$i411157&1;
      HEAP16[$parts>>1] = 2;
      $965 = ((($parts)) + 4|0);
      HEAP32[$965>>2] = 24521;
      $966 = ((($parts)) + 8|0);
      HEAP32[$966>>2] = 3;
      HEAP32[$formatted>>2] = $_0$sroa$0$0$i$i401155;
      $967 = ((($formatted)) + 4|0);
      HEAP32[$967>>2] = $_0$sroa$12$0$i$i421158;
      $968 = ((($formatted)) + 8|0);
      HEAP32[$968>>2] = $parts;
      $969 = ((($formatted)) + 12|0);
      HEAP32[$969>>2] = 1;
      $970 = $_0$sroa$0$0$i$i401155;
      $971 = $parts;
      $1711 = $970;$1713 = $_0$sroa$12$0$i$i421158;$1715 = $971;$1717 = 1;
      break L1;
     }
    }
   } while(0);
   do {
    if ((label|0) == 289) {
     $944 = ($mantissa$0$i$i$i$i17|0)==(8388608);
     if ($944) {
      $945 = (($936) + -152)<<16>>16;
      $$ph = $945;$1316 = 2;$1318 = 0;$987 = 33554432;$989 = 0;
      break;
     } else {
      $946 = (_bitshift64Shl(($mantissa$0$i$i$i$i17|0),0,1)|0);
      $947 = tempRet0;
      $948 = (($936) + -151)<<16>>16;
      $$ph = $948;$1316 = 1;$1318 = 0;$987 = $946;$989 = $947;
      break;
     }
    }
   } while(0);
   $952 = ($933|0)<(0);
   $switch$i$i371140 = ($4<<24>>24)!=(1);
   $$19$i$i381141 = $952 ? 23853 : 27292;
   $$21$i$i391142 = $952 ? 23853 : 23854;
   $_0$sroa$0$0$i$i401143 = $switch$i$i371140 ? $$19$i$i381141 : $$21$i$i391142;
   $not$switch$i34$i1144 = $switch$i$i371140 ^ 1;
   $_0$sroa$12$0$shrunk$i$i411145 = $952 | $not$switch$i34$i1144;
   $_0$sroa$12$0$i$i421146 = $_0$sroa$12$0$shrunk$i$i411145&1;
   $953 = ($$ph<<16>>16)<(0);
   $$$i4$i = $953 ? -12 : 5;
   $954 = $$ph << 16 >> 16;
   $955 = Math_imul($$$i4$i, $954)|0;
   $956 = $955 >>> 4;
   $957 = (($956) + 21)|0;
   $958 = ($957>>>0)>(1024);
   if ($958) {
    __ZN4core9panicking5panic17ha7507e8e32961bfeE(6456);
    // unreachable;
   }
   $984 = ($932>>>0)<(32768);
   $985 = $932&65535;
   $986 = (0 - ($985))<<16>>16;
   $limit$0$i = $984 ? $986 : -32768;
   $988 = ($987|0)==(0);
   $990 = ($989|0)==(0);
   $991 = $988 & $990;
   if ($991) {
    __ZN4core9panicking5panic17ha7507e8e32961bfeE(7120);
    // unreachable;
   }
   $992 = ($989>>>0)>(536870911);
   $993 = ($987>>>0)>(4294967295);
   $994 = ($989|0)==(536870911);
   $995 = $994 & $993;
   $996 = $992 | $995;
   if ($996) {
    __ZN4core9panicking5panic17ha7507e8e32961bfeE(7140);
    // unreachable;
   }
   $997 = ($989>>>0)<(1);
   $998 = ($987>>>0)<(0);
   $999 = ($989|0)==(1);
   $1000 = $999 & $998;
   $1001 = $997 | $1000;
   $1002 = (($$ph) + -32)<<16>>16;
   $1003 = $1001 ? 0 : $987;
   $1004 = $1001 ? $987 : $989;
   $e$0$i$i47 = $1001 ? $1002 : $$ph;
   $1005 = ($1004>>>0)<(65536);
   $1006 = ($1003>>>0)<(0);
   $1007 = ($1004|0)==(65536);
   $1008 = $1007 & $1006;
   $1009 = $1005 | $1008;
   $1010 = (_bitshift64Shl(($1003|0),($1004|0),16)|0);
   $1011 = tempRet0;
   $1012 = (($e$0$i$i47) + -16)<<16>>16;
   $1013 = $1009 ? $1010 : $1003;
   $1014 = $1009 ? $1011 : $1004;
   $e$1$i$i49 = $1009 ? $1012 : $e$0$i$i47;
   $1015 = ($1014>>>0)<(16777216);
   $1016 = ($1013>>>0)<(0);
   $1017 = ($1014|0)==(16777216);
   $1018 = $1017 & $1016;
   $1019 = $1015 | $1018;
   $1020 = (_bitshift64Shl(($1013|0),($1014|0),8)|0);
   $1021 = tempRet0;
   $1022 = (($e$1$i$i49) + -8)<<16>>16;
   $1023 = $1019 ? $1020 : $1013;
   $1024 = $1019 ? $1021 : $1014;
   $e$2$i$i51 = $1019 ? $1022 : $e$1$i$i49;
   $1025 = ($1024>>>0)<(268435456);
   $1026 = ($1023>>>0)<(0);
   $1027 = ($1024|0)==(268435456);
   $1028 = $1027 & $1026;
   $1029 = $1025 | $1028;
   $1030 = (_bitshift64Shl(($1023|0),($1024|0),4)|0);
   $1031 = tempRet0;
   $1032 = (($e$2$i$i51) + -4)<<16>>16;
   $1033 = $1029 ? $1030 : $1023;
   $1034 = $1029 ? $1031 : $1024;
   $e$3$i$i53 = $1029 ? $1032 : $e$2$i$i51;
   $1035 = ($1034>>>0)<(1073741824);
   $1036 = ($1033>>>0)<(0);
   $1037 = ($1034|0)==(1073741824);
   $1038 = $1037 & $1036;
   $1039 = $1035 | $1038;
   $1040 = (_bitshift64Shl(($1033|0),($1034|0),2)|0);
   $1041 = tempRet0;
   $1042 = (($e$3$i$i53) + -2)<<16>>16;
   $1043 = $1039 ? $1040 : $1033;
   $1044 = $1039 ? $1041 : $1034;
   $e$4$i$i55 = $1039 ? $1042 : $e$3$i$i53;
   $1045 = (_bitshift64Lshr(($1043|0),($1044|0),63)|0);
   $1046 = tempRet0;
   $1047 = $1045 ^ 1;
   $1048 = (_bitshift64Shl(($1043|0),($1044|0),($1047|0))|0);
   $1049 = tempRet0;
   $1050 = (_bitshift64Ashr(($1043|0),($1044|0),63)|0);
   $1051 = tempRet0;
   $1052 = $1050&65535;
   $$not$i$i60 = $1052 ^ -1;
   $e$5$i$i61 = (($e$4$i$i55) + ($$not$i$i60))<<16>>16;
   $1053 = (-96 - ($e$5$i$i61))<<16>>16;
   $1054 = $1053 << 16 >> 16;
   $1055 = ($1054*80)|0;
   $1056 = (($1055) + 86960)|0;
   $1057 = (($1056|0) / 2126)&-1;
   $1058 = ($1057>>>0)<(81);
   if (!($1058)) {
    __ZN4core9panicking18panic_bounds_check17hd14a5808e41829e9E(23424,120,131,$1057,81);
    // unreachable;
   }
   $1059 = (3672 + ($1057<<4)|0);
   $1060 = $1059;
   $1061 = $1060;
   $1062 = HEAP32[$1061>>2]|0;
   $1063 = (($1060) + 4)|0;
   $1064 = $1063;
   $1065 = HEAP32[$1064>>2]|0;
   $1066 = (((3672 + ($1057<<4)|0)) + 8|0);
   $1067 = HEAP16[$1066>>1]|0;
   $1068 = (((3672 + ($1057<<4)|0)) + 10|0);
   $1069 = HEAP16[$1068>>1]|0;
   $1070 = (___muldi3(($1065|0),0,($1049|0),0)|0);
   $1071 = tempRet0;
   $1072 = (___muldi3(($1065|0),0,($1048|0),0)|0);
   $1073 = tempRet0;
   $1074 = (___muldi3(($1062|0),0,($1049|0),0)|0);
   $1075 = tempRet0;
   (___muldi3(($1062|0),0,($1048|0),0)|0);
   $1076 = tempRet0;
   $1077 = (_i64Add(($1074|0),0,-2147483648,0)|0);
   $1078 = tempRet0;
   $1079 = (_i64Add(($1077|0),($1078|0),($1076|0),0)|0);
   $1080 = tempRet0;
   (_i64Add(($1079|0),($1080|0),($1072|0),0)|0);
   $1081 = tempRet0;
   $1082 = (_i64Add(($1075|0),0,($1070|0),($1071|0))|0);
   $1083 = tempRet0;
   $1084 = (_i64Add(($1082|0),($1083|0),($1073|0),0)|0);
   $1085 = tempRet0;
   $1086 = (_i64Add(($1084|0),($1085|0),($1081|0),0)|0);
   $1087 = tempRet0;
   $1088 = (($e$5$i$i61) + 64)<<16>>16;
   $1089 = (($1088) + ($1067))<<16>>16;
   $1090 = (0 - ($1089))<<16>>16;
   $1091 = $1090 << 16 >> 16;
   $1092 = $1091 & 63;
   $1093 = (_bitshift64Lshr(($1086|0),($1087|0),($1092|0))|0);
   $1094 = tempRet0;
   $1095 = (_bitshift64Shl(1,0,($1092|0))|0);
   $1096 = tempRet0;
   $1097 = (_i64Add(($1095|0),($1096|0),-1,-1)|0);
   $1098 = tempRet0;
   $1099 = $1086 & $1097;
   $1100 = $1087 & $1098;
   $1101 = ($1093>>>0)<(10000);
   do {
    if ($1101) {
     $1102 = ($1093>>>0)<(100);
     if ($1102) {
      $1104 = ($1093>>>0)<(10);
      $$$i65 = $1104 ? 1 : 10;
      $1105 = $1104&1;
      $$103$i = $1105 ^ 1;
      $tmp_ret2$sroa$0$0$i = $$103$i;$tmp_ret2$sroa$11$0$i = $$$i65;
      break;
     } else {
      $1106 = ($1093>>>0)<(1000);
      $$104$i = $1106 ? 100 : 1000;
      $$105$i = $1106 ? 2 : 3;
      $tmp_ret2$sroa$0$0$i = $$105$i;$tmp_ret2$sroa$11$0$i = $$104$i;
      break;
     }
    } else {
     $1103 = ($1093>>>0)<(1000000);
     if ($1103) {
      $1107 = ($1093>>>0)<(100000);
      $$106$i = $1107 ? 10000 : 100000;
      $$107$i = $1107 ? 4 : 5;
      $tmp_ret2$sroa$0$0$i = $$107$i;$tmp_ret2$sroa$11$0$i = $$106$i;
      break;
     }
     $1108 = ($1093>>>0)<(100000000);
     if ($1108) {
      $1109 = ($1093>>>0)<(10000000);
      $$108$i = $1109 ? 1000000 : 10000000;
      $$109$i = $1109 ? 6 : 7;
      $tmp_ret2$sroa$0$0$i = $$109$i;$tmp_ret2$sroa$11$0$i = $$108$i;
      break;
     } else {
      $1110 = ($1093>>>0)<(1000000000);
      $$110$i = $1110 ? 100000000 : 1000000000;
      $$111$i = $1110 ? 8 : 9;
      $tmp_ret2$sroa$0$0$i = $$111$i;$tmp_ret2$sroa$11$0$i = $$110$i;
      break;
     }
    }
   } while(0);
   $1111 = $tmp_ret2$sroa$0$0$i&255;
   $1112 = (($1111) - ($1069))<<16>>16;
   $1113 = (($1112) + 1)<<16>>16;
   $1114 = ($1113<<16>>16)>($limit$0$i<<16>>16);
   L47: do {
    if ($1114) {
     $1115 = $1113 << 16 >> 16;
     $1116 = $limit$0$i << 16 >> 16;
     $1117 = (($1115) - ($1116))|0;
     $1118 = ($1117>>>0)<($957>>>0);
     $1119 = (($1113) - ($limit$0$i))<<16>>16;
     $1120 = $1119 << 16 >> 16;
     $$112$i = $1118 ? $1120 : $957;
     $1121 = $tmp_ret2$sroa$0$0$i&255;
     $i$0130$i = 0;$remainder$0132$i = $1093;$ten_kappa$0131$i = $tmp_ret2$sroa$11$0$i;
     while(1) {
      $1172 = (($remainder$0132$i>>>0) % ($ten_kappa$0131$i>>>0))&-1;
      $1173 = ($i$0130$i>>>0)<($957>>>0);
      if (!($1173)) {
       label = 349;
       break;
      }
      $1174 = (($remainder$0132$i>>>0) / ($ten_kappa$0131$i>>>0))&-1;
      $1175 = $1174&255;
      $1176 = (($buf) + ($i$0130$i)|0);
      $1177 = (($1175) + 48)<<24>>24;
      HEAP8[$1176>>0] = $1177;
      $1178 = (($i$0130$i) + 1)|0;
      $1179 = ($1178|0)==($$112$i|0);
      if ($1179) {
       label = 326;
       break;
      }
      $1236 = ($1178>>>0)>($1121>>>0);
      if ($1236) {
       label = 336;
       break;
      }
      $1237 = (($ten_kappa$0131$i>>>0) / 10)&-1;
      $1238 = ($ten_kappa$0131$i>>>0)<(10);
      if ($1238) {
       label = 348;
       break;
      } else {
       $i$0130$i = $1178;$remainder$0132$i = $1172;$ten_kappa$0131$i = $1237;
      }
     }
     L54: do {
      if ((label|0) == 326) {
       $1180 = (_bitshift64Shl(($1172|0),0,($1092|0))|0);
       $1181 = tempRet0;
       $1182 = (_i64Add(($1180|0),($1181|0),($1099|0),($1100|0))|0);
       $1183 = tempRet0;
       $1184 = (_bitshift64Shl(($ten_kappa$0131$i|0),0,($1092|0))|0);
       $1185 = tempRet0;
       $1186 = ($1185>>>0)>($1096>>>0);
       $1187 = ($1184>>>0)>($1095>>>0);
       $1188 = ($1185|0)==($1096|0);
       $1189 = $1188 & $1187;
       $1190 = $1186 | $1189;
       $1191 = (_i64Subtract(($1184|0),($1185|0),($1095|0),($1096|0))|0);
       $1192 = tempRet0;
       $1193 = ($1192>>>0)>($1096>>>0);
       $1194 = ($1191>>>0)>($1095>>>0);
       $1195 = ($1192|0)==($1096|0);
       $1196 = $1195 & $1194;
       $1197 = $1193 | $1196;
       $or$cond1101 = $1190 & $1197;
       if ($or$cond1101) {
        $1198 = (_i64Subtract(($1184|0),($1185|0),($1182|0),($1183|0))|0);
        $1199 = tempRet0;
        $1200 = ($1199>>>0)>($1183>>>0);
        $1201 = ($1198>>>0)>($1182>>>0);
        $1202 = ($1199|0)==($1183|0);
        $1203 = $1202 & $1201;
        $1204 = $1200 | $1203;
        if ($1204) {
         $1210 = (_bitshift64Shl(($1182|0),($1183|0),1)|0);
         $1211 = tempRet0;
         $1212 = (_i64Subtract(($1184|0),($1185|0),($1210|0),($1211|0))|0);
         $1213 = tempRet0;
         $1214 = (_bitshift64Shl(($1095|0),($1096|0),1)|0);
         $1215 = tempRet0;
         $1216 = ($1213>>>0)<($1215>>>0);
         $1217 = ($1212>>>0)<($1214>>>0);
         $1218 = ($1213|0)==($1215|0);
         $1219 = $1218 & $1217;
         $1220 = $1216 | $1219;
         if (!($1220)) {
          $1654 = $1113;$tmp_ret$i16$sroa$0$1 = $$112$i;
          break L47;
         }
        }
        $1205 = ($1183>>>0)>($1096>>>0);
        $1206 = ($1182>>>0)>($1095>>>0);
        $1207 = ($1183|0)==($1096|0);
        $1208 = $1207 & $1206;
        $1209 = $1205 | $1208;
        if ($1209) {
         $1221 = (_i64Subtract(($1182|0),($1183|0),($1095|0),($1096|0))|0);
         $1222 = tempRet0;
         $1223 = (_i64Subtract(($1184|0),($1185|0),($1221|0),($1222|0))|0);
         $1224 = tempRet0;
         $1225 = ($1224>>>0)>($1222>>>0);
         $1226 = ($1223>>>0)>($1221>>>0);
         $1227 = ($1224|0)==($1222|0);
         $1228 = $1227 & $1226;
         $1229 = $1225 | $1228;
         if (!($1229)) {
          $1230 = (__ZN4core3num7flt2dec8round_up17h7add2f9e6cce7cd7E($buf,$957,$$112$i)|0);
          $_73$sroa$0$0$extract$trunc$i53$i = $1230&255;
          $_73$sroa$4$0$extract$shift$i54$i = ($1230&65535) >>> 8;
          $_73$sroa$4$0$extract$trunc$i55$i = $_73$sroa$4$0$extract$shift$i54$i&255;
          $switch$i56$i = ($_73$sroa$0$0$extract$trunc$i53$i<<24>>24)==(0);
          if ($switch$i56$i) {
           $1654 = $1113;$tmp_ret$i16$sroa$0$1 = $$112$i;
           break L47;
          }
          $1231 = (($1112) + 2)<<16>>16;
          $1232 = ($1231<<16>>16)>($limit$0$i<<16>>16);
          $1233 = ($$112$i>>>0)<($957>>>0);
          $or$cond$i58$i = $1232 & $1233;
          if (!($or$cond$i58$i)) {
           $1654 = $1231;$tmp_ret$i16$sroa$0$1 = $$112$i;
           break L47;
          }
          $1234 = (($$112$i) + 1)|0;
          $1235 = (($buf) + ($$112$i)|0);
          HEAP8[$1235>>0] = $_73$sroa$4$0$extract$trunc$i55$i;
          $1654 = $1231;$tmp_ret$i16$sroa$0$1 = $1234;
          break L47;
         }
        }
       }
      }
      else if ((label|0) == 336) {
       $1239 = (($1091) + 63)|0;
       $1240 = $1239 & 63;
       $1241 = (_bitshift64Shl(1,0,($1240|0))|0);
       $1242 = tempRet0;
       $1243 = 0;$1245 = 1;$1250 = $1099;$1251 = $1100;$i$1$i88 = $1178;
       while(1) {
        $1244 = ($1243>>>0)<($1242>>>0);
        $1246 = ($1245>>>0)<($1241>>>0);
        $1247 = ($1243|0)==($1242|0);
        $1248 = $1247 & $1246;
        $1249 = $1244 | $1248;
        if (!($1249)) {
         break L54;
        }
        $1252 = (___muldi3(($1250|0),($1251|0),10,0)|0);
        $1253 = tempRet0;
        $1254 = (___muldi3(($1245|0),($1243|0),10,0)|0);
        $1255 = tempRet0;
        $1256 = $1252 & $1097;
        $1257 = $1253 & $1098;
        $1258 = ($i$1$i88>>>0)<($957>>>0);
        if (!($1258)) {
         label = 350;
         break;
        }
        $1259 = (_bitshift64Lshr(($1252|0),($1253|0),($1092|0))|0);
        $1260 = tempRet0;
        $1261 = $1259&255;
        $1262 = (($buf) + ($i$1$i88)|0);
        $1263 = (($1261) + 48)<<24>>24;
        HEAP8[$1262>>0] = $1263;
        $1264 = (($i$1$i88) + 1)|0;
        $1265 = ($1264|0)==($$112$i|0);
        if ($1265) {
         break;
        } else {
         $1243 = $1255;$1245 = $1254;$1250 = $1256;$1251 = $1257;$i$1$i88 = $1264;
        }
       }
       if ((label|0) == 350) {
        __ZN4core9panicking18panic_bounds_check17hd14a5808e41829e9E(23424,120,564,$i$1$i88,$957);
        // unreachable;
       }
       $1266 = ($1096>>>0)>($1255>>>0);
       $1267 = ($1095>>>0)>($1254>>>0);
       $1268 = ($1096|0)==($1255|0);
       $1269 = $1268 & $1267;
       $1270 = $1266 | $1269;
       $1271 = (_i64Subtract(($1095|0),($1096|0),($1254|0),($1255|0))|0);
       $1272 = tempRet0;
       $1273 = ($1272>>>0)>($1255>>>0);
       $1274 = ($1271>>>0)>($1254>>>0);
       $1275 = ($1272|0)==($1255|0);
       $1276 = $1275 & $1274;
       $1277 = $1273 | $1276;
       $or$cond1104 = $1270 & $1277;
       if ($or$cond1104) {
        $1278 = (_i64Subtract(($1095|0),($1096|0),($1256|0),($1257|0))|0);
        $1279 = tempRet0;
        $1280 = ($1279>>>0)>($1257>>>0);
        $1281 = ($1278>>>0)>($1256>>>0);
        $1282 = ($1279|0)==($1257|0);
        $1283 = $1282 & $1281;
        $1284 = $1280 | $1283;
        if ($1284) {
         $1290 = (_bitshift64Shl(($1256|0),($1257|0),1)|0);
         $1291 = tempRet0;
         $1292 = (_i64Subtract(($1095|0),($1096|0),($1290|0),($1291|0))|0);
         $1293 = tempRet0;
         $1294 = (___muldi3(($1245|0),($1243|0),20,0)|0);
         $1295 = tempRet0;
         $1296 = ($1293>>>0)<($1295>>>0);
         $1297 = ($1292>>>0)<($1294>>>0);
         $1298 = ($1293|0)==($1295|0);
         $1299 = $1298 & $1297;
         $1300 = $1296 | $1299;
         if (!($1300)) {
          $1654 = $1113;$tmp_ret$i16$sroa$0$1 = $$112$i;
          break L47;
         }
        }
        $1285 = ($1257>>>0)>($1255>>>0);
        $1286 = ($1256>>>0)>($1254>>>0);
        $1287 = ($1257|0)==($1255|0);
        $1288 = $1287 & $1286;
        $1289 = $1285 | $1288;
        if ($1289) {
         $1301 = (_i64Subtract(($1256|0),($1257|0),($1254|0),($1255|0))|0);
         $1302 = tempRet0;
         $1303 = (_i64Subtract(($1095|0),($1096|0),($1301|0),($1302|0))|0);
         $1304 = tempRet0;
         $1305 = ($1304>>>0)>($1302>>>0);
         $1306 = ($1303>>>0)>($1301>>>0);
         $1307 = ($1304|0)==($1302|0);
         $1308 = $1307 & $1306;
         $1309 = $1305 | $1308;
         if (!($1309)) {
          $1310 = (__ZN4core3num7flt2dec8round_up17h7add2f9e6cce7cd7E($buf,$957,$$112$i)|0);
          $_73$sroa$0$0$extract$trunc$i$i = $1310&255;
          $_73$sroa$4$0$extract$shift$i$i = ($1310&65535) >>> 8;
          $_73$sroa$4$0$extract$trunc$i$i = $_73$sroa$4$0$extract$shift$i$i&255;
          $switch$i$i95 = ($_73$sroa$0$0$extract$trunc$i$i<<24>>24)==(0);
          if ($switch$i$i95) {
           $1654 = $1113;$tmp_ret$i16$sroa$0$1 = $$112$i;
           break L47;
          }
          $1311 = (($1112) + 2)<<16>>16;
          $1312 = ($1311<<16>>16)>($limit$0$i<<16>>16);
          $1313 = ($$112$i>>>0)<($957>>>0);
          $or$cond$i$i96 = $1312 & $1313;
          if (!($or$cond$i$i96)) {
           $1654 = $1311;$tmp_ret$i16$sroa$0$1 = $$112$i;
           break L47;
          }
          $1314 = (($$112$i) + 1)|0;
          $1315 = (($buf) + ($$112$i)|0);
          HEAP8[$1315>>0] = $_73$sroa$4$0$extract$trunc$i$i;
          $1654 = $1311;$tmp_ret$i16$sroa$0$1 = $1314;
          break L47;
         }
        }
       }
      }
      else if ((label|0) == 348) {
       __ZN4core9panicking5panic17ha7507e8e32961bfeE(7160);
       // unreachable;
      }
      else if ((label|0) == 349) {
       __ZN4core9panicking18panic_bounds_check17hd14a5808e41829e9E(23424,120,513,$i$0130$i,$957);
       // unreachable;
      }
     } while(0);
     $1317 = ($1316|0)==(0);
     $1319 = ($1318|0)==(0);
     $1320 = $1317 & $1319;
     if ($1320) {
      __ZN4core9panicking5panic17ha7507e8e32961bfeE(6884);
      // unreachable;
     } else {
      label = 353;
     }
    } else {
     $1122 = (___udivdi3(($1086|0),($1087|0),10,0)|0);
     $1123 = tempRet0;
     $1124 = (_bitshift64Shl(($tmp_ret2$sroa$11$0$i|0),0,($1092|0))|0);
     $1125 = tempRet0;
     $1126 = ($1125>>>0)>($1096>>>0);
     $1127 = ($1124>>>0)>($1095>>>0);
     $1128 = ($1125|0)==($1096|0);
     $1129 = $1128 & $1127;
     $1130 = $1126 | $1129;
     $1131 = (_i64Subtract(($1124|0),($1125|0),($1095|0),($1096|0))|0);
     $1132 = tempRet0;
     $1133 = ($1132>>>0)>($1096>>>0);
     $1134 = ($1131>>>0)>($1095>>>0);
     $1135 = ($1132|0)==($1096|0);
     $1136 = $1135 & $1134;
     $1137 = $1133 | $1136;
     $or$cond1098 = $1130 & $1137;
     if ($or$cond1098) {
      $1138 = (_i64Subtract(($1124|0),($1125|0),($1122|0),($1123|0))|0);
      $1139 = tempRet0;
      $1140 = ($1139>>>0)>($1123>>>0);
      $1141 = ($1138>>>0)>($1122>>>0);
      $1142 = ($1139|0)==($1123|0);
      $1143 = $1142 & $1141;
      $1144 = $1140 | $1143;
      if ($1144) {
       $1150 = (_bitshift64Shl(($1122|0),($1123|0),1)|0);
       $1151 = tempRet0;
       $1152 = (_i64Subtract(($1124|0),($1125|0),($1150|0),($1151|0))|0);
       $1153 = tempRet0;
       $1154 = (_bitshift64Shl(($1095|0),($1096|0),1)|0);
       $1155 = tempRet0;
       $1156 = ($1153>>>0)<($1155>>>0);
       $1157 = ($1152>>>0)<($1154>>>0);
       $1158 = ($1153|0)==($1155|0);
       $1159 = $1158 & $1157;
       $1160 = $1156 | $1159;
       if (!($1160)) {
        $1654 = $1113;$tmp_ret$i16$sroa$0$1 = 0;
        break;
       }
      }
      $1145 = ($1123>>>0)>($1096>>>0);
      $1146 = ($1122>>>0)>($1095>>>0);
      $1147 = ($1123|0)==($1096|0);
      $1148 = $1147 & $1146;
      $1149 = $1145 | $1148;
      if ($1149) {
       $1161 = (_i64Subtract(($1122|0),($1123|0),($1095|0),($1096|0))|0);
       $1162 = tempRet0;
       $1163 = (_i64Subtract(($1124|0),($1125|0),($1161|0),($1162|0))|0);
       $1164 = tempRet0;
       $1165 = ($1164>>>0)>($1162>>>0);
       $1166 = ($1163>>>0)>($1161>>>0);
       $1167 = ($1164|0)==($1162|0);
       $1168 = $1167 & $1166;
       $1169 = $1165 | $1168;
       if ($1169) {
        label = 353;
       } else {
        $1170 = (($1112) + 2)<<16>>16;
        $1171 = ($1170<<16>>16)>($limit$0$i<<16>>16);
        if ($1171) {
         HEAP8[$buf>>0] = 49;
         $1654 = $1170;$tmp_ret$i16$sroa$0$1 = 1;
        } else {
         $1654 = $1170;$tmp_ret$i16$sroa$0$1 = 0;
        }
       }
      } else {
       label = 353;
      }
     } else {
      label = 353;
     }
    }
   } while(0);
   L92: do {
    if ((label|0) == 353) {
     $1321 = (_i64Add(($987|0),($989|0),($1316|0),($1318|0))|0);
     $1322 = tempRet0;
     $1323 = ($1322>>>0)<($989>>>0);
     $1324 = ($1321>>>0)<($987>>>0);
     $1325 = ($1322|0)==($989|0);
     $1326 = $1325 & $1324;
     $1327 = $1323 | $1326;
     if ($1327) {
      __ZN4core9panicking5panic17ha7507e8e32961bfeE(6904);
      // unreachable;
     }
     $1328 = ($989>>>0)<(0);
     $1329 = ($987>>>0)<(1);
     $1330 = ($989|0)==(0);
     $1331 = $1330 & $1329;
     $1332 = $1328 | $1331;
     if ($1332) {
      __ZN4core9panicking5panic17ha7507e8e32961bfeE(6924);
      // unreachable;
     }
     $1333 = (_i64Add(($987|0),($989|0),-1,-1)|0);
     $1334 = tempRet0;
     $1335 = (_llvm_ctlz_i64(($1333|0),($1334|0),0)|0);
     $1336 = tempRet0;
     $1337 = (_i64Subtract(64,0,($1335|0),($1336|0))|0);
     $1338 = tempRet0;
     $1339 = $$ph << 16 >> 16;
     $1340 = ($1339|0)<(0);
     $1341 = $1340 << 31 >> 31;
     $1342 = (_i64Add(($1337|0),($1338|0),($1339|0),($1341|0))|0);
     $1343 = tempRet0;
     (___muldi3(($1342|0),($1343|0),1292913986,0)|0);
     $1344 = tempRet0;
     $1345 = $1344&65535;
     _memset(($base$i$i|0),0,160)|0;
     $1348 = $987;$1350 = $989;$sz$011$i$i113 = 0;
     while(1) {
      $1346 = ($sz$011$i$i113>>>0)<(40);
      if (!($1346)) {
       label = 360;
       break;
      }
      $1347 = (($base$i$i) + ($sz$011$i$i113<<2)|0);
      HEAP32[$1347>>2] = $1348;
      $1349 = (($sz$011$i$i113) + 1)|0;
      $1351 = ($1350|0)==(0);
      $1352 = (0)==(0);
      $1353 = $1351 & $1352;
      if ($1353) {
       break;
      } else {
       $1348$phi = $1350;$1350 = 0;$sz$011$i$i113 = $1349;$1348 = $1348$phi;
      }
     }
     if ((label|0) == 360) {
      __ZN4core9panicking18panic_bounds_check17hd14a5808e41829e9E(22904,104,144,$sz$011$i$i113,40);
      // unreachable;
     }
     HEAP32[$mant$i99>>2] = $1349;
     $1354 = ((($mant$i99)) + 4|0);
     _memcpy(($1354|0),($base$i$i|0),160)|0;
     $1355 = ((($base$i$i)) + 4|0);
     _memset(($1355|0),0,156)|0;
     HEAP32[$base$i$i>>2] = 1;
     HEAP32[$scale$i100>>2] = 1;
     $1356 = ((($scale$i100)) + 4|0);
     _memcpy(($1356|0),($base$i$i|0),160)|0;
     if ($953) {
      $1357 = (0 - ($$ph))<<16>>16;
      $1358 = $1357 << 16 >> 16;
      (__ZN4core3num6bignum8Big32x408mul_pow217h21707dacd096bf95E($scale$i100,$1358)|0);
     } else {
      (__ZN4core3num6bignum8Big32x408mul_pow217h21707dacd096bf95E($mant$i99,$954)|0);
     }
     $1359 = ($1345<<16>>16)>(-1);
     if ($1359) {
      $1360 = $1345 << 16 >> 16;
      __ZN4core3num7flt2dec8strategy6dragon9mul_pow1017hbc61c3a21b88eb42E($scale$i100,$1360);
     } else {
      $1361 = (0 - ($1345))<<16>>16;
      $1362 = $1361 << 16 >> 16;
      __ZN4core3num7flt2dec8strategy6dragon9mul_pow1017hbc61c3a21b88eb42E($mant$i99,$1362);
     }
     $1363 = HEAP32[$scale$i100>>2]|0;
     HEAP32[$_88$i>>2] = $1363;
     $1364 = ((($_88$i)) + 4|0);
     _memcpy(($1364|0),($1356|0),160)|0;
     $1365 = ((($_88$i)) + 4|0);
     $1366 = ($1363>>>0)>(40);
     if ($1366) {
      $$lcssa752$i = $1363;
      __ZN4core5slice20slice_index_len_fail17hed923256c072a803E($$lcssa752$i,40);
      // unreachable;
     } else {
      $1367 = $1363;$n$017$i756$i = $957;
     }
     while(1) {
      $1368 = ($1367|0)==(0);
      if ($1368) {
       $$pre$i122 = 0;
      } else {
       $1369 = (((($_88$i)) + 4|0) + ($1367<<2)|0);
       $borrow$024$i$i$i = 0;$iter$sroa$4$0$in23$i$i$i = $1369;
       while(1) {
        $1370 = ((($iter$sroa$4$0$in23$i$i$i)) + -4|0);
        $1371 = HEAP32[$1370>>2]|0;
        $1372 = (___udivdi3(($1371|0),($borrow$024$i$i$i|0),1000000000,0)|0);
        $1373 = tempRet0;
        $1374 = (___uremdi3(($1371|0),($borrow$024$i$i$i|0),1000000000,0)|0);
        $1375 = tempRet0;
        HEAP32[$1370>>2] = $1372;
        $1376 = ($1370|0)==($1365|0);
        if ($1376) {
         break;
        } else {
         $borrow$024$i$i$i = $1374;$iter$sroa$4$0$in23$i$i$i = $1370;
        }
       }
       $$pre$i122$pre = HEAP32[$_88$i>>2]|0;
       $$pre$i122 = $$pre$i122$pre;
      }
      $1377 = (($n$017$i756$i) + -9)|0;
      $1378 = ($1377>>>0)>(9);
      if (!($1378)) {
       break;
      }
      $1379 = ($$pre$i122>>>0)>(40);
      if ($1379) {
       $$lcssa752$i = $$pre$i122;
       label = 368;
       break;
      } else {
       $1367 = $$pre$i122;$n$017$i756$i = $1377;
      }
     }
     if ((label|0) == 368) {
      __ZN4core5slice20slice_index_len_fail17hed923256c072a803E($$lcssa752$i,40);
      // unreachable;
     }
     $1380 = (6944 + ($1377<<2)|0);
     $1381 = HEAP32[$1380>>2]|0;
     $1382 = ($$pre$i122>>>0)>(40);
     if ($1382) {
      __ZN4core5slice20slice_index_len_fail17hed923256c072a803E($$pre$i122,40);
      // unreachable;
     }
     $1383 = ($$pre$i122|0)==(0);
     if ($1383) {
      $1394 = 0;
     } else {
      $1384 = (((($_88$i)) + 4|0) + ($$pre$i122<<2)|0);
      $borrow$024$i11$i$i = 0;$iter$sroa$4$0$in23$i12$i$i = $1384;
      while(1) {
       $1385 = ((($iter$sroa$4$0$in23$i12$i$i)) + -4|0);
       $1386 = HEAP32[$1385>>2]|0;
       $1387 = (___udivdi3(($1386|0),($borrow$024$i11$i$i|0),($1381|0),0)|0);
       $1388 = tempRet0;
       $1389 = (___uremdi3(($1386|0),($borrow$024$i11$i$i|0),($1381|0),0)|0);
       $1390 = tempRet0;
       HEAP32[$1385>>2] = $1387;
       $1391 = ($1385|0)==($1365|0);
       if ($1391) {
        break;
       } else {
        $borrow$024$i11$i$i = $1389;$iter$sroa$4$0$in23$i12$i$i = $1385;
       }
      }
      $$pre = HEAP32[$_88$i>>2]|0;
      $1394 = $$pre;
     }
     $1392 = HEAP32[$mant$i99>>2]|0;
     $1393 = ($1392>>>0)>=($1394>>>0);
     $_0$0$sroa$speculated$i$i1$i124 = $1393 ? $1392 : $1394;
     $1395 = ($_0$0$sroa$speculated$i$i1$i124>>>0)>(40);
     if ($1395) {
      __ZN4core5slice20slice_index_len_fail17hed923256c072a803E($_0$0$sroa$speculated$i$i1$i124,40);
      // unreachable;
     }
     $1396 = ($_0$0$sroa$speculated$i$i1$i124|0)==(0);
     do {
      if ($1396) {
       $sz$0$i8$i = 0;
      } else {
       $1400 = $1365;$carry$0$off063$i$i126 = 0;$iter$sroa$526$062$i$i127 = 0;
       while(1) {
        $1397 = (((($mant$i99)) + 4|0) + ($iter$sroa$526$062$i$i127<<2)|0);
        $1398 = (($iter$sroa$526$062$i$i127) + 1)|0;
        $1399 = HEAP32[$1400>>2]|0;
        $1401 = HEAP32[$1397>>2]|0;
        $$arith39 = (($1399) + ($1401))|0;
        $$overflow40 = ($$arith39>>>0)<($1399>>>0);
        $$$i$i$i128 = $carry$0$off063$i$i126&1;
        $$arith35 = (($$arith39) + ($$$i$i$i128))|0;
        $$overflow36 = ($$arith35>>>0)<($$arith39>>>0);
        $brmerge$i$i5$i = $$overflow40 | $$overflow36;
        HEAP32[$1400>>2] = $$arith35;
        $1402 = ($1398>>>0)<($_0$0$sroa$speculated$i$i1$i124>>>0);
        $1403 = (((($_88$i)) + 4|0) + ($1398<<2)|0);
        if ($1402) {
         $1400 = $1403;$carry$0$off063$i$i126 = $brmerge$i$i5$i;$iter$sroa$526$062$i$i127 = $1398;
        } else {
         break;
        }
       }
       if (!($brmerge$i$i5$i)) {
        $sz$0$i8$i = $_0$0$sroa$speculated$i$i1$i124;
        break;
       }
       $1404 = ($_0$0$sroa$speculated$i$i1$i124>>>0)<(40);
       if ($1404) {
        $1405 = (((($_88$i)) + 4|0) + ($_0$0$sroa$speculated$i$i1$i124<<2)|0);
        HEAP32[$1405>>2] = 1;
        $1406 = (($_0$0$sroa$speculated$i$i1$i124) + 1)|0;
        $sz$0$i8$i = $1406;
        break;
       } else {
        __ZN4core9panicking18panic_bounds_check17hd14a5808e41829e9E(22904,104,212,$_0$0$sroa$speculated$i$i1$i124,40);
        // unreachable;
       }
      }
     } while(0);
     HEAP32[$_88$i>>2] = $sz$0$i8$i;
     $1407 = HEAP32[$scale$i100>>2]|0;
     $1408 = ($1407>>>0)>=($sz$0$i8$i>>>0);
     $_0$0$sroa$speculated$i$i$i$i$i130 = $1408 ? $1407 : $sz$0$i8$i;
     $1409 = ($_0$0$sroa$speculated$i$i$i$i$i130>>>0)>(40);
     if ($1409) {
      __ZN4core5slice20slice_index_len_fail17hed923256c072a803E($_0$0$sroa$speculated$i$i$i$i$i130,40);
      // unreachable;
     }
     $1410 = (((($_88$i)) + 4|0) + ($_0$0$sroa$speculated$i$i$i$i$i130<<2)|0);
     $1411 = $1410;
     $1412 = ((($scale$i100)) + 4|0);
     $1413 = (((($scale$i100)) + 4|0) + ($_0$0$sroa$speculated$i$i$i$i$i130<<2)|0);
     $1414 = $1413;
     $_12$sroa$6$0$i$i$i$i$i134 = 0;$other1$sroa$4$0$i$i$i$i$i135 = $1414;$self$sroa$4$0$i$i$i$i$i136 = $1411;
     while(1) {
      $1415 = $self$sroa$4$0$i$i$i$i$i136;
      $1416 = ($1415|0)==($1365|0);
      if ($1416) {
       $$sink$i$i$i$i60$i$i$i$i$i140 = 0;$_10$sroa$6$1$i$i$i$i$i138 = $_12$sroa$6$0$i$i$i$i$i134;$self$sroa$4$1$i$i$i$i$i139 = $self$sroa$4$0$i$i$i$i$i136;
      } else {
       $1417 = ((($1415)) + -4|0);
       $1418 = $1417;
       $1419 = HEAP32[$1417>>2]|0;
       $$sink$i$i$i$i60$i$i$i$i$i140 = 1;$_10$sroa$6$1$i$i$i$i$i138 = $1419;$self$sroa$4$1$i$i$i$i$i139 = $1418;
      }
      $1420 = $other1$sroa$4$0$i$i$i$i$i135;
      $1421 = ($1420|0)==($1412|0);
      if ($1421) {
       $$sink$i$i$i$i$i$i$i$i$i145 = 1;$_12$sroa$6$1$i$i$i$i$i143 = $_12$sroa$6$0$i$i$i$i$i134;$other1$sroa$4$1$i$i$i$i$i144 = $other1$sroa$4$0$i$i$i$i$i135;
      } else {
       $1422 = ((($1420)) + -4|0);
       $1423 = $1422;
       $1424 = HEAP32[$1422>>2]|0;
       $$sink$i$i$i$i$i$i$i$i$i145 = 0;$_12$sroa$6$1$i$i$i$i$i143 = $1424;$other1$sroa$4$1$i$i$i$i$i144 = $1423;
      }
      $switch$i$i$i$i$i146 = ($$sink$i$i$i$i60$i$i$i$i$i140|0)==(0);
      if ($switch$i$i$i$i$i146) {
       label = 401;
       break;
      }
      if ($$sink$i$i$i$i$i$i$i$i$i145) {
       label = 398;
       break;
      }
      $1425 = ($_10$sroa$6$1$i$i$i$i$i138|0)==($_12$sroa$6$1$i$i$i$i$i143|0);
      if ($1425) {
       $_12$sroa$6$0$i$i$i$i$i134 = $_10$sroa$6$1$i$i$i$i$i138;$other1$sroa$4$0$i$i$i$i$i135 = $other1$sroa$4$1$i$i$i$i$i144;$self$sroa$4$0$i$i$i$i$i136 = $self$sroa$4$1$i$i$i$i$i139;
      } else {
       label = 400;
       break;
      }
     }
     if ((label|0) == 398) {
      label = 402;
     }
     else if ((label|0) == 400) {
      $1426 = ($_10$sroa$6$1$i$i$i$i$i138>>>0)<($_12$sroa$6$1$i$i$i$i$i143>>>0);
      if ($1426) {
       label = 403;
      } else {
       label = 402;
      }
     }
     else if ((label|0) == 401) {
      if ($$sink$i$i$i$i$i$i$i$i$i145) {
       label = 402;
      } else {
       label = 403;
      }
     }
     if ((label|0) == 402) {
      $1427 = (($1345) + 1)<<16>>16;
      $1823 = $1392;$k$0$i154 = $1427;
     }
     else if ((label|0) == 403) {
      $1428 = ($1392>>>0)>(40);
      if ($1428) {
       __ZN4core5slice20slice_index_len_fail17hed923256c072a803E($1392,40);
       // unreachable;
      }
      $1429 = (((($mant$i99)) + 4|0) + ($1392<<2)|0);
      $1430 = ($1392|0)==(0);
      do {
       if ($1430) {
        $sz$0$i76$i = 0;
       } else {
        $1431 = ((($mant$i99)) + 4|0);
        $carry$021$i71$i = 0;$iter$sroa$0$0$in20$i72$i = $1431;
        while(1) {
         $1434 = ((($iter$sroa$0$0$in20$i72$i)) + 4|0);
         $1435 = HEAP32[$iter$sroa$0$0$in20$i72$i>>2]|0;
         $1436 = (___muldi3(($1435|0),0,10,0)|0);
         $1437 = tempRet0;
         $1438 = (_i64Add(($1436|0),($1437|0),($carry$021$i71$i|0),0)|0);
         $1432 = tempRet0;
         HEAP32[$iter$sroa$0$0$in20$i72$i>>2] = $1438;
         $1439 = ($1434|0)==($1429|0);
         if ($1439) {
          break;
         } else {
          $carry$021$i71$i = $1432;$iter$sroa$0$0$in20$i72$i = $1434;
         }
        }
        $1433 = ($1432|0)==(0);
        if ($1433) {
         $sz$0$i76$i = $1392;
         break;
        }
        $1440 = ($1392>>>0)<(40);
        if ($1440) {
         HEAP32[$1429>>2] = $1432;
         $1441 = (($1392) + 1)|0;
         $sz$0$i76$i = $1441;
         break;
        } else {
         __ZN4core9panicking18panic_bounds_check17hd14a5808e41829e9E(22904,104,267,$1392,40);
         // unreachable;
        }
       }
      } while(0);
      HEAP32[$mant$i99>>2] = $sz$0$i76$i;
      $1823 = $sz$0$i76$i;$k$0$i154 = $1345;
     }
     $1442 = ($k$0$i154<<16>>16)<($limit$0$i<<16>>16);
     L183: do {
      if ($1442) {
       $1610 = $1407;$1625 = $1823;$1824 = 1;$len$0260$i = 0;
      } else {
       $1443 = $k$0$i154 << 16 >> 16;
       $1444 = $limit$0$i << 16 >> 16;
       $1445 = (($1443) - ($1444))|0;
       $1446 = ($1445>>>0)<($957>>>0);
       $1447 = (($k$0$i154) - ($limit$0$i))<<16>>16;
       $1448 = $1447 << 16 >> 16;
       $$271$i = $1446 ? $1448 : $957;
       $1449 = ($$271$i|0)==(0);
       if ($1449) {
        $1610 = $1407;$1625 = $1823;$1824 = 1;$len$0260$i = 0;
        break;
       }
       HEAP32[$scale2$i101>>2] = $1407;
       $1450 = ((($scale2$i101)) + 4|0);
       _memcpy(($1450|0),($1356|0),160)|0;
       (__ZN4core3num6bignum8Big32x408mul_pow217h21707dacd096bf95E($scale2$i101,1)|0);
       $1451 = HEAP32[$scale$i100>>2]|0;
       HEAP32[$scale4$i102>>2] = $1451;
       $1452 = ((($scale4$i102)) + 4|0);
       _memcpy(($1452|0),($1356|0),160)|0;
       (__ZN4core3num6bignum8Big32x408mul_pow217h21707dacd096bf95E($scale4$i102,2)|0);
       $1453 = HEAP32[$scale$i100>>2]|0;
       HEAP32[$scale8$i103>>2] = $1453;
       $1454 = ((($scale8$i103)) + 4|0);
       _memcpy(($1454|0),($1356|0),160)|0;
       (__ZN4core3num6bignum8Big32x408mul_pow217h21707dacd096bf95E($scale8$i103,3)|0);
       $1455 = ((($mant$i99)) + 4|0);
       $1456 = ((($scale8$i103)) + 4|0);
       $1457 = ((($scale4$i102)) + 4|0);
       $1458 = ((($scale2$i101)) + 4|0);
       $$pre509$i = HEAP32[$mant$i99>>2]|0;
       $1459 = $$pre509$i;$1608 = 1;$iter$sroa$0$0379$i = 0;
       L186: while(1) {
        $1460 = ($1459>>>0)>(40);
        if ($1460) {
         label = 418;
         break;
        }
        $1461 = (((($mant$i99)) + 4|0) + ($1459<<2)|0);
        $1462 = $1455;
        while(1) {
         $1463 = ($1462|0)==($1461|0);
         if ($1463) {
          label = 422;
          break L186;
         }
         $1464 = ((($1462)) + 4|0);
         $1465 = HEAP32[$1462>>2]|0;
         $1466 = ($1465|0)==(0);
         if ($1466) {
          $1462 = $1464;
         } else {
          break;
         }
        }
        $1472 = HEAP32[$scale8$i103>>2]|0;
        $1473 = ($1472>>>0)>=($1459>>>0);
        $_0$0$sroa$speculated$i$i$i$i130$i = $1473 ? $1472 : $1459;
        $1474 = ($_0$0$sroa$speculated$i$i$i$i130$i>>>0)>(40);
        if ($1474) {
         label = 429;
         break;
        }
        $1475 = (((($mant$i99)) + 4|0) + ($_0$0$sroa$speculated$i$i$i$i130$i<<2)|0);
        $1476 = $1475;
        $1477 = (((($scale8$i103)) + 4|0) + ($_0$0$sroa$speculated$i$i$i$i130$i<<2)|0);
        $1478 = $1477;
        $_12$sroa$6$0$i$i$i$i133$i = 0;$other1$sroa$4$0$i$i$i$i134$i = $1478;$self$sroa$4$0$i$i$i$i135$i = $1476;
        while(1) {
         $1479 = $self$sroa$4$0$i$i$i$i135$i;
         $1480 = ($1479|0)==($1455|0);
         if ($1480) {
          $$sink$i$i$i$i60$i$i$i$i140$i = 0;$_10$sroa$6$1$i$i$i$i138$i = $_12$sroa$6$0$i$i$i$i133$i;$self$sroa$4$1$i$i$i$i139$i = $self$sroa$4$0$i$i$i$i135$i;
         } else {
          $1481 = ((($1479)) + -4|0);
          $1482 = $1481;
          $1483 = HEAP32[$1481>>2]|0;
          $$sink$i$i$i$i60$i$i$i$i140$i = 1;$_10$sroa$6$1$i$i$i$i138$i = $1483;$self$sroa$4$1$i$i$i$i139$i = $1482;
         }
         $1484 = $other1$sroa$4$0$i$i$i$i134$i;
         $1485 = ($1484|0)==($1456|0);
         if ($1485) {
          $$sink$i$i$i$i$i$i$i$i145$i = 1;$_12$sroa$6$1$i$i$i$i143$i = $_12$sroa$6$0$i$i$i$i133$i;$other1$sroa$4$1$i$i$i$i144$i = $other1$sroa$4$0$i$i$i$i134$i;
         } else {
          $1486 = ((($1484)) + -4|0);
          $1487 = $1486;
          $1488 = HEAP32[$1486>>2]|0;
          $$sink$i$i$i$i$i$i$i$i145$i = 0;$_12$sroa$6$1$i$i$i$i143$i = $1488;$other1$sroa$4$1$i$i$i$i144$i = $1487;
         }
         $switch$i$i$i$i146$i = ($$sink$i$i$i$i60$i$i$i$i140$i|0)==(0);
         if ($switch$i$i$i$i146$i) {
          label = 439;
          break;
         }
         if ($$sink$i$i$i$i$i$i$i$i145$i) {
          label = 441;
          break;
         }
         $1489 = ($_10$sroa$6$1$i$i$i$i138$i|0)==($_12$sroa$6$1$i$i$i$i143$i|0);
         if ($1489) {
          $_12$sroa$6$0$i$i$i$i133$i = $_10$sroa$6$1$i$i$i$i138$i;$other1$sroa$4$0$i$i$i$i134$i = $other1$sroa$4$1$i$i$i$i144$i;$self$sroa$4$0$i$i$i$i135$i = $self$sroa$4$1$i$i$i$i139$i;
         } else {
          label = 438;
          break;
         }
        }
        if ((label|0) == 438) {
         label = 0;
         $1490 = ($_10$sroa$6$1$i$i$i$i138$i>>>0)<($_12$sroa$6$1$i$i$i$i143$i>>>0);
         if ($1490) {
          $1502 = $1459;$d$0$i = 0;
         } else {
          label = 441;
         }
        }
        else if ((label|0) == 439) {
         label = 0;
         if ($$sink$i$i$i$i$i$i$i$i145$i) {
          label = 441;
         } else {
          $1502 = $1459;$d$0$i = 0;
         }
        }
        if ((label|0) == 441) {
         label = 0;
         $1491 = ($_0$0$sroa$speculated$i$i$i$i130$i|0)==(0);
         if (!($1491)) {
          $1495 = $1455;$iter$sroa$521$057$i164$i = 0;$noborrow$0$off058$i163$i = 1;
          while(1) {
           $1492 = (((($scale8$i103)) + 4|0) + ($iter$sroa$521$057$i164$i<<2)|0);
           $1493 = (($iter$sroa$521$057$i164$i) + 1)|0;
           $1494 = HEAP32[$1495>>2]|0;
           $1496 = HEAP32[$1492>>2]|0;
           $1497 = $1496 ^ -1;
           $$arith31 = (($1494) + ($1497))|0;
           $$overflow32 = ($$arith31>>>0)<($1494>>>0);
           $$$i$i165$i = $noborrow$0$off058$i163$i&1;
           $$arith27 = (($$arith31) + ($$$i$i165$i))|0;
           $$overflow28 = ($$arith27>>>0)<($$arith31>>>0);
           $brmerge$i$i166$i = $$overflow32 | $$overflow28;
           HEAP32[$1495>>2] = $$arith27;
           $1498 = ($1493>>>0)<($_0$0$sroa$speculated$i$i$i$i130$i>>>0);
           $1499 = (((($mant$i99)) + 4|0) + ($1493<<2)|0);
           if ($1498) {
            $1495 = $1499;$iter$sroa$521$057$i164$i = $1493;$noborrow$0$off058$i163$i = $brmerge$i$i166$i;
           } else {
            break;
           }
          }
          if (!($brmerge$i$i166$i)) {
           label = 444;
           break;
          }
         }
         HEAP32[$mant$i99>>2] = $_0$0$sroa$speculated$i$i$i$i130$i;
         $1502 = $_0$0$sroa$speculated$i$i$i$i130$i;$d$0$i = 8;
        }
        $1500 = HEAP32[$scale4$i102>>2]|0;
        $1501 = ($1500>>>0)>=($1502>>>0);
        $_0$0$sroa$speculated$i$i$i$i170$i = $1501 ? $1500 : $1502;
        $1503 = ($_0$0$sroa$speculated$i$i$i$i170$i>>>0)>(40);
        if ($1503) {
         label = 447;
         break;
        }
        $1504 = (((($mant$i99)) + 4|0) + ($_0$0$sroa$speculated$i$i$i$i170$i<<2)|0);
        $1505 = $1504;
        $1506 = (((($scale4$i102)) + 4|0) + ($_0$0$sroa$speculated$i$i$i$i170$i<<2)|0);
        $1507 = $1506;
        $_12$sroa$6$0$i$i$i$i173$i = 0;$other1$sroa$4$0$i$i$i$i174$i = $1507;$self$sroa$4$0$i$i$i$i175$i = $1505;
        while(1) {
         $1508 = $self$sroa$4$0$i$i$i$i175$i;
         $1509 = ($1508|0)==($1455|0);
         if ($1509) {
          $$sink$i$i$i$i60$i$i$i$i180$i = 0;$_10$sroa$6$1$i$i$i$i178$i = $_12$sroa$6$0$i$i$i$i173$i;$self$sroa$4$1$i$i$i$i179$i = $self$sroa$4$0$i$i$i$i175$i;
         } else {
          $1510 = ((($1508)) + -4|0);
          $1511 = $1510;
          $1512 = HEAP32[$1510>>2]|0;
          $$sink$i$i$i$i60$i$i$i$i180$i = 1;$_10$sroa$6$1$i$i$i$i178$i = $1512;$self$sroa$4$1$i$i$i$i179$i = $1511;
         }
         $1513 = $other1$sroa$4$0$i$i$i$i174$i;
         $1514 = ($1513|0)==($1457|0);
         if ($1514) {
          $$sink$i$i$i$i$i$i$i$i185$i = 1;$_12$sroa$6$1$i$i$i$i183$i = $_12$sroa$6$0$i$i$i$i173$i;$other1$sroa$4$1$i$i$i$i184$i = $other1$sroa$4$0$i$i$i$i174$i;
         } else {
          $1515 = ((($1513)) + -4|0);
          $1516 = $1515;
          $1517 = HEAP32[$1515>>2]|0;
          $$sink$i$i$i$i$i$i$i$i185$i = 0;$_12$sroa$6$1$i$i$i$i183$i = $1517;$other1$sroa$4$1$i$i$i$i184$i = $1516;
         }
         $switch$i$i$i$i186$i = ($$sink$i$i$i$i60$i$i$i$i180$i|0)==(0);
         if ($switch$i$i$i$i186$i) {
          label = 457;
          break;
         }
         if ($$sink$i$i$i$i$i$i$i$i185$i) {
          label = 458;
          break;
         }
         $1518 = ($_10$sroa$6$1$i$i$i$i178$i|0)==($_12$sroa$6$1$i$i$i$i183$i|0);
         if ($1518) {
          $_12$sroa$6$0$i$i$i$i173$i = $_10$sroa$6$1$i$i$i$i178$i;$other1$sroa$4$0$i$i$i$i174$i = $other1$sroa$4$1$i$i$i$i184$i;$self$sroa$4$0$i$i$i$i175$i = $self$sroa$4$1$i$i$i$i179$i;
         } else {
          label = 456;
          break;
         }
        }
        if ((label|0) == 456) {
         label = 0;
         $1519 = ($_10$sroa$6$1$i$i$i$i178$i>>>0)<($_12$sroa$6$1$i$i$i$i183$i>>>0);
         if ($1519) {
          $1532 = $1502;$d$1$i = $d$0$i;
         } else {
          label = 458;
         }
        }
        else if ((label|0) == 457) {
         label = 0;
         if ($$sink$i$i$i$i$i$i$i$i185$i) {
          label = 458;
         } else {
          $1532 = $1502;$d$1$i = $d$0$i;
         }
        }
        if ((label|0) == 458) {
         label = 0;
         $1520 = ($_0$0$sroa$speculated$i$i$i$i170$i|0)==(0);
         if (!($1520)) {
          $1524 = $1455;$iter$sroa$521$057$i203$i = 0;$noborrow$0$off058$i202$i = 1;
          while(1) {
           $1521 = (((($scale4$i102)) + 4|0) + ($iter$sroa$521$057$i203$i<<2)|0);
           $1522 = (($iter$sroa$521$057$i203$i) + 1)|0;
           $1523 = HEAP32[$1524>>2]|0;
           $1525 = HEAP32[$1521>>2]|0;
           $1526 = $1525 ^ -1;
           $$arith23 = (($1523) + ($1526))|0;
           $$overflow24 = ($$arith23>>>0)<($1523>>>0);
           $$$i$i204$i = $noborrow$0$off058$i202$i&1;
           $$arith19 = (($$arith23) + ($$$i$i204$i))|0;
           $$overflow20 = ($$arith19>>>0)<($$arith23>>>0);
           $brmerge$i$i205$i = $$overflow24 | $$overflow20;
           HEAP32[$1524>>2] = $$arith19;
           $1527 = ($1522>>>0)<($_0$0$sroa$speculated$i$i$i$i170$i>>>0);
           $1528 = (((($mant$i99)) + 4|0) + ($1522<<2)|0);
           if ($1527) {
            $1524 = $1528;$iter$sroa$521$057$i203$i = $1522;$noborrow$0$off058$i202$i = $brmerge$i$i205$i;
           } else {
            break;
           }
          }
          if (!($brmerge$i$i205$i)) {
           label = 461;
           break;
          }
         }
         HEAP32[$mant$i99>>2] = $_0$0$sroa$speculated$i$i$i$i170$i;
         $1529 = $d$0$i | 4;
         $1532 = $_0$0$sroa$speculated$i$i$i$i170$i;$d$1$i = $1529;
        }
        $1530 = HEAP32[$scale2$i101>>2]|0;
        $1531 = ($1530>>>0)>=($1532>>>0);
        $_0$0$sroa$speculated$i$i$i$i209$i = $1531 ? $1530 : $1532;
        $1533 = ($_0$0$sroa$speculated$i$i$i$i209$i>>>0)>(40);
        if ($1533) {
         label = 464;
         break;
        }
        $1534 = (((($mant$i99)) + 4|0) + ($_0$0$sroa$speculated$i$i$i$i209$i<<2)|0);
        $1535 = $1534;
        $1536 = (((($scale2$i101)) + 4|0) + ($_0$0$sroa$speculated$i$i$i$i209$i<<2)|0);
        $1537 = $1536;
        $_12$sroa$6$0$i$i$i$i212$i = 0;$other1$sroa$4$0$i$i$i$i213$i = $1537;$self$sroa$4$0$i$i$i$i214$i = $1535;
        while(1) {
         $1538 = $self$sroa$4$0$i$i$i$i214$i;
         $1539 = ($1538|0)==($1455|0);
         if ($1539) {
          $$sink$i$i$i$i60$i$i$i$i219$i = 0;$_10$sroa$6$1$i$i$i$i217$i = $_12$sroa$6$0$i$i$i$i212$i;$self$sroa$4$1$i$i$i$i218$i = $self$sroa$4$0$i$i$i$i214$i;
         } else {
          $1540 = ((($1538)) + -4|0);
          $1541 = $1540;
          $1542 = HEAP32[$1540>>2]|0;
          $$sink$i$i$i$i60$i$i$i$i219$i = 1;$_10$sroa$6$1$i$i$i$i217$i = $1542;$self$sroa$4$1$i$i$i$i218$i = $1541;
         }
         $1543 = $other1$sroa$4$0$i$i$i$i213$i;
         $1544 = ($1543|0)==($1458|0);
         if ($1544) {
          $$sink$i$i$i$i$i$i$i$i224$i = 1;$_12$sroa$6$1$i$i$i$i222$i = $_12$sroa$6$0$i$i$i$i212$i;$other1$sroa$4$1$i$i$i$i223$i = $other1$sroa$4$0$i$i$i$i213$i;
         } else {
          $1545 = ((($1543)) + -4|0);
          $1546 = $1545;
          $1547 = HEAP32[$1545>>2]|0;
          $$sink$i$i$i$i$i$i$i$i224$i = 0;$_12$sroa$6$1$i$i$i$i222$i = $1547;$other1$sroa$4$1$i$i$i$i223$i = $1546;
         }
         $switch$i$i$i$i225$i = ($$sink$i$i$i$i60$i$i$i$i219$i|0)==(0);
         if ($switch$i$i$i$i225$i) {
          label = 474;
          break;
         }
         if ($$sink$i$i$i$i$i$i$i$i224$i) {
          label = 475;
          break;
         }
         $1548 = ($_10$sroa$6$1$i$i$i$i217$i|0)==($_12$sroa$6$1$i$i$i$i222$i|0);
         if ($1548) {
          $_12$sroa$6$0$i$i$i$i212$i = $_10$sroa$6$1$i$i$i$i217$i;$other1$sroa$4$0$i$i$i$i213$i = $other1$sroa$4$1$i$i$i$i223$i;$self$sroa$4$0$i$i$i$i214$i = $self$sroa$4$1$i$i$i$i218$i;
         } else {
          label = 473;
          break;
         }
        }
        if ((label|0) == 473) {
         label = 0;
         $1549 = ($_10$sroa$6$1$i$i$i$i217$i>>>0)<($_12$sroa$6$1$i$i$i$i222$i>>>0);
         if ($1549) {
          $1562 = $1532;$d$2$i = $d$1$i;
         } else {
          label = 475;
         }
        }
        else if ((label|0) == 474) {
         label = 0;
         if ($$sink$i$i$i$i$i$i$i$i224$i) {
          label = 475;
         } else {
          $1562 = $1532;$d$2$i = $d$1$i;
         }
        }
        if ((label|0) == 475) {
         label = 0;
         $1550 = ($_0$0$sroa$speculated$i$i$i$i209$i|0)==(0);
         if (!($1550)) {
          $1554 = $1455;$iter$sroa$521$057$i118$i = 0;$noborrow$0$off058$i117$i = 1;
          while(1) {
           $1551 = (((($scale2$i101)) + 4|0) + ($iter$sroa$521$057$i118$i<<2)|0);
           $1552 = (($iter$sroa$521$057$i118$i) + 1)|0;
           $1553 = HEAP32[$1554>>2]|0;
           $1555 = HEAP32[$1551>>2]|0;
           $1556 = $1555 ^ -1;
           $$arith15 = (($1553) + ($1556))|0;
           $$overflow16 = ($$arith15>>>0)<($1553>>>0);
           $$$i$i119$i = $noborrow$0$off058$i117$i&1;
           $$arith11 = (($$arith15) + ($$$i$i119$i))|0;
           $$overflow12 = ($$arith11>>>0)<($$arith15>>>0);
           $brmerge$i$i120$i = $$overflow16 | $$overflow12;
           HEAP32[$1554>>2] = $$arith11;
           $1557 = ($1552>>>0)<($_0$0$sroa$speculated$i$i$i$i209$i>>>0);
           $1558 = (((($mant$i99)) + 4|0) + ($1552<<2)|0);
           if ($1557) {
            $1554 = $1558;$iter$sroa$521$057$i118$i = $1552;$noborrow$0$off058$i117$i = $brmerge$i$i120$i;
           } else {
            break;
           }
          }
          if (!($brmerge$i$i120$i)) {
           label = 478;
           break;
          }
         }
         HEAP32[$mant$i99>>2] = $_0$0$sroa$speculated$i$i$i$i209$i;
         $1559 = (($d$1$i) + 2)<<24>>24;
         $1562 = $_0$0$sroa$speculated$i$i$i$i209$i;$d$2$i = $1559;
        }
        $1560 = HEAP32[$scale$i100>>2]|0;
        $1561 = ($1560>>>0)>=($1562>>>0);
        $_0$0$sroa$speculated$i$i$i$i83$i = $1561 ? $1560 : $1562;
        $1563 = ($_0$0$sroa$speculated$i$i$i$i83$i>>>0)>(40);
        if ($1563) {
         label = 481;
         break;
        }
        $1564 = (((($mant$i99)) + 4|0) + ($_0$0$sroa$speculated$i$i$i$i83$i<<2)|0);
        $1565 = $1564;
        $1566 = (((($scale$i100)) + 4|0) + ($_0$0$sroa$speculated$i$i$i$i83$i<<2)|0);
        $1567 = $1566;
        $_12$sroa$6$0$i$i$i$i86$i = 0;$other1$sroa$4$0$i$i$i$i87$i = $1567;$self$sroa$4$0$i$i$i$i88$i = $1565;
        while(1) {
         $1568 = $self$sroa$4$0$i$i$i$i88$i;
         $1569 = ($1568|0)==($1455|0);
         if ($1569) {
          $$sink$i$i$i$i60$i$i$i$i93$i = 0;$_10$sroa$6$1$i$i$i$i91$i = $_12$sroa$6$0$i$i$i$i86$i;$self$sroa$4$1$i$i$i$i92$i = $self$sroa$4$0$i$i$i$i88$i;
         } else {
          $1570 = ((($1568)) + -4|0);
          $1571 = $1570;
          $1572 = HEAP32[$1570>>2]|0;
          $$sink$i$i$i$i60$i$i$i$i93$i = 1;$_10$sroa$6$1$i$i$i$i91$i = $1572;$self$sroa$4$1$i$i$i$i92$i = $1571;
         }
         $1573 = $other1$sroa$4$0$i$i$i$i87$i;
         $1574 = ($1573|0)==($1412|0);
         if ($1574) {
          $$sink$i$i$i$i$i$i$i$i98$i = 1;$_12$sroa$6$1$i$i$i$i96$i = $_12$sroa$6$0$i$i$i$i86$i;$other1$sroa$4$1$i$i$i$i97$i = $other1$sroa$4$0$i$i$i$i87$i;
         } else {
          $1575 = ((($1573)) + -4|0);
          $1576 = $1575;
          $1577 = HEAP32[$1575>>2]|0;
          $$sink$i$i$i$i$i$i$i$i98$i = 0;$_12$sroa$6$1$i$i$i$i96$i = $1577;$other1$sroa$4$1$i$i$i$i97$i = $1576;
         }
         $switch$i$i$i$i99$i = ($$sink$i$i$i$i60$i$i$i$i93$i|0)==(0);
         if ($switch$i$i$i$i99$i) {
          label = 491;
          break;
         }
         if ($$sink$i$i$i$i$i$i$i$i98$i) {
          label = 492;
          break;
         }
         $1578 = ($_10$sroa$6$1$i$i$i$i91$i|0)==($_12$sroa$6$1$i$i$i$i96$i|0);
         if ($1578) {
          $_12$sroa$6$0$i$i$i$i86$i = $_10$sroa$6$1$i$i$i$i91$i;$other1$sroa$4$0$i$i$i$i87$i = $other1$sroa$4$1$i$i$i$i97$i;$self$sroa$4$0$i$i$i$i88$i = $self$sroa$4$1$i$i$i$i92$i;
         } else {
          label = 490;
          break;
         }
        }
        if ((label|0) == 490) {
         label = 0;
         $1579 = ($_10$sroa$6$1$i$i$i$i91$i>>>0)<($_12$sroa$6$1$i$i$i$i96$i>>>0);
         if ($1579) {
          $1593 = $1562;$d$3$i = $d$2$i;
         } else {
          label = 492;
         }
        }
        else if ((label|0) == 491) {
         label = 0;
         if ($$sink$i$i$i$i$i$i$i$i98$i) {
          label = 492;
         } else {
          $1593 = $1562;$d$3$i = $d$2$i;
         }
        }
        if ((label|0) == 492) {
         label = 0;
         $1580 = ($_0$0$sroa$speculated$i$i$i$i83$i|0)==(0);
         if (!($1580)) {
          $1584 = $1455;$iter$sroa$521$057$i$i = 0;$noborrow$0$off058$i$i = 1;
          while(1) {
           $1581 = (((($scale$i100)) + 4|0) + ($iter$sroa$521$057$i$i<<2)|0);
           $1582 = (($iter$sroa$521$057$i$i) + 1)|0;
           $1583 = HEAP32[$1584>>2]|0;
           $1585 = HEAP32[$1581>>2]|0;
           $1586 = $1585 ^ -1;
           $$arith7 = (($1583) + ($1586))|0;
           $$overflow8 = ($$arith7>>>0)<($1583>>>0);
           $$$i$i81$i = $noborrow$0$off058$i$i&1;
           $$arith = (($$arith7) + ($$$i$i81$i))|0;
           $$overflow = ($$arith>>>0)<($$arith7>>>0);
           $brmerge$i$i$i160 = $$overflow8 | $$overflow;
           HEAP32[$1584>>2] = $$arith;
           $1587 = ($1582>>>0)<($_0$0$sroa$speculated$i$i$i$i83$i>>>0);
           $1588 = (((($mant$i99)) + 4|0) + ($1582<<2)|0);
           if ($1587) {
            $1584 = $1588;$iter$sroa$521$057$i$i = $1582;$noborrow$0$off058$i$i = $brmerge$i$i$i160;
           } else {
            break;
           }
          }
          if (!($brmerge$i$i$i160)) {
           label = 495;
           break;
          }
         }
         HEAP32[$mant$i99>>2] = $_0$0$sroa$speculated$i$i$i$i83$i;
         $1589 = (($d$2$i) + 1)<<24>>24;
         $1593 = $_0$0$sroa$speculated$i$i$i$i83$i;$d$3$i = $1589;
        }
        $1590 = ($iter$sroa$0$0379$i>>>0)<($957>>>0);
        if (!($1590)) {
         label = 535;
         break;
        }
        $1591 = (($buf) + ($iter$sroa$0$0379$i)|0);
        $1592 = (($d$3$i) + 48)<<24>>24;
        HEAP8[$1591>>0] = $1592;
        $1594 = ($1593>>>0)>(40);
        if ($1594) {
         label = 499;
         break;
        }
        $1595 = (((($mant$i99)) + 4|0) + ($1593<<2)|0);
        $1596 = ($1593|0)==(0);
        do {
         if ($1596) {
          $sz$0$i63$i = 0;
         } else {
          $carry$021$i58$i = 0;$iter$sroa$0$0$in20$i59$i = $1455;
          while(1) {
           $1599 = ((($iter$sroa$0$0$in20$i59$i)) + 4|0);
           $1600 = HEAP32[$iter$sroa$0$0$in20$i59$i>>2]|0;
           $1601 = (___muldi3(($1600|0),0,10,0)|0);
           $1602 = tempRet0;
           $1603 = (_i64Add(($1601|0),($1602|0),($carry$021$i58$i|0),0)|0);
           $1597 = tempRet0;
           HEAP32[$iter$sroa$0$0$in20$i59$i>>2] = $1603;
           $1604 = ($1599|0)==($1595|0);
           if ($1604) {
            break;
           } else {
            $carry$021$i58$i = $1597;$iter$sroa$0$0$in20$i59$i = $1599;
           }
          }
          $1598 = ($1597|0)==(0);
          if ($1598) {
           $sz$0$i63$i = $1593;
           break;
          }
          $1605 = ($1593>>>0)<(40);
          if (!($1605)) {
           label = 505;
           break L186;
          }
          HEAP32[$1595>>2] = $1597;
          $1606 = (($1593) + 1)|0;
          $sz$0$i63$i = $1606;
         }
        } while(0);
        HEAP32[$mant$i99>>2] = $sz$0$i63$i;
        $1607 = ($$271$i>>>0)>($1608>>>0);
        $1609 = (($1608) + 1)|0;
        if ($1607) {
         $iter$sroa$0$0379$i$phi = $1608;$1459 = $sz$0$i63$i;$1608 = $1609;$iter$sroa$0$0379$i = $iter$sroa$0$0379$i$phi;
        } else {
         label = 416;
         break;
        }
       }
       switch (label|0) {
        case 416: {
         $1610 = $1560;$1625 = $sz$0$i63$i;$1824 = 0;$len$0260$i = $$271$i;
         break L183;
         break;
        }
        case 418: {
         __ZN4core5slice20slice_index_len_fail17hed923256c072a803E($1459,40);
         // unreachable;
         break;
        }
        case 422: {
         $1467 = ($$271$i>>>0)<($iter$sroa$0$0379$i>>>0);
         if ($1467) {
          __ZN4core5slice22slice_index_order_fail17h0bf73460ffe8be02E($iter$sroa$0$0379$i,$$271$i);
          // unreachable;
         }
         $1468 = ($$271$i>>>0)>($957>>>0);
         if ($1468) {
          __ZN4core5slice20slice_index_len_fail17hed923256c072a803E($$271$i,$957);
          // unreachable;
         }
         $1469 = (($$271$i) - ($iter$sroa$0$0379$i))|0;
         $1470 = ($1469|0)==(0);
         if (!($1470)) {
          $1471 = (($buf) + ($iter$sroa$0$0379$i)|0);
          _memset(($1471|0),48,($1469|0))|0;
         }
         $1654 = $k$0$i154;$tmp_ret$i16$sroa$0$1 = $$271$i;
         break L92;
         break;
        }
        case 429: {
         __ZN4core5slice20slice_index_len_fail17hed923256c072a803E($_0$0$sroa$speculated$i$i$i$i130$i,40);
         // unreachable;
         break;
        }
        case 444: {
         __ZN4core9panicking5panic17ha7507e8e32961bfeE(6844);
         // unreachable;
         break;
        }
        case 447: {
         __ZN4core5slice20slice_index_len_fail17hed923256c072a803E($_0$0$sroa$speculated$i$i$i$i170$i,40);
         // unreachable;
         break;
        }
        case 461: {
         __ZN4core9panicking5panic17ha7507e8e32961bfeE(6844);
         // unreachable;
         break;
        }
        case 464: {
         __ZN4core5slice20slice_index_len_fail17hed923256c072a803E($_0$0$sroa$speculated$i$i$i$i209$i,40);
         // unreachable;
         break;
        }
        case 478: {
         __ZN4core9panicking5panic17ha7507e8e32961bfeE(6844);
         // unreachable;
         break;
        }
        case 481: {
         __ZN4core5slice20slice_index_len_fail17hed923256c072a803E($_0$0$sroa$speculated$i$i$i$i83$i,40);
         // unreachable;
         break;
        }
        case 495: {
         __ZN4core9panicking5panic17ha7507e8e32961bfeE(6844);
         // unreachable;
         break;
        }
        case 499: {
         __ZN4core5slice20slice_index_len_fail17hed923256c072a803E($1593,40);
         // unreachable;
         break;
        }
        case 505: {
         __ZN4core9panicking18panic_bounds_check17hd14a5808e41829e9E(22904,104,267,$1593,40);
         // unreachable;
         break;
        }
        case 535: {
         __ZN4core9panicking18panic_bounds_check17hd14a5808e41829e9E(23048,121,301,$iter$sroa$0$0379$i,$957);
         // unreachable;
         break;
        }
       }
      }
     } while(0);
     $1611 = ($1610>>>0)>(40);
     if ($1611) {
      __ZN4core5slice20slice_index_len_fail17hed923256c072a803E($1610,40);
      // unreachable;
     }
     $1612 = (((($scale$i100)) + 4|0) + ($1610<<2)|0);
     $1613 = ($1610|0)==(0);
     do {
      if ($1613) {
       $sz$0$i$i173 = 0;
      } else {
       $carry$021$i$i168 = 0;$iter$sroa$0$0$in20$i$i169 = $1412;
       while(1) {
        $1616 = ((($iter$sroa$0$0$in20$i$i169)) + 4|0);
        $1617 = HEAP32[$iter$sroa$0$0$in20$i$i169>>2]|0;
        $1618 = (___muldi3(($1617|0),0,5,0)|0);
        $1619 = tempRet0;
        $1620 = (_i64Add(($1618|0),($1619|0),($carry$021$i$i168|0),0)|0);
        $1614 = tempRet0;
        HEAP32[$iter$sroa$0$0$in20$i$i169>>2] = $1620;
        $1621 = ($1616|0)==($1612|0);
        if ($1621) {
         break;
        } else {
         $carry$021$i$i168 = $1614;$iter$sroa$0$0$in20$i$i169 = $1616;
        }
       }
       $1615 = ($1614|0)==(0);
       if ($1615) {
        $sz$0$i$i173 = $1610;
        break;
       }
       $1622 = ($1610>>>0)<(40);
       if ($1622) {
        HEAP32[$1612>>2] = $1614;
        $1623 = (($1610) + 1)|0;
        $sz$0$i$i173 = $1623;
        break;
       } else {
        __ZN4core9panicking18panic_bounds_check17hd14a5808e41829e9E(22904,104,267,$1610,40);
        // unreachable;
       }
      }
     } while(0);
     HEAP32[$scale$i100>>2] = $sz$0$i$i173;
     $1624 = ($sz$0$i$i173>>>0)>=($1625>>>0);
     $_0$0$sroa$speculated$i$i$i174 = $1624 ? $sz$0$i$i173 : $1625;
     $1626 = ($_0$0$sroa$speculated$i$i$i174>>>0)>(40);
     if ($1626) {
      __ZN4core5slice20slice_index_len_fail17hed923256c072a803E($_0$0$sroa$speculated$i$i$i174,40);
      // unreachable;
     }
     $1627 = ((($mant$i99)) + 4|0);
     $1628 = (((($mant$i99)) + 4|0) + ($_0$0$sroa$speculated$i$i$i174<<2)|0);
     $1629 = $1628;
     $1630 = (((($scale$i100)) + 4|0) + ($_0$0$sroa$speculated$i$i$i174<<2)|0);
     $1631 = $1630;
     $_12$sroa$6$0$i$i$i178 = 0;$other1$sroa$4$0$i$i$i179 = $1631;$self$sroa$4$0$i$i$i180 = $1629;
     while(1) {
      $1632 = $self$sroa$4$0$i$i$i180;
      $1633 = ($1632|0)==($1627|0);
      if ($1633) {
       $$sink$i$i$i$i60$i$i$i185 = 0;$_10$sroa$6$1$i$i$i183 = $_12$sroa$6$0$i$i$i178;$self$sroa$4$1$i$i$i184 = $self$sroa$4$0$i$i$i180;
      } else {
       $1634 = ((($1632)) + -4|0);
       $1635 = $1634;
       $1636 = HEAP32[$1634>>2]|0;
       $$sink$i$i$i$i60$i$i$i185 = 1;$_10$sroa$6$1$i$i$i183 = $1636;$self$sroa$4$1$i$i$i184 = $1635;
      }
      $1637 = $other1$sroa$4$0$i$i$i179;
      $1638 = ($1637|0)==($1412|0);
      if ($1638) {
       $$sink$i$i$i$i$i$i$i190 = 1;$_12$sroa$6$1$i$i$i188 = $_12$sroa$6$0$i$i$i178;$other1$sroa$4$1$i$i$i189 = $other1$sroa$4$0$i$i$i179;
      } else {
       $1639 = ((($1637)) + -4|0);
       $1640 = $1639;
       $1641 = HEAP32[$1639>>2]|0;
       $$sink$i$i$i$i$i$i$i190 = 0;$_12$sroa$6$1$i$i$i188 = $1641;$other1$sroa$4$1$i$i$i189 = $1640;
      }
      $switch$i$i$i191 = ($$sink$i$i$i$i60$i$i$i185|0)==(0);
      if ($switch$i$i$i191) {
       label = 526;
       break;
      }
      if ($$sink$i$i$i$i$i$i$i190) {
       label = 531;
       break;
      }
      $1642 = ($_10$sroa$6$1$i$i$i183|0)==($_12$sroa$6$1$i$i$i188|0);
      if ($1642) {
       $_12$sroa$6$0$i$i$i178 = $_10$sroa$6$1$i$i$i183;$other1$sroa$4$0$i$i$i179 = $other1$sroa$4$1$i$i$i189;$self$sroa$4$0$i$i$i180 = $self$sroa$4$1$i$i$i184;
      } else {
       label = 525;
       break;
      }
     }
     do {
      if ((label|0) == 525) {
       $not$$i = ($_10$sroa$6$1$i$i$i183>>>0)<($_12$sroa$6$1$i$i$i188>>>0);
       if ($not$$i) {
        $k$2$i198 = $k$0$i154;$len$3$i = $len$0260$i;
       } else {
        label = 531;
       }
      }
      else if ((label|0) == 526) {
       if (!($$sink$i$i$i$i$i$i$i190)) {
        $k$2$i198 = $k$0$i154;$len$3$i = $len$0260$i;
        break;
       }
       if ($1824) {
        label = 531;
        break;
       }
       $1643 = (($len$0260$i) + -1)|0;
       $1644 = ($1643>>>0)<($957>>>0);
       if ($1644) {
        $1645 = (($buf) + ($1643)|0);
        $1646 = HEAP8[$1645>>0]|0;
        $1647 = $1646 & 1;
        $not$272$i = ($1647<<24>>24)==(0);
        if ($not$272$i) {
         $k$2$i198 = $k$0$i154;$len$3$i = $len$0260$i;
         break;
        } else {
         label = 531;
         break;
        }
       } else {
        __ZN4core9panicking18panic_bounds_check17hd14a5808e41829e9E(22426,99,524,$1643,$957);
        // unreachable;
       }
      }
     } while(0);
     do {
      if ((label|0) == 531) {
       $1648 = (__ZN4core3num7flt2dec8round_up17h7add2f9e6cce7cd7E($buf,$957,$len$0260$i)|0);
       $_250$sroa$0$0$extract$trunc$i = $1648&255;
       $_250$sroa$4$0$extract$shift$i = ($1648&65535) >>> 8;
       $_250$sroa$4$0$extract$trunc$i = $_250$sroa$4$0$extract$shift$i&255;
       $switch6$i = ($_250$sroa$0$0$extract$trunc$i<<24>>24)==(0);
       if ($switch6$i) {
        $k$2$i198 = $k$0$i154;$len$3$i = $len$0260$i;
        break;
       }
       $1649 = (($k$0$i154) + 1)<<16>>16;
       $1650 = ($1649<<16>>16)>($limit$0$i<<16>>16);
       $1651 = ($len$0260$i>>>0)<($957>>>0);
       $or$cond$i197 = $1650 & $1651;
       if (!($or$cond$i197)) {
        $k$2$i198 = $1649;$len$3$i = $len$0260$i;
        break;
       }
       $1652 = (($buf) + ($len$0260$i)|0);
       HEAP8[$1652>>0] = $_250$sroa$4$0$extract$trunc$i;
       $1653 = (($len$0260$i) + 1)|0;
       $k$2$i198 = $1649;$len$3$i = $1653;
      }
     } while(0);
     $1654 = $k$2$i198;$tmp_ret$i16$sroa$0$1 = $len$3$i;
    }
   } while(0);
   $1655 = ($1654<<16>>16)>($limit$0$i<<16>>16);
   if (!($1655)) {
    $1692 = ($932|0)==(0);
    HEAP16[$parts>>1] = 2;
    $1693 = ((($parts)) + 4|0);
    if ($1692) {
     HEAP32[$1693>>2] = 24524;
     $1700 = ((($parts)) + 8|0);
     HEAP32[$1700>>2] = 1;
     HEAP32[$formatted>>2] = $_0$sroa$0$0$i$i401143;
     $1701 = ((($formatted)) + 4|0);
     HEAP32[$1701>>2] = $_0$sroa$12$0$i$i421146;
     $1702 = ((($formatted)) + 8|0);
     HEAP32[$1702>>2] = $parts;
     $1703 = ((($formatted)) + 12|0);
     HEAP32[$1703>>2] = 1;
     $1704 = $_0$sroa$0$0$i$i401143;
     $1705 = $parts;
     $1711 = $1704;$1713 = $_0$sroa$12$0$i$i421146;$1715 = $1705;$1717 = 1;
     break;
    } else {
     HEAP32[$1693>>2] = 23819;
     $1694 = ((($parts)) + 8|0);
     HEAP32[$1694>>2] = 2;
     HEAP16[$_15$sroa$0$0$$sroa_idx$1>>1] = 0;
     HEAP32[$_15$sroa$47$0$$sroa_idx8$1>>2] = $932;
     HEAP32[$formatted>>2] = $_0$sroa$0$0$i$i401143;
     $1695 = ((($formatted)) + 4|0);
     HEAP32[$1695>>2] = $_0$sroa$12$0$i$i421146;
     $1696 = ((($formatted)) + 8|0);
     HEAP32[$1696>>2] = $parts;
     $1697 = ((($formatted)) + 12|0);
     HEAP32[$1697>>2] = 2;
     $1698 = $_0$sroa$0$0$i$i401143;
     $1699 = $parts;
     $1711 = $1698;$1713 = $_0$sroa$12$0$i$i421146;$1715 = $1699;$1717 = 2;
     break;
    }
   }
   $1656 = ($tmp_ret$i16$sroa$0$1>>>0)>(1024);
   if ($1656) {
    __ZN4core5slice20slice_index_len_fail17hed923256c072a803E($tmp_ret$i16$sroa$0$1,1024);
    // unreachable;
   }
   $1657 = ($tmp_ret$i16$sroa$0$1|0)==(0);
   if ($1657) {
    __ZN4core9panicking5panic17ha7507e8e32961bfeE(7180);
    // unreachable;
   }
   $1658 = HEAP8[$buf>>0]|0;
   $1659 = ($1658&255)<(49);
   if ($1659) {
    __ZN4core9panicking5panic17ha7507e8e32961bfeE(7200);
    // unreachable;
   }
   $1660 = ($1654<<16>>16)<(1);
   $1661 = $1654 << 16 >> 16;
   do {
    if ($1660) {
     $1665 = (0 - ($1661))|0;
     HEAP16[$parts>>1] = 2;
     $1666 = ((($parts)) + 4|0);
     HEAP32[$1666>>2] = 23819;
     $1667 = ((($parts)) + 8|0);
     HEAP32[$1667>>2] = 2;
     HEAP16[$_15$sroa$0$0$$sroa_idx$1>>1] = 0;
     HEAP32[$_15$sroa$47$0$$sroa_idx8$1>>2] = $1665;
     HEAP16[$_15$sroa$0$0$$sroa_idx$2>>1] = 2;
     $1668 = ((($parts)) + 28|0);
     HEAP32[$1668>>2] = $buf;
     $1669 = ((($parts)) + 32|0);
     HEAP32[$1669>>2] = $tmp_ret$i16$sroa$0$1;
     $1670 = ($932>>>0)>($tmp_ret$i16$sroa$0$1>>>0);
     if ($1670) {
      $1671 = (($932) - ($tmp_ret$i16$sroa$0$1))|0;
      $1672 = ($1671>>>0)>($1665>>>0);
      if ($1672) {
       $1673 = (($1671) + ($1661))|0;
       HEAP16[$_15$sroa$0$0$$sroa_idx$3>>1] = 0;
       HEAP32[$_15$sroa$47$0$$sroa_idx8$3>>2] = $1673;
       $$sink$i$index = $parts;$$sink$i$index2 = 4;
      } else {
       label = 546;
      }
     } else {
      label = 546;
     }
     if ((label|0) == 546) {
      $$sink$i$index = $parts;$$sink$i$index2 = 3;
     }
     $_0$sroa$0$1$i = $$sink$i$index;$_0$sroa$7$1$i70 = $$sink$i$index2;
    } else {
     $1662 = ($1661>>>0)<($tmp_ret$i16$sroa$0$1>>>0);
     HEAP16[$parts>>1] = 2;
     $1663 = ((($parts)) + 4|0);
     HEAP32[$1663>>2] = $buf;
     $1664 = ((($parts)) + 8|0);
     if ($1662) {
      HEAP32[$1664>>2] = $1661;
      HEAP16[$_15$sroa$0$0$$sroa_idx$1>>1] = 2;
      $1674 = ((($parts)) + 16|0);
      HEAP32[$1674>>2] = 23821;
      $1675 = ((($parts)) + 20|0);
      HEAP32[$1675>>2] = 1;
      $1676 = (($buf) + ($1661)|0);
      $1677 = (($tmp_ret$i16$sroa$0$1) - ($1661))|0;
      HEAP16[$_15$sroa$0$0$$sroa_idx$2>>1] = 2;
      $1678 = ((($parts)) + 28|0);
      HEAP32[$1678>>2] = $1676;
      $1679 = ((($parts)) + 32|0);
      HEAP32[$1679>>2] = $1677;
      $1680 = ($1677>>>0)<($932>>>0);
      if (!($1680)) {
       $_0$sroa$0$1$i = $parts;$_0$sroa$7$1$i70 = 3;
       break;
      }
      $1681 = (($1661) + ($932))|0;
      $1682 = (($1681) - ($tmp_ret$i16$sroa$0$1))|0;
      HEAP16[$_15$sroa$0$0$$sroa_idx$3>>1] = 0;
      HEAP32[$_15$sroa$47$0$$sroa_idx8$3>>2] = $1682;
      $_0$sroa$0$1$i = $parts;$_0$sroa$7$1$i70 = 4;
      break;
     } else {
      HEAP32[$1664>>2] = $tmp_ret$i16$sroa$0$1;
      $1683 = (($1661) - ($tmp_ret$i16$sroa$0$1))|0;
      HEAP16[$_15$sroa$0$0$$sroa_idx$1>>1] = 0;
      HEAP32[$_15$sroa$47$0$$sroa_idx8$1>>2] = $1683;
      $1684 = ($932|0)==(0);
      if ($1684) {
       $_0$sroa$0$1$i = $parts;$_0$sroa$7$1$i70 = 2;
       break;
      }
      HEAP16[$_15$sroa$0$0$$sroa_idx$2>>1] = 2;
      $1685 = ((($parts)) + 28|0);
      HEAP32[$1685>>2] = 23821;
      $1686 = ((($parts)) + 32|0);
      HEAP32[$1686>>2] = 1;
      HEAP16[$_15$sroa$0$0$$sroa_idx$3>>1] = 0;
      HEAP32[$_15$sroa$47$0$$sroa_idx8$3>>2] = $932;
      $_0$sroa$0$1$i = $parts;$_0$sroa$7$1$i70 = 4;
      break;
     }
    }
   } while(0);
   HEAP32[$formatted>>2] = $_0$sroa$0$0$i$i401143;
   $1687 = ((($formatted)) + 4|0);
   HEAP32[$1687>>2] = $_0$sroa$12$0$i$i421146;
   $1688 = ((($formatted)) + 8|0);
   HEAP32[$1688>>2] = $_0$sroa$0$1$i;
   $1689 = ((($formatted)) + 12|0);
   HEAP32[$1689>>2] = $_0$sroa$7$1$i70;
   $1690 = $_0$sroa$0$0$i$i401143;
   $1691 = $_0$sroa$0$1$i;
   $1711 = $1690;$1713 = $_0$sroa$12$0$i$i421146;$1715 = $1691;$1717 = $_0$sroa$7$1$i70;
  } else {
   $7 = HEAP32[$1>>2]|0;
   $8 = $7 >>> 23;
   $9 = $8 & 255;
   $10 = $9&65535;
   $11 = ($10<<16>>16)==(0);
   $12 = $7 & 8388607;
   $13 = $12 << 1;
   $14 = $12 | 8388608;
   $mantissa$0$i$i$i$i = $11 ? $13 : $14;
   $15 = (($10) + -150)<<16>>16;
   $16 = $mantissa$0$i$i$i$i & 1;
   $17 = $7 & 2147483647;
   $18 = ($17|0)==(0);
   L385: do {
    if ($18) {
     $switch1086 = ($4<<24>>24)==(0);
     $$ = $switch1086 ? 27292 : 23854;
     HEAP16[$parts>>1] = 2;
     $924 = ((($parts)) + 4|0);
     HEAP32[$924>>2] = 24524;
     $925 = ((($parts)) + 8|0);
     HEAP32[$925>>2] = 1;
     HEAP32[$formatted>>2] = $$;
     $926 = ((($formatted)) + 4|0);
     HEAP32[$926>>2] = $3;
     $927 = ((($formatted)) + 8|0);
     HEAP32[$927>>2] = $parts;
     $928 = ((($formatted)) + 12|0);
     HEAP32[$928>>2] = 1;
     $929 = $$;
     $1820 = 1;$1821 = $3;$1822 = $929;
    } else {
     $trunc$i$i$i = $7 & 2139095040;
     $trunc$i$i$i$clear = $trunc$i$i$i & 2147483647;
     $switch$split2D = ($trunc$i$i$i$clear|0)<(2139095040);
     L388: do {
      if ($switch$split2D) {
       switch ($trunc$i$i$i$clear|0) {
       case 0:  {
        break;
       }
       default: {
        label = 5;
        break L388;
       }
       }
       $19 = $16 ^ 1;
       $20 = $19&255;
       $32 = $mantissa$0$i$i$i$i;$34 = 0;$37 = 1;$38 = 0;$decoded$sroa$18$0$i$i$ph = $15;$decoded$sroa$21$0$i$i$ph = $20;
      } else {
       switch ($trunc$i$i$i$clear|0) {
       case 2139095040:  {
        break;
       }
       default: {
        label = 5;
        break L388;
       }
       }
       $not$switch$i$i = ($12|0)==(0);
       $extract$t = $not$switch$i$i&1;
       $30 = ($7|0)<(0);
       $extract$t$clear = $extract$t & 3;
       $switch1161 = ($extract$t$clear&255)<(1);
       if ($switch1161) {
        HEAP16[$parts>>1] = 2;
        $913 = ((($parts)) + 4|0);
        HEAP32[$913>>2] = 24518;
        $914 = ((($parts)) + 8|0);
        HEAP32[$914>>2] = 3;
        HEAP32[$formatted>>2] = 27292;
        $915 = ((($formatted)) + 4|0);
        HEAP32[$915>>2] = 0;
        $916 = ((($formatted)) + 8|0);
        HEAP32[$916>>2] = $parts;
        $917 = ((($formatted)) + 12|0);
        HEAP32[$917>>2] = 1;
        $1820 = 1;$1821 = 0;$1822 = (27292);
        break L385;
       } else {
        $switch$i$i1127 = ($4<<24>>24)!=(1);
        $$19$i$i1128 = $30 ? 23853 : 27292;
        $$21$i$i1129 = $30 ? 23853 : 23854;
        $_0$sroa$0$0$i$i1130 = $switch$i$i1127 ? $$19$i$i1128 : $$21$i$i1129;
        $not$switch$i27$i1131 = $switch$i$i1127 ^ 1;
        $_0$sroa$12$0$shrunk$i$i1132 = $30 | $not$switch$i27$i1131;
        $_0$sroa$12$0$i$i1133 = $_0$sroa$12$0$shrunk$i$i1132&1;
        HEAP16[$parts>>1] = 2;
        $918 = ((($parts)) + 4|0);
        HEAP32[$918>>2] = 24521;
        $919 = ((($parts)) + 8|0);
        HEAP32[$919>>2] = 3;
        HEAP32[$formatted>>2] = $_0$sroa$0$0$i$i1130;
        $920 = ((($formatted)) + 4|0);
        HEAP32[$920>>2] = $_0$sroa$12$0$i$i1133;
        $921 = ((($formatted)) + 8|0);
        HEAP32[$921>>2] = $parts;
        $922 = ((($formatted)) + 12|0);
        HEAP32[$922>>2] = 1;
        $923 = $_0$sroa$0$0$i$i1130;
        $1820 = 1;$1821 = $_0$sroa$12$0$i$i1133;$1822 = $923;
        break L385;
       }
      }
     } while(0);
     do {
      if ((label|0) == 5) {
       $21 = ($mantissa$0$i$i$i$i|0)==(8388608);
       if ($21) {
        $22 = (($10) + -152)<<16>>16;
        $23 = $16 ^ 1;
        $24 = $23&255;
        $32 = 33554432;$34 = 0;$37 = 2;$38 = 0;$decoded$sroa$18$0$i$i$ph = $22;$decoded$sroa$21$0$i$i$ph = $24;
        break;
       } else {
        $25 = (_bitshift64Shl(($mantissa$0$i$i$i$i|0),0,1)|0);
        $26 = tempRet0;
        $27 = (($10) + -151)<<16>>16;
        $28 = $16 ^ 1;
        $29 = $28&255;
        $32 = $25;$34 = $26;$37 = 1;$38 = 0;$decoded$sroa$18$0$i$i$ph = $27;$decoded$sroa$21$0$i$i$ph = $29;
        break;
       }
      }
     } while(0);
     $31 = ($7|0)<(0);
     $switch$i$i1113 = ($4<<24>>24)!=(1);
     $$19$i$i1114 = $31 ? 23853 : 27292;
     $$21$i$i1115 = $31 ? 23853 : 23854;
     $_0$sroa$0$0$i$i1116 = $switch$i$i1113 ? $$19$i$i1114 : $$21$i$i1115;
     $not$switch$i27$i1117 = $switch$i$i1113 ^ 1;
     $_0$sroa$12$0$shrunk$i$i1118 = $31 | $not$switch$i27$i1117;
     $_0$sroa$12$0$i$i1119 = $_0$sroa$12$0$shrunk$i$i1118&1;
     $33 = ($32|0)==(0);
     $35 = ($34|0)==(0);
     $36 = $33 & $35;
     if ($36) {
      __ZN4core9panicking5panic17ha7507e8e32961bfeE(7000);
      // unreachable;
     }
     $39 = (_i64Add(($32|0),($34|0),($37|0),($38|0))|0);
     $40 = tempRet0;
     $41 = ($40>>>0)<($34>>>0);
     $42 = ($39>>>0)<($32>>>0);
     $43 = ($40|0)==($34|0);
     $44 = $43 & $42;
     $45 = $41 | $44;
     if ($45) {
      __ZN4core9panicking5panic17ha7507e8e32961bfeE(7020);
      // unreachable;
     }
     $46 = ($34>>>0)<(0);
     $47 = ($32>>>0)<(1);
     $48 = ($34|0)==(0);
     $49 = $48 & $47;
     $50 = $46 | $49;
     if ($50) {
      __ZN4core9panicking5panic17ha7507e8e32961bfeE(7040);
      // unreachable;
     }
     $51 = (_i64Add(($37|0),($38|0),($32|0),($34|0))|0);
     $52 = tempRet0;
     $53 = ($52>>>0)>(536870911);
     $54 = ($51>>>0)>(4294967295);
     $55 = ($52|0)==(536870911);
     $56 = $55 & $54;
     $57 = $53 | $56;
     if ($57) {
      __ZN4core9panicking5panic17ha7507e8e32961bfeE(7060);
      // unreachable;
     }
     $58 = ($52>>>0)<(1);
     $59 = ($51>>>0)<(0);
     $60 = ($52|0)==(1);
     $61 = $60 & $59;
     $62 = $58 | $61;
     $63 = (($decoded$sroa$18$0$i$i$ph) + -32)<<16>>16;
     $64 = $62 ? 0 : $51;
     $65 = $62 ? $51 : $52;
     $e$0$i$i = $62 ? $63 : $decoded$sroa$18$0$i$i$ph;
     $66 = ($65>>>0)<(65536);
     $67 = ($64>>>0)<(0);
     $68 = ($65|0)==(65536);
     $69 = $68 & $67;
     $70 = $66 | $69;
     $71 = (_bitshift64Shl(($64|0),($65|0),16)|0);
     $72 = tempRet0;
     $73 = (($e$0$i$i) + -16)<<16>>16;
     $74 = $70 ? $71 : $64;
     $75 = $70 ? $72 : $65;
     $e$1$i$i = $70 ? $73 : $e$0$i$i;
     $76 = ($75>>>0)<(16777216);
     $77 = ($74>>>0)<(0);
     $78 = ($75|0)==(16777216);
     $79 = $78 & $77;
     $80 = $76 | $79;
     $81 = (_bitshift64Shl(($74|0),($75|0),8)|0);
     $82 = tempRet0;
     $83 = (($e$1$i$i) + -8)<<16>>16;
     $84 = $80 ? $81 : $74;
     $85 = $80 ? $82 : $75;
     $e$2$i$i = $80 ? $83 : $e$1$i$i;
     $86 = ($85>>>0)<(268435456);
     $87 = ($84>>>0)<(0);
     $88 = ($85|0)==(268435456);
     $89 = $88 & $87;
     $90 = $86 | $89;
     $91 = (_bitshift64Shl(($84|0),($85|0),4)|0);
     $92 = tempRet0;
     $93 = (($e$2$i$i) + -4)<<16>>16;
     $94 = $90 ? $91 : $84;
     $95 = $90 ? $92 : $85;
     $e$3$i$i = $90 ? $93 : $e$2$i$i;
     $96 = ($95>>>0)<(1073741824);
     $97 = ($94>>>0)<(0);
     $98 = ($95|0)==(1073741824);
     $99 = $98 & $97;
     $100 = $96 | $99;
     $101 = (_bitshift64Shl(($94|0),($95|0),2)|0);
     $102 = tempRet0;
     $103 = (($e$3$i$i) + -2)<<16>>16;
     $104 = $100 ? $101 : $94;
     $105 = $100 ? $102 : $95;
     $e$4$i$i = $100 ? $103 : $e$3$i$i;
     $106 = (_bitshift64Lshr(($104|0),($105|0),63)|0);
     $107 = tempRet0;
     $108 = $106 ^ 1;
     $109 = (_bitshift64Shl(($104|0),($105|0),($108|0))|0);
     $110 = tempRet0;
     $111 = (_bitshift64Ashr(($104|0),($105|0),63)|0);
     $112 = tempRet0;
     $113 = $111&65535;
     $$not$i$i = $113 ^ -1;
     $e$5$i$i = (($e$4$i$i) + ($$not$i$i))<<16>>16;
     $114 = (_i64Add(($32|0),($34|0),-1,-1)|0);
     $115 = tempRet0;
     $116 = $_73$i;
     $117 = $116;
     HEAP32[$117>>2] = $114;
     $118 = (($116) + 4)|0;
     $119 = $118;
     HEAP32[$119>>2] = $115;
     $120 = ((($_73$i)) + 8|0);
     HEAP16[$120>>1] = $decoded$sroa$18$0$i$i$ph;
     $121 = (($decoded$sroa$18$0$i$i$ph) - ($e$5$i$i))<<16>>16;
     $122 = ($121<<16>>16)<(0);
     if ($122) {
      __ZN4core9panicking5panic17ha7507e8e32961bfeE(7080);
      // unreachable;
     }
     $123 = $121&65535;
     $124 = $123 & 63;
     $125 = (_bitshift64Shl(($114|0),($115|0),($124|0))|0);
     $126 = tempRet0;
     $127 = (_bitshift64Lshr(($125|0),($126|0),($124|0))|0);
     $128 = tempRet0;
     $129 = $_20$i$i;
     $130 = $129;
     HEAP32[$130>>2] = $127;
     $131 = (($129) + 4)|0;
     $132 = $131;
     HEAP32[$132>>2] = $128;
     HEAP32[$left_val$i$i>>2] = $_20$i$i;
     HEAP32[$right_val$i$i>>2] = $_73$i;
     $133 = ($127|0)==($114|0);
     $134 = ($128|0)==($115|0);
     $135 = $133 & $134;
     if (!($135)) {
      $136 = $left_val$i$i;
      $137 = $right_val$i$i;
      HEAP32[$_38$i$i>>2] = $136;
      $138 = ((($_38$i$i)) + 4|0);
      HEAP32[$138>>2] = (372);
      $139 = ((($_38$i$i)) + 8|0);
      HEAP32[$139>>2] = $137;
      $140 = ((($_38$i$i)) + 12|0);
      HEAP32[$140>>2] = (372);
      HEAP32[$_33$i$i>>2] = 6476;
      $141 = ((($_33$i$i)) + 4|0);
      HEAP32[$141>>2] = 3;
      $_6$sroa$0$0$$sroa_idx$i$i$i = ((($_33$i$i)) + 8|0);
      HEAP32[$_6$sroa$0$0$$sroa_idx$i$i$i>>2] = 0;
      $142 = ((($_33$i$i)) + 16|0);
      HEAP32[$142>>2] = $_38$i$i;
      $143 = ((($_33$i$i)) + 20|0);
      HEAP32[$143>>2] = 2;
      __ZN4core9panicking9panic_fmt17hfa35599633a0afa2E($_33$i$i,23602,107,86);
      // unreachable;
     }
     $144 = $_81$i;
     $145 = $144;
     HEAP32[$145>>2] = $32;
     $146 = (($144) + 4)|0;
     $147 = $146;
     HEAP32[$147>>2] = $34;
     $148 = ((($_81$i)) + 8|0);
     HEAP16[$148>>1] = $decoded$sroa$18$0$i$i$ph;
     $149 = (_bitshift64Shl(($32|0),($34|0),($124|0))|0);
     $150 = tempRet0;
     $151 = (_bitshift64Lshr(($149|0),($150|0),($124|0))|0);
     $152 = tempRet0;
     $153 = $_20$i43$i;
     $154 = $153;
     HEAP32[$154>>2] = $151;
     $155 = (($153) + 4)|0;
     $156 = $155;
     HEAP32[$156>>2] = $152;
     HEAP32[$left_val$i44$i>>2] = $_20$i43$i;
     HEAP32[$right_val$i45$i>>2] = $_81$i;
     $157 = ($151|0)==($32|0);
     $158 = ($152|0)==($34|0);
     $159 = $157 & $158;
     if (!($159)) {
      $160 = $left_val$i44$i;
      $161 = $right_val$i45$i;
      HEAP32[$_38$i$i>>2] = $160;
      $162 = ((($_38$i$i)) + 4|0);
      HEAP32[$162>>2] = (372);
      $163 = ((($_38$i$i)) + 8|0);
      HEAP32[$163>>2] = $161;
      $164 = ((($_38$i$i)) + 12|0);
      HEAP32[$164>>2] = (372);
      HEAP32[$_33$i46$i>>2] = 6476;
      $165 = ((($_33$i46$i)) + 4|0);
      HEAP32[$165>>2] = 3;
      $_6$sroa$0$0$$sroa_idx$i$i50$i = ((($_33$i46$i)) + 8|0);
      HEAP32[$_6$sroa$0$0$$sroa_idx$i$i50$i>>2] = 0;
      $166 = ((($_33$i46$i)) + 16|0);
      HEAP32[$166>>2] = $_38$i$i;
      $167 = ((($_33$i46$i)) + 20|0);
      HEAP32[$167>>2] = 2;
      __ZN4core9panicking9panic_fmt17hfa35599633a0afa2E($_33$i46$i,23602,107,86);
      // unreachable;
     }
     $168 = (-96 - ($e$5$i$i))<<16>>16;
     $169 = $168 << 16 >> 16;
     $170 = ($169*80)|0;
     $171 = (($170) + 86960)|0;
     $172 = (($171|0) / 2126)&-1;
     $173 = ($172>>>0)<(81);
     if (!($173)) {
      __ZN4core9panicking18panic_bounds_check17hd14a5808e41829e9E(23424,120,131,$172,81);
      // unreachable;
     }
     $174 = (3672 + ($172<<4)|0);
     $175 = $174;
     $176 = $175;
     $177 = HEAP32[$176>>2]|0;
     $178 = (($175) + 4)|0;
     $179 = $178;
     $180 = HEAP32[$179>>2]|0;
     $181 = (((3672 + ($172<<4)|0)) + 8|0);
     $182 = HEAP16[$181>>1]|0;
     $183 = (((3672 + ($172<<4)|0)) + 10|0);
     $184 = HEAP16[$183>>1]|0;
     $185 = (___muldi3(($180|0),0,($110|0),0)|0);
     $186 = tempRet0;
     $187 = (___muldi3(($180|0),0,($109|0),0)|0);
     $188 = tempRet0;
     $189 = (___muldi3(($177|0),0,($110|0),0)|0);
     $190 = tempRet0;
     (___muldi3(($177|0),0,($109|0),0)|0);
     $191 = tempRet0;
     $192 = (_i64Add(($189|0),0,-2147483648,0)|0);
     $193 = tempRet0;
     $194 = (_i64Add(($192|0),($193|0),($191|0),0)|0);
     $195 = tempRet0;
     (_i64Add(($194|0),($195|0),($187|0),0)|0);
     $196 = tempRet0;
     $197 = (($e$5$i$i) + ($182))<<16>>16;
     $198 = (___muldi3(($180|0),0,($126|0),0)|0);
     $199 = tempRet0;
     $200 = (___muldi3(($180|0),0,($125|0),0)|0);
     $201 = tempRet0;
     $202 = (___muldi3(($177|0),0,($126|0),0)|0);
     $203 = tempRet0;
     (___muldi3(($177|0),0,($125|0),0)|0);
     $204 = tempRet0;
     $205 = (_i64Add(($202|0),0,-2147483648,0)|0);
     $206 = tempRet0;
     $207 = (_i64Add(($205|0),($206|0),($204|0),0)|0);
     $208 = tempRet0;
     (_i64Add(($207|0),($208|0),($200|0),0)|0);
     $209 = tempRet0;
     $210 = (___muldi3(($180|0),0,($150|0),0)|0);
     $211 = tempRet0;
     $212 = (___muldi3(($180|0),0,($149|0),0)|0);
     $213 = tempRet0;
     $214 = (___muldi3(($177|0),0,($150|0),0)|0);
     $215 = tempRet0;
     (___muldi3(($177|0),0,($149|0),0)|0);
     $216 = tempRet0;
     $217 = (_i64Add(($214|0),0,-2147483648,0)|0);
     $218 = tempRet0;
     $219 = (_i64Add(($217|0),($218|0),($216|0),0)|0);
     $220 = tempRet0;
     (_i64Add(($219|0),($220|0),($212|0),0)|0);
     $221 = tempRet0;
     $222 = (_i64Add(($215|0),0,($210|0),($211|0))|0);
     $223 = tempRet0;
     $224 = (_i64Add(($222|0),($223|0),($213|0),0)|0);
     $225 = tempRet0;
     $226 = (_i64Add(($224|0),($225|0),($221|0),0)|0);
     $227 = tempRet0;
     $228 = (_i64Add(($185|0),($186|0),1,0)|0);
     $229 = tempRet0;
     $230 = (_i64Add(($228|0),($229|0),($190|0),0)|0);
     $231 = tempRet0;
     $232 = (_i64Add(($230|0),($231|0),($188|0),0)|0);
     $233 = tempRet0;
     $234 = (_i64Add(($232|0),($233|0),($196|0),0)|0);
     $235 = tempRet0;
     $236 = (0 - ($197))<<16>>16;
     $237 = $236&65535;
     $238 = $237 & 63;
     $239 = (_bitshift64Lshr(($234|0),($235|0),($238|0))|0);
     $240 = tempRet0;
     $241 = (_bitshift64Shl(1,0,($238|0))|0);
     $242 = tempRet0;
     $243 = (_i64Add(($241|0),($242|0),-1,-1)|0);
     $244 = tempRet0;
     $245 = $234 & $243;
     $246 = $235 & $244;
     $247 = ($239>>>0)<(10000);
     do {
      if ($247) {
       $248 = ($239>>>0)<(100);
       if ($248) {
        $250 = ($239>>>0)<(10);
        $$$i = $250 ? 1 : 10;
        $251 = $250&1;
        $$119$i = $251 ^ 1;
        $tmp_ret4$sroa$0$0$i = $$119$i;$tmp_ret4$sroa$11$0$i = $$$i;
        break;
       } else {
        $252 = ($239>>>0)<(1000);
        $$120$i = $252 ? 100 : 1000;
        $$121$i = $252 ? 2 : 3;
        $tmp_ret4$sroa$0$0$i = $$121$i;$tmp_ret4$sroa$11$0$i = $$120$i;
        break;
       }
      } else {
       $249 = ($239>>>0)<(1000000);
       if ($249) {
        $253 = ($239>>>0)<(100000);
        $$122$i = $253 ? 10000 : 100000;
        $$123$i = $253 ? 4 : 5;
        $tmp_ret4$sroa$0$0$i = $$123$i;$tmp_ret4$sroa$11$0$i = $$122$i;
        break;
       }
       $254 = ($239>>>0)<(100000000);
       if ($254) {
        $255 = ($239>>>0)<(10000000);
        $$124$i = $255 ? 1000000 : 10000000;
        $$125$i = $255 ? 6 : 7;
        $tmp_ret4$sroa$0$0$i = $$125$i;$tmp_ret4$sroa$11$0$i = $$124$i;
        break;
       } else {
        $256 = ($239>>>0)<(1000000000);
        $$126$i = $256 ? 100000000 : 1000000000;
        $$127$i = $256 ? 8 : 9;
        $tmp_ret4$sroa$0$0$i = $$127$i;$tmp_ret4$sroa$11$0$i = $$126$i;
        break;
       }
      }
     } while(0);
     $257 = $tmp_ret4$sroa$0$0$i&255;
     $258 = (($257) - ($184))<<16>>16;
     $259 = (($258) + 1)<<16>>16;
     $260 = (_i64Subtract(1,0,($198|0),($199|0))|0);
     $261 = tempRet0;
     $262 = (_i64Subtract(($260|0),($261|0),($203|0),0)|0);
     $263 = tempRet0;
     $264 = (_i64Subtract(($262|0),($263|0),($201|0),0)|0);
     $265 = tempRet0;
     $266 = (_i64Subtract(($264|0),($265|0),($209|0),0)|0);
     $267 = tempRet0;
     $268 = (_i64Add(($266|0),($267|0),($234|0),($235|0))|0);
     $269 = tempRet0;
     $270 = $268 & $243;
     $271 = $269 & $244;
     $272 = $tmp_ret4$sroa$0$0$i&255;
     $i$0159$i = 0;$remainder$0157$i = $239;$ten_kappa$0158$i = $tmp_ret4$sroa$11$0$i;
     while(1) {
      $273 = (($remainder$0157$i>>>0) % ($ten_kappa$0158$i>>>0))&-1;
      $274 = (($remainder$0157$i>>>0) / ($ten_kappa$0158$i>>>0))&-1;
      $275 = $274&255;
      $276 = (($buf) + ($i$0159$i)|0);
      $277 = (($275) + 48)<<24>>24;
      HEAP8[$276>>0] = $277;
      $278 = (($i$0159$i) + 1)|0;
      $279 = (_bitshift64Shl(($273|0),0,($238|0))|0);
      $280 = tempRet0;
      $281 = (_i64Add(($279|0),($280|0),($245|0),($246|0))|0);
      $282 = tempRet0;
      $283 = ($269>>>0)>($282>>>0);
      $284 = ($268>>>0)>($281>>>0);
      $285 = ($269|0)==($282|0);
      $286 = $285 & $284;
      $287 = $283 | $286;
      if ($287) {
       label = 36;
       break;
      }
      $375 = ($278>>>0)>($272>>>0);
      if ($375) {
       $378 = $245;$379 = $246;$382 = $270;$383 = $271;$386 = 1;$387 = 0;$i$1$i = $278;
       label = 46;
       break;
      }
      $376 = (($ten_kappa$0158$i>>>0) / 10)&-1;
      $377 = ($ten_kappa$0158$i>>>0)<(10);
      if ($377) {
       label = 56;
       break;
      } else {
       $i$0159$i = $278;$remainder$0157$i = $273;$ten_kappa$0158$i = $376;
      }
     }
     do {
      if ((label|0) == 36) {
       $288 = (_bitshift64Shl(($ten_kappa$0158$i|0),0,($238|0))|0);
       $289 = tempRet0;
       $290 = (_i64Subtract(($234|0),($235|0),($226|0),($227|0))|0);
       $291 = tempRet0;
       $292 = (_i64Add(($290|0),($291|0),1,0)|0);
       $293 = tempRet0;
       $294 = (_i64Add(($290|0),($291|0),-1,-1)|0);
       $295 = tempRet0;
       $296 = ($295>>>0)<($282>>>0);
       $297 = ($294>>>0)<=($281>>>0);
       $298 = ($295|0)==($282|0);
       $299 = $298 & $297;
       $300 = $296 | $299;
       $301 = (_i64Subtract(($268|0),($269|0),($281|0),($282|0))|0);
       $302 = tempRet0;
       $303 = ($302>>>0)<($289>>>0);
       $304 = ($301>>>0)<($288>>>0);
       $305 = ($302|0)==($289|0);
       $306 = $305 & $304;
       $307 = $303 | $306;
       $or$cond24$i$i = $300 | $307;
       L445: do {
        if ($or$cond24$i$i) {
         $$lcssa$i$i = $307;$309 = $282;$311 = $281;
        } else {
         $315 = $281;$316 = $282;$334 = $277;
         while(1) {
          $317 = (_i64Add(($315|0),($316|0),($288|0),($289|0))|0);
          $318 = tempRet0;
          $319 = ($318>>>0)<($295>>>0);
          $320 = ($317>>>0)<($294>>>0);
          $321 = ($318|0)==($295|0);
          $322 = $321 & $320;
          $323 = $319 | $322;
          if (!($323)) {
           $324 = (_i64Subtract(($294|0),($295|0),($315|0),($316|0))|0);
           $325 = tempRet0;
           $326 = (_i64Subtract(($317|0),($318|0),($294|0),($295|0))|0);
           $327 = tempRet0;
           $328 = ($325>>>0)<($327>>>0);
           $329 = ($324>>>0)<($326>>>0);
           $330 = ($325|0)==($327|0);
           $331 = $330 & $329;
           $332 = $328 | $331;
           if ($332) {
            $$lcssa$i$i = 0;$309 = $316;$311 = $315;
            break L445;
           }
          }
          $333 = (($334) + -1)<<24>>24;
          HEAP8[$276>>0] = $333;
          $335 = ($318>>>0)>($295>>>0);
          $336 = ($317>>>0)>=($294>>>0);
          $337 = ($318|0)==($295|0);
          $338 = $337 & $336;
          $339 = $335 | $338;
          $340 = (_i64Subtract(($268|0),($269|0),($317|0),($318|0))|0);
          $341 = tempRet0;
          $342 = ($341>>>0)<($289>>>0);
          $343 = ($340>>>0)<($288>>>0);
          $344 = ($341|0)==($289|0);
          $345 = $344 & $343;
          $346 = $342 | $345;
          $or$cond$i$i = $339 | $346;
          if ($or$cond$i$i) {
           $$lcssa$i$i = $346;$309 = $318;$311 = $317;
           break;
          } else {
           $315 = $317;$316 = $318;$334 = $333;
          }
         }
        }
       } while(0);
       $308 = ($293>>>0)<($309>>>0);
       $310 = ($292>>>0)<=($311>>>0);
       $312 = ($293|0)==($309|0);
       $313 = $312 & $310;
       $314 = $308 | $313;
       $or$cond21$i$i = $314 | $$lcssa$i$i;
       if (!($or$cond21$i$i)) {
        $359 = (_i64Add(($311|0),($309|0),($288|0),($289|0))|0);
        $360 = tempRet0;
        $361 = ($360>>>0)<($293>>>0);
        $362 = ($359>>>0)<($292>>>0);
        $363 = ($360|0)==($293|0);
        $364 = $363 & $362;
        $365 = $361 | $364;
        if ($365) {
         label = 59;
         break;
        }
        $366 = (_i64Subtract(($292|0),($293|0),($311|0),($309|0))|0);
        $367 = tempRet0;
        $368 = (_i64Subtract(($359|0),($360|0),($292|0),($293|0))|0);
        $369 = tempRet0;
        $370 = ($367>>>0)<($369>>>0);
        $371 = ($366>>>0)<($368>>>0);
        $372 = ($367|0)==($369|0);
        $373 = $372 & $371;
        $374 = $370 | $373;
        if (!($374)) {
         label = 59;
         break;
        }
       }
       $347 = (_i64Add(($268|0),($269|0),-4,-1)|0);
       $348 = tempRet0;
       $349 = ($309>>>0)>(0);
       $350 = ($311>>>0)>(1);
       $351 = ($309|0)==(0);
       $352 = $351 & $350;
       $353 = $349 | $352;
       $354 = ($309>>>0)<($348>>>0);
       $355 = ($311>>>0)<=($347>>>0);
       $356 = ($309|0)==($348|0);
       $357 = $356 & $355;
       $358 = $354 | $357;
       $not$or$cond$i = $358 & $353;
       if ($not$or$cond$i) {
        $887 = $278;$tmp_ret$i$sroa$5$0 = $259;
       } else {
        label = 59;
       }
      }
      else if ((label|0) == 46) {
       while(1) {
        label = 0;
        $380 = (___muldi3(($378|0),($379|0),10,0)|0);
        $381 = tempRet0;
        $384 = (___muldi3(($382|0),($383|0),10,0)|0);
        $385 = tempRet0;
        $388 = (___muldi3(($386|0),($387|0),10,0)|0);
        $389 = tempRet0;
        $390 = $380 & $243;
        $391 = $381 & $244;
        $392 = ($i$1$i>>>0)<(1024);
        if (!($392)) {
         label = 57;
         break;
        }
        $393 = (_bitshift64Lshr(($380|0),($381|0),($238|0))|0);
        $394 = tempRet0;
        $395 = $393&255;
        $396 = (($buf) + ($i$1$i)|0);
        $397 = (($395) + 48)<<24>>24;
        HEAP8[$396>>0] = $397;
        $398 = (($i$1$i) + 1)|0;
        $399 = ($385>>>0)>($391>>>0);
        $400 = ($384>>>0)>($390>>>0);
        $401 = ($385|0)==($391|0);
        $402 = $401 & $400;
        $403 = $399 | $402;
        if ($403) {
         break;
        } else {
         $378 = $390;$379 = $391;$382 = $384;$383 = $385;$386 = $388;$387 = $389;$i$1$i = $398;
         label = 46;
        }
       }
       if ((label|0) == 57) {
        __ZN4core9panicking18panic_bounds_check17hd14a5808e41829e9E(23424,120,309,$i$1$i,1024);
        // unreachable;
       }
       $404 = (_i64Subtract(($234|0),($235|0),($226|0),($227|0))|0);
       $405 = tempRet0;
       $406 = (___muldi3(($388|0),($389|0),($404|0),($405|0))|0);
       $407 = tempRet0;
       $408 = (_i64Add(($406|0),($407|0),($388|0),($389|0))|0);
       $409 = tempRet0;
       $410 = (_i64Subtract(($406|0),($407|0),($388|0),($389|0))|0);
       $411 = tempRet0;
       $412 = ($411>>>0)<($391>>>0);
       $413 = ($410>>>0)<=($390>>>0);
       $414 = ($411|0)==($391|0);
       $415 = $414 & $413;
       $416 = $412 | $415;
       $417 = (_i64Subtract(($384|0),($385|0),($390|0),($391|0))|0);
       $418 = tempRet0;
       $419 = ($418>>>0)<($242>>>0);
       $420 = ($417>>>0)<($241>>>0);
       $421 = ($418|0)==($242|0);
       $422 = $421 & $420;
       $423 = $419 | $422;
       $or$cond24$i64$i = $423 | $416;
       L463: do {
        if ($or$cond24$i64$i) {
         $$lcssa$i67$i = $423;$425 = $391;$427 = $390;
        } else {
         $431 = $390;$432 = $391;$450 = $397;
         while(1) {
          $433 = (_i64Add(($431|0),($432|0),($241|0),($242|0))|0);
          $434 = tempRet0;
          $435 = ($434>>>0)<($411>>>0);
          $436 = ($433>>>0)<($410>>>0);
          $437 = ($434|0)==($411|0);
          $438 = $437 & $436;
          $439 = $435 | $438;
          if (!($439)) {
           $440 = (_i64Subtract(($410|0),($411|0),($431|0),($432|0))|0);
           $441 = tempRet0;
           $442 = (_i64Subtract(($433|0),($434|0),($410|0),($411|0))|0);
           $443 = tempRet0;
           $444 = ($441>>>0)<($443>>>0);
           $445 = ($440>>>0)<($442>>>0);
           $446 = ($441|0)==($443|0);
           $447 = $446 & $445;
           $448 = $444 | $447;
           if ($448) {
            $$lcssa$i67$i = 0;$425 = $432;$427 = $431;
            break L463;
           }
          }
          $449 = (($450) + -1)<<24>>24;
          HEAP8[$396>>0] = $449;
          $451 = ($434>>>0)>($411>>>0);
          $452 = ($433>>>0)>=($410>>>0);
          $453 = ($434|0)==($411|0);
          $454 = $453 & $452;
          $455 = $451 | $454;
          $456 = (_i64Subtract(($384|0),($385|0),($433|0),($434|0))|0);
          $457 = tempRet0;
          $458 = ($457>>>0)<($242>>>0);
          $459 = ($456>>>0)<($241>>>0);
          $460 = ($457|0)==($242|0);
          $461 = $460 & $459;
          $462 = $458 | $461;
          $or$cond$i74$i = $455 | $462;
          if ($or$cond$i74$i) {
           $$lcssa$i67$i = $462;$425 = $434;$427 = $433;
           break;
          } else {
           $431 = $433;$432 = $434;$450 = $449;
          }
         }
        }
       } while(0);
       $424 = ($409>>>0)<($425>>>0);
       $426 = ($408>>>0)<=($427>>>0);
       $428 = ($409|0)==($425|0);
       $429 = $428 & $426;
       $430 = $424 | $429;
       $or$cond21$i68$i = $430 | $$lcssa$i67$i;
       if ($or$cond21$i68$i) {
        $463 = (___muldi3(($386|0),($387|0),20,0)|0);
        $464 = tempRet0;
        $465 = ($464>>>0)>($425>>>0);
        $466 = ($463>>>0)>($427>>>0);
        $467 = ($464|0)==($425|0);
        $468 = $467 & $466;
        $469 = $465 | $468;
        if ($469) {
         label = 59;
         break;
        }
       } else {
        $470 = (_i64Add(($427|0),($425|0),($241|0),($242|0))|0);
        $471 = tempRet0;
        $472 = ($471>>>0)<($409>>>0);
        $473 = ($470>>>0)<($408>>>0);
        $474 = ($471|0)==($409|0);
        $475 = $474 & $473;
        $476 = $472 | $475;
        if ($476) {
         label = 59;
         break;
        }
        $477 = (_i64Subtract(($408|0),($409|0),($427|0),($425|0))|0);
        $478 = tempRet0;
        $479 = (_i64Subtract(($470|0),($471|0),($408|0),($409|0))|0);
        $480 = tempRet0;
        $481 = ($478>>>0)>($480>>>0);
        $482 = ($477>>>0)>=($479>>>0);
        $483 = ($478|0)==($480|0);
        $484 = $483 & $482;
        $485 = $481 | $484;
        $486 = (___muldi3(($386|0),($387|0),20,0)|0);
        $487 = tempRet0;
        $488 = ($487>>>0)>($425>>>0);
        $489 = ($486>>>0)>($427>>>0);
        $490 = ($487|0)==($425|0);
        $491 = $490 & $489;
        $492 = $488 | $491;
        $or$cond = $485 | $492;
        if ($or$cond) {
         label = 59;
         break;
        }
       }
       $493 = (___muldi3(($386|0),($387|0),-40,-1)|0);
       $494 = tempRet0;
       $495 = (_i64Add(($493|0),($494|0),($384|0),($385|0))|0);
       $496 = tempRet0;
       $497 = ($425>>>0)<($496>>>0);
       $498 = ($427>>>0)<=($495>>>0);
       $499 = ($425|0)==($496|0);
       $500 = $499 & $498;
       $501 = $497 | $500;
       if ($501) {
        $887 = $398;$tmp_ret$i$sroa$5$0 = $259;
       } else {
        label = 59;
       }
      }
      else if ((label|0) == 56) {
       __ZN4core9panicking5panic17ha7507e8e32961bfeE(7100);
       // unreachable;
      }
     } while(0);
     L475: do {
      if ((label|0) == 59) {
       $502 = (_i64Add(($32|0),($34|0),-1,-1)|0);
       $503 = tempRet0;
       $504 = (_i64Add(($502|0),($503|0),($37|0),($38|0))|0);
       $505 = tempRet0;
       $506 = (_llvm_ctlz_i64(($504|0),($505|0),0)|0);
       $507 = tempRet0;
       $508 = $decoded$sroa$18$0$i$i$ph << 16 >> 16;
       $509 = ($508|0)<(0);
       $510 = $509 << 31 >> 31;
       $511 = (_i64Add(($508|0),($510|0),64,0)|0);
       $512 = tempRet0;
       $513 = (_i64Subtract(($511|0),($512|0),($506|0),($507|0))|0);
       $514 = tempRet0;
       (___muldi3(($513|0),($514|0),1292913986,0)|0);
       $515 = tempRet0;
       $516 = $515&65535;
       _memset(($base$i$i|0),0,160)|0;
       $519 = $32;$521 = $34;$sz$011$i$i = 0;
       while(1) {
        $517 = ($sz$011$i$i>>>0)<(40);
        if (!($517)) {
         label = 62;
         break;
        }
        $518 = (($base$i$i) + ($sz$011$i$i<<2)|0);
        HEAP32[$518>>2] = $519;
        $520 = (($sz$011$i$i) + 1)|0;
        $522 = ($521|0)==(0);
        $523 = (0)==(0);
        $524 = $522 & $523;
        if ($524) {
         break;
        } else {
         $519$phi = $521;$521 = 0;$sz$011$i$i = $520;$519 = $519$phi;
        }
       }
       if ((label|0) == 62) {
        __ZN4core9panicking18panic_bounds_check17hd14a5808e41829e9E(22904,104,144,$sz$011$i$i,40);
        // unreachable;
       }
       HEAP32[$mant$i>>2] = $520;
       $525 = ((($mant$i)) + 4|0);
       _memcpy(($525|0),($base$i$i|0),160)|0;
       _memset(($base$i$i|0),0,160)|0;
       HEAP32[$base$i$i>>2] = 1;
       HEAP32[$minus$i>>2] = 1;
       $526 = ((($minus$i)) + 4|0);
       _memcpy(($526|0),($base$i$i|0),160)|0;
       _memset(($base$i$i|0),0,160)|0;
       $529 = $37;$531 = $38;$sz$011$i37$i = 0;
       while(1) {
        $527 = ($sz$011$i37$i>>>0)<(40);
        if (!($527)) {
         label = 66;
         break;
        }
        $528 = (($base$i$i) + ($sz$011$i37$i<<2)|0);
        HEAP32[$528>>2] = $529;
        $530 = (($sz$011$i37$i) + 1)|0;
        $532 = ($531|0)==(0);
        $533 = (0)==(0);
        $534 = $532 & $533;
        if ($534) {
         break;
        } else {
         $529$phi = $531;$531 = 0;$sz$011$i37$i = $530;$529 = $529$phi;
        }
       }
       if ((label|0) == 66) {
        __ZN4core9panicking18panic_bounds_check17hd14a5808e41829e9E(22904,104,144,$sz$011$i37$i,40);
        // unreachable;
       }
       HEAP32[$plus$i>>2] = $530;
       $535 = ((($plus$i)) + 4|0);
       _memcpy(($535|0),($base$i$i|0),160)|0;
       $536 = ((($base$i$i)) + 4|0);
       _memset(($536|0),0,156)|0;
       HEAP32[$base$i$i>>2] = 1;
       HEAP32[$scale$i>>2] = 1;
       $537 = ((($scale$i)) + 4|0);
       _memcpy(($537|0),($base$i$i|0),160)|0;
       $538 = ($decoded$sroa$18$0$i$i$ph<<16>>16)<(0);
       if ($538) {
        $539 = (0 - ($decoded$sroa$18$0$i$i$ph))<<16>>16;
        $540 = $539 << 16 >> 16;
        (__ZN4core3num6bignum8Big32x408mul_pow217h21707dacd096bf95E($scale$i,$540)|0);
       } else {
        $541 = $decoded$sroa$18$0$i$i$ph << 16 >> 16;
        (__ZN4core3num6bignum8Big32x408mul_pow217h21707dacd096bf95E($mant$i,$541)|0);
        (__ZN4core3num6bignum8Big32x408mul_pow217h21707dacd096bf95E($minus$i,$541)|0);
        (__ZN4core3num6bignum8Big32x408mul_pow217h21707dacd096bf95E($plus$i,$541)|0);
       }
       $542 = ($516<<16>>16)>(-1);
       if ($542) {
        $543 = $516 << 16 >> 16;
        __ZN4core3num7flt2dec8strategy6dragon9mul_pow1017hbc61c3a21b88eb42E($scale$i,$543);
       } else {
        $544 = (0 - ($516))<<16>>16;
        $545 = $544 << 16 >> 16;
        __ZN4core3num7flt2dec8strategy6dragon9mul_pow1017hbc61c3a21b88eb42E($mant$i,$545);
        __ZN4core3num7flt2dec8strategy6dragon9mul_pow1017hbc61c3a21b88eb42E($minus$i,$545);
        __ZN4core3num7flt2dec8strategy6dragon9mul_pow1017hbc61c3a21b88eb42E($plus$i,$545);
       }
       $546 = HEAP32[$mant$i>>2]|0;
       HEAP32[$_122$i>>2] = $546;
       $547 = ((($_122$i)) + 4|0);
       _memcpy(($547|0),($525|0),160)|0;
       $548 = HEAP32[$plus$i>>2]|0;
       $549 = ($548>>>0)>=($546>>>0);
       $_0$0$sroa$speculated$i$i1$i = $549 ? $548 : $546;
       $550 = ($_0$0$sroa$speculated$i$i1$i>>>0)>(40);
       if ($550) {
        __ZN4core5slice20slice_index_len_fail17hed923256c072a803E($_0$0$sroa$speculated$i$i1$i,40);
        // unreachable;
       }
       $551 = ($_0$0$sroa$speculated$i$i1$i|0)==(0);
       do {
        if ($551) {
         $sz$0$i5$i = 0;
        } else {
         $552 = ((($_122$i)) + 4|0);
         $556 = $552;$carry$0$off063$i$i = 0;$iter$sroa$526$062$i$i = 0;
         while(1) {
          $553 = (((($plus$i)) + 4|0) + ($iter$sroa$526$062$i$i<<2)|0);
          $554 = (($iter$sroa$526$062$i$i) + 1)|0;
          $555 = HEAP32[$556>>2]|0;
          $557 = HEAP32[$553>>2]|0;
          $$arith87 = (($555) + ($557))|0;
          $$overflow88 = ($$arith87>>>0)<($555>>>0);
          $$$i$i3$i = $carry$0$off063$i$i&1;
          $$arith83 = (($$arith87) + ($$$i$i3$i))|0;
          $$overflow84 = ($$arith83>>>0)<($$arith87>>>0);
          $brmerge$i$i$i = $$overflow88 | $$overflow84;
          HEAP32[$556>>2] = $$arith83;
          $558 = ($554>>>0)<($_0$0$sroa$speculated$i$i1$i>>>0);
          $559 = (((($_122$i)) + 4|0) + ($554<<2)|0);
          if ($558) {
           $556 = $559;$carry$0$off063$i$i = $brmerge$i$i$i;$iter$sroa$526$062$i$i = $554;
          } else {
           break;
          }
         }
         if (!($brmerge$i$i$i)) {
          $sz$0$i5$i = $_0$0$sroa$speculated$i$i1$i;
          break;
         }
         $560 = ($_0$0$sroa$speculated$i$i1$i>>>0)<(40);
         if ($560) {
          $561 = (((($_122$i)) + 4|0) + ($_0$0$sroa$speculated$i$i1$i<<2)|0);
          HEAP32[$561>>2] = 1;
          $562 = (($_0$0$sroa$speculated$i$i1$i) + 1)|0;
          $sz$0$i5$i = $562;
          break;
         } else {
          __ZN4core9panicking18panic_bounds_check17hd14a5808e41829e9E(22904,104,212,$_0$0$sroa$speculated$i$i1$i,40);
          // unreachable;
         }
        }
       } while(0);
       HEAP32[$_122$i>>2] = $sz$0$i5$i;
       $563 = HEAP32[$scale$i>>2]|0;
       $564 = ($sz$0$i5$i>>>0)>=($563>>>0);
       $_0$0$sroa$speculated$i$i$i = $564 ? $sz$0$i5$i : $563;
       $565 = ($_0$0$sroa$speculated$i$i$i>>>0)>(40);
       if ($565) {
        __ZN4core5slice20slice_index_len_fail17hed923256c072a803E($_0$0$sroa$speculated$i$i$i,40);
        // unreachable;
       }
       $566 = ((($scale$i)) + 4|0);
       $567 = (((($scale$i)) + 4|0) + ($_0$0$sroa$speculated$i$i$i<<2)|0);
       $568 = $567;
       $569 = ((($_122$i)) + 4|0);
       $570 = (((($_122$i)) + 4|0) + ($_0$0$sroa$speculated$i$i$i<<2)|0);
       $571 = $570;
       $_12$sroa$6$0$i$i$i = 0;$other1$sroa$4$0$i$i$i = $571;$self$sroa$4$0$i$i$i = $568;
       while(1) {
        $572 = $self$sroa$4$0$i$i$i;
        $573 = ($572|0)==($566|0);
        if ($573) {
         $$sink$i$i$i$i60$i$i$i = 0;$_10$sroa$6$1$i$i$i = $_12$sroa$6$0$i$i$i;$self$sroa$4$1$i$i$i = $self$sroa$4$0$i$i$i;
        } else {
         $574 = ((($572)) + -4|0);
         $575 = $574;
         $576 = HEAP32[$574>>2]|0;
         $$sink$i$i$i$i60$i$i$i = 1;$_10$sroa$6$1$i$i$i = $576;$self$sroa$4$1$i$i$i = $575;
        }
        $577 = $other1$sroa$4$0$i$i$i;
        $578 = ($577|0)==($569|0);
        if ($578) {
         $$sink$i$i$i$i$i$i$i = 1;$_12$sroa$6$1$i$i$i = $_12$sroa$6$0$i$i$i;$other1$sroa$4$1$i$i$i = $other1$sroa$4$0$i$i$i;
        } else {
         $579 = ((($577)) + -4|0);
         $580 = $579;
         $581 = HEAP32[$579>>2]|0;
         $$sink$i$i$i$i$i$i$i = 0;$_12$sroa$6$1$i$i$i = $581;$other1$sroa$4$1$i$i$i = $580;
        }
        $switch$i$i$i35 = ($$sink$i$i$i$i60$i$i$i|0)==(0);
        if ($switch$i$i$i35) {
         label = 90;
         break;
        }
        if ($$sink$i$i$i$i$i$i$i) {
         label = 92;
         break;
        }
        $582 = ($_10$sroa$6$1$i$i$i|0)==($_12$sroa$6$1$i$i$i|0);
        if ($582) {
         $_12$sroa$6$0$i$i$i = $_10$sroa$6$1$i$i$i;$other1$sroa$4$0$i$i$i = $other1$sroa$4$1$i$i$i;$self$sroa$4$0$i$i$i = $self$sroa$4$1$i$i$i;
        } else {
         label = 94;
         break;
        }
       }
       if ((label|0) == 90) {
        $not$$sink$i$i$i$i$i$i$i = $$sink$i$i$i$i$i$i$i ^ 1;
        $$$i$i$i = $not$$sink$i$i$i$i$i$i$i << 31 >> 31;
        $_0$0$i$i$i = $$$i$i$i;
        label = 95;
       }
       else if ((label|0) == 92) {
        $decoded$sroa$21$0$i$i1111 = $decoded$sroa$21$0$i$i$ph;
        label = 97;
       }
       else if ((label|0) == 94) {
        $583 = ($_10$sroa$6$1$i$i$i>>>0)<($_12$sroa$6$1$i$i$i>>>0);
        $$$i$i$i$le$i = $583 ? -1 : 1;
        $_0$0$i$i$i = $$$i$i$i$le$i;
        label = 95;
       }
       do {
        if ((label|0) == 95) {
         $584 = ($_0$0$i$i$i<<24>>24)<($decoded$sroa$21$0$i$i$ph<<24>>24);
         if (!($584)) {
          $decoded$sroa$21$0$i$i1111 = $decoded$sroa$21$0$i$i$ph;
          label = 97;
          break;
         }
         $585 = (($516) + 1)<<16>>16;
         $decoded$sroa$21$0$i$i1110 = $decoded$sroa$21$0$i$i$ph;$k$0$i = $585;
        }
       } while(0);
       if ((label|0) == 97) {
        $586 = ($546>>>0)>(40);
        if ($586) {
         __ZN4core5slice20slice_index_len_fail17hed923256c072a803E($546,40);
         // unreachable;
        }
        $587 = (((($mant$i)) + 4|0) + ($546<<2)|0);
        $588 = ($546|0)==(0);
        do {
         if ($588) {
          $sz$0$i65$i = 0;
         } else {
          $589 = ((($mant$i)) + 4|0);
          $carry$021$i60$i = 0;$iter$sroa$0$0$in20$i61$i = $589;
          while(1) {
           $592 = ((($iter$sroa$0$0$in20$i61$i)) + 4|0);
           $593 = HEAP32[$iter$sroa$0$0$in20$i61$i>>2]|0;
           $594 = (___muldi3(($593|0),0,10,0)|0);
           $595 = tempRet0;
           $596 = (_i64Add(($594|0),($595|0),($carry$021$i60$i|0),0)|0);
           $590 = tempRet0;
           HEAP32[$iter$sroa$0$0$in20$i61$i>>2] = $596;
           $597 = ($592|0)==($587|0);
           if ($597) {
            break;
           } else {
            $carry$021$i60$i = $590;$iter$sroa$0$0$in20$i61$i = $592;
           }
          }
          $591 = ($590|0)==(0);
          if ($591) {
           $sz$0$i65$i = $546;
           break;
          }
          $598 = ($546>>>0)<(40);
          if ($598) {
           HEAP32[$587>>2] = $590;
           $599 = (($546) + 1)|0;
           $sz$0$i65$i = $599;
           break;
          } else {
           __ZN4core9panicking18panic_bounds_check17hd14a5808e41829e9E(22904,104,267,$546,40);
           // unreachable;
          }
         }
        } while(0);
        HEAP32[$mant$i>>2] = $sz$0$i65$i;
        $600 = HEAP32[$minus$i>>2]|0;
        $601 = ($600>>>0)>(40);
        if ($601) {
         __ZN4core5slice20slice_index_len_fail17hed923256c072a803E($600,40);
         // unreachable;
        }
        $602 = (((($minus$i)) + 4|0) + ($600<<2)|0);
        $603 = ($600|0)==(0);
        do {
         if ($603) {
          $sz$0$i77$i = 0;
         } else {
          $604 = ((($minus$i)) + 4|0);
          $carry$021$i72$i = 0;$iter$sroa$0$0$in20$i73$i = $604;
          while(1) {
           $607 = ((($iter$sroa$0$0$in20$i73$i)) + 4|0);
           $608 = HEAP32[$iter$sroa$0$0$in20$i73$i>>2]|0;
           $609 = (___muldi3(($608|0),0,10,0)|0);
           $610 = tempRet0;
           $611 = (_i64Add(($609|0),($610|0),($carry$021$i72$i|0),0)|0);
           $605 = tempRet0;
           HEAP32[$iter$sroa$0$0$in20$i73$i>>2] = $611;
           $612 = ($607|0)==($602|0);
           if ($612) {
            break;
           } else {
            $carry$021$i72$i = $605;$iter$sroa$0$0$in20$i73$i = $607;
           }
          }
          $606 = ($605|0)==(0);
          if ($606) {
           $sz$0$i77$i = $600;
           break;
          }
          $613 = ($600>>>0)<(40);
          if ($613) {
           HEAP32[$602>>2] = $605;
           $614 = (($600) + 1)|0;
           $sz$0$i77$i = $614;
           break;
          } else {
           __ZN4core9panicking18panic_bounds_check17hd14a5808e41829e9E(22904,104,267,$600,40);
           // unreachable;
          }
         }
        } while(0);
        HEAP32[$minus$i>>2] = $sz$0$i77$i;
        $615 = ($548>>>0)>(40);
        if ($615) {
         __ZN4core5slice20slice_index_len_fail17hed923256c072a803E($548,40);
         // unreachable;
        }
        $616 = (((($plus$i)) + 4|0) + ($548<<2)|0);
        $617 = ($548|0)==(0);
        do {
         if ($617) {
          $sz$0$i89$i = 0;
         } else {
          $618 = ((($plus$i)) + 4|0);
          $carry$021$i84$i = 0;$iter$sroa$0$0$in20$i85$i = $618;
          while(1) {
           $621 = ((($iter$sroa$0$0$in20$i85$i)) + 4|0);
           $622 = HEAP32[$iter$sroa$0$0$in20$i85$i>>2]|0;
           $623 = (___muldi3(($622|0),0,10,0)|0);
           $624 = tempRet0;
           $625 = (_i64Add(($623|0),($624|0),($carry$021$i84$i|0),0)|0);
           $619 = tempRet0;
           HEAP32[$iter$sroa$0$0$in20$i85$i>>2] = $625;
           $626 = ($621|0)==($616|0);
           if ($626) {
            break;
           } else {
            $carry$021$i84$i = $619;$iter$sroa$0$0$in20$i85$i = $621;
           }
          }
          $620 = ($619|0)==(0);
          if ($620) {
           $sz$0$i89$i = $548;
           break;
          }
          $627 = ($548>>>0)<(40);
          if ($627) {
           HEAP32[$616>>2] = $619;
           $628 = (($548) + 1)|0;
           $sz$0$i89$i = $628;
           break;
          } else {
           __ZN4core9panicking18panic_bounds_check17hd14a5808e41829e9E(22904,104,267,$548,40);
           // unreachable;
          }
         }
        } while(0);
        HEAP32[$plus$i>>2] = $sz$0$i89$i;
        $decoded$sroa$21$0$i$i1110 = $decoded$sroa$21$0$i$i1111;$k$0$i = $516;
       }
       HEAP32[$scale2$i>>2] = $563;
       $629 = ((($scale2$i)) + 4|0);
       _memcpy(($629|0),($537|0),160)|0;
       (__ZN4core3num6bignum8Big32x408mul_pow217h21707dacd096bf95E($scale2$i,1)|0);
       $630 = HEAP32[$scale$i>>2]|0;
       HEAP32[$scale4$i>>2] = $630;
       $631 = ((($scale4$i)) + 4|0);
       _memcpy(($631|0),($537|0),160)|0;
       (__ZN4core3num6bignum8Big32x408mul_pow217h21707dacd096bf95E($scale4$i,2)|0);
       $632 = HEAP32[$scale$i>>2]|0;
       HEAP32[$scale8$i>>2] = $632;
       $633 = ((($scale8$i)) + 4|0);
       _memcpy(($633|0),($537|0),160)|0;
       (__ZN4core3num6bignum8Big32x408mul_pow217h21707dacd096bf95E($scale8$i,3)|0);
       $634 = HEAP32[$mant$i>>2]|0;
       $635 = HEAP32[$scale8$i>>2]|0;
       $636 = ($635>>>0)>=($634>>>0);
       $_0$0$sroa$speculated$i$i$i$i$i336$i = $636 ? $635 : $634;
       $637 = ($_0$0$sroa$speculated$i$i$i$i$i336$i>>>0)>(40);
       if ($637) {
        $_0$0$sroa$speculated$i$i$i$i$i$lcssa$i = $_0$0$sroa$speculated$i$i$i$i$i336$i;
        __ZN4core5slice20slice_index_len_fail17hed923256c072a803E($_0$0$sroa$speculated$i$i$i$i$i$lcssa$i,40);
        // unreachable;
       }
       $638 = ((($mant$i)) + 4|0);
       $639 = ((($scale8$i)) + 4|0);
       $640 = ((($scale4$i)) + 4|0);
       $641 = ((($scale2$i)) + 4|0);
       $642 = ((($minus$i)) + 4|0);
       $643 = ((($_188$i)) + 4|0);
       $644 = ((($plus$i)) + 4|0);
       $645 = ((($_188$i)) + 4|0);
       $1819 = $634;$_0$0$sroa$speculated$i$i$i$i$i338$i = $_0$0$sroa$speculated$i$i$i$i$i336$i;$i$0337$i = 0;
       L575: while(1) {
        $646 = (((($mant$i)) + 4|0) + ($_0$0$sroa$speculated$i$i$i$i$i338$i<<2)|0);
        $647 = $646;
        $648 = (((($scale8$i)) + 4|0) + ($_0$0$sroa$speculated$i$i$i$i$i338$i<<2)|0);
        $649 = $648;
        $_12$sroa$6$0$i$i$i$i$i$i = 0;$other1$sroa$4$0$i$i$i$i$i$i = $649;$self$sroa$4$0$i$i$i$i$i$i = $647;
        while(1) {
         $650 = $self$sroa$4$0$i$i$i$i$i$i;
         $651 = ($650|0)==($638|0);
         if ($651) {
          $$sink$i$i$i$i60$i$i$i$i$i$i = 0;$_10$sroa$6$1$i$i$i$i$i$i = $_12$sroa$6$0$i$i$i$i$i$i;$self$sroa$4$1$i$i$i$i$i$i = $self$sroa$4$0$i$i$i$i$i$i;
         } else {
          $652 = ((($650)) + -4|0);
          $653 = $652;
          $654 = HEAP32[$652>>2]|0;
          $$sink$i$i$i$i60$i$i$i$i$i$i = 1;$_10$sroa$6$1$i$i$i$i$i$i = $654;$self$sroa$4$1$i$i$i$i$i$i = $653;
         }
         $655 = $other1$sroa$4$0$i$i$i$i$i$i;
         $656 = ($655|0)==($639|0);
         if ($656) {
          $$sink$i$i$i$i$i$i$i$i$i$i = 1;$_12$sroa$6$1$i$i$i$i$i$i = $_12$sroa$6$0$i$i$i$i$i$i;$other1$sroa$4$1$i$i$i$i$i$i = $other1$sroa$4$0$i$i$i$i$i$i;
         } else {
          $657 = ((($655)) + -4|0);
          $658 = $657;
          $659 = HEAP32[$657>>2]|0;
          $$sink$i$i$i$i$i$i$i$i$i$i = 0;$_12$sroa$6$1$i$i$i$i$i$i = $659;$other1$sroa$4$1$i$i$i$i$i$i = $658;
         }
         $switch$i$i$i$i$i$i = ($$sink$i$i$i$i60$i$i$i$i$i$i|0)==(0);
         if ($switch$i$i$i$i$i$i) {
          label = 137;
          break;
         }
         if ($$sink$i$i$i$i$i$i$i$i$i$i) {
          label = 138;
          break;
         }
         $660 = ($_10$sroa$6$1$i$i$i$i$i$i|0)==($_12$sroa$6$1$i$i$i$i$i$i|0);
         if ($660) {
          $_12$sroa$6$0$i$i$i$i$i$i = $_10$sroa$6$1$i$i$i$i$i$i;$other1$sroa$4$0$i$i$i$i$i$i = $other1$sroa$4$1$i$i$i$i$i$i;$self$sroa$4$0$i$i$i$i$i$i = $self$sroa$4$1$i$i$i$i$i$i;
         } else {
          label = 136;
          break;
         }
        }
        if ((label|0) == 136) {
         label = 0;
         $661 = ($_10$sroa$6$1$i$i$i$i$i$i>>>0)<($_12$sroa$6$1$i$i$i$i$i$i>>>0);
         if ($661) {
          $672 = $1819;$d$0$i$i = 0;
         } else {
          label = 138;
         }
        }
        else if ((label|0) == 137) {
         label = 0;
         if ($$sink$i$i$i$i$i$i$i$i$i$i) {
          label = 138;
         } else {
          $672 = $1819;$d$0$i$i = 0;
         }
        }
        if ((label|0) == 138) {
         label = 0;
         $662 = ($_0$0$sroa$speculated$i$i$i$i$i338$i|0)==(0);
         if (!($662)) {
          $666 = $638;$iter$sroa$521$057$i$i$i = 0;$noborrow$0$off058$i$i$i = 1;
          while(1) {
           $663 = (((($scale8$i)) + 4|0) + ($iter$sroa$521$057$i$i$i<<2)|0);
           $664 = (($iter$sroa$521$057$i$i$i) + 1)|0;
           $665 = HEAP32[$666>>2]|0;
           $667 = HEAP32[$663>>2]|0;
           $668 = $667 ^ -1;
           $$arith79 = (($665) + ($668))|0;
           $$overflow80 = ($$arith79>>>0)<($665>>>0);
           $$$i$i$i92$i = $noborrow$0$off058$i$i$i&1;
           $$arith75 = (($$arith79) + ($$$i$i$i92$i))|0;
           $$overflow76 = ($$arith75>>>0)<($$arith79>>>0);
           $brmerge$i$i$i$i = $$overflow80 | $$overflow76;
           HEAP32[$666>>2] = $$arith75;
           $669 = (((($mant$i)) + 4|0) + ($664<<2)|0);
           $exitcond$i = ($664|0)==($_0$0$sroa$speculated$i$i$i$i$i338$i|0);
           if ($exitcond$i) {
            break;
           } else {
            $666 = $669;$iter$sroa$521$057$i$i$i = $664;$noborrow$0$off058$i$i$i = $brmerge$i$i$i$i;
           }
          }
          if (!($brmerge$i$i$i$i)) {
           label = 141;
           break;
          }
         }
         HEAP32[$mant$i>>2] = $_0$0$sroa$speculated$i$i$i$i$i338$i;
         $672 = $_0$0$sroa$speculated$i$i$i$i$i338$i;$d$0$i$i = 8;
        }
        $670 = HEAP32[$scale4$i>>2]|0;
        $671 = ($670>>>0)>=($672>>>0);
        $_0$0$sroa$speculated$i$i$i$i5$i$i = $671 ? $670 : $672;
        $673 = ($_0$0$sroa$speculated$i$i$i$i5$i$i>>>0)>(40);
        if ($673) {
         label = 144;
         break;
        }
        $674 = (((($mant$i)) + 4|0) + ($_0$0$sroa$speculated$i$i$i$i5$i$i<<2)|0);
        $675 = $674;
        $676 = (((($scale4$i)) + 4|0) + ($_0$0$sroa$speculated$i$i$i$i5$i$i<<2)|0);
        $677 = $676;
        $_12$sroa$6$0$i$i$i$i8$i$i = 0;$other1$sroa$4$0$i$i$i$i9$i$i = $677;$self$sroa$4$0$i$i$i$i10$i$i = $675;
        while(1) {
         $678 = $self$sroa$4$0$i$i$i$i10$i$i;
         $679 = ($678|0)==($638|0);
         if ($679) {
          $$sink$i$i$i$i60$i$i$i$i15$i$i = 0;$_10$sroa$6$1$i$i$i$i13$i$i = $_12$sroa$6$0$i$i$i$i8$i$i;$self$sroa$4$1$i$i$i$i14$i$i = $self$sroa$4$0$i$i$i$i10$i$i;
         } else {
          $680 = ((($678)) + -4|0);
          $681 = $680;
          $682 = HEAP32[$680>>2]|0;
          $$sink$i$i$i$i60$i$i$i$i15$i$i = 1;$_10$sroa$6$1$i$i$i$i13$i$i = $682;$self$sroa$4$1$i$i$i$i14$i$i = $681;
         }
         $683 = $other1$sroa$4$0$i$i$i$i9$i$i;
         $684 = ($683|0)==($640|0);
         if ($684) {
          $$sink$i$i$i$i$i$i$i$i20$i$i = 1;$_12$sroa$6$1$i$i$i$i18$i$i = $_12$sroa$6$0$i$i$i$i8$i$i;$other1$sroa$4$1$i$i$i$i19$i$i = $other1$sroa$4$0$i$i$i$i9$i$i;
         } else {
          $685 = ((($683)) + -4|0);
          $686 = $685;
          $687 = HEAP32[$685>>2]|0;
          $$sink$i$i$i$i$i$i$i$i20$i$i = 0;$_12$sroa$6$1$i$i$i$i18$i$i = $687;$other1$sroa$4$1$i$i$i$i19$i$i = $686;
         }
         $switch$i$i$i$i21$i$i = ($$sink$i$i$i$i60$i$i$i$i15$i$i|0)==(0);
         if ($switch$i$i$i$i21$i$i) {
          label = 154;
          break;
         }
         if ($$sink$i$i$i$i$i$i$i$i20$i$i) {
          label = 155;
          break;
         }
         $688 = ($_10$sroa$6$1$i$i$i$i13$i$i|0)==($_12$sroa$6$1$i$i$i$i18$i$i|0);
         if ($688) {
          $_12$sroa$6$0$i$i$i$i8$i$i = $_10$sroa$6$1$i$i$i$i13$i$i;$other1$sroa$4$0$i$i$i$i9$i$i = $other1$sroa$4$1$i$i$i$i19$i$i;$self$sroa$4$0$i$i$i$i10$i$i = $self$sroa$4$1$i$i$i$i14$i$i;
         } else {
          label = 153;
          break;
         }
        }
        if ((label|0) == 153) {
         label = 0;
         $689 = ($_10$sroa$6$1$i$i$i$i13$i$i>>>0)<($_12$sroa$6$1$i$i$i$i18$i$i>>>0);
         if ($689) {
          $702 = $672;$d$1$i$i = $d$0$i$i;
         } else {
          label = 155;
         }
        }
        else if ((label|0) == 154) {
         label = 0;
         if ($$sink$i$i$i$i$i$i$i$i20$i$i) {
          label = 155;
         } else {
          $702 = $672;$d$1$i$i = $d$0$i$i;
         }
        }
        if ((label|0) == 155) {
         label = 0;
         $690 = ($_0$0$sroa$speculated$i$i$i$i5$i$i|0)==(0);
         if (!($690)) {
          $694 = $638;$iter$sroa$521$057$i38$i$i = 0;$noborrow$0$off058$i37$i$i = 1;
          while(1) {
           $691 = (((($scale4$i)) + 4|0) + ($iter$sroa$521$057$i38$i$i<<2)|0);
           $692 = (($iter$sroa$521$057$i38$i$i) + 1)|0;
           $693 = HEAP32[$694>>2]|0;
           $695 = HEAP32[$691>>2]|0;
           $696 = $695 ^ -1;
           $$arith71 = (($693) + ($696))|0;
           $$overflow72 = ($$arith71>>>0)<($693>>>0);
           $$$i$i39$i$i = $noborrow$0$off058$i37$i$i&1;
           $$arith67 = (($$arith71) + ($$$i$i39$i$i))|0;
           $$overflow68 = ($$arith67>>>0)<($$arith71>>>0);
           $brmerge$i$i40$i$i = $$overflow72 | $$overflow68;
           HEAP32[$694>>2] = $$arith67;
           $697 = ($692>>>0)<($_0$0$sroa$speculated$i$i$i$i5$i$i>>>0);
           $698 = (((($mant$i)) + 4|0) + ($692<<2)|0);
           if ($697) {
            $694 = $698;$iter$sroa$521$057$i38$i$i = $692;$noborrow$0$off058$i37$i$i = $brmerge$i$i40$i$i;
           } else {
            break;
           }
          }
          if (!($brmerge$i$i40$i$i)) {
           label = 158;
           break;
          }
         }
         HEAP32[$mant$i>>2] = $_0$0$sroa$speculated$i$i$i$i5$i$i;
         $699 = $d$0$i$i | 4;
         $702 = $_0$0$sroa$speculated$i$i$i$i5$i$i;$d$1$i$i = $699;
        }
        $700 = HEAP32[$scale2$i>>2]|0;
        $701 = ($700>>>0)>=($702>>>0);
        $_0$0$sroa$speculated$i$i$i$i44$i$i = $701 ? $700 : $702;
        $703 = ($_0$0$sroa$speculated$i$i$i$i44$i$i>>>0)>(40);
        if ($703) {
         label = 161;
         break;
        }
        $704 = (((($mant$i)) + 4|0) + ($_0$0$sroa$speculated$i$i$i$i44$i$i<<2)|0);
        $705 = $704;
        $706 = (((($scale2$i)) + 4|0) + ($_0$0$sroa$speculated$i$i$i$i44$i$i<<2)|0);
        $707 = $706;
        $_12$sroa$6$0$i$i$i$i47$i$i = 0;$other1$sroa$4$0$i$i$i$i48$i$i = $707;$self$sroa$4$0$i$i$i$i49$i$i = $705;
        while(1) {
         $708 = $self$sroa$4$0$i$i$i$i49$i$i;
         $709 = ($708|0)==($638|0);
         if ($709) {
          $$sink$i$i$i$i60$i$i$i$i54$i$i = 0;$_10$sroa$6$1$i$i$i$i52$i$i = $_12$sroa$6$0$i$i$i$i47$i$i;$self$sroa$4$1$i$i$i$i53$i$i = $self$sroa$4$0$i$i$i$i49$i$i;
         } else {
          $710 = ((($708)) + -4|0);
          $711 = $710;
          $712 = HEAP32[$710>>2]|0;
          $$sink$i$i$i$i60$i$i$i$i54$i$i = 1;$_10$sroa$6$1$i$i$i$i52$i$i = $712;$self$sroa$4$1$i$i$i$i53$i$i = $711;
         }
         $713 = $other1$sroa$4$0$i$i$i$i48$i$i;
         $714 = ($713|0)==($641|0);
         if ($714) {
          $$sink$i$i$i$i$i$i$i$i59$i$i = 1;$_12$sroa$6$1$i$i$i$i57$i$i = $_12$sroa$6$0$i$i$i$i47$i$i;$other1$sroa$4$1$i$i$i$i58$i$i = $other1$sroa$4$0$i$i$i$i48$i$i;
         } else {
          $715 = ((($713)) + -4|0);
          $716 = $715;
          $717 = HEAP32[$715>>2]|0;
          $$sink$i$i$i$i$i$i$i$i59$i$i = 0;$_12$sroa$6$1$i$i$i$i57$i$i = $717;$other1$sroa$4$1$i$i$i$i58$i$i = $716;
         }
         $switch$i$i$i$i60$i$i = ($$sink$i$i$i$i60$i$i$i$i54$i$i|0)==(0);
         if ($switch$i$i$i$i60$i$i) {
          label = 171;
          break;
         }
         if ($$sink$i$i$i$i$i$i$i$i59$i$i) {
          label = 172;
          break;
         }
         $718 = ($_10$sroa$6$1$i$i$i$i52$i$i|0)==($_12$sroa$6$1$i$i$i$i57$i$i|0);
         if ($718) {
          $_12$sroa$6$0$i$i$i$i47$i$i = $_10$sroa$6$1$i$i$i$i52$i$i;$other1$sroa$4$0$i$i$i$i48$i$i = $other1$sroa$4$1$i$i$i$i58$i$i;$self$sroa$4$0$i$i$i$i49$i$i = $self$sroa$4$1$i$i$i$i53$i$i;
         } else {
          label = 170;
          break;
         }
        }
        if ((label|0) == 170) {
         label = 0;
         $719 = ($_10$sroa$6$1$i$i$i$i52$i$i>>>0)<($_12$sroa$6$1$i$i$i$i57$i$i>>>0);
         if ($719) {
          $732 = $702;$d$2$i$i = $d$1$i$i;
         } else {
          label = 172;
         }
        }
        else if ((label|0) == 171) {
         label = 0;
         if ($$sink$i$i$i$i$i$i$i$i59$i$i) {
          label = 172;
         } else {
          $732 = $702;$d$2$i$i = $d$1$i$i;
         }
        }
        if ((label|0) == 172) {
         label = 0;
         $720 = ($_0$0$sroa$speculated$i$i$i$i44$i$i|0)==(0);
         if (!($720)) {
          $724 = $638;$iter$sroa$521$057$i77$i$i = 0;$noborrow$0$off058$i76$i$i = 1;
          while(1) {
           $721 = (((($scale2$i)) + 4|0) + ($iter$sroa$521$057$i77$i$i<<2)|0);
           $722 = (($iter$sroa$521$057$i77$i$i) + 1)|0;
           $723 = HEAP32[$724>>2]|0;
           $725 = HEAP32[$721>>2]|0;
           $726 = $725 ^ -1;
           $$arith63 = (($723) + ($726))|0;
           $$overflow64 = ($$arith63>>>0)<($723>>>0);
           $$$i$i78$i$i = $noborrow$0$off058$i76$i$i&1;
           $$arith59 = (($$arith63) + ($$$i$i78$i$i))|0;
           $$overflow60 = ($$arith59>>>0)<($$arith63>>>0);
           $brmerge$i$i79$i$i = $$overflow64 | $$overflow60;
           HEAP32[$724>>2] = $$arith59;
           $727 = ($722>>>0)<($_0$0$sroa$speculated$i$i$i$i44$i$i>>>0);
           $728 = (((($mant$i)) + 4|0) + ($722<<2)|0);
           if ($727) {
            $724 = $728;$iter$sroa$521$057$i77$i$i = $722;$noborrow$0$off058$i76$i$i = $brmerge$i$i79$i$i;
           } else {
            break;
           }
          }
          if (!($brmerge$i$i79$i$i)) {
           label = 175;
           break;
          }
         }
         HEAP32[$mant$i>>2] = $_0$0$sroa$speculated$i$i$i$i44$i$i;
         $729 = (($d$1$i$i) + 2)<<24>>24;
         $732 = $_0$0$sroa$speculated$i$i$i$i44$i$i;$d$2$i$i = $729;
        }
        $730 = HEAP32[$scale$i>>2]|0;
        $731 = ($730>>>0)>=($732>>>0);
        $_0$0$sroa$speculated$i$i$i$i83$i$i = $731 ? $730 : $732;
        $733 = ($_0$0$sroa$speculated$i$i$i$i83$i$i>>>0)>(40);
        if ($733) {
         label = 178;
         break;
        }
        $734 = (((($mant$i)) + 4|0) + ($_0$0$sroa$speculated$i$i$i$i83$i$i<<2)|0);
        $735 = $734;
        $736 = (((($scale$i)) + 4|0) + ($_0$0$sroa$speculated$i$i$i$i83$i$i<<2)|0);
        $737 = $736;
        $_12$sroa$6$0$i$i$i$i86$i$i = 0;$other1$sroa$4$0$i$i$i$i87$i$i = $737;$self$sroa$4$0$i$i$i$i88$i$i = $735;
        while(1) {
         $738 = $self$sroa$4$0$i$i$i$i88$i$i;
         $739 = ($738|0)==($638|0);
         if ($739) {
          $$sink$i$i$i$i60$i$i$i$i93$i$i = 0;$_10$sroa$6$1$i$i$i$i91$i$i = $_12$sroa$6$0$i$i$i$i86$i$i;$self$sroa$4$1$i$i$i$i92$i$i = $self$sroa$4$0$i$i$i$i88$i$i;
         } else {
          $740 = ((($738)) + -4|0);
          $741 = $740;
          $742 = HEAP32[$740>>2]|0;
          $$sink$i$i$i$i60$i$i$i$i93$i$i = 1;$_10$sroa$6$1$i$i$i$i91$i$i = $742;$self$sroa$4$1$i$i$i$i92$i$i = $741;
         }
         $743 = $other1$sroa$4$0$i$i$i$i87$i$i;
         $744 = ($743|0)==($566|0);
         if ($744) {
          $$sink$i$i$i$i$i$i$i$i98$i$i = 1;$_12$sroa$6$1$i$i$i$i96$i$i = $_12$sroa$6$0$i$i$i$i86$i$i;$other1$sroa$4$1$i$i$i$i97$i$i = $other1$sroa$4$0$i$i$i$i87$i$i;
         } else {
          $745 = ((($743)) + -4|0);
          $746 = $745;
          $747 = HEAP32[$745>>2]|0;
          $$sink$i$i$i$i$i$i$i$i98$i$i = 0;$_12$sroa$6$1$i$i$i$i96$i$i = $747;$other1$sroa$4$1$i$i$i$i97$i$i = $746;
         }
         $switch$i$i$i$i99$i$i = ($$sink$i$i$i$i60$i$i$i$i93$i$i|0)==(0);
         if ($switch$i$i$i$i99$i$i) {
          label = 188;
          break;
         }
         if ($$sink$i$i$i$i$i$i$i$i98$i$i) {
          label = 189;
          break;
         }
         $748 = ($_10$sroa$6$1$i$i$i$i91$i$i|0)==($_12$sroa$6$1$i$i$i$i96$i$i|0);
         if ($748) {
          $_12$sroa$6$0$i$i$i$i86$i$i = $_10$sroa$6$1$i$i$i$i91$i$i;$other1$sroa$4$0$i$i$i$i87$i$i = $other1$sroa$4$1$i$i$i$i97$i$i;$self$sroa$4$0$i$i$i$i88$i$i = $self$sroa$4$1$i$i$i$i92$i$i;
         } else {
          label = 187;
          break;
         }
        }
        if ((label|0) == 187) {
         label = 0;
         $749 = ($_10$sroa$6$1$i$i$i$i91$i$i>>>0)<($_12$sroa$6$1$i$i$i$i96$i$i>>>0);
         if ($749) {
          $766 = $732;$d$3$i$i = $d$2$i$i;
         } else {
          label = 189;
         }
        }
        else if ((label|0) == 188) {
         label = 0;
         if ($$sink$i$i$i$i$i$i$i$i98$i$i) {
          label = 189;
         } else {
          $766 = $732;$d$3$i$i = $d$2$i$i;
         }
        }
        if ((label|0) == 189) {
         label = 0;
         $750 = ($_0$0$sroa$speculated$i$i$i$i83$i$i|0)==(0);
         if (!($750)) {
          $754 = $638;$iter$sroa$521$057$i116$i$i = 0;$noborrow$0$off058$i115$i$i = 1;
          while(1) {
           $751 = (((($scale$i)) + 4|0) + ($iter$sroa$521$057$i116$i$i<<2)|0);
           $752 = (($iter$sroa$521$057$i116$i$i) + 1)|0;
           $753 = HEAP32[$754>>2]|0;
           $755 = HEAP32[$751>>2]|0;
           $756 = $755 ^ -1;
           $$arith55 = (($753) + ($756))|0;
           $$overflow56 = ($$arith55>>>0)<($753>>>0);
           $$$i$i117$i$i = $noborrow$0$off058$i115$i$i&1;
           $$arith51 = (($$arith55) + ($$$i$i117$i$i))|0;
           $$overflow52 = ($$arith51>>>0)<($$arith55>>>0);
           $brmerge$i$i118$i$i = $$overflow56 | $$overflow52;
           HEAP32[$754>>2] = $$arith51;
           $757 = ($752>>>0)<($_0$0$sroa$speculated$i$i$i$i83$i$i>>>0);
           $758 = (((($mant$i)) + 4|0) + ($752<<2)|0);
           if ($757) {
            $754 = $758;$iter$sroa$521$057$i116$i$i = $752;$noborrow$0$off058$i115$i$i = $brmerge$i$i118$i$i;
           } else {
            break;
           }
          }
          if (!($brmerge$i$i118$i$i)) {
           label = 192;
           break;
          }
         }
         HEAP32[$mant$i>>2] = $_0$0$sroa$speculated$i$i$i$i83$i$i;
         $759 = (($d$2$i$i) + 1)<<24>>24;
         $766 = $_0$0$sroa$speculated$i$i$i$i83$i$i;$d$3$i$i = $759;
        }
        $760 = ($i$0337$i>>>0)<(1024);
        if (!($760)) {
         label = 268;
         break;
        }
        $761 = (($buf) + ($i$0337$i)|0);
        $762 = (($d$3$i$i) + 48)<<24>>24;
        HEAP8[$761>>0] = $762;
        $763 = (($i$0337$i) + 1)|0;
        $764 = HEAP32[$minus$i>>2]|0;
        $765 = ($764>>>0)>=($766>>>0);
        $_0$0$sroa$speculated$i$i96$i = $765 ? $764 : $766;
        $767 = ($_0$0$sroa$speculated$i$i96$i>>>0)>(40);
        if ($767) {
         label = 196;
         break;
        }
        $768 = (((($mant$i)) + 4|0) + ($_0$0$sroa$speculated$i$i96$i<<2)|0);
        $769 = $768;
        $770 = (((($minus$i)) + 4|0) + ($_0$0$sroa$speculated$i$i96$i<<2)|0);
        $771 = $770;
        $_12$sroa$6$0$i$i99$i = 0;$other1$sroa$4$0$i$i100$i = $771;$self$sroa$4$0$i$i101$i = $769;
        while(1) {
         $772 = $self$sroa$4$0$i$i101$i;
         $773 = ($772|0)==($638|0);
         if ($773) {
          $$sink$i$i$i$i60$i$i106$i = 0;$_10$sroa$6$1$i$i104$i = $_12$sroa$6$0$i$i99$i;$self$sroa$4$1$i$i105$i = $self$sroa$4$0$i$i101$i;
         } else {
          $774 = ((($772)) + -4|0);
          $775 = $774;
          $776 = HEAP32[$774>>2]|0;
          $$sink$i$i$i$i60$i$i106$i = 1;$_10$sroa$6$1$i$i104$i = $776;$self$sroa$4$1$i$i105$i = $775;
         }
         $777 = $other1$sroa$4$0$i$i100$i;
         $778 = ($777|0)==($642|0);
         if ($778) {
          $$sink$i$i$i$i$i$i111$i = 1;$_12$sroa$6$1$i$i109$i = $_12$sroa$6$0$i$i99$i;$other1$sroa$4$1$i$i110$i = $other1$sroa$4$0$i$i100$i;
         } else {
          $779 = ((($777)) + -4|0);
          $780 = $779;
          $781 = HEAP32[$779>>2]|0;
          $$sink$i$i$i$i$i$i111$i = 0;$_12$sroa$6$1$i$i109$i = $781;$other1$sroa$4$1$i$i110$i = $780;
         }
         $switch$i$i112$i = ($$sink$i$i$i$i60$i$i106$i|0)==(0);
         if ($switch$i$i112$i) {
          label = 203;
          break;
         }
         if ($$sink$i$i$i$i$i$i111$i) {
          $_0$0$i$i120$i = 1;
          break;
         }
         $782 = ($_10$sroa$6$1$i$i104$i|0)==($_12$sroa$6$1$i$i109$i|0);
         $783 = ($_10$sroa$6$1$i$i104$i>>>0)<($_12$sroa$6$1$i$i109$i>>>0);
         $$$i$i$i118$i = $783 ? -1 : 1;
         if ($782) {
          $_12$sroa$6$0$i$i99$i = $_10$sroa$6$1$i$i104$i;$other1$sroa$4$0$i$i100$i = $other1$sroa$4$1$i$i110$i;$self$sroa$4$0$i$i101$i = $self$sroa$4$1$i$i105$i;
         } else {
          $_0$0$i$i120$i = $$$i$i$i118$i;
          break;
         }
        }
        if ((label|0) == 203) {
         label = 0;
         $not$$sink$i$i$i$i$i$i114$i = $$sink$i$i$i$i$i$i111$i ^ 1;
         $$$i$i115$i = $not$$sink$i$i$i$i$i$i114$i << 31 >> 31;
         $_0$0$i$i120$i = $$$i$i115$i;
        }
        $784 = ($_0$0$i$i120$i<<24>>24)<($decoded$sroa$21$0$i$i1110<<24>>24);
        HEAP32[$_188$i>>2] = $766;
        _memcpy(($643|0),($525|0),160)|0;
        $785 = HEAP32[$plus$i>>2]|0;
        $786 = ($785>>>0)>=($766>>>0);
        $_0$0$sroa$speculated$i$i8$i = $786 ? $785 : $766;
        $787 = ($_0$0$sroa$speculated$i$i8$i>>>0)>(40);
        if ($787) {
         label = 208;
         break;
        }
        $788 = ($_0$0$sroa$speculated$i$i8$i|0)==(0);
        do {
         if ($788) {
          $sz$0$i20$i = 0;
         } else {
          $792 = $645;$carry$0$off063$i13$i = 0;$iter$sroa$526$062$i14$i = 0;
          while(1) {
           $789 = (((($plus$i)) + 4|0) + ($iter$sroa$526$062$i14$i<<2)|0);
           $790 = (($iter$sroa$526$062$i14$i) + 1)|0;
           $791 = HEAP32[$792>>2]|0;
           $793 = HEAP32[$789>>2]|0;
           $$arith47 = (($791) + ($793))|0;
           $$overflow48 = ($$arith47>>>0)<($791>>>0);
           $$$i$i15$i = $carry$0$off063$i13$i&1;
           $$arith43 = (($$arith47) + ($$$i$i15$i))|0;
           $$overflow44 = ($$arith43>>>0)<($$arith47>>>0);
           $brmerge$i$i16$i = $$overflow48 | $$overflow44;
           HEAP32[$792>>2] = $$arith43;
           $794 = ($790>>>0)<($_0$0$sroa$speculated$i$i8$i>>>0);
           $795 = (((($_188$i)) + 4|0) + ($790<<2)|0);
           if ($794) {
            $792 = $795;$carry$0$off063$i13$i = $brmerge$i$i16$i;$iter$sroa$526$062$i14$i = $790;
           } else {
            break;
           }
          }
          if (!($brmerge$i$i16$i)) {
           $sz$0$i20$i = $_0$0$sroa$speculated$i$i8$i;
           break;
          }
          $796 = ($_0$0$sroa$speculated$i$i8$i>>>0)<(40);
          if (!($796)) {
           label = 213;
           break L575;
          }
          $797 = (((($_188$i)) + 4|0) + ($_0$0$sroa$speculated$i$i8$i<<2)|0);
          HEAP32[$797>>2] = 1;
          $798 = (($_0$0$sroa$speculated$i$i8$i) + 1)|0;
          $sz$0$i20$i = $798;
         }
        } while(0);
        HEAP32[$_188$i>>2] = $sz$0$i20$i;
        $799 = ($sz$0$i20$i>>>0)>=($730>>>0);
        $_0$0$sroa$speculated$i$i122$i = $799 ? $sz$0$i20$i : $730;
        $800 = ($_0$0$sroa$speculated$i$i122$i>>>0)>(40);
        if ($800) {
         label = 215;
         break;
        }
        $801 = (((($scale$i)) + 4|0) + ($_0$0$sroa$speculated$i$i122$i<<2)|0);
        $802 = $801;
        $803 = (((($_188$i)) + 4|0) + ($_0$0$sroa$speculated$i$i122$i<<2)|0);
        $804 = $803;
        $_12$sroa$6$0$i$i125$i = 0;$other1$sroa$4$0$i$i126$i = $804;$self$sroa$4$0$i$i127$i = $802;
        while(1) {
         $805 = $self$sroa$4$0$i$i127$i;
         $806 = ($805|0)==($566|0);
         if ($806) {
          $$sink$i$i$i$i60$i$i132$i = 0;$_10$sroa$6$1$i$i130$i = $_12$sroa$6$0$i$i125$i;$self$sroa$4$1$i$i131$i = $self$sroa$4$0$i$i127$i;
         } else {
          $807 = ((($805)) + -4|0);
          $808 = $807;
          $809 = HEAP32[$807>>2]|0;
          $$sink$i$i$i$i60$i$i132$i = 1;$_10$sroa$6$1$i$i130$i = $809;$self$sroa$4$1$i$i131$i = $808;
         }
         $810 = $other1$sroa$4$0$i$i126$i;
         $811 = ($810|0)==($645|0);
         if ($811) {
          $$sink$i$i$i$i$i$i137$i = 1;$_12$sroa$6$1$i$i135$i = $_12$sroa$6$0$i$i125$i;$other1$sroa$4$1$i$i136$i = $other1$sroa$4$0$i$i126$i;
         } else {
          $812 = ((($810)) + -4|0);
          $813 = $812;
          $814 = HEAP32[$812>>2]|0;
          $$sink$i$i$i$i$i$i137$i = 0;$_12$sroa$6$1$i$i135$i = $814;$other1$sroa$4$1$i$i136$i = $813;
         }
         $switch$i$i138$i = ($$sink$i$i$i$i60$i$i132$i|0)==(0);
         if ($switch$i$i138$i) {
          label = 222;
          break;
         }
         if ($$sink$i$i$i$i$i$i137$i) {
          $_0$0$i$i146$i = 1;
          break;
         }
         $815 = ($_10$sroa$6$1$i$i130$i|0)==($_12$sroa$6$1$i$i135$i|0);
         $816 = ($_10$sroa$6$1$i$i130$i>>>0)<($_12$sroa$6$1$i$i135$i>>>0);
         $$$i$i$i144$i = $816 ? -1 : 1;
         if ($815) {
          $_12$sroa$6$0$i$i125$i = $_10$sroa$6$1$i$i130$i;$other1$sroa$4$0$i$i126$i = $other1$sroa$4$1$i$i136$i;$self$sroa$4$0$i$i127$i = $self$sroa$4$1$i$i131$i;
         } else {
          $_0$0$i$i146$i = $$$i$i$i144$i;
          break;
         }
        }
        if ((label|0) == 222) {
         label = 0;
         $not$$sink$i$i$i$i$i$i140$i = $$sink$i$i$i$i$i$i137$i ^ 1;
         $$$i$i141$i = $not$$sink$i$i$i$i$i$i140$i << 31 >> 31;
         $_0$0$i$i146$i = $$$i$i141$i;
        }
        $817 = ($_0$0$i$i146$i<<24>>24)<($decoded$sroa$21$0$i$i1110<<24>>24);
        $$17$i = $784 | $817;
        if ($$17$i) {
         label = 226;
         break;
        }
        $818 = ($766>>>0)>(40);
        if ($818) {
         label = 228;
         break;
        }
        $819 = (((($mant$i)) + 4|0) + ($766<<2)|0);
        $820 = ($766|0)==(0);
        do {
         if ($820) {
          $831 = 0;
         } else {
          $carry$021$i152$i = 0;$iter$sroa$0$0$in20$i153$i = $638;
          while(1) {
           $823 = ((($iter$sroa$0$0$in20$i153$i)) + 4|0);
           $824 = HEAP32[$iter$sroa$0$0$in20$i153$i>>2]|0;
           $825 = (___muldi3(($824|0),0,10,0)|0);
           $826 = tempRet0;
           $827 = (_i64Add(($825|0),($826|0),($carry$021$i152$i|0),0)|0);
           $821 = tempRet0;
           HEAP32[$iter$sroa$0$0$in20$i153$i>>2] = $827;
           $828 = ($823|0)==($819|0);
           if ($828) {
            break;
           } else {
            $carry$021$i152$i = $821;$iter$sroa$0$0$in20$i153$i = $823;
           }
          }
          $822 = ($821|0)==(0);
          if ($822) {
           $831 = $766;
           break;
          }
          $829 = ($766>>>0)<(40);
          if (!($829)) {
           label = 234;
           break L575;
          }
          HEAP32[$819>>2] = $821;
          $830 = (($766) + 1)|0;
          $831 = $830;
         }
        } while(0);
        HEAP32[$mant$i>>2] = $831;
        $832 = ($764>>>0)>(40);
        if ($832) {
         label = 236;
         break;
        }
        $833 = (((($minus$i)) + 4|0) + ($764<<2)|0);
        $834 = ($764|0)==(0);
        do {
         if ($834) {
          $sz$0$i53$i = 0;
         } else {
          $carry$021$i48$i = 0;$iter$sroa$0$0$in20$i49$i = $642;
          while(1) {
           $837 = ((($iter$sroa$0$0$in20$i49$i)) + 4|0);
           $838 = HEAP32[$iter$sroa$0$0$in20$i49$i>>2]|0;
           $839 = (___muldi3(($838|0),0,10,0)|0);
           $840 = tempRet0;
           $841 = (_i64Add(($839|0),($840|0),($carry$021$i48$i|0),0)|0);
           $835 = tempRet0;
           HEAP32[$iter$sroa$0$0$in20$i49$i>>2] = $841;
           $842 = ($837|0)==($833|0);
           if ($842) {
            break;
           } else {
            $carry$021$i48$i = $835;$iter$sroa$0$0$in20$i49$i = $837;
           }
          }
          $836 = ($835|0)==(0);
          if ($836) {
           $sz$0$i53$i = $764;
           break;
          }
          $843 = ($764>>>0)<(40);
          if (!($843)) {
           label = 242;
           break L575;
          }
          HEAP32[$833>>2] = $835;
          $844 = (($764) + 1)|0;
          $sz$0$i53$i = $844;
         }
        } while(0);
        HEAP32[$minus$i>>2] = $sz$0$i53$i;
        $845 = ($785>>>0)>(40);
        if ($845) {
         label = 244;
         break;
        }
        $846 = (((($plus$i)) + 4|0) + ($785<<2)|0);
        $847 = ($785|0)==(0);
        do {
         if ($847) {
          $sz$0$i$i = 0;
         } else {
          $carry$021$i$i = 0;$iter$sroa$0$0$in20$i$i = $644;
          while(1) {
           $850 = ((($iter$sroa$0$0$in20$i$i)) + 4|0);
           $851 = HEAP32[$iter$sroa$0$0$in20$i$i>>2]|0;
           $852 = (___muldi3(($851|0),0,10,0)|0);
           $853 = tempRet0;
           $854 = (_i64Add(($852|0),($853|0),($carry$021$i$i|0),0)|0);
           $848 = tempRet0;
           HEAP32[$iter$sroa$0$0$in20$i$i>>2] = $854;
           $855 = ($850|0)==($846|0);
           if ($855) {
            break;
           } else {
            $carry$021$i$i = $848;$iter$sroa$0$0$in20$i$i = $850;
           }
          }
          $849 = ($848|0)==(0);
          if ($849) {
           $sz$0$i$i = $785;
           break;
          }
          $856 = ($785>>>0)<(40);
          if (!($856)) {
           label = 250;
           break L575;
          }
          HEAP32[$846>>2] = $848;
          $857 = (($785) + 1)|0;
          $sz$0$i$i = $857;
         }
        } while(0);
        HEAP32[$plus$i>>2] = $sz$0$i$i;
        $858 = ($635>>>0)>=($831>>>0);
        $_0$0$sroa$speculated$i$i$i$i$i$i = $858 ? $635 : $831;
        $859 = ($_0$0$sroa$speculated$i$i$i$i$i$i>>>0)>(40);
        if ($859) {
         $_0$0$sroa$speculated$i$i$i$i$i$lcssa$i = $_0$0$sroa$speculated$i$i$i$i$i$i;
         label = 127;
         break;
        } else {
         $1819 = $831;$_0$0$sroa$speculated$i$i$i$i$i338$i = $_0$0$sroa$speculated$i$i$i$i$i$i;$i$0337$i = $763;
        }
       }
       switch (label|0) {
        case 127: {
         __ZN4core5slice20slice_index_len_fail17hed923256c072a803E($_0$0$sroa$speculated$i$i$i$i$i$lcssa$i,40);
         // unreachable;
         break;
        }
        case 141: {
         __ZN4core9panicking5panic17ha7507e8e32961bfeE(6844);
         // unreachable;
         break;
        }
        case 144: {
         __ZN4core5slice20slice_index_len_fail17hed923256c072a803E($_0$0$sroa$speculated$i$i$i$i5$i$i,40);
         // unreachable;
         break;
        }
        case 158: {
         __ZN4core9panicking5panic17ha7507e8e32961bfeE(6844);
         // unreachable;
         break;
        }
        case 161: {
         __ZN4core5slice20slice_index_len_fail17hed923256c072a803E($_0$0$sroa$speculated$i$i$i$i44$i$i,40);
         // unreachable;
         break;
        }
        case 175: {
         __ZN4core9panicking5panic17ha7507e8e32961bfeE(6844);
         // unreachable;
         break;
        }
        case 178: {
         __ZN4core5slice20slice_index_len_fail17hed923256c072a803E($_0$0$sroa$speculated$i$i$i$i83$i$i,40);
         // unreachable;
         break;
        }
        case 192: {
         __ZN4core9panicking5panic17ha7507e8e32961bfeE(6844);
         // unreachable;
         break;
        }
        case 196: {
         __ZN4core5slice20slice_index_len_fail17hed923256c072a803E($_0$0$sroa$speculated$i$i96$i,40);
         // unreachable;
         break;
        }
        case 208: {
         __ZN4core5slice20slice_index_len_fail17hed923256c072a803E($_0$0$sroa$speculated$i$i8$i,40);
         // unreachable;
         break;
        }
        case 213: {
         __ZN4core9panicking18panic_bounds_check17hd14a5808e41829e9E(22904,104,212,$_0$0$sroa$speculated$i$i8$i,40);
         // unreachable;
         break;
        }
        case 215: {
         __ZN4core5slice20slice_index_len_fail17hed923256c072a803E($_0$0$sroa$speculated$i$i122$i,40);
         // unreachable;
         break;
        }
        case 226: {
         L735: do {
          if ($817) {
           L737: do {
            if ($784) {
             $860 = (__ZN4core3num6bignum8Big32x408mul_pow217h21707dacd096bf95E($mant$i,1)|0);
             $861 = HEAP32[$860>>2]|0;
             $862 = HEAP32[$scale$i>>2]|0;
             $863 = ($862>>>0)>=($861>>>0);
             $_0$0$sroa$speculated$i$i$i$i$i = $863 ? $862 : $861;
             $864 = ($_0$0$sroa$speculated$i$i$i$i$i>>>0)>(40);
             if ($864) {
              __ZN4core5slice20slice_index_len_fail17hed923256c072a803E($_0$0$sroa$speculated$i$i$i$i$i,40);
              // unreachable;
             }
             $865 = ((($860)) + 4|0);
             $866 = (((($860)) + 4|0) + ($_0$0$sroa$speculated$i$i$i$i$i<<2)|0);
             $867 = $866;
             $868 = (((($scale$i)) + 4|0) + ($_0$0$sroa$speculated$i$i$i$i$i<<2)|0);
             $869 = $868;
             $_12$sroa$6$0$i$i$i$i$i = 0;$other1$sroa$4$0$i$i$i$i$i = $869;$self$sroa$4$0$i$i$i$i$i = $867;
             while(1) {
              $870 = $self$sroa$4$0$i$i$i$i$i;
              $871 = ($870|0)==($865|0);
              if ($871) {
               $$sink$i$i$i$i60$i$i$i$i$i = 0;$_10$sroa$6$1$i$i$i$i$i = $_12$sroa$6$0$i$i$i$i$i;$self$sroa$4$1$i$i$i$i$i = $self$sroa$4$0$i$i$i$i$i;
              } else {
               $872 = ((($870)) + -4|0);
               $873 = $872;
               $874 = HEAP32[$872>>2]|0;
               $$sink$i$i$i$i60$i$i$i$i$i = 1;$_10$sroa$6$1$i$i$i$i$i = $874;$self$sroa$4$1$i$i$i$i$i = $873;
              }
              $875 = $other1$sroa$4$0$i$i$i$i$i;
              $876 = ($875|0)==($566|0);
              if ($876) {
               $$sink$i$i$i$i$i$i$i$i$i = 1;$_12$sroa$6$1$i$i$i$i$i = $_12$sroa$6$0$i$i$i$i$i;$other1$sroa$4$1$i$i$i$i$i = $other1$sroa$4$0$i$i$i$i$i;
              } else {
               $877 = ((($875)) + -4|0);
               $878 = $877;
               $879 = HEAP32[$877>>2]|0;
               $$sink$i$i$i$i$i$i$i$i$i = 0;$_12$sroa$6$1$i$i$i$i$i = $879;$other1$sroa$4$1$i$i$i$i$i = $878;
              }
              $switch$i$i$i$i$i = ($$sink$i$i$i$i60$i$i$i$i$i|0)==(0);
              if ($switch$i$i$i$i$i) {
               label = 264;
               break;
              }
              if ($$sink$i$i$i$i$i$i$i$i$i) {
               break L737;
              }
              $880 = ($_10$sroa$6$1$i$i$i$i$i|0)==($_12$sroa$6$1$i$i$i$i$i|0);
              if ($880) {
               $_12$sroa$6$0$i$i$i$i$i = $_10$sroa$6$1$i$i$i$i$i;$other1$sroa$4$0$i$i$i$i$i = $other1$sroa$4$1$i$i$i$i$i;$self$sroa$4$0$i$i$i$i$i = $self$sroa$4$1$i$i$i$i$i;
              } else {
               label = 263;
               break;
              }
             }
             if ((label|0) == 263) {
              $881 = ($_10$sroa$6$1$i$i$i$i$i>>>0)<($_12$sroa$6$1$i$i$i$i$i>>>0);
              if ($881) {
               $i$2$i = $763;$k$2$i = $k$0$i;
               break L735;
              } else {
               break;
              }
             }
             else if ((label|0) == 264) {
              if ($$sink$i$i$i$i$i$i$i$i$i) {
               break;
              } else {
               $i$2$i = $763;$k$2$i = $k$0$i;
               break L735;
              }
             }
            }
           } while(0);
           $882 = (__ZN4core3num7flt2dec8round_up17h7add2f9e6cce7cd7E($buf,1024,$763)|0);
           $_216$sroa$0$0$extract$trunc$i = $882&255;
           $_216$sroa$4$0$extract$shift$i = ($882&65535) >>> 8;
           $_216$sroa$4$0$extract$trunc$i = $_216$sroa$4$0$extract$shift$i&255;
           $switch$i = ($_216$sroa$0$0$extract$trunc$i<<24>>24)==(0);
           if ($switch$i) {
            $i$2$i = $763;$k$2$i = $k$0$i;
            break;
           }
           $883 = ($763>>>0)<(1024);
           if ($883) {
            $884 = (($buf) + ($763)|0);
            HEAP8[$884>>0] = $_216$sroa$4$0$extract$trunc$i;
            $885 = (($i$0337$i) + 2)|0;
            $886 = (($k$0$i) + 1)<<16>>16;
            $i$2$i = $885;$k$2$i = $886;
            break;
           } else {
            __ZN4core9panicking18panic_bounds_check17hd14a5808e41829e9E(23048,121,218,$763,1024);
            // unreachable;
           }
          } else {
           $i$2$i = $763;$k$2$i = $k$0$i;
          }
         } while(0);
         $887 = $i$2$i;$tmp_ret$i$sroa$5$0 = $k$2$i;
         break L475;
         break;
        }
        case 228: {
         __ZN4core5slice20slice_index_len_fail17hed923256c072a803E($766,40);
         // unreachable;
         break;
        }
        case 234: {
         __ZN4core9panicking18panic_bounds_check17hd14a5808e41829e9E(22904,104,267,$766,40);
         // unreachable;
         break;
        }
        case 236: {
         __ZN4core5slice20slice_index_len_fail17hed923256c072a803E($764,40);
         // unreachable;
         break;
        }
        case 242: {
         __ZN4core9panicking18panic_bounds_check17hd14a5808e41829e9E(22904,104,267,$764,40);
         // unreachable;
         break;
        }
        case 244: {
         __ZN4core5slice20slice_index_len_fail17hed923256c072a803E($785,40);
         // unreachable;
         break;
        }
        case 250: {
         __ZN4core9panicking18panic_bounds_check17hd14a5808e41829e9E(22904,104,267,$785,40);
         // unreachable;
         break;
        }
        case 268: {
         __ZN4core9panicking18panic_bounds_check17hd14a5808e41829e9E(23048,121,164,$i$0337$i,1024);
         // unreachable;
         break;
        }
       }
      }
     } while(0);
     $888 = ($887>>>0)>(1024);
     if ($888) {
      __ZN4core5slice20slice_index_len_fail17hed923256c072a803E($887,1024);
      // unreachable;
     }
     $889 = ($887|0)==(0);
     if ($889) {
      __ZN4core9panicking5panic17ha7507e8e32961bfeE(7180);
      // unreachable;
     }
     $890 = HEAP8[$buf>>0]|0;
     $891 = ($890&255)<(49);
     if ($891) {
      __ZN4core9panicking5panic17ha7507e8e32961bfeE(7200);
      // unreachable;
     }
     $892 = ($tmp_ret$i$sroa$5$0<<16>>16)<(1);
     $893 = $tmp_ret$i$sroa$5$0 << 16 >> 16;
     do {
      if ($892) {
       $897 = (0 - ($893))|0;
       HEAP16[$parts>>1] = 2;
       $898 = ((($parts)) + 4|0);
       HEAP32[$898>>2] = 23819;
       $899 = ((($parts)) + 8|0);
       HEAP32[$899>>2] = 2;
       HEAP16[$_15$sroa$0$0$$sroa_idx$1>>1] = 0;
       HEAP32[$_15$sroa$47$0$$sroa_idx8$1>>2] = $897;
       HEAP16[$_15$sroa$0$0$$sroa_idx$2>>1] = 2;
       $900 = ((($parts)) + 28|0);
       HEAP32[$900>>2] = $buf;
       $901 = ((($parts)) + 32|0);
       HEAP32[$901>>2] = $887;
       $_0$sroa$7$1$i = 3;
      } else {
       $894 = ($893>>>0)<($887>>>0);
       HEAP16[$parts>>1] = 2;
       $895 = ((($parts)) + 4|0);
       HEAP32[$895>>2] = $buf;
       $896 = ((($parts)) + 8|0);
       if ($894) {
        HEAP32[$896>>2] = $893;
        HEAP16[$_15$sroa$0$0$$sroa_idx$1>>1] = 2;
        $902 = ((($parts)) + 16|0);
        HEAP32[$902>>2] = 23821;
        $903 = ((($parts)) + 20|0);
        HEAP32[$903>>2] = 1;
        $904 = (($buf) + ($893)|0);
        $905 = (($887) - ($893))|0;
        HEAP16[$_15$sroa$0$0$$sroa_idx$2>>1] = 2;
        $906 = ((($parts)) + 28|0);
        HEAP32[$906>>2] = $904;
        $907 = ((($parts)) + 32|0);
        HEAP32[$907>>2] = $905;
        $_0$sroa$7$1$i = 3;
        break;
       } else {
        HEAP32[$896>>2] = $887;
        $908 = (($893) - ($887))|0;
        HEAP16[$_15$sroa$0$0$$sroa_idx$1>>1] = 0;
        HEAP32[$_15$sroa$47$0$$sroa_idx8$1>>2] = $908;
        $_0$sroa$7$1$i = 2;
        break;
       }
      }
     } while(0);
     HEAP32[$formatted>>2] = $_0$sroa$0$0$i$i1116;
     $909 = ((($formatted)) + 4|0);
     HEAP32[$909>>2] = $_0$sroa$12$0$i$i1119;
     $910 = ((($formatted)) + 8|0);
     HEAP32[$910>>2] = $parts;
     $911 = ((($formatted)) + 12|0);
     HEAP32[$911>>2] = $_0$sroa$7$1$i;
     $912 = $_0$sroa$0$0$i$i1116;
     $1820 = $_0$sroa$7$1$i;$1821 = $_0$sroa$12$0$i$i1119;$1822 = $912;
    }
   } while(0);
   $930 = $parts;
   $1711 = $1822;$1713 = $1821;$1715 = $930;$1717 = $1820;
  }
 } while(0);
 $1706 = ((($0)) + 12|0);
 $1707 = HEAP32[$1706>>2]|0;
 $switch$i200 = ($1707|0)==(1);
 if (!($switch$i200)) {
  $1708 = (__ZN4core3fmt9Formatter21write_formatted_parts17haf59c3ac10919977E($0,$formatted)|0);
  $_0$sroa$0$1$i206 = $1708;
  STACKTOP = sp;return ($_0$sroa$0$1$i206|0);
 }
 $1709 = ((($0)) + 16|0);
 $1710 = HEAP32[$1709>>2]|0;
 HEAP32[$formatted$i>>2] = $1711;
 $1712 = ((($formatted$i)) + 4|0);
 HEAP32[$1712>>2] = $1713;
 $1714 = ((($formatted$i)) + 8|0);
 HEAP32[$1714>>2] = $1715;
 $1716 = ((($formatted$i)) + 12|0);
 HEAP32[$1716>>2] = $1717;
 $1718 = ((($0)) + 8|0);
 $1719 = HEAP8[$1718>>0]|0;
 $1720 = ((($0)) + 4|0);
 $1721 = HEAP32[$1720>>2]|0;
 $1722 = HEAP32[$0>>2]|0;
 $1723 = $1722 & 8;
 $1724 = ($1723|0)==(0);
 $1725 = $1715;
 do {
  if ($1724) {
   $1756 = $1721;$1825 = $1713;$align$0$i = $1719;$width$0$i = $1710;
  } else {
   $1726 = $1711;
   $1727 = ((($0)) + 28|0);
   $1728 = HEAP32[$1727>>2]|0;
   $1729 = ((($0)) + 32|0);
   $1730 = HEAP32[$1729>>2]|0;
   $1731 = ((($1730)) + 12|0);
   $1732 = HEAP32[$1731>>2]|0;
   $1733 = (FUNCTION_TABLE_iiii[$1732 & 511]($1728,$1726,$1713)|0);
   $not$switch4$i$i = ($1733<<24>>24)==(0);
   if ($not$switch4$i$i) {
    HEAP32[$formatted$i>>2] = 27292;
    HEAP32[$1712>>2] = 0;
    $1734 = ($1710>>>0)<($1713>>>0);
    $1735 = (($1710) - ($1713))|0;
    $$$i204 = $1734 ? 0 : $1735;
    HEAP32[$1720>>2] = 48;
    $1756 = 48;$1825 = 0;$align$0$i = 1;$width$0$i = $$$i204;
    break;
   }
   $_0$sroa$0$1$i206 = 1;
   STACKTOP = sp;return ($_0$sroa$0$1$i206|0);
  }
 } while(0);
 $1736 = (($1725) + (($1717*12)|0)|0);
 $1737 = ($1717|0)==(0);
 L803: do {
  if ($1737) {
   $len$0$lcssa$i$i = $1825;
  } else {
   $iter$sroa$0$0$in16$i$i = $1725;$len$017$i$i = $1825;
   L804: while(1) {
    $1738 = ((($iter$sroa$0$0$in16$i$i)) + 12|0);
    $1739 = HEAP16[$iter$sroa$0$0$in16$i$i>>1]|0;
    $trunc$i$i$i208 = $1739&255;
    $trunc$i$i$i208$clear = $trunc$i$i$i208 & 3;
    L806: do {
     switch ($trunc$i$i$i208$clear<<24>>24) {
     case 0:  {
      $1740 = ((($iter$sroa$0$0$in16$i$i)) + 4|0);
      $1741 = HEAP32[$1740>>2]|0;
      $_0$0$i$i$i214 = $1741;
      break;
     }
     case 1:  {
      $1742 = ((($iter$sroa$0$0$in16$i$i)) + 2|0);
      $1743 = HEAP16[$1742>>1]|0;
      $1744 = ($1743&65535)<(1000);
      if (!($1744)) {
       $1748 = ($1743&65535)<(10000);
       $$$i$i$i212 = $1748 ? 4 : 5;
       $_0$0$i$i$i214 = $$$i$i$i212;
       break L806;
      }
      $1747 = ($1743&65535)<(10);
      if ($1747) {
       $_0$0$i$i$i214 = 1;
      } else {
       $1749 = ($1743&65535)<(100);
       $$1$i$i$i = $1749 ? 2 : 3;
       $_0$0$i$i$i214 = $$1$i$i$i;
      }
      break;
     }
     case 2:  {
      $1745 = ((($iter$sroa$0$0$in16$i$i)) + 8|0);
      $1746 = HEAP32[$1745>>2]|0;
      $_0$0$i$i$i214 = $1746;
      break;
     }
     default: {
      break L804;
     }
     }
    } while(0);
    $1750 = (($_0$0$i$i$i214) + ($len$017$i$i))|0;
    $1751 = ($1738|0)==($1736|0);
    if ($1751) {
     $len$0$lcssa$i$i = $1750;
     break L803;
    } else {
     $iter$sroa$0$0$in16$i$i = $1738;$len$017$i$i = $1750;
    }
   }
   // unreachable;
  }
 } while(0);
 $1752 = ($width$0$i>>>0)>($len$0$lcssa$i$i>>>0);
 do {
  if ($1752) {
   $1754 = (($width$0$i) - ($len$0$lcssa$i$i))|0;
   $1755 = HEAP8[$1718>>0]|0;
   $cond$i$i = ($1755<<24>>24)==(3);
   $$$i$i216 = $cond$i$i ? $align$0$i : $1755;
   switch ($$$i$i216<<24>>24) {
   case 0:  {
    $_15$sroa$0$0$i$i = 0;$_15$sroa$6$0$i$i = $1754;
    break;
   }
   case 3: case 1:  {
    $_15$sroa$0$0$i$i = $1754;$_15$sroa$6$0$i$i = 0;
    break;
   }
   case 2:  {
    $1758 = $1754 >>> 1;
    $1759 = (($1754) + 1)|0;
    $1760 = $1759 >>> 1;
    $_15$sroa$0$0$i$i = $1758;$_15$sroa$6$0$i$i = $1760;
    break;
   }
   default: {
    // unreachable;
   }
   }
   HEAP32[$fill$i$i>>2] = 0;
   $1757 = ($1756>>>0)<(128);
   do {
    if ($1757) {
     $1778 = $1756&255;
     HEAP8[$fill$i$i>>0] = $1778;
     $len$2$i$i$i = 1;
    } else {
     $1779 = ($1756>>>0)<(2048);
     if ($1779) {
      $1780 = $1756 >>> 6;
      $1781 = $1780 & 31;
      $1782 = $1781&255;
      $1783 = $1782 | -64;
      HEAP8[$fill$i$i>>0] = $1783;
      $1784 = $1756 & 63;
      $1785 = $1784&255;
      $1786 = ((($fill$i$i)) + 1|0);
      $1787 = $1785 | -128;
      HEAP8[$1786>>0] = $1787;
      $len$2$i$i$i = 2;
      break;
     }
     $1788 = ($1756>>>0)<(65536);
     if ($1788) {
      $1789 = $1756 >>> 12;
      $1790 = $1789 & 15;
      $1791 = $1790&255;
      $1792 = $1791 | -32;
      HEAP8[$fill$i$i>>0] = $1792;
      $1793 = $1756 >>> 6;
      $1794 = $1793 & 63;
      $1795 = $1794&255;
      $1796 = ((($fill$i$i)) + 1|0);
      $1797 = $1795 | -128;
      HEAP8[$1796>>0] = $1797;
      $1798 = $1756 & 63;
      $1799 = $1798&255;
      $1800 = ((($fill$i$i)) + 2|0);
      $1801 = $1799 | -128;
      HEAP8[$1800>>0] = $1801;
      $len$2$i$i$i = 3;
      break;
     } else {
      $1802 = $1756 >>> 18;
      $1803 = $1802&255;
      $1804 = $1803 | -16;
      HEAP8[$fill$i$i>>0] = $1804;
      $1805 = $1756 >>> 12;
      $1806 = $1805 & 63;
      $1807 = $1806&255;
      $1808 = ((($fill$i$i)) + 1|0);
      $1809 = $1807 | -128;
      HEAP8[$1808>>0] = $1809;
      $1810 = $1756 >>> 6;
      $1811 = $1810 & 63;
      $1812 = $1811&255;
      $1813 = ((($fill$i$i)) + 2|0);
      $1814 = $1812 | -128;
      HEAP8[$1813>>0] = $1814;
      $1815 = $1756 & 63;
      $1816 = $1815&255;
      $1817 = ((($fill$i$i)) + 3|0);
      $1818 = $1816 | -128;
      HEAP8[$1817>>0] = $1818;
      $len$2$i$i$i = 4;
      break;
     }
    }
   } while(0);
   $1764 = ((($0)) + 28|0);
   $1766 = ((($0)) + 32|0);
   $iter$sroa$0$0$i$i = 0;
   while(1) {
    $1761 = ($iter$sroa$0$0$i$i>>>0)<($_15$sroa$0$0$i$i>>>0);
    if (!($1761)) {
     break;
    }
    $1762 = (($iter$sroa$0$0$i$i) + 1)|0;
    $1763 = HEAP32[$1764>>2]|0;
    $1765 = HEAP32[$1766>>2]|0;
    $1767 = ((($1765)) + 12|0);
    $1768 = HEAP32[$1767>>2]|0;
    $1769 = (FUNCTION_TABLE_iiii[$1768 & 511]($1763,$fill$i$i,$len$2$i$i$i)|0);
    $not$switch4$i63$i$i = ($1769<<24>>24)==(0);
    if ($not$switch4$i63$i$i) {
     $iter$sroa$0$0$i$i = $1762;
    } else {
     label = 583;
     break;
    }
   }
   if ((label|0) == 583) {
    $ret$sroa$0$0$i = 1;
    break;
   }
   $1770 = (__ZN4core3fmt9Formatter21write_formatted_parts17haf59c3ac10919977E($0,$formatted$i)|0);
   $not$switch4$i69$i$i = ($1770<<24>>24)==(0);
   if ($not$switch4$i69$i$i) {
    $iter2$sroa$0$0$i$i = 0;
   } else {
    $ret$sroa$0$0$i = 1;
    break;
   }
   while(1) {
    $1771 = ($iter2$sroa$0$0$i$i>>>0)<($_15$sroa$6$0$i$i>>>0);
    if (!($1771)) {
     label = 587;
     break;
    }
    $1772 = (($iter2$sroa$0$0$i$i) + 1)|0;
    $1773 = HEAP32[$1764>>2]|0;
    $1774 = HEAP32[$1766>>2]|0;
    $1775 = ((($1774)) + 12|0);
    $1776 = HEAP32[$1775>>2]|0;
    $1777 = (FUNCTION_TABLE_iiii[$1776 & 511]($1773,$fill$i$i,$len$2$i$i$i)|0);
    $not$switch4$i$i$i = ($1777<<24>>24)==(0);
    if ($not$switch4$i$i$i) {
     $iter2$sroa$0$0$i$i = $1772;
    } else {
     label = 588;
     break;
    }
   }
   if ((label|0) == 587) {
    $ret$sroa$0$0$i = 0;
    break;
   }
   else if ((label|0) == 588) {
    $ret$sroa$0$0$i = 1;
    break;
   }
  } else {
   $1753 = (__ZN4core3fmt9Formatter21write_formatted_parts17haf59c3ac10919977E($0,$formatted$i)|0);
   $ret$sroa$0$0$i = $1753;
  }
 } while(0);
 HEAP32[$1720>>2] = $1721;
 $_0$sroa$0$1$i206 = $ret$sroa$0$0$i;
 STACKTOP = sp;return ($_0$sroa$0$1$i206|0);
}
function __ZN4core3fmt9Formatter21write_formatted_parts17haf59c3ac10919977E($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$$i69 = 0, $$1$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $8 = 0, $9 = 0, $_0$0$i = 0, $_0$0$i$in = 0, $_0$0$i108122 = 0, $_0$0$i108123 = 0, $_0$sroa$0$0 = 0, $iter2$sroa$4$0$in111 = 0;
 var $not$switch4$i = 0, $not$switch4$i70 = 0, $not$switch4$i73 = 0, $not$switch4$i78 = 0, $not$switch4$i80 = 0, $nzeroes$0$lcssa121 = 0, $nzeroes$0113 = 0, $s = 0, $trunc = 0, $trunc$clear = 0, $trunc$i = 0, $trunc$i$clear = 0, $v$0112 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $s = sp;
 $2 = ((($1)) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($3|0)==(0);
 if (!($4)) {
  $5 = ((($0)) + 28|0);
  $6 = HEAP32[$5>>2]|0;
  $7 = ((($0)) + 32|0);
  $8 = HEAP32[$7>>2]|0;
  $9 = HEAP32[$1>>2]|0;
  $10 = ((($8)) + 12|0);
  $11 = HEAP32[$10>>2]|0;
  $12 = (FUNCTION_TABLE_iiii[$11 & 511]($6,$9,$3)|0);
  $not$switch4$i = ($12<<24>>24)==(0);
  if (!($not$switch4$i)) {
   $_0$sroa$0$0 = 1;
   STACKTOP = sp;return ($_0$sroa$0$0|0);
  }
 }
 $13 = ((($1)) + 8|0);
 $14 = HEAP32[$13>>2]|0;
 $15 = ((($1)) + 12|0);
 $16 = HEAP32[$15>>2]|0;
 $17 = (($14) + (($16*12)|0)|0);
 $18 = ($16|0)==(0);
 if ($18) {
  $_0$sroa$0$0 = 0;
  STACKTOP = sp;return ($_0$sroa$0$0|0);
 }
 $19 = ((($0)) + 28|0);
 $20 = ((($0)) + 32|0);
 $22 = $14;
 L8: while(1) {
  $21 = ((($22)) + 12|0);
  $23 = HEAP16[$22>>1]|0;
  $trunc = $23&255;
  $trunc$clear = $trunc & 3;
  L10: do {
   switch ($trunc$clear<<24>>24) {
   case 0:  {
    $24 = ((($22)) + 4|0);
    $25 = HEAP32[$24>>2]|0;
    $26 = ($25>>>0)>(64);
    if ($26) {
     $nzeroes$0113 = $25;
     while(1) {
      $41 = HEAP32[$19>>2]|0;
      $42 = HEAP32[$20>>2]|0;
      $43 = ((($42)) + 12|0);
      $44 = HEAP32[$43>>2]|0;
      $45 = (FUNCTION_TABLE_iiii[$44 & 511]($41,24525,64)|0);
      $not$switch4$i78 = ($45<<24>>24)==(0);
      if (!($not$switch4$i78)) {
       $_0$sroa$0$0 = 1;
       label = 3;
       break L8;
      }
      $46 = (($nzeroes$0113) + -64)|0;
      $47 = ($46>>>0)>(64);
      if ($47) {
       $nzeroes$0113 = $46;
      } else {
       $nzeroes$0$lcssa121 = $46;
       break;
      }
     }
    } else {
     $39 = ($25|0)==(0);
     if ($39) {
      break L10;
     } else {
      $nzeroes$0$lcssa121 = $25;
     }
    }
    $48 = HEAP32[$20>>2]|0;
    $49 = HEAP32[$19>>2]|0;
    $50 = ((($48)) + 12|0);
    $51 = HEAP32[$50>>2]|0;
    $52 = (FUNCTION_TABLE_iiii[$51 & 511]($49,24525,$nzeroes$0$lcssa121)|0);
    $not$switch4$i73 = ($52<<24>>24)==(0);
    if (!($not$switch4$i73)) {
     $_0$sroa$0$0 = 1;
     label = 3;
     break L8;
    }
    break;
   }
   case 1:  {
    $27 = ((($22)) + 2|0);
    $28 = HEAP16[$27>>1]|0;
    ;HEAP8[$s>>0]=0|0;HEAP8[$s+1>>0]=0|0;HEAP8[$s+2>>0]=0|0;HEAP8[$s+3>>0]=0|0;HEAP8[$s+4>>0]=0|0;
    $29 = HEAP16[$22>>1]|0;
    $trunc$i = $29&255;
    $trunc$i$clear = $trunc$i & 3;
    L19: do {
     switch ($trunc$i$clear<<24>>24) {
     case 0:  {
      $64 = ((($22)) + 4|0);
      $_0$0$i$in = $64;
      label = 25;
      break;
     }
     case 1:  {
      $65 = HEAP16[$27>>1]|0;
      $66 = ($65&65535)<(1000);
      if (!($66)) {
       $69 = ($65&65535)<(10000);
       $$$i69 = $69 ? 4 : 5;
       $_0$0$i108122 = $$$i69;
       label = 28;
       break L19;
      }
      $68 = ($65&65535)<(10);
      if ($68) {
       $_0$0$i108122 = 1;
       label = 28;
      } else {
       $70 = ($65&65535)<(100);
       $$1$i = $70 ? 2 : 3;
       $_0$0$i108122 = $$1$i;
       label = 28;
      }
      break;
     }
     case 2:  {
      $67 = ((($22)) + 8|0);
      $_0$0$i$in = $67;
      label = 25;
      break;
     }
     default: {
      label = 24;
      break L8;
     }
     }
    } while(0);
    if ((label|0) == 25) {
     label = 0;
     $_0$0$i = HEAP32[$_0$0$i$in>>2]|0;
     $71 = ($_0$0$i>>>0)>(5);
     if ($71) {
      label = 26;
      break L8;
     }
     $72 = ($_0$0$i|0)==(0);
     if ($72) {
      $_0$0$i108123 = 0;
     } else {
      $_0$0$i108122 = $_0$0$i;
      label = 28;
     }
    }
    if ((label|0) == 28) {
     label = 0;
     $73 = (($s) + ($_0$0$i108122)|0);
     $iter2$sroa$4$0$in111 = $73;$v$0112 = $28;
     while(1) {
      $53 = ((($iter2$sroa$4$0$in111)) + -1|0);
      $54 = (($v$0112&65535) % 10)&-1;
      $55 = $54&255;
      $56 = $55 | 48;
      HEAP8[$53>>0] = $56;
      $57 = (($v$0112&65535) / 10)&-1;
      $58 = ($53|0)==($s|0);
      if ($58) {
       $_0$0$i108123 = $_0$0$i108122;
       break;
      } else {
       $iter2$sroa$4$0$in111 = $53;$v$0112 = $57;
      }
     }
    }
    $59 = HEAP32[$19>>2]|0;
    $60 = HEAP32[$20>>2]|0;
    $61 = ((($60)) + 12|0);
    $62 = HEAP32[$61>>2]|0;
    $63 = (FUNCTION_TABLE_iiii[$62 & 511]($59,$s,$_0$0$i108123)|0);
    $not$switch4$i70 = ($63<<24>>24)==(0);
    if (!($not$switch4$i70)) {
     $_0$sroa$0$0 = 1;
     label = 3;
     break L8;
    }
    break;
   }
   case 2:  {
    $30 = ((($22)) + 4|0);
    $31 = HEAP32[$30>>2]|0;
    $32 = ((($22)) + 8|0);
    $33 = HEAP32[$32>>2]|0;
    $34 = HEAP32[$19>>2]|0;
    $35 = HEAP32[$20>>2]|0;
    $36 = ((($35)) + 12|0);
    $37 = HEAP32[$36>>2]|0;
    $38 = (FUNCTION_TABLE_iiii[$37 & 511]($34,$31,$33)|0);
    $not$switch4$i80 = ($38<<24>>24)==(0);
    if (!($not$switch4$i80)) {
     $_0$sroa$0$0 = 1;
     label = 3;
     break L8;
    }
    break;
   }
   default: {
    label = 17;
    break L8;
   }
   }
  } while(0);
  $40 = ($21|0)==($17|0);
  if ($40) {
   $_0$sroa$0$0 = 0;
   label = 3;
   break;
  } else {
   $22 = $21;
  }
 }
 if ((label|0) == 3) {
  STACKTOP = sp;return ($_0$sroa$0$0|0);
 }
 else if ((label|0) == 17) {
  // unreachable;
 }
 else if ((label|0) == 24) {
  // unreachable;
 }
 else if ((label|0) == 26) {
  __ZN4core5slice20slice_index_len_fail17hed923256c072a803E($_0$0$i,5);
  // unreachable;
 }
 return (0)|0;
}
function __ZN42__LT_f32_u20_as_u20_core__fmt__Display_GT_3fmt17ha49dec0dda622073E($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (__ZN4core3fmt23float_to_decimal_common17hf65793c26e44a3e2E($1,$0)|0);
 return ($2|0);
}
function ___stdio_close($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $vararg_buffer = sp;
 $1 = ((($0)) + 60|0);
 $2 = HEAP32[$1>>2]|0;
 HEAP32[$vararg_buffer>>2] = $2;
 $3 = (___syscall6(6,($vararg_buffer|0))|0);
 $4 = (___syscall_ret($3)|0);
 STACKTOP = sp;return ($4|0);
}
function ___stdio_write($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $$056 = 0, $$058 = 0, $$059 = 0, $$061 = 0, $$1 = 0, $$157 = 0, $$160 = 0, $$phi$trans$insert = 0, $$pre = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0;
 var $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0;
 var $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, $vararg_buffer = 0, $vararg_buffer3 = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr6 = 0, $vararg_ptr7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $vararg_buffer3 = sp + 16|0;
 $vararg_buffer = sp;
 $3 = sp + 32|0;
 $4 = ((($0)) + 28|0);
 $5 = HEAP32[$4>>2]|0;
 HEAP32[$3>>2] = $5;
 $6 = ((($3)) + 4|0);
 $7 = ((($0)) + 20|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = (($8) - ($5))|0;
 HEAP32[$6>>2] = $9;
 $10 = ((($3)) + 8|0);
 HEAP32[$10>>2] = $1;
 $11 = ((($3)) + 12|0);
 HEAP32[$11>>2] = $2;
 $12 = (($9) + ($2))|0;
 $13 = ((($0)) + 60|0);
 $14 = ((($0)) + 44|0);
 $$056 = 2;$$058 = $12;$$059 = $3;
 while(1) {
  $15 = HEAP32[6687]|0;
  $16 = ($15|0)==(0|0);
  if ($16) {
   $20 = HEAP32[$13>>2]|0;
   HEAP32[$vararg_buffer3>>2] = $20;
   $vararg_ptr6 = ((($vararg_buffer3)) + 4|0);
   HEAP32[$vararg_ptr6>>2] = $$059;
   $vararg_ptr7 = ((($vararg_buffer3)) + 8|0);
   HEAP32[$vararg_ptr7>>2] = $$056;
   $21 = (___syscall146(146,($vararg_buffer3|0))|0);
   $22 = (___syscall_ret($21)|0);
   $$0 = $22;
  } else {
   _pthread_cleanup_push((373|0),($0|0));
   $17 = HEAP32[$13>>2]|0;
   HEAP32[$vararg_buffer>>2] = $17;
   $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
   HEAP32[$vararg_ptr1>>2] = $$059;
   $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
   HEAP32[$vararg_ptr2>>2] = $$056;
   $18 = (___syscall146(146,($vararg_buffer|0))|0);
   $19 = (___syscall_ret($18)|0);
   _pthread_cleanup_pop(0);
   $$0 = $19;
  }
  $23 = ($$058|0)==($$0|0);
  if ($23) {
   label = 6;
   break;
  }
  $30 = ($$0|0)<(0);
  if ($30) {
   label = 8;
   break;
  }
  $38 = (($$058) - ($$0))|0;
  $39 = ((($$059)) + 4|0);
  $40 = HEAP32[$39>>2]|0;
  $41 = ($$0>>>0)>($40>>>0);
  if ($41) {
   $42 = HEAP32[$14>>2]|0;
   HEAP32[$4>>2] = $42;
   HEAP32[$7>>2] = $42;
   $43 = (($$0) - ($40))|0;
   $44 = ((($$059)) + 8|0);
   $45 = (($$056) + -1)|0;
   $$phi$trans$insert = ((($$059)) + 12|0);
   $$pre = HEAP32[$$phi$trans$insert>>2]|0;
   $$1 = $43;$$157 = $45;$$160 = $44;$53 = $$pre;
  } else {
   $46 = ($$056|0)==(2);
   if ($46) {
    $47 = HEAP32[$4>>2]|0;
    $48 = (($47) + ($$0)|0);
    HEAP32[$4>>2] = $48;
    $$1 = $$0;$$157 = 2;$$160 = $$059;$53 = $40;
   } else {
    $$1 = $$0;$$157 = $$056;$$160 = $$059;$53 = $40;
   }
  }
  $49 = HEAP32[$$160>>2]|0;
  $50 = (($49) + ($$1)|0);
  HEAP32[$$160>>2] = $50;
  $51 = ((($$160)) + 4|0);
  $52 = (($53) - ($$1))|0;
  HEAP32[$51>>2] = $52;
  $$056 = $$157;$$058 = $38;$$059 = $$160;
 }
 if ((label|0) == 6) {
  $24 = HEAP32[$14>>2]|0;
  $25 = ((($0)) + 48|0);
  $26 = HEAP32[$25>>2]|0;
  $27 = (($24) + ($26)|0);
  $28 = ((($0)) + 16|0);
  HEAP32[$28>>2] = $27;
  $29 = $24;
  HEAP32[$4>>2] = $29;
  HEAP32[$7>>2] = $29;
  $$061 = $2;
 }
 else if ((label|0) == 8) {
  $31 = ((($0)) + 16|0);
  HEAP32[$31>>2] = 0;
  HEAP32[$4>>2] = 0;
  HEAP32[$7>>2] = 0;
  $32 = HEAP32[$0>>2]|0;
  $33 = $32 | 32;
  HEAP32[$0>>2] = $33;
  $34 = ($$056|0)==(2);
  if ($34) {
   $$061 = 0;
  } else {
   $35 = ((($$059)) + 4|0);
   $36 = HEAP32[$35>>2]|0;
   $37 = (($2) - ($36))|0;
   $$061 = $37;
  }
 }
 STACKTOP = sp;return ($$061|0);
}
function ___stdio_seek($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$pre = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr3 = 0, $vararg_ptr4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $vararg_buffer = sp;
 $3 = sp + 20|0;
 $4 = ((($0)) + 60|0);
 $5 = HEAP32[$4>>2]|0;
 HEAP32[$vararg_buffer>>2] = $5;
 $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
 HEAP32[$vararg_ptr1>>2] = 0;
 $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
 HEAP32[$vararg_ptr2>>2] = $1;
 $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
 HEAP32[$vararg_ptr3>>2] = $3;
 $vararg_ptr4 = ((($vararg_buffer)) + 16|0);
 HEAP32[$vararg_ptr4>>2] = $2;
 $6 = (___syscall140(140,($vararg_buffer|0))|0);
 $7 = (___syscall_ret($6)|0);
 $8 = ($7|0)<(0);
 if ($8) {
  HEAP32[$3>>2] = -1;
  $9 = -1;
 } else {
  $$pre = HEAP32[$3>>2]|0;
  $9 = $$pre;
 }
 STACKTOP = sp;return ($9|0);
}
function ___syscall_ret($0) {
 $0 = $0|0;
 var $$0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0>>>0)>(4294963200);
 if ($1) {
  $2 = (0 - ($0))|0;
  $3 = (___errno_location()|0);
  HEAP32[$3>>2] = $2;
  $$0 = -1;
 } else {
  $$0 = $0;
 }
 return ($$0|0);
}
function ___errno_location() {
 var $$0 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[6687]|0;
 $1 = ($0|0)==(0|0);
 if ($1) {
  $$0 = 26792;
 } else {
  $2 = (_pthread_self()|0);
  $3 = ((($2)) + 64|0);
  $4 = HEAP32[$3>>2]|0;
  $$0 = $4;
 }
 return ($$0|0);
}
function _cleanup_387($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 68|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)==(0);
 if ($3) {
  ___unlockfile($0);
 }
 return;
}
function ___unlockfile($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function ___stdout_write($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(80|0);
 $vararg_buffer = sp;
 $3 = sp + 12|0;
 $4 = ((($0)) + 36|0);
 HEAP32[$4>>2] = 374;
 $5 = HEAP32[$0>>2]|0;
 $6 = $5 & 64;
 $7 = ($6|0)==(0);
 if ($7) {
  $8 = ((($0)) + 60|0);
  $9 = HEAP32[$8>>2]|0;
  HEAP32[$vararg_buffer>>2] = $9;
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  HEAP32[$vararg_ptr1>>2] = 21505;
  $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
  HEAP32[$vararg_ptr2>>2] = $3;
  $10 = (___syscall54(54,($vararg_buffer|0))|0);
  $11 = ($10|0)==(0);
  if (!($11)) {
   $12 = ((($0)) + 75|0);
   HEAP8[$12>>0] = -1;
  }
 }
 $13 = (___stdio_write($0,$1,$2)|0);
 STACKTOP = sp;return ($13|0);
}
function _memcmp($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$01318 = 0, $$01417 = 0, $$019 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($2|0)==(0);
 L1: do {
  if ($3) {
   $14 = 0;
  } else {
   $$01318 = $0;$$01417 = $2;$$019 = $1;
   while(1) {
    $4 = HEAP8[$$01318>>0]|0;
    $5 = HEAP8[$$019>>0]|0;
    $6 = ($4<<24>>24)==($5<<24>>24);
    if (!($6)) {
     break;
    }
    $7 = (($$01417) + -1)|0;
    $8 = ((($$01318)) + 1|0);
    $9 = ((($$019)) + 1|0);
    $10 = ($7|0)==(0);
    if ($10) {
     $14 = 0;
     break L1;
    } else {
     $$01318 = $8;$$01417 = $7;$$019 = $9;
    }
   }
   $11 = $4&255;
   $12 = $5&255;
   $13 = (($11) - ($12))|0;
   $14 = $13;
  }
 } while(0);
 return ($14|0);
}
function ___lockfile($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function _strerror($0) {
 $0 = $0|0;
 var $$011$lcssa = 0, $$01113 = 0, $$015 = 0, $$112 = 0, $$114 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $$015 = 0;
 while(1) {
  $2 = (24589 + ($$015)|0);
  $3 = HEAP8[$2>>0]|0;
  $4 = $3&255;
  $5 = ($4|0)==($0|0);
  if ($5) {
   label = 2;
   break;
  }
  $6 = (($$015) + 1)|0;
  $7 = ($6|0)==(87);
  if ($7) {
   $$01113 = 24677;$$114 = 87;
   label = 5;
   break;
  } else {
   $$015 = $6;
  }
 }
 if ((label|0) == 2) {
  $1 = ($$015|0)==(0);
  if ($1) {
   $$011$lcssa = 24677;
  } else {
   $$01113 = 24677;$$114 = $$015;
   label = 5;
  }
 }
 if ((label|0) == 5) {
  while(1) {
   label = 0;
   $$112 = $$01113;
   while(1) {
    $8 = HEAP8[$$112>>0]|0;
    $9 = ($8<<24>>24)==(0);
    $10 = ((($$112)) + 1|0);
    if ($9) {
     break;
    } else {
     $$112 = $10;
    }
   }
   $11 = (($$114) + -1)|0;
   $12 = ($11|0)==(0);
   if ($12) {
    $$011$lcssa = $10;
    break;
   } else {
    $$01113 = $10;$$114 = $11;
    label = 5;
   }
  }
 }
 return ($$011$lcssa|0);
}
function _memchr($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0$lcssa = 0, $$035$lcssa = 0, $$035$lcssa65 = 0, $$03555 = 0, $$036$lcssa = 0, $$036$lcssa64 = 0, $$03654 = 0, $$046 = 0, $$137$lcssa = 0, $$13745 = 0, $$140 = 0, $$2 = 0, $$23839 = 0, $$3 = 0, $$lcssa = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0;
 var $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0;
 var $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond53 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = $1 & 255;
 $4 = $0;
 $5 = $4 & 3;
 $6 = ($5|0)!=(0);
 $7 = ($2|0)!=(0);
 $or$cond53 = $7 & $6;
 L1: do {
  if ($or$cond53) {
   $8 = $1&255;
   $$03555 = $0;$$03654 = $2;
   while(1) {
    $9 = HEAP8[$$03555>>0]|0;
    $10 = ($9<<24>>24)==($8<<24>>24);
    if ($10) {
     $$035$lcssa65 = $$03555;$$036$lcssa64 = $$03654;
     label = 6;
     break L1;
    }
    $11 = ((($$03555)) + 1|0);
    $12 = (($$03654) + -1)|0;
    $13 = $11;
    $14 = $13 & 3;
    $15 = ($14|0)!=(0);
    $16 = ($12|0)!=(0);
    $or$cond = $16 & $15;
    if ($or$cond) {
     $$03555 = $11;$$03654 = $12;
    } else {
     $$035$lcssa = $11;$$036$lcssa = $12;$$lcssa = $16;
     label = 5;
     break;
    }
   }
  } else {
   $$035$lcssa = $0;$$036$lcssa = $2;$$lcssa = $7;
   label = 5;
  }
 } while(0);
 if ((label|0) == 5) {
  if ($$lcssa) {
   $$035$lcssa65 = $$035$lcssa;$$036$lcssa64 = $$036$lcssa;
   label = 6;
  } else {
   $$2 = $$035$lcssa;$$3 = 0;
  }
 }
 L8: do {
  if ((label|0) == 6) {
   $17 = HEAP8[$$035$lcssa65>>0]|0;
   $18 = $1&255;
   $19 = ($17<<24>>24)==($18<<24>>24);
   if ($19) {
    $$2 = $$035$lcssa65;$$3 = $$036$lcssa64;
   } else {
    $20 = Math_imul($3, 16843009)|0;
    $21 = ($$036$lcssa64>>>0)>(3);
    L11: do {
     if ($21) {
      $$046 = $$035$lcssa65;$$13745 = $$036$lcssa64;
      while(1) {
       $22 = HEAP32[$$046>>2]|0;
       $23 = $22 ^ $20;
       $24 = (($23) + -16843009)|0;
       $25 = $23 & -2139062144;
       $26 = $25 ^ -2139062144;
       $27 = $26 & $24;
       $28 = ($27|0)==(0);
       if (!($28)) {
        break;
       }
       $29 = ((($$046)) + 4|0);
       $30 = (($$13745) + -4)|0;
       $31 = ($30>>>0)>(3);
       if ($31) {
        $$046 = $29;$$13745 = $30;
       } else {
        $$0$lcssa = $29;$$137$lcssa = $30;
        label = 11;
        break L11;
       }
      }
      $$140 = $$046;$$23839 = $$13745;
     } else {
      $$0$lcssa = $$035$lcssa65;$$137$lcssa = $$036$lcssa64;
      label = 11;
     }
    } while(0);
    if ((label|0) == 11) {
     $32 = ($$137$lcssa|0)==(0);
     if ($32) {
      $$2 = $$0$lcssa;$$3 = 0;
      break;
     } else {
      $$140 = $$0$lcssa;$$23839 = $$137$lcssa;
     }
    }
    while(1) {
     $33 = HEAP8[$$140>>0]|0;
     $34 = ($33<<24>>24)==($18<<24>>24);
     if ($34) {
      $$2 = $$140;$$3 = $$23839;
      break L8;
     }
     $35 = ((($$140)) + 1|0);
     $36 = (($$23839) + -1)|0;
     $37 = ($36|0)==(0);
     if ($37) {
      $$2 = $35;$$3 = 0;
      break;
     } else {
      $$140 = $35;$$23839 = $36;
     }
    }
   }
  }
 } while(0);
 $38 = ($$3|0)!=(0);
 $39 = $38 ? $$2 : 0;
 return ($39|0);
}
function _close($0) {
 $0 = $0|0;
 var $$ = 0, $1 = 0, $2 = 0, $3 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $vararg_buffer = sp;
 HEAP32[$vararg_buffer>>2] = $0;
 $1 = (___syscall6(6,($vararg_buffer|0))|0);
 $2 = ($1|0)==(-4);
 $$ = $2 ? -115 : $1;
 $3 = (___syscall_ret($$)|0);
 STACKTOP = sp;return ($3|0);
}
function _open($0,$1,$varargs) {
 $0 = $0|0;
 $1 = $1|0;
 $varargs = $varargs|0;
 var $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $arglist_current = 0, $arglist_next = 0, $expanded = 0, $expanded2 = 0, $expanded4 = 0, $expanded5 = 0, $expanded6 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0;
 var $vararg_ptr2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $vararg_buffer = sp;
 $2 = sp + 16|0;
 HEAP32[$2>>2] = $varargs;
 $arglist_current = HEAP32[$2>>2]|0;
 $3 = $arglist_current;
 $4 = ((0) + 4|0);
 $expanded2 = $4;
 $expanded = (($expanded2) - 1)|0;
 $5 = (($3) + ($expanded))|0;
 $6 = ((0) + 4|0);
 $expanded6 = $6;
 $expanded5 = (($expanded6) - 1)|0;
 $expanded4 = $expanded5 ^ -1;
 $7 = $5 & $expanded4;
 $8 = $7;
 $9 = HEAP32[$8>>2]|0;
 $arglist_next = ((($8)) + 4|0);
 HEAP32[$2>>2] = $arglist_next;
 $10 = $1 | 32768;
 HEAP32[$vararg_buffer>>2] = $0;
 $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
 HEAP32[$vararg_ptr1>>2] = $10;
 $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
 HEAP32[$vararg_ptr2>>2] = $9;
 $11 = (___syscall5(5,($vararg_buffer|0))|0);
 $12 = (___syscall_ret($11)|0);
 STACKTOP = sp;return ($12|0);
}
function _strlen($0) {
 $0 = $0|0;
 var $$0 = 0, $$014 = 0, $$015$lcssa = 0, $$01518 = 0, $$1$lcssa = 0, $$pn = 0, $$pn29 = 0, $$pre = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0;
 var $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = $0;
 $2 = $1 & 3;
 $3 = ($2|0)==(0);
 L1: do {
  if ($3) {
   $$015$lcssa = $0;
   label = 4;
  } else {
   $$01518 = $0;$22 = $1;
   while(1) {
    $4 = HEAP8[$$01518>>0]|0;
    $5 = ($4<<24>>24)==(0);
    if ($5) {
     $$pn = $22;
     break L1;
    }
    $6 = ((($$01518)) + 1|0);
    $7 = $6;
    $8 = $7 & 3;
    $9 = ($8|0)==(0);
    if ($9) {
     $$015$lcssa = $6;
     label = 4;
     break;
    } else {
     $$01518 = $6;$22 = $7;
    }
   }
  }
 } while(0);
 if ((label|0) == 4) {
  $$0 = $$015$lcssa;
  while(1) {
   $10 = HEAP32[$$0>>2]|0;
   $11 = (($10) + -16843009)|0;
   $12 = $10 & -2139062144;
   $13 = $12 ^ -2139062144;
   $14 = $13 & $11;
   $15 = ($14|0)==(0);
   $16 = ((($$0)) + 4|0);
   if ($15) {
    $$0 = $16;
   } else {
    break;
   }
  }
  $17 = $10&255;
  $18 = ($17<<24>>24)==(0);
  if ($18) {
   $$1$lcssa = $$0;
  } else {
   $$pn29 = $$0;
   while(1) {
    $19 = ((($$pn29)) + 1|0);
    $$pre = HEAP8[$19>>0]|0;
    $20 = ($$pre<<24>>24)==(0);
    if ($20) {
     $$1$lcssa = $19;
     break;
    } else {
     $$pn29 = $19;
    }
   }
  }
  $21 = $$1$lcssa;
  $$pn = $21;
 }
 $$014 = (($$pn) - ($1))|0;
 return ($$014|0);
}
function _fmax($0,$1) {
 $0 = +$0;
 $1 = +$1;
 var $$0 = 0.0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0.0, $25 = 0, $26 = 0.0, $3 = 0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAPF64[tempDoublePtr>>3] = $0;$2 = HEAP32[tempDoublePtr>>2]|0;
 $3 = HEAP32[tempDoublePtr+4>>2]|0;
 $4 = $3 & 2147483647;
 $5 = ($4>>>0)>(2146435072);
 $6 = ($2>>>0)>(0);
 $7 = ($4|0)==(2146435072);
 $8 = $7 & $6;
 $9 = $5 | $8;
 do {
  if ($9) {
   $$0 = $1;
  } else {
   HEAPF64[tempDoublePtr>>3] = $1;$10 = HEAP32[tempDoublePtr>>2]|0;
   $11 = HEAP32[tempDoublePtr+4>>2]|0;
   $12 = $11 & 2147483647;
   $13 = ($12>>>0)>(2146435072);
   $14 = ($10>>>0)>(0);
   $15 = ($12|0)==(2146435072);
   $16 = $15 & $14;
   $17 = $13 | $16;
   if ($17) {
    $$0 = $0;
   } else {
    $18 = (_bitshift64Lshr(($2|0),($3|0),63)|0);
    $19 = tempRet0;
    $20 = (_bitshift64Lshr(($10|0),($11|0),63)|0);
    $21 = tempRet0;
    $22 = ($18|0)==($20|0);
    if ($22) {
     $25 = $0 < $1;
     $26 = $25 ? $1 : $0;
     $$0 = $26;
     break;
    } else {
     $23 = ($3|0)<(0);
     $24 = $23 ? $1 : $0;
     $$0 = $24;
     break;
    }
   }
  }
 } while(0);
 return (+$$0);
}
function _fmaxf($0,$1) {
 $0 = +$0;
 $1 = +$1;
 var $$0 = 0.0, $$unshifted = 0, $10 = 0.0, $11 = 0, $12 = 0.0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (HEAPF32[tempDoublePtr>>2]=$0,HEAP32[tempDoublePtr>>2]|0);
 $3 = $2 & 2147483647;
 $4 = ($3>>>0)>(2139095040);
 do {
  if ($4) {
   $$0 = $1;
  } else {
   $5 = (HEAPF32[tempDoublePtr>>2]=$1,HEAP32[tempDoublePtr>>2]|0);
   $6 = $5 & 2147483647;
   $7 = ($6>>>0)>(2139095040);
   if ($7) {
    $$0 = $0;
   } else {
    $$unshifted = $5 ^ $2;
    $8 = ($$unshifted|0)<(0);
    if ($8) {
     $9 = ($2|0)<(0);
     $10 = $9 ? $1 : $0;
     $$0 = $10;
     break;
    } else {
     $11 = $0 < $1;
     $12 = $11 ? $1 : $0;
     $$0 = $12;
     break;
    }
   }
  }
 } while(0);
 return (+$$0);
}
function _fminf($0,$1) {
 $0 = +$0;
 $1 = +$1;
 var $$0 = 0.0, $$unshifted = 0, $10 = 0.0, $11 = 0, $12 = 0.0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (HEAPF32[tempDoublePtr>>2]=$0,HEAP32[tempDoublePtr>>2]|0);
 $3 = $2 & 2147483647;
 $4 = ($3>>>0)>(2139095040);
 do {
  if ($4) {
   $$0 = $1;
  } else {
   $5 = (HEAPF32[tempDoublePtr>>2]=$1,HEAP32[tempDoublePtr>>2]|0);
   $6 = $5 & 2147483647;
   $7 = ($6>>>0)>(2139095040);
   if ($7) {
    $$0 = $0;
   } else {
    $$unshifted = $5 ^ $2;
    $8 = ($$unshifted|0)<(0);
    if ($8) {
     $9 = ($2|0)<(0);
     $10 = $9 ? $0 : $1;
     $$0 = $10;
     break;
    } else {
     $11 = $0 < $1;
     $12 = $11 ? $0 : $1;
     $$0 = $12;
     break;
    }
   }
  }
 } while(0);
 return (+$$0);
}
function _write($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $vararg_buffer = sp;
 HEAP32[$vararg_buffer>>2] = $0;
 $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
 HEAP32[$vararg_ptr1>>2] = $1;
 $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
 HEAP32[$vararg_ptr2>>2] = $2;
 $3 = (___syscall4(4,($vararg_buffer|0))|0);
 $4 = (___syscall_ret($3)|0);
 STACKTOP = sp;return ($4|0);
}
function _fflush($0) {
 $0 = $0|0;
 var $$0 = 0, $$023 = 0, $$02325 = 0, $$02327 = 0, $$024$lcssa = 0, $$02426 = 0, $$1 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $phitmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0|0);
 do {
  if ($1) {
   $8 = HEAP32[1926]|0;
   $9 = ($8|0)==(0|0);
   if ($9) {
    $28 = 0;
   } else {
    $10 = HEAP32[1926]|0;
    $11 = (_fflush($10)|0);
    $28 = $11;
   }
   ___lock(((26776)|0));
   $$02325 = HEAP32[(26772)>>2]|0;
   $12 = ($$02325|0)==(0|0);
   if ($12) {
    $$024$lcssa = $28;
   } else {
    $$02327 = $$02325;$$02426 = $28;
    while(1) {
     $13 = ((($$02327)) + 76|0);
     $14 = HEAP32[$13>>2]|0;
     $15 = ($14|0)>(-1);
     if ($15) {
      $16 = (___lockfile($$02327)|0);
      $24 = $16;
     } else {
      $24 = 0;
     }
     $17 = ((($$02327)) + 20|0);
     $18 = HEAP32[$17>>2]|0;
     $19 = ((($$02327)) + 28|0);
     $20 = HEAP32[$19>>2]|0;
     $21 = ($18>>>0)>($20>>>0);
     if ($21) {
      $22 = (___fflush_unlocked($$02327)|0);
      $23 = $22 | $$02426;
      $$1 = $23;
     } else {
      $$1 = $$02426;
     }
     $25 = ($24|0)==(0);
     if (!($25)) {
      ___unlockfile($$02327);
     }
     $26 = ((($$02327)) + 56|0);
     $$023 = HEAP32[$26>>2]|0;
     $27 = ($$023|0)==(0|0);
     if ($27) {
      $$024$lcssa = $$1;
      break;
     } else {
      $$02327 = $$023;$$02426 = $$1;
     }
    }
   }
   ___unlock(((26776)|0));
   $$0 = $$024$lcssa;
  } else {
   $2 = ((($0)) + 76|0);
   $3 = HEAP32[$2>>2]|0;
   $4 = ($3|0)>(-1);
   if (!($4)) {
    $5 = (___fflush_unlocked($0)|0);
    $$0 = $5;
    break;
   }
   $6 = (___lockfile($0)|0);
   $phitmp = ($6|0)==(0);
   $7 = (___fflush_unlocked($0)|0);
   if ($phitmp) {
    $$0 = $7;
   } else {
    ___unlockfile($0);
    $$0 = $7;
   }
  }
 } while(0);
 return ($$0|0);
}
function ___fflush_unlocked($0) {
 $0 = $0|0;
 var $$0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 20|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($0)) + 28|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ($2>>>0)>($4>>>0);
 if ($5) {
  $6 = ((($0)) + 36|0);
  $7 = HEAP32[$6>>2]|0;
  (FUNCTION_TABLE_iiii[$7 & 511]($0,0,0)|0);
  $8 = HEAP32[$1>>2]|0;
  $9 = ($8|0)==(0|0);
  if ($9) {
   $$0 = -1;
  } else {
   label = 3;
  }
 } else {
  label = 3;
 }
 if ((label|0) == 3) {
  $10 = ((($0)) + 4|0);
  $11 = HEAP32[$10>>2]|0;
  $12 = ((($0)) + 8|0);
  $13 = HEAP32[$12>>2]|0;
  $14 = ($11>>>0)<($13>>>0);
  if ($14) {
   $15 = ((($0)) + 40|0);
   $16 = HEAP32[$15>>2]|0;
   $17 = $11;
   $18 = $13;
   $19 = (($17) - ($18))|0;
   (FUNCTION_TABLE_iiii[$16 & 511]($0,$19,1)|0);
  }
  $20 = ((($0)) + 16|0);
  HEAP32[$20>>2] = 0;
  HEAP32[$3>>2] = 0;
  HEAP32[$1>>2] = 0;
  HEAP32[$12>>2] = 0;
  HEAP32[$10>>2] = 0;
  $$0 = 0;
 }
 return ($$0|0);
}
function _strerror_r($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = (_strerror($0)|0);
 $4 = (_strlen($3)|0);
 $5 = ($4>>>0)<($2>>>0);
 if ($5) {
  $9 = (($4) + 1)|0;
  _memcpy(($1|0),($3|0),($9|0))|0;
  $$0 = 0;
 } else {
  $6 = ($2|0)==(0);
  $7 = (($2) + -1)|0;
  if ($6) {
   $$0 = 34;
  } else {
   $8 = (($1) + ($7)|0);
   _memcpy(($1|0),($3|0),($7|0))|0;
   HEAP8[$8>>0] = 0;
   $$0 = 34;
  }
 }
 return ($$0|0);
}
function _read($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $vararg_buffer = sp;
 HEAP32[$vararg_buffer>>2] = $0;
 $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
 HEAP32[$vararg_ptr1>>2] = $1;
 $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
 HEAP32[$vararg_ptr2>>2] = $2;
 $3 = (___syscall3(3,($vararg_buffer|0))|0);
 $4 = (___syscall_ret($3)|0);
 STACKTOP = sp;return ($4|0);
}
function _malloc($0) {
 $0 = $0|0;
 var $$$0190$i = 0, $$$0191$i = 0, $$$4349$i = 0, $$$i = 0, $$0 = 0, $$0$i$i = 0, $$0$i$i$i = 0, $$0$i17$i = 0, $$0$i18$i = 0, $$01$i$i = 0, $$0187$i = 0, $$0189$i = 0, $$0190$i = 0, $$0191$i = 0, $$0197 = 0, $$0199 = 0, $$0206$i$i = 0, $$0207$i$i = 0, $$0211$i$i = 0, $$0212$i$i = 0;
 var $$024370$i = 0, $$0286$i$i = 0, $$0287$i$i = 0, $$0288$i$i = 0, $$0294$i$i = 0, $$0295$i$i = 0, $$0340$i = 0, $$0342$i = 0, $$0343$i = 0, $$0345$i = 0, $$0351$i = 0, $$0356$i = 0, $$0357$$i = 0, $$0357$i = 0, $$0359$i = 0, $$0360$i = 0, $$0366$i = 0, $$1194$i = 0, $$1196$i = 0, $$124469$i = 0;
 var $$1290$i$i = 0, $$1292$i$i = 0, $$1341$i = 0, $$1346$i = 0, $$1361$i = 0, $$1368$i = 0, $$1372$i = 0, $$2247$ph$i = 0, $$2253$ph$i = 0, $$2353$i = 0, $$3$i = 0, $$3$i$i = 0, $$3$i201 = 0, $$3348$i = 0, $$3370$i = 0, $$4$lcssa$i = 0, $$413$i = 0, $$4349$lcssa$i = 0, $$434912$i = 0, $$4355$$4$i = 0;
 var $$4355$ph$i = 0, $$435511$i = 0, $$5256$i = 0, $$723947$i = 0, $$748$i = 0, $$not$i = 0, $$pre = 0, $$pre$i = 0, $$pre$i$i = 0, $$pre$i19$i = 0, $$pre$i205 = 0, $$pre$i208 = 0, $$pre$phi$i$iZ2D = 0, $$pre$phi$i20$iZ2D = 0, $$pre$phi$i206Z2D = 0, $$pre$phi$iZ2D = 0, $$pre$phi10$i$iZ2D = 0, $$pre$phiZ2D = 0, $$pre9$i$i = 0, $1 = 0;
 var $10 = 0, $100 = 0, $1000 = 0, $1001 = 0, $1002 = 0, $1003 = 0, $1004 = 0, $1005 = 0, $1006 = 0, $1007 = 0, $1008 = 0, $1009 = 0, $101 = 0, $1010 = 0, $1011 = 0, $1012 = 0, $1013 = 0, $1014 = 0, $1015 = 0, $1016 = 0;
 var $1017 = 0, $1018 = 0, $1019 = 0, $102 = 0, $1020 = 0, $1021 = 0, $1022 = 0, $1023 = 0, $1024 = 0, $1025 = 0, $1026 = 0, $1027 = 0, $1028 = 0, $1029 = 0, $103 = 0, $1030 = 0, $1031 = 0, $1032 = 0, $1033 = 0, $1034 = 0;
 var $1035 = 0, $1036 = 0, $1037 = 0, $1038 = 0, $1039 = 0, $104 = 0, $1040 = 0, $1041 = 0, $1042 = 0, $1043 = 0, $1044 = 0, $1045 = 0, $1046 = 0, $1047 = 0, $1048 = 0, $1049 = 0, $105 = 0, $1050 = 0, $1051 = 0, $1052 = 0;
 var $1053 = 0, $1054 = 0, $1055 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0;
 var $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0;
 var $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0;
 var $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0;
 var $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0;
 var $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0;
 var $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0;
 var $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0;
 var $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0;
 var $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0;
 var $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0;
 var $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0;
 var $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0;
 var $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0;
 var $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0;
 var $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0;
 var $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0;
 var $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0;
 var $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0;
 var $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0;
 var $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0;
 var $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0;
 var $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0;
 var $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0;
 var $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0;
 var $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0;
 var $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0;
 var $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $6 = 0, $60 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0;
 var $608 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0;
 var $626 = 0, $627 = 0, $628 = 0, $629 = 0, $63 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0, $634 = 0, $635 = 0, $636 = 0, $637 = 0, $638 = 0, $639 = 0, $64 = 0, $640 = 0, $641 = 0, $642 = 0, $643 = 0;
 var $644 = 0, $645 = 0, $646 = 0, $647 = 0, $648 = 0, $649 = 0, $65 = 0, $650 = 0, $651 = 0, $652 = 0, $653 = 0, $654 = 0, $655 = 0, $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0, $661 = 0;
 var $662 = 0, $663 = 0, $664 = 0, $665 = 0, $666 = 0, $667 = 0, $668 = 0, $669 = 0, $67 = 0, $670 = 0, $671 = 0, $672 = 0, $673 = 0, $674 = 0, $675 = 0, $676 = 0, $677 = 0, $678 = 0, $679 = 0, $68 = 0;
 var $680 = 0, $681 = 0, $682 = 0, $683 = 0, $684 = 0, $685 = 0, $686 = 0, $687 = 0, $688 = 0, $689 = 0, $69 = 0, $690 = 0, $691 = 0, $692 = 0, $693 = 0, $694 = 0, $695 = 0, $696 = 0, $697 = 0, $698 = 0;
 var $699 = 0, $7 = 0, $70 = 0, $700 = 0, $701 = 0, $702 = 0, $703 = 0, $704 = 0, $705 = 0, $706 = 0, $707 = 0, $708 = 0, $709 = 0, $71 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0, $714 = 0, $715 = 0;
 var $716 = 0, $717 = 0, $718 = 0, $719 = 0, $72 = 0, $720 = 0, $721 = 0, $722 = 0, $723 = 0, $724 = 0, $725 = 0, $726 = 0, $727 = 0, $728 = 0, $729 = 0, $73 = 0, $730 = 0, $731 = 0, $732 = 0, $733 = 0;
 var $734 = 0, $735 = 0, $736 = 0, $737 = 0, $738 = 0, $739 = 0, $74 = 0, $740 = 0, $741 = 0, $742 = 0, $743 = 0, $744 = 0, $745 = 0, $746 = 0, $747 = 0, $748 = 0, $749 = 0, $75 = 0, $750 = 0, $751 = 0;
 var $752 = 0, $753 = 0, $754 = 0, $755 = 0, $756 = 0, $757 = 0, $758 = 0, $759 = 0, $76 = 0, $760 = 0, $761 = 0, $762 = 0, $763 = 0, $764 = 0, $765 = 0, $766 = 0, $767 = 0, $768 = 0, $769 = 0, $77 = 0;
 var $770 = 0, $771 = 0, $772 = 0, $773 = 0, $774 = 0, $775 = 0, $776 = 0, $777 = 0, $778 = 0, $779 = 0, $78 = 0, $780 = 0, $781 = 0, $782 = 0, $783 = 0, $784 = 0, $785 = 0, $786 = 0, $787 = 0, $788 = 0;
 var $789 = 0, $79 = 0, $790 = 0, $791 = 0, $792 = 0, $793 = 0, $794 = 0, $795 = 0, $796 = 0, $797 = 0, $798 = 0, $799 = 0, $8 = 0, $80 = 0, $800 = 0, $801 = 0, $802 = 0, $803 = 0, $804 = 0, $805 = 0;
 var $806 = 0, $807 = 0, $808 = 0, $809 = 0, $81 = 0, $810 = 0, $811 = 0, $812 = 0, $813 = 0, $814 = 0, $815 = 0, $816 = 0, $817 = 0, $818 = 0, $819 = 0, $82 = 0, $820 = 0, $821 = 0, $822 = 0, $823 = 0;
 var $824 = 0, $825 = 0, $826 = 0, $827 = 0, $828 = 0, $829 = 0, $83 = 0, $830 = 0, $831 = 0, $832 = 0, $833 = 0, $834 = 0, $835 = 0, $836 = 0, $837 = 0, $838 = 0, $839 = 0, $84 = 0, $840 = 0, $841 = 0;
 var $842 = 0, $843 = 0, $844 = 0, $845 = 0, $846 = 0, $847 = 0, $848 = 0, $849 = 0, $85 = 0, $850 = 0, $851 = 0, $852 = 0, $853 = 0, $854 = 0, $855 = 0, $856 = 0, $857 = 0, $858 = 0, $859 = 0, $86 = 0;
 var $860 = 0, $861 = 0, $862 = 0, $863 = 0, $864 = 0, $865 = 0, $866 = 0, $867 = 0, $868 = 0, $869 = 0, $87 = 0, $870 = 0, $871 = 0, $872 = 0, $873 = 0, $874 = 0, $875 = 0, $876 = 0, $877 = 0, $878 = 0;
 var $879 = 0, $88 = 0, $880 = 0, $881 = 0, $882 = 0, $883 = 0, $884 = 0, $885 = 0, $886 = 0, $887 = 0, $888 = 0, $889 = 0, $89 = 0, $890 = 0, $891 = 0, $892 = 0, $893 = 0, $894 = 0, $895 = 0, $896 = 0;
 var $897 = 0, $898 = 0, $899 = 0, $9 = 0, $90 = 0, $900 = 0, $901 = 0, $902 = 0, $903 = 0, $904 = 0, $905 = 0, $906 = 0, $907 = 0, $908 = 0, $909 = 0, $91 = 0, $910 = 0, $911 = 0, $912 = 0, $913 = 0;
 var $914 = 0, $915 = 0, $916 = 0, $917 = 0, $918 = 0, $919 = 0, $92 = 0, $920 = 0, $921 = 0, $922 = 0, $923 = 0, $924 = 0, $925 = 0, $926 = 0, $927 = 0, $928 = 0, $929 = 0, $93 = 0, $930 = 0, $931 = 0;
 var $932 = 0, $933 = 0, $934 = 0, $935 = 0, $936 = 0, $937 = 0, $938 = 0, $939 = 0, $94 = 0, $940 = 0, $941 = 0, $942 = 0, $943 = 0, $944 = 0, $945 = 0, $946 = 0, $947 = 0, $948 = 0, $949 = 0, $95 = 0;
 var $950 = 0, $951 = 0, $952 = 0, $953 = 0, $954 = 0, $955 = 0, $956 = 0, $957 = 0, $958 = 0, $959 = 0, $96 = 0, $960 = 0, $961 = 0, $962 = 0, $963 = 0, $964 = 0, $965 = 0, $966 = 0, $967 = 0, $968 = 0;
 var $969 = 0, $97 = 0, $970 = 0, $971 = 0, $972 = 0, $973 = 0, $974 = 0, $975 = 0, $976 = 0, $977 = 0, $978 = 0, $979 = 0, $98 = 0, $980 = 0, $981 = 0, $982 = 0, $983 = 0, $984 = 0, $985 = 0, $986 = 0;
 var $987 = 0, $988 = 0, $989 = 0, $99 = 0, $990 = 0, $991 = 0, $992 = 0, $993 = 0, $994 = 0, $995 = 0, $996 = 0, $997 = 0, $998 = 0, $999 = 0, $cond$i = 0, $cond$i$i = 0, $cond$i204 = 0, $exitcond$i$i = 0, $not$$i$i = 0, $not$$i22$i = 0;
 var $not$7$i = 0, $or$cond$i = 0, $or$cond$i211 = 0, $or$cond1$i = 0, $or$cond1$i210 = 0, $or$cond10$i = 0, $or$cond11$i = 0, $or$cond12$i = 0, $or$cond2$i = 0, $or$cond5$i = 0, $or$cond50$i = 0, $or$cond7$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = sp;
 $2 = ($0>>>0)<(245);
 do {
  if ($2) {
   $3 = ($0>>>0)<(11);
   $4 = (($0) + 11)|0;
   $5 = $4 & -8;
   $6 = $3 ? 16 : $5;
   $7 = $6 >>> 3;
   $8 = HEAP32[6699]|0;
   $9 = $8 >>> $7;
   $10 = $9 & 3;
   $11 = ($10|0)==(0);
   if (!($11)) {
    $12 = $9 & 1;
    $13 = $12 ^ 1;
    $14 = (($13) + ($7))|0;
    $15 = $14 << 1;
    $16 = (26836 + ($15<<2)|0);
    $17 = ((($16)) + 8|0);
    $18 = HEAP32[$17>>2]|0;
    $19 = ((($18)) + 8|0);
    $20 = HEAP32[$19>>2]|0;
    $21 = ($16|0)==($20|0);
    do {
     if ($21) {
      $22 = 1 << $14;
      $23 = $22 ^ -1;
      $24 = $8 & $23;
      HEAP32[6699] = $24;
     } else {
      $25 = HEAP32[(26812)>>2]|0;
      $26 = ($20>>>0)<($25>>>0);
      if ($26) {
       _abort();
       // unreachable;
      }
      $27 = ((($20)) + 12|0);
      $28 = HEAP32[$27>>2]|0;
      $29 = ($28|0)==($18|0);
      if ($29) {
       HEAP32[$27>>2] = $16;
       HEAP32[$17>>2] = $20;
       break;
      } else {
       _abort();
       // unreachable;
      }
     }
    } while(0);
    $30 = $14 << 3;
    $31 = $30 | 3;
    $32 = ((($18)) + 4|0);
    HEAP32[$32>>2] = $31;
    $33 = (($18) + ($30)|0);
    $34 = ((($33)) + 4|0);
    $35 = HEAP32[$34>>2]|0;
    $36 = $35 | 1;
    HEAP32[$34>>2] = $36;
    $$0 = $19;
    STACKTOP = sp;return ($$0|0);
   }
   $37 = HEAP32[(26804)>>2]|0;
   $38 = ($6>>>0)>($37>>>0);
   if ($38) {
    $39 = ($9|0)==(0);
    if (!($39)) {
     $40 = $9 << $7;
     $41 = 2 << $7;
     $42 = (0 - ($41))|0;
     $43 = $41 | $42;
     $44 = $40 & $43;
     $45 = (0 - ($44))|0;
     $46 = $44 & $45;
     $47 = (($46) + -1)|0;
     $48 = $47 >>> 12;
     $49 = $48 & 16;
     $50 = $47 >>> $49;
     $51 = $50 >>> 5;
     $52 = $51 & 8;
     $53 = $52 | $49;
     $54 = $50 >>> $52;
     $55 = $54 >>> 2;
     $56 = $55 & 4;
     $57 = $53 | $56;
     $58 = $54 >>> $56;
     $59 = $58 >>> 1;
     $60 = $59 & 2;
     $61 = $57 | $60;
     $62 = $58 >>> $60;
     $63 = $62 >>> 1;
     $64 = $63 & 1;
     $65 = $61 | $64;
     $66 = $62 >>> $64;
     $67 = (($65) + ($66))|0;
     $68 = $67 << 1;
     $69 = (26836 + ($68<<2)|0);
     $70 = ((($69)) + 8|0);
     $71 = HEAP32[$70>>2]|0;
     $72 = ((($71)) + 8|0);
     $73 = HEAP32[$72>>2]|0;
     $74 = ($69|0)==($73|0);
     do {
      if ($74) {
       $75 = 1 << $67;
       $76 = $75 ^ -1;
       $77 = $8 & $76;
       HEAP32[6699] = $77;
       $98 = $77;
      } else {
       $78 = HEAP32[(26812)>>2]|0;
       $79 = ($73>>>0)<($78>>>0);
       if ($79) {
        _abort();
        // unreachable;
       }
       $80 = ((($73)) + 12|0);
       $81 = HEAP32[$80>>2]|0;
       $82 = ($81|0)==($71|0);
       if ($82) {
        HEAP32[$80>>2] = $69;
        HEAP32[$70>>2] = $73;
        $98 = $8;
        break;
       } else {
        _abort();
        // unreachable;
       }
      }
     } while(0);
     $83 = $67 << 3;
     $84 = (($83) - ($6))|0;
     $85 = $6 | 3;
     $86 = ((($71)) + 4|0);
     HEAP32[$86>>2] = $85;
     $87 = (($71) + ($6)|0);
     $88 = $84 | 1;
     $89 = ((($87)) + 4|0);
     HEAP32[$89>>2] = $88;
     $90 = (($87) + ($84)|0);
     HEAP32[$90>>2] = $84;
     $91 = ($37|0)==(0);
     if (!($91)) {
      $92 = HEAP32[(26816)>>2]|0;
      $93 = $37 >>> 3;
      $94 = $93 << 1;
      $95 = (26836 + ($94<<2)|0);
      $96 = 1 << $93;
      $97 = $98 & $96;
      $99 = ($97|0)==(0);
      if ($99) {
       $100 = $98 | $96;
       HEAP32[6699] = $100;
       $$pre = ((($95)) + 8|0);
       $$0199 = $95;$$pre$phiZ2D = $$pre;
      } else {
       $101 = ((($95)) + 8|0);
       $102 = HEAP32[$101>>2]|0;
       $103 = HEAP32[(26812)>>2]|0;
       $104 = ($102>>>0)<($103>>>0);
       if ($104) {
        _abort();
        // unreachable;
       } else {
        $$0199 = $102;$$pre$phiZ2D = $101;
       }
      }
      HEAP32[$$pre$phiZ2D>>2] = $92;
      $105 = ((($$0199)) + 12|0);
      HEAP32[$105>>2] = $92;
      $106 = ((($92)) + 8|0);
      HEAP32[$106>>2] = $$0199;
      $107 = ((($92)) + 12|0);
      HEAP32[$107>>2] = $95;
     }
     HEAP32[(26804)>>2] = $84;
     HEAP32[(26816)>>2] = $87;
     $$0 = $72;
     STACKTOP = sp;return ($$0|0);
    }
    $108 = HEAP32[(26800)>>2]|0;
    $109 = ($108|0)==(0);
    if ($109) {
     $$0197 = $6;
    } else {
     $110 = (0 - ($108))|0;
     $111 = $108 & $110;
     $112 = (($111) + -1)|0;
     $113 = $112 >>> 12;
     $114 = $113 & 16;
     $115 = $112 >>> $114;
     $116 = $115 >>> 5;
     $117 = $116 & 8;
     $118 = $117 | $114;
     $119 = $115 >>> $117;
     $120 = $119 >>> 2;
     $121 = $120 & 4;
     $122 = $118 | $121;
     $123 = $119 >>> $121;
     $124 = $123 >>> 1;
     $125 = $124 & 2;
     $126 = $122 | $125;
     $127 = $123 >>> $125;
     $128 = $127 >>> 1;
     $129 = $128 & 1;
     $130 = $126 | $129;
     $131 = $127 >>> $129;
     $132 = (($130) + ($131))|0;
     $133 = (27100 + ($132<<2)|0);
     $134 = HEAP32[$133>>2]|0;
     $135 = ((($134)) + 4|0);
     $136 = HEAP32[$135>>2]|0;
     $137 = $136 & -8;
     $138 = (($137) - ($6))|0;
     $$0189$i = $134;$$0190$i = $134;$$0191$i = $138;
     while(1) {
      $139 = ((($$0189$i)) + 16|0);
      $140 = HEAP32[$139>>2]|0;
      $141 = ($140|0)==(0|0);
      if ($141) {
       $142 = ((($$0189$i)) + 20|0);
       $143 = HEAP32[$142>>2]|0;
       $144 = ($143|0)==(0|0);
       if ($144) {
        break;
       } else {
        $146 = $143;
       }
      } else {
       $146 = $140;
      }
      $145 = ((($146)) + 4|0);
      $147 = HEAP32[$145>>2]|0;
      $148 = $147 & -8;
      $149 = (($148) - ($6))|0;
      $150 = ($149>>>0)<($$0191$i>>>0);
      $$$0191$i = $150 ? $149 : $$0191$i;
      $$$0190$i = $150 ? $146 : $$0190$i;
      $$0189$i = $146;$$0190$i = $$$0190$i;$$0191$i = $$$0191$i;
     }
     $151 = HEAP32[(26812)>>2]|0;
     $152 = ($$0190$i>>>0)<($151>>>0);
     if ($152) {
      _abort();
      // unreachable;
     }
     $153 = (($$0190$i) + ($6)|0);
     $154 = ($$0190$i>>>0)<($153>>>0);
     if (!($154)) {
      _abort();
      // unreachable;
     }
     $155 = ((($$0190$i)) + 24|0);
     $156 = HEAP32[$155>>2]|0;
     $157 = ((($$0190$i)) + 12|0);
     $158 = HEAP32[$157>>2]|0;
     $159 = ($158|0)==($$0190$i|0);
     do {
      if ($159) {
       $169 = ((($$0190$i)) + 20|0);
       $170 = HEAP32[$169>>2]|0;
       $171 = ($170|0)==(0|0);
       if ($171) {
        $172 = ((($$0190$i)) + 16|0);
        $173 = HEAP32[$172>>2]|0;
        $174 = ($173|0)==(0|0);
        if ($174) {
         $$3$i = 0;
         break;
        } else {
         $$1194$i = $173;$$1196$i = $172;
        }
       } else {
        $$1194$i = $170;$$1196$i = $169;
       }
       while(1) {
        $175 = ((($$1194$i)) + 20|0);
        $176 = HEAP32[$175>>2]|0;
        $177 = ($176|0)==(0|0);
        if (!($177)) {
         $$1194$i = $176;$$1196$i = $175;
         continue;
        }
        $178 = ((($$1194$i)) + 16|0);
        $179 = HEAP32[$178>>2]|0;
        $180 = ($179|0)==(0|0);
        if ($180) {
         break;
        } else {
         $$1194$i = $179;$$1196$i = $178;
        }
       }
       $181 = ($$1196$i>>>0)<($151>>>0);
       if ($181) {
        _abort();
        // unreachable;
       } else {
        HEAP32[$$1196$i>>2] = 0;
        $$3$i = $$1194$i;
        break;
       }
      } else {
       $160 = ((($$0190$i)) + 8|0);
       $161 = HEAP32[$160>>2]|0;
       $162 = ($161>>>0)<($151>>>0);
       if ($162) {
        _abort();
        // unreachable;
       }
       $163 = ((($161)) + 12|0);
       $164 = HEAP32[$163>>2]|0;
       $165 = ($164|0)==($$0190$i|0);
       if (!($165)) {
        _abort();
        // unreachable;
       }
       $166 = ((($158)) + 8|0);
       $167 = HEAP32[$166>>2]|0;
       $168 = ($167|0)==($$0190$i|0);
       if ($168) {
        HEAP32[$163>>2] = $158;
        HEAP32[$166>>2] = $161;
        $$3$i = $158;
        break;
       } else {
        _abort();
        // unreachable;
       }
      }
     } while(0);
     $182 = ($156|0)==(0|0);
     do {
      if (!($182)) {
       $183 = ((($$0190$i)) + 28|0);
       $184 = HEAP32[$183>>2]|0;
       $185 = (27100 + ($184<<2)|0);
       $186 = HEAP32[$185>>2]|0;
       $187 = ($$0190$i|0)==($186|0);
       if ($187) {
        HEAP32[$185>>2] = $$3$i;
        $cond$i = ($$3$i|0)==(0|0);
        if ($cond$i) {
         $188 = 1 << $184;
         $189 = $188 ^ -1;
         $190 = $108 & $189;
         HEAP32[(26800)>>2] = $190;
         break;
        }
       } else {
        $191 = HEAP32[(26812)>>2]|0;
        $192 = ($156>>>0)<($191>>>0);
        if ($192) {
         _abort();
         // unreachable;
        }
        $193 = ((($156)) + 16|0);
        $194 = HEAP32[$193>>2]|0;
        $195 = ($194|0)==($$0190$i|0);
        if ($195) {
         HEAP32[$193>>2] = $$3$i;
        } else {
         $196 = ((($156)) + 20|0);
         HEAP32[$196>>2] = $$3$i;
        }
        $197 = ($$3$i|0)==(0|0);
        if ($197) {
         break;
        }
       }
       $198 = HEAP32[(26812)>>2]|0;
       $199 = ($$3$i>>>0)<($198>>>0);
       if ($199) {
        _abort();
        // unreachable;
       }
       $200 = ((($$3$i)) + 24|0);
       HEAP32[$200>>2] = $156;
       $201 = ((($$0190$i)) + 16|0);
       $202 = HEAP32[$201>>2]|0;
       $203 = ($202|0)==(0|0);
       do {
        if (!($203)) {
         $204 = ($202>>>0)<($198>>>0);
         if ($204) {
          _abort();
          // unreachable;
         } else {
          $205 = ((($$3$i)) + 16|0);
          HEAP32[$205>>2] = $202;
          $206 = ((($202)) + 24|0);
          HEAP32[$206>>2] = $$3$i;
          break;
         }
        }
       } while(0);
       $207 = ((($$0190$i)) + 20|0);
       $208 = HEAP32[$207>>2]|0;
       $209 = ($208|0)==(0|0);
       if (!($209)) {
        $210 = HEAP32[(26812)>>2]|0;
        $211 = ($208>>>0)<($210>>>0);
        if ($211) {
         _abort();
         // unreachable;
        } else {
         $212 = ((($$3$i)) + 20|0);
         HEAP32[$212>>2] = $208;
         $213 = ((($208)) + 24|0);
         HEAP32[$213>>2] = $$3$i;
         break;
        }
       }
      }
     } while(0);
     $214 = ($$0191$i>>>0)<(16);
     if ($214) {
      $215 = (($$0191$i) + ($6))|0;
      $216 = $215 | 3;
      $217 = ((($$0190$i)) + 4|0);
      HEAP32[$217>>2] = $216;
      $218 = (($$0190$i) + ($215)|0);
      $219 = ((($218)) + 4|0);
      $220 = HEAP32[$219>>2]|0;
      $221 = $220 | 1;
      HEAP32[$219>>2] = $221;
     } else {
      $222 = $6 | 3;
      $223 = ((($$0190$i)) + 4|0);
      HEAP32[$223>>2] = $222;
      $224 = $$0191$i | 1;
      $225 = ((($153)) + 4|0);
      HEAP32[$225>>2] = $224;
      $226 = (($153) + ($$0191$i)|0);
      HEAP32[$226>>2] = $$0191$i;
      $227 = ($37|0)==(0);
      if (!($227)) {
       $228 = HEAP32[(26816)>>2]|0;
       $229 = $37 >>> 3;
       $230 = $229 << 1;
       $231 = (26836 + ($230<<2)|0);
       $232 = 1 << $229;
       $233 = $8 & $232;
       $234 = ($233|0)==(0);
       if ($234) {
        $235 = $8 | $232;
        HEAP32[6699] = $235;
        $$pre$i = ((($231)) + 8|0);
        $$0187$i = $231;$$pre$phi$iZ2D = $$pre$i;
       } else {
        $236 = ((($231)) + 8|0);
        $237 = HEAP32[$236>>2]|0;
        $238 = HEAP32[(26812)>>2]|0;
        $239 = ($237>>>0)<($238>>>0);
        if ($239) {
         _abort();
         // unreachable;
        } else {
         $$0187$i = $237;$$pre$phi$iZ2D = $236;
        }
       }
       HEAP32[$$pre$phi$iZ2D>>2] = $228;
       $240 = ((($$0187$i)) + 12|0);
       HEAP32[$240>>2] = $228;
       $241 = ((($228)) + 8|0);
       HEAP32[$241>>2] = $$0187$i;
       $242 = ((($228)) + 12|0);
       HEAP32[$242>>2] = $231;
      }
      HEAP32[(26804)>>2] = $$0191$i;
      HEAP32[(26816)>>2] = $153;
     }
     $243 = ((($$0190$i)) + 8|0);
     $$0 = $243;
     STACKTOP = sp;return ($$0|0);
    }
   } else {
    $$0197 = $6;
   }
  } else {
   $244 = ($0>>>0)>(4294967231);
   if ($244) {
    $$0197 = -1;
   } else {
    $245 = (($0) + 11)|0;
    $246 = $245 & -8;
    $247 = HEAP32[(26800)>>2]|0;
    $248 = ($247|0)==(0);
    if ($248) {
     $$0197 = $246;
    } else {
     $249 = (0 - ($246))|0;
     $250 = $245 >>> 8;
     $251 = ($250|0)==(0);
     if ($251) {
      $$0356$i = 0;
     } else {
      $252 = ($246>>>0)>(16777215);
      if ($252) {
       $$0356$i = 31;
      } else {
       $253 = (($250) + 1048320)|0;
       $254 = $253 >>> 16;
       $255 = $254 & 8;
       $256 = $250 << $255;
       $257 = (($256) + 520192)|0;
       $258 = $257 >>> 16;
       $259 = $258 & 4;
       $260 = $259 | $255;
       $261 = $256 << $259;
       $262 = (($261) + 245760)|0;
       $263 = $262 >>> 16;
       $264 = $263 & 2;
       $265 = $260 | $264;
       $266 = (14 - ($265))|0;
       $267 = $261 << $264;
       $268 = $267 >>> 15;
       $269 = (($266) + ($268))|0;
       $270 = $269 << 1;
       $271 = (($269) + 7)|0;
       $272 = $246 >>> $271;
       $273 = $272 & 1;
       $274 = $273 | $270;
       $$0356$i = $274;
      }
     }
     $275 = (27100 + ($$0356$i<<2)|0);
     $276 = HEAP32[$275>>2]|0;
     $277 = ($276|0)==(0|0);
     L123: do {
      if ($277) {
       $$2353$i = 0;$$3$i201 = 0;$$3348$i = $249;
       label = 86;
      } else {
       $278 = ($$0356$i|0)==(31);
       $279 = $$0356$i >>> 1;
       $280 = (25 - ($279))|0;
       $281 = $278 ? 0 : $280;
       $282 = $246 << $281;
       $$0340$i = 0;$$0345$i = $249;$$0351$i = $276;$$0357$i = $282;$$0360$i = 0;
       while(1) {
        $283 = ((($$0351$i)) + 4|0);
        $284 = HEAP32[$283>>2]|0;
        $285 = $284 & -8;
        $286 = (($285) - ($246))|0;
        $287 = ($286>>>0)<($$0345$i>>>0);
        if ($287) {
         $288 = ($286|0)==(0);
         if ($288) {
          $$413$i = $$0351$i;$$434912$i = 0;$$435511$i = $$0351$i;
          label = 90;
          break L123;
         } else {
          $$1341$i = $$0351$i;$$1346$i = $286;
         }
        } else {
         $$1341$i = $$0340$i;$$1346$i = $$0345$i;
        }
        $289 = ((($$0351$i)) + 20|0);
        $290 = HEAP32[$289>>2]|0;
        $291 = $$0357$i >>> 31;
        $292 = (((($$0351$i)) + 16|0) + ($291<<2)|0);
        $293 = HEAP32[$292>>2]|0;
        $294 = ($290|0)==(0|0);
        $295 = ($290|0)==($293|0);
        $or$cond1$i = $294 | $295;
        $$1361$i = $or$cond1$i ? $$0360$i : $290;
        $296 = ($293|0)==(0|0);
        $297 = $296&1;
        $298 = $297 ^ 1;
        $$0357$$i = $$0357$i << $298;
        if ($296) {
         $$2353$i = $$1361$i;$$3$i201 = $$1341$i;$$3348$i = $$1346$i;
         label = 86;
         break;
        } else {
         $$0340$i = $$1341$i;$$0345$i = $$1346$i;$$0351$i = $293;$$0357$i = $$0357$$i;$$0360$i = $$1361$i;
        }
       }
      }
     } while(0);
     if ((label|0) == 86) {
      $299 = ($$2353$i|0)==(0|0);
      $300 = ($$3$i201|0)==(0|0);
      $or$cond$i = $299 & $300;
      if ($or$cond$i) {
       $301 = 2 << $$0356$i;
       $302 = (0 - ($301))|0;
       $303 = $301 | $302;
       $304 = $247 & $303;
       $305 = ($304|0)==(0);
       if ($305) {
        $$0197 = $246;
        break;
       }
       $306 = (0 - ($304))|0;
       $307 = $304 & $306;
       $308 = (($307) + -1)|0;
       $309 = $308 >>> 12;
       $310 = $309 & 16;
       $311 = $308 >>> $310;
       $312 = $311 >>> 5;
       $313 = $312 & 8;
       $314 = $313 | $310;
       $315 = $311 >>> $313;
       $316 = $315 >>> 2;
       $317 = $316 & 4;
       $318 = $314 | $317;
       $319 = $315 >>> $317;
       $320 = $319 >>> 1;
       $321 = $320 & 2;
       $322 = $318 | $321;
       $323 = $319 >>> $321;
       $324 = $323 >>> 1;
       $325 = $324 & 1;
       $326 = $322 | $325;
       $327 = $323 >>> $325;
       $328 = (($326) + ($327))|0;
       $329 = (27100 + ($328<<2)|0);
       $330 = HEAP32[$329>>2]|0;
       $$4355$ph$i = $330;
      } else {
       $$4355$ph$i = $$2353$i;
      }
      $331 = ($$4355$ph$i|0)==(0|0);
      if ($331) {
       $$4$lcssa$i = $$3$i201;$$4349$lcssa$i = $$3348$i;
      } else {
       $$413$i = $$3$i201;$$434912$i = $$3348$i;$$435511$i = $$4355$ph$i;
       label = 90;
      }
     }
     if ((label|0) == 90) {
      while(1) {
       label = 0;
       $332 = ((($$435511$i)) + 4|0);
       $333 = HEAP32[$332>>2]|0;
       $334 = $333 & -8;
       $335 = (($334) - ($246))|0;
       $336 = ($335>>>0)<($$434912$i>>>0);
       $$$4349$i = $336 ? $335 : $$434912$i;
       $$4355$$4$i = $336 ? $$435511$i : $$413$i;
       $337 = ((($$435511$i)) + 16|0);
       $338 = HEAP32[$337>>2]|0;
       $339 = ($338|0)==(0|0);
       if (!($339)) {
        $$413$i = $$4355$$4$i;$$434912$i = $$$4349$i;$$435511$i = $338;
        label = 90;
        continue;
       }
       $340 = ((($$435511$i)) + 20|0);
       $341 = HEAP32[$340>>2]|0;
       $342 = ($341|0)==(0|0);
       if ($342) {
        $$4$lcssa$i = $$4355$$4$i;$$4349$lcssa$i = $$$4349$i;
        break;
       } else {
        $$413$i = $$4355$$4$i;$$434912$i = $$$4349$i;$$435511$i = $341;
        label = 90;
       }
      }
     }
     $343 = ($$4$lcssa$i|0)==(0|0);
     if ($343) {
      $$0197 = $246;
     } else {
      $344 = HEAP32[(26804)>>2]|0;
      $345 = (($344) - ($246))|0;
      $346 = ($$4349$lcssa$i>>>0)<($345>>>0);
      if ($346) {
       $347 = HEAP32[(26812)>>2]|0;
       $348 = ($$4$lcssa$i>>>0)<($347>>>0);
       if ($348) {
        _abort();
        // unreachable;
       }
       $349 = (($$4$lcssa$i) + ($246)|0);
       $350 = ($$4$lcssa$i>>>0)<($349>>>0);
       if (!($350)) {
        _abort();
        // unreachable;
       }
       $351 = ((($$4$lcssa$i)) + 24|0);
       $352 = HEAP32[$351>>2]|0;
       $353 = ((($$4$lcssa$i)) + 12|0);
       $354 = HEAP32[$353>>2]|0;
       $355 = ($354|0)==($$4$lcssa$i|0);
       do {
        if ($355) {
         $365 = ((($$4$lcssa$i)) + 20|0);
         $366 = HEAP32[$365>>2]|0;
         $367 = ($366|0)==(0|0);
         if ($367) {
          $368 = ((($$4$lcssa$i)) + 16|0);
          $369 = HEAP32[$368>>2]|0;
          $370 = ($369|0)==(0|0);
          if ($370) {
           $$3370$i = 0;
           break;
          } else {
           $$1368$i = $369;$$1372$i = $368;
          }
         } else {
          $$1368$i = $366;$$1372$i = $365;
         }
         while(1) {
          $371 = ((($$1368$i)) + 20|0);
          $372 = HEAP32[$371>>2]|0;
          $373 = ($372|0)==(0|0);
          if (!($373)) {
           $$1368$i = $372;$$1372$i = $371;
           continue;
          }
          $374 = ((($$1368$i)) + 16|0);
          $375 = HEAP32[$374>>2]|0;
          $376 = ($375|0)==(0|0);
          if ($376) {
           break;
          } else {
           $$1368$i = $375;$$1372$i = $374;
          }
         }
         $377 = ($$1372$i>>>0)<($347>>>0);
         if ($377) {
          _abort();
          // unreachable;
         } else {
          HEAP32[$$1372$i>>2] = 0;
          $$3370$i = $$1368$i;
          break;
         }
        } else {
         $356 = ((($$4$lcssa$i)) + 8|0);
         $357 = HEAP32[$356>>2]|0;
         $358 = ($357>>>0)<($347>>>0);
         if ($358) {
          _abort();
          // unreachable;
         }
         $359 = ((($357)) + 12|0);
         $360 = HEAP32[$359>>2]|0;
         $361 = ($360|0)==($$4$lcssa$i|0);
         if (!($361)) {
          _abort();
          // unreachable;
         }
         $362 = ((($354)) + 8|0);
         $363 = HEAP32[$362>>2]|0;
         $364 = ($363|0)==($$4$lcssa$i|0);
         if ($364) {
          HEAP32[$359>>2] = $354;
          HEAP32[$362>>2] = $357;
          $$3370$i = $354;
          break;
         } else {
          _abort();
          // unreachable;
         }
        }
       } while(0);
       $378 = ($352|0)==(0|0);
       do {
        if ($378) {
         $470 = $247;
        } else {
         $379 = ((($$4$lcssa$i)) + 28|0);
         $380 = HEAP32[$379>>2]|0;
         $381 = (27100 + ($380<<2)|0);
         $382 = HEAP32[$381>>2]|0;
         $383 = ($$4$lcssa$i|0)==($382|0);
         if ($383) {
          HEAP32[$381>>2] = $$3370$i;
          $cond$i204 = ($$3370$i|0)==(0|0);
          if ($cond$i204) {
           $384 = 1 << $380;
           $385 = $384 ^ -1;
           $386 = $247 & $385;
           HEAP32[(26800)>>2] = $386;
           $470 = $386;
           break;
          }
         } else {
          $387 = HEAP32[(26812)>>2]|0;
          $388 = ($352>>>0)<($387>>>0);
          if ($388) {
           _abort();
           // unreachable;
          }
          $389 = ((($352)) + 16|0);
          $390 = HEAP32[$389>>2]|0;
          $391 = ($390|0)==($$4$lcssa$i|0);
          if ($391) {
           HEAP32[$389>>2] = $$3370$i;
          } else {
           $392 = ((($352)) + 20|0);
           HEAP32[$392>>2] = $$3370$i;
          }
          $393 = ($$3370$i|0)==(0|0);
          if ($393) {
           $470 = $247;
           break;
          }
         }
         $394 = HEAP32[(26812)>>2]|0;
         $395 = ($$3370$i>>>0)<($394>>>0);
         if ($395) {
          _abort();
          // unreachable;
         }
         $396 = ((($$3370$i)) + 24|0);
         HEAP32[$396>>2] = $352;
         $397 = ((($$4$lcssa$i)) + 16|0);
         $398 = HEAP32[$397>>2]|0;
         $399 = ($398|0)==(0|0);
         do {
          if (!($399)) {
           $400 = ($398>>>0)<($394>>>0);
           if ($400) {
            _abort();
            // unreachable;
           } else {
            $401 = ((($$3370$i)) + 16|0);
            HEAP32[$401>>2] = $398;
            $402 = ((($398)) + 24|0);
            HEAP32[$402>>2] = $$3370$i;
            break;
           }
          }
         } while(0);
         $403 = ((($$4$lcssa$i)) + 20|0);
         $404 = HEAP32[$403>>2]|0;
         $405 = ($404|0)==(0|0);
         if ($405) {
          $470 = $247;
         } else {
          $406 = HEAP32[(26812)>>2]|0;
          $407 = ($404>>>0)<($406>>>0);
          if ($407) {
           _abort();
           // unreachable;
          } else {
           $408 = ((($$3370$i)) + 20|0);
           HEAP32[$408>>2] = $404;
           $409 = ((($404)) + 24|0);
           HEAP32[$409>>2] = $$3370$i;
           $470 = $247;
           break;
          }
         }
        }
       } while(0);
       $410 = ($$4349$lcssa$i>>>0)<(16);
       do {
        if ($410) {
         $411 = (($$4349$lcssa$i) + ($246))|0;
         $412 = $411 | 3;
         $413 = ((($$4$lcssa$i)) + 4|0);
         HEAP32[$413>>2] = $412;
         $414 = (($$4$lcssa$i) + ($411)|0);
         $415 = ((($414)) + 4|0);
         $416 = HEAP32[$415>>2]|0;
         $417 = $416 | 1;
         HEAP32[$415>>2] = $417;
        } else {
         $418 = $246 | 3;
         $419 = ((($$4$lcssa$i)) + 4|0);
         HEAP32[$419>>2] = $418;
         $420 = $$4349$lcssa$i | 1;
         $421 = ((($349)) + 4|0);
         HEAP32[$421>>2] = $420;
         $422 = (($349) + ($$4349$lcssa$i)|0);
         HEAP32[$422>>2] = $$4349$lcssa$i;
         $423 = $$4349$lcssa$i >>> 3;
         $424 = ($$4349$lcssa$i>>>0)<(256);
         if ($424) {
          $425 = $423 << 1;
          $426 = (26836 + ($425<<2)|0);
          $427 = HEAP32[6699]|0;
          $428 = 1 << $423;
          $429 = $427 & $428;
          $430 = ($429|0)==(0);
          if ($430) {
           $431 = $427 | $428;
           HEAP32[6699] = $431;
           $$pre$i205 = ((($426)) + 8|0);
           $$0366$i = $426;$$pre$phi$i206Z2D = $$pre$i205;
          } else {
           $432 = ((($426)) + 8|0);
           $433 = HEAP32[$432>>2]|0;
           $434 = HEAP32[(26812)>>2]|0;
           $435 = ($433>>>0)<($434>>>0);
           if ($435) {
            _abort();
            // unreachable;
           } else {
            $$0366$i = $433;$$pre$phi$i206Z2D = $432;
           }
          }
          HEAP32[$$pre$phi$i206Z2D>>2] = $349;
          $436 = ((($$0366$i)) + 12|0);
          HEAP32[$436>>2] = $349;
          $437 = ((($349)) + 8|0);
          HEAP32[$437>>2] = $$0366$i;
          $438 = ((($349)) + 12|0);
          HEAP32[$438>>2] = $426;
          break;
         }
         $439 = $$4349$lcssa$i >>> 8;
         $440 = ($439|0)==(0);
         if ($440) {
          $$0359$i = 0;
         } else {
          $441 = ($$4349$lcssa$i>>>0)>(16777215);
          if ($441) {
           $$0359$i = 31;
          } else {
           $442 = (($439) + 1048320)|0;
           $443 = $442 >>> 16;
           $444 = $443 & 8;
           $445 = $439 << $444;
           $446 = (($445) + 520192)|0;
           $447 = $446 >>> 16;
           $448 = $447 & 4;
           $449 = $448 | $444;
           $450 = $445 << $448;
           $451 = (($450) + 245760)|0;
           $452 = $451 >>> 16;
           $453 = $452 & 2;
           $454 = $449 | $453;
           $455 = (14 - ($454))|0;
           $456 = $450 << $453;
           $457 = $456 >>> 15;
           $458 = (($455) + ($457))|0;
           $459 = $458 << 1;
           $460 = (($458) + 7)|0;
           $461 = $$4349$lcssa$i >>> $460;
           $462 = $461 & 1;
           $463 = $462 | $459;
           $$0359$i = $463;
          }
         }
         $464 = (27100 + ($$0359$i<<2)|0);
         $465 = ((($349)) + 28|0);
         HEAP32[$465>>2] = $$0359$i;
         $466 = ((($349)) + 16|0);
         $467 = ((($466)) + 4|0);
         HEAP32[$467>>2] = 0;
         HEAP32[$466>>2] = 0;
         $468 = 1 << $$0359$i;
         $469 = $470 & $468;
         $471 = ($469|0)==(0);
         if ($471) {
          $472 = $470 | $468;
          HEAP32[(26800)>>2] = $472;
          HEAP32[$464>>2] = $349;
          $473 = ((($349)) + 24|0);
          HEAP32[$473>>2] = $464;
          $474 = ((($349)) + 12|0);
          HEAP32[$474>>2] = $349;
          $475 = ((($349)) + 8|0);
          HEAP32[$475>>2] = $349;
          break;
         }
         $476 = HEAP32[$464>>2]|0;
         $477 = ($$0359$i|0)==(31);
         $478 = $$0359$i >>> 1;
         $479 = (25 - ($478))|0;
         $480 = $477 ? 0 : $479;
         $481 = $$4349$lcssa$i << $480;
         $$0342$i = $481;$$0343$i = $476;
         while(1) {
          $482 = ((($$0343$i)) + 4|0);
          $483 = HEAP32[$482>>2]|0;
          $484 = $483 & -8;
          $485 = ($484|0)==($$4349$lcssa$i|0);
          if ($485) {
           label = 148;
           break;
          }
          $486 = $$0342$i >>> 31;
          $487 = (((($$0343$i)) + 16|0) + ($486<<2)|0);
          $488 = $$0342$i << 1;
          $489 = HEAP32[$487>>2]|0;
          $490 = ($489|0)==(0|0);
          if ($490) {
           label = 145;
           break;
          } else {
           $$0342$i = $488;$$0343$i = $489;
          }
         }
         if ((label|0) == 145) {
          $491 = HEAP32[(26812)>>2]|0;
          $492 = ($487>>>0)<($491>>>0);
          if ($492) {
           _abort();
           // unreachable;
          } else {
           HEAP32[$487>>2] = $349;
           $493 = ((($349)) + 24|0);
           HEAP32[$493>>2] = $$0343$i;
           $494 = ((($349)) + 12|0);
           HEAP32[$494>>2] = $349;
           $495 = ((($349)) + 8|0);
           HEAP32[$495>>2] = $349;
           break;
          }
         }
         else if ((label|0) == 148) {
          $496 = ((($$0343$i)) + 8|0);
          $497 = HEAP32[$496>>2]|0;
          $498 = HEAP32[(26812)>>2]|0;
          $499 = ($497>>>0)>=($498>>>0);
          $not$7$i = ($$0343$i>>>0)>=($498>>>0);
          $500 = $499 & $not$7$i;
          if ($500) {
           $501 = ((($497)) + 12|0);
           HEAP32[$501>>2] = $349;
           HEAP32[$496>>2] = $349;
           $502 = ((($349)) + 8|0);
           HEAP32[$502>>2] = $497;
           $503 = ((($349)) + 12|0);
           HEAP32[$503>>2] = $$0343$i;
           $504 = ((($349)) + 24|0);
           HEAP32[$504>>2] = 0;
           break;
          } else {
           _abort();
           // unreachable;
          }
         }
        }
       } while(0);
       $505 = ((($$4$lcssa$i)) + 8|0);
       $$0 = $505;
       STACKTOP = sp;return ($$0|0);
      } else {
       $$0197 = $246;
      }
     }
    }
   }
  }
 } while(0);
 $506 = HEAP32[(26804)>>2]|0;
 $507 = ($506>>>0)<($$0197>>>0);
 if (!($507)) {
  $508 = (($506) - ($$0197))|0;
  $509 = HEAP32[(26816)>>2]|0;
  $510 = ($508>>>0)>(15);
  if ($510) {
   $511 = (($509) + ($$0197)|0);
   HEAP32[(26816)>>2] = $511;
   HEAP32[(26804)>>2] = $508;
   $512 = $508 | 1;
   $513 = ((($511)) + 4|0);
   HEAP32[$513>>2] = $512;
   $514 = (($511) + ($508)|0);
   HEAP32[$514>>2] = $508;
   $515 = $$0197 | 3;
   $516 = ((($509)) + 4|0);
   HEAP32[$516>>2] = $515;
  } else {
   HEAP32[(26804)>>2] = 0;
   HEAP32[(26816)>>2] = 0;
   $517 = $506 | 3;
   $518 = ((($509)) + 4|0);
   HEAP32[$518>>2] = $517;
   $519 = (($509) + ($506)|0);
   $520 = ((($519)) + 4|0);
   $521 = HEAP32[$520>>2]|0;
   $522 = $521 | 1;
   HEAP32[$520>>2] = $522;
  }
  $523 = ((($509)) + 8|0);
  $$0 = $523;
  STACKTOP = sp;return ($$0|0);
 }
 $524 = HEAP32[(26808)>>2]|0;
 $525 = ($524>>>0)>($$0197>>>0);
 if ($525) {
  $526 = (($524) - ($$0197))|0;
  HEAP32[(26808)>>2] = $526;
  $527 = HEAP32[(26820)>>2]|0;
  $528 = (($527) + ($$0197)|0);
  HEAP32[(26820)>>2] = $528;
  $529 = $526 | 1;
  $530 = ((($528)) + 4|0);
  HEAP32[$530>>2] = $529;
  $531 = $$0197 | 3;
  $532 = ((($527)) + 4|0);
  HEAP32[$532>>2] = $531;
  $533 = ((($527)) + 8|0);
  $$0 = $533;
  STACKTOP = sp;return ($$0|0);
 }
 $534 = HEAP32[6817]|0;
 $535 = ($534|0)==(0);
 if ($535) {
  HEAP32[(27276)>>2] = 4096;
  HEAP32[(27272)>>2] = 4096;
  HEAP32[(27280)>>2] = -1;
  HEAP32[(27284)>>2] = -1;
  HEAP32[(27288)>>2] = 0;
  HEAP32[(27240)>>2] = 0;
  $536 = $1;
  $537 = $536 & -16;
  $538 = $537 ^ 1431655768;
  HEAP32[$1>>2] = $538;
  HEAP32[6817] = $538;
  $542 = 4096;
 } else {
  $$pre$i208 = HEAP32[(27276)>>2]|0;
  $542 = $$pre$i208;
 }
 $539 = (($$0197) + 48)|0;
 $540 = (($$0197) + 47)|0;
 $541 = (($542) + ($540))|0;
 $543 = (0 - ($542))|0;
 $544 = $541 & $543;
 $545 = ($544>>>0)>($$0197>>>0);
 if (!($545)) {
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 $546 = HEAP32[(27236)>>2]|0;
 $547 = ($546|0)==(0);
 if (!($547)) {
  $548 = HEAP32[(27228)>>2]|0;
  $549 = (($548) + ($544))|0;
  $550 = ($549>>>0)<=($548>>>0);
  $551 = ($549>>>0)>($546>>>0);
  $or$cond1$i210 = $550 | $551;
  if ($or$cond1$i210) {
   $$0 = 0;
   STACKTOP = sp;return ($$0|0);
  }
 }
 $552 = HEAP32[(27240)>>2]|0;
 $553 = $552 & 4;
 $554 = ($553|0)==(0);
 L255: do {
  if ($554) {
   $555 = HEAP32[(26820)>>2]|0;
   $556 = ($555|0)==(0|0);
   L257: do {
    if ($556) {
     label = 172;
    } else {
     $$0$i17$i = (27244);
     while(1) {
      $557 = HEAP32[$$0$i17$i>>2]|0;
      $558 = ($557>>>0)>($555>>>0);
      if (!($558)) {
       $559 = ((($$0$i17$i)) + 4|0);
       $560 = HEAP32[$559>>2]|0;
       $561 = (($557) + ($560)|0);
       $562 = ($561>>>0)>($555>>>0);
       if ($562) {
        break;
       }
      }
      $563 = ((($$0$i17$i)) + 8|0);
      $564 = HEAP32[$563>>2]|0;
      $565 = ($564|0)==(0|0);
      if ($565) {
       label = 172;
       break L257;
      } else {
       $$0$i17$i = $564;
      }
     }
     $588 = (($541) - ($524))|0;
     $589 = $588 & $543;
     $590 = ($589>>>0)<(2147483647);
     if ($590) {
      $591 = (_sbrk(($589|0))|0);
      $592 = HEAP32[$$0$i17$i>>2]|0;
      $593 = HEAP32[$559>>2]|0;
      $594 = (($592) + ($593)|0);
      $595 = ($591|0)==($594|0);
      if ($595) {
       $596 = ($591|0)==((-1)|0);
       if (!($596)) {
        $$723947$i = $589;$$748$i = $591;
        label = 190;
        break L255;
       }
      } else {
       $$2247$ph$i = $591;$$2253$ph$i = $589;
       label = 180;
      }
     }
    }
   } while(0);
   do {
    if ((label|0) == 172) {
     $566 = (_sbrk(0)|0);
     $567 = ($566|0)==((-1)|0);
     if (!($567)) {
      $568 = $566;
      $569 = HEAP32[(27272)>>2]|0;
      $570 = (($569) + -1)|0;
      $571 = $570 & $568;
      $572 = ($571|0)==(0);
      $573 = (($570) + ($568))|0;
      $574 = (0 - ($569))|0;
      $575 = $573 & $574;
      $576 = (($575) - ($568))|0;
      $577 = $572 ? 0 : $576;
      $$$i = (($577) + ($544))|0;
      $578 = HEAP32[(27228)>>2]|0;
      $579 = (($$$i) + ($578))|0;
      $580 = ($$$i>>>0)>($$0197>>>0);
      $581 = ($$$i>>>0)<(2147483647);
      $or$cond$i211 = $580 & $581;
      if ($or$cond$i211) {
       $582 = HEAP32[(27236)>>2]|0;
       $583 = ($582|0)==(0);
       if (!($583)) {
        $584 = ($579>>>0)<=($578>>>0);
        $585 = ($579>>>0)>($582>>>0);
        $or$cond2$i = $584 | $585;
        if ($or$cond2$i) {
         break;
        }
       }
       $586 = (_sbrk(($$$i|0))|0);
       $587 = ($586|0)==($566|0);
       if ($587) {
        $$723947$i = $$$i;$$748$i = $566;
        label = 190;
        break L255;
       } else {
        $$2247$ph$i = $586;$$2253$ph$i = $$$i;
        label = 180;
       }
      }
     }
    }
   } while(0);
   L274: do {
    if ((label|0) == 180) {
     $597 = (0 - ($$2253$ph$i))|0;
     $598 = ($$2247$ph$i|0)!=((-1)|0);
     $599 = ($$2253$ph$i>>>0)<(2147483647);
     $or$cond7$i = $599 & $598;
     $600 = ($539>>>0)>($$2253$ph$i>>>0);
     $or$cond10$i = $600 & $or$cond7$i;
     do {
      if ($or$cond10$i) {
       $601 = HEAP32[(27276)>>2]|0;
       $602 = (($540) - ($$2253$ph$i))|0;
       $603 = (($602) + ($601))|0;
       $604 = (0 - ($601))|0;
       $605 = $603 & $604;
       $606 = ($605>>>0)<(2147483647);
       if ($606) {
        $607 = (_sbrk(($605|0))|0);
        $608 = ($607|0)==((-1)|0);
        if ($608) {
         (_sbrk(($597|0))|0);
         break L274;
        } else {
         $609 = (($605) + ($$2253$ph$i))|0;
         $$5256$i = $609;
         break;
        }
       } else {
        $$5256$i = $$2253$ph$i;
       }
      } else {
       $$5256$i = $$2253$ph$i;
      }
     } while(0);
     $610 = ($$2247$ph$i|0)==((-1)|0);
     if (!($610)) {
      $$723947$i = $$5256$i;$$748$i = $$2247$ph$i;
      label = 190;
      break L255;
     }
    }
   } while(0);
   $611 = HEAP32[(27240)>>2]|0;
   $612 = $611 | 4;
   HEAP32[(27240)>>2] = $612;
   label = 187;
  } else {
   label = 187;
  }
 } while(0);
 if ((label|0) == 187) {
  $613 = ($544>>>0)<(2147483647);
  if ($613) {
   $614 = (_sbrk(($544|0))|0);
   $615 = (_sbrk(0)|0);
   $616 = ($614|0)!=((-1)|0);
   $617 = ($615|0)!=((-1)|0);
   $or$cond5$i = $616 & $617;
   $618 = ($614>>>0)<($615>>>0);
   $or$cond11$i = $618 & $or$cond5$i;
   if ($or$cond11$i) {
    $619 = $615;
    $620 = $614;
    $621 = (($619) - ($620))|0;
    $622 = (($$0197) + 40)|0;
    $$not$i = ($621>>>0)>($622>>>0);
    if ($$not$i) {
     $$723947$i = $621;$$748$i = $614;
     label = 190;
    }
   }
  }
 }
 if ((label|0) == 190) {
  $623 = HEAP32[(27228)>>2]|0;
  $624 = (($623) + ($$723947$i))|0;
  HEAP32[(27228)>>2] = $624;
  $625 = HEAP32[(27232)>>2]|0;
  $626 = ($624>>>0)>($625>>>0);
  if ($626) {
   HEAP32[(27232)>>2] = $624;
  }
  $627 = HEAP32[(26820)>>2]|0;
  $628 = ($627|0)==(0|0);
  do {
   if ($628) {
    $629 = HEAP32[(26812)>>2]|0;
    $630 = ($629|0)==(0|0);
    $631 = ($$748$i>>>0)<($629>>>0);
    $or$cond12$i = $630 | $631;
    if ($or$cond12$i) {
     HEAP32[(26812)>>2] = $$748$i;
    }
    HEAP32[(27244)>>2] = $$748$i;
    HEAP32[(27248)>>2] = $$723947$i;
    HEAP32[(27256)>>2] = 0;
    $632 = HEAP32[6817]|0;
    HEAP32[(26832)>>2] = $632;
    HEAP32[(26828)>>2] = -1;
    $$01$i$i = 0;
    while(1) {
     $633 = $$01$i$i << 1;
     $634 = (26836 + ($633<<2)|0);
     $635 = ((($634)) + 12|0);
     HEAP32[$635>>2] = $634;
     $636 = ((($634)) + 8|0);
     HEAP32[$636>>2] = $634;
     $637 = (($$01$i$i) + 1)|0;
     $exitcond$i$i = ($637|0)==(32);
     if ($exitcond$i$i) {
      break;
     } else {
      $$01$i$i = $637;
     }
    }
    $638 = (($$723947$i) + -40)|0;
    $639 = ((($$748$i)) + 8|0);
    $640 = $639;
    $641 = $640 & 7;
    $642 = ($641|0)==(0);
    $643 = (0 - ($640))|0;
    $644 = $643 & 7;
    $645 = $642 ? 0 : $644;
    $646 = (($$748$i) + ($645)|0);
    $647 = (($638) - ($645))|0;
    HEAP32[(26820)>>2] = $646;
    HEAP32[(26808)>>2] = $647;
    $648 = $647 | 1;
    $649 = ((($646)) + 4|0);
    HEAP32[$649>>2] = $648;
    $650 = (($646) + ($647)|0);
    $651 = ((($650)) + 4|0);
    HEAP32[$651>>2] = 40;
    $652 = HEAP32[(27284)>>2]|0;
    HEAP32[(26824)>>2] = $652;
   } else {
    $$024370$i = (27244);
    while(1) {
     $653 = HEAP32[$$024370$i>>2]|0;
     $654 = ((($$024370$i)) + 4|0);
     $655 = HEAP32[$654>>2]|0;
     $656 = (($653) + ($655)|0);
     $657 = ($$748$i|0)==($656|0);
     if ($657) {
      label = 200;
      break;
     }
     $658 = ((($$024370$i)) + 8|0);
     $659 = HEAP32[$658>>2]|0;
     $660 = ($659|0)==(0|0);
     if ($660) {
      break;
     } else {
      $$024370$i = $659;
     }
    }
    if ((label|0) == 200) {
     $661 = ((($$024370$i)) + 12|0);
     $662 = HEAP32[$661>>2]|0;
     $663 = $662 & 8;
     $664 = ($663|0)==(0);
     if ($664) {
      $665 = ($627>>>0)>=($653>>>0);
      $666 = ($627>>>0)<($$748$i>>>0);
      $or$cond50$i = $666 & $665;
      if ($or$cond50$i) {
       $667 = (($655) + ($$723947$i))|0;
       HEAP32[$654>>2] = $667;
       $668 = HEAP32[(26808)>>2]|0;
       $669 = ((($627)) + 8|0);
       $670 = $669;
       $671 = $670 & 7;
       $672 = ($671|0)==(0);
       $673 = (0 - ($670))|0;
       $674 = $673 & 7;
       $675 = $672 ? 0 : $674;
       $676 = (($627) + ($675)|0);
       $677 = (($$723947$i) - ($675))|0;
       $678 = (($677) + ($668))|0;
       HEAP32[(26820)>>2] = $676;
       HEAP32[(26808)>>2] = $678;
       $679 = $678 | 1;
       $680 = ((($676)) + 4|0);
       HEAP32[$680>>2] = $679;
       $681 = (($676) + ($678)|0);
       $682 = ((($681)) + 4|0);
       HEAP32[$682>>2] = 40;
       $683 = HEAP32[(27284)>>2]|0;
       HEAP32[(26824)>>2] = $683;
       break;
      }
     }
    }
    $684 = HEAP32[(26812)>>2]|0;
    $685 = ($$748$i>>>0)<($684>>>0);
    if ($685) {
     HEAP32[(26812)>>2] = $$748$i;
     $749 = $$748$i;
    } else {
     $749 = $684;
    }
    $686 = (($$748$i) + ($$723947$i)|0);
    $$124469$i = (27244);
    while(1) {
     $687 = HEAP32[$$124469$i>>2]|0;
     $688 = ($687|0)==($686|0);
     if ($688) {
      label = 208;
      break;
     }
     $689 = ((($$124469$i)) + 8|0);
     $690 = HEAP32[$689>>2]|0;
     $691 = ($690|0)==(0|0);
     if ($691) {
      $$0$i$i$i = (27244);
      break;
     } else {
      $$124469$i = $690;
     }
    }
    if ((label|0) == 208) {
     $692 = ((($$124469$i)) + 12|0);
     $693 = HEAP32[$692>>2]|0;
     $694 = $693 & 8;
     $695 = ($694|0)==(0);
     if ($695) {
      HEAP32[$$124469$i>>2] = $$748$i;
      $696 = ((($$124469$i)) + 4|0);
      $697 = HEAP32[$696>>2]|0;
      $698 = (($697) + ($$723947$i))|0;
      HEAP32[$696>>2] = $698;
      $699 = ((($$748$i)) + 8|0);
      $700 = $699;
      $701 = $700 & 7;
      $702 = ($701|0)==(0);
      $703 = (0 - ($700))|0;
      $704 = $703 & 7;
      $705 = $702 ? 0 : $704;
      $706 = (($$748$i) + ($705)|0);
      $707 = ((($686)) + 8|0);
      $708 = $707;
      $709 = $708 & 7;
      $710 = ($709|0)==(0);
      $711 = (0 - ($708))|0;
      $712 = $711 & 7;
      $713 = $710 ? 0 : $712;
      $714 = (($686) + ($713)|0);
      $715 = $714;
      $716 = $706;
      $717 = (($715) - ($716))|0;
      $718 = (($706) + ($$0197)|0);
      $719 = (($717) - ($$0197))|0;
      $720 = $$0197 | 3;
      $721 = ((($706)) + 4|0);
      HEAP32[$721>>2] = $720;
      $722 = ($714|0)==($627|0);
      do {
       if ($722) {
        $723 = HEAP32[(26808)>>2]|0;
        $724 = (($723) + ($719))|0;
        HEAP32[(26808)>>2] = $724;
        HEAP32[(26820)>>2] = $718;
        $725 = $724 | 1;
        $726 = ((($718)) + 4|0);
        HEAP32[$726>>2] = $725;
       } else {
        $727 = HEAP32[(26816)>>2]|0;
        $728 = ($714|0)==($727|0);
        if ($728) {
         $729 = HEAP32[(26804)>>2]|0;
         $730 = (($729) + ($719))|0;
         HEAP32[(26804)>>2] = $730;
         HEAP32[(26816)>>2] = $718;
         $731 = $730 | 1;
         $732 = ((($718)) + 4|0);
         HEAP32[$732>>2] = $731;
         $733 = (($718) + ($730)|0);
         HEAP32[$733>>2] = $730;
         break;
        }
        $734 = ((($714)) + 4|0);
        $735 = HEAP32[$734>>2]|0;
        $736 = $735 & 3;
        $737 = ($736|0)==(1);
        if ($737) {
         $738 = $735 & -8;
         $739 = $735 >>> 3;
         $740 = ($735>>>0)<(256);
         L326: do {
          if ($740) {
           $741 = ((($714)) + 8|0);
           $742 = HEAP32[$741>>2]|0;
           $743 = ((($714)) + 12|0);
           $744 = HEAP32[$743>>2]|0;
           $745 = $739 << 1;
           $746 = (26836 + ($745<<2)|0);
           $747 = ($742|0)==($746|0);
           do {
            if (!($747)) {
             $748 = ($742>>>0)<($749>>>0);
             if ($748) {
              _abort();
              // unreachable;
             }
             $750 = ((($742)) + 12|0);
             $751 = HEAP32[$750>>2]|0;
             $752 = ($751|0)==($714|0);
             if ($752) {
              break;
             }
             _abort();
             // unreachable;
            }
           } while(0);
           $753 = ($744|0)==($742|0);
           if ($753) {
            $754 = 1 << $739;
            $755 = $754 ^ -1;
            $756 = HEAP32[6699]|0;
            $757 = $756 & $755;
            HEAP32[6699] = $757;
            break;
           }
           $758 = ($744|0)==($746|0);
           do {
            if ($758) {
             $$pre9$i$i = ((($744)) + 8|0);
             $$pre$phi10$i$iZ2D = $$pre9$i$i;
            } else {
             $759 = ($744>>>0)<($749>>>0);
             if ($759) {
              _abort();
              // unreachable;
             }
             $760 = ((($744)) + 8|0);
             $761 = HEAP32[$760>>2]|0;
             $762 = ($761|0)==($714|0);
             if ($762) {
              $$pre$phi10$i$iZ2D = $760;
              break;
             }
             _abort();
             // unreachable;
            }
           } while(0);
           $763 = ((($742)) + 12|0);
           HEAP32[$763>>2] = $744;
           HEAP32[$$pre$phi10$i$iZ2D>>2] = $742;
          } else {
           $764 = ((($714)) + 24|0);
           $765 = HEAP32[$764>>2]|0;
           $766 = ((($714)) + 12|0);
           $767 = HEAP32[$766>>2]|0;
           $768 = ($767|0)==($714|0);
           do {
            if ($768) {
             $778 = ((($714)) + 16|0);
             $779 = ((($778)) + 4|0);
             $780 = HEAP32[$779>>2]|0;
             $781 = ($780|0)==(0|0);
             if ($781) {
              $782 = HEAP32[$778>>2]|0;
              $783 = ($782|0)==(0|0);
              if ($783) {
               $$3$i$i = 0;
               break;
              } else {
               $$1290$i$i = $782;$$1292$i$i = $778;
              }
             } else {
              $$1290$i$i = $780;$$1292$i$i = $779;
             }
             while(1) {
              $784 = ((($$1290$i$i)) + 20|0);
              $785 = HEAP32[$784>>2]|0;
              $786 = ($785|0)==(0|0);
              if (!($786)) {
               $$1290$i$i = $785;$$1292$i$i = $784;
               continue;
              }
              $787 = ((($$1290$i$i)) + 16|0);
              $788 = HEAP32[$787>>2]|0;
              $789 = ($788|0)==(0|0);
              if ($789) {
               break;
              } else {
               $$1290$i$i = $788;$$1292$i$i = $787;
              }
             }
             $790 = ($$1292$i$i>>>0)<($749>>>0);
             if ($790) {
              _abort();
              // unreachable;
             } else {
              HEAP32[$$1292$i$i>>2] = 0;
              $$3$i$i = $$1290$i$i;
              break;
             }
            } else {
             $769 = ((($714)) + 8|0);
             $770 = HEAP32[$769>>2]|0;
             $771 = ($770>>>0)<($749>>>0);
             if ($771) {
              _abort();
              // unreachable;
             }
             $772 = ((($770)) + 12|0);
             $773 = HEAP32[$772>>2]|0;
             $774 = ($773|0)==($714|0);
             if (!($774)) {
              _abort();
              // unreachable;
             }
             $775 = ((($767)) + 8|0);
             $776 = HEAP32[$775>>2]|0;
             $777 = ($776|0)==($714|0);
             if ($777) {
              HEAP32[$772>>2] = $767;
              HEAP32[$775>>2] = $770;
              $$3$i$i = $767;
              break;
             } else {
              _abort();
              // unreachable;
             }
            }
           } while(0);
           $791 = ($765|0)==(0|0);
           if ($791) {
            break;
           }
           $792 = ((($714)) + 28|0);
           $793 = HEAP32[$792>>2]|0;
           $794 = (27100 + ($793<<2)|0);
           $795 = HEAP32[$794>>2]|0;
           $796 = ($714|0)==($795|0);
           do {
            if ($796) {
             HEAP32[$794>>2] = $$3$i$i;
             $cond$i$i = ($$3$i$i|0)==(0|0);
             if (!($cond$i$i)) {
              break;
             }
             $797 = 1 << $793;
             $798 = $797 ^ -1;
             $799 = HEAP32[(26800)>>2]|0;
             $800 = $799 & $798;
             HEAP32[(26800)>>2] = $800;
             break L326;
            } else {
             $801 = HEAP32[(26812)>>2]|0;
             $802 = ($765>>>0)<($801>>>0);
             if ($802) {
              _abort();
              // unreachable;
             }
             $803 = ((($765)) + 16|0);
             $804 = HEAP32[$803>>2]|0;
             $805 = ($804|0)==($714|0);
             if ($805) {
              HEAP32[$803>>2] = $$3$i$i;
             } else {
              $806 = ((($765)) + 20|0);
              HEAP32[$806>>2] = $$3$i$i;
             }
             $807 = ($$3$i$i|0)==(0|0);
             if ($807) {
              break L326;
             }
            }
           } while(0);
           $808 = HEAP32[(26812)>>2]|0;
           $809 = ($$3$i$i>>>0)<($808>>>0);
           if ($809) {
            _abort();
            // unreachable;
           }
           $810 = ((($$3$i$i)) + 24|0);
           HEAP32[$810>>2] = $765;
           $811 = ((($714)) + 16|0);
           $812 = HEAP32[$811>>2]|0;
           $813 = ($812|0)==(0|0);
           do {
            if (!($813)) {
             $814 = ($812>>>0)<($808>>>0);
             if ($814) {
              _abort();
              // unreachable;
             } else {
              $815 = ((($$3$i$i)) + 16|0);
              HEAP32[$815>>2] = $812;
              $816 = ((($812)) + 24|0);
              HEAP32[$816>>2] = $$3$i$i;
              break;
             }
            }
           } while(0);
           $817 = ((($811)) + 4|0);
           $818 = HEAP32[$817>>2]|0;
           $819 = ($818|0)==(0|0);
           if ($819) {
            break;
           }
           $820 = HEAP32[(26812)>>2]|0;
           $821 = ($818>>>0)<($820>>>0);
           if ($821) {
            _abort();
            // unreachable;
           } else {
            $822 = ((($$3$i$i)) + 20|0);
            HEAP32[$822>>2] = $818;
            $823 = ((($818)) + 24|0);
            HEAP32[$823>>2] = $$3$i$i;
            break;
           }
          }
         } while(0);
         $824 = (($714) + ($738)|0);
         $825 = (($738) + ($719))|0;
         $$0$i18$i = $824;$$0286$i$i = $825;
        } else {
         $$0$i18$i = $714;$$0286$i$i = $719;
        }
        $826 = ((($$0$i18$i)) + 4|0);
        $827 = HEAP32[$826>>2]|0;
        $828 = $827 & -2;
        HEAP32[$826>>2] = $828;
        $829 = $$0286$i$i | 1;
        $830 = ((($718)) + 4|0);
        HEAP32[$830>>2] = $829;
        $831 = (($718) + ($$0286$i$i)|0);
        HEAP32[$831>>2] = $$0286$i$i;
        $832 = $$0286$i$i >>> 3;
        $833 = ($$0286$i$i>>>0)<(256);
        if ($833) {
         $834 = $832 << 1;
         $835 = (26836 + ($834<<2)|0);
         $836 = HEAP32[6699]|0;
         $837 = 1 << $832;
         $838 = $836 & $837;
         $839 = ($838|0)==(0);
         do {
          if ($839) {
           $840 = $836 | $837;
           HEAP32[6699] = $840;
           $$pre$i19$i = ((($835)) + 8|0);
           $$0294$i$i = $835;$$pre$phi$i20$iZ2D = $$pre$i19$i;
          } else {
           $841 = ((($835)) + 8|0);
           $842 = HEAP32[$841>>2]|0;
           $843 = HEAP32[(26812)>>2]|0;
           $844 = ($842>>>0)<($843>>>0);
           if (!($844)) {
            $$0294$i$i = $842;$$pre$phi$i20$iZ2D = $841;
            break;
           }
           _abort();
           // unreachable;
          }
         } while(0);
         HEAP32[$$pre$phi$i20$iZ2D>>2] = $718;
         $845 = ((($$0294$i$i)) + 12|0);
         HEAP32[$845>>2] = $718;
         $846 = ((($718)) + 8|0);
         HEAP32[$846>>2] = $$0294$i$i;
         $847 = ((($718)) + 12|0);
         HEAP32[$847>>2] = $835;
         break;
        }
        $848 = $$0286$i$i >>> 8;
        $849 = ($848|0)==(0);
        do {
         if ($849) {
          $$0295$i$i = 0;
         } else {
          $850 = ($$0286$i$i>>>0)>(16777215);
          if ($850) {
           $$0295$i$i = 31;
           break;
          }
          $851 = (($848) + 1048320)|0;
          $852 = $851 >>> 16;
          $853 = $852 & 8;
          $854 = $848 << $853;
          $855 = (($854) + 520192)|0;
          $856 = $855 >>> 16;
          $857 = $856 & 4;
          $858 = $857 | $853;
          $859 = $854 << $857;
          $860 = (($859) + 245760)|0;
          $861 = $860 >>> 16;
          $862 = $861 & 2;
          $863 = $858 | $862;
          $864 = (14 - ($863))|0;
          $865 = $859 << $862;
          $866 = $865 >>> 15;
          $867 = (($864) + ($866))|0;
          $868 = $867 << 1;
          $869 = (($867) + 7)|0;
          $870 = $$0286$i$i >>> $869;
          $871 = $870 & 1;
          $872 = $871 | $868;
          $$0295$i$i = $872;
         }
        } while(0);
        $873 = (27100 + ($$0295$i$i<<2)|0);
        $874 = ((($718)) + 28|0);
        HEAP32[$874>>2] = $$0295$i$i;
        $875 = ((($718)) + 16|0);
        $876 = ((($875)) + 4|0);
        HEAP32[$876>>2] = 0;
        HEAP32[$875>>2] = 0;
        $877 = HEAP32[(26800)>>2]|0;
        $878 = 1 << $$0295$i$i;
        $879 = $877 & $878;
        $880 = ($879|0)==(0);
        if ($880) {
         $881 = $877 | $878;
         HEAP32[(26800)>>2] = $881;
         HEAP32[$873>>2] = $718;
         $882 = ((($718)) + 24|0);
         HEAP32[$882>>2] = $873;
         $883 = ((($718)) + 12|0);
         HEAP32[$883>>2] = $718;
         $884 = ((($718)) + 8|0);
         HEAP32[$884>>2] = $718;
         break;
        }
        $885 = HEAP32[$873>>2]|0;
        $886 = ($$0295$i$i|0)==(31);
        $887 = $$0295$i$i >>> 1;
        $888 = (25 - ($887))|0;
        $889 = $886 ? 0 : $888;
        $890 = $$0286$i$i << $889;
        $$0287$i$i = $890;$$0288$i$i = $885;
        while(1) {
         $891 = ((($$0288$i$i)) + 4|0);
         $892 = HEAP32[$891>>2]|0;
         $893 = $892 & -8;
         $894 = ($893|0)==($$0286$i$i|0);
         if ($894) {
          label = 278;
          break;
         }
         $895 = $$0287$i$i >>> 31;
         $896 = (((($$0288$i$i)) + 16|0) + ($895<<2)|0);
         $897 = $$0287$i$i << 1;
         $898 = HEAP32[$896>>2]|0;
         $899 = ($898|0)==(0|0);
         if ($899) {
          label = 275;
          break;
         } else {
          $$0287$i$i = $897;$$0288$i$i = $898;
         }
        }
        if ((label|0) == 275) {
         $900 = HEAP32[(26812)>>2]|0;
         $901 = ($896>>>0)<($900>>>0);
         if ($901) {
          _abort();
          // unreachable;
         } else {
          HEAP32[$896>>2] = $718;
          $902 = ((($718)) + 24|0);
          HEAP32[$902>>2] = $$0288$i$i;
          $903 = ((($718)) + 12|0);
          HEAP32[$903>>2] = $718;
          $904 = ((($718)) + 8|0);
          HEAP32[$904>>2] = $718;
          break;
         }
        }
        else if ((label|0) == 278) {
         $905 = ((($$0288$i$i)) + 8|0);
         $906 = HEAP32[$905>>2]|0;
         $907 = HEAP32[(26812)>>2]|0;
         $908 = ($906>>>0)>=($907>>>0);
         $not$$i22$i = ($$0288$i$i>>>0)>=($907>>>0);
         $909 = $908 & $not$$i22$i;
         if ($909) {
          $910 = ((($906)) + 12|0);
          HEAP32[$910>>2] = $718;
          HEAP32[$905>>2] = $718;
          $911 = ((($718)) + 8|0);
          HEAP32[$911>>2] = $906;
          $912 = ((($718)) + 12|0);
          HEAP32[$912>>2] = $$0288$i$i;
          $913 = ((($718)) + 24|0);
          HEAP32[$913>>2] = 0;
          break;
         } else {
          _abort();
          // unreachable;
         }
        }
       }
      } while(0);
      $1044 = ((($706)) + 8|0);
      $$0 = $1044;
      STACKTOP = sp;return ($$0|0);
     } else {
      $$0$i$i$i = (27244);
     }
    }
    while(1) {
     $914 = HEAP32[$$0$i$i$i>>2]|0;
     $915 = ($914>>>0)>($627>>>0);
     if (!($915)) {
      $916 = ((($$0$i$i$i)) + 4|0);
      $917 = HEAP32[$916>>2]|0;
      $918 = (($914) + ($917)|0);
      $919 = ($918>>>0)>($627>>>0);
      if ($919) {
       break;
      }
     }
     $920 = ((($$0$i$i$i)) + 8|0);
     $921 = HEAP32[$920>>2]|0;
     $$0$i$i$i = $921;
    }
    $922 = ((($918)) + -47|0);
    $923 = ((($922)) + 8|0);
    $924 = $923;
    $925 = $924 & 7;
    $926 = ($925|0)==(0);
    $927 = (0 - ($924))|0;
    $928 = $927 & 7;
    $929 = $926 ? 0 : $928;
    $930 = (($922) + ($929)|0);
    $931 = ((($627)) + 16|0);
    $932 = ($930>>>0)<($931>>>0);
    $933 = $932 ? $627 : $930;
    $934 = ((($933)) + 8|0);
    $935 = ((($933)) + 24|0);
    $936 = (($$723947$i) + -40)|0;
    $937 = ((($$748$i)) + 8|0);
    $938 = $937;
    $939 = $938 & 7;
    $940 = ($939|0)==(0);
    $941 = (0 - ($938))|0;
    $942 = $941 & 7;
    $943 = $940 ? 0 : $942;
    $944 = (($$748$i) + ($943)|0);
    $945 = (($936) - ($943))|0;
    HEAP32[(26820)>>2] = $944;
    HEAP32[(26808)>>2] = $945;
    $946 = $945 | 1;
    $947 = ((($944)) + 4|0);
    HEAP32[$947>>2] = $946;
    $948 = (($944) + ($945)|0);
    $949 = ((($948)) + 4|0);
    HEAP32[$949>>2] = 40;
    $950 = HEAP32[(27284)>>2]|0;
    HEAP32[(26824)>>2] = $950;
    $951 = ((($933)) + 4|0);
    HEAP32[$951>>2] = 27;
    ;HEAP32[$934>>2]=HEAP32[(27244)>>2]|0;HEAP32[$934+4>>2]=HEAP32[(27244)+4>>2]|0;HEAP32[$934+8>>2]=HEAP32[(27244)+8>>2]|0;HEAP32[$934+12>>2]=HEAP32[(27244)+12>>2]|0;
    HEAP32[(27244)>>2] = $$748$i;
    HEAP32[(27248)>>2] = $$723947$i;
    HEAP32[(27256)>>2] = 0;
    HEAP32[(27252)>>2] = $934;
    $$0$i$i = $935;
    while(1) {
     $952 = ((($$0$i$i)) + 4|0);
     HEAP32[$952>>2] = 7;
     $953 = ((($952)) + 4|0);
     $954 = ($953>>>0)<($918>>>0);
     if ($954) {
      $$0$i$i = $952;
     } else {
      break;
     }
    }
    $955 = ($933|0)==($627|0);
    if (!($955)) {
     $956 = $933;
     $957 = $627;
     $958 = (($956) - ($957))|0;
     $959 = HEAP32[$951>>2]|0;
     $960 = $959 & -2;
     HEAP32[$951>>2] = $960;
     $961 = $958 | 1;
     $962 = ((($627)) + 4|0);
     HEAP32[$962>>2] = $961;
     HEAP32[$933>>2] = $958;
     $963 = $958 >>> 3;
     $964 = ($958>>>0)<(256);
     if ($964) {
      $965 = $963 << 1;
      $966 = (26836 + ($965<<2)|0);
      $967 = HEAP32[6699]|0;
      $968 = 1 << $963;
      $969 = $967 & $968;
      $970 = ($969|0)==(0);
      if ($970) {
       $971 = $967 | $968;
       HEAP32[6699] = $971;
       $$pre$i$i = ((($966)) + 8|0);
       $$0211$i$i = $966;$$pre$phi$i$iZ2D = $$pre$i$i;
      } else {
       $972 = ((($966)) + 8|0);
       $973 = HEAP32[$972>>2]|0;
       $974 = HEAP32[(26812)>>2]|0;
       $975 = ($973>>>0)<($974>>>0);
       if ($975) {
        _abort();
        // unreachable;
       } else {
        $$0211$i$i = $973;$$pre$phi$i$iZ2D = $972;
       }
      }
      HEAP32[$$pre$phi$i$iZ2D>>2] = $627;
      $976 = ((($$0211$i$i)) + 12|0);
      HEAP32[$976>>2] = $627;
      $977 = ((($627)) + 8|0);
      HEAP32[$977>>2] = $$0211$i$i;
      $978 = ((($627)) + 12|0);
      HEAP32[$978>>2] = $966;
      break;
     }
     $979 = $958 >>> 8;
     $980 = ($979|0)==(0);
     if ($980) {
      $$0212$i$i = 0;
     } else {
      $981 = ($958>>>0)>(16777215);
      if ($981) {
       $$0212$i$i = 31;
      } else {
       $982 = (($979) + 1048320)|0;
       $983 = $982 >>> 16;
       $984 = $983 & 8;
       $985 = $979 << $984;
       $986 = (($985) + 520192)|0;
       $987 = $986 >>> 16;
       $988 = $987 & 4;
       $989 = $988 | $984;
       $990 = $985 << $988;
       $991 = (($990) + 245760)|0;
       $992 = $991 >>> 16;
       $993 = $992 & 2;
       $994 = $989 | $993;
       $995 = (14 - ($994))|0;
       $996 = $990 << $993;
       $997 = $996 >>> 15;
       $998 = (($995) + ($997))|0;
       $999 = $998 << 1;
       $1000 = (($998) + 7)|0;
       $1001 = $958 >>> $1000;
       $1002 = $1001 & 1;
       $1003 = $1002 | $999;
       $$0212$i$i = $1003;
      }
     }
     $1004 = (27100 + ($$0212$i$i<<2)|0);
     $1005 = ((($627)) + 28|0);
     HEAP32[$1005>>2] = $$0212$i$i;
     $1006 = ((($627)) + 20|0);
     HEAP32[$1006>>2] = 0;
     HEAP32[$931>>2] = 0;
     $1007 = HEAP32[(26800)>>2]|0;
     $1008 = 1 << $$0212$i$i;
     $1009 = $1007 & $1008;
     $1010 = ($1009|0)==(0);
     if ($1010) {
      $1011 = $1007 | $1008;
      HEAP32[(26800)>>2] = $1011;
      HEAP32[$1004>>2] = $627;
      $1012 = ((($627)) + 24|0);
      HEAP32[$1012>>2] = $1004;
      $1013 = ((($627)) + 12|0);
      HEAP32[$1013>>2] = $627;
      $1014 = ((($627)) + 8|0);
      HEAP32[$1014>>2] = $627;
      break;
     }
     $1015 = HEAP32[$1004>>2]|0;
     $1016 = ($$0212$i$i|0)==(31);
     $1017 = $$0212$i$i >>> 1;
     $1018 = (25 - ($1017))|0;
     $1019 = $1016 ? 0 : $1018;
     $1020 = $958 << $1019;
     $$0206$i$i = $1020;$$0207$i$i = $1015;
     while(1) {
      $1021 = ((($$0207$i$i)) + 4|0);
      $1022 = HEAP32[$1021>>2]|0;
      $1023 = $1022 & -8;
      $1024 = ($1023|0)==($958|0);
      if ($1024) {
       label = 304;
       break;
      }
      $1025 = $$0206$i$i >>> 31;
      $1026 = (((($$0207$i$i)) + 16|0) + ($1025<<2)|0);
      $1027 = $$0206$i$i << 1;
      $1028 = HEAP32[$1026>>2]|0;
      $1029 = ($1028|0)==(0|0);
      if ($1029) {
       label = 301;
       break;
      } else {
       $$0206$i$i = $1027;$$0207$i$i = $1028;
      }
     }
     if ((label|0) == 301) {
      $1030 = HEAP32[(26812)>>2]|0;
      $1031 = ($1026>>>0)<($1030>>>0);
      if ($1031) {
       _abort();
       // unreachable;
      } else {
       HEAP32[$1026>>2] = $627;
       $1032 = ((($627)) + 24|0);
       HEAP32[$1032>>2] = $$0207$i$i;
       $1033 = ((($627)) + 12|0);
       HEAP32[$1033>>2] = $627;
       $1034 = ((($627)) + 8|0);
       HEAP32[$1034>>2] = $627;
       break;
      }
     }
     else if ((label|0) == 304) {
      $1035 = ((($$0207$i$i)) + 8|0);
      $1036 = HEAP32[$1035>>2]|0;
      $1037 = HEAP32[(26812)>>2]|0;
      $1038 = ($1036>>>0)>=($1037>>>0);
      $not$$i$i = ($$0207$i$i>>>0)>=($1037>>>0);
      $1039 = $1038 & $not$$i$i;
      if ($1039) {
       $1040 = ((($1036)) + 12|0);
       HEAP32[$1040>>2] = $627;
       HEAP32[$1035>>2] = $627;
       $1041 = ((($627)) + 8|0);
       HEAP32[$1041>>2] = $1036;
       $1042 = ((($627)) + 12|0);
       HEAP32[$1042>>2] = $$0207$i$i;
       $1043 = ((($627)) + 24|0);
       HEAP32[$1043>>2] = 0;
       break;
      } else {
       _abort();
       // unreachable;
      }
     }
    }
   }
  } while(0);
  $1045 = HEAP32[(26808)>>2]|0;
  $1046 = ($1045>>>0)>($$0197>>>0);
  if ($1046) {
   $1047 = (($1045) - ($$0197))|0;
   HEAP32[(26808)>>2] = $1047;
   $1048 = HEAP32[(26820)>>2]|0;
   $1049 = (($1048) + ($$0197)|0);
   HEAP32[(26820)>>2] = $1049;
   $1050 = $1047 | 1;
   $1051 = ((($1049)) + 4|0);
   HEAP32[$1051>>2] = $1050;
   $1052 = $$0197 | 3;
   $1053 = ((($1048)) + 4|0);
   HEAP32[$1053>>2] = $1052;
   $1054 = ((($1048)) + 8|0);
   $$0 = $1054;
   STACKTOP = sp;return ($$0|0);
  }
 }
 $1055 = (___errno_location()|0);
 HEAP32[$1055>>2] = 12;
 $$0 = 0;
 STACKTOP = sp;return ($$0|0);
}
function _free($0) {
 $0 = $0|0;
 var $$0211$i = 0, $$0211$in$i = 0, $$0381 = 0, $$0382 = 0, $$0394 = 0, $$0401 = 0, $$1 = 0, $$1380 = 0, $$1385 = 0, $$1388 = 0, $$1396 = 0, $$1400 = 0, $$2 = 0, $$3 = 0, $$3398 = 0, $$pre = 0, $$pre$phi439Z2D = 0, $$pre$phi441Z2D = 0, $$pre$phiZ2D = 0, $$pre438 = 0;
 var $$pre440 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0;
 var $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0;
 var $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0;
 var $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0;
 var $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0;
 var $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0;
 var $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0;
 var $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0;
 var $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0;
 var $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0;
 var $99 = 0, $cond418 = 0, $cond419 = 0, $not$ = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0|0);
 if ($1) {
  return;
 }
 $2 = ((($0)) + -8|0);
 $3 = HEAP32[(26812)>>2]|0;
 $4 = ($2>>>0)<($3>>>0);
 if ($4) {
  _abort();
  // unreachable;
 }
 $5 = ((($0)) + -4|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = $6 & 3;
 $8 = ($7|0)==(1);
 if ($8) {
  _abort();
  // unreachable;
 }
 $9 = $6 & -8;
 $10 = (($2) + ($9)|0);
 $11 = $6 & 1;
 $12 = ($11|0)==(0);
 do {
  if ($12) {
   $13 = HEAP32[$2>>2]|0;
   $14 = ($7|0)==(0);
   if ($14) {
    return;
   }
   $15 = (0 - ($13))|0;
   $16 = (($2) + ($15)|0);
   $17 = (($13) + ($9))|0;
   $18 = ($16>>>0)<($3>>>0);
   if ($18) {
    _abort();
    // unreachable;
   }
   $19 = HEAP32[(26816)>>2]|0;
   $20 = ($16|0)==($19|0);
   if ($20) {
    $105 = ((($10)) + 4|0);
    $106 = HEAP32[$105>>2]|0;
    $107 = $106 & 3;
    $108 = ($107|0)==(3);
    if (!($108)) {
     $$1 = $16;$$1380 = $17;
     break;
    }
    HEAP32[(26804)>>2] = $17;
    $109 = $106 & -2;
    HEAP32[$105>>2] = $109;
    $110 = $17 | 1;
    $111 = ((($16)) + 4|0);
    HEAP32[$111>>2] = $110;
    $112 = (($16) + ($17)|0);
    HEAP32[$112>>2] = $17;
    return;
   }
   $21 = $13 >>> 3;
   $22 = ($13>>>0)<(256);
   if ($22) {
    $23 = ((($16)) + 8|0);
    $24 = HEAP32[$23>>2]|0;
    $25 = ((($16)) + 12|0);
    $26 = HEAP32[$25>>2]|0;
    $27 = $21 << 1;
    $28 = (26836 + ($27<<2)|0);
    $29 = ($24|0)==($28|0);
    if (!($29)) {
     $30 = ($24>>>0)<($3>>>0);
     if ($30) {
      _abort();
      // unreachable;
     }
     $31 = ((($24)) + 12|0);
     $32 = HEAP32[$31>>2]|0;
     $33 = ($32|0)==($16|0);
     if (!($33)) {
      _abort();
      // unreachable;
     }
    }
    $34 = ($26|0)==($24|0);
    if ($34) {
     $35 = 1 << $21;
     $36 = $35 ^ -1;
     $37 = HEAP32[6699]|0;
     $38 = $37 & $36;
     HEAP32[6699] = $38;
     $$1 = $16;$$1380 = $17;
     break;
    }
    $39 = ($26|0)==($28|0);
    if ($39) {
     $$pre440 = ((($26)) + 8|0);
     $$pre$phi441Z2D = $$pre440;
    } else {
     $40 = ($26>>>0)<($3>>>0);
     if ($40) {
      _abort();
      // unreachable;
     }
     $41 = ((($26)) + 8|0);
     $42 = HEAP32[$41>>2]|0;
     $43 = ($42|0)==($16|0);
     if ($43) {
      $$pre$phi441Z2D = $41;
     } else {
      _abort();
      // unreachable;
     }
    }
    $44 = ((($24)) + 12|0);
    HEAP32[$44>>2] = $26;
    HEAP32[$$pre$phi441Z2D>>2] = $24;
    $$1 = $16;$$1380 = $17;
    break;
   }
   $45 = ((($16)) + 24|0);
   $46 = HEAP32[$45>>2]|0;
   $47 = ((($16)) + 12|0);
   $48 = HEAP32[$47>>2]|0;
   $49 = ($48|0)==($16|0);
   do {
    if ($49) {
     $59 = ((($16)) + 16|0);
     $60 = ((($59)) + 4|0);
     $61 = HEAP32[$60>>2]|0;
     $62 = ($61|0)==(0|0);
     if ($62) {
      $63 = HEAP32[$59>>2]|0;
      $64 = ($63|0)==(0|0);
      if ($64) {
       $$3 = 0;
       break;
      } else {
       $$1385 = $63;$$1388 = $59;
      }
     } else {
      $$1385 = $61;$$1388 = $60;
     }
     while(1) {
      $65 = ((($$1385)) + 20|0);
      $66 = HEAP32[$65>>2]|0;
      $67 = ($66|0)==(0|0);
      if (!($67)) {
       $$1385 = $66;$$1388 = $65;
       continue;
      }
      $68 = ((($$1385)) + 16|0);
      $69 = HEAP32[$68>>2]|0;
      $70 = ($69|0)==(0|0);
      if ($70) {
       break;
      } else {
       $$1385 = $69;$$1388 = $68;
      }
     }
     $71 = ($$1388>>>0)<($3>>>0);
     if ($71) {
      _abort();
      // unreachable;
     } else {
      HEAP32[$$1388>>2] = 0;
      $$3 = $$1385;
      break;
     }
    } else {
     $50 = ((($16)) + 8|0);
     $51 = HEAP32[$50>>2]|0;
     $52 = ($51>>>0)<($3>>>0);
     if ($52) {
      _abort();
      // unreachable;
     }
     $53 = ((($51)) + 12|0);
     $54 = HEAP32[$53>>2]|0;
     $55 = ($54|0)==($16|0);
     if (!($55)) {
      _abort();
      // unreachable;
     }
     $56 = ((($48)) + 8|0);
     $57 = HEAP32[$56>>2]|0;
     $58 = ($57|0)==($16|0);
     if ($58) {
      HEAP32[$53>>2] = $48;
      HEAP32[$56>>2] = $51;
      $$3 = $48;
      break;
     } else {
      _abort();
      // unreachable;
     }
    }
   } while(0);
   $72 = ($46|0)==(0|0);
   if ($72) {
    $$1 = $16;$$1380 = $17;
   } else {
    $73 = ((($16)) + 28|0);
    $74 = HEAP32[$73>>2]|0;
    $75 = (27100 + ($74<<2)|0);
    $76 = HEAP32[$75>>2]|0;
    $77 = ($16|0)==($76|0);
    if ($77) {
     HEAP32[$75>>2] = $$3;
     $cond418 = ($$3|0)==(0|0);
     if ($cond418) {
      $78 = 1 << $74;
      $79 = $78 ^ -1;
      $80 = HEAP32[(26800)>>2]|0;
      $81 = $80 & $79;
      HEAP32[(26800)>>2] = $81;
      $$1 = $16;$$1380 = $17;
      break;
     }
    } else {
     $82 = HEAP32[(26812)>>2]|0;
     $83 = ($46>>>0)<($82>>>0);
     if ($83) {
      _abort();
      // unreachable;
     }
     $84 = ((($46)) + 16|0);
     $85 = HEAP32[$84>>2]|0;
     $86 = ($85|0)==($16|0);
     if ($86) {
      HEAP32[$84>>2] = $$3;
     } else {
      $87 = ((($46)) + 20|0);
      HEAP32[$87>>2] = $$3;
     }
     $88 = ($$3|0)==(0|0);
     if ($88) {
      $$1 = $16;$$1380 = $17;
      break;
     }
    }
    $89 = HEAP32[(26812)>>2]|0;
    $90 = ($$3>>>0)<($89>>>0);
    if ($90) {
     _abort();
     // unreachable;
    }
    $91 = ((($$3)) + 24|0);
    HEAP32[$91>>2] = $46;
    $92 = ((($16)) + 16|0);
    $93 = HEAP32[$92>>2]|0;
    $94 = ($93|0)==(0|0);
    do {
     if (!($94)) {
      $95 = ($93>>>0)<($89>>>0);
      if ($95) {
       _abort();
       // unreachable;
      } else {
       $96 = ((($$3)) + 16|0);
       HEAP32[$96>>2] = $93;
       $97 = ((($93)) + 24|0);
       HEAP32[$97>>2] = $$3;
       break;
      }
     }
    } while(0);
    $98 = ((($92)) + 4|0);
    $99 = HEAP32[$98>>2]|0;
    $100 = ($99|0)==(0|0);
    if ($100) {
     $$1 = $16;$$1380 = $17;
    } else {
     $101 = HEAP32[(26812)>>2]|0;
     $102 = ($99>>>0)<($101>>>0);
     if ($102) {
      _abort();
      // unreachable;
     } else {
      $103 = ((($$3)) + 20|0);
      HEAP32[$103>>2] = $99;
      $104 = ((($99)) + 24|0);
      HEAP32[$104>>2] = $$3;
      $$1 = $16;$$1380 = $17;
      break;
     }
    }
   }
  } else {
   $$1 = $2;$$1380 = $9;
  }
 } while(0);
 $113 = ($$1>>>0)<($10>>>0);
 if (!($113)) {
  _abort();
  // unreachable;
 }
 $114 = ((($10)) + 4|0);
 $115 = HEAP32[$114>>2]|0;
 $116 = $115 & 1;
 $117 = ($116|0)==(0);
 if ($117) {
  _abort();
  // unreachable;
 }
 $118 = $115 & 2;
 $119 = ($118|0)==(0);
 if ($119) {
  $120 = HEAP32[(26820)>>2]|0;
  $121 = ($10|0)==($120|0);
  if ($121) {
   $122 = HEAP32[(26808)>>2]|0;
   $123 = (($122) + ($$1380))|0;
   HEAP32[(26808)>>2] = $123;
   HEAP32[(26820)>>2] = $$1;
   $124 = $123 | 1;
   $125 = ((($$1)) + 4|0);
   HEAP32[$125>>2] = $124;
   $126 = HEAP32[(26816)>>2]|0;
   $127 = ($$1|0)==($126|0);
   if (!($127)) {
    return;
   }
   HEAP32[(26816)>>2] = 0;
   HEAP32[(26804)>>2] = 0;
   return;
  }
  $128 = HEAP32[(26816)>>2]|0;
  $129 = ($10|0)==($128|0);
  if ($129) {
   $130 = HEAP32[(26804)>>2]|0;
   $131 = (($130) + ($$1380))|0;
   HEAP32[(26804)>>2] = $131;
   HEAP32[(26816)>>2] = $$1;
   $132 = $131 | 1;
   $133 = ((($$1)) + 4|0);
   HEAP32[$133>>2] = $132;
   $134 = (($$1) + ($131)|0);
   HEAP32[$134>>2] = $131;
   return;
  }
  $135 = $115 & -8;
  $136 = (($135) + ($$1380))|0;
  $137 = $115 >>> 3;
  $138 = ($115>>>0)<(256);
  do {
   if ($138) {
    $139 = ((($10)) + 8|0);
    $140 = HEAP32[$139>>2]|0;
    $141 = ((($10)) + 12|0);
    $142 = HEAP32[$141>>2]|0;
    $143 = $137 << 1;
    $144 = (26836 + ($143<<2)|0);
    $145 = ($140|0)==($144|0);
    if (!($145)) {
     $146 = HEAP32[(26812)>>2]|0;
     $147 = ($140>>>0)<($146>>>0);
     if ($147) {
      _abort();
      // unreachable;
     }
     $148 = ((($140)) + 12|0);
     $149 = HEAP32[$148>>2]|0;
     $150 = ($149|0)==($10|0);
     if (!($150)) {
      _abort();
      // unreachable;
     }
    }
    $151 = ($142|0)==($140|0);
    if ($151) {
     $152 = 1 << $137;
     $153 = $152 ^ -1;
     $154 = HEAP32[6699]|0;
     $155 = $154 & $153;
     HEAP32[6699] = $155;
     break;
    }
    $156 = ($142|0)==($144|0);
    if ($156) {
     $$pre438 = ((($142)) + 8|0);
     $$pre$phi439Z2D = $$pre438;
    } else {
     $157 = HEAP32[(26812)>>2]|0;
     $158 = ($142>>>0)<($157>>>0);
     if ($158) {
      _abort();
      // unreachable;
     }
     $159 = ((($142)) + 8|0);
     $160 = HEAP32[$159>>2]|0;
     $161 = ($160|0)==($10|0);
     if ($161) {
      $$pre$phi439Z2D = $159;
     } else {
      _abort();
      // unreachable;
     }
    }
    $162 = ((($140)) + 12|0);
    HEAP32[$162>>2] = $142;
    HEAP32[$$pre$phi439Z2D>>2] = $140;
   } else {
    $163 = ((($10)) + 24|0);
    $164 = HEAP32[$163>>2]|0;
    $165 = ((($10)) + 12|0);
    $166 = HEAP32[$165>>2]|0;
    $167 = ($166|0)==($10|0);
    do {
     if ($167) {
      $178 = ((($10)) + 16|0);
      $179 = ((($178)) + 4|0);
      $180 = HEAP32[$179>>2]|0;
      $181 = ($180|0)==(0|0);
      if ($181) {
       $182 = HEAP32[$178>>2]|0;
       $183 = ($182|0)==(0|0);
       if ($183) {
        $$3398 = 0;
        break;
       } else {
        $$1396 = $182;$$1400 = $178;
       }
      } else {
       $$1396 = $180;$$1400 = $179;
      }
      while(1) {
       $184 = ((($$1396)) + 20|0);
       $185 = HEAP32[$184>>2]|0;
       $186 = ($185|0)==(0|0);
       if (!($186)) {
        $$1396 = $185;$$1400 = $184;
        continue;
       }
       $187 = ((($$1396)) + 16|0);
       $188 = HEAP32[$187>>2]|0;
       $189 = ($188|0)==(0|0);
       if ($189) {
        break;
       } else {
        $$1396 = $188;$$1400 = $187;
       }
      }
      $190 = HEAP32[(26812)>>2]|0;
      $191 = ($$1400>>>0)<($190>>>0);
      if ($191) {
       _abort();
       // unreachable;
      } else {
       HEAP32[$$1400>>2] = 0;
       $$3398 = $$1396;
       break;
      }
     } else {
      $168 = ((($10)) + 8|0);
      $169 = HEAP32[$168>>2]|0;
      $170 = HEAP32[(26812)>>2]|0;
      $171 = ($169>>>0)<($170>>>0);
      if ($171) {
       _abort();
       // unreachable;
      }
      $172 = ((($169)) + 12|0);
      $173 = HEAP32[$172>>2]|0;
      $174 = ($173|0)==($10|0);
      if (!($174)) {
       _abort();
       // unreachable;
      }
      $175 = ((($166)) + 8|0);
      $176 = HEAP32[$175>>2]|0;
      $177 = ($176|0)==($10|0);
      if ($177) {
       HEAP32[$172>>2] = $166;
       HEAP32[$175>>2] = $169;
       $$3398 = $166;
       break;
      } else {
       _abort();
       // unreachable;
      }
     }
    } while(0);
    $192 = ($164|0)==(0|0);
    if (!($192)) {
     $193 = ((($10)) + 28|0);
     $194 = HEAP32[$193>>2]|0;
     $195 = (27100 + ($194<<2)|0);
     $196 = HEAP32[$195>>2]|0;
     $197 = ($10|0)==($196|0);
     if ($197) {
      HEAP32[$195>>2] = $$3398;
      $cond419 = ($$3398|0)==(0|0);
      if ($cond419) {
       $198 = 1 << $194;
       $199 = $198 ^ -1;
       $200 = HEAP32[(26800)>>2]|0;
       $201 = $200 & $199;
       HEAP32[(26800)>>2] = $201;
       break;
      }
     } else {
      $202 = HEAP32[(26812)>>2]|0;
      $203 = ($164>>>0)<($202>>>0);
      if ($203) {
       _abort();
       // unreachable;
      }
      $204 = ((($164)) + 16|0);
      $205 = HEAP32[$204>>2]|0;
      $206 = ($205|0)==($10|0);
      if ($206) {
       HEAP32[$204>>2] = $$3398;
      } else {
       $207 = ((($164)) + 20|0);
       HEAP32[$207>>2] = $$3398;
      }
      $208 = ($$3398|0)==(0|0);
      if ($208) {
       break;
      }
     }
     $209 = HEAP32[(26812)>>2]|0;
     $210 = ($$3398>>>0)<($209>>>0);
     if ($210) {
      _abort();
      // unreachable;
     }
     $211 = ((($$3398)) + 24|0);
     HEAP32[$211>>2] = $164;
     $212 = ((($10)) + 16|0);
     $213 = HEAP32[$212>>2]|0;
     $214 = ($213|0)==(0|0);
     do {
      if (!($214)) {
       $215 = ($213>>>0)<($209>>>0);
       if ($215) {
        _abort();
        // unreachable;
       } else {
        $216 = ((($$3398)) + 16|0);
        HEAP32[$216>>2] = $213;
        $217 = ((($213)) + 24|0);
        HEAP32[$217>>2] = $$3398;
        break;
       }
      }
     } while(0);
     $218 = ((($212)) + 4|0);
     $219 = HEAP32[$218>>2]|0;
     $220 = ($219|0)==(0|0);
     if (!($220)) {
      $221 = HEAP32[(26812)>>2]|0;
      $222 = ($219>>>0)<($221>>>0);
      if ($222) {
       _abort();
       // unreachable;
      } else {
       $223 = ((($$3398)) + 20|0);
       HEAP32[$223>>2] = $219;
       $224 = ((($219)) + 24|0);
       HEAP32[$224>>2] = $$3398;
       break;
      }
     }
    }
   }
  } while(0);
  $225 = $136 | 1;
  $226 = ((($$1)) + 4|0);
  HEAP32[$226>>2] = $225;
  $227 = (($$1) + ($136)|0);
  HEAP32[$227>>2] = $136;
  $228 = HEAP32[(26816)>>2]|0;
  $229 = ($$1|0)==($228|0);
  if ($229) {
   HEAP32[(26804)>>2] = $136;
   return;
  } else {
   $$2 = $136;
  }
 } else {
  $230 = $115 & -2;
  HEAP32[$114>>2] = $230;
  $231 = $$1380 | 1;
  $232 = ((($$1)) + 4|0);
  HEAP32[$232>>2] = $231;
  $233 = (($$1) + ($$1380)|0);
  HEAP32[$233>>2] = $$1380;
  $$2 = $$1380;
 }
 $234 = $$2 >>> 3;
 $235 = ($$2>>>0)<(256);
 if ($235) {
  $236 = $234 << 1;
  $237 = (26836 + ($236<<2)|0);
  $238 = HEAP32[6699]|0;
  $239 = 1 << $234;
  $240 = $238 & $239;
  $241 = ($240|0)==(0);
  if ($241) {
   $242 = $238 | $239;
   HEAP32[6699] = $242;
   $$pre = ((($237)) + 8|0);
   $$0401 = $237;$$pre$phiZ2D = $$pre;
  } else {
   $243 = ((($237)) + 8|0);
   $244 = HEAP32[$243>>2]|0;
   $245 = HEAP32[(26812)>>2]|0;
   $246 = ($244>>>0)<($245>>>0);
   if ($246) {
    _abort();
    // unreachable;
   } else {
    $$0401 = $244;$$pre$phiZ2D = $243;
   }
  }
  HEAP32[$$pre$phiZ2D>>2] = $$1;
  $247 = ((($$0401)) + 12|0);
  HEAP32[$247>>2] = $$1;
  $248 = ((($$1)) + 8|0);
  HEAP32[$248>>2] = $$0401;
  $249 = ((($$1)) + 12|0);
  HEAP32[$249>>2] = $237;
  return;
 }
 $250 = $$2 >>> 8;
 $251 = ($250|0)==(0);
 if ($251) {
  $$0394 = 0;
 } else {
  $252 = ($$2>>>0)>(16777215);
  if ($252) {
   $$0394 = 31;
  } else {
   $253 = (($250) + 1048320)|0;
   $254 = $253 >>> 16;
   $255 = $254 & 8;
   $256 = $250 << $255;
   $257 = (($256) + 520192)|0;
   $258 = $257 >>> 16;
   $259 = $258 & 4;
   $260 = $259 | $255;
   $261 = $256 << $259;
   $262 = (($261) + 245760)|0;
   $263 = $262 >>> 16;
   $264 = $263 & 2;
   $265 = $260 | $264;
   $266 = (14 - ($265))|0;
   $267 = $261 << $264;
   $268 = $267 >>> 15;
   $269 = (($266) + ($268))|0;
   $270 = $269 << 1;
   $271 = (($269) + 7)|0;
   $272 = $$2 >>> $271;
   $273 = $272 & 1;
   $274 = $273 | $270;
   $$0394 = $274;
  }
 }
 $275 = (27100 + ($$0394<<2)|0);
 $276 = ((($$1)) + 28|0);
 HEAP32[$276>>2] = $$0394;
 $277 = ((($$1)) + 16|0);
 $278 = ((($$1)) + 20|0);
 HEAP32[$278>>2] = 0;
 HEAP32[$277>>2] = 0;
 $279 = HEAP32[(26800)>>2]|0;
 $280 = 1 << $$0394;
 $281 = $279 & $280;
 $282 = ($281|0)==(0);
 do {
  if ($282) {
   $283 = $279 | $280;
   HEAP32[(26800)>>2] = $283;
   HEAP32[$275>>2] = $$1;
   $284 = ((($$1)) + 24|0);
   HEAP32[$284>>2] = $275;
   $285 = ((($$1)) + 12|0);
   HEAP32[$285>>2] = $$1;
   $286 = ((($$1)) + 8|0);
   HEAP32[$286>>2] = $$1;
  } else {
   $287 = HEAP32[$275>>2]|0;
   $288 = ($$0394|0)==(31);
   $289 = $$0394 >>> 1;
   $290 = (25 - ($289))|0;
   $291 = $288 ? 0 : $290;
   $292 = $$2 << $291;
   $$0381 = $292;$$0382 = $287;
   while(1) {
    $293 = ((($$0382)) + 4|0);
    $294 = HEAP32[$293>>2]|0;
    $295 = $294 & -8;
    $296 = ($295|0)==($$2|0);
    if ($296) {
     label = 130;
     break;
    }
    $297 = $$0381 >>> 31;
    $298 = (((($$0382)) + 16|0) + ($297<<2)|0);
    $299 = $$0381 << 1;
    $300 = HEAP32[$298>>2]|0;
    $301 = ($300|0)==(0|0);
    if ($301) {
     label = 127;
     break;
    } else {
     $$0381 = $299;$$0382 = $300;
    }
   }
   if ((label|0) == 127) {
    $302 = HEAP32[(26812)>>2]|0;
    $303 = ($298>>>0)<($302>>>0);
    if ($303) {
     _abort();
     // unreachable;
    } else {
     HEAP32[$298>>2] = $$1;
     $304 = ((($$1)) + 24|0);
     HEAP32[$304>>2] = $$0382;
     $305 = ((($$1)) + 12|0);
     HEAP32[$305>>2] = $$1;
     $306 = ((($$1)) + 8|0);
     HEAP32[$306>>2] = $$1;
     break;
    }
   }
   else if ((label|0) == 130) {
    $307 = ((($$0382)) + 8|0);
    $308 = HEAP32[$307>>2]|0;
    $309 = HEAP32[(26812)>>2]|0;
    $310 = ($308>>>0)>=($309>>>0);
    $not$ = ($$0382>>>0)>=($309>>>0);
    $311 = $310 & $not$;
    if ($311) {
     $312 = ((($308)) + 12|0);
     HEAP32[$312>>2] = $$1;
     HEAP32[$307>>2] = $$1;
     $313 = ((($$1)) + 8|0);
     HEAP32[$313>>2] = $308;
     $314 = ((($$1)) + 12|0);
     HEAP32[$314>>2] = $$0382;
     $315 = ((($$1)) + 24|0);
     HEAP32[$315>>2] = 0;
     break;
    } else {
     _abort();
     // unreachable;
    }
   }
  }
 } while(0);
 $316 = HEAP32[(26828)>>2]|0;
 $317 = (($316) + -1)|0;
 HEAP32[(26828)>>2] = $317;
 $318 = ($317|0)==(0);
 if ($318) {
  $$0211$in$i = (27252);
 } else {
  return;
 }
 while(1) {
  $$0211$i = HEAP32[$$0211$in$i>>2]|0;
  $319 = ($$0211$i|0)==(0|0);
  $320 = ((($$0211$i)) + 8|0);
  if ($319) {
   break;
  } else {
   $$0211$in$i = $320;
  }
 }
 HEAP32[(26828)>>2] = -1;
 return;
}
function _realloc($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)==(0|0);
 if ($2) {
  $3 = (_malloc($1)|0);
  $$1 = $3;
  return ($$1|0);
 }
 $4 = ($1>>>0)>(4294967231);
 if ($4) {
  $5 = (___errno_location()|0);
  HEAP32[$5>>2] = 12;
  $$1 = 0;
  return ($$1|0);
 }
 $6 = ($1>>>0)<(11);
 $7 = (($1) + 11)|0;
 $8 = $7 & -8;
 $9 = $6 ? 16 : $8;
 $10 = ((($0)) + -8|0);
 $11 = (_try_realloc_chunk($10,$9)|0);
 $12 = ($11|0)==(0|0);
 if (!($12)) {
  $13 = ((($11)) + 8|0);
  $$1 = $13;
  return ($$1|0);
 }
 $14 = (_malloc($1)|0);
 $15 = ($14|0)==(0|0);
 if ($15) {
  $$1 = 0;
  return ($$1|0);
 }
 $16 = ((($0)) + -4|0);
 $17 = HEAP32[$16>>2]|0;
 $18 = $17 & -8;
 $19 = $17 & 3;
 $20 = ($19|0)==(0);
 $21 = $20 ? 8 : 4;
 $22 = (($18) - ($21))|0;
 $23 = ($22>>>0)<($1>>>0);
 $24 = $23 ? $22 : $1;
 _memcpy(($14|0),($0|0),($24|0))|0;
 _free($0);
 $$1 = $14;
 return ($$1|0);
}
function _try_realloc_chunk($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$1271 = 0, $$1274 = 0, $$2 = 0, $$3 = 0, $$pre = 0, $$pre$phiZ2D = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0;
 var $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0;
 var $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0;
 var $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0;
 var $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0;
 var $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0;
 var $98 = 0, $99 = 0, $cond = 0, $notlhs = 0, $notrhs = 0, $or$cond$not = 0, $or$cond3 = 0, $storemerge = 0, $storemerge1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = $3 & -8;
 $5 = (($0) + ($4)|0);
 $6 = HEAP32[(26812)>>2]|0;
 $7 = $3 & 3;
 $notlhs = ($0>>>0)>=($6>>>0);
 $notrhs = ($7|0)!=(1);
 $or$cond$not = $notrhs & $notlhs;
 $8 = ($0>>>0)<($5>>>0);
 $or$cond3 = $or$cond$not & $8;
 if (!($or$cond3)) {
  _abort();
  // unreachable;
 }
 $9 = ((($5)) + 4|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = $10 & 1;
 $12 = ($11|0)==(0);
 if ($12) {
  _abort();
  // unreachable;
 }
 $13 = ($7|0)==(0);
 if ($13) {
  $14 = ($1>>>0)<(256);
  if ($14) {
   $$2 = 0;
   return ($$2|0);
  }
  $15 = (($1) + 4)|0;
  $16 = ($4>>>0)<($15>>>0);
  if (!($16)) {
   $17 = (($4) - ($1))|0;
   $18 = HEAP32[(27276)>>2]|0;
   $19 = $18 << 1;
   $20 = ($17>>>0)>($19>>>0);
   if (!($20)) {
    $$2 = $0;
    return ($$2|0);
   }
  }
  $$2 = 0;
  return ($$2|0);
 }
 $21 = ($4>>>0)<($1>>>0);
 if (!($21)) {
  $22 = (($4) - ($1))|0;
  $23 = ($22>>>0)>(15);
  if (!($23)) {
   $$2 = $0;
   return ($$2|0);
  }
  $24 = (($0) + ($1)|0);
  $25 = $3 & 1;
  $26 = $25 | $1;
  $27 = $26 | 2;
  HEAP32[$2>>2] = $27;
  $28 = ((($24)) + 4|0);
  $29 = $22 | 3;
  HEAP32[$28>>2] = $29;
  $30 = (($24) + ($22)|0);
  $31 = ((($30)) + 4|0);
  $32 = HEAP32[$31>>2]|0;
  $33 = $32 | 1;
  HEAP32[$31>>2] = $33;
  _dispose_chunk($24,$22);
  $$2 = $0;
  return ($$2|0);
 }
 $34 = HEAP32[(26820)>>2]|0;
 $35 = ($5|0)==($34|0);
 if ($35) {
  $36 = HEAP32[(26808)>>2]|0;
  $37 = (($36) + ($4))|0;
  $38 = ($37>>>0)>($1>>>0);
  if (!($38)) {
   $$2 = 0;
   return ($$2|0);
  }
  $39 = (($37) - ($1))|0;
  $40 = (($0) + ($1)|0);
  $41 = $3 & 1;
  $42 = $41 | $1;
  $43 = $42 | 2;
  HEAP32[$2>>2] = $43;
  $44 = ((($40)) + 4|0);
  $45 = $39 | 1;
  HEAP32[$44>>2] = $45;
  HEAP32[(26820)>>2] = $40;
  HEAP32[(26808)>>2] = $39;
  $$2 = $0;
  return ($$2|0);
 }
 $46 = HEAP32[(26816)>>2]|0;
 $47 = ($5|0)==($46|0);
 if ($47) {
  $48 = HEAP32[(26804)>>2]|0;
  $49 = (($48) + ($4))|0;
  $50 = ($49>>>0)<($1>>>0);
  if ($50) {
   $$2 = 0;
   return ($$2|0);
  }
  $51 = (($49) - ($1))|0;
  $52 = ($51>>>0)>(15);
  if ($52) {
   $53 = (($0) + ($1)|0);
   $54 = (($53) + ($51)|0);
   $55 = $3 & 1;
   $56 = $55 | $1;
   $57 = $56 | 2;
   HEAP32[$2>>2] = $57;
   $58 = ((($53)) + 4|0);
   $59 = $51 | 1;
   HEAP32[$58>>2] = $59;
   HEAP32[$54>>2] = $51;
   $60 = ((($54)) + 4|0);
   $61 = HEAP32[$60>>2]|0;
   $62 = $61 & -2;
   HEAP32[$60>>2] = $62;
   $storemerge = $53;$storemerge1 = $51;
  } else {
   $63 = $3 & 1;
   $64 = $63 | $49;
   $65 = $64 | 2;
   HEAP32[$2>>2] = $65;
   $66 = (($0) + ($49)|0);
   $67 = ((($66)) + 4|0);
   $68 = HEAP32[$67>>2]|0;
   $69 = $68 | 1;
   HEAP32[$67>>2] = $69;
   $storemerge = 0;$storemerge1 = 0;
  }
  HEAP32[(26804)>>2] = $storemerge1;
  HEAP32[(26816)>>2] = $storemerge;
  $$2 = $0;
  return ($$2|0);
 }
 $70 = $10 & 2;
 $71 = ($70|0)==(0);
 if (!($71)) {
  $$2 = 0;
  return ($$2|0);
 }
 $72 = $10 & -8;
 $73 = (($72) + ($4))|0;
 $74 = ($73>>>0)<($1>>>0);
 if ($74) {
  $$2 = 0;
  return ($$2|0);
 }
 $75 = (($73) - ($1))|0;
 $76 = $10 >>> 3;
 $77 = ($10>>>0)<(256);
 do {
  if ($77) {
   $78 = ((($5)) + 8|0);
   $79 = HEAP32[$78>>2]|0;
   $80 = ((($5)) + 12|0);
   $81 = HEAP32[$80>>2]|0;
   $82 = $76 << 1;
   $83 = (26836 + ($82<<2)|0);
   $84 = ($79|0)==($83|0);
   if (!($84)) {
    $85 = ($79>>>0)<($6>>>0);
    if ($85) {
     _abort();
     // unreachable;
    }
    $86 = ((($79)) + 12|0);
    $87 = HEAP32[$86>>2]|0;
    $88 = ($87|0)==($5|0);
    if (!($88)) {
     _abort();
     // unreachable;
    }
   }
   $89 = ($81|0)==($79|0);
   if ($89) {
    $90 = 1 << $76;
    $91 = $90 ^ -1;
    $92 = HEAP32[6699]|0;
    $93 = $92 & $91;
    HEAP32[6699] = $93;
    break;
   }
   $94 = ($81|0)==($83|0);
   if ($94) {
    $$pre = ((($81)) + 8|0);
    $$pre$phiZ2D = $$pre;
   } else {
    $95 = ($81>>>0)<($6>>>0);
    if ($95) {
     _abort();
     // unreachable;
    }
    $96 = ((($81)) + 8|0);
    $97 = HEAP32[$96>>2]|0;
    $98 = ($97|0)==($5|0);
    if ($98) {
     $$pre$phiZ2D = $96;
    } else {
     _abort();
     // unreachable;
    }
   }
   $99 = ((($79)) + 12|0);
   HEAP32[$99>>2] = $81;
   HEAP32[$$pre$phiZ2D>>2] = $79;
  } else {
   $100 = ((($5)) + 24|0);
   $101 = HEAP32[$100>>2]|0;
   $102 = ((($5)) + 12|0);
   $103 = HEAP32[$102>>2]|0;
   $104 = ($103|0)==($5|0);
   do {
    if ($104) {
     $114 = ((($5)) + 16|0);
     $115 = ((($114)) + 4|0);
     $116 = HEAP32[$115>>2]|0;
     $117 = ($116|0)==(0|0);
     if ($117) {
      $118 = HEAP32[$114>>2]|0;
      $119 = ($118|0)==(0|0);
      if ($119) {
       $$3 = 0;
       break;
      } else {
       $$1271 = $118;$$1274 = $114;
      }
     } else {
      $$1271 = $116;$$1274 = $115;
     }
     while(1) {
      $120 = ((($$1271)) + 20|0);
      $121 = HEAP32[$120>>2]|0;
      $122 = ($121|0)==(0|0);
      if (!($122)) {
       $$1271 = $121;$$1274 = $120;
       continue;
      }
      $123 = ((($$1271)) + 16|0);
      $124 = HEAP32[$123>>2]|0;
      $125 = ($124|0)==(0|0);
      if ($125) {
       break;
      } else {
       $$1271 = $124;$$1274 = $123;
      }
     }
     $126 = ($$1274>>>0)<($6>>>0);
     if ($126) {
      _abort();
      // unreachable;
     } else {
      HEAP32[$$1274>>2] = 0;
      $$3 = $$1271;
      break;
     }
    } else {
     $105 = ((($5)) + 8|0);
     $106 = HEAP32[$105>>2]|0;
     $107 = ($106>>>0)<($6>>>0);
     if ($107) {
      _abort();
      // unreachable;
     }
     $108 = ((($106)) + 12|0);
     $109 = HEAP32[$108>>2]|0;
     $110 = ($109|0)==($5|0);
     if (!($110)) {
      _abort();
      // unreachable;
     }
     $111 = ((($103)) + 8|0);
     $112 = HEAP32[$111>>2]|0;
     $113 = ($112|0)==($5|0);
     if ($113) {
      HEAP32[$108>>2] = $103;
      HEAP32[$111>>2] = $106;
      $$3 = $103;
      break;
     } else {
      _abort();
      // unreachable;
     }
    }
   } while(0);
   $127 = ($101|0)==(0|0);
   if (!($127)) {
    $128 = ((($5)) + 28|0);
    $129 = HEAP32[$128>>2]|0;
    $130 = (27100 + ($129<<2)|0);
    $131 = HEAP32[$130>>2]|0;
    $132 = ($5|0)==($131|0);
    if ($132) {
     HEAP32[$130>>2] = $$3;
     $cond = ($$3|0)==(0|0);
     if ($cond) {
      $133 = 1 << $129;
      $134 = $133 ^ -1;
      $135 = HEAP32[(26800)>>2]|0;
      $136 = $135 & $134;
      HEAP32[(26800)>>2] = $136;
      break;
     }
    } else {
     $137 = HEAP32[(26812)>>2]|0;
     $138 = ($101>>>0)<($137>>>0);
     if ($138) {
      _abort();
      // unreachable;
     }
     $139 = ((($101)) + 16|0);
     $140 = HEAP32[$139>>2]|0;
     $141 = ($140|0)==($5|0);
     if ($141) {
      HEAP32[$139>>2] = $$3;
     } else {
      $142 = ((($101)) + 20|0);
      HEAP32[$142>>2] = $$3;
     }
     $143 = ($$3|0)==(0|0);
     if ($143) {
      break;
     }
    }
    $144 = HEAP32[(26812)>>2]|0;
    $145 = ($$3>>>0)<($144>>>0);
    if ($145) {
     _abort();
     // unreachable;
    }
    $146 = ((($$3)) + 24|0);
    HEAP32[$146>>2] = $101;
    $147 = ((($5)) + 16|0);
    $148 = HEAP32[$147>>2]|0;
    $149 = ($148|0)==(0|0);
    do {
     if (!($149)) {
      $150 = ($148>>>0)<($144>>>0);
      if ($150) {
       _abort();
       // unreachable;
      } else {
       $151 = ((($$3)) + 16|0);
       HEAP32[$151>>2] = $148;
       $152 = ((($148)) + 24|0);
       HEAP32[$152>>2] = $$3;
       break;
      }
     }
    } while(0);
    $153 = ((($147)) + 4|0);
    $154 = HEAP32[$153>>2]|0;
    $155 = ($154|0)==(0|0);
    if (!($155)) {
     $156 = HEAP32[(26812)>>2]|0;
     $157 = ($154>>>0)<($156>>>0);
     if ($157) {
      _abort();
      // unreachable;
     } else {
      $158 = ((($$3)) + 20|0);
      HEAP32[$158>>2] = $154;
      $159 = ((($154)) + 24|0);
      HEAP32[$159>>2] = $$3;
      break;
     }
    }
   }
  }
 } while(0);
 $160 = ($75>>>0)<(16);
 if ($160) {
  $161 = $3 & 1;
  $162 = $73 | $161;
  $163 = $162 | 2;
  HEAP32[$2>>2] = $163;
  $164 = (($0) + ($73)|0);
  $165 = ((($164)) + 4|0);
  $166 = HEAP32[$165>>2]|0;
  $167 = $166 | 1;
  HEAP32[$165>>2] = $167;
  $$2 = $0;
  return ($$2|0);
 } else {
  $168 = (($0) + ($1)|0);
  $169 = $3 & 1;
  $170 = $169 | $1;
  $171 = $170 | 2;
  HEAP32[$2>>2] = $171;
  $172 = ((($168)) + 4|0);
  $173 = $75 | 3;
  HEAP32[$172>>2] = $173;
  $174 = (($168) + ($75)|0);
  $175 = ((($174)) + 4|0);
  $176 = HEAP32[$175>>2]|0;
  $177 = $176 | 1;
  HEAP32[$175>>2] = $177;
  _dispose_chunk($168,$75);
  $$2 = $0;
  return ($$2|0);
 }
 return (0)|0;
}
function _dispose_chunk($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0417 = 0, $$0418 = 0, $$0429 = 0, $$0436 = 0, $$1 = 0, $$1416 = 0, $$1424 = 0, $$1427 = 0, $$1431 = 0, $$1435 = 0, $$2 = 0, $$3 = 0, $$3433 = 0, $$pre = 0, $$pre$phi22Z2D = 0, $$pre$phi24Z2D = 0, $$pre$phiZ2D = 0, $$pre21 = 0, $$pre23 = 0, $10 = 0;
 var $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0;
 var $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0;
 var $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0;
 var $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0;
 var $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0;
 var $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0;
 var $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0;
 var $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0;
 var $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0;
 var $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0;
 var $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0;
 var $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;
 var $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0;
 var $96 = 0, $97 = 0, $98 = 0, $99 = 0, $cond = 0, $cond16 = 0, $not$ = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (($0) + ($1)|0);
 $3 = ((($0)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = $4 & 1;
 $6 = ($5|0)==(0);
 do {
  if ($6) {
   $7 = HEAP32[$0>>2]|0;
   $8 = $4 & 3;
   $9 = ($8|0)==(0);
   if ($9) {
    return;
   }
   $10 = (0 - ($7))|0;
   $11 = (($0) + ($10)|0);
   $12 = (($7) + ($1))|0;
   $13 = HEAP32[(26812)>>2]|0;
   $14 = ($11>>>0)<($13>>>0);
   if ($14) {
    _abort();
    // unreachable;
   }
   $15 = HEAP32[(26816)>>2]|0;
   $16 = ($11|0)==($15|0);
   if ($16) {
    $101 = ((($2)) + 4|0);
    $102 = HEAP32[$101>>2]|0;
    $103 = $102 & 3;
    $104 = ($103|0)==(3);
    if (!($104)) {
     $$1 = $11;$$1416 = $12;
     break;
    }
    HEAP32[(26804)>>2] = $12;
    $105 = $102 & -2;
    HEAP32[$101>>2] = $105;
    $106 = $12 | 1;
    $107 = ((($11)) + 4|0);
    HEAP32[$107>>2] = $106;
    $108 = (($11) + ($12)|0);
    HEAP32[$108>>2] = $12;
    return;
   }
   $17 = $7 >>> 3;
   $18 = ($7>>>0)<(256);
   if ($18) {
    $19 = ((($11)) + 8|0);
    $20 = HEAP32[$19>>2]|0;
    $21 = ((($11)) + 12|0);
    $22 = HEAP32[$21>>2]|0;
    $23 = $17 << 1;
    $24 = (26836 + ($23<<2)|0);
    $25 = ($20|0)==($24|0);
    if (!($25)) {
     $26 = ($20>>>0)<($13>>>0);
     if ($26) {
      _abort();
      // unreachable;
     }
     $27 = ((($20)) + 12|0);
     $28 = HEAP32[$27>>2]|0;
     $29 = ($28|0)==($11|0);
     if (!($29)) {
      _abort();
      // unreachable;
     }
    }
    $30 = ($22|0)==($20|0);
    if ($30) {
     $31 = 1 << $17;
     $32 = $31 ^ -1;
     $33 = HEAP32[6699]|0;
     $34 = $33 & $32;
     HEAP32[6699] = $34;
     $$1 = $11;$$1416 = $12;
     break;
    }
    $35 = ($22|0)==($24|0);
    if ($35) {
     $$pre23 = ((($22)) + 8|0);
     $$pre$phi24Z2D = $$pre23;
    } else {
     $36 = ($22>>>0)<($13>>>0);
     if ($36) {
      _abort();
      // unreachable;
     }
     $37 = ((($22)) + 8|0);
     $38 = HEAP32[$37>>2]|0;
     $39 = ($38|0)==($11|0);
     if ($39) {
      $$pre$phi24Z2D = $37;
     } else {
      _abort();
      // unreachable;
     }
    }
    $40 = ((($20)) + 12|0);
    HEAP32[$40>>2] = $22;
    HEAP32[$$pre$phi24Z2D>>2] = $20;
    $$1 = $11;$$1416 = $12;
    break;
   }
   $41 = ((($11)) + 24|0);
   $42 = HEAP32[$41>>2]|0;
   $43 = ((($11)) + 12|0);
   $44 = HEAP32[$43>>2]|0;
   $45 = ($44|0)==($11|0);
   do {
    if ($45) {
     $55 = ((($11)) + 16|0);
     $56 = ((($55)) + 4|0);
     $57 = HEAP32[$56>>2]|0;
     $58 = ($57|0)==(0|0);
     if ($58) {
      $59 = HEAP32[$55>>2]|0;
      $60 = ($59|0)==(0|0);
      if ($60) {
       $$3 = 0;
       break;
      } else {
       $$1424 = $59;$$1427 = $55;
      }
     } else {
      $$1424 = $57;$$1427 = $56;
     }
     while(1) {
      $61 = ((($$1424)) + 20|0);
      $62 = HEAP32[$61>>2]|0;
      $63 = ($62|0)==(0|0);
      if (!($63)) {
       $$1424 = $62;$$1427 = $61;
       continue;
      }
      $64 = ((($$1424)) + 16|0);
      $65 = HEAP32[$64>>2]|0;
      $66 = ($65|0)==(0|0);
      if ($66) {
       break;
      } else {
       $$1424 = $65;$$1427 = $64;
      }
     }
     $67 = ($$1427>>>0)<($13>>>0);
     if ($67) {
      _abort();
      // unreachable;
     } else {
      HEAP32[$$1427>>2] = 0;
      $$3 = $$1424;
      break;
     }
    } else {
     $46 = ((($11)) + 8|0);
     $47 = HEAP32[$46>>2]|0;
     $48 = ($47>>>0)<($13>>>0);
     if ($48) {
      _abort();
      // unreachable;
     }
     $49 = ((($47)) + 12|0);
     $50 = HEAP32[$49>>2]|0;
     $51 = ($50|0)==($11|0);
     if (!($51)) {
      _abort();
      // unreachable;
     }
     $52 = ((($44)) + 8|0);
     $53 = HEAP32[$52>>2]|0;
     $54 = ($53|0)==($11|0);
     if ($54) {
      HEAP32[$49>>2] = $44;
      HEAP32[$52>>2] = $47;
      $$3 = $44;
      break;
     } else {
      _abort();
      // unreachable;
     }
    }
   } while(0);
   $68 = ($42|0)==(0|0);
   if ($68) {
    $$1 = $11;$$1416 = $12;
   } else {
    $69 = ((($11)) + 28|0);
    $70 = HEAP32[$69>>2]|0;
    $71 = (27100 + ($70<<2)|0);
    $72 = HEAP32[$71>>2]|0;
    $73 = ($11|0)==($72|0);
    if ($73) {
     HEAP32[$71>>2] = $$3;
     $cond = ($$3|0)==(0|0);
     if ($cond) {
      $74 = 1 << $70;
      $75 = $74 ^ -1;
      $76 = HEAP32[(26800)>>2]|0;
      $77 = $76 & $75;
      HEAP32[(26800)>>2] = $77;
      $$1 = $11;$$1416 = $12;
      break;
     }
    } else {
     $78 = HEAP32[(26812)>>2]|0;
     $79 = ($42>>>0)<($78>>>0);
     if ($79) {
      _abort();
      // unreachable;
     }
     $80 = ((($42)) + 16|0);
     $81 = HEAP32[$80>>2]|0;
     $82 = ($81|0)==($11|0);
     if ($82) {
      HEAP32[$80>>2] = $$3;
     } else {
      $83 = ((($42)) + 20|0);
      HEAP32[$83>>2] = $$3;
     }
     $84 = ($$3|0)==(0|0);
     if ($84) {
      $$1 = $11;$$1416 = $12;
      break;
     }
    }
    $85 = HEAP32[(26812)>>2]|0;
    $86 = ($$3>>>0)<($85>>>0);
    if ($86) {
     _abort();
     // unreachable;
    }
    $87 = ((($$3)) + 24|0);
    HEAP32[$87>>2] = $42;
    $88 = ((($11)) + 16|0);
    $89 = HEAP32[$88>>2]|0;
    $90 = ($89|0)==(0|0);
    do {
     if (!($90)) {
      $91 = ($89>>>0)<($85>>>0);
      if ($91) {
       _abort();
       // unreachable;
      } else {
       $92 = ((($$3)) + 16|0);
       HEAP32[$92>>2] = $89;
       $93 = ((($89)) + 24|0);
       HEAP32[$93>>2] = $$3;
       break;
      }
     }
    } while(0);
    $94 = ((($88)) + 4|0);
    $95 = HEAP32[$94>>2]|0;
    $96 = ($95|0)==(0|0);
    if ($96) {
     $$1 = $11;$$1416 = $12;
    } else {
     $97 = HEAP32[(26812)>>2]|0;
     $98 = ($95>>>0)<($97>>>0);
     if ($98) {
      _abort();
      // unreachable;
     } else {
      $99 = ((($$3)) + 20|0);
      HEAP32[$99>>2] = $95;
      $100 = ((($95)) + 24|0);
      HEAP32[$100>>2] = $$3;
      $$1 = $11;$$1416 = $12;
      break;
     }
    }
   }
  } else {
   $$1 = $0;$$1416 = $1;
  }
 } while(0);
 $109 = HEAP32[(26812)>>2]|0;
 $110 = ($2>>>0)<($109>>>0);
 if ($110) {
  _abort();
  // unreachable;
 }
 $111 = ((($2)) + 4|0);
 $112 = HEAP32[$111>>2]|0;
 $113 = $112 & 2;
 $114 = ($113|0)==(0);
 if ($114) {
  $115 = HEAP32[(26820)>>2]|0;
  $116 = ($2|0)==($115|0);
  if ($116) {
   $117 = HEAP32[(26808)>>2]|0;
   $118 = (($117) + ($$1416))|0;
   HEAP32[(26808)>>2] = $118;
   HEAP32[(26820)>>2] = $$1;
   $119 = $118 | 1;
   $120 = ((($$1)) + 4|0);
   HEAP32[$120>>2] = $119;
   $121 = HEAP32[(26816)>>2]|0;
   $122 = ($$1|0)==($121|0);
   if (!($122)) {
    return;
   }
   HEAP32[(26816)>>2] = 0;
   HEAP32[(26804)>>2] = 0;
   return;
  }
  $123 = HEAP32[(26816)>>2]|0;
  $124 = ($2|0)==($123|0);
  if ($124) {
   $125 = HEAP32[(26804)>>2]|0;
   $126 = (($125) + ($$1416))|0;
   HEAP32[(26804)>>2] = $126;
   HEAP32[(26816)>>2] = $$1;
   $127 = $126 | 1;
   $128 = ((($$1)) + 4|0);
   HEAP32[$128>>2] = $127;
   $129 = (($$1) + ($126)|0);
   HEAP32[$129>>2] = $126;
   return;
  }
  $130 = $112 & -8;
  $131 = (($130) + ($$1416))|0;
  $132 = $112 >>> 3;
  $133 = ($112>>>0)<(256);
  do {
   if ($133) {
    $134 = ((($2)) + 8|0);
    $135 = HEAP32[$134>>2]|0;
    $136 = ((($2)) + 12|0);
    $137 = HEAP32[$136>>2]|0;
    $138 = $132 << 1;
    $139 = (26836 + ($138<<2)|0);
    $140 = ($135|0)==($139|0);
    if (!($140)) {
     $141 = ($135>>>0)<($109>>>0);
     if ($141) {
      _abort();
      // unreachable;
     }
     $142 = ((($135)) + 12|0);
     $143 = HEAP32[$142>>2]|0;
     $144 = ($143|0)==($2|0);
     if (!($144)) {
      _abort();
      // unreachable;
     }
    }
    $145 = ($137|0)==($135|0);
    if ($145) {
     $146 = 1 << $132;
     $147 = $146 ^ -1;
     $148 = HEAP32[6699]|0;
     $149 = $148 & $147;
     HEAP32[6699] = $149;
     break;
    }
    $150 = ($137|0)==($139|0);
    if ($150) {
     $$pre21 = ((($137)) + 8|0);
     $$pre$phi22Z2D = $$pre21;
    } else {
     $151 = ($137>>>0)<($109>>>0);
     if ($151) {
      _abort();
      // unreachable;
     }
     $152 = ((($137)) + 8|0);
     $153 = HEAP32[$152>>2]|0;
     $154 = ($153|0)==($2|0);
     if ($154) {
      $$pre$phi22Z2D = $152;
     } else {
      _abort();
      // unreachable;
     }
    }
    $155 = ((($135)) + 12|0);
    HEAP32[$155>>2] = $137;
    HEAP32[$$pre$phi22Z2D>>2] = $135;
   } else {
    $156 = ((($2)) + 24|0);
    $157 = HEAP32[$156>>2]|0;
    $158 = ((($2)) + 12|0);
    $159 = HEAP32[$158>>2]|0;
    $160 = ($159|0)==($2|0);
    do {
     if ($160) {
      $170 = ((($2)) + 16|0);
      $171 = ((($170)) + 4|0);
      $172 = HEAP32[$171>>2]|0;
      $173 = ($172|0)==(0|0);
      if ($173) {
       $174 = HEAP32[$170>>2]|0;
       $175 = ($174|0)==(0|0);
       if ($175) {
        $$3433 = 0;
        break;
       } else {
        $$1431 = $174;$$1435 = $170;
       }
      } else {
       $$1431 = $172;$$1435 = $171;
      }
      while(1) {
       $176 = ((($$1431)) + 20|0);
       $177 = HEAP32[$176>>2]|0;
       $178 = ($177|0)==(0|0);
       if (!($178)) {
        $$1431 = $177;$$1435 = $176;
        continue;
       }
       $179 = ((($$1431)) + 16|0);
       $180 = HEAP32[$179>>2]|0;
       $181 = ($180|0)==(0|0);
       if ($181) {
        break;
       } else {
        $$1431 = $180;$$1435 = $179;
       }
      }
      $182 = ($$1435>>>0)<($109>>>0);
      if ($182) {
       _abort();
       // unreachable;
      } else {
       HEAP32[$$1435>>2] = 0;
       $$3433 = $$1431;
       break;
      }
     } else {
      $161 = ((($2)) + 8|0);
      $162 = HEAP32[$161>>2]|0;
      $163 = ($162>>>0)<($109>>>0);
      if ($163) {
       _abort();
       // unreachable;
      }
      $164 = ((($162)) + 12|0);
      $165 = HEAP32[$164>>2]|0;
      $166 = ($165|0)==($2|0);
      if (!($166)) {
       _abort();
       // unreachable;
      }
      $167 = ((($159)) + 8|0);
      $168 = HEAP32[$167>>2]|0;
      $169 = ($168|0)==($2|0);
      if ($169) {
       HEAP32[$164>>2] = $159;
       HEAP32[$167>>2] = $162;
       $$3433 = $159;
       break;
      } else {
       _abort();
       // unreachable;
      }
     }
    } while(0);
    $183 = ($157|0)==(0|0);
    if (!($183)) {
     $184 = ((($2)) + 28|0);
     $185 = HEAP32[$184>>2]|0;
     $186 = (27100 + ($185<<2)|0);
     $187 = HEAP32[$186>>2]|0;
     $188 = ($2|0)==($187|0);
     if ($188) {
      HEAP32[$186>>2] = $$3433;
      $cond16 = ($$3433|0)==(0|0);
      if ($cond16) {
       $189 = 1 << $185;
       $190 = $189 ^ -1;
       $191 = HEAP32[(26800)>>2]|0;
       $192 = $191 & $190;
       HEAP32[(26800)>>2] = $192;
       break;
      }
     } else {
      $193 = HEAP32[(26812)>>2]|0;
      $194 = ($157>>>0)<($193>>>0);
      if ($194) {
       _abort();
       // unreachable;
      }
      $195 = ((($157)) + 16|0);
      $196 = HEAP32[$195>>2]|0;
      $197 = ($196|0)==($2|0);
      if ($197) {
       HEAP32[$195>>2] = $$3433;
      } else {
       $198 = ((($157)) + 20|0);
       HEAP32[$198>>2] = $$3433;
      }
      $199 = ($$3433|0)==(0|0);
      if ($199) {
       break;
      }
     }
     $200 = HEAP32[(26812)>>2]|0;
     $201 = ($$3433>>>0)<($200>>>0);
     if ($201) {
      _abort();
      // unreachable;
     }
     $202 = ((($$3433)) + 24|0);
     HEAP32[$202>>2] = $157;
     $203 = ((($2)) + 16|0);
     $204 = HEAP32[$203>>2]|0;
     $205 = ($204|0)==(0|0);
     do {
      if (!($205)) {
       $206 = ($204>>>0)<($200>>>0);
       if ($206) {
        _abort();
        // unreachable;
       } else {
        $207 = ((($$3433)) + 16|0);
        HEAP32[$207>>2] = $204;
        $208 = ((($204)) + 24|0);
        HEAP32[$208>>2] = $$3433;
        break;
       }
      }
     } while(0);
     $209 = ((($203)) + 4|0);
     $210 = HEAP32[$209>>2]|0;
     $211 = ($210|0)==(0|0);
     if (!($211)) {
      $212 = HEAP32[(26812)>>2]|0;
      $213 = ($210>>>0)<($212>>>0);
      if ($213) {
       _abort();
       // unreachable;
      } else {
       $214 = ((($$3433)) + 20|0);
       HEAP32[$214>>2] = $210;
       $215 = ((($210)) + 24|0);
       HEAP32[$215>>2] = $$3433;
       break;
      }
     }
    }
   }
  } while(0);
  $216 = $131 | 1;
  $217 = ((($$1)) + 4|0);
  HEAP32[$217>>2] = $216;
  $218 = (($$1) + ($131)|0);
  HEAP32[$218>>2] = $131;
  $219 = HEAP32[(26816)>>2]|0;
  $220 = ($$1|0)==($219|0);
  if ($220) {
   HEAP32[(26804)>>2] = $131;
   return;
  } else {
   $$2 = $131;
  }
 } else {
  $221 = $112 & -2;
  HEAP32[$111>>2] = $221;
  $222 = $$1416 | 1;
  $223 = ((($$1)) + 4|0);
  HEAP32[$223>>2] = $222;
  $224 = (($$1) + ($$1416)|0);
  HEAP32[$224>>2] = $$1416;
  $$2 = $$1416;
 }
 $225 = $$2 >>> 3;
 $226 = ($$2>>>0)<(256);
 if ($226) {
  $227 = $225 << 1;
  $228 = (26836 + ($227<<2)|0);
  $229 = HEAP32[6699]|0;
  $230 = 1 << $225;
  $231 = $229 & $230;
  $232 = ($231|0)==(0);
  if ($232) {
   $233 = $229 | $230;
   HEAP32[6699] = $233;
   $$pre = ((($228)) + 8|0);
   $$0436 = $228;$$pre$phiZ2D = $$pre;
  } else {
   $234 = ((($228)) + 8|0);
   $235 = HEAP32[$234>>2]|0;
   $236 = HEAP32[(26812)>>2]|0;
   $237 = ($235>>>0)<($236>>>0);
   if ($237) {
    _abort();
    // unreachable;
   } else {
    $$0436 = $235;$$pre$phiZ2D = $234;
   }
  }
  HEAP32[$$pre$phiZ2D>>2] = $$1;
  $238 = ((($$0436)) + 12|0);
  HEAP32[$238>>2] = $$1;
  $239 = ((($$1)) + 8|0);
  HEAP32[$239>>2] = $$0436;
  $240 = ((($$1)) + 12|0);
  HEAP32[$240>>2] = $228;
  return;
 }
 $241 = $$2 >>> 8;
 $242 = ($241|0)==(0);
 if ($242) {
  $$0429 = 0;
 } else {
  $243 = ($$2>>>0)>(16777215);
  if ($243) {
   $$0429 = 31;
  } else {
   $244 = (($241) + 1048320)|0;
   $245 = $244 >>> 16;
   $246 = $245 & 8;
   $247 = $241 << $246;
   $248 = (($247) + 520192)|0;
   $249 = $248 >>> 16;
   $250 = $249 & 4;
   $251 = $250 | $246;
   $252 = $247 << $250;
   $253 = (($252) + 245760)|0;
   $254 = $253 >>> 16;
   $255 = $254 & 2;
   $256 = $251 | $255;
   $257 = (14 - ($256))|0;
   $258 = $252 << $255;
   $259 = $258 >>> 15;
   $260 = (($257) + ($259))|0;
   $261 = $260 << 1;
   $262 = (($260) + 7)|0;
   $263 = $$2 >>> $262;
   $264 = $263 & 1;
   $265 = $264 | $261;
   $$0429 = $265;
  }
 }
 $266 = (27100 + ($$0429<<2)|0);
 $267 = ((($$1)) + 28|0);
 HEAP32[$267>>2] = $$0429;
 $268 = ((($$1)) + 16|0);
 $269 = ((($$1)) + 20|0);
 HEAP32[$269>>2] = 0;
 HEAP32[$268>>2] = 0;
 $270 = HEAP32[(26800)>>2]|0;
 $271 = 1 << $$0429;
 $272 = $270 & $271;
 $273 = ($272|0)==(0);
 if ($273) {
  $274 = $270 | $271;
  HEAP32[(26800)>>2] = $274;
  HEAP32[$266>>2] = $$1;
  $275 = ((($$1)) + 24|0);
  HEAP32[$275>>2] = $266;
  $276 = ((($$1)) + 12|0);
  HEAP32[$276>>2] = $$1;
  $277 = ((($$1)) + 8|0);
  HEAP32[$277>>2] = $$1;
  return;
 }
 $278 = HEAP32[$266>>2]|0;
 $279 = ($$0429|0)==(31);
 $280 = $$0429 >>> 1;
 $281 = (25 - ($280))|0;
 $282 = $279 ? 0 : $281;
 $283 = $$2 << $282;
 $$0417 = $283;$$0418 = $278;
 while(1) {
  $284 = ((($$0418)) + 4|0);
  $285 = HEAP32[$284>>2]|0;
  $286 = $285 & -8;
  $287 = ($286|0)==($$2|0);
  if ($287) {
   label = 127;
   break;
  }
  $288 = $$0417 >>> 31;
  $289 = (((($$0418)) + 16|0) + ($288<<2)|0);
  $290 = $$0417 << 1;
  $291 = HEAP32[$289>>2]|0;
  $292 = ($291|0)==(0|0);
  if ($292) {
   label = 124;
   break;
  } else {
   $$0417 = $290;$$0418 = $291;
  }
 }
 if ((label|0) == 124) {
  $293 = HEAP32[(26812)>>2]|0;
  $294 = ($289>>>0)<($293>>>0);
  if ($294) {
   _abort();
   // unreachable;
  }
  HEAP32[$289>>2] = $$1;
  $295 = ((($$1)) + 24|0);
  HEAP32[$295>>2] = $$0418;
  $296 = ((($$1)) + 12|0);
  HEAP32[$296>>2] = $$1;
  $297 = ((($$1)) + 8|0);
  HEAP32[$297>>2] = $$1;
  return;
 }
 else if ((label|0) == 127) {
  $298 = ((($$0418)) + 8|0);
  $299 = HEAP32[$298>>2]|0;
  $300 = HEAP32[(26812)>>2]|0;
  $301 = ($299>>>0)>=($300>>>0);
  $not$ = ($$0418>>>0)>=($300>>>0);
  $302 = $301 & $not$;
  if (!($302)) {
   _abort();
   // unreachable;
  }
  $303 = ((($299)) + 12|0);
  HEAP32[$303>>2] = $$1;
  HEAP32[$298>>2] = $$1;
  $304 = ((($$1)) + 8|0);
  HEAP32[$304>>2] = $299;
  $305 = ((($$1)) + 12|0);
  HEAP32[$305>>2] = $$0418;
  $306 = ((($$1)) + 24|0);
  HEAP32[$306>>2] = 0;
  return;
 }
}
function runPostSets() {
}
function _i64Subtract(a, b, c, d) {
    a = a|0; b = b|0; c = c|0; d = d|0;
    var l = 0, h = 0;
    l = (a - c)>>>0;
    h = (b - d)>>>0;
    h = (b - d - (((c>>>0) > (a>>>0))|0))>>>0; // Borrow one from high word to low word on underflow.
    return ((tempRet0 = h,l|0)|0);
}
function _i64Add(a, b, c, d) {
    /*
      x = a + b*2^32
      y = c + d*2^32
      result = l + h*2^32
    */
    a = a|0; b = b|0; c = c|0; d = d|0;
    var l = 0, h = 0;
    l = (a + c)>>>0;
    h = (b + d + (((l>>>0) < (a>>>0))|0))>>>0; // Add carry from low word to high word on overflow.
    return ((tempRet0 = h,l|0)|0);
}
function _pthread_mutex_lock(x) {
    x = x | 0;
    return 0;
}
function _bitshift64Ashr(low, high, bits) {
    low = low|0; high = high|0; bits = bits|0;
    var ander = 0;
    if ((bits|0) < 32) {
      ander = ((1 << bits) - 1)|0;
      tempRet0 = high >> bits;
      return (low >>> bits) | ((high&ander) << (32 - bits));
    }
    tempRet0 = (high|0) < 0 ? -1 : 0;
    return (high >> (bits - 32))|0;
}
function _bitshift64Lshr(low, high, bits) {
    low = low|0; high = high|0; bits = bits|0;
    var ander = 0;
    if ((bits|0) < 32) {
      ander = ((1 << bits) - 1)|0;
      tempRet0 = high >>> bits;
      return (low >>> bits) | ((high&ander) << (32 - bits));
    }
    tempRet0 = 0;
    return (high >>> (bits - 32))|0;
}
function _pthread_mutex_unlock(x) {
    x = x | 0;
    return 0;
}
function _memcpy(dest, src, num) {
    dest = dest|0; src = src|0; num = num|0;
    var ret = 0;
    if ((num|0) >= 4096) return _emscripten_memcpy_big(dest|0, src|0, num|0)|0;
    ret = dest|0;
    if ((dest&3) == (src&3)) {
      while (dest & 3) {
        if ((num|0) == 0) return ret|0;
        HEAP8[((dest)>>0)]=((HEAP8[((src)>>0)])|0);
        dest = (dest+1)|0;
        src = (src+1)|0;
        num = (num-1)|0;
      }
      while ((num|0) >= 4) {
        HEAP32[((dest)>>2)]=((HEAP32[((src)>>2)])|0);
        dest = (dest+4)|0;
        src = (src+4)|0;
        num = (num-4)|0;
      }
    }
    while ((num|0) > 0) {
      HEAP8[((dest)>>0)]=((HEAP8[((src)>>0)])|0);
      dest = (dest+1)|0;
      src = (src+1)|0;
      num = (num-1)|0;
    }
    return ret|0;
}
function _sbrk(increment) {
    increment = increment|0;
    var oldDynamicTop = 0;
    var oldDynamicTopOnChange = 0;
    var newDynamicTop = 0;
    var totalMemory = 0;
    increment = ((increment + 15) & -16)|0;
    oldDynamicTop = HEAP32[DYNAMICTOP_PTR>>2]|0;
    newDynamicTop = oldDynamicTop + increment | 0;

    if (((increment|0) > 0 & (newDynamicTop|0) < (oldDynamicTop|0)) // Detect and fail if we would wrap around signed 32-bit int.
      | (newDynamicTop|0) < 0) { // Also underflow, sbrk() should be able to be used to subtract.
      abortOnCannotGrowMemory()|0;
      ___setErrNo(12);
      return -1;
    }

    HEAP32[DYNAMICTOP_PTR>>2] = newDynamicTop;
    totalMemory = getTotalMemory()|0;
    if ((newDynamicTop|0) > (totalMemory|0)) {
      if ((enlargeMemory()|0) == 0) {
        ___setErrNo(12);
        HEAP32[DYNAMICTOP_PTR>>2] = oldDynamicTop;
        return -1;
      }
    }
    return oldDynamicTop|0;
}
function _bitshift64Shl(low, high, bits) {
    low = low|0; high = high|0; bits = bits|0;
    var ander = 0;
    if ((bits|0) < 32) {
      ander = ((1 << bits) - 1)|0;
      tempRet0 = (high << bits) | ((low&(ander << (32 - bits))) >>> (32 - bits));
      return low << bits;
    }
    tempRet0 = low << (bits - 32);
    return 0;
}
function _llvm_cttz_i32(x) {
    x = x|0;
    var ret = 0;
    ret = ((HEAP8[(((cttz_i8)+(x & 0xff))>>0)])|0);
    if ((ret|0) < 8) return ret|0;
    ret = ((HEAP8[(((cttz_i8)+((x >> 8)&0xff))>>0)])|0);
    if ((ret|0) < 8) return (ret + 8)|0;
    ret = ((HEAP8[(((cttz_i8)+((x >> 16)&0xff))>>0)])|0);
    if ((ret|0) < 8) return (ret + 16)|0;
    return (((HEAP8[(((cttz_i8)+(x >>> 24))>>0)])|0) + 24)|0;
}
function ___udivmoddi4($a$0, $a$1, $b$0, $b$1, $rem) {
    $a$0 = $a$0 | 0;
    $a$1 = $a$1 | 0;
    $b$0 = $b$0 | 0;
    $b$1 = $b$1 | 0;
    $rem = $rem | 0;
    var $n_sroa_0_0_extract_trunc = 0, $n_sroa_1_4_extract_shift$0 = 0, $n_sroa_1_4_extract_trunc = 0, $d_sroa_0_0_extract_trunc = 0, $d_sroa_1_4_extract_shift$0 = 0, $d_sroa_1_4_extract_trunc = 0, $4 = 0, $17 = 0, $37 = 0, $49 = 0, $51 = 0, $57 = 0, $58 = 0, $66 = 0, $78 = 0, $86 = 0, $88 = 0, $89 = 0, $91 = 0, $92 = 0, $95 = 0, $105 = 0, $117 = 0, $119 = 0, $125 = 0, $126 = 0, $130 = 0, $q_sroa_1_1_ph = 0, $q_sroa_0_1_ph = 0, $r_sroa_1_1_ph = 0, $r_sroa_0_1_ph = 0, $sr_1_ph = 0, $d_sroa_0_0_insert_insert99$0 = 0, $d_sroa_0_0_insert_insert99$1 = 0, $137$0 = 0, $137$1 = 0, $carry_0203 = 0, $sr_1202 = 0, $r_sroa_0_1201 = 0, $r_sroa_1_1200 = 0, $q_sroa_0_1199 = 0, $q_sroa_1_1198 = 0, $147 = 0, $149 = 0, $r_sroa_0_0_insert_insert42$0 = 0, $r_sroa_0_0_insert_insert42$1 = 0, $150$1 = 0, $151$0 = 0, $152 = 0, $154$0 = 0, $r_sroa_0_0_extract_trunc = 0, $r_sroa_1_4_extract_trunc = 0, $155 = 0, $carry_0_lcssa$0 = 0, $carry_0_lcssa$1 = 0, $r_sroa_0_1_lcssa = 0, $r_sroa_1_1_lcssa = 0, $q_sroa_0_1_lcssa = 0, $q_sroa_1_1_lcssa = 0, $q_sroa_0_0_insert_ext75$0 = 0, $q_sroa_0_0_insert_ext75$1 = 0, $q_sroa_0_0_insert_insert77$1 = 0, $_0$0 = 0, $_0$1 = 0;
    $n_sroa_0_0_extract_trunc = $a$0;
    $n_sroa_1_4_extract_shift$0 = $a$1;
    $n_sroa_1_4_extract_trunc = $n_sroa_1_4_extract_shift$0;
    $d_sroa_0_0_extract_trunc = $b$0;
    $d_sroa_1_4_extract_shift$0 = $b$1;
    $d_sroa_1_4_extract_trunc = $d_sroa_1_4_extract_shift$0;
    if (($n_sroa_1_4_extract_trunc | 0) == 0) {
      $4 = ($rem | 0) != 0;
      if (($d_sroa_1_4_extract_trunc | 0) == 0) {
        if ($4) {
          HEAP32[$rem >> 2] = ($n_sroa_0_0_extract_trunc >>> 0) % ($d_sroa_0_0_extract_trunc >>> 0);
          HEAP32[$rem + 4 >> 2] = 0;
        }
        $_0$1 = 0;
        $_0$0 = ($n_sroa_0_0_extract_trunc >>> 0) / ($d_sroa_0_0_extract_trunc >>> 0) >>> 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      } else {
        if (!$4) {
          $_0$1 = 0;
          $_0$0 = 0;
          return (tempRet0 = $_0$1, $_0$0) | 0;
        }
        HEAP32[$rem >> 2] = $a$0 & -1;
        HEAP32[$rem + 4 >> 2] = $a$1 & 0;
        $_0$1 = 0;
        $_0$0 = 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
    }
    $17 = ($d_sroa_1_4_extract_trunc | 0) == 0;
    do {
      if (($d_sroa_0_0_extract_trunc | 0) == 0) {
        if ($17) {
          if (($rem | 0) != 0) {
            HEAP32[$rem >> 2] = ($n_sroa_1_4_extract_trunc >>> 0) % ($d_sroa_0_0_extract_trunc >>> 0);
            HEAP32[$rem + 4 >> 2] = 0;
          }
          $_0$1 = 0;
          $_0$0 = ($n_sroa_1_4_extract_trunc >>> 0) / ($d_sroa_0_0_extract_trunc >>> 0) >>> 0;
          return (tempRet0 = $_0$1, $_0$0) | 0;
        }
        if (($n_sroa_0_0_extract_trunc | 0) == 0) {
          if (($rem | 0) != 0) {
            HEAP32[$rem >> 2] = 0;
            HEAP32[$rem + 4 >> 2] = ($n_sroa_1_4_extract_trunc >>> 0) % ($d_sroa_1_4_extract_trunc >>> 0);
          }
          $_0$1 = 0;
          $_0$0 = ($n_sroa_1_4_extract_trunc >>> 0) / ($d_sroa_1_4_extract_trunc >>> 0) >>> 0;
          return (tempRet0 = $_0$1, $_0$0) | 0;
        }
        $37 = $d_sroa_1_4_extract_trunc - 1 | 0;
        if (($37 & $d_sroa_1_4_extract_trunc | 0) == 0) {
          if (($rem | 0) != 0) {
            HEAP32[$rem >> 2] = 0 | $a$0 & -1;
            HEAP32[$rem + 4 >> 2] = $37 & $n_sroa_1_4_extract_trunc | $a$1 & 0;
          }
          $_0$1 = 0;
          $_0$0 = $n_sroa_1_4_extract_trunc >>> ((_llvm_cttz_i32($d_sroa_1_4_extract_trunc | 0) | 0) >>> 0);
          return (tempRet0 = $_0$1, $_0$0) | 0;
        }
        $49 = Math_clz32($d_sroa_1_4_extract_trunc | 0) | 0;
        $51 = $49 - (Math_clz32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;
        if ($51 >>> 0 <= 30) {
          $57 = $51 + 1 | 0;
          $58 = 31 - $51 | 0;
          $sr_1_ph = $57;
          $r_sroa_0_1_ph = $n_sroa_1_4_extract_trunc << $58 | $n_sroa_0_0_extract_trunc >>> ($57 >>> 0);
          $r_sroa_1_1_ph = $n_sroa_1_4_extract_trunc >>> ($57 >>> 0);
          $q_sroa_0_1_ph = 0;
          $q_sroa_1_1_ph = $n_sroa_0_0_extract_trunc << $58;
          break;
        }
        if (($rem | 0) == 0) {
          $_0$1 = 0;
          $_0$0 = 0;
          return (tempRet0 = $_0$1, $_0$0) | 0;
        }
        HEAP32[$rem >> 2] = 0 | $a$0 & -1;
        HEAP32[$rem + 4 >> 2] = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;
        $_0$1 = 0;
        $_0$0 = 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      } else {
        if (!$17) {
          $117 = Math_clz32($d_sroa_1_4_extract_trunc | 0) | 0;
          $119 = $117 - (Math_clz32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;
          if ($119 >>> 0 <= 31) {
            $125 = $119 + 1 | 0;
            $126 = 31 - $119 | 0;
            $130 = $119 - 31 >> 31;
            $sr_1_ph = $125;
            $r_sroa_0_1_ph = $n_sroa_0_0_extract_trunc >>> ($125 >>> 0) & $130 | $n_sroa_1_4_extract_trunc << $126;
            $r_sroa_1_1_ph = $n_sroa_1_4_extract_trunc >>> ($125 >>> 0) & $130;
            $q_sroa_0_1_ph = 0;
            $q_sroa_1_1_ph = $n_sroa_0_0_extract_trunc << $126;
            break;
          }
          if (($rem | 0) == 0) {
            $_0$1 = 0;
            $_0$0 = 0;
            return (tempRet0 = $_0$1, $_0$0) | 0;
          }
          HEAP32[$rem >> 2] = 0 | $a$0 & -1;
          HEAP32[$rem + 4 >> 2] = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;
          $_0$1 = 0;
          $_0$0 = 0;
          return (tempRet0 = $_0$1, $_0$0) | 0;
        }
        $66 = $d_sroa_0_0_extract_trunc - 1 | 0;
        if (($66 & $d_sroa_0_0_extract_trunc | 0) != 0) {
          $86 = (Math_clz32($d_sroa_0_0_extract_trunc | 0) | 0) + 33 | 0;
          $88 = $86 - (Math_clz32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;
          $89 = 64 - $88 | 0;
          $91 = 32 - $88 | 0;
          $92 = $91 >> 31;
          $95 = $88 - 32 | 0;
          $105 = $95 >> 31;
          $sr_1_ph = $88;
          $r_sroa_0_1_ph = $91 - 1 >> 31 & $n_sroa_1_4_extract_trunc >>> ($95 >>> 0) | ($n_sroa_1_4_extract_trunc << $91 | $n_sroa_0_0_extract_trunc >>> ($88 >>> 0)) & $105;
          $r_sroa_1_1_ph = $105 & $n_sroa_1_4_extract_trunc >>> ($88 >>> 0);
          $q_sroa_0_1_ph = $n_sroa_0_0_extract_trunc << $89 & $92;
          $q_sroa_1_1_ph = ($n_sroa_1_4_extract_trunc << $89 | $n_sroa_0_0_extract_trunc >>> ($95 >>> 0)) & $92 | $n_sroa_0_0_extract_trunc << $91 & $88 - 33 >> 31;
          break;
        }
        if (($rem | 0) != 0) {
          HEAP32[$rem >> 2] = $66 & $n_sroa_0_0_extract_trunc;
          HEAP32[$rem + 4 >> 2] = 0;
        }
        if (($d_sroa_0_0_extract_trunc | 0) == 1) {
          $_0$1 = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;
          $_0$0 = 0 | $a$0 & -1;
          return (tempRet0 = $_0$1, $_0$0) | 0;
        } else {
          $78 = _llvm_cttz_i32($d_sroa_0_0_extract_trunc | 0) | 0;
          $_0$1 = 0 | $n_sroa_1_4_extract_trunc >>> ($78 >>> 0);
          $_0$0 = $n_sroa_1_4_extract_trunc << 32 - $78 | $n_sroa_0_0_extract_trunc >>> ($78 >>> 0) | 0;
          return (tempRet0 = $_0$1, $_0$0) | 0;
        }
      }
    } while (0);
    if (($sr_1_ph | 0) == 0) {
      $q_sroa_1_1_lcssa = $q_sroa_1_1_ph;
      $q_sroa_0_1_lcssa = $q_sroa_0_1_ph;
      $r_sroa_1_1_lcssa = $r_sroa_1_1_ph;
      $r_sroa_0_1_lcssa = $r_sroa_0_1_ph;
      $carry_0_lcssa$1 = 0;
      $carry_0_lcssa$0 = 0;
    } else {
      $d_sroa_0_0_insert_insert99$0 = 0 | $b$0 & -1;
      $d_sroa_0_0_insert_insert99$1 = $d_sroa_1_4_extract_shift$0 | $b$1 & 0;
      $137$0 = _i64Add($d_sroa_0_0_insert_insert99$0 | 0, $d_sroa_0_0_insert_insert99$1 | 0, -1, -1) | 0;
      $137$1 = tempRet0;
      $q_sroa_1_1198 = $q_sroa_1_1_ph;
      $q_sroa_0_1199 = $q_sroa_0_1_ph;
      $r_sroa_1_1200 = $r_sroa_1_1_ph;
      $r_sroa_0_1201 = $r_sroa_0_1_ph;
      $sr_1202 = $sr_1_ph;
      $carry_0203 = 0;
      while (1) {
        $147 = $q_sroa_0_1199 >>> 31 | $q_sroa_1_1198 << 1;
        $149 = $carry_0203 | $q_sroa_0_1199 << 1;
        $r_sroa_0_0_insert_insert42$0 = 0 | ($r_sroa_0_1201 << 1 | $q_sroa_1_1198 >>> 31);
        $r_sroa_0_0_insert_insert42$1 = $r_sroa_0_1201 >>> 31 | $r_sroa_1_1200 << 1 | 0;
        _i64Subtract($137$0 | 0, $137$1 | 0, $r_sroa_0_0_insert_insert42$0 | 0, $r_sroa_0_0_insert_insert42$1 | 0) | 0;
        $150$1 = tempRet0;
        $151$0 = $150$1 >> 31 | (($150$1 | 0) < 0 ? -1 : 0) << 1;
        $152 = $151$0 & 1;
        $154$0 = _i64Subtract($r_sroa_0_0_insert_insert42$0 | 0, $r_sroa_0_0_insert_insert42$1 | 0, $151$0 & $d_sroa_0_0_insert_insert99$0 | 0, ((($150$1 | 0) < 0 ? -1 : 0) >> 31 | (($150$1 | 0) < 0 ? -1 : 0) << 1) & $d_sroa_0_0_insert_insert99$1 | 0) | 0;
        $r_sroa_0_0_extract_trunc = $154$0;
        $r_sroa_1_4_extract_trunc = tempRet0;
        $155 = $sr_1202 - 1 | 0;
        if (($155 | 0) == 0) {
          break;
        } else {
          $q_sroa_1_1198 = $147;
          $q_sroa_0_1199 = $149;
          $r_sroa_1_1200 = $r_sroa_1_4_extract_trunc;
          $r_sroa_0_1201 = $r_sroa_0_0_extract_trunc;
          $sr_1202 = $155;
          $carry_0203 = $152;
        }
      }
      $q_sroa_1_1_lcssa = $147;
      $q_sroa_0_1_lcssa = $149;
      $r_sroa_1_1_lcssa = $r_sroa_1_4_extract_trunc;
      $r_sroa_0_1_lcssa = $r_sroa_0_0_extract_trunc;
      $carry_0_lcssa$1 = 0;
      $carry_0_lcssa$0 = $152;
    }
    $q_sroa_0_0_insert_ext75$0 = $q_sroa_0_1_lcssa;
    $q_sroa_0_0_insert_ext75$1 = 0;
    $q_sroa_0_0_insert_insert77$1 = $q_sroa_1_1_lcssa | $q_sroa_0_0_insert_ext75$1;
    if (($rem | 0) != 0) {
      HEAP32[$rem >> 2] = 0 | $r_sroa_0_1_lcssa;
      HEAP32[$rem + 4 >> 2] = $r_sroa_1_1_lcssa | 0;
    }
    $_0$1 = (0 | $q_sroa_0_0_insert_ext75$0) >>> 31 | $q_sroa_0_0_insert_insert77$1 << 1 | ($q_sroa_0_0_insert_ext75$1 << 1 | $q_sroa_0_0_insert_ext75$0 >>> 31) & 0 | $carry_0_lcssa$1;
    $_0$0 = ($q_sroa_0_0_insert_ext75$0 << 1 | 0 >>> 31) & -2 | $carry_0_lcssa$0;
    return (tempRet0 = $_0$1, $_0$0) | 0;
}
function ___uremdi3($a$0, $a$1, $b$0, $b$1) {
    $a$0 = $a$0 | 0;
    $a$1 = $a$1 | 0;
    $b$0 = $b$0 | 0;
    $b$1 = $b$1 | 0;
    var $rem = 0, __stackBase__ = 0;
    __stackBase__ = STACKTOP;
    STACKTOP = STACKTOP + 16 | 0;
    $rem = __stackBase__ | 0;
    ___udivmoddi4($a$0, $a$1, $b$0, $b$1, $rem) | 0;
    STACKTOP = __stackBase__;
    return (tempRet0 = HEAP32[$rem + 4 >> 2] | 0, HEAP32[$rem >> 2] | 0) | 0;
}
function _llvm_ctlz_i64(l, h, isZeroUndef) {
    l = l | 0;
    h = h | 0;
    isZeroUndef = isZeroUndef | 0;
    var ret = 0;
    ret = Math_clz32(h) | 0;
    if ((ret | 0) == 32) ret = ret + (Math_clz32(l) | 0) | 0;
    tempRet0 = 0;
    return ret | 0;
}
function _memset(ptr, value, num) {
    ptr = ptr|0; value = value|0; num = num|0;
    var stop = 0, value4 = 0, stop4 = 0, unaligned = 0;
    stop = (ptr + num)|0;
    if ((num|0) >= 20) {
      // This is unaligned, but quite large, so work hard to get to aligned settings
      value = value & 0xff;
      unaligned = ptr & 3;
      value4 = value | (value << 8) | (value << 16) | (value << 24);
      stop4 = stop & ~3;
      if (unaligned) {
        unaligned = (ptr + 4 - unaligned)|0;
        while ((ptr|0) < (unaligned|0)) { // no need to check for stop, since we have large num
          HEAP8[((ptr)>>0)]=value;
          ptr = (ptr+1)|0;
        }
      }
      while ((ptr|0) < (stop4|0)) {
        HEAP32[((ptr)>>2)]=value4;
        ptr = (ptr+4)|0;
      }
    }
    while ((ptr|0) < (stop|0)) {
      HEAP8[((ptr)>>0)]=value;
      ptr = (ptr+1)|0;
    }
    return (ptr-num)|0;
}
function _memmove(dest, src, num) {
    dest = dest|0; src = src|0; num = num|0;
    var ret = 0;
    if (((src|0) < (dest|0)) & ((dest|0) < ((src + num)|0))) {
      // Unlikely case: Copy backwards in a safe manner
      ret = dest;
      src = (src + num)|0;
      dest = (dest + num)|0;
      while ((num|0) > 0) {
        dest = (dest - 1)|0;
        src = (src - 1)|0;
        num = (num - 1)|0;
        HEAP8[((dest)>>0)]=((HEAP8[((src)>>0)])|0);
      }
      dest = ret;
    } else {
      _memcpy(dest, src, num) | 0;
    }
    return dest | 0;
}
function ___udivdi3($a$0, $a$1, $b$0, $b$1) {
    $a$0 = $a$0 | 0;
    $a$1 = $a$1 | 0;
    $b$0 = $b$0 | 0;
    $b$1 = $b$1 | 0;
    var $1$0 = 0;
    $1$0 = ___udivmoddi4($a$0, $a$1, $b$0, $b$1, 0) | 0;
    return $1$0 | 0;
}
function ___muldsi3($a, $b) {
    $a = $a | 0;
    $b = $b | 0;
    var $1 = 0, $2 = 0, $3 = 0, $6 = 0, $8 = 0, $11 = 0, $12 = 0;
    $1 = $a & 65535;
    $2 = $b & 65535;
    $3 = Math_imul($2, $1) | 0;
    $6 = $a >>> 16;
    $8 = ($3 >>> 16) + (Math_imul($2, $6) | 0) | 0;
    $11 = $b >>> 16;
    $12 = Math_imul($11, $1) | 0;
    return (tempRet0 = (($8 >>> 16) + (Math_imul($11, $6) | 0) | 0) + ((($8 & 65535) + $12 | 0) >>> 16) | 0, 0 | ($8 + $12 << 16 | $3 & 65535)) | 0;
}
function ___muldi3($a$0, $a$1, $b$0, $b$1) {
    $a$0 = $a$0 | 0;
    $a$1 = $a$1 | 0;
    $b$0 = $b$0 | 0;
    $b$1 = $b$1 | 0;
    var $x_sroa_0_0_extract_trunc = 0, $y_sroa_0_0_extract_trunc = 0, $1$0 = 0, $1$1 = 0, $2 = 0;
    $x_sroa_0_0_extract_trunc = $a$0;
    $y_sroa_0_0_extract_trunc = $b$0;
    $1$0 = ___muldsi3($x_sroa_0_0_extract_trunc, $y_sroa_0_0_extract_trunc) | 0;
    $1$1 = tempRet0;
    $2 = Math_imul($a$1, $y_sroa_0_0_extract_trunc) | 0;
    return (tempRet0 = ((Math_imul($b$1, $x_sroa_0_0_extract_trunc) | 0) + $2 | 0) + $1$1 | $1$1 & 0, 0 | $1$0 & -1) | 0;
}
function _pthread_self() {
    return 0;
}

  
function dynCall_iiii(index,a1,a2,a3) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0;
  return FUNCTION_TABLE_iiii[index&511](a1|0,a2|0,a3|0)|0;
}


function dynCall_viiiiii(index,a1,a2,a3,a4,a5,a6) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0;
  FUNCTION_TABLE_viiiiii[index&255](a1|0,a2|0,a3|0,a4|0,a5|0,a6|0);
}


function dynCall_viiiii(index,a1,a2,a3,a4,a5) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0;
  FUNCTION_TABLE_viiiii[index&511](a1|0,a2|0,a3|0,a4|0,a5|0);
}


function dynCall_viiiiiii(index,a1,a2,a3,a4,a5,a6,a7) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0; a7=a7|0;
  FUNCTION_TABLE_viiiiiii[index&127](a1|0,a2|0,a3|0,a4|0,a5|0,a6|0,a7|0);
}


function dynCall_iiiiiiiiiid(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0; a7=a7|0; a8=a8|0; a9=a9|0; a10=+a10;
  return FUNCTION_TABLE_iiiiiiiiiid[index&127](a1|0,a2|0,a3|0,a4|0,a5|0,a6|0,a7|0,a8|0,a9|0,+a10)|0;
}


function dynCall_i(index) {
  index = index|0;
  
  return FUNCTION_TABLE_i[index&511]()|0;
}


function dynCall_vi(index,a1) {
  index = index|0;
  a1=a1|0;
  FUNCTION_TABLE_vi[index&511](a1|0);
}


function dynCall_vii(index,a1,a2) {
  index = index|0;
  a1=a1|0; a2=a2|0;
  FUNCTION_TABLE_vii[index&511](a1|0,a2|0);
}


function dynCall_ii(index,a1) {
  index = index|0;
  a1=a1|0;
  return FUNCTION_TABLE_ii[index&511](a1|0)|0;
}


function dynCall_viiid(index,a1,a2,a3,a4) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=+a4;
  FUNCTION_TABLE_viiid[index&511](a1|0,a2|0,a3|0,+a4);
}


function dynCall_viii(index,a1,a2,a3) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0;
  FUNCTION_TABLE_viii[index&511](a1|0,a2|0,a3|0);
}


function dynCall_iidd(index,a1,a2,a3) {
  index = index|0;
  a1=a1|0; a2=+a2; a3=+a3;
  return FUNCTION_TABLE_iidd[index&511](a1|0,+a2,+a3)|0;
}


function dynCall_v(index) {
  index = index|0;
  
  FUNCTION_TABLE_v[index&511]();
}


function dynCall_viiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0; a7=a7|0; a8=a8|0; a9=a9|0;
  FUNCTION_TABLE_viiiiiiiii[index&511](a1|0,a2|0,a3|0,a4|0,a5|0,a6|0,a7|0,a8|0,a9|0);
}


function dynCall_viiii(index,a1,a2,a3,a4) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0;
  FUNCTION_TABLE_viiii[index&511](a1|0,a2|0,a3|0,a4|0);
}


function dynCall_iii(index,a1,a2) {
  index = index|0;
  a1=a1|0; a2=a2|0;
  return FUNCTION_TABLE_iii[index&511](a1|0,a2|0)|0;
}


function dynCall_diiii(index,a1,a2,a3,a4) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0;
  return +FUNCTION_TABLE_diiii[index&63](a1|0,a2|0,a3|0,a4|0);
}


function dynCall_viiidd(index,a1,a2,a3,a4,a5) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=+a4; a5=+a5;
  FUNCTION_TABLE_viiidd[index&255](a1|0,a2|0,a3|0,+a4,+a5);
}


function dynCall_iiiiii(index,a1,a2,a3,a4,a5) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0;
  return FUNCTION_TABLE_iiiiii[index&511](a1|0,a2|0,a3|0,a4|0,a5|0)|0;
}

function b0(p0,p1,p2) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0; nullFunc_iiii(0);return 0;
}
function b1(p0,p1,p2,p3,p4,p5) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = p5|0; nullFunc_viiiiii(1);
}
function b2(p0,p1,p2,p3,p4) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0; nullFunc_viiiii(2);
}
function b3(p0,p1,p2,p3,p4,p5,p6) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = p5|0;p6 = p6|0; nullFunc_viiiiiii(3);
}
function b4(p0,p1,p2,p3,p4,p5,p6,p7,p8,p9) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = p5|0;p6 = p6|0;p7 = p7|0;p8 = p8|0;p9 = +p9; nullFunc_iiiiiiiiiid(4);return 0;
}
function b5() {
 ; nullFunc_i(5);return 0;
}
function b6(p0) {
 p0 = p0|0; nullFunc_vi(6);
}
function b7(p0,p1) {
 p0 = p0|0;p1 = p1|0; nullFunc_vii(7);
}
function b8(p0) {
 p0 = p0|0; nullFunc_ii(8);return 0;
}
function b9(p0,p1,p2,p3) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = +p3; nullFunc_viiid(9);
}
function b10(p0,p1,p2) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0; nullFunc_viii(10);
}
function b11(p0,p1,p2) {
 p0 = p0|0;p1 = +p1;p2 = +p2; nullFunc_iidd(11);return 0;
}
function b12() {
 ; nullFunc_v(12);
}
function b13(p0,p1,p2,p3,p4,p5,p6,p7,p8) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = p5|0;p6 = p6|0;p7 = p7|0;p8 = p8|0; nullFunc_viiiiiiiii(13);
}
function b14(p0,p1,p2,p3) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0; nullFunc_viiii(14);
}
function b15(p0,p1) {
 p0 = p0|0;p1 = p1|0; nullFunc_iii(15);return 0;
}
function b16(p0,p1,p2,p3) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0; nullFunc_diiii(16);return +0;
}
function b17(p0,p1,p2,p3,p4) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = +p3;p4 = +p4; nullFunc_viiidd(17);
}
function b18(p0,p1,p2,p3,p4) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0; nullFunc_iiiiii(18);return 0;
}

// EMSCRIPTEN_END_FUNCS
var FUNCTION_TABLE_iiii = [b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,__ZN17ncollide_geometry5query12ray_internal3ray7RayCast14intersects_ray17he933b0940781c252E,b0,b0,__ZN17ncollide_geometry5query14point_internal11point_plane207__LT_impl_u20_ncollide_geometry__query__point_internal__point_query__PointQuery_LT_P_C__u20_M_GT__u20_for_u20_ncollide_geometry__shape__plane__Plane_LT__LT_P_u20_as_u20_ncollide_math__Point_GT___Vect_GT__GT_14contains_point17hf4e81a19d9c9f810E,b0,b0
,b0,__ZN17ncollide_geometry5query12ray_internal3ray7RayCast14intersects_ray17hb73b37cba00364dfE,b0,b0,__ZN17ncollide_geometry5query14point_internal10point_ball254__LT_impl_u20_ncollide_geometry__query__point_internal__point_query__PointQuery_LT_P_C__u20_M_GT__u20_for_u20_ncollide_geometry__shape__ball__Ball_LT__LT__LT_P_u20_as_u20_ncollide_math__Point_GT___Vect_u20_as_u20_ncollide_math__Vector_GT___Scalar_GT__GT_14contains_point17h6d6607fcc114b62cE,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,__ZN94__LT_std__io__Write__write_fmt__Adaptor_LT__u27_a_C__u20_T_GT__u20_as_u20_core__fmt__Write_GT_9write_str17h2f73293455338b77E
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,__ZN96__LT_core__fmt__Write__write_fmt__Adapter_LT__u27_a_C__u20_T_GT__u20_as_u20_core__fmt__Write_GT_9write_str17h0aaca7dec6d4e3a8E,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,__ZN93__LT_ncollide_pipeline__world__collision_world__CollisionWorld_LT_P_C__u20_M_C__u20_T_GT__GT_19perform_broad_phase28__u7b__u7b_closure_u7d__u7d_17hb5254994298a4b0aE,__ZN4core3ops6FnOnce9call_once17hf1a3069639f5857aE,b0,b0,b0,b0,b0,__ZN330__LT_nphysics2d__world__world__SensorsNotCollidingTheirParentPairFilter_u20_as_u20_ncollide_pipeline__broad_phase__broad_phase_pair_filter__BroadPhasePairFilter_LT_nalgebra__structs__point__Point2_LT_N_GT__C__u20_nalgebra__structs__isometry__Isometry2_LT_N_GT__C__u20_nphysics2d__object__world_object__WorldObject_LT_N_GT__GT__GT_13is_pair_valid17h19bee2f2630587dcE,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,__ZN96__LT_core__fmt__Write__write_fmt__Adapter_LT__u27_a_C__u20_T_GT__u20_as_u20_core__fmt__Write_GT_9write_str17h1eeced7a67f656f4E_1352,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,__ZN94__LT_std__io__Write__write_fmt__Adaptor_LT__u27_a_C__u20_T_GT__u20_as_u20_core__fmt__Write_GT_9write_str17h64200a3d0e3b3e9bE,b0,b0,b0,b0,b0,b0,b0,b0,b0,__ZN96__LT_core__fmt__Write__write_fmt__Adapter_LT__u27_a_C__u20_T_GT__u20_as_u20_core__fmt__Write_GT_9write_str17ha78e61039551424cE,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,__ZN96__LT_core__fmt__Write__write_fmt__Adapter_LT__u27_a_C__u20_T_GT__u20_as_u20_core__fmt__Write_GT_9write_str17h1eeced7a67f656f4E_1495,b0,b0,b0,b0,b0,b0,b0,__ZN96__LT_core__fmt__builders__PadAdapter_LT__u27_a_C__u20__u27_b_GT__u20_as_u20_core__fmt__Write_GT_9write_str17hb2a4662586509abfE,b0,b0,__ZN96__LT_core__fmt__Write__write_fmt__Adapter_LT__u27_a_C__u20_T_GT__u20_as_u20_core__fmt__Write_GT_9write_str17h2d643c8edc18ab33E,b0,b0,b0,b0,b0,___stdout_write
,___stdio_seek,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,__ZN4core3fmt5write17hdd089a59fed6a1dbE,b0,b0,b0,b0,b0,b0,b0,b0,__ZN10nphysics2d5utils10union_find4find17h4abf05ed08368b3fE,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,__ZN59__LT__RF__u27_a_u20_str_u20_as_u20_webplatform__Interop_GT_6as_int17h18f0c7625a65b539E,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,__ZN3std6thread6Thread3new17h178353e4ff7321b6E,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,__ZN40__LT_str_u20_as_u20_core__fmt__Debug_GT_3fmt17ha856739f11aa1026E,b0,b0,b0,b0,b0,b0,b0,b0,___stdio_write,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0];
var FUNCTION_TABLE_viiiiii = [b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,__ZN249__LT_ncollide_pipeline__narrow_phase__contact_generator__default_contact_dispatcher__DefaultContactDispatcher_LT_P_C__u20_M_GT__u20_as_u20_ncollide_pipeline__narrow_phase__contact_generator__contact_generator__ContactDispatcher_LT_P_C__u20_M_GT__GT_21get_contact_algorithm17haed361e0e2dcbc93E,__ZN258__LT_ncollide_pipeline__narrow_phase__proximity_detector__default_proximity_dispatcher__DefaultProximityDispatcher_LT_P_C__u20_M_GT__u20_as_u20_ncollide_pipeline__narrow_phase__proximity_detector__proximity_detector__ProximityDispatcher_LT_P_C__u20_M_GT__GT_23get_proximity_algorithm17hbc389194cd5c4d08E,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,__ZN55__LT_ncollide_utils__data__vec_map__VecMap_LT_V_GT__GT_6insert17h0d8c60ac9e2f91e2E,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1];
var FUNCTION_TABLE_viiiii = [b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,__ZN17ncollide_geometry5query12ray_internal3ray7RayCast12toi_with_ray17h2eacccfe4b1b96c0E,__ZN17ncollide_geometry5query12ray_internal9ray_plane194__LT_impl_u20_ncollide_geometry__query__ray_internal__ray__RayCast_LT_P_C__u20_M_GT__u20_for_u20_ncollide_geometry__shape__plane__Plane_LT__LT_P_u20_as_u20_ncollide_math__Point_GT___Vect_GT__GT_23toi_and_normal_with_ray17h7ca785cc829c099fE,__ZN17ncollide_geometry5query12ray_internal3ray7RayCast30toi_and_normal_and_uv_with_ray17h510c5df06c199a79E,b2,__ZN17ncollide_geometry5query14point_internal11point_plane207__LT_impl_u20_ncollide_geometry__query__point_internal__point_query__PointQuery_LT_P_C__u20_M_GT__u20_for_u20_ncollide_geometry__shape__plane__Plane_LT__LT_P_u20_as_u20_ncollide_math__Point_GT___Vect_GT__GT_13project_point17hea24680a0757ad0fE,b2,b2,__ZN17ncollide_geometry5query12ray_internal8ray_ball241__LT_impl_u20_ncollide_geometry__query__ray_internal__ray__RayCast_LT_P_C__u20_M_GT__u20_for_u20_ncollide_geometry__shape__ball__Ball_LT__LT__LT_P_u20_as_u20_ncollide_math__Point_GT___Vect_u20_as_u20_ncollide_math__Vector_GT___Scalar_GT__GT_12toi_with_ray17h21b67f4f785800b8E,__ZN17ncollide_geometry5query12ray_internal8ray_ball241__LT_impl_u20_ncollide_geometry__query__ray_internal__ray__RayCast_LT_P_C__u20_M_GT__u20_for_u20_ncollide_geometry__shape__ball__Ball_LT__LT__LT_P_u20_as_u20_ncollide_math__Point_GT___Vect_u20_as_u20_ncollide_math__Vector_GT___Scalar_GT__GT_23toi_and_normal_with_ray17h5c16f213fc7b28d5E
,__ZN17ncollide_geometry5query12ray_internal8ray_ball241__LT_impl_u20_ncollide_geometry__query__ray_internal__ray__RayCast_LT_P_C__u20_M_GT__u20_for_u20_ncollide_geometry__shape__ball__Ball_LT__LT__LT_P_u20_as_u20_ncollide_math__Point_GT___Vect_u20_as_u20_ncollide_math__Vector_GT___Scalar_GT__GT_30toi_and_normal_and_uv_with_ray17hb5aaf52f0ceb1eeeE,b2,__ZN17ncollide_geometry5query14point_internal10point_ball254__LT_impl_u20_ncollide_geometry__query__point_internal__point_query__PointQuery_LT_P_C__u20_M_GT__u20_for_u20_ncollide_geometry__shape__ball__Ball_LT__LT__LT_P_u20_as_u20_ncollide_math__Point_GT___Vect_u20_as_u20_ncollide_math__Vector_GT___Scalar_GT__GT_13project_point17h5ed85295562113e0E,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,__ZN197__LT_ncollide_pipeline__narrow_phase__default_narrow_phase__DefaultNarrowPhase_LT_P_C__u20_M_GT__u20_as_u20_ncollide_pipeline__narrow_phase__narrow_phase__NarrowPhase_LT_P_C__u20_M_C__u20_T_GT__GT_6update17h5a79a291d46213aaE,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,__ZN196__LT_ncollide_pipeline__broad_phase__dbvt_broad_phase__DBVTBroadPhase_LT_P_C__u20_BV_C__u20_T_GT__u20_as_u20_ncollide_pipeline__broad_phase__broad_phase__BroadPhase_LT_P_C__u20_BV_C__u20_T_GT__GT_6update17hfa26e2950d70afcdE,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,__ZN4core9panicking18panic_bounds_check17hd14a5808e41829e9E,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,__ZN11webplatform8HtmlNode12prop_set_str17hebad5dd26c6e20aaE,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,__ZN12physics_test8download17h6f62d93dd292f3b4E,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2];
var FUNCTION_TABLE_viiiiiii = [b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,__ZN197__LT_ncollide_pipeline__narrow_phase__default_narrow_phase__DefaultNarrowPhase_LT_P_C__u20_M_GT__u20_as_u20_ncollide_pipeline__narrow_phase__narrow_phase__NarrowPhase_LT_P_C__u20_M_C__u20_T_GT__GT_18handle_interaction17hd9dda2adee4e88fcE,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3];
var FUNCTION_TABLE_iiiiiiiiiid = [b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,__ZN272__LT_ncollide_pipeline__narrow_phase__contact_generator__composite_shape_shape_contact_generator__ShapeCompositeShapeContactGenerator_LT_P_C__u20_M_GT__u20_as_u20_ncollide_pipeline__narrow_phase__contact_generator__contact_generator__ContactGenerator_LT_P_C__u20_M_GT__GT_6update17hde81fcb61a2aabaeE,b4,b4,b4,__ZN272__LT_ncollide_pipeline__narrow_phase__contact_generator__composite_shape_shape_contact_generator__CompositeShapeShapeContactGenerator_LT_P_C__u20_M_GT__u20_as_u20_ncollide_pipeline__narrow_phase__contact_generator__contact_generator__ContactGenerator_LT_P_C__u20_M_GT__GT_6update17ha403ed4f314eefb2E,b4,b4,b4,__ZN284__LT_ncollide_pipeline__narrow_phase__contact_generator__support_map_support_map_contact_generator__SupportMapSupportMapContactGenerator_LT_P_C__u20_M_C__u20_S_GT__u20_as_u20_ncollide_pipeline__narrow_phase__contact_generator__contact_generator__ContactGenerator_LT_P_C__u20_M_GT__GT_6update17h56901798cdd2742bE,b4,b4,b4,__ZN274__LT_ncollide_pipeline__narrow_phase__contact_generator__one_shot_contact_manifold_generator__OneShotContactManifoldGenerator_LT_P_C__u20_M_C__u20_CD_GT__u20_as_u20_ncollide_pipeline__narrow_phase__contact_generator__contact_generator__ContactGenerator_LT_P_C__u20_M_GT__GT_6update17hef30af49238162f4E,b4,b4,b4,__ZN264__LT_ncollide_pipeline__narrow_phase__contact_generator__plane_support_map_contact_generator__SupportMapPlaneContactGenerator_LT_P_C__u20_M_GT__u20_as_u20_ncollide_pipeline__narrow_phase__contact_generator__contact_generator__ContactGenerator_LT_P_C__u20_M_GT__GT_6update17hd558fda1d6aca0b3E,b4,b4,b4,__ZN274__LT_ncollide_pipeline__narrow_phase__contact_generator__one_shot_contact_manifold_generator__OneShotContactManifoldGenerator_LT_P_C__u20_M_C__u20_CD_GT__u20_as_u20_ncollide_pipeline__narrow_phase__contact_generator__contact_generator__ContactGenerator_LT_P_C__u20_M_GT__GT_6update17h9ce435c62686205dE,b4,b4
,b4,__ZN264__LT_ncollide_pipeline__narrow_phase__contact_generator__plane_support_map_contact_generator__PlaneSupportMapContactGenerator_LT_P_C__u20_M_GT__u20_as_u20_ncollide_pipeline__narrow_phase__contact_generator__contact_generator__ContactGenerator_LT_P_C__u20_M_GT__GT_6update17hbdf7ac476cf5634eE,b4,b4,b4,__ZN274__LT_ncollide_pipeline__narrow_phase__contact_generator__one_shot_contact_manifold_generator__OneShotContactManifoldGenerator_LT_P_C__u20_M_C__u20_CD_GT__u20_as_u20_ncollide_pipeline__narrow_phase__contact_generator__contact_generator__ContactGenerator_LT_P_C__u20_M_GT__GT_6update17he2475110ad5d2e81E,b4,b4,b4,__ZN249__LT_ncollide_pipeline__narrow_phase__contact_generator__ball_ball_contact_generator__BallBallContactGenerator_LT_P_C__u20_M_GT__u20_as_u20_ncollide_pipeline__narrow_phase__contact_generator__contact_generator__ContactGenerator_LT_P_C__u20_M_GT__GT_6update17ha44d595fb23e7f9eE,b4,b4,b4,__ZN278__LT_ncollide_pipeline__narrow_phase__proximity_detector__composite_shape_shape_proximity_detector__ShapeCompositeShapeProximityDetector_LT_P_C__u20_M_GT__u20_as_u20_ncollide_pipeline__narrow_phase__proximity_detector__proximity_detector__ProximityDetector_LT_P_C__u20_M_GT__GT_6update17h8ad1b4058e08c886E,b4,b4,__ZN278__LT_ncollide_pipeline__narrow_phase__proximity_detector__composite_shape_shape_proximity_detector__CompositeShapeShapeProximityDetector_LT_P_C__u20_M_GT__u20_as_u20_ncollide_pipeline__narrow_phase__proximity_detector__proximity_detector__ProximityDetector_LT_P_C__u20_M_GT__GT_6update17ha1e009ebb5c246f9E,b4,b4,__ZN290__LT_ncollide_pipeline__narrow_phase__proximity_detector__support_map_support_map_proximity_detector__SupportMapSupportMapProximityDetector_LT_P_C__u20_M_C__u20_S_GT__u20_as_u20_ncollide_pipeline__narrow_phase__proximity_detector__proximity_detector__ProximityDetector_LT_P_C__u20_M_GT__GT_6update17hac07161974822df2E,b4,__ZN270__LT_ncollide_pipeline__narrow_phase__proximity_detector__plane_support_map_proximity_detector__SupportMapPlaneProximityDetector_LT_P_C__u20_M_GT__u20_as_u20_ncollide_pipeline__narrow_phase__proximity_detector__proximity_detector__ProximityDetector_LT_P_C__u20_M_GT__GT_6update17h269c69513dd1ac9eE,b4,__ZN270__LT_ncollide_pipeline__narrow_phase__proximity_detector__plane_support_map_proximity_detector__PlaneSupportMapProximityDetector_LT_P_C__u20_M_GT__u20_as_u20_ncollide_pipeline__narrow_phase__proximity_detector__proximity_detector__ProximityDetector_LT_P_C__u20_M_GT__GT_6update17hf5868b13b688a7caE,b4,__ZN255__LT_ncollide_pipeline__narrow_phase__proximity_detector__ball_ball_proximity_detector__BallBallProximityDetector_LT_P_C__u20_M_GT__u20_as_u20_ncollide_pipeline__narrow_phase__proximity_detector__proximity_detector__ProximityDetector_LT_P_C__u20_M_GT__GT_6update17hb08aa96e951d235aE,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4];
var FUNCTION_TABLE_i = [b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,__ZN17ncollide_geometry5query10algorithms15johnson_simplex22KEY_RECURSION_TEMPLATE7__getit17hed102e47d684af7fE,b5,b5,b5,__ZN17ncollide_geometry5query10algorithms15johnson_simplex17RecursionTemplate3new17he26a532eb60d9addE,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,__ZN3std11collections4hash3map11RandomState3new4KEYS7__getit17hca28196a28ab92b9E,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,__ZN45__LT_std__thread__local__os__Key_LT_T_GT__GT_3get17h2fb116ac523daa68E,b5,b5,b5,b5,b5,__ZN3std9panicking18update_panic_count11PANIC_COUNT7__getit17ha058452be27ec8a6E,b5,b5,__ZN46__LT_std__thread__local__LocalKey_LT_T_GT__GT_4with17ha27b04730b7b89bdE
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,__ZN45__LT_std__thread__local__os__Key_LT_T_GT__GT_3get17h3ece46750a1c132cE,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5];
var FUNCTION_TABLE_vi = [b6,__ZN4drop17hb88b2eda1462e24bE,b6,b6,__ZN4drop17hcc8b352798921f08E,b6,b6,__ZN4drop17h09974e56699176eaE,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,__ZN4drop17h2598c1eaf9d269edE,b6,b6,b6,__ZN4drop17heceddef0f26ca94eE,b6,b6,b6,__ZN4drop17h6dacdfb36df3e41cE,b6,b6,b6,__ZN4drop17hdc14e06f44431368E,b6,b6,b6,__ZN4drop17h5178d490d4b6edadE,b6,b6,b6,__ZN4drop17hc58e3ecad5deb1bcE,b6,b6,b6
,__ZN4drop17hfff8ac0b247dd822E,b6,b6,b6,__ZN4drop17h7f80dfa911830ae4E,b6,b6,b6,__ZN4drop17h033793f6a4c3c96dE,b6,b6,b6,__ZN4drop17ha57ca43c0ff2b1bbE,b6,b6,__ZN4drop17h7a054f0c0ce2a476E,b6,b6,__ZN4drop17h25022725af3d2334E,b6,b6,b6,b6,b6,b6,b6,b6,b6,__ZN4drop17h37255e4d2306d967E,b6
,b6,b6,b6,__ZN4drop17h048dae4e9f2bf6a0E,b6,b6,b6,b6,b6,__ZN4drop17h7ae47e2d424ed70bE,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,__ZN4drop17hef327981beb78ddcE,b6,b6,b6,__ZN4drop17ha4e743f99a9d3e06E,b6,b6,b6,__ZN196__LT_ncollide_pipeline__broad_phase__dbvt_broad_phase__DBVTBroadPhase_LT_P_C__u20_BV_C__u20_T_GT__u20_as_u20_ncollide_pipeline__broad_phase__broad_phase__BroadPhase_LT_P_C__u20_BV_C__u20_T_GT__GT_34deferred_recompute_all_proximities17h31ee571b19fadd27E,b6,b6,b6,b6,__ZN4drop17ha5d17962d3aa9debE,b6,b6,b6,b6,__ZN3std6thread5local2os13destroy_value17hc2a04625cefcd4a6E
,__ZN4drop17hc002f0e3f036e9d8E,b6,__ZN4drop17h90c886f6ba3b8c33E,b6,b6,b6,__ZN4drop17h0d7be425ef5d01e4E,b6,__ZN3std6thread5local2os13destroy_value17h0615f5f984f66ea8E,b6,b6,b6,b6,__ZN4drop17h1bc5e59410308c66E,b6,b6,b6,__ZN4drop17h343ea1468cdeeae2E,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,__ZN3std6thread5local2os13destroy_value17hca780864430f1bbeE,__ZN3std6thread5local2os13destroy_value17h31c711597d050631E,b6,b6,b6,b6,__ZN4drop17h5289476cc8f9542fE,b6,b6,b6,__ZN3std6thread5local2os13destroy_value17h82de1d5792919066E,__ZN4drop17haa6903bd5d2f7393E,b6,b6,b6,b6,b6,b6,b6,__ZN4drop17hee667335a0558b00E,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,__ZN40__LT_alloc__raw_vec__RawVec_LT_T_GT__GT_6double17h528ed6a617ab907eE,b6,__ZN40__LT_alloc__raw_vec__RawVec_LT_T_GT__GT_6double17h1afd6f4199b0bac0E,b6,b6,__ZN4core9panicking5panic17ha7507e8e32961bfeE,b6,b6,b6,__ZN40__LT_alloc__raw_vec__RawVec_LT_T_GT__GT_6double17hcce751f0a8e5e0c9E,b6,b6,__ZN40__LT_alloc__raw_vec__RawVec_LT_T_GT__GT_6double17hd1bf40171c89f967E,b6,b6,__ZN40__LT_alloc__raw_vec__RawVec_LT_T_GT__GT_6double17h12ab3e9c07b47f79E,b6,__ZN40__LT_alloc__raw_vec__RawVec_LT_T_GT__GT_6double17h7f0870b65cc12174E,b6,b6,b6,b6,__ZN40__LT_alloc__raw_vec__RawVec_LT_T_GT__GT_6double17hba0be17a8d0947b2E,b6
,__ZN40__LT_alloc__raw_vec__RawVec_LT_T_GT__GT_6double17hf3cc6bb6adb0ef45E,__ZN40__LT_alloc__raw_vec__RawVec_LT_T_GT__GT_6double17hc4800ad2c4f0e489E,__ZN33__LT_alloc__arc__Arc_LT_T_GT__GT_9drop_slow17hb3767c2311d7d383E,__ZN40__LT_alloc__raw_vec__RawVec_LT_T_GT__GT_6double17h1ae997f2dc657edcE,b6,b6,__ZN40__LT_alloc__raw_vec__RawVec_LT_T_GT__GT_6double17h0efc11ba6ed9d002E,__ZN40__LT_alloc__raw_vec__RawVec_LT_T_GT__GT_6double17h50562ed0cc5aced6E,__ZN4drop17hd4af0298b60386b8E,__ZN93__LT_ncollide_pipeline__world__collision_world__CollisionWorld_LT_P_C__u20_M_C__u20_T_GT__GT_42perform_additions_removals_and_broad_phase17h262b713878bb08b9E,b6,b6,__ZN40__LT_alloc__raw_vec__RawVec_LT_T_GT__GT_6double17h65a47dbc2051be6eE,b6,b6,__ZN4drop17h561a92a322b53d51E,__ZN40__LT_alloc__raw_vec__RawVec_LT_T_GT__GT_6double17h144989e1108dc05fE,b6,b6,b6,b6,b6,__ZN40__LT_alloc__raw_vec__RawVec_LT_T_GT__GT_6double17he78dc10a992efc57E,b6,b6,b6,__ZN3std9panicking11begin_panic17hbc936d221268e19aE,b6,__ZN40__LT_alloc__raw_vec__RawVec_LT_T_GT__GT_6double17h05aca6644cf4ad69E,b6
,b6,b6,b6,b6,__ZN40__LT_alloc__raw_vec__RawVec_LT_T_GT__GT_6double17h41a8210a826843baE,b6,b6,__ZN40__LT_alloc__raw_vec__RawVec_LT_T_GT__GT_6double17h3d9f6f346395e52bE,b6,__ZN4drop17h24a762a076737f65E,__ZN49__LT_nphysics2d__world__world__World_LT_N_GT__GT_4step17h00dda251ba14dfb6E,b6,b6,b6,b6,b6,b6,__ZN40__LT_alloc__raw_vec__RawVec_LT_T_GT__GT_6double17h1f4ae0daeff98f24E,__ZN4core6result13unwrap_failed17hc81d4112c1ba050aE,b6,b6,b6,__ZN3std11collections4hash3map11RandomState3new4KEYS6__init17h409badf47e674127E,__ZN4drop17h11ff7f052d90b889E,__ZN100__LT_ncollide_pipeline__narrow_phase__default_narrow_phase__DefaultNarrowPhase_LT_P_C__u20_M_GT__GT_3new17hba0b1a74a6beb08fE,__ZN40__LT_alloc__raw_vec__RawVec_LT_T_GT__GT_6double17hbb3a08f9749d2fc0E,__ZN4drop17h5e5a688e2f4a74b7E,__ZN40__LT_alloc__raw_vec__RawVec_LT_T_GT__GT_6double17h5ffc3924c407ac6aE,__ZN4drop17h135bc4bdb783be3aE,__ZN4drop17hc8545853bac74c2bE
,__ZN4drop17h3bddf975cc648b2fE,__ZN4drop17h156bdbf342ee89b6E,__ZN4drop17h2f30a22cc85f591fE,__ZN12physics_test8interval11rust_caller17hed3f8a5d0fff365dE,b6,__ZN40__LT_alloc__raw_vec__RawVec_LT_T_GT__GT_6double17h82c63187bd3a6fdbE,__ZN4drop17hab695909c806641cE,b6,__ZN4drop17h95af9e8f1e83bb49E,b6,b6,b6,b6,b6,__ZN4drop17h8e8e44eece6d63d5E,__ZN4drop17h4764338a7a20a600E,__ZN4core6result13unwrap_failed17hecfe8d3f25d6ccebE,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,__ZN4core6result13unwrap_failed17h763fb6faff9dd786E_1376,b6,b6,__ZN40__LT_alloc__raw_vec__RawVec_LT_T_GT__GT_6double17h1f4ae0daeff98f24E_1345,__ZN40__LT_alloc__raw_vec__RawVec_LT_T_GT__GT_6double17h00ec6d54a8cde794E,b6,b6,b6,b6,b6,__ZN40__LT_alloc__raw_vec__RawVec_LT_T_GT__GT_6double17he78dc10a992efc57E_1100,__ZN4drop17h0083edab17cadb7eE,__ZN40__LT_alloc__raw_vec__RawVec_LT_T_GT__GT_6double17h5720ff43fb8fbbacE,b6,b6,__ZN4core6result13unwrap_failed17h3b84dedba3e3d939E_1325,b6,b6,b6,b6,b6,b6,b6,__ZN3std10sys_common4util10dumb_print17h0ae9c5f64360bf93E,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,__ZN4core6result13unwrap_failed17hb8469db32514b7f1E_1344,b6,b6,b6,b6,b6,b6,b6,b6,_cleanup_387,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6];
var FUNCTION_TABLE_vii = [b7,b7,__ZN12physics_test4main28__u7b__u7b_closure_u7d__u7d_17hc0196a83acba1e3cE,__ZN4core3ops6FnOnce9call_once17h3929904ffbef0c3cE,b7,__ZN12physics_test4main28__u7b__u7b_closure_u7d__u7d_17hf927d76feac1da6bE,__ZN4core3ops6FnOnce9call_once17h2ed3ece209af4df9E,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,__ZN272__LT_ncollide_pipeline__narrow_phase__contact_generator__composite_shape_shape_contact_generator__ShapeCompositeShapeContactGenerator_LT_P_C__u20_M_GT__u20_as_u20_ncollide_pipeline__narrow_phase__contact_generator__contact_generator__ContactGenerator_LT_P_C__u20_M_GT__GT_8contacts17h8932e11ded7f3603E,b7,b7,b7,__ZN272__LT_ncollide_pipeline__narrow_phase__contact_generator__composite_shape_shape_contact_generator__CompositeShapeShapeContactGenerator_LT_P_C__u20_M_GT__u20_as_u20_ncollide_pipeline__narrow_phase__contact_generator__contact_generator__ContactGenerator_LT_P_C__u20_M_GT__GT_8contacts17hdba1dd5ebcce8e95E,b7,b7,b7,__ZN284__LT_ncollide_pipeline__narrow_phase__contact_generator__support_map_support_map_contact_generator__SupportMapSupportMapContactGenerator_LT_P_C__u20_M_C__u20_S_GT__u20_as_u20_ncollide_pipeline__narrow_phase__contact_generator__contact_generator__ContactGenerator_LT_P_C__u20_M_GT__GT_8contacts17hcdfb7797ed951d1dE,b7,b7,b7,__ZN274__LT_ncollide_pipeline__narrow_phase__contact_generator__one_shot_contact_manifold_generator__OneShotContactManifoldGenerator_LT_P_C__u20_M_C__u20_CD_GT__u20_as_u20_ncollide_pipeline__narrow_phase__contact_generator__contact_generator__ContactGenerator_LT_P_C__u20_M_GT__GT_8contacts17h689fd92b674ce26bE,b7,b7,b7,__ZN264__LT_ncollide_pipeline__narrow_phase__contact_generator__plane_support_map_contact_generator__SupportMapPlaneContactGenerator_LT_P_C__u20_M_GT__u20_as_u20_ncollide_pipeline__narrow_phase__contact_generator__contact_generator__ContactGenerator_LT_P_C__u20_M_GT__GT_8contacts17h8a0af12493b582daE,b7,b7,b7,__ZN274__LT_ncollide_pipeline__narrow_phase__contact_generator__one_shot_contact_manifold_generator__OneShotContactManifoldGenerator_LT_P_C__u20_M_C__u20_CD_GT__u20_as_u20_ncollide_pipeline__narrow_phase__contact_generator__contact_generator__ContactGenerator_LT_P_C__u20_M_GT__GT_8contacts17h0c99c2fda420fd2eE
,b7,b7,b7,__ZN264__LT_ncollide_pipeline__narrow_phase__contact_generator__plane_support_map_contact_generator__PlaneSupportMapContactGenerator_LT_P_C__u20_M_GT__u20_as_u20_ncollide_pipeline__narrow_phase__contact_generator__contact_generator__ContactGenerator_LT_P_C__u20_M_GT__GT_8contacts17h36061961838bd74aE,b7,b7,b7,__ZN274__LT_ncollide_pipeline__narrow_phase__contact_generator__one_shot_contact_manifold_generator__OneShotContactManifoldGenerator_LT_P_C__u20_M_C__u20_CD_GT__u20_as_u20_ncollide_pipeline__narrow_phase__contact_generator__contact_generator__ContactGenerator_LT_P_C__u20_M_GT__GT_8contacts17hb68f28ff0584afa2E,b7,b7,b7,__ZN249__LT_ncollide_pipeline__narrow_phase__contact_generator__ball_ball_contact_generator__BallBallContactGenerator_LT_P_C__u20_M_GT__u20_as_u20_ncollide_pipeline__narrow_phase__contact_generator__contact_generator__ContactGenerator_LT_P_C__u20_M_GT__GT_8contacts17h3a62f1546347cf14E,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,__ZN39__LT_F_u20_as_u20_lifeguard__Supply_GT_3get17hde2ca2719c6fc1caE,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,__ZN17ncollide_geometry5shape10shape_impl180__LT_impl_u20_ncollide_geometry__shape__shape__Shape_LT_P_C__u20_M_GT__u20_for_u20_ncollide_geometry__shape__plane__Plane_LT__LT_P_u20_as_u20_ncollide_math__Point_GT___Vect_GT__GT_11as_ray_cast17hc2f9b56ca33f5451E,__ZN17ncollide_geometry5shape10shape_impl180__LT_impl_u20_ncollide_geometry__shape__shape__Shape_LT_P_C__u20_M_GT__u20_for_u20_ncollide_geometry__shape__plane__Plane_LT__LT_P_u20_as_u20_ncollide_math__Point_GT___Vect_GT__GT_14as_point_query17h03a576416b91e76eE,__ZN17ncollide_geometry5shape5shape5Shape14as_support_map17h3d8a28d854f15ef4E,__ZN17ncollide_geometry5shape5shape5Shape18as_composite_shape17h157be3161b1da986E,b7,b7,b7,b7,b7,b7,__ZN17ncollide_geometry5shape10shape_impl227__LT_impl_u20_ncollide_geometry__shape__shape__Shape_LT_P_C__u20_M_GT__u20_for_u20_ncollide_geometry__shape__ball__Ball_LT__LT__LT_P_u20_as_u20_ncollide_math__Point_GT___Vect_u20_as_u20_ncollide_math__Vector_GT___Scalar_GT__GT_11as_ray_cast17ha3f802fb7840f1d6E
,__ZN17ncollide_geometry5shape10shape_impl227__LT_impl_u20_ncollide_geometry__shape__shape__Shape_LT_P_C__u20_M_GT__u20_for_u20_ncollide_geometry__shape__ball__Ball_LT__LT__LT_P_u20_as_u20_ncollide_math__Point_GT___Vect_u20_as_u20_ncollide_math__Vector_GT___Scalar_GT__GT_14as_point_query17h7f482c22ac5242daE,__ZN17ncollide_geometry5shape10shape_impl227__LT_impl_u20_ncollide_geometry__shape__shape__Shape_LT_P_C__u20_M_GT__u20_for_u20_ncollide_geometry__shape__ball__Ball_LT__LT__LT_P_u20_as_u20_ncollide_math__Point_GT___Vect_u20_as_u20_ncollide_math__Vector_GT___Scalar_GT__GT_14as_support_map17h9c06e6c627b76332E,__ZN17ncollide_geometry5shape5shape5Shape18as_composite_shape17h67bac9b81535845aE,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,__ZN196__LT_ncollide_pipeline__broad_phase__dbvt_broad_phase__DBVTBroadPhase_LT_P_C__u20_BV_C__u20_T_GT__u20_as_u20_ncollide_pipeline__broad_phase__broad_phase__BroadPhase_LT_P_C__u20_BV_C__u20_T_GT__GT_15deferred_remove17hf9fd181c0ba3613bE,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,__ZN3std2io5impls69__LT_impl_u20_std__io__Write_u20_for_u20__RF__u27_a_u20_mut_u20_W_GT_5flush17hc1e0b2b020719344E,b7,b7,b7,b7,b7,b7,b7,__ZN223__LT__LT_Box_LT_std__error__Error_u20__u2b__u20_Send_u20__u2b__u20_Sync_u20__u2b__u20__u27_static_GT__u20_as_u20_core__convert__From_LT_collections__string__String_GT__GT___from__StringError_u20_as_u20_std__error__Error_GT_11description17h03ad494226a58839E,__ZN3std5error5Error5cause17h20d7ce7d6d148f1eE,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,__ZN4core4iter8iterator8Iterator7collect17h06a0762198dfaef4E,b7,b7,b7,b7,b7,b7,b7,__ZN4core6option13expect_failed17hc1eeb48c0c4a1725E,b7,b7,b7,__ZN4core4iter8iterator8Iterator7collect17h86545e166188adc2E,b7,b7,__ZN4core5slice22slice_index_order_fail17h0bf73460ffe8be02E,b7,b7,__ZN84__LT_ncollide_geometry__partitioning__dbvt__DBVTNode_LT_P_C__u20_B_C__u20_BV_GT__GT_5visit17h8abbbd72b9c7d0faE,b7,__ZN84__LT_ncollide_geometry__partitioning__dbvt__DBVTNode_LT_P_C__u20_B_C__u20_BV_GT__GT_5visit17hf41a9b4139a47adcE,b7,__ZN84__LT_ncollide_geometry__partitioning__dbvt__DBVTNode_LT_P_C__u20_B_C__u20_BV_GT__GT_5visit17h613dc86990116ad0E,b7,b7,__ZN80__LT_ncollide_geometry__partitioning__dbvt__DBVT_LT_P_C__u20_B_C__u20_BV_GT__GT_6insert17hdfd54d5ead3fd847E,b7,__ZN80__LT_ncollide_geometry__partitioning__dbvt__DBVT_LT_P_C__u20_B_C__u20_BV_GT__GT_6remove17h870bd997ceaebb8cE
,b7,b7,b7,b7,__ZN78__LT_nphysics2d__detection__activation_manager__ActivationManager_LT_N_GT__GT_17deferred_activate17h46b0bef2bcefa161E,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,__ZN66__LT_std__collections__hash__table__RawTable_LT_K_C__u20_V_GT__GT_3new17hac8ab5db00a555aeE,b7,__ZN3std9panicking15begin_panic_fmt17had2218825161cb57E,b7,b7,b7,__ZN4core5slice20slice_index_len_fail17hed923256c072a803E,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,__ZN39__LT_collections__vec__Vec_LT_T_GT__GT_7reserve17h36095f9d9422ab2dE,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,__ZN84__LT_core__iter__Map_LT_I_C__u20_F_GT__u20_as_u20_core__iter__iterator__Iterator_GT_4next17ha0172546821faad9E,b7,b7,__ZN3std4sync4once4Once9call_once28__u7b__u7b_closure_u7d__u7d_17haa0fddea2e05899dE,__ZN59__LT_std__sync__once__Finish_u20_as_u20_core__ops__Drop_GT_4drop17hd7d9ae0679273349E,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,__ZN67__LT_std__rand__reader__ReaderRng_LT_R_GT__u20_as_u20_rand__Rng_GT_10fill_bytes17h3dda534b777619b1E,b7,b7,b7,b7,b7,__ZN3std9panicking11begin_panic17hbc936d221268e19aE_1331,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,__ZN39__LT_collections__vec__Vec_LT_T_GT__GT_7reserve17h36095f9d9422ab2dE_1492,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7];
var FUNCTION_TABLE_ii = [b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,__ZN272__LT_ncollide_pipeline__narrow_phase__contact_generator__composite_shape_shape_contact_generator__ShapeCompositeShapeContactGenerator_LT_P_C__u20_M_GT__u20_as_u20_ncollide_pipeline__narrow_phase__contact_generator__contact_generator__ContactGenerator_LT_P_C__u20_M_GT__GT_12num_contacts17h85886daf96040c6fE,b8,b8,b8,__ZN272__LT_ncollide_pipeline__narrow_phase__contact_generator__composite_shape_shape_contact_generator__CompositeShapeShapeContactGenerator_LT_P_C__u20_M_GT__u20_as_u20_ncollide_pipeline__narrow_phase__contact_generator__contact_generator__ContactGenerator_LT_P_C__u20_M_GT__GT_12num_contacts17hf27a5be103109ff9E,b8,b8,b8,__ZN284__LT_ncollide_pipeline__narrow_phase__contact_generator__support_map_support_map_contact_generator__SupportMapSupportMapContactGenerator_LT_P_C__u20_M_C__u20_S_GT__u20_as_u20_ncollide_pipeline__narrow_phase__contact_generator__contact_generator__ContactGenerator_LT_P_C__u20_M_GT__GT_12num_contacts17haf6ba2e8c2be061eE,b8,b8,b8,__ZN274__LT_ncollide_pipeline__narrow_phase__contact_generator__one_shot_contact_manifold_generator__OneShotContactManifoldGenerator_LT_P_C__u20_M_C__u20_CD_GT__u20_as_u20_ncollide_pipeline__narrow_phase__contact_generator__contact_generator__ContactGenerator_LT_P_C__u20_M_GT__GT_12num_contacts17hf68d3f062aff4effE,b8,b8,b8,__ZN264__LT_ncollide_pipeline__narrow_phase__contact_generator__plane_support_map_contact_generator__SupportMapPlaneContactGenerator_LT_P_C__u20_M_GT__u20_as_u20_ncollide_pipeline__narrow_phase__contact_generator__contact_generator__ContactGenerator_LT_P_C__u20_M_GT__GT_12num_contacts17hf3f7900007ba9c4fE,b8,b8,b8,__ZN274__LT_ncollide_pipeline__narrow_phase__contact_generator__one_shot_contact_manifold_generator__OneShotContactManifoldGenerator_LT_P_C__u20_M_C__u20_CD_GT__u20_as_u20_ncollide_pipeline__narrow_phase__contact_generator__contact_generator__ContactGenerator_LT_P_C__u20_M_GT__GT_12num_contacts17hea3c6781d6b08032E,b8
,b8,b8,__ZN264__LT_ncollide_pipeline__narrow_phase__contact_generator__plane_support_map_contact_generator__PlaneSupportMapContactGenerator_LT_P_C__u20_M_GT__u20_as_u20_ncollide_pipeline__narrow_phase__contact_generator__contact_generator__ContactGenerator_LT_P_C__u20_M_GT__GT_12num_contacts17h68af39e0c4e527d9E,b8,b8,b8,__ZN274__LT_ncollide_pipeline__narrow_phase__contact_generator__one_shot_contact_manifold_generator__OneShotContactManifoldGenerator_LT_P_C__u20_M_C__u20_CD_GT__u20_as_u20_ncollide_pipeline__narrow_phase__contact_generator__contact_generator__ContactGenerator_LT_P_C__u20_M_GT__GT_12num_contacts17hb4fb3768a115fab2E,b8,b8,b8,__ZN249__LT_ncollide_pipeline__narrow_phase__contact_generator__ball_ball_contact_generator__BallBallContactGenerator_LT_P_C__u20_M_GT__u20_as_u20_ncollide_pipeline__narrow_phase__contact_generator__contact_generator__ContactGenerator_LT_P_C__u20_M_GT__GT_12num_contacts17h5f45e15636d4b4ccE,b8,b8,b8,__ZN278__LT_ncollide_pipeline__narrow_phase__proximity_detector__composite_shape_shape_proximity_detector__ShapeCompositeShapeProximityDetector_LT_P_C__u20_M_GT__u20_as_u20_ncollide_pipeline__narrow_phase__proximity_detector__proximity_detector__ProximityDetector_LT_P_C__u20_M_GT__GT_9proximity17hec59105d43236641E,b8,b8,__ZN278__LT_ncollide_pipeline__narrow_phase__proximity_detector__composite_shape_shape_proximity_detector__CompositeShapeShapeProximityDetector_LT_P_C__u20_M_GT__u20_as_u20_ncollide_pipeline__narrow_phase__proximity_detector__proximity_detector__ProximityDetector_LT_P_C__u20_M_GT__GT_9proximity17h05eda5c8a130f01fE,b8,b8,__ZN290__LT_ncollide_pipeline__narrow_phase__proximity_detector__support_map_support_map_proximity_detector__SupportMapSupportMapProximityDetector_LT_P_C__u20_M_C__u20_S_GT__u20_as_u20_ncollide_pipeline__narrow_phase__proximity_detector__proximity_detector__ProximityDetector_LT_P_C__u20_M_GT__GT_9proximity17hc6647beaedcfb3e8E,b8,__ZN270__LT_ncollide_pipeline__narrow_phase__proximity_detector__plane_support_map_proximity_detector__SupportMapPlaneProximityDetector_LT_P_C__u20_M_GT__u20_as_u20_ncollide_pipeline__narrow_phase__proximity_detector__proximity_detector__ProximityDetector_LT_P_C__u20_M_GT__GT_9proximity17hf54513e1edd9e62fE,b8,__ZN270__LT_ncollide_pipeline__narrow_phase__proximity_detector__plane_support_map_proximity_detector__PlaneSupportMapProximityDetector_LT_P_C__u20_M_GT__u20_as_u20_ncollide_pipeline__narrow_phase__proximity_detector__proximity_detector__ProximityDetector_LT_P_C__u20_M_GT__GT_9proximity17hd78ff259c560b888E,b8,__ZN255__LT_ncollide_pipeline__narrow_phase__proximity_detector__ball_ball_proximity_detector__BallBallProximityDetector_LT_P_C__u20_M_GT__u20_as_u20_ncollide_pipeline__narrow_phase__proximity_detector__proximity_detector__ProximityDetector_LT_P_C__u20_M_GT__GT_9proximity17hc2babea59de41fb0E,b8,b8,b8
,b8,b8,__ZN36__LT_T_u20_as_u20_core__any__Any_GT_11get_type_id17hd662cb2ea6aefd75E,b8,__ZN36__LT_T_u20_as_u20_core__any__Any_GT_11get_type_id17h1e7f45ebb48b193fE,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,__ZN17ncollide_geometry5shape5shape5Shape14is_support_map17h66ecdc5eb65b6e11E,__ZN17ncollide_geometry5shape5shape5Shape18is_composite_shape17h5187135d6307b037E,__ZN36__LT_T_u20_as_u20_core__any__Any_GT_11get_type_id17hab3c7eaaa4008573E,__ZN64__LT_T_u20_as_u20_ncollide_geometry__shape__shape__GetTypeId_GT_7type_id17he8b0f34b9333fc88E,b8,b8,b8
,b8,b8,b8,__ZN17ncollide_geometry5shape10shape_impl227__LT_impl_u20_ncollide_geometry__shape__shape__Shape_LT_P_C__u20_M_GT__u20_for_u20_ncollide_geometry__shape__ball__Ball_LT__LT__LT_P_u20_as_u20_ncollide_math__Point_GT___Vect_u20_as_u20_ncollide_math__Vector_GT___Scalar_GT__GT_14is_support_map17h1d23661126402770E,__ZN17ncollide_geometry5shape5shape5Shape18is_composite_shape17h7b4e76f2c8fc5c20E,__ZN36__LT_T_u20_as_u20_core__any__Any_GT_11get_type_id17hce87e6ca1108ecbdE,__ZN64__LT_T_u20_as_u20_ncollide_geometry__shape__shape__GetTypeId_GT_7type_id17h615a9e94ede580dcE,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,__ZN36__LT_T_u20_as_u20_core__any__Any_GT_11get_type_id17hd662cb2ea6aefd75E_1231,b8,b8,b8,b8,b8,__ZN36__LT_T_u20_as_u20_core__any__Any_GT_11get_type_id17h1e7f45ebb48b193fE_1351,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,__ZN3std5error5Error7type_id17h7a79a70c71c50ee2E,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,__ZN36__LT_T_u20_as_u20_core__any__Any_GT_11get_type_id17hd662cb2ea6aefd75E_1357,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,___stdio_close,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,__ZN72__LT_std__collections__hash__map__HashMap_LT_K_C__u20_V_C__u20_S_GT__GT_9make_hash17h6044c6c9d787b3adE,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,__ZN3std10sys_common12thread_local9StaticKey9lazy_init17hfe76ff6b56e2d562E,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8];
var FUNCTION_TABLE_viiid = [b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,__ZN59__LT_nphysics2d__object__rigid_body__RigidBody_LT_N_GT__GT_3new17h99e88e4bbce651f1E,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9];
var FUNCTION_TABLE_viii = [b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,__ZN197__LT_ncollide_pipeline__narrow_phase__default_narrow_phase__DefaultNarrowPhase_LT_P_C__u20_M_GT__u20_as_u20_ncollide_pipeline__narrow_phase__narrow_phase__NarrowPhase_LT_P_C__u20_M_C__u20_T_GT__GT_13contact_pairs17hcc15cfdf13274050E,__ZN197__LT_ncollide_pipeline__narrow_phase__default_narrow_phase__DefaultNarrowPhase_LT_P_C__u20_M_GT__u20_as_u20_ncollide_pipeline__narrow_phase__narrow_phase__NarrowPhase_LT_P_C__u20_M_C__u20_T_GT__GT_15proximity_pairs17hd8d2320984a14a82E,b10,b10,b10,__ZN17ncollide_geometry5shape10shape_impl180__LT_impl_u20_ncollide_geometry__shape__shape__Shape_LT_P_C__u20_M_GT__u20_for_u20_ncollide_geometry__shape__plane__Plane_LT__LT_P_u20_as_u20_ncollide_math__Point_GT___Vect_GT__GT_4aabb17h833bac5df2483fd2E,__ZN17ncollide_geometry5shape10shape_impl180__LT_impl_u20_ncollide_geometry__shape__shape__Shape_LT_P_C__u20_M_GT__u20_for_u20_ncollide_geometry__shape__plane__Plane_LT__LT_P_u20_as_u20_ncollide_math__Point_GT___Vect_GT__GT_15bounding_sphere17h46da2f4fa292042bE,b10,b10,b10,b10,b10,b10,b10,b10,__ZN17ncollide_geometry5shape10shape_impl227__LT_impl_u20_ncollide_geometry__shape__shape__Shape_LT_P_C__u20_M_GT__u20_for_u20_ncollide_geometry__shape__ball__Ball_LT__LT__LT_P_u20_as_u20_ncollide_math__Point_GT___Vect_u20_as_u20_ncollide_math__Vector_GT___Scalar_GT__GT_4aabb17h7f9595c4d6c2be12E,__ZN17ncollide_geometry5shape10shape_impl227__LT_impl_u20_ncollide_geometry__shape__shape__Shape_LT_P_C__u20_M_GT__u20_for_u20_ncollide_geometry__shape__ball__Ball_LT__LT__LT_P_u20_as_u20_ncollide_math__Point_GT___Vect_u20_as_u20_ncollide_math__Vector_GT___Scalar_GT__GT_15bounding_sphere17hcecce46e5b7234c4E,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,__ZN317__LT_nphysics2d__world__world__ObjectActivationOnContactHandler_LT_N_GT__u20_as_u20_ncollide_pipeline__narrow_phase__contact_signal__ContactHandler_LT_nalgebra__structs__point__Point2_LT_N_GT__C__u20_nalgebra__structs__isometry__Isometry2_LT_N_GT__C__u20_nphysics2d__object__world_object__WorldObject_LT_N_GT__GT__GT_22handle_contact_stopped17h24f0f91feadf4741E,b10,b10,b10,b10,__ZN196__LT_ncollide_pipeline__broad_phase__dbvt_broad_phase__DBVTBroadPhase_LT_P_C__u20_BV_C__u20_T_GT__u20_as_u20_ncollide_pipeline__broad_phase__broad_phase__BroadPhase_LT_P_C__u20_BV_C__u20_T_GT__GT_28deferred_set_bounding_volume17he8085a76ae8c8ed0E,b10,b10,__ZN196__LT_ncollide_pipeline__broad_phase__dbvt_broad_phase__DBVTBroadPhase_LT_P_C__u20_BV_C__u20_T_GT__u20_as_u20_ncollide_pipeline__broad_phase__broad_phase__BroadPhase_LT_P_C__u20_BV_C__u20_T_GT__GT_34interferences_with_bounding_volume17h5cc11f9d6f2415e3E,__ZN196__LT_ncollide_pipeline__broad_phase__dbvt_broad_phase__DBVTBroadPhase_LT_P_C__u20_BV_C__u20_T_GT__u20_as_u20_ncollide_pipeline__broad_phase__broad_phase__BroadPhase_LT_P_C__u20_BV_C__u20_T_GT__GT_22interferences_with_ray17he3480c968536d3f2E,__ZN196__LT_ncollide_pipeline__broad_phase__dbvt_broad_phase__DBVTBroadPhase_LT_P_C__u20_BV_C__u20_T_GT__u20_as_u20_ncollide_pipeline__broad_phase__broad_phase__BroadPhase_LT_P_C__u20_BV_C__u20_T_GT__GT_24interferences_with_point17h6b57069de7a9c17aE,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,__ZN3std2io5impls69__LT_impl_u20_std__io__Write_u20_for_u20__RF__u27_a_u20_mut_u20_W_GT_9write_fmt17heaa566350b27752fE,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,__ZN3std9panicking11begin_panic17h9936a195de5ffc4dE,b10,b10,__ZN54__LT_collections__binary_heap__BinaryHeap_LT_T_GT__GT_7sift_up17h0ad6cf0e409ee868E,b10,b10,b10,b10,b10,b10,__ZN72__LT_std__collections__hash__map__HashMap_LT_K_C__u20_V_C__u20_S_GT__GT_5entry17h95d084aa83ca0906E,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,__ZN93__LT_ncollide_pipeline__world__collision_world__CollisionWorld_LT_P_C__u20_M_C__u20_T_GT__GT_21deferred_set_position17h5fdf89d6c12e5f55E,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,__ZN227__LT_nphysics2d__resolution__constraint__accumulated_impulse_solver__AccumulatedImpulseSolver_LT_N_GT__u20_as_u20_nphysics2d__resolution__solver__Solver_LT_N_C__u20_nphysics2d__detection__constraint__Constraint_LT_N_GT__GT__GT_5solve14set_body_index17h661cff27b1086e5cE,b10,__ZN10nphysics2d10resolution10constraint26accumulated_impulse_solver13resize_buffer17h4d2beb72afd023cfE,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,__ZN11webplatform8HtmlNode9set_style17hac26dda67a9d1b10E,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,__ZN11webplatform11rust_caller17h7577c6095df88f42E,b10,b10,__ZN11webplatform11rust_caller17hd6172d8c9c3ba161E,b10,b10,b10,b10,b10,__ZN3std2io5impls69__LT_impl_u20_std__io__Write_u20_for_u20__RF__u27_a_u20_mut_u20_W_GT_9write_fmt17h302a2c53740e0b37E,b10,b10,b10,b10,b10,b10,b10,b10,__ZN3std9panicking11begin_panic17h9936a195de5ffc4dE_1326,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,__ZN3std3ffi5c_str7CString3new17h89a5eaa1ae2ad9beE,__ZN3std3ffi5c_str104__LT_impl_u20_core__convert__From_LT_std__ffi__c_str__NulError_GT__u20_for_u20_std__io__error__Error_GT_4from17hdab91ffea104e0edE,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,__ZN3std9panicking12default_hook28__u7b__u7b_closure_u7d__u7d_17h49d7d3fe3900d914E,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10];
var FUNCTION_TABLE_iidd = [b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,__ZN88__LT_ncollide_geometry__partitioning__dbvt__DBVTInternal_LT_P_C__u20_B_C__u20_BV_GT__GT_18is_closest_to_left17hd451ccc44bd1c18dE,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11];
var FUNCTION_TABLE_v = [b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,__ZN5alloc3oom19default_oom_handler17h6c914191f9c07ce5E,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,__ZN5alloc3oom3oom17hb253cf665793f59eE,b12,__ZN4core6result13unwrap_failed17he96585155b596c01E,b12,b12,b12,b12,b12,b12,b12,b12,__ZN4core6result13unwrap_failed17h0dc63b200336bf84E,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,__ZN11webplatform9leavemebe17hf7606b14a8babc2cE,__ZN7ndarray11arraytraits19array_out_of_bounds17h9caedf25347ffe03E,b12,b12,b12,b12,b12,b12,b12,__ZN3std3sys4init11oom_handler17h28daa4c1ee96733cE,b12,b12,__ZN4core6result13unwrap_failed17h0dc63b200336bf84E_1341,b12,__ZN4core6result13unwrap_failed17he96585155b596c01E_1334,b12,__ZN12physics_test4main17h4f69150419e136eaE,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12];
var FUNCTION_TABLE_viiiiiiiii = [b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,__ZN17ncollide_geometry5query23time_of_impact_internal19shape_against_shape19shape_against_shape17h7395edb4f4a16d88E,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,__ZN10nphysics2d10resolution10constraint29projected_gauss_seidel_solver28projected_gauss_seidel_solve17h16d47c9c99820278E,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13];
var FUNCTION_TABLE_viiii = [b14,b14,b14,b14,b14,b14,b14,b14,__ZN155__LT_ncollide_pipeline__narrow_phase__contact_generator__composite_shape_shape_contact_generator__CompositeShapeShapeContactGenerator_LT_P_C__u20_M_GT__GT_9do_update28__u7b__u7b_closure_u7d__u7d_28__u7b__u7b_closure_u7d__u7d_17h915e8b12cbfc71d7E,__ZN4core3ops6FnOnce9call_once17h8b02f948a131fd6cE,__ZN155__LT_ncollide_pipeline__narrow_phase__contact_generator__composite_shape_shape_contact_generator__CompositeShapeShapeContactGenerator_LT_P_C__u20_M_GT__GT_9do_update28__u7b__u7b_closure_u7d__u7d_17h109faf5f35e89f2dE,__ZN4core3ops6FnOnce9call_once17h42ae18aa328e973dE,__ZN158__LT_ncollide_pipeline__narrow_phase__proximity_detector__composite_shape_shape_proximity_detector__CompositeShapeShapeProximityDetector_LT_P_C__u20_M_GT__GT_9do_update28__u7b__u7b_closure_u7d__u7d_17hc9b4327fb79d2f85E,__ZN4core3ops6FnOnce9call_once17ha755e5aaccf250e5E,__ZN158__LT_ncollide_pipeline__narrow_phase__proximity_detector__composite_shape_shape_proximity_detector__CompositeShapeShapeProximityDetector_LT_P_C__u20_M_GT__GT_9do_update28__u7b__u7b_closure_u7d__u7d_17ha887088640c0decfE,__ZN4core3ops6FnOnce9call_once17h3b6dd91b7af942bbE,__ZN158__LT_ncollide_pipeline__narrow_phase__proximity_detector__composite_shape_shape_proximity_detector__CompositeShapeShapeProximityDetector_LT_P_C__u20_M_GT__GT_9do_update28__u7b__u7b_closure_u7d__u7d_28__u7b__u7b_closure_u7d__u7d_17h0216b7e993dddb0bE,__ZN4core3ops6FnOnce9call_once17hf9fe9ab36a54eb32E,__ZN158__LT_ncollide_pipeline__narrow_phase__proximity_detector__composite_shape_shape_proximity_detector__CompositeShapeShapeProximityDetector_LT_P_C__u20_M_GT__GT_9do_update28__u7b__u7b_closure_u7d__u7d_17h9a9b9a5e39c2a85bE,__ZN4core3ops6FnOnce9call_once17hed46e902f423fd92E,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,__ZN228__LT_ncollide_geometry__shape__ball__Ball_LT__LT__LT_P_u20_as_u20_ncollide_math__Point_GT___Vect_u20_as_u20_ncollide_math__Vector_GT___Scalar_GT__u20_as_u20_ncollide_geometry__shape__support_map__SupportMap_LT_P_C__u20_M_GT__GT_13support_point17h5b11da2fdfab270cE,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,__ZN413__LT_ncollide_geometry__query__time_of_impact_internal__composite_shape_against_shape__CompositeShapeAgainstAnyTOICostFn_LT__u27_a_C__u20_P_C__u20_M_C__u20_G1_GT__u20_as_u20_ncollide_geometry__partitioning__bvt_cost_fn__BVTCostFn_LT__LT__LT_P_u20_as_u20_ncollide_math__Point_GT___Vect_u20_as_u20_ncollide_math__Vector_GT___Scalar_C__u20_usize_C__u20_ncollide_geometry__bounding_volume__aabb__AABB_LT_P_GT__GT__GT_14compute_b_cost28__u7b__u7b_closure_u7d__u7d_17h0250216dcf5df515E,__ZN4core3ops6FnOnce9call_once17h01a266083a3fadf5E,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,__ZN93__LT_ncollide_pipeline__world__collision_world__CollisionWorld_LT_P_C__u20_M_C__u20_T_GT__GT_19perform_broad_phase28__u7b__u7b_closure_u7d__u7d_17h7702b17a9e6bc1c5E,__ZN4core3ops6FnOnce9call_once17hdc56eaabcc8f2270E,b14,__ZN317__LT_nphysics2d__world__world__ObjectActivationOnContactHandler_LT_N_GT__u20_as_u20_ncollide_pipeline__narrow_phase__contact_signal__ContactHandler_LT_nalgebra__structs__point__Point2_LT_N_GT__C__u20_nalgebra__structs__isometry__Isometry2_LT_N_GT__C__u20_nphysics2d__object__world_object__WorldObject_LT_N_GT__GT__GT_22handle_contact_started17h8a33f8c3ce45c501E,b14,b14,b14,__ZN196__LT_ncollide_pipeline__broad_phase__dbvt_broad_phase__DBVTBroadPhase_LT_P_C__u20_BV_C__u20_T_GT__u20_as_u20_ncollide_pipeline__broad_phase__broad_phase__BroadPhase_LT_P_C__u20_BV_C__u20_T_GT__GT_12deferred_add17he324559ad8776310E,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,__ZN3std2io5impls69__LT_impl_u20_std__io__Write_u20_for_u20__RF__u27_a_u20_mut_u20_W_GT_5write17hc0abbf55cfec7d40E,b14,__ZN3std2io5impls69__LT_impl_u20_std__io__Write_u20_for_u20__RF__u27_a_u20_mut_u20_W_GT_9write_all17h5d2f321aedfc67e8E,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,__ZN78__LT_nphysics2d__detection__activation_manager__ActivationManager_LT_N_GT__GT_6update10make_union17h220be54fd56bf6b5E,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,__ZN4core9panicking9panic_fmt17hfa35599633a0afa2E,b14,b14,b14,b14,__ZN55__LT_ncollide_utils__data__vec_map__VecMap_LT_V_GT__GT_6insert17hdb87c82b2b7a7ff7E,b14,b14,__ZN11webplatform8Document13element_query17h56233c3923e1d99aE,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,__ZN10pace_files6common20write_general_header17h8948c8ae239bb6a1E,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14];
var FUNCTION_TABLE_iii = [b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,__ZN4core3fmt5Write10write_char17h6c9d4222bb591802E,__ZN4core3fmt5Write9write_fmt17h28aa3235621c575cE,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,__ZN96__LT_core__fmt__Write__write_fmt__Adapter_LT__u27_a_C__u20_T_GT__u20_as_u20_core__fmt__Write_GT_10write_char17hed751f42a19fae65E,__ZN96__LT_core__fmt__Write__write_fmt__Adapter_LT__u27_a_C__u20_T_GT__u20_as_u20_core__fmt__Write_GT_9write_fmt17hc17bbde3afb5b338E,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,__ZN53__LT__RF__u27_a_u20_T_u20_as_u20_core__fmt__Debug_GT_3fmt17hab0151617bf69f5dE,__ZN53__LT__RF__u27_a_u20_T_u20_as_u20_core__fmt__Debug_GT_3fmt17h7f32dda0d0539f35E,__ZN53__LT__RF__u27_a_u20_T_u20_as_u20_core__fmt__Debug_GT_3fmt17h5c0e9ca3a4b8aea6E,__ZN53__LT__RF__u27_a_u20_T_u20_as_u20_core__fmt__Debug_GT_3fmt17h13b7344db08713a1E,b15
,b15,b15,b15,b15,__ZN96__LT_core__fmt__Write__write_fmt__Adapter_LT__u27_a_C__u20_T_GT__u20_as_u20_core__fmt__Write_GT_10write_char17h5c4b02d4e359c914E_1353,__ZN96__LT_core__fmt__Write__write_fmt__Adapter_LT__u27_a_C__u20_T_GT__u20_as_u20_core__fmt__Write_GT_9write_fmt17h760aafe66d97fe8aE_1354,b15,b15,b15,b15,b15,b15,b15,b15,b15,__ZN4core3fmt5Write10write_char17h8c711e2d8597d7f7E,__ZN4core3fmt5Write9write_fmt17h6b5f1c5c12287f92E,b15,b15,b15,b15,__ZN224__LT__LT_Box_LT_std__error__Error_u20__u2b__u20_Send_u20__u2b__u20_Sync_u20__u2b__u20__u27_static_GT__u20_as_u20_core__convert__From_LT_collections__string__String_GT__GT___from__StringError_u20_as_u20_core__fmt__Display_GT_3fmt17h5f85b4c6ed6dedc7E,__ZN222__LT__LT_Box_LT_std__error__Error_u20__u2b__u20_Send_u20__u2b__u20_Sync_u20__u2b__u20__u27_static_GT__u20_as_u20_core__convert__From_LT_collections__string__String_GT__GT___from__StringError_u20_as_u20_core__fmt__Debug_GT_3fmt17h1b6bb0842bab0d23E,__ZN53__LT__RF__u27_a_u20_T_u20_as_u20_core__fmt__Debug_GT_3fmt17h11e83aeca1debe31E_1336,b15,__ZN96__LT_core__fmt__Write__write_fmt__Adapter_LT__u27_a_C__u20_T_GT__u20_as_u20_core__fmt__Write_GT_10write_char17h7ac0dae9cc3780cdE,__ZN96__LT_core__fmt__Write__write_fmt__Adapter_LT__u27_a_C__u20_T_GT__u20_as_u20_core__fmt__Write_GT_9write_fmt17h72ce8e47fdce202eE,__ZN53__LT__RF__u27_a_u20_T_u20_as_u20_core__fmt__Debug_GT_3fmt17h1b7acfd18e094fa5E_1349,__ZN53__LT__RF__u27_a_u20_T_u20_as_u20_core__fmt__Debug_GT_3fmt17h44630bd8bc14edf4E,__ZN53__LT__RF__u27_a_u20_T_u20_as_u20_core__fmt__Debug_GT_3fmt17h8e81f4ddc79f6ebcE_1348
,b15,b15,b15,__ZN53__LT__RF__u27_a_u20_T_u20_as_u20_core__fmt__Debug_GT_3fmt17h49a4805fd32df691E,__ZN4core3fmt3num50__LT_impl_u20_core__fmt__Debug_u20_for_u20_i32_GT_3fmt17h28caa732ada26aebE,__ZN64__LT_collections__string__String_u20_as_u20_core__fmt__Debug_GT_3fmt17hb61789d73ad9da40E,b15,__ZN5alloc5boxed59__LT_impl_u20_core__fmt__Debug_u20_for_u20_Box_LT_T_GT__GT_3fmt17h82fd329a736f5f55E,__ZN53__LT__RF__u27_a_u20_T_u20_as_u20_core__fmt__Debug_GT_3fmt17h9f675d4c7b56c7bdE,__ZN53__LT__RF__u27_a_u20_T_u20_as_u20_core__fmt__Debug_GT_3fmt17hc3cfc3e08781268dE,b15,b15,b15,__ZN96__LT_core__fmt__Write__write_fmt__Adapter_LT__u27_a_C__u20_T_GT__u20_as_u20_core__fmt__Write_GT_10write_char17h5c4b02d4e359c914E_1496,__ZN96__LT_core__fmt__Write__write_fmt__Adapter_LT__u27_a_C__u20_T_GT__u20_as_u20_core__fmt__Write_GT_9write_fmt17h760aafe66d97fe8aE_1497,__ZN53__LT__RF__u27_a_u20_T_u20_as_u20_core__fmt__Debug_GT_3fmt17h44630bd8bc14edf4E_1521,__ZN53__LT__RF__u27_a_u20_T_u20_as_u20_core__fmt__Debug_GT_3fmt17h488ac20bd8e6e6fbE_1520,__ZN53__LT__RF__u27_a_u20_T_u20_as_u20_core__fmt__Debug_GT_3fmt17h8e81f4ddc79f6ebcE_1522,b15,b15,b15,__ZN4core3fmt5Write10write_char17h62ee0ac521ed0526E,__ZN4core3fmt5Write9write_fmt17hb43b50be59e46b89E,b15,__ZN96__LT_core__fmt__Write__write_fmt__Adapter_LT__u27_a_C__u20_T_GT__u20_as_u20_core__fmt__Write_GT_10write_char17h9d1aab5d1009a3d4E,__ZN96__LT_core__fmt__Write__write_fmt__Adapter_LT__u27_a_C__u20_T_GT__u20_as_u20_core__fmt__Write_GT_9write_fmt17h4b23cb1bd870b379E,__ZN53__LT__RF__u27_a_u20_T_u20_as_u20_core__fmt__Debug_GT_3fmt17h1b7acfd18e094fa5E_1769,__ZN53__LT__RF__u27_a_u20_T_u20_as_u20_core__fmt__Debug_GT_3fmt17h01efebbc916631cdE,b15,b15
,b15,b15,b15,b15,b15,b15,b15,__ZN75__LT_ncollide_utils__data__hash_map__HashMap_LT_K_C__u20_V_C__u20_H_GT__GT_13find_entry_id17hc8fb07c6c2c87be9E,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,__ZN53__LT__RF__u27_a_u20_T_u20_as_u20_core__fmt__Debug_GT_3fmt17h1b7acfd18e094fa5E,b15,b15,b15,b15,b15,__ZN4core3fmt3num54__LT_impl_u20_core__fmt__Display_u20_for_u20_usize_GT_3fmt17hfc58b44c96803197E,b15,b15,b15,__ZN55__LT__RF__u27_a_u20_T_u20_as_u20_core__fmt__Display_GT_3fmt17h0070a87612600aa5E
,__ZN60__LT_core__cell__BorrowError_u20_as_u20_core__fmt__Debug_GT_3fmt17h6b8f9fc0ba429a42E,__ZN63__LT_core__cell__BorrowMutError_u20_as_u20_core__fmt__Debug_GT_3fmt17h623bd4c3568308e5E,__ZN54__LT_pace_files__Error_u20_as_u20_core__fmt__Debug_GT_3fmt17hc43c03545dc8a637E,b15,b15,b15,__ZN84__LT_ncollide_utils__data__owned_allocation_cache__OwnedAllocationCache_LT_T_GT__GT_5alloc17he90abaa411e47d04E,b15,b15,b15,b15,b15,__ZN42__LT_f32_u20_as_u20_core__fmt__Display_GT_3fmt17ha49dec0dda622073E,b15,b15,__ZN49__LT_nphysics2d__world__world__World_LT_N_GT__GT_14add_rigid_body17hc27c29f3d7203e5dE,b15,b15,b15,__ZN66__LT_collections__string__String_u20_as_u20_core__fmt__Display_GT_3fmt17h3959eb99769eafdcE,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,__ZN55__LT__RF__u27_a_u20_T_u20_as_u20_core__fmt__Display_GT_3fmt17h0070a87612600aa5E_961,__ZN71__LT_collections__string__FromUtf8Error_u20_as_u20_core__fmt__Debug_GT_3fmt17h87a0465c1e168a01E,b15,b15,__ZN55__LT__RF__u27_a_u20_T_u20_as_u20_core__fmt__Display_GT_3fmt17h0070a87612600aa5E_970,__ZN62__LT_std__ffi__c_str__NulError_u20_as_u20_core__fmt__Debug_GT_3fmt17hcd6ce0f6662c92cbE,__ZN62__LT_ndarray__error__ErrorKind_u20_as_u20_core__fmt__Debug_GT_3fmt17h8596b1a3cef8180dE,__ZN55__LT__RF__u27_a_u20_T_u20_as_u20_core__fmt__Display_GT_3fmt17h0070a87612600aa5E_1236,b15,b15,b15,b15,b15,b15,b15,b15,__ZN55__LT__RF__u27_a_u20_T_u20_as_u20_core__fmt__Display_GT_3fmt17h0070a87612600aa5E_1338,__ZN58__LT_std__io__error__Error_u20_as_u20_core__fmt__Debug_GT_3fmt17hee0efa4b9cf5e125E,__ZN60__LT_std__io__error__Error_u20_as_u20_core__fmt__Display_GT_3fmt17hde27e5d3bf68e7f3E,__ZN66__LT_collections__string__String_u20_as_u20_core__fmt__Display_GT_3fmt17h3959eb99769eafdcE_1355,__ZN4core3fmt3num52__LT_impl_u20_core__fmt__Display_u20_for_u20_i32_GT_3fmt17h99aa46b1befc4e8fE,b15,b15,__ZN53__LT__RF__u27_a_u20_T_u20_as_u20_core__fmt__Debug_GT_3fmt17h2832f44509b22a34E,b15,b15,__ZN4core3fmt3num52__LT_impl_u20_core__fmt__Display_u20_for_u20_u32_GT_3fmt17haf8b7f22784644e7E,__ZN73__LT_core__fmt__Arguments_LT__u27_a_GT__u20_as_u20_core__fmt__Display_GT_3fmt17h5555d9ccb5548f2eE,__ZN3std3sys9backtrace7tracing3imp5write8trace_fn17hd817d220526b084cE
,__ZN4core3fmt3num54__LT_impl_u20_core__fmt__Display_u20_for_u20_isize_GT_3fmt17h85d31eb90618a5a7E,__ZN50__LT__BP_mut_u20_T_u20_as_u20_core__fmt__Debug_GT_3fmt17hae4db89a7e1cfcc4E,__ZN4core3fmt10ArgumentV110show_usize17h97077bc79b895d85E,__ZN61__LT_core__num__ParseIntError_u20_as_u20_core__fmt__Debug_GT_3fmt17he7023a72c6f7f73eE,__ZN53__LT__RF__u27_a_u20_T_u20_as_u20_core__fmt__Debug_GT_3fmt17ha72b0c565a535e76E,b15,b15,__ZN57__LT_core__str__Utf8Error_u20_as_u20_core__fmt__Debug_GT_3fmt17h922c7d2cf2c0992dE,b15,__ZN82__LT_std__sys_common__poison__PoisonError_LT_T_GT__u20_as_u20_core__fmt__Debug_GT_3fmt17h2df158105cf363dfE_1377,b15,__ZN55__LT__RF__u27_a_u20_T_u20_as_u20_core__fmt__Display_GT_3fmt17h0070a87612600aa5E_1670,__ZN53__LT__RF__u27_a_u20_T_u20_as_u20_core__fmt__Debug_GT_3fmt17h9f761411a03adf5aE,__ZN53__LT__RF__u27_a_u20_T_u20_as_u20_core__fmt__Debug_GT_3fmt17h13b7344db08713a1E_1615,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15];
var FUNCTION_TABLE_diiii = [b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,__ZN17ncollide_geometry5query14point_internal11point_plane207__LT_impl_u20_ncollide_geometry__query__point_internal__point_query__PointQuery_LT_P_C__u20_M_GT__u20_for_u20_ncollide_geometry__shape__plane__Plane_LT__LT_P_u20_as_u20_ncollide_math__Point_GT___Vect_GT__GT_17distance_to_point17hcda027f0dc732addE,b16,b16,b16
,b16,b16,b16,__ZN17ncollide_geometry5query14point_internal10point_ball254__LT_impl_u20_ncollide_geometry__query__point_internal__point_query__PointQuery_LT_P_C__u20_M_GT__u20_for_u20_ncollide_geometry__shape__ball__Ball_LT__LT__LT_P_u20_as_u20_ncollide_math__Point_GT___Vect_u20_as_u20_ncollide_math__Vector_GT___Scalar_GT__GT_17distance_to_point17h85ae21cd19af2b7bE,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16];
var FUNCTION_TABLE_viiidd = [b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,__ZN12physics_test8add_ball17h9cf94cccb50ca975E,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17];
var FUNCTION_TABLE_iiiiii = [b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,__ZN4core3fmt8builders11DebugStruct5field17hfad538a66c3eb971E,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18];

  return { _main: _main, _memset: _memset, _bitshift64Lshr: _bitshift64Lshr, _bitshift64Shl: _bitshift64Shl, _fflush: _fflush, _llvm_ctlz_i64: _llvm_ctlz_i64, _bitshift64Ashr: _bitshift64Ashr, _llvm_cttz_i32: _llvm_cttz_i32, _sbrk: _sbrk, _memcpy: _memcpy, ___muldi3: ___muldi3, ___uremdi3: ___uremdi3, _i64Subtract: _i64Subtract, ___udivmoddi4: ___udivmoddi4, _i64Add: _i64Add, _pthread_self: _pthread_self, _pthread_mutex_unlock: _pthread_mutex_unlock, ___udivdi3: ___udivdi3, ___errno_location: ___errno_location, ___muldsi3: ___muldsi3, _free: _free, _memmove: _memmove, _malloc: _malloc, _pthread_mutex_lock: _pthread_mutex_lock, runPostSets: runPostSets, stackAlloc: stackAlloc, stackSave: stackSave, stackRestore: stackRestore, establishStackSpace: establishStackSpace, setThrew: setThrew, setTempRet0: setTempRet0, getTempRet0: getTempRet0, dynCall_iiii: dynCall_iiii, dynCall_viiiiii: dynCall_viiiiii, dynCall_viiiii: dynCall_viiiii, dynCall_viiiiiii: dynCall_viiiiiii, dynCall_iiiiiiiiiid: dynCall_iiiiiiiiiid, dynCall_i: dynCall_i, dynCall_vi: dynCall_vi, dynCall_vii: dynCall_vii, dynCall_ii: dynCall_ii, dynCall_viiid: dynCall_viiid, dynCall_viii: dynCall_viii, dynCall_iidd: dynCall_iidd, dynCall_v: dynCall_v, dynCall_viiiiiiiii: dynCall_viiiiiiiii, dynCall_viiii: dynCall_viiii, dynCall_iii: dynCall_iii, dynCall_diiii: dynCall_diiii, dynCall_viiidd: dynCall_viiidd, dynCall_iiiiii: dynCall_iiiiii };
})
// EMSCRIPTEN_END_ASM
(Module.asmGlobalArg, Module.asmLibraryArg, buffer);

var real__main = asm["_main"]; asm["_main"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__main.apply(null, arguments);
};

var real__llvm_cttz_i32 = asm["_llvm_cttz_i32"]; asm["_llvm_cttz_i32"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__llvm_cttz_i32.apply(null, arguments);
};

var real__bitshift64Lshr = asm["_bitshift64Lshr"]; asm["_bitshift64Lshr"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__bitshift64Lshr.apply(null, arguments);
};

var real__bitshift64Shl = asm["_bitshift64Shl"]; asm["_bitshift64Shl"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__bitshift64Shl.apply(null, arguments);
};

var real__fflush = asm["_fflush"]; asm["_fflush"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__fflush.apply(null, arguments);
};

var real__llvm_ctlz_i64 = asm["_llvm_ctlz_i64"]; asm["_llvm_ctlz_i64"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__llvm_ctlz_i64.apply(null, arguments);
};

var real__bitshift64Ashr = asm["_bitshift64Ashr"]; asm["_bitshift64Ashr"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__bitshift64Ashr.apply(null, arguments);
};

var real__sbrk = asm["_sbrk"]; asm["_sbrk"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__sbrk.apply(null, arguments);
};

var real____muldi3 = asm["___muldi3"]; asm["___muldi3"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real____muldi3.apply(null, arguments);
};

var real____uremdi3 = asm["___uremdi3"]; asm["___uremdi3"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real____uremdi3.apply(null, arguments);
};

var real__i64Subtract = asm["_i64Subtract"]; asm["_i64Subtract"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__i64Subtract.apply(null, arguments);
};

var real____udivmoddi4 = asm["___udivmoddi4"]; asm["___udivmoddi4"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real____udivmoddi4.apply(null, arguments);
};

var real__i64Add = asm["_i64Add"]; asm["_i64Add"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__i64Add.apply(null, arguments);
};

var real__pthread_self = asm["_pthread_self"]; asm["_pthread_self"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__pthread_self.apply(null, arguments);
};

var real__pthread_mutex_unlock = asm["_pthread_mutex_unlock"]; asm["_pthread_mutex_unlock"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__pthread_mutex_unlock.apply(null, arguments);
};

var real____udivdi3 = asm["___udivdi3"]; asm["___udivdi3"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real____udivdi3.apply(null, arguments);
};

var real____errno_location = asm["___errno_location"]; asm["___errno_location"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real____errno_location.apply(null, arguments);
};

var real____muldsi3 = asm["___muldsi3"]; asm["___muldsi3"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real____muldsi3.apply(null, arguments);
};

var real__free = asm["_free"]; asm["_free"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__free.apply(null, arguments);
};

var real__memmove = asm["_memmove"]; asm["_memmove"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__memmove.apply(null, arguments);
};

var real__malloc = asm["_malloc"]; asm["_malloc"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__malloc.apply(null, arguments);
};

var real__pthread_mutex_lock = asm["_pthread_mutex_lock"]; asm["_pthread_mutex_lock"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__pthread_mutex_lock.apply(null, arguments);
};
var _main = Module["_main"] = asm["_main"];
var _llvm_cttz_i32 = Module["_llvm_cttz_i32"] = asm["_llvm_cttz_i32"];
var _bitshift64Lshr = Module["_bitshift64Lshr"] = asm["_bitshift64Lshr"];
var _bitshift64Shl = Module["_bitshift64Shl"] = asm["_bitshift64Shl"];
var _fflush = Module["_fflush"] = asm["_fflush"];
var _llvm_ctlz_i64 = Module["_llvm_ctlz_i64"] = asm["_llvm_ctlz_i64"];
var _bitshift64Ashr = Module["_bitshift64Ashr"] = asm["_bitshift64Ashr"];
var _memset = Module["_memset"] = asm["_memset"];
var _sbrk = Module["_sbrk"] = asm["_sbrk"];
var _memcpy = Module["_memcpy"] = asm["_memcpy"];
var ___muldi3 = Module["___muldi3"] = asm["___muldi3"];
var ___uremdi3 = Module["___uremdi3"] = asm["___uremdi3"];
var _i64Subtract = Module["_i64Subtract"] = asm["_i64Subtract"];
var ___udivmoddi4 = Module["___udivmoddi4"] = asm["___udivmoddi4"];
var _i64Add = Module["_i64Add"] = asm["_i64Add"];
var _pthread_self = Module["_pthread_self"] = asm["_pthread_self"];
var _pthread_mutex_unlock = Module["_pthread_mutex_unlock"] = asm["_pthread_mutex_unlock"];
var ___udivdi3 = Module["___udivdi3"] = asm["___udivdi3"];
var ___errno_location = Module["___errno_location"] = asm["___errno_location"];
var ___muldsi3 = Module["___muldsi3"] = asm["___muldsi3"];
var _free = Module["_free"] = asm["_free"];
var runPostSets = Module["runPostSets"] = asm["runPostSets"];
var _memmove = Module["_memmove"] = asm["_memmove"];
var _malloc = Module["_malloc"] = asm["_malloc"];
var _pthread_mutex_lock = Module["_pthread_mutex_lock"] = asm["_pthread_mutex_lock"];
var dynCall_iiii = Module["dynCall_iiii"] = asm["dynCall_iiii"];
var dynCall_viiiiii = Module["dynCall_viiiiii"] = asm["dynCall_viiiiii"];
var dynCall_viiiii = Module["dynCall_viiiii"] = asm["dynCall_viiiii"];
var dynCall_viiiiiii = Module["dynCall_viiiiiii"] = asm["dynCall_viiiiiii"];
var dynCall_iiiiiiiiiid = Module["dynCall_iiiiiiiiiid"] = asm["dynCall_iiiiiiiiiid"];
var dynCall_i = Module["dynCall_i"] = asm["dynCall_i"];
var dynCall_vi = Module["dynCall_vi"] = asm["dynCall_vi"];
var dynCall_vii = Module["dynCall_vii"] = asm["dynCall_vii"];
var dynCall_ii = Module["dynCall_ii"] = asm["dynCall_ii"];
var dynCall_viiid = Module["dynCall_viiid"] = asm["dynCall_viiid"];
var dynCall_viii = Module["dynCall_viii"] = asm["dynCall_viii"];
var dynCall_iidd = Module["dynCall_iidd"] = asm["dynCall_iidd"];
var dynCall_v = Module["dynCall_v"] = asm["dynCall_v"];
var dynCall_viiiiiiiii = Module["dynCall_viiiiiiiii"] = asm["dynCall_viiiiiiiii"];
var dynCall_viiii = Module["dynCall_viiii"] = asm["dynCall_viiii"];
var dynCall_iii = Module["dynCall_iii"] = asm["dynCall_iii"];
var dynCall_diiii = Module["dynCall_diiii"] = asm["dynCall_diiii"];
var dynCall_viiidd = Module["dynCall_viiidd"] = asm["dynCall_viiidd"];
var dynCall_iiiiii = Module["dynCall_iiiiii"] = asm["dynCall_iiiiii"];
;

Runtime.stackAlloc = asm['stackAlloc'];
Runtime.stackSave = asm['stackSave'];
Runtime.stackRestore = asm['stackRestore'];
Runtime.establishStackSpace = asm['establishStackSpace'];

Runtime.setTempRet0 = asm['setTempRet0'];
Runtime.getTempRet0 = asm['getTempRet0'];



// === Auto-generated postamble setup entry stuff ===





function ExitStatus(status) {
  this.name = "ExitStatus";
  this.message = "Program terminated with exit(" + status + ")";
  this.status = status;
};
ExitStatus.prototype = new Error();
ExitStatus.prototype.constructor = ExitStatus;

var initialStackTop;
var preloadStartTime = null;
var calledMain = false;

dependenciesFulfilled = function runCaller() {
  // If run has never been called, and we should call run (INVOKE_RUN is true, and Module.noInitialRun is not false)
  if (!Module['calledRun']) run();
  if (!Module['calledRun']) dependenciesFulfilled = runCaller; // try this again later, after new deps are fulfilled
}

Module['callMain'] = Module.callMain = function callMain(args) {
  assert(runDependencies == 0, 'cannot call main when async dependencies remain! (listen on __ATMAIN__)');
  assert(__ATPRERUN__.length == 0, 'cannot call main when preRun functions remain to be called');

  args = args || [];

  ensureInitRuntime();

  var argc = args.length+1;
  function pad() {
    for (var i = 0; i < 4-1; i++) {
      argv.push(0);
    }
  }
  var argv = [allocate(intArrayFromString(Module['thisProgram']), 'i8', ALLOC_NORMAL) ];
  pad();
  for (var i = 0; i < argc-1; i = i + 1) {
    argv.push(allocate(intArrayFromString(args[i]), 'i8', ALLOC_NORMAL));
    pad();
  }
  argv.push(0);
  argv = allocate(argv, 'i32', ALLOC_NORMAL);


  try {

    var ret = Module['_main'](argc, argv, 0);


    // if we're not running an evented main loop, it's time to exit
    exit(ret, /* implicit = */ true);
  }
  catch(e) {
    if (e instanceof ExitStatus) {
      // exit() throws this once it's done to make sure execution
      // has been stopped completely
      return;
    } else if (e == 'SimulateInfiniteLoop') {
      // running an evented main loop, don't immediately exit
      Module['noExitRuntime'] = true;
      return;
    } else {
      if (e && typeof e === 'object' && e.stack) Module.printErr('exception thrown: ' + [e, e.stack]);
      throw e;
    }
  } finally {
    calledMain = true;
  }
}




function run(args) {
  args = args || Module['arguments'];

  if (preloadStartTime === null) preloadStartTime = Date.now();

  if (runDependencies > 0) {
    Module.printErr('run() called, but dependencies remain, so not running');
    return;
  }

  writeStackCookie();

  preRun();

  if (runDependencies > 0) return; // a preRun added a dependency, run will be called later
  if (Module['calledRun']) return; // run may have just been called through dependencies being fulfilled just in this very frame

  function doRun() {
    if (Module['calledRun']) return; // run may have just been called while the async setStatus time below was happening
    Module['calledRun'] = true;

    if (ABORT) return;

    ensureInitRuntime();

    preMain();

    if (ENVIRONMENT_IS_WEB && preloadStartTime !== null) {
      Module.printErr('pre-main prep time: ' + (Date.now() - preloadStartTime) + ' ms');
    }

    if (Module['onRuntimeInitialized']) Module['onRuntimeInitialized']();

    if (Module['_main'] && shouldRunNow) Module['callMain'](args);

    postRun();
  }

  if (Module['setStatus']) {
    Module['setStatus']('Running...');
    setTimeout(function() {
      setTimeout(function() {
        Module['setStatus']('');
      }, 1);
      doRun();
    }, 1);
  } else {
    doRun();
  }
  checkStackCookie();
}
Module['run'] = Module.run = run;

function exit(status, implicit) {
  if (implicit && Module['noExitRuntime']) {
    Module.printErr('exit(' + status + ') implicitly called by end of main(), but noExitRuntime, so not exiting the runtime (you can use emscripten_force_exit, if you want to force a true shutdown)');
    return;
  }

  if (Module['noExitRuntime']) {
    Module.printErr('exit(' + status + ') called, but noExitRuntime, so halting execution but not exiting the runtime or preventing further async execution (you can use emscripten_force_exit, if you want to force a true shutdown)');
  } else {

    ABORT = true;
    EXITSTATUS = status;
    STACKTOP = initialStackTop;

    exitRuntime();

    if (Module['onExit']) Module['onExit'](status);
  }

  if (ENVIRONMENT_IS_NODE) {
    process['exit'](status);
  } else if (ENVIRONMENT_IS_SHELL && typeof quit === 'function') {
    quit(status);
  }
  // if we reach here, we must throw an exception to halt the current execution
  throw new ExitStatus(status);
}
Module['exit'] = Module.exit = exit;

var abortDecorators = [];

function abort(what) {
  if (what !== undefined) {
    Module.print(what);
    Module.printErr(what);
    what = JSON.stringify(what)
  } else {
    what = '';
  }

  ABORT = true;
  EXITSTATUS = 1;

  var extra = '';

  var output = 'abort(' + what + ') at ' + stackTrace() + extra;
  if (abortDecorators) {
    abortDecorators.forEach(function(decorator) {
      output = decorator(output, what);
    });
  }
  throw output;
}
Module['abort'] = Module.abort = abort;

// {{PRE_RUN_ADDITIONS}}

if (Module['preInit']) {
  if (typeof Module['preInit'] == 'function') Module['preInit'] = [Module['preInit']];
  while (Module['preInit'].length > 0) {
    Module['preInit'].pop()();
  }
}

// shouldRunNow refers to calling main(), not run().
var shouldRunNow = true;
if (Module['noInitialRun']) {
  shouldRunNow = false;
}


run();

// {{POST_RUN_ADDITIONS}}





// {{MODULE_ADDITIONS}}



